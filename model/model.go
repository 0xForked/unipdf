//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ec "bufio";_eff "bytes";_ee "encoding/binary";_eae "errors";_b "fmt";_dg "github.com/unidoc/unipdf/v3/common";_gb "github.com/unidoc/unipdf/v3/common/license";_de "github.com/unidoc/unipdf/v3/core";_aed "github.com/unidoc/unipdf/v3/core/security";_da "github.com/unidoc/unipdf/v3/core/security/crypt";_bf "github.com/unidoc/unipdf/v3/internal/cmap";_bdb "github.com/unidoc/unipdf/v3/internal/imageutil";_dgb "github.com/unidoc/unipdf/v3/internal/sampling";_ed "github.com/unidoc/unipdf/v3/internal/textencoding";_eba "github.com/unidoc/unipdf/v3/model/internal/fonts";_fd "github.com/unidoc/unipdf/v3/ps";_egb "github.com/unidoc/unitype";_dd "image";_c "image/color";_ "image/gif";_ "image/png";_ea "io";_g "io/ioutil";_ac "math";_eg "math/rand";_ef "os";_ae "regexp";_cb "sort";_fc "strconv";_fe "strings";_a "time";_eb "unicode";_bd "unicode/utf8";);func _dffe (_fddf _de .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_eabe :=NewPdfColorspaceSpecialSeparation ();if _gccag ,_aabdf :=_fddf .(*_de .PdfIndirectObject );_aabdf {_eabe ._ecedb =_gccag ;};_fddf =_de .TraceToDirectObject (_fddf );_baceb ,_gddba :=_fddf .(*_de .PdfObjectArray );if !_gddba {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _baceb .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fddf =_baceb .Get (0);_gbgg ,_gddba :=_fddf .(*_de .PdfObjectName );if !_gddba {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_gbgg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_fddf =_baceb .Get (1);_gbgg ,_gddba =_fddf .(*_de .PdfObjectName );if !_gddba {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_eabe .ColorantName =_gbgg ;_fddf =_baceb .Get (2);_acee ,_gdfc :=NewPdfColorspaceFromPdfObject (_fddf );if _gdfc !=nil {return nil ,_gdfc ;};_eabe .AlternateSpace =_acee ;_cffee ,_gdfc :=_bbfe (_baceb .Get (3));if _gdfc !=nil {return nil ,_gdfc ;};_eabe .TintTransform =_cffee ;return _eabe ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gffed *PdfPage )GetPageAsIndirectObject ()*_de .PdfIndirectObject {return _gffed ._debgbf };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gcab *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _de .PdfObject ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_gba :=NewPdfAction ();_dae :=&PdfActionThread {};_dae .PdfAction =_gba ;_gba .SetContext (_dae );return _dae ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _de .PdfObject ;H _de .PdfObject ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _de .PdfObject ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_efcbd :=PdfColorDeviceGray (grayVal );return &_efcbd ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_dbdgb DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_egf *PdfReader )loadAction (_cag _de .PdfObject )(*PdfAction ,error ){if _bcdf ,_fac :=_de .GetIndirect (_cag );_fac {_eaf ,_gagb :=_egf .newPdfActionFromIndirectObject (_bcdf );if _gagb !=nil {return nil ,_gagb ;};return _eaf ,nil ;}else if !_de .IsNullObject (_cag ){return nil ,_eae .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};func (_afg *PdfReader )newPdfActionSoundFromDict (_bacb *_de .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bacb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bacb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bacb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bacb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bacb .Get ("\u004d\u0069\u0078")},nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ffedg *PdfPageResources )GetPatternByName (keyName _de .PdfObjectName )(*PdfPattern ,bool ){if _ffedg .Pattern ==nil {return nil ,false ;};_dfdbc ,_gdeba :=_de .TraceToDirectObject (_ffedg .Pattern ).(*_de .PdfObjectDictionary );if !_gdeba {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffedg .Pattern );return nil ,false ;};if _gfgbd :=_dfdbc .Get (keyName );_gfgbd !=nil {_ffbcd ,_ededf :=_ffccb (_gfgbd );if _ededf !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_ededf );return nil ,false ;};return _ffbcd ,true ;};return nil ,false ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_de .PdfObject ;GetContainingPdfObject ()_de .PdfObject ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _de .PdfObject ;Popup *PdfAnnotationPopup ;CA _de .PdfObject ;RC _de .PdfObject ;CreationDate _de .PdfObject ;IRT _de .PdfObject ;Subj _de .PdfObject ;RT _de .PdfObject ;IT _de .PdfObject ;ExData _de .PdfObject ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gag *PdfAnnotation )GetContext ()PdfModel {if _gag ==nil {return nil ;};return _gag ._cab ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_de .PdfObjectArray ;Domain *_de .PdfObjectArray ;Function []PdfFunction ;Extend *_de .PdfObjectArray ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_fbdea *PdfPage )AddExtGState (name _de .PdfObjectName ,egs *_de .PdfObjectDictionary )error {if _fbdea .Resources ==nil {_fbdea .Resources =NewPdfPageResources ();};if _fbdea .Resources .ExtGState ==nil {_fbdea .Resources .ExtGState =_de .MakeDict ();};_acaf ,_baffbc :=_de .TraceToDirectObject (_fbdea .Resources .ExtGState ).(*_de .PdfObjectDictionary );if !_baffbc {_dg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_de .TraceToDirectObject (_fbdea .Resources .ExtGState ));return _eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acaf .Set (name ,egs );return nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_cd :=NewPdfAction ();_gca :=&PdfActionResetForm {};_gca .PdfAction =_cd ;_cd .SetContext (_gca );return _gca ;};func _cadd ()string {_begbg :=_gb .GetLicenseKey ();if len (_bbcb )> 0&&(_begbg .IsLicensed ()||_ccbga ){return _bbcb ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_badgd (),_begbg .TypeToString ());};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_edea :=NewPdfAnnotation ();_feag :=&PdfAnnotationLine {};_feag .PdfAnnotation =_edea ;_feag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edea .SetContext (_feag );return _feag ;};

// ToPdfObject converts date to a PDF string object.
func (_ccaag *PdfDate )ToPdfObject ()_de .PdfObject {_gfcbe :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ccaag ._cfdcf ,_ccaag ._ecga ,_ccaag ._bcae ,_ccaag ._adea ,_ccaag ._ggegg ,_ccaag ._gfcccd ,_ccaag ._dgfac ,_ccaag ._eccagf ,_ccaag ._affgb );return _de .MakeString (_gfcbe );};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dcfcc *PdfPage )GetContainingPdfObject ()_de .PdfObject {return _dcfcc ._debgbf };func _ffdf (_dagb _de .PdfObject )(map[_ed .CharCode ]float64 ,error ){if _dagb ==nil {return nil ,nil ;};_dcde ,_gede :=_de .GetArray (_dagb );if !_gede {return nil ,nil ;};_dafce :=map[_ed .CharCode ]float64 {};_gagbab :=_dcde .Len ();for _beaf :=0;_beaf < _gagbab -1;_beaf ++{_dfac :=_de .TraceToDirectObject (_dcde .Get (_beaf ));_bcbb ,_gaag :=_de .GetIntVal (_dfac );if !_gaag {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_beaf ,_dfac );};_beaf ++;if _beaf > _gagbab -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_dcde );};_gbbaf :=_de .TraceToDirectObject (_dcde .Get (_beaf ));switch _gbbaf .(type ){case *_de .PdfObjectArray :_egfd ,_ :=_de .GetArray (_gbbaf );if _eefea ,_agcbf :=_egfd .ToFloat64Array ();_agcbf ==nil {for _acece :=0;_acece < len (_eefea );_acece ++{_dafce [_ed .CharCode (_bcbb +_acece )]=_eefea [_acece ];};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_beaf ,_gbbaf );};case *_de .PdfObjectInteger :_cfgf ,_cgbc :=_de .GetIntVal (_gbbaf );if !_cgbc {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_beaf ,_gbbaf );};_beaf ++;if _beaf > _gagbab -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_dcde );};_egaab :=_dcde .Get (_beaf );_faefb ,_fcaf :=_de .GetNumberAsFloat (_egaab );if _fcaf !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_beaf ,_egaab );};for _bedaa :=_bcbb ;_bedaa <=_cfgf ;_bedaa ++{_dafce [_ed .CharCode (_bedaa )]=_faefb ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_beaf ,_gbbaf );};};return _dafce ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ffbce *PdfPageResources )GetXObjectImageByName (keyName _de .PdfObjectName )(*XObjectImage ,error ){_fcdc ,_bccab :=_ffbce .GetXObjectByName (keyName );if _fcdc ==nil {return nil ,nil ;};if _bccab !=XObjectTypeImage {return nil ,_eae .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_fefg ,_ggfeb :=NewXObjectImageFromStream (_fcdc );if _ggfeb !=nil {return nil ,_ggfeb ;};return _fefg ,nil ;};func (_cedce *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cedce ._bffa .GetCrypter ()!=nil &&!_cedce ._bffa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gccg :=_cedce ._bbad ;_fdfg :=_gccg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _fdfg ==nil {return nil ,nil ;};_gcaff ,_ :=_de .GetIndirect (_fdfg );_fdfg =_de .TraceToDirectObject (_fdfg );if _de .IsNullObject (_fdfg ){_dg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_eagce ,_ggdgd :=_de .GetDict (_fdfg );if !_ggdgd {_dg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_fdfg );_dg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_fdfg );};_dg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_dg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cedce ._agdga {_egdgg :=_cedce .traverseObjectData (_eagce );if _egdgg !=nil {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_egdgg );return nil ,_egdgg ;};};_aace ,_dbedf :=_cedce .newPdfAcroFormFromDict (_gcaff ,_eagce );if _dbedf !=nil {return nil ,_dbedf ;};return _aace ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bb *PdfActionGoToE )ToPdfObject ()_de .PdfObject {_bb .PdfAction .ToPdfObject ();_gde :=_bb ._daa ;_caa :=_gde .PdfObject .(*_de .PdfObjectDictionary );_caa .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoToE )));if _bb .F !=nil {_caa .Set ("\u0046",_bb .F .ToPdfObject ());};_caa .SetIfNotNil ("\u0044",_bb .D );_caa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bb .NewWindow );_caa .SetIfNotNil ("\u0054",_bb .T );return _gde ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ebgf :=NewPdfAnnotation ();_daceg :=&PdfAnnotationInk {};_daceg .PdfAnnotation =_ebgf ;_daceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebgf .SetContext (_daceg );return _daceg ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_abgd :=NewPdfAnnotation ();_feab :=&PdfAnnotationStrikeOut {};_feab .PdfAnnotation =_abgd ;_feab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abgd .SetContext (_feab );return _feab ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_afag *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_dbfg :=range pages {_dbfg =_dbfg .Duplicate ();_cgege (_dbfg );_afag ._debg =append (_afag ._debg ,_dbfg );};return ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bgcb *PdfPattern )GetContainingPdfObject ()_de .PdfObject {return _bgcb ._dddfb };

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ebeee :=&PdfOutline {_eddcd :_de .MakeIndirectObject (_de .MakeDict ())};_ebeee ._deec =_ebeee ;return _ebeee ;};func (_gfcbc *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_ecgge *PdfAcroForm )fill (_fdeb FieldValueProvider ,_cegfb FieldAppearanceGenerator )error {if _ecgge ==nil {return nil ;};_bcfb ,_ggga :=_fdeb .FieldValues ();if _ggga !=nil {return _ggga ;};for _ ,_cdbad :=range _ecgge .AllFields (){_afaca :=_cdbad .PartialName ();_bfgc ,_efbcb :=_bcfb [_afaca ];if !_efbcb {if _fdff ,_bcabf :=_cdbad .FullName ();_bcabf ==nil {_bfgc ,_efbcb =_bcfb [_fdff ];};};if !_efbcb {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_afaca );continue ;};if _gfdgf :=_dged (_cdbad ,_bfgc );_gfdgf !=nil {return _gfdgf ;};if _cegfb ==nil {continue ;};for _ ,_beag :=range _cdbad .Annotations {_ceba ,_faca :=_cegfb .GenerateAppearanceDict (_ecgge ,_cdbad ,_beag );if _faca !=nil {return _faca ;};_beag .AP =_ceba ;_beag .ToPdfObject ();};};return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_ecdaf *PdfFunctionType2 )ToPdfObject ()_de .PdfObject {_bbace :=_de .MakeDict ();_bbace .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (2));_gbbga :=&_de .PdfObjectArray {};for _ ,_fggcad :=range _ecdaf .Domain {_gbbga .Append (_de .MakeFloat (_fggcad ));};_bbace .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbbga );if _ecdaf .Range !=nil {_gafcd :=&_de .PdfObjectArray {};for _ ,_fbgba :=range _ecdaf .Range {_gafcd .Append (_de .MakeFloat (_fbgba ));};_bbace .Set ("\u0052\u0061\u006eg\u0065",_gafcd );};if _ecdaf .C0 !=nil {_dbgga :=&_de .PdfObjectArray {};for _ ,_fedf :=range _ecdaf .C0 {_dbgga .Append (_de .MakeFloat (_fedf ));};_bbace .Set ("\u0043\u0030",_dbgga );};if _ecdaf .C1 !=nil {_cefdc :=&_de .PdfObjectArray {};for _ ,_dggbf :=range _ecdaf .C1 {_cefdc .Append (_de .MakeFloat (_dggbf ));};_bbace .Set ("\u0043\u0031",_cefdc );};_bbace .Set ("\u004e",_de .MakeFloat (_ecdaf .N ));if _ecdaf ._gcgcaca !=nil {_ecdaf ._gcgcaca .PdfObject =_bbace ;return _ecdaf ._gcgcaca ;};return _bbace ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_egfbd :=map[rune ]int {};for _ ,_bfcf :=range text {_egfbd [_bfcf ]++;};return _egfbd ;};

// ToPdfObject implements interface PdfModel.
func (_ceca *PdfFilespec )ToPdfObject ()_de .PdfObject {_gcacg :=_ceca .getDict ();_gcacg .Clear ();_gcacg .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_gcacg .SetIfNotNil ("\u0046\u0053",_ceca .FS );_gcacg .SetIfNotNil ("\u0046",_ceca .F );_gcacg .SetIfNotNil ("\u0055\u0046",_ceca .UF );_gcacg .SetIfNotNil ("\u0044\u004f\u0053",_ceca .DOS );_gcacg .SetIfNotNil ("\u004d\u0061\u0063",_ceca .Mac );_gcacg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ceca .Unix );_gcacg .SetIfNotNil ("\u0049\u0044",_ceca .ID );_gcacg .SetIfNotNil ("\u0056",_ceca .V );_gcacg .SetIfNotNil ("\u0045\u0046",_ceca .EF );_gcacg .SetIfNotNil ("\u0052\u0046",_ceca .RF );_gcacg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ceca .Desc );_gcacg .SetIfNotNil ("\u0043\u0049",_ceca .CI );return _ceca ._dcfb ;};func (_cec *PdfAnnotationMarkup )appendToPdfDictionary (_dcd *_de .PdfObjectDictionary ){_dcd .SetIfNotNil ("\u0054",_cec .T );if _cec .Popup !=nil {_dcd .Set ("\u0050\u006f\u0070u\u0070",_cec .Popup .ToPdfObject ());};_dcd .SetIfNotNil ("\u0043\u0041",_cec .CA );_dcd .SetIfNotNil ("\u0052\u0043",_cec .RC );_dcd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cec .CreationDate );_dcd .SetIfNotNil ("\u0049\u0052\u0054",_cec .IRT );_dcd .SetIfNotNil ("\u0053\u0075\u0062\u006a",_cec .Subj );_dcd .SetIfNotNil ("\u0052\u0054",_cec .RT );_dcd .SetIfNotNil ("\u0049\u0054",_cec .IT );_dcd .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_cec .ExData );};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_gfe :=NewPdfAnnotation ();_cdbb :=&PdfAnnotationCircle {};_cdbb .PdfAnnotation =_gfe ;_cdbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfe .SetContext (_cdbb );return _cdbb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgfc *PdfColorspaceDeviceCMYK )ToPdfObject ()_de .PdfObject {return _de .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject returns the PDF representation of the function.
func (_dcbaf *PdfFunctionType4 )ToPdfObject ()_de .PdfObject {_cgag :=_dcbaf ._afgde ;if _cgag ==nil {_dcbaf ._afgde =&_de .PdfObjectStream {};_cgag =_dcbaf ._afgde ;};_gbbdc :=_de .MakeDict ();_gbbdc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (4));_egfaf :=&_de .PdfObjectArray {};for _ ,_ffdg :=range _dcbaf .Domain {_egfaf .Append (_de .MakeFloat (_ffdg ));};_gbbdc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egfaf );_dbbcdg :=&_de .PdfObjectArray {};for _ ,_bcge :=range _dcbaf .Range {_dbbcdg .Append (_de .MakeFloat (_bcge ));};_gbbdc .Set ("\u0052\u0061\u006eg\u0065",_dbbcdg );if _dcbaf ._ccdb ==nil &&_dcbaf .Program !=nil {_dcbaf ._ccdb =[]byte (_dcbaf .Program .String ());};_gbbdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_dcbaf ._ccdb ))));_cgag .Stream =_dcbaf ._ccdb ;_cgag .PdfObjectDictionary =_gbbdc ;return _cgag ;};func _afagg (_dfaa []byte )(_ggbgd ,_aecef string ,_dgfd error ){_dg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_dfaa ));_bdbce :=_dgdge .FindIndex (_dfaa );if _bdbce ==nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_de .ErrTypeError ;};_aabba :=_bdbce [1];_cbdbf :=_fe .Index (string (_dfaa [_aabba :]),_cbeaf );if _cbdbf < 0{_ggbgd =string (_dfaa [_aabba :]);return _ggbgd ,"",nil ;};_edgf :=_aabba +_cbdbf ;_ggbgd =string (_dfaa [_aabba :_edgf ]);_fgbg :=_edgf ;_cbdbf =_fe .Index (string (_dfaa [_fgbg :]),_ccgeg );if _cbdbf < 0{_dg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgfd );return "","",_de .ErrTypeError ;};_dgge :=_fgbg +_cbdbf ;_aecef =string (_dfaa [_fgbg :_dgge ]);return _ggbgd ,_aecef ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_ebbd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_cea *PdfReader )newPdfActionJavaScriptFromDict (_bgd *_de .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bgd .Get ("\u004a\u0053")},nil ;};type pdfCIDFontType0 struct{fontCommon ;_fcbgc *_de .PdfIndirectObject ;_cege _ed .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_de .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _de .PdfObject ;W _de .PdfObject ;DW2 _de .PdfObject ;W2 _de .PdfObject ;_dbec map[_ed .CharCode ]float64 ;_bdecf float64 ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dag :=NewPdfAnnotation ();_fecb :=&PdfAnnotationFileAttachment {};_fecb .PdfAnnotation =_dag ;_fecb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dag .SetContext (_fecb );return _fecb ;};

// A returns the value of the A component of the color.
func (_eccda *PdfColorLab )A ()float64 {return float64 (_eccda [1])};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_cdag *PdfReader )GetObjectNums ()[]int {return _cdag ._bffa .GetObjectNums ()};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gafe *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gafe .MediaBox !=nil {return _gafe .MediaBox ,nil ;};_bffbe :=_gafe .Parent ;for _bffbe !=nil {_ebfe ,_fcdea :=_de .GetDict (_bffbe );if !_fcdea {return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _fbbd :=_ebfe .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fbbd !=nil {_gdcd ,_eeecb :=_de .GetArray (_fbbd );if !_eeecb {return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_begfe ,_afeg :=NewPdfRectangle (*_gdcd );if _afeg !=nil {return nil ,_afeg ;};return _begfe ,nil ;};_bffbe =_ebfe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_eae .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fabd *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// Encoder returns the font's text encoder.
func (_ddafa pdfCIDFontType0 )Encoder ()_ed .TextEncoder {return _ddafa ._cege };func _gdddb (_daeffg *_de .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dgage :=PdfShadingType4 {};_dbac :=_daeffg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dbac ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gccff ,_gecgc :=_dbac .(*_de .PdfObjectInteger );if !_gecgc {_dg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbac );return nil ,_de .ErrTypeError ;};_dgage .BitsPerCoordinate =_gccff ;_dbac =_daeffg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dbac ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gccff ,_gecgc =_dbac .(*_de .PdfObjectInteger );if !_gecgc {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dbac );return nil ,_de .ErrTypeError ;};_dgage .BitsPerComponent =_gccff ;_dbac =_daeffg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dbac ==nil {_dg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_gccff ,_gecgc =_dbac .(*_de .PdfObjectInteger );if !_gecgc {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dbac );return nil ,_de .ErrTypeError ;};_dgage .BitsPerComponent =_gccff ;_dbac =_daeffg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dbac ==nil {_dg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ccfe ,_gecgc :=_dbac .(*_de .PdfObjectArray );if !_gecgc {_dg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbac );return nil ,_de .ErrTypeError ;};_dgage .Decode =_ccfe ;_dbac =_daeffg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dbac ==nil {_dg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_dgage .Function =[]PdfFunction {};if _eagbg ,_fceba :=_dbac .(*_de .PdfObjectArray );_fceba {for _ ,_egge :=range _eagbg .Elements (){_aafgc ,_eegdf :=_bbfe (_egge );if _eegdf !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eegdf );return nil ,_eegdf ;};_dgage .Function =append (_dgage .Function ,_aafgc );};}else {_fgga ,_caeac :=_bbfe (_dbac );if _caeac !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caeac );return nil ,_caeac ;};_dgage .Function =append (_dgage .Function ,_fgga );};return &_dgage ,nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;type pdfCIDFontType2 struct{fontCommon ;_aadd *_de .PdfIndirectObject ;_bcfc _ed .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_de .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _de .PdfObject ;W _de .PdfObject ;DW2 _de .PdfObject ;W2 _de .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _de .PdfObject ;_dddac map[_ed .CharCode ]float64 ;_dbdga float64 ;_efeg map[rune ]int ;};func _bbfe (_eecdd _de .PdfObject )(PdfFunction ,error ){_eecdd =_de .ResolveReference (_eecdd );if _ccea ,_ebfd :=_eecdd .(*_de .PdfObjectStream );_ebfd {_cddfa :=_ccea .PdfObjectDictionary ;_gfbcb ,_fcff :=_cddfa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_de .PdfObjectInteger );if !_fcff {_dg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_eae .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gfbcb ==0{return _egfg (_ccea );}else if *_gfbcb ==4{return _cbae (_ccea );}else {return nil ,_eae .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _aebbb ,_cdbdb :=_eecdd .(*_de .PdfIndirectObject );_cdbdb {_aceab ,_cegg :=_aebbb .PdfObject .(*_de .PdfObjectDictionary );if !_cegg {_dg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_eae .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ccgb ,_cegg :=_aceab .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_de .PdfObjectInteger );if !_cegg {_dg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_eae .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ccgb ==2{return _cffeb (_aebbb );}else if *_ccgb ==3{return _cfdae (_aebbb );}else {return nil ,_eae .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gfgg ,_egdf :=_eecdd .(*_de .PdfObjectDictionary );_egdf {_gacfb ,_ebgcd :=_gfgg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_de .PdfObjectInteger );if !_ebgcd {_dg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_eae .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gacfb ==2{return _cffeb (_gfgg );}else if *_gacfb ==3{return _cfdae (_gfgg );}else {return nil ,_eae .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_eecdd );return nil ,_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_agac *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_befc :=_dgb .NewReader (img .getBase ());_deag :=_bdb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_agac .AlternateSpace .GetNumComponents (),nil ,img ._abbgb ,nil );_fgdb :=_dgb .NewWriter (_deag );_cceg :=_ac .Pow (2,float64 (img .BitsPerComponent ))-1;_dg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_dg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_agac .TintTransform );_dggb :=_agac .AlternateSpace .DecodeArray ();var (_cgeba uint32 ;_egaa error ;);for {_cgeba ,_egaa =_befc .ReadSample ();if _egaa ==_ea .EOF {break ;};if _egaa !=nil {return img ,_egaa ;};_cegd :=float64 (_cgeba )/_cceg ;_baga ,_dacea :=_agac .TintTransform .Evaluate ([]float64 {_cegd });if _dacea !=nil {return img ,_dacea ;};for _adba ,_debea :=range _baga {_ceee :=_bdb .LinearInterpolate (_debea ,_dggb [_adba *2],_dggb [_adba *2+1],0,1);if _dacea =_fgdb .WriteSample (uint32 (_ceee *_cceg ));_dacea !=nil {return img ,_dacea ;};};};return _agac .AlternateSpace .ImageToRGB (_cecd (&_deag ));};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_ecaa :=&PdfPageResources {};_ecaa ._gfbgd =_de .MakeDict ();return _ecaa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cagfag *PdfShadingType4 )ToPdfObject ()_de .PdfObject {_cagfag .PdfShading .ToPdfObject ();_gdgda ,_ggada :=_cagfag .getShadingDict ();if _ggada !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cagfag .BitsPerCoordinate !=nil {_gdgda .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cagfag .BitsPerCoordinate );};if _cagfag .BitsPerComponent !=nil {_gdgda .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cagfag .BitsPerComponent );};if _cagfag .BitsPerFlag !=nil {_gdgda .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cagfag .BitsPerFlag );};if _cagfag .Decode !=nil {_gdgda .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cagfag .Decode );};if _cagfag .Function !=nil {if len (_cagfag .Function )==1{_gdgda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cagfag .Function [0].ToPdfObject ());}else {_gggfe :=_de .MakeArray ();for _ ,_dbeac :=range _cagfag .Function {_gggfe .Append (_dbeac .ToPdfObject ());};_gdgda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gggfe );};};return _cagfag ._bcfa ;};

// ToPdfObject converts the font to a PDF representation.
func (_gbbbb *pdfFontType0 )ToPdfObject ()_de .PdfObject {if _gbbbb ._cedg ==nil {_gbbbb ._cedg =&_de .PdfIndirectObject {};};_bfbeb :=_gbbbb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gbbbb ._cedg .PdfObject =_bfbeb ;if _gbbbb .Encoding !=nil {_bfbeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbbbb .Encoding );}else if _gbbbb ._fcbd !=nil {_bfbeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbbbb ._fcbd .ToPdfObject ());};if _gbbbb .DescendantFont !=nil {_bfbeb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_de .MakeArray (_gbbbb .DescendantFont .ToPdfObject ()));};return _gbbbb ._cedg ;};func (_fggb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _fggb ._ccbgb };func (_dcacg *XObjectImage )getParamsDict ()*_de .PdfObjectDictionary {_debef :=_de .MakeDict ();_debef .Set ("\u0057\u0069\u0064t\u0068",_de .MakeInteger (*_dcacg .Width ));_debef .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_de .MakeInteger (*_dcacg .Height ));_debef .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_de .MakeInteger (int64 (_dcacg .ColorSpace .GetNumComponents ())));_debef .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_de .MakeInteger (*_dcacg .BitsPerComponent ));return _debef ;};func (_ebcgg *pdfFontType0 )baseFields ()*fontCommon {return &_ebcgg .fontCommon };func _ecbg (_gbbab _de .PdfObject ,_edba *PdfReader )(*OutlineDest ,error ){_edcf ,_fbdbd :=_de .GetArray (_gbbab );if !_fbdbd {return nil ,_eae .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_ffdd :=_edcf .Len ();if _ffdd < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ffdd );};_ccdaf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_fadfg :=_edcf .Get (0);if _edec ,_ecacf :=_de .GetIndirect (_fadfg );_ecacf {if _ ,_befaa ,_bgffe :=_edba .PageFromIndirectObject (_edec );_bgffe ==nil {_ccdaf .Page =int64 (_befaa -1);}else {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_edec );};_ccdaf .PageObj =_edec ;}else if _ebca ,_fbbgd :=_de .GetIntVal (_fadfg );_fbbgd {if _ebca >=0&&_ebca < len (_edba .PageList ){_ccdaf .PageObj =_edba .PageList [_ebca ].GetPageAsIndirectObject ();}else {_dg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ebca );};_ccdaf .Page =int64 (_ebca );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_fadfg );};_cafag ,_fbdbd :=_de .GetNameVal (_edcf .Get (1));if !_fbdbd {_dg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_edcf .Get (1));return _ccdaf ,nil ;};switch _cafag {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ffdd > 2{_ccdaf .Y ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_edcf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ffdd > 2{_ccdaf .X ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_edcf .Get (2)));};case "\u0058\u0059\u005a":if _ffdd > 4{_ccdaf .X ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_edcf .Get (2)));_ccdaf .Y ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_edcf .Get (3)));_ccdaf .Zoom ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_edcf .Get (4)));};default:_cafag ="\u0046\u0069\u0074";};_ccdaf .Mode =_cafag ;return _ccdaf ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_fgc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_de .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_dbedg *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ebgg *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_aeee :=_dgb .NewReader (img .getBase ());_gbacg :=_bdb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bfda :=_dgb .NewWriter (_gbacg );_cgc :=_ac .Pow (2,float64 (img .BitsPerComponent ))-1;_fdcg :=make ([]uint32 ,3);var (_aebf error ;_ddgd ,_abbff ,_ceae ,_eggdd ,_fgfa ,_agcg float64 ;);for {_aebf =_aeee .ReadSamples (_fdcg );if _aebf ==_ea .EOF {break ;}else if _aebf !=nil {return img ,_aebf ;};_ddgd =float64 (_fdcg [0])/_cgc ;_abbff =float64 (_fdcg [1])/_cgc ;_ceae =float64 (_fdcg [2])/_cgc ;_eggdd =_ebgg .Matrix [0]*_ac .Pow (_ddgd ,_ebgg .Gamma [0])+_ebgg .Matrix [3]*_ac .Pow (_abbff ,_ebgg .Gamma [1])+_ebgg .Matrix [6]*_ac .Pow (_ceae ,_ebgg .Gamma [2]);_fgfa =_ebgg .Matrix [1]*_ac .Pow (_ddgd ,_ebgg .Gamma [0])+_ebgg .Matrix [4]*_ac .Pow (_abbff ,_ebgg .Gamma [1])+_ebgg .Matrix [7]*_ac .Pow (_ceae ,_ebgg .Gamma [2]);_agcg =_ebgg .Matrix [2]*_ac .Pow (_ddgd ,_ebgg .Gamma [0])+_ebgg .Matrix [5]*_ac .Pow (_abbff ,_ebgg .Gamma [1])+_ebgg .Matrix [8]*_ac .Pow (_ceae ,_ebgg .Gamma [2]);_ddgd =3.240479*_eggdd +-1.537150*_fgfa +-0.498535*_agcg ;_abbff =-0.969256*_eggdd +1.875992*_fgfa +0.041556*_agcg ;_ceae =0.055648*_eggdd +-0.204043*_fgfa +1.057311*_agcg ;_ddgd =_ac .Min (_ac .Max (_ddgd ,0),1.0);_abbff =_ac .Min (_ac .Max (_abbff ,0),1.0);_ceae =_ac .Min (_ac .Max (_ceae ,0),1.0);_fdcg [0]=uint32 (_ddgd *_cgc );_fdcg [1]=uint32 (_abbff *_cgc );_fdcg [2]=uint32 (_ceae *_cgc );if _aebf =_bfda .WriteSamples (_fdcg );_aebf !=nil {return img ,_aebf ;};};return _cecd (&_gbacg ),nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _de .PdfObject ;};func (_beeg *PdfReader )newPdfAnnotationMarkupFromDict (_dacb *_de .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_efac :=&PdfAnnotationMarkup {};if _ddgf :=_dacb .Get ("\u0054");_ddgf !=nil {_efac .T =_ddgf ;};if _egdb :=_dacb .Get ("\u0050\u006f\u0070u\u0070");_egdb !=nil {_gdeb ,_cfbd :=_egdb .(*_de .PdfIndirectObject );if !_cfbd {if _ ,_ecg :=_egdb .(*_de .PdfObjectNull );!_ecg {return nil ,_eae .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_fega ,_gbda :=_beeg .newPdfAnnotationFromIndirectObject (_gdeb );if _gbda !=nil {return nil ,_gbda ;};if _fega !=nil {_dcgf ,_ebf :=_fega ._cab .(*PdfAnnotationPopup );if !_ebf {return nil ,_eae .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_efac .Popup =_dcgf ;};};};if _afcf :=_dacb .Get ("\u0043\u0041");_afcf !=nil {_efac .CA =_afcf ;};if _bdc :=_dacb .Get ("\u0052\u0043");_bdc !=nil {_efac .RC =_bdc ;};if _ecb :=_dacb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_ecb !=nil {_efac .CreationDate =_ecb ;};if _ebc :=_dacb .Get ("\u0049\u0052\u0054");_ebc !=nil {_efac .IRT =_ebc ;};if _cbf :=_dacb .Get ("\u0053\u0075\u0062\u006a");_cbf !=nil {_efac .Subj =_cbf ;};if _afdec :=_dacb .Get ("\u0052\u0054");_afdec !=nil {_efac .RT =_afdec ;};if _geeg :=_dacb .Get ("\u0049\u0054");_geeg !=nil {_efac .IT =_geeg ;};if _addg :=_dacb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_addg !=nil {_efac .ExData =_addg ;};return _efac ,nil ;};func _becf (_dcece *_de .PdfObjectDictionary ,_ecdb *fontCommon ,_ffae _ed .TextEncoder )(*pdfFontSimple ,error ){_bedf :=_dbgeb (_ecdb );_bedf ._ffdc =_ffae ;if _ffae ==nil {_gggfba :=_dcece .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gggfba ==nil {_gggfba =_de .MakeInteger (0);};_bedf .FirstChar =_gggfba ;_dfff ,_befcg :=_de .GetIntVal (_gggfba );if !_befcg {_dg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gggfba );return nil ,_de .ErrTypeError ;};_ffgb :=_ed .CharCode (_dfff );_gggfba =_dcece .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gggfba ==nil {_gggfba =_de .MakeInteger (255);};_bedf .LastChar =_gggfba ;_dfff ,_befcg =_de .GetIntVal (_gggfba );if !_befcg {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gggfba );return nil ,_de .ErrTypeError ;};_aaagf :=_ed .CharCode (_dfff );_bedf ._dcgfb =make (map[_ed .CharCode ]float64 );_gggfba =_dcece .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gggfba !=nil {_bedf .Widths =_gggfba ;_ceecf ,_eeafg :=_de .GetArray (_gggfba );if !_eeafg {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gggfba );return nil ,_de .ErrTypeError ;};_gaecb ,_agbdb :=_ceecf .ToFloat64Array ();if _agbdb !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_agbdb ;};if len (_gaecb )!=int (_aaagf -_ffgb +1){_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_aaagf -_ffgb +1,len (_gaecb ));return nil ,_de .ErrRangeError ;};for _efcg ,_aeae :=range _gaecb {_bedf ._dcgfb [_ffgb +_ed .CharCode (_efcg )]=_aeae ;};};};_bedf .Encoding =_de .TraceToDirectObject (_dcece .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bedf ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_febgf *PdfFont )SubsetRegistered ()error {switch _bdef :=_febgf ._fgef .(type ){case *pdfFontType0 :_bcbd :=_bdef .subsetRegistered ();if _bcbd !=nil {_dg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bcbd );return _bcbd ;};if _bdef ._cedg !=nil {if _bdef ._fcbd !=nil {_bdef ._fcbd .ToPdfObject ();};_bdef .ToPdfObject ();};default:_dg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bdef );};return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;IC _de .PdfObject ;RO _de .PdfObject ;OverlayText _de .PdfObject ;Repeat _de .PdfObject ;DA _de .PdfObject ;Q _de .PdfObject ;};var _bgdgc ="";

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_ddced *PdfColorspaceLab )DecodeArray ()[]float64 {_ggaa :=[]float64 {0,100};if _ddced .Range !=nil &&len (_ddced .Range )==4{_ggaa =append (_ggaa ,_ddced .Range ...);}else {_ggaa =append (_ggaa ,-100,100,-100,100);};return _ggaa ;};

// A returns the value of the A component of the color.
func (_cbfg *PdfColorCalRGB )A ()float64 {return float64 (_cbfg [0])};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_afd :=NewPdfAnnotation ();_egdc :=&PdfAnnotationWatermark {};_egdc .PdfAnnotation =_afd ;_afd .SetContext (_egdc );return _egdc ;};var _gcabb _a .Time ;func (_bdea *pdfFontType0 )subsetRegistered ()error {_gadee ,_bfdd :=_bdea .DescendantFont ._fgef .(*pdfCIDFontType2 );if !_bfdd {_dg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bdea .DescendantFont );return nil ;};if _gadee ==nil {return nil ;};if _gadee ._ccbgb ==nil {_dg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bdea ._fcbd ==nil {_dg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_cdegf ,_bfdd :=_de .GetStream (_gadee ._ccbgb .FontFile2 );if !_bfdd {_dg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _eae .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gddbaa ,_fcdae :=_de .DecodeStream (_cdegf );if _fcdae !=nil {_dg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fcdae );return _fcdae ;};_ecgca ,_fcdae :=_egb .Parse (_eff .NewReader (_gddbaa ));if _fcdae !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cdegf .Stream ));return _fcdae ;};var _edadf []rune ;var _fece *_egb .Font ;switch _fcgc :=_bdea ._fcbd .(type ){case *_ed .TrueTypeFontEncoder :_edadf =_fcgc .RegisteredRunes ();_fece ,_fcdae =_ecgca .SubsetKeepRunes (_edadf );if _fcdae !=nil {_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdae );return _fcdae ;};_fcgc .SubsetRegistered ();case *_ed .IdentityEncoder :_edadf =_fcgc .RegisteredRunes ();_cefaa :=make ([]_egb .GlyphIndex ,len (_edadf ));for _bfgb ,_gage :=range _edadf {_cefaa [_bfgb ]=_egb .GlyphIndex (_gage );};_fece ,_fcdae =_ecgca .SubsetKeepIndices (_cefaa );if _fcdae !=nil {_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdae );return _fcdae ;};case _ed .SimpleEncoder :_fdgcd :=_fcgc .Charcodes ();for _ ,_ffacf :=range _fdgcd {_fcegcf ,_ddbe :=_fcgc .CharcodeToRune (_ffacf );if !_ddbe {_dg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ffacf );continue ;};_edadf =append (_edadf ,_fcegcf );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bdea ._fcbd );};var _gadf _eff .Buffer ;_fcdae =_fece .Write (&_gadf );if _fcdae !=nil {_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdae );return _fcdae ;};if _bdea ._cddfb !=nil {_egce :=make (map[_bf .CharCode ]rune ,len (_edadf ));for _ ,_fggcc :=range _edadf {_ecfae ,_dgcbb :=_bdea ._fcbd .RuneToCharcode (_fggcc );if !_dgcbb {continue ;};_egce [_bf .CharCode (_ecfae )]=_fggcc ;};_bdea ._cddfb =_bf .NewToUnicodeCMap (_egce );};_cdegf ,_fcdae =_de .MakeStream (_gadf .Bytes (),_de .NewFlateEncoder ());if _fcdae !=nil {_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdae );return _fcdae ;};_cdegf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_de .MakeInteger (int64 (_gadf .Len ())));if _eaced ,_abfd :=_de .GetStream (_gadee ._ccbgb .FontFile2 );_abfd {*_eaced =*_cdegf ;}else {_gadee ._ccbgb .FontFile2 =_cdegf ;};_acgf :=_ddcg ();if len (_bdea ._fbaf )> 0{_bdea ._fbaf =_adbae (_bdea ._fbaf ,_acgf );};if len (_gadee ._fbaf )> 0{_gadee ._fbaf =_adbae (_gadee ._fbaf ,_acgf );};if len (_bdea ._caaf )> 0{_bdea ._caaf =_adbae (_bdea ._caaf ,_acgf );};if _gadee ._ccbgb !=nil {_caegc ,_ccdc :=_de .GetName (_gadee ._ccbgb .FontName );if _ccdc &&len (_caegc .String ())> 0{_eada :=_adbae (_caegc .String (),_acgf );_gadee ._ccbgb .FontName =_de .MakeName (_eada );};};return nil ;};func (_dfae *PdfReader )newPdfAnnotationSoundFromDict (_gfcd *_de .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fcc :=PdfAnnotationSound {};_eagd ,_edde :=_dfae .newPdfAnnotationMarkupFromDict (_gfcd );if _edde !=nil {return nil ,_edde ;};_fcc .PdfAnnotationMarkup =_eagd ;_fcc .Name =_gfcd .Get ("\u004e\u0061\u006d\u0065");_fcc .Sound =_gfcd .Get ("\u0053\u006f\u0075n\u0064");return &_fcc ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eaec *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_eae .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_de .PdfObjectDictionary )(*PdfPageResources ,error ){_bbfff :=NewPdfPageResources ();if _gadge :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gadge !=nil {_bbfff .ExtGState =_gadge ;};if _ccgcf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_ccgcf !=nil &&!_de .IsNullObject (_ccgcf ){_bbfff .ColorSpace =_ccgcf ;};if _gdda :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gdda !=nil {_bbfff .Pattern =_gdda ;};if _bbge :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_bbge !=nil {_bbfff .Shading =_bbge ;};if _gbgcg :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_gbgcg !=nil {_bbfff .XObject =_gbgcg ;};if _dddgd :=_de .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dddgd !=nil {_bbfff .Font =_dddgd ;};if _gdcc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_gdcc !=nil {_bbfff .ProcSet =_gdcc ;};if _cgbd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cgbd !=nil {_bbfff .Properties =_cgbd ;};return _bbfff ,nil ;};func _fcfe (_aged *_de .PdfObjectDictionary ,_gacff *fontCommon )(*pdfCIDFontType0 ,error ){if _gacff ._dgbc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gacff );return nil ,_de .ErrRangeError ;};_abeff :=_adbcd (_gacff );_cdgfa ,_aaba :=_de .GetDict (_aged .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aaba {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gacff );return nil ,ErrRequiredAttributeMissing ;};_abeff .CIDSystemInfo =_cdgfa ;_abeff .DW =_aged .Get ("\u0044\u0057");_abeff .W =_aged .Get ("\u0057");_abeff .DW2 =_aged .Get ("\u0044\u0057\u0032");_abeff .W2 =_aged .Get ("\u0057\u0032");_abeff ._bdecf =1000.0;if _bafaab ,_agebg :=_de .GetNumberAsFloat (_abeff .DW );_agebg ==nil {_abeff ._bdecf =_bafaab ;};_cegaf ,_dagce :=_ffdf (_abeff .W );if _dagce !=nil {return nil ,_dagce ;};if _cegaf ==nil {_cegaf =map[_ed .CharCode ]float64 {};};_abeff ._dbec =_cegaf ;return _abeff ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_accbc *PdfField )IsTerminal ()bool {return len (_accbc .Kids )==0};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_de .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_de .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_de .PdfObjectBool ;_afddf PdfModel ;_bcfa _de .PdfObject ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_ggcgec *Image )SetSamples (samples []uint32 ){if _ggcgec .BitsPerComponent < 8{samples =_ggcgec .samplesAddPadding (samples );};_dcddb :=_dgb .ResampleUint32 (samples ,int (_ggcgec .BitsPerComponent ),8);_agbed :=make ([]byte ,len (_dcddb ));for _eagg ,_ddcgc :=range _dcddb {_agbed [_eagg ]=byte (_ddcgc );};_ggcgec .Data =_agbed ;};var _bbcb ="";

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_acbga :=&XObjectImage {};_bcfge :=&_de .PdfObjectStream {};_bcfge .PdfObjectDictionary =_de .MakeDict ();_acbga ._cccf =_bcfge ;return _acbga ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_acce :=NewPdfAnnotation ();_afa :=&PdfAnnotationScreen {};_afa .PdfAnnotation =_acce ;_acce .SetContext (_afa );return _afa ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func (_aebd *PdfReader )newPdfAnnotationPolyLineFromDict (_dfe *_de .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_aea :=PdfAnnotationPolyLine {};_aab ,_gdgg :=_aebd .newPdfAnnotationMarkupFromDict (_dfe );if _gdgg !=nil {return nil ,_gdgg ;};_aea .PdfAnnotationMarkup =_aab ;_aea .Vertices =_dfe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_aea .LE =_dfe .Get ("\u004c\u0045");_aea .BS =_dfe .Get ("\u0042\u0053");_aea .IC =_dfe .Get ("\u0049\u0043");_aea .BE =_dfe .Get ("\u0042\u0045");_aea .IT =_dfe .Get ("\u0049\u0054");_aea .Measure =_dfe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_aea ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gdag *PdfPageResources )HasFontByName (keyName _de .PdfObjectName )bool {_ ,_cbbag :=_gdag .GetFontByName (keyName );return _cbbag ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_afcfg *PdfAppender )UpdatePage (page *PdfPage ){_afcfg .updateObjectsDeep (page .ToPdfObject (),nil );};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_cfbgg *PdfColorspaceDeviceN )ToPdfObject ()_de .PdfObject {_eeac :=_de .MakeArray (_de .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_eeac .Append (_cfbgg .ColorantNames );_eeac .Append (_cfbgg .AlternateSpace .ToPdfObject ());_eeac .Append (_cfbgg .TintTransform .ToPdfObject ());if _cfbgg .Attributes !=nil {_eeac .Append (_cfbgg .Attributes .ToPdfObject ());};if _cfbgg ._cddfg !=nil {_cfbgg ._cddfg .PdfObject =_eeac ;return _cfbgg ._cddfg ;};return _eeac ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _de .PdfObject ;MK _de .PdfObject ;A _de .PdfObject ;AA _de .PdfObject ;BS _de .PdfObject ;Parent _de .PdfObject ;_bgf *PdfField ;_fbg bool ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cbca =author };

// B returns the value of the B component of the color.
func (_adbca *PdfColorLab )B ()float64 {return float64 (_adbca [2])};func (_cdbde *pdfFontSimple )baseFields ()*fontCommon {return &_cdbde .fontCommon };func (_afaac *PdfReader )newPdfAnnotationWatermarkFromDict (_fgg *_de .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cfad :=PdfAnnotationWatermark {};_cfad .FixedPrint =_fgg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_cfad ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _de .PdfObject ;FS _de .PdfObject ;F _de .PdfObject ;UF _de .PdfObject ;DOS _de .PdfObject ;Mac _de .PdfObject ;Unix _de .PdfObject ;ID _de .PdfObject ;V _de .PdfObject ;EF _de .PdfObject ;RF _de .PdfObject ;Desc _de .PdfObject ;CI _de .PdfObject ;_dcfb _de .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_ceab *OutlineItem )ToPdfObject ()_de .PdfObject {_fcfbg ,_ :=_ceab .ToPdfOutlineItem ();return _fcfbg .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_bae *PdfAnnotationSound )ToPdfObject ()_de .PdfObject {_bae .PdfAnnotation .ToPdfObject ();_bade :=_bae ._egag ;_cdedb :=_bade .PdfObject .(*_de .PdfObjectDictionary );_bae .PdfAnnotationMarkup .appendToPdfDictionary (_cdedb );_cdedb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u006f\u0075n\u0064"));_cdedb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bae .Sound );_cdedb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bae .Name );return _bade ;};

// G returns the value of the green component of the color.
func (_eee *PdfColorDeviceRGB )G ()float64 {return float64 (_eee [1])};func (_eeba *PdfReader )newPdfAnnotationFreeTextFromDict (_gga *_de .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_gbdg :=PdfAnnotationFreeText {};_fbaa ,_dbc :=_eeba .newPdfAnnotationMarkupFromDict (_gga );if _dbc !=nil {return nil ,_dbc ;};_gbdg .PdfAnnotationMarkup =_fbaa ;_gbdg .DA =_gga .Get ("\u0044\u0041");_gbdg .Q =_gga .Get ("\u0051");_gbdg .RC =_gga .Get ("\u0052\u0043");_gbdg .DS =_gga .Get ("\u0044\u0053");_gbdg .CL =_gga .Get ("\u0043\u004c");_gbdg .IT =_gga .Get ("\u0049\u0054");_gbdg .BE =_gga .Get ("\u0042\u0045");_gbdg .RD =_gga .Get ("\u0052\u0044");_gbdg .BS =_gga .Get ("\u0042\u0053");_gbdg .LE =_gga .Get ("\u004c\u0045");return &_gbdg ,nil ;};func _bcggb (_aebbc _de .PdfObject ){_dg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_aebbc ,_aebbc .String ());if _egeggb ,_gabb :=_aebbc .(*_de .PdfObjectStream );_gabb {_dcdcg ,_eccad :=_de .DecodeStream (_egeggb );if _eccad !=nil {_dg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_eccad );return ;};_dg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dcdcg );}else if _ggba ,_aegbe :=_aebbc .(*_de .PdfIndirectObject );_aegbe {_dg .Log .Debug ("\u0025\u0054\u0020%\u0076",_ggba .PdfObject ,_ggba .PdfObject );_dg .Log .Debug ("\u0025\u0073",_ggba .PdfObject .String ());};};func _cefef ()string {return _cafaf };

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_cefad *PdfFont )CharcodesToStrings (charcodes []_ed .CharCode )([]string ,int ,int ){_afbg :=_cefad .baseFields ();_agga :=make ([]string ,0,len (charcodes ));_fdaf :=0;for _ ,_dcfbc :=range charcodes {if _afbg ._cddfb !=nil {if _aaeg ,_fbdb :=_afbg ._cddfb .CharcodeToUnicode (_bf .CharCode (_dcfbc ));_fbdb {_agga =append (_agga ,_aaeg );continue ;};};_bffb :=_cefad .Encoder ();if _bffb !=nil {if _gcbf ,_acecc :=_bffb .CharcodeToRune (_dcfbc );_acecc {_agga =append (_agga ,string (_gcbf ));continue ;};};_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dcfbc ,charcodes ,_afbg .isCIDFont (),_cefad ,_bffb );_fdaf ++;_agga =append (_agga ,_bf .MissingCodeString );};if _fdaf !=0{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fdaf ,_cefad );};return _agga ,len (_agga ),_fdaf ;};func _cgab (_eacdaf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_eacdaf }};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_cdaa *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_agef :=_cdaa .actualFont ();if _agef ==nil {_dg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cdaa ._fgef );return _eba .CharMetrics {},false ;};if _agcga ,_bgee :=_agef .GetRuneMetrics (r );_bgee {return _agcga ,true ;};if _geace ,_bbcfg :=_cdaa .GetFontDescriptor ();_bbcfg ==nil &&_geace !=nil {return _eba .CharMetrics {Wx :_geace ._cccgg },true ;};_dg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdaa );return _eba .CharMetrics {},false ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _de .PdfObject ;Sy _de .PdfObject ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_eagb *PdfPageResources )ToPdfObject ()_de .PdfObject {_acba :=_eagb ._gfbgd ;_acba .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eagb .ExtGState );if _eagb ._dcgdc !=nil {_eagb .ColorSpace =_eagb ._dcgdc .ToPdfObject ();};_acba .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eagb .ColorSpace );_acba .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_eagb .Pattern );_acba .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eagb .Shading );_acba .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_eagb .XObject );_acba .SetIfNotNil ("\u0046\u006f\u006e\u0074",_eagb .Font );_acba .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_eagb .ProcSet );_acba .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_eagb .Properties );return _acba ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject implements interface PdfModel.
func (_ad *PdfActionURI )ToPdfObject ()_de .PdfObject {_ad .PdfAction .ToPdfObject ();_fcgd :=_ad ._daa ;_bcg :=_fcgd .PdfObject .(*_de .PdfObjectDictionary );_bcg .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeURI )));_bcg .SetIfNotNil ("\u0055\u0052\u0049",_ad .URI );_bcg .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ad .IsMap );return _fcgd ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gadd :=PdfWriter {};_gadd ._ggafd =map[_de .PdfObject ]struct{}{};_gadd ._fcgg =[]_de .PdfObject {};_gadd ._gaee =map[_de .PdfObject ][]*_de .PdfObjectDictionary {};_gadd ._bdbe =map[_de .PdfObject ]struct{}{};_gadd ._dccff =1;_gadd ._edafd =3;_dcace :=_de .MakeDict ();_cadcb :=[]struct{_babad _de .PdfObjectName ;_bbeea string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cadd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cgacc ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_acfa ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_dcgg ()},{"\u0054\u0069\u0074l\u0065",_cefef ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_aadff ()}};for _ ,_gcgfb :=range _cadcb {if _gcgfb ._bbeea !=""{_dcace .Set (_gcgfb ._babad ,_de .MakeString (_gcgfb ._bbeea ));};};if _ebeaa :=_gabge ();!_ebeaa .IsZero (){if _ccggc ,_dfcfc :=NewPdfDateFromTime (_ebeaa );_dfcfc ==nil {_dcace .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccggc .ToPdfObject ());};};if _eaed :=_bfac ();!_eaed .IsZero (){if _dedce ,_bece :=NewPdfDateFromTime (_eaed );_bece ==nil {_dcace .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_dedce .ToPdfObject ());};};_aegba :=_de .PdfIndirectObject {};_aegba .PdfObject =_dcace ;_gadd ._gccea =&_aegba ;_gadd .addObject (&_aegba );_aggac :=_de .PdfIndirectObject {};_egdbf :=_de .MakeDict ();_egdbf .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_aggac .PdfObject =_egdbf ;_gadd ._abbfa =&_aggac ;_gadd .addObject (_gadd ._abbfa );_gfgc :=_de .PdfIndirectObject {};_abeag :=_de .MakeDict ();_abeag .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050\u0061\u0067e\u0073"));_beggf :=_de .PdfObjectArray {};_abeag .Set ("\u004b\u0069\u0064\u0073",&_beggf );_abeag .Set ("\u0043\u006f\u0075n\u0074",_de .MakeInteger (0));_gfgc .PdfObject =_abeag ;_gadd ._gbadc =&_gfgc ;_gadd ._dbegc =map[_de .PdfObject ]struct{}{};_gadd .addObject (_gadd ._gbadc );_egdbf .Set ("\u0050\u0061\u0067e\u0073",&_gfgc );_gadd ._acdea =_egdbf ;_dg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_aggac );return _gadd ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cdf :=NewPdfAction ();_fbf :=&PdfActionSetOCGState {};_fbf .PdfAction =_cdf ;_cdf .SetContext (_fbf );return _fbf ;};func _cfdae (_cbag _de .PdfObject )(*PdfFunctionType3 ,error ){_edee :=&PdfFunctionType3 {};var _caaaga *_de .PdfObjectDictionary ;if _aaeb ,_egaaf :=_cbag .(*_de .PdfIndirectObject );_egaaf {_fcga ,_dfeaa :=_aaeb .PdfObject .(*_de .PdfObjectDictionary );if !_dfeaa {return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edee ._fgfdb =_aaeb ;_caaaga =_fcga ;}else if _fffcf ,_gcaa :=_cbag .(*_de .PdfObjectDictionary );_gcaa {_caaaga =_fffcf ;}else {return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_feca ,_ddaada :=_de .TraceToDirectObject (_caaaga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_ddaada {_dg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _feca .Len ()!=2{_dg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_eae .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gcdd ,_agfge :=_feca .ToFloat64Array ();if _agfge !=nil {return nil ,_agfge ;};_edee .Domain =_gcdd ;_feca ,_ddaada =_de .TraceToDirectObject (_caaaga .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if _ddaada {if _feca .Len ()< 0||_feca .Len ()%2!=0{return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_caef ,_cedb :=_feca .ToFloat64Array ();if _cedb !=nil {return nil ,_cedb ;};_edee .Range =_caef ;};_feca ,_ddaada =_de .TraceToDirectObject (_caaaga .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_de .PdfObjectArray );if !_ddaada {_dg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_edee .Functions =[]PdfFunction {};for _ ,_dbcc :=range _feca .Elements (){_dbee ,_dbaa :=_bbfe (_dbcc );if _dbaa !=nil {return nil ,_dbaa ;};_edee .Functions =append (_edee .Functions ,_dbee );};_feca ,_ddaada =_de .TraceToDirectObject (_caaaga .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_de .PdfObjectArray );if !_ddaada {_dg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_babc ,_agfge :=_feca .ToFloat64Array ();if _agfge !=nil {return nil ,_agfge ;};_edee .Bounds =_babc ;if len (_edee .Bounds )!=len (_edee .Functions )-1{_dg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_edee .Bounds ),len (_edee .Functions ));return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feca ,_ddaada =_de .TraceToDirectObject (_caaaga .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_de .PdfObjectArray );if !_ddaada {_dg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ccbae ,_agfge :=_feca .ToFloat64Array ();if _agfge !=nil {return nil ,_agfge ;};_edee .Encode =_ccbae ;if len (_edee .Encode )!=2*len (_edee .Functions ){_dg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_edee .Encode ),len (_edee .Functions ));return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _edee ,nil ;};

// ReplacePage replaces the original page to a new page.
func (_befac *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_gedac :=pageNum -1;for _eegd :=range _befac ._debg {if _eegd ==_gedac {_eadb :=page .Duplicate ();_cgege (_eadb );_befac ._debg [_eegd ]=_eadb ;};};};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_eba .CharMetrics ;

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gceeb :=NewPdfOutline ();_gceeb ._deec =&_gceeb ;return _gceeb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_aedde *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_gc :=NewPdfAction ();_bg :=&PdfActionGoTo {};_bg .PdfAction =_gc ;_gc .SetContext (_bg );return _bg ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _de .PdfObject ;Open _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gfbg *PdfAnnotationPolyLine )ToPdfObject ()_de .PdfObject {_gfbg .PdfAnnotation .ToPdfObject ();_bgbg :=_gfbg ._egag ;_ccd :=_bgbg .PdfObject .(*_de .PdfObjectDictionary );_gfbg .PdfAnnotationMarkup .appendToPdfDictionary (_ccd );_ccd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_ccd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gfbg .Vertices );_ccd .SetIfNotNil ("\u004c\u0045",_gfbg .LE );_ccd .SetIfNotNil ("\u0042\u0053",_gfbg .BS );_ccd .SetIfNotNil ("\u0049\u0043",_gfbg .IC );_ccd .SetIfNotNil ("\u0042\u0045",_gfbg .BE );_ccd .SetIfNotNil ("\u0049\u0054",_gfbg .IT );_ccd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gfbg .Measure );return _bgbg ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_afe *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;BitsPerFlag *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _de .PdfObject ;Volume _de .PdfObject ;Synchronous _de .PdfObject ;Repeat _de .PdfObject ;Mix _de .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_dcbf *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dcbf .Base ==nil {return nil ,_eae .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _dcbf .Base .ColorToRGB (color );};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fgee *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_fccd :=0.3*_fgee .R ()+0.59*_fgee .G ()+0.11*_fgee .B ();_fccd =_ac .Min (_ac .Max (_fccd ,0.0),1.0);return NewPdfColorDeviceGray (_fccd );};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_dbafg ,_cbab :=_cbfbf (basefont );if _cbab !=nil {return nil ,_cbab ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_dbafg ._bbcag =_ed .NewWinAnsiEncoder ();};return &PdfFont {_fgef :&_dbafg },nil ;};func _egacd (_cdaaa _de .PdfObject )(string ,error ){_cdaaa =_de .TraceToDirectObject (_cdaaa );switch _edbb :=_cdaaa .(type ){case *_de .PdfObjectString :return _edbb .Str (),nil ;case *_de .PdfObjectStream :_fgagg ,_ffagg :=_de .DecodeStream (_edbb );if _ffagg !=nil {return "",_ffagg ;};return string (_fgagg ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cdaaa );};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aebc :=NewPdfAnnotation ();_aaf :=&PdfAnnotationPrinterMark {};_aaf .PdfAnnotation =_aebc ;_aebc .SetContext (_aaf );return _aaf ;};

// HasExtGState checks if ExtGState name is available.
func (_fdgadd *PdfPage )HasExtGState (name _de .PdfObjectName )bool {if _fdgadd .Resources ==nil {return false ;};if _fdgadd .Resources .ExtGState ==nil {return false ;};_fbgdd ,_fcdg :=_de .TraceToDirectObject (_fdgadd .Resources .ExtGState ).(*_de .PdfObjectDictionary );if !_fcdg {_dg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_de .TraceToDirectObject (_fdgadd .Resources .ExtGState ));return false ;};_bdcbf :=_fbgdd .Get (name );_feaag :=_bdcbf !=nil ;return _feaag ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adcaa pdfFontSimple )GetRuneMetrics (r rune )(_eba .CharMetrics ,bool ){if _adcaa ._dbbb !=nil {_eadf ,_cfdf :=_adcaa ._dbbb [r ];if _cfdf {return _eadf ,true ;};};_ggfad :=_adcaa .Encoder ();if _ggfad ==nil {_dg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_adcaa );return _eba .CharMetrics {},false ;};_dfgfc ,_abcb :=_ggfad .RuneToCharcode (r );if !_abcb {if r !=' '{_dg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_adcaa );};return _eba .CharMetrics {},false ;};_affec ,_adgg :=_adcaa .GetCharMetrics (_dfgfc );return _affec ,_adgg ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_ceaa :=NewPdfAnnotation ();_dca :=&PdfAnnotationSquare {};_dca .PdfAnnotation =_ceaa ;_dca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceaa .SetContext (_dca );return _dca ;};func (_cfg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_faac *_de .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_fcea :=PdfAnnotationPrinterMark {};_fcea .MN =_faac .Get ("\u004d\u004e");return &_fcea ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fedafd _ea .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fccda _dd .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_cbgefd _dd .Image )(*Image ,error );

// Compress an image.
Compress (_gggb *Image ,_febef int64 )(*Image ,error );};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_fedgf *Image )ToGoImage ()(_dd .Image ,error ){_dg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_eacg ,_fdgf :=_bdb .NewImage (int (_fedgf .Width ),int (_fedgf .Height ),int (_fedgf .BitsPerComponent ),_fedgf .ColorComponents ,_fedgf .Data ,_fedgf ._abbgb ,_fedgf ._fbdfg );if _fdgf !=nil {return nil ,_fdgf ;};return _eacg ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aacg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aacg .Mask ()&^fl .Mask ())};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_caf :=NewPdfAnnotation ();_bbc :=&PdfAnnotationText {};_bbc .PdfAnnotation =_caf ;_bbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_caf .SetContext (_bbc );return _bbc ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_aece *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_aece .HiVal )};};

// WriteToFile writes the Appender output to file specified by path.
func (_dfda *PdfAppender )WriteToFile (outputPath string )error {_afbf ,_ebgbe :=_ef .Create (outputPath );if _ebgbe !=nil {return _ebgbe ;};defer _afbf .Close ();return _dfda .Write (_afbf );};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_eeebe *PdfPage )Duplicate ()*PdfPage {var _dbedba PdfPage ;_dbedba =*_eeebe ;_dbedba ._abdg =_de .MakeDict ();_dbedba ._debgbf =_de .MakeIndirectObject (_dbedba ._abdg );return &_dbedba ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_dcec *PdfAnnotation )ToPdfObject ()_de .PdfObject {_efdf :=_dcec ._egag ;_fbbf :=_efdf .PdfObject .(*_de .PdfObjectDictionary );_fbbf .Clear ();_fbbf .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0041\u006e\u006eo\u0074"));_fbbf .SetIfNotNil ("\u0052\u0065\u0063\u0074",_dcec .Rect );_fbbf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dcec .Contents );_fbbf .SetIfNotNil ("\u0050",_dcec .P );_fbbf .SetIfNotNil ("\u004e\u004d",_dcec .NM );_fbbf .SetIfNotNil ("\u004d",_dcec .M );_fbbf .SetIfNotNil ("\u0046",_dcec .F );_fbbf .SetIfNotNil ("\u0041\u0050",_dcec .AP );_fbbf .SetIfNotNil ("\u0041\u0053",_dcec .AS );_fbbf .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_dcec .Border );_fbbf .SetIfNotNil ("\u0043",_dcec .C );_fbbf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dcec .StructParent );_fbbf .SetIfNotNil ("\u004f\u0043",_dcec .OC );return _efdf ;};func (_beaed *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _beaed ._ccbgb ==nil &&_beaed .DescendantFont !=nil {return _beaed .DescendantFont .FontDescriptor ();};return _beaed ._ccbgb ;};func _bbbe (_gcfea *_de .PdfObjectDictionary ,_effdd *fontCommon )(*pdfCIDFontType2 ,error ){if _effdd ._dgbc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_effdd );return nil ,_de .ErrRangeError ;};_bgfa :=_fbgg (_effdd );_dgdba ,_aedg :=_de .GetDict (_gcfea .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aedg {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_effdd );return nil ,ErrRequiredAttributeMissing ;};_bgfa .CIDSystemInfo =_dgdba ;_bgfa .DW =_gcfea .Get ("\u0044\u0057");_bgfa .W =_gcfea .Get ("\u0057");_bgfa .DW2 =_gcfea .Get ("\u0044\u0057\u0032");_bgfa .W2 =_gcfea .Get ("\u0057\u0032");_bgfa .CIDToGIDMap =_gcfea .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_bgfa ._dbdga =1000.0;if _aefgd ,_dadec :=_de .GetNumberAsFloat (_bgfa .DW );_dadec ==nil {_bgfa ._dbdga =_aefgd ;};_ccga ,_fbdbb :=_ffdf (_bgfa .W );if _fbdbb !=nil {return nil ,_fbdbb ;};if _ccga ==nil {_ccga =map[_ed .CharCode ]float64 {};};_bgfa ._dddac =_ccga ;return _bgfa ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgdfd *PdfShadingType5 )ToPdfObject ()_de .PdfObject {_cgdfd .PdfShading .ToPdfObject ();_fbfcb ,_gabcc :=_cgdfd .getShadingDict ();if _gabcc !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cgdfd .BitsPerCoordinate !=nil {_fbfcb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgdfd .BitsPerCoordinate );};if _cgdfd .BitsPerComponent !=nil {_fbfcb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgdfd .BitsPerComponent );};if _cgdfd .VerticesPerRow !=nil {_fbfcb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cgdfd .VerticesPerRow );};if _cgdfd .Decode !=nil {_fbfcb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgdfd .Decode );};if _cgdfd .Function !=nil {if len (_cgdfd .Function )==1{_fbfcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgdfd .Function [0].ToPdfObject ());}else {_gccegb :=_de .MakeArray ();for _ ,_ecbd :=range _cgdfd .Function {_gccegb .Append (_ecbd .ToPdfObject ());};_fbfcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gccegb );};};return _cgdfd ._bcfa ;};func (_fdga *PdfReader )newPdfAnnotationRichMediaFromDict (_fefe *_de .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ggeg :=&PdfAnnotationRichMedia {};_ggeg .RichMediaSettings =_fefe .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_ggeg .RichMediaContent =_fefe .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ggeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gfb *PdfAnnotationPolygon )ToPdfObject ()_de .PdfObject {_gfb .PdfAnnotation .ToPdfObject ();_begg :=_gfb ._egag ;_cgb :=_begg .PdfObject .(*_de .PdfObjectDictionary );_gfb .PdfAnnotationMarkup .appendToPdfDictionary (_cgb );_cgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_cgb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gfb .Vertices );_cgb .SetIfNotNil ("\u004c\u0045",_gfb .LE );_cgb .SetIfNotNil ("\u0042\u0053",_gfb .BS );_cgb .SetIfNotNil ("\u0049\u0043",_gfb .IC );_cgb .SetIfNotNil ("\u0042\u0045",_gfb .BE );_cgb .SetIfNotNil ("\u0049\u0054",_gfb .IT );_cgb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gfb .Measure );return _begg ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eedac *PdfReader )GetNamedDestinations ()(_de .PdfObject ,error ){_fecfb :=_de .ResolveReference (_eedac ._bbad .Get ("\u004e\u0061\u006de\u0073"));if _fecfb ==nil {return nil ,nil ;};if !_eedac ._agdga {_dbbce :=_eedac .traverseObjectData (_fecfb );if _dbbce !=nil {return nil ,_dbbce ;};};return _fecfb ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_aage *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_adbc *PdfReader )newPdfActionResetFormFromDict (_edg *_de .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_edg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_edg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func (_ggfd *PdfField )inherit (_fdbc func (*PdfField )bool )(bool ,error ){_gcad :=map[*PdfField ]bool {};_aced :=false ;_cfgbb :=_ggfd ;for _cfgbb !=nil {if _ ,_fcbe :=_gcad [_cfgbb ];_fcbe {return false ,_eae .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_fdcag :=_fdbc (_cfgbb );if _fdcag {_aced =true ;break ;};_gcad [_cfgbb ]=true ;_cfgbb =_cfgbb .Parent ;};return _aced ,nil ;};func (_cdb *PdfAnnotation )String ()string {_defa :="";_dfa ,_acf :=_cdb .ToPdfObject ().(*_de .PdfIndirectObject );if _acf {_defa =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cdb ._cab ,_dfa .PdfObject .String ());};return _defa ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_ddaad *PdfFont )CharcodesToUnicode (charcodes []_ed .CharCode )[]rune {_adcf ,_ ,_ :=_ddaad .CharcodesToUnicodeWithStats (charcodes );return _adcf ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dcg *PdfAnnotationWidget )Field ()*PdfField {return _dcg ._bgf };

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _de .PdfObject )(*PdfFilespec ,error ){_bdedb :=&PdfFilespec {};var _cgaad *_de .PdfObjectDictionary ;if _ffee ,_aeaba :=_de .GetIndirect (obj );_aeaba {_bdedb ._dcfb =_ffee ;_abaag ,_feccf :=_de .GetDict (_ffee .PdfObject );if !_feccf {_dg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_de .ErrTypeError ;};_cgaad =_abaag ;}else if _gbbb ,_caagd :=_de .GetDict (obj );_caagd {_bdedb ._dcfb =_gbbb ;_cgaad =_gbbb ;}else {_dg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_de .ErrTypeError ;};if _cgaad ==nil {_dg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_eae .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bdedc :=_cgaad .Get ("\u0054\u0079\u0070\u0065");_bdedc !=nil {_gceac ,_baba :=_bdedc .(*_de .PdfObjectName );if !_baba {_dg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bdedc );}else {if *_gceac !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_gceac );};};};if _eadc :=_cgaad .Get ("\u0046\u0053");_eadc !=nil {_bdedb .FS =_eadc ;};if _eccff :=_cgaad .Get ("\u0046");_eccff !=nil {_bdedb .F =_eccff ;};if _ggcge :=_cgaad .Get ("\u0055\u0046");_ggcge !=nil {_bdedb .UF =_ggcge ;};if _cafbb :=_cgaad .Get ("\u0044\u004f\u0053");_cafbb !=nil {_bdedb .DOS =_cafbb ;};if _fdgc :=_cgaad .Get ("\u004d\u0061\u0063");_fdgc !=nil {_bdedb .Mac =_fdgc ;};if _gegf :=_cgaad .Get ("\u0055\u006e\u0069\u0078");_gegf !=nil {_bdedb .Unix =_gegf ;};if _dfea :=_cgaad .Get ("\u0049\u0044");_dfea !=nil {_bdedb .ID =_dfea ;};if _gfdd :=_cgaad .Get ("\u0056");_gfdd !=nil {_bdedb .V =_gfdd ;};if _fgeeg :=_cgaad .Get ("\u0045\u0046");_fgeeg !=nil {_bdedb .EF =_fgeeg ;};if _dcgfe :=_cgaad .Get ("\u0052\u0046");_dcgfe !=nil {_bdedb .RF =_dcgfe ;};if _gbgc :=_cgaad .Get ("\u0044\u0065\u0073\u0063");_gbgc !=nil {_bdedb .Desc =_gbgc ;};if _fcbg :=_cgaad .Get ("\u0043\u0049");_fcbg !=nil {_bdedb .CI =_fcbg ;};return _bdedb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ccab *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cffe ,_gaaeg :=_de .GetNumbersAsFloat (objects );if _gaaeg !=nil {return nil ,_gaaeg ;};return _ccab .ColorFromFloats (_cffe );};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_fecca *PdfColorspaceDeviceNAttributes )ToPdfObject ()_de .PdfObject {_ecgc :=_de .MakeDict ();if _fecca .Subtype !=nil {_ecgc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fecca .Subtype );};_ecgc .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_fecca .Colorants );_ecgc .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_fecca .Process );_ecgc .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_fecca .MixingHints );if _fecca ._afbd !=nil {_fecca ._afbd .PdfObject =_ecgc ;return _fecca ._afbd ;};return _ecgc ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cgda *_de .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_de .PdfObjectName ;Filter *_de .PdfObjectName ;SubFilter *_de .PdfObjectName ;Contents *_de .PdfObjectString ;Cert _de .PdfObject ;ByteRange *_de .PdfObjectArray ;Reference *_de .PdfObjectArray ;Changes *_de .PdfObjectArray ;Name *_de .PdfObjectString ;M *_de .PdfObjectString ;Location *_de .PdfObjectString ;Reason *_de .PdfObjectString ;ContactInfo *_de .PdfObjectString ;R *_de .PdfObjectInteger ;V *_de .PdfObjectInteger ;PropBuild *_de .PdfObjectDictionary ;PropAuthTime *_de .PdfObjectInteger ;PropAuthType *_de .PdfObjectName ;};

// BaseFont returns the font's "BaseFont" field.
func (_fffdg *PdfFont )BaseFont ()string {return _fffdg .baseFields ()._fbaf };

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _de .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _de .PdfObject ;Contents _de .PdfObject ;Rotate *int64 ;Group _de .PdfObject ;Thumb _de .PdfObject ;B _de .PdfObject ;Dur _de .PdfObject ;Trans _de .PdfObject ;AA _de .PdfObject ;Metadata _de .PdfObject ;PieceInfo _de .PdfObject ;StructParents _de .PdfObject ;ID _de .PdfObject ;PZ _de .PdfObject ;SeparationInfo _de .PdfObject ;Tabs _de .PdfObject ;TemplateInstantiated _de .PdfObject ;PresSteps _de .PdfObject ;UserUnit _de .PdfObject ;VP _de .PdfObject ;Annots _de .PdfObject ;_ffddd []*PdfAnnotation ;_abdg *_de .PdfObjectDictionary ;_debgbf *_de .PdfIndirectObject ;_dgde *PdfReader ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cbga :=PdfPage {};_cbga ._abdg =_de .MakeDict ();_cbga .Resources =NewPdfPageResources ();_becaa :=_de .PdfIndirectObject {};_becaa .PdfObject =_cbga ._abdg ;_cbga ._debgbf =&_becaa ;return &_cbga ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _de .PdfObject ;NewWindow _de .PdfObject ;T _de .PdfObject ;};func (_aabbaa SignatureValidationResult )String ()string {var _agcgf _eff .Buffer ;_agcgf .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_aabbaa .Name ));if _aabbaa .Date ._cfdcf > 0{_agcgf .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_aabbaa .Date .ToGoTime ().String ()));}else {_agcgf .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_aabbaa .Reason )> 0{_agcgf .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_aabbaa .Reason ));}else {_agcgf .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_aabbaa .Location )> 0{_agcgf .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_aabbaa .Location ));}else {_agcgf .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_aabbaa .ContactInfo )> 0{_agcgf .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_aabbaa .ContactInfo ));}else {_agcgf .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_agcgf .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_aabbaa .Fields )));if _aabbaa .IsSigned {_agcgf .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_agcgf .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _aabbaa .IsVerified {_agcgf .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_agcgf .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _aabbaa .IsTrusted {_agcgf .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_agcgf .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_aabbaa .GeneralizedTime .IsZero (){_agcgf .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_aabbaa .GeneralizedTime .String ()));};return _agcgf .String ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_baa *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cebcf :=vals [0];if _cebcf < 0.0||_cebcf > 100.0{_dg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cebcf );return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbg :=vals [1];_begd :=float64 (-100);_egdcec :=float64 (100);if len (_baa .Range )> 1{_begd =_baa .Range [0];_egdcec =_baa .Range [1];};if _cfbg < _begd ||_cfbg > _egdcec {_dg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cfbg ,_begd ,_egdcec );return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgae :=vals [2];_gfgbg :=float64 (-100);_gcege :=float64 (100);if len (_baa .Range )> 3{_gfgbg =_baa .Range [2];_gcege =_baa .Range [3];};if _fgae < _gfgbg ||_fgae > _gcege {_dg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fgae ,_gfgbg ,_gcege );return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffdaa :=NewPdfColorLab (_cebcf ,_cfbg ,_fgae );return _ffdaa ,nil ;};func _agccg (_aecb *_de .PdfObjectDictionary )(*PdfFieldButton ,error ){_afaad :=&PdfFieldButton {};_afaad .Opt ,_ =_de .GetArray (_aecb .Get ("\u004f\u0070\u0074"));return _afaad ,nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ea .ReadSeeker )(*PdfReader ,error ){_bbggb :=&PdfReader {_ddbac :rs ,_cafd :map[_de .PdfObject ]struct{}{},_edgab :_gfdgg (),_agdga :false };_fcabc ,_dcbdc :=_de .NewParser (rs );if _dcbdc !=nil {return nil ,_dcbdc ;};_bbggb ._bffa =_fcabc ;_cbdbc ,_dcbdc :=_bbggb .IsEncrypted ();if _dcbdc !=nil {return nil ,_dcbdc ;};if !_cbdbc {_dcbdc =_bbggb .loadStructure ();if _dcbdc !=nil {return nil ,_dcbdc ;};};return _bbggb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebaga *PdfAnnotationPopup )ToPdfObject ()_de .PdfObject {_ebaga .PdfAnnotation .ToPdfObject ();_beee :=_ebaga ._egag ;_aabb :=_beee .PdfObject .(*_de .PdfObjectDictionary );_aabb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0050\u006f\u0070u\u0070"));_aabb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebaga .Parent );_aabb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ebaga .Open );return _beee ;};

// ToPdfObject implements interface PdfModel.
func (_ceef *PdfBorderStyle )ToPdfObject ()_de .PdfObject {_cfef :=_de .MakeDict ();if _ceef ._dddg !=nil {if _bfe ,_agbd :=_ceef ._dddg .(*_de .PdfIndirectObject );_agbd {_bfe .PdfObject =_cfef ;};};_cfef .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _ceef .W !=nil {_cfef .Set ("\u0057",_de .MakeFloat (*_ceef .W ));};if _ceef .S !=nil {_cfef .Set ("\u0053",_de .MakeName (_ceef .S .GetPdfName ()));};if _ceef .D !=nil {_cfef .Set ("\u0044",_de .MakeArrayFromIntegers (*_ceef .D ));};if _ceef ._dddg !=nil {return _ceef ._dddg ;};return _cfef ;};var (CourierName =_eba .CourierName ;CourierBoldName =_eba .CourierBoldName ;CourierObliqueName =_eba .CourierObliqueName ;CourierBoldObliqueName =_eba .CourierBoldObliqueName ;HelveticaName =_eba .HelveticaName ;HelveticaBoldName =_eba .HelveticaBoldName ;HelveticaObliqueName =_eba .HelveticaObliqueName ;HelveticaBoldObliqueName =_eba .HelveticaBoldObliqueName ;SymbolName =_eba .SymbolName ;ZapfDingbatsName =_eba .ZapfDingbatsName ;TimesRomanName =_eba .TimesRomanName ;TimesBoldName =_eba .TimesBoldName ;TimesItalicName =_eba .TimesItalicName ;TimesBoldItalicName =_eba .TimesBoldItalicName ;);

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_faga *PdfShadingType6 )ToPdfObject ()_de .PdfObject {_faga .PdfShading .ToPdfObject ();_eddge ,_ebeab :=_faga .getShadingDict ();if _ebeab !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _faga .BitsPerCoordinate !=nil {_eddge .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_faga .BitsPerCoordinate );};if _faga .BitsPerComponent !=nil {_eddge .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_faga .BitsPerComponent );};if _faga .BitsPerFlag !=nil {_eddge .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_faga .BitsPerFlag );};if _faga .Decode !=nil {_eddge .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_faga .Decode );};if _faga .Function !=nil {if len (_faga .Function )==1{_eddge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_faga .Function [0].ToPdfObject ());}else {_adfag :=_de .MakeArray ();for _ ,_dbecb :=range _faga .Function {_adfag .Append (_dbecb .ToPdfObject ());};_eddge .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adfag );};};return _faga ._bcfa ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_ddabf :=&PdfColorspaceLab {};_ddabf .BlackPoint =[]float64 {0.0,0.0,0.0};_ddabf .Range =[]float64 {-100,100,-100,100};return _ddabf ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dagcf *PdfOutlineTreeNode )ToPdfObject ()_de .PdfObject {return _dagcf .GetContext ().ToPdfObject ();};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cgbcc []byte )(_aafdc int ,_dege error );};

// ToPdfObject implements interface PdfModel.
func (_cge *PdfActionHide )ToPdfObject ()_de .PdfObject {_cge .PdfAction .ToPdfObject ();_cbd :=_cge ._daa ;_gg :=_cbd .PdfObject .(*_de .PdfObjectDictionary );_gg .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeHide )));_gg .SetIfNotNil ("\u0054",_cge .T );_gg .SetIfNotNil ("\u0048",_cge .H );return _cbd ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_bffa *_de .PdfParser ;_dbdge _de .PdfObject ;_badf *_de .PdfIndirectObject ;_geagd *_de .PdfObjectDictionary ;_aafa []*_de .PdfIndirectObject ;PageList []*PdfPage ;_gffedd int ;_bbad *_de .PdfObjectDictionary ;_fgff *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_edgab *modelManager ;_agdga bool ;_cafd map[_de .PdfObject ]struct{};_ddbac _ea .ReadSeeker ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_abdb *PdfReader )PageFromIndirectObject (ind *_de .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_abdb .PageList )!=len (_abdb ._aafa ){return nil ,0,_eae .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _cfee ,_cafc :=range _abdb ._aafa {if _cafc ==ind {return _abdb .PageList [_cfee ],_cfee +1,nil ;};};return nil ,0,_eae .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetPage returns the PdfPage model for the specified page number.
func (_dgdgc *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dgdgc ._bffa .GetCrypter ()!=nil &&!_dgdgc ._bffa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_dgdgc ._aafa )< pageNumber {return nil ,_eae .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_ebbdb :=pageNumber -1;if _ebbdb < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fcdgd :=_dgdgc .PageList [_ebbdb ];return _fcdgd ,nil ;};func _ggadb (_dabaa _de .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_fgcg :=&PdfColorspaceDeviceNAttributes {};var _gafd *_de .PdfObjectDictionary ;if _badd ,_gbebc :=_dabaa .(*_de .PdfIndirectObject );_gbebc {_fgcg ._afbd =_badd ;var _agge bool ;_gafd ,_agge =_badd .PdfObject .(*_de .PdfObjectDictionary );if !_agge {_dg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _fgfb ,_bfge :=_dabaa .(*_de .PdfObjectDictionary );_bfge {_gafd =_fgfb ;}else {_dg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fedd :=_gafd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fedd !=nil {_eeddd ,_gcgcac :=_de .TraceToDirectObject (_fedd ).(*_de .PdfObjectName );if !_gcgcac {_dg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fgcg .Subtype =_eeddd ;};if _fbfe :=_gafd .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fbfe !=nil {_fgcg .Colorants =_fbfe ;};if _fbca :=_gafd .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_fbca !=nil {_fgcg .Process =_fbca ;};if _gaad :=_gafd .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gaad !=nil {_fgcg .MixingHints =_gaad ;};return _fgcg ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// SetAction sets the PDF action for the annotation link.
func (_adbd *PdfAnnotationLink )SetAction (action *PdfAction ){_adbd ._gbb =action ;if action ==nil {_adbd .A =nil ;};};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _de .PdfObject ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _a .Time ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_aafe *PdfColorspaceSpecialIndexed )ToPdfObject ()_de .PdfObject {_cadf :=_de .MakeArray (_de .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cadf .Append (_aafe .Base .ToPdfObject ());_cadf .Append (_de .MakeInteger (int64 (_aafe .HiVal )));_cadf .Append (_aafe .Lookup );if _aafe ._cced !=nil {_aafe ._cced .PdfObject =_cadf ;return _aafe ._cced ;};return _cadf ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_cfca *PdfReader )Decrypt (password []byte )(bool ,error ){_fdgade ,_dbbg :=_cfca ._bffa .Decrypt (password );if _dbbg !=nil {return false ,_dbbg ;};if !_fdgade {return false ,nil ;};_dbbg =_cfca .loadStructure ();if _dbbg !=nil {_dg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_dbbg );return false ,_dbbg ;};return true ,nil ;};func (_daf *PdfReader )newPdfActionSetOCGStateFromDict (_efc *_de .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_efc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_efc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_eebda FieldFlag )Mask ()uint32 {return uint32 (_eebda )};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;RD _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_af *PdfAction )ToPdfObject ()_de .PdfObject {_fb :=_af ._daa ;_gd :=_fb .PdfObject .(*_de .PdfObjectDictionary );_gd .Clear ();_gd .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gd .SetIfNotNil ("\u0053",_af .S );_gd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_af .Next );return _fb ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _de .PdfObject ;RichMediaContent _de .PdfObject ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _de .PdfObject ;PreserveRB _de .PdfObject ;};func (_cdeef *PdfReader )newPdfAnnotationSquigglyFromDict (_aagf *_de .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cdbg :=PdfAnnotationSquiggly {};_egdg ,_fdg :=_cdeef .newPdfAnnotationMarkupFromDict (_aagf );if _fdg !=nil {return nil ,_fdg ;};_cdbg .PdfAnnotationMarkup =_egdg ;_cdbg .QuadPoints =_aagf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cdbg ,nil ;};func (_fddg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bacda :=_fddg .Parent ;for _bacda !=nil {_fcgef ,_febbe :=_de .GetDict (_bacda );if !_febbe {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_eae .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _geeaf :=_fcgef .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_geeaf !=nil {_cdcgb ,_gddd :=_de .GetDict (_geeaf );if !_gddd {return nil ,_eae .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_becc ,_fggfd :=NewPdfPageResourcesFromDict (_cdcgb );if _fggfd !=nil {return nil ,_fggfd ;};return _becc ,nil ;};_bacda =_fcgef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fdad :=&PdfColorspaceSpecialSeparation {};return _fdad ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_egcf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_de .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_cfbf []_de .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_aabc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_eaac *PdfReader )newPdfActionURIFromDict (_cebc *_de .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cebc .Get ("\u0055\u0052\u0049"),IsMap :_cebc .Get ("\u0049\u0073\u004da\u0070")},nil ;};func (_dafb *PdfReader )newPdfFieldSignatureFromDict (_gdad *_de .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gcgg :=&PdfFieldSignature {};_fgfd ,_beege :=_de .GetIndirect (_gdad .Get ("\u0056"));if _beege {var _debaa error ;_gcgg .V ,_debaa =_dafb .newPdfSignatureFromIndirect (_fgfd );if _debaa !=nil {return nil ,_debaa ;};};_gcgg .Lock ,_ =_de .GetIndirect (_gdad .Get ("\u004c\u006f\u0063\u006b"));_gcgg .SV ,_ =_de .GetIndirect (_gdad .Get ("\u0053\u0056"));return _gcgg ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_agebf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bgebg *PdfPage )AddContentStreamByString (contentStr string )error {_dfcce ,_ccdbe :=_de .MakeStream ([]byte (contentStr ),_de .NewFlateEncoder ());if _ccdbe !=nil {return _ccdbe ;};if _bgebg .Contents ==nil {_bgebg .Contents =_dfcce ;}else {_ceadc :=_de .TraceToDirectObject (_bgebg .Contents );_eefde ,_babcg :=_ceadc .(*_de .PdfObjectArray );if !_babcg {_eefde =_de .MakeArray (_ceadc );};_eefde .Append (_dfcce );_bgebg .Contents =_eefde ;};return nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _a .Time ){_bbfde =creationDate };

// ToPdfObject implements interface PdfModel.
func (_dfb *PdfActionNamed )ToPdfObject ()_de .PdfObject {_dfb .PdfAction .ToPdfObject ();_gbf :=_dfb ._daa ;_adf :=_gbf .PdfObject .(*_de .PdfObjectDictionary );_adf .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeNamed )));_adf .SetIfNotNil ("\u004e",_dfb .N );return _gbf ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_gaedb *PdfAcroForm )ToPdfObject ()_de .PdfObject {_addc :=_gaedb ._egbd ;_aegb :=_addc .PdfObject .(*_de .PdfObjectDictionary );if _gaedb .Fields !=nil {_geba :=_de .PdfObjectArray {};for _ ,_aecd :=range *_gaedb .Fields {_cdfdc :=_aecd .GetContext ();if _cdfdc !=nil {_geba .Append (_cdfdc .ToPdfObject ());}else {_geba .Append (_aecd .ToPdfObject ());};};_aegb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_geba );};if _gaedb .NeedAppearances !=nil {_aegb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_gaedb .NeedAppearances );};if _gaedb .SigFlags !=nil {_aegb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_gaedb .SigFlags );};if _gaedb .CO !=nil {_aegb .Set ("\u0043\u004f",_gaedb .CO );};if _gaedb .DR !=nil {_aegb .Set ("\u0044\u0052",_gaedb .DR .ToPdfObject ());};if _gaedb .DA !=nil {_aegb .Set ("\u0044\u0041",_gaedb .DA );};if _gaedb .Q !=nil {_aegb .Set ("\u0051",_gaedb .Q );};if _gaedb .XFA !=nil {_aegb .Set ("\u0058\u0046\u0041",_gaedb .XFA );};return _addc ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_eefba *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _eefba .Range };

// AddImageResource adds an image to the XObject resources.
func (_cebe *PdfPage )AddImageResource (name _de .PdfObjectName ,ximg *XObjectImage )error {var _dfdbd *_de .PdfObjectDictionary ;if _cebe .Resources .XObject ==nil {_dfdbd =_de .MakeDict ();_cebe .Resources .XObject =_dfdbd ;}else {var _fgfda bool ;_dfdbd ,_fgfda =(_cebe .Resources .XObject ).(*_de .PdfObjectDictionary );if !_fgfda {return _eae .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dfdbd .Set (name ,ximg .ToPdfObject ());return nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_fgfbg *PdfAcroForm )GetContainingPdfObject ()_de .PdfObject {return _fgfbg ._egbd };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ggfe :=NewPdfAnnotation ();_cef :=&PdfAnnotationWidget {};_cef .PdfAnnotation =_ggfe ;_ggfe .SetContext (_cef );return _cef ;};func (_cfb *PdfReader )newPdfActionGoTo3DViewFromDict (_eeb *_de .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_eeb .Get ("\u0054\u0041"),V :_eeb .Get ("\u0056")},nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fdabe *PdfPageResources )HasColorspaceByName (keyName _de .PdfObjectName )bool {_degg ,_adeb :=_fdabe .GetColorspaces ();if _adeb !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_adeb );return false ;};if _degg ==nil {return false ;};_ ,_eeae :=_degg .Colorspaces [string (keyName )];return _eeae ;};func _fgbaa (_ffcc _de .PdfObject )(*fontFile ,error ){_dg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ffcc );_badg :=&fontFile {};_ffcc =_de .TraceToDirectObject (_ffcc );_fgbf ,_dafd :=_ffcc .(*_de .PdfObjectStream );if !_dafd {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ffcc );return nil ,_de .ErrTypeError ;};_geggg :=_fgbf .PdfObjectDictionary ;_adda ,_babf :=_de .DecodeStream (_fgbf );if _babf !=nil {return nil ,_babf ;};_cegf ,_dafd :=_de .GetNameVal (_geggg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dafd {_badg ._edeae =_cegf ;if _cegf =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_cfdb ,_ :=_de .GetIntVal (_geggg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fbaef ,_ :=_de .GetIntVal (_geggg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cfdb > len (_adda ){_cfdb =len (_adda );};if _cfdb +_fbaef > len (_adda ){_fbaef =len (_adda )-_cfdb ;};_agdbe :=_adda [:_cfdb ];var _fegac []byte ;if _fbaef > 0{_fegac =_adda [_cfdb :_cfdb +_fbaef ];};if _cfdb > 0&&_fbaef > 0{_decb :=_badg .loadFromSegments (_agdbe ,_fegac );if _decb !=nil {return nil ,_decb ;};};return _badg ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_debfe *Image )GetSamples ()[]uint32 {_dbgac :=_dgb .ResampleBytes (_debfe .Data ,int (_debfe .BitsPerComponent ));if _debfe .BitsPerComponent < 8{_dbgac =_debfe .samplesTrimPadding (_dbgac );};_ecdc :=int (_debfe .Width )*int (_debfe .Height )*_debfe .ColorComponents ;if len (_dbgac )< _ecdc {_dg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dbgac ),_ecdc );return _dbgac ;}else if len (_dbgac )> _ecdc {_dg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dbgac ),_ecdc );_dbgac =_dbgac [:_ecdc ];};return _dbgac ;};

// IsCID returns true if the underlying font is CID.
func (_dgdc *PdfFont )IsCID ()bool {return _dgdc .baseFields ().isCIDFont ()};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _de .PdfObject ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_bbcb =producer };

// ToPdfObject implements interface PdfModel.
func (_edf *PdfActionLaunch )ToPdfObject ()_de .PdfObject {_edf .PdfAction .ToPdfObject ();_bda :=_edf ._daa ;_df :=_bda .PdfObject .(*_de .PdfObjectDictionary );_df .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeLaunch )));if _edf .F !=nil {_df .Set ("\u0046",_edf .F .ToPdfObject ());};_df .SetIfNotNil ("\u0057\u0069\u006e",_edf .Win );_df .SetIfNotNil ("\u004d\u0061\u0063",_edf .Mac );_df .SetIfNotNil ("\u0055\u006e\u0069\u0078",_edf .Unix );_df .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_edf .NewWindow );return _bda ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ea .ReadSeeker )(*PdfFont ,error ){const _caae =_ed .CharCode (32);const _bagg =_ed .CharCode (255);_ffgdd ,_eafg :=_g .ReadAll (r );if _eafg !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_eafg );return nil ,_eafg ;};_cfefc ,_eafg :=_eba .TtfParse (_eff .NewReader (_ffgdd ));if _eafg !=nil {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_eafg );return nil ,_eafg ;};_agdd :=&pdfFontSimple {_dcgfb :make (map[_ed .CharCode ]float64 ),fontCommon :fontCommon {_dgbc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_agdd ._bbcag =_ed .NewWinAnsiEncoder ();_agdd ._fbaf =_cfefc .PostScriptName ;_agdd .FirstChar =_de .MakeInteger (int64 (_caae ));_agdd .LastChar =_de .MakeInteger (int64 (_bagg ));_gcfdg :=1000.0/float64 (_cfefc .UnitsPerEm );if len (_cfefc .Widths )<=0{return nil ,_eae .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_agbf :=_gcfdg *float64 (_cfefc .Widths [0]);_adadg :=make ([]float64 ,0,_bagg -_caae +1);for _ddbadb :=_caae ;_ddbadb <=_bagg ;_ddbadb ++{_acecf ,_febb :=_agdd .Encoder ().CharcodeToRune (_ddbadb );if !_febb {_dg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ddbadb );_adadg =append (_adadg ,_agbf );continue ;};_dfdbf ,_eccc :=_cfefc .Chars [_acecf ];if !_eccc {_dg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_adadg =append (_adadg ,_agbf );continue ;};_ffabb :=_gcfdg *float64 (_cfefc .Widths [_dfdbf ]);_adadg =append (_adadg ,_ffabb );};_agdd .Widths =_de .MakeIndirectObject (_de .MakeArrayFromFloats (_adadg ));if len (_adadg )< int (_bagg -_caae +1){_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_adadg ),255-32+1);return nil ,_de .ErrRangeError ;};for _affgd :=_ed .CharCode (_caae );_affgd <=_bagg ;_affgd ++{_agdd ._dcgfb [_affgd ]=_adadg [_affgd -_caae ];};_agdd .Encoding =_de .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gaeb :=&PdfFontDescriptor {};_gaeb .FontName =_de .MakeName (_cfefc .PostScriptName );_gaeb .Ascent =_de .MakeFloat (_gcfdg *float64 (_cfefc .TypoAscender ));_gaeb .Descent =_de .MakeFloat (_gcfdg *float64 (_cfefc .TypoDescender ));_gaeb .CapHeight =_de .MakeFloat (_gcfdg *float64 (_cfefc .CapHeight ));_gaeb .FontBBox =_de .MakeArrayFromFloats ([]float64 {_gcfdg *float64 (_cfefc .Xmin ),_gcfdg *float64 (_cfefc .Ymin ),_gcfdg *float64 (_cfefc .Xmax ),_gcfdg *float64 (_cfefc .Ymax )});_gaeb .ItalicAngle =_de .MakeFloat (float64 (_cfefc .ItalicAngle ));_gaeb .MissingWidth =_de .MakeFloat (_gcfdg *float64 (_cfefc .Widths [0]));_edfdf ,_eafg :=_de .MakeStream (_ffgdd ,_de .NewFlateEncoder ());if _eafg !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_eafg );return nil ,_eafg ;};_edfdf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_de .MakeInteger (int64 (len (_ffgdd ))));_gaeb .FontFile2 =_edfdf ;if _cfefc .Bold {_gaeb .StemV =_de .MakeInteger (120);}else {_gaeb .StemV =_de .MakeInteger (70);};_bgfc :=_dfeab ;if _cfefc .IsFixedPitch {_bgfc |=_fdabd ;};if _cfefc .ItalicAngle !=0{_bgfc |=_dedc ;};_gaeb .Flags =_de .MakeInteger (int64 (_bgfc ));_agdd ._ccbgb =_gaeb ;_feadf :=&PdfFont {_fgef :_agdd };return _feadf ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gagef *PdfFunctionType0 )ToPdfObject ()_de .PdfObject {if _gagef ._adbg ==nil {_gagef ._adbg =&_de .PdfObjectStream {};};_degbc :=_de .MakeDict ();_degbc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (0));_eeafga :=&_de .PdfObjectArray {};for _ ,_effeb :=range _gagef .Domain {_eeafga .Append (_de .MakeFloat (_effeb ));};_degbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eeafga );_gbfgg :=&_de .PdfObjectArray {};for _ ,_efea :=range _gagef .Range {_gbfgg .Append (_de .MakeFloat (_efea ));};_degbc .Set ("\u0052\u0061\u006eg\u0065",_gbfgg );_dadca :=&_de .PdfObjectArray {};for _ ,_dagcbc :=range _gagef .Size {_dadca .Append (_de .MakeInteger (int64 (_dagcbc )));};_degbc .Set ("\u0053\u0069\u007a\u0065",_dadca );_degbc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_de .MakeInteger (int64 (_gagef .BitsPerSample )));if _gagef .Order !=1{_degbc .Set ("\u004f\u0072\u0064e\u0072",_de .MakeInteger (int64 (_gagef .Order )));};_degbc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_gagef ._gbdfa ))));_gagef ._adbg .Stream =_gagef ._gbdfa ;_gagef ._adbg .PdfObjectDictionary =_degbc ;return _gagef ._adbg ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bdfe *Image )ToJBIG2Image ()(*_de .JBIG2Image ,error ){_gaagb ,_cebab :=_bdfe .ToGoImage ();if _cebab !=nil {return nil ,_cebab ;};return _de .GoImageToJBIG2 (_gaagb ,_de .JB2ImageAutoThreshold );};func _dbgeb (_dcabe *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_dcabe }};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _de .StreamEncoder )(*XObjectImage ,error ){_ffgdg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ffgdg ,img ,cs ,encoder );};func (_dcabc *PdfReader )buildPageList (_fbggc *_de .PdfIndirectObject ,_edfe *_de .PdfIndirectObject ,_dbgace map[_de .PdfObject ]struct{})error {if _fbggc ==nil {return nil ;};if _ ,_ebba :=_dbgace [_fbggc ];_ebba {_dg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fbggc .ObjectNumber );return nil ;};_dbgace [_fbggc ]=struct{}{};_cgfg ,_cbgf :=_fbggc .PdfObject .(*_de .PdfObjectDictionary );if !_cbgf {return _eae .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_dcgae ,_cbgf :=(*_cgfg ).Get ("\u0054\u0079\u0070\u0065").(*_de .PdfObjectName );if !_cbgf {if _cgfg .Get ("\u004b\u0069\u0064\u0073")==nil {return _eae .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_dcgae =_de .MakeName ("\u0050\u0061\u0067e\u0073");_cgfg .Set ("\u0054\u0079\u0070\u0065",_dcgae );};_dg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_dcgae ,_fbggc );if *_dcgae =="\u0050\u0061\u0067\u0065"{_cbcbg ,_aggfc :=_dcabc .newPdfPageFromDict (_cgfg );if _aggfc !=nil {return _aggfc ;};_cbcbg .setContainer (_fbggc );if _edfe !=nil {_cgfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edfe );};_dcabc ._aafa =append (_dcabc ._aafa ,_fbggc );_dcabc .PageList =append (_dcabc .PageList ,_cbcbg );return nil ;};if *_dcgae !="\u0050\u0061\u0067e\u0073"{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_dcgae );return _eae .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _edfe !=nil {_cgfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edfe );};if !_dcabc ._agdga {_agbfa :=_dcabc .traverseObjectData (_fbggc );if _agbfa !=nil {return _agbfa ;};};_aecee ,_bgec :=_dcabc ._bffa .Resolve (_cgfg .Get ("\u004b\u0069\u0064\u0073"));if _bgec !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _bgec ;};var _fccag *_de .PdfObjectArray ;_fccag ,_cbgf =_aecee .(*_de .PdfObjectArray );if !_cbgf {_ccbce ,_eefcf :=_aecee .(*_de .PdfIndirectObject );if !_eefcf {return _eae .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fccag ,_cbgf =_ccbce .PdfObject .(*_de .PdfObjectArray );if !_cbgf {return _eae .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fccag );for _afddc ,_ebea :=range _fccag .Elements (){_dafcb ,_becce :=_de .GetIndirect (_ebea );if !_becce {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dafcb );return _eae .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fccag .Set (_afddc ,_dafcb );_bgec =_dcabc .buildPageList (_dafcb ,_fbggc ,_dbgace );if _bgec !=nil {return _bgec ;};};return nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gabe *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _gabe .fill (provider ,appGen );};func _bfafg (_cbbb []byte )bool {if len (_cbbb )< 4{return true ;};for _cbgc :=range _cbbb [:4]{_fdde :=rune (_cbgc );if !_eb .Is (_eb .ASCII_Hex_Digit ,_fdde )&&!_eb .IsSpace (_fdde ){return true ;};};return false ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_dcbbc *PdfPageResources )GenerateXObjectName ()_de .PdfObjectName {_eedcg :=1;for {_cccga :=_de .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_eedcg ));if !_dcbbc .HasXObjectByName (*_cccga ){return *_cccga ;};_eedcg ++;};};func (_abbeg *PdfReader )newPdfSignatureFromIndirect (_cdabb *_de .PdfIndirectObject )(*PdfSignature ,error ){_eadff ,_cecag :=_cdabb .PdfObject .(*_de .PdfObjectDictionary );if !_cecag {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _gfea ,_gbgb :=_abbeg ._edgab .GetModelFromPrimitive (_cdabb ).(*PdfSignature );_gbgb {return _gfea ,nil ;};_degga :=&PdfSignature {};_degga ._cgda =_cdabb ;_degga .Type ,_ =_de .GetName (_eadff .Get ("\u0054\u0079\u0070\u0065"));_degga .Filter ,_cecag =_de .GetName (_eadff .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cecag {_dg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_degga .SubFilter ,_ =_de .GetName (_eadff .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_degga .Contents ,_cecag =_de .GetString (_eadff .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cecag {_dg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_degga .Cert =_eadff .Get ("\u0043\u0065\u0072\u0074");_degga .ByteRange ,_ =_de .GetArray (_eadff .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_degga .Reference ,_ =_de .GetArray (_eadff .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_degga .Changes ,_ =_de .GetArray (_eadff .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_degga .Name ,_ =_de .GetString (_eadff .Get ("\u004e\u0061\u006d\u0065"));_degga .M ,_ =_de .GetString (_eadff .Get ("\u004d"));_degga .Location ,_ =_de .GetString (_eadff .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_degga .Reason ,_ =_de .GetString (_eadff .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_degga .ContactInfo ,_ =_de .GetString (_eadff .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_degga .R ,_ =_de .GetInt (_eadff .Get ("\u0052"));_degga .V ,_ =_de .GetInt (_eadff .Get ("\u0056"));_degga .PropBuild ,_ =_de .GetDict (_eadff .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_degga .PropAuthTime ,_ =_de .GetInt (_eadff .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_degga .PropAuthType ,_ =_de .GetName (_eadff .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _degga ,nil ;};

// SetName sets the `Name` field of the signature.
func (_bfce *PdfSignature )SetName (name string ){_bfce .Name =_de .MakeString (name )};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gddg *PdfPageResources )AddExtGState (gsName _de .PdfObjectName ,gsDict _de .PdfObject )error {if _gddg .ExtGState ==nil {_gddg .ExtGState =_de .MakeDict ();};_fgagge :=_gddg .ExtGState ;_affga ,_gffdg :=_de .TraceToDirectObject (_fgagge ).(*_de .PdfObjectDictionary );if !_gffdg {_dg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_fgagge ,_de .TraceToDirectObject (_fgagge ));return _de .ErrTypeError ;};_affga .Set (gsName ,gsDict );return nil ;};func (_daeff PdfFont )actualFont ()pdfFont {if _daeff ._fgef ==nil {_dg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_daeff );};return _daeff ._fgef ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_de .PdfIndirectObject ;SV *_de .PdfIndirectObject ;};func (_cbfgg fontCommon )fontFlags ()int {if _cbfgg ._ccbgb ==nil {return 0;};return _cbfgg ._ccbgb ._gagf ;};func (_gdgf *PdfReader )newPdfOutlineItemFromIndirectObject (_baffb *_de .PdfIndirectObject )(*PdfOutlineItem ,error ){_efcbfc ,_bccbe :=_baffb .PdfObject .(*_de .PdfObjectDictionary );if !_bccbe {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfggc :=NewPdfOutlineItem ();_dfffc :=_efcbfc .Get ("\u0054\u0069\u0074l\u0065");if _dfffc ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_dbad ,_edefg :=_de .GetString (_dfffc );if !_edefg {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_dfffc );};_gfggc .Title =_dbad ;if _adee :=_efcbfc .Get ("\u0043\u006f\u0075n\u0074");_adee !=nil {_ffdfg ,_gbeff :=_adee .(*_de .PdfObjectInteger );if !_gbeff {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_adee );};_afccg :=int64 (*_ffdfg );_gfggc .Count =&_afccg ;};if _faeg :=_efcbfc .Get ("\u0044\u0065\u0073\u0074");_faeg !=nil {_gfggc .Dest =_de .ResolveReference (_faeg );if !_gdgf ._agdga {_dfgaf :=_gdgf .traverseObjectData (_gfggc .Dest );if _dfgaf !=nil {return nil ,_dfgaf ;};};};if _cfae :=_efcbfc .Get ("\u0041");_cfae !=nil {_gfggc .A =_de .ResolveReference (_cfae );if !_gdgf ._agdga {_eccce :=_gdgf .traverseObjectData (_gfggc .A );if _eccce !=nil {return nil ,_eccce ;};};};if _fcbge :=_efcbfc .Get ("\u0053\u0045");_fcbge !=nil {_gfggc .SE =nil ;};if _gfee :=_efcbfc .Get ("\u0043");_gfee !=nil {_gfggc .C =_de .ResolveReference (_gfee );};if _ebbda :=_efcbfc .Get ("\u0046");_ebbda !=nil {_gfggc .F =_de .ResolveReference (_ebbda );};return _gfggc ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bdab *PdfField )Flags ()FieldFlag {var _cbff FieldFlag ;_afgaa ,_caed :=_bdab .inherit (func (_dggbb *PdfField )bool {if _dggbb .Ff !=nil {_cbff =FieldFlag (*_bdab .Ff );return true ;};return false ;});if _caed !=nil {_dg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_caed );};if !_afgaa {_dg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cbff ;};func (_dfgc *PdfAppender )updateObjectsDeep (_fffc _de .PdfObject ,_bba map[_de .PdfObject ]struct{}){if _bba ==nil {_bba =map[_de .PdfObject ]struct{}{};};if _ ,_cda :=_bba [_fffc ];_cda ||_fffc ==nil {return ;};_bba [_fffc ]=struct{}{};_bgea :=_de .ResolveReferencesDeep (_fffc ,_dfgc ._cdefb );if _bgea !=nil {_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgea );};switch _afad :=_fffc .(type ){case *_de .PdfIndirectObject :switch {case _afad .GetParser ()==_dfgc ._effbd ._bffa :return ;case _afad .GetParser ()==_dfgc .Reader ._bffa :_cfag ,_ :=_dfgc ._effbd .GetIndirectObjectByNumber (int (_afad .ObjectNumber ));_bbcca ,_cdac :=_cfag .(*_de .PdfIndirectObject );if _cdac &&_bbcca !=nil {if _bbcca .PdfObject !=_afad .PdfObject &&_bbcca .PdfObject .WriteString ()!=_afad .PdfObject .WriteString (){_dfgc .addNewObject (_fffc );_dfgc ._dafe [_fffc ]=_afad .ObjectNumber ;};};default:_dfgc .addNewObject (_fffc );};_dfgc .updateObjectsDeep (_afad .PdfObject ,_bba );case *_de .PdfObjectArray :for _ ,_dgcg :=range _afad .Elements (){_dfgc .updateObjectsDeep (_dgcg ,_bba );};case *_de .PdfObjectDictionary :for _ ,_cdbbc :=range _afad .Keys (){_dfgc .updateObjectsDeep (_afad .Get (_cdbbc ),_bba );};case *_de .PdfObjectStreams :if _afad .GetParser ()!=_dfgc ._effbd ._bffa {for _ ,_gaae :=range _afad .Elements (){_dfgc .updateObjectsDeep (_gaae ,_bba );};};case *_de .PdfObjectStream :switch {case _afad .GetParser ()==_dfgc ._effbd ._bffa :return ;case _afad .GetParser ()==_dfgc .Reader ._bffa :if _fada ,_gfaf :=_dfgc ._effbd ._bffa .LookupByReference (_afad .PdfObjectReference );_gfaf ==nil {var _faab bool ;if _gfge ,_adae :=_de .GetStream (_fada );_adae &&_eff .Equal (_gfge .Stream ,_afad .Stream ){_faab =true ;};if _acea ,_cccg :=_de .GetDict (_fada );_faab &&_cccg {_faab =_acea .WriteString ()==_afad .PdfObjectDictionary .WriteString ();};if _faab {return ;};};if _afad .ObjectNumber !=0{_dfgc ._dafe [_fffc ]=_afad .ObjectNumber ;};default:if _ ,_ebb :=_dfgc ._cgge [_fffc ];!_ebb {_dfgc .addNewObject (_fffc );};};_dfgc .updateObjectsDeep (_afad .PdfObjectDictionary ,_bba );};};

// ToPdfObject implements interface PdfModel.
func (_eceb *PdfAnnotationWidget )ToPdfObject ()_de .PdfObject {_eceb .PdfAnnotation .ToPdfObject ();_afcc :=_eceb ._egag ;_feae :=_afcc .PdfObject .(*_de .PdfObjectDictionary );if _eceb ._fbg {return _afcc ;};_eceb ._fbg =true ;_feae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_feae .SetIfNotNil ("\u0048",_eceb .H );_feae .SetIfNotNil ("\u004d\u004b",_eceb .MK );_feae .SetIfNotNil ("\u0041",_eceb .A );_feae .SetIfNotNil ("\u0041\u0041",_eceb .AA );_feae .SetIfNotNil ("\u0042\u0053",_eceb .BS );_cbb :=_eceb .Parent ;if _eceb ._bgf !=nil {if _eceb ._bgf ._bddd ==_eceb ._egag {_eceb ._bgf .ToPdfObject ();};_cbb =_eceb ._bgf .GetContainingPdfObject ();};if _cbb !=_afcc {_feae .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbb );};_eceb ._fbg =false ;return _afcc ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _de .PdfObject ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_bbff DefaultImageHandler )NewGrayImageFromGoImage (goimg _dd .Image )(*Image ,error ){_gcaaf :=goimg .Bounds ();_acaba :=&Image {Width :int64 (_gcaaf .Dx ()),Height :int64 (_gcaaf .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _decgf :=goimg .(type ){case *_dd .Gray :if len (_decgf .Pix )!=_gcaaf .Dx ()*_gcaaf .Dy (){_eaaga ,_cfcc :=_bdb .GrayConverter .Convert (goimg );if _cfcc !=nil {return nil ,_cfcc ;};_acaba .Data =_eaaga .Pix ();}else {_acaba .Data =_decgf .Pix ;};case *_dd .Gray16 :_acaba .BitsPerComponent =16;if len (_decgf .Pix )!=_gcaaf .Dx ()*_gcaaf .Dy ()*2{_cebgc ,_agaca :=_bdb .Gray16Converter .Convert (goimg );if _agaca !=nil {return nil ,_agaca ;};_acaba .Data =_cebgc .Pix ();}else {_acaba .Data =_decgf .Pix ;};default:_fcde ,_edcca :=_bdb .GrayConverter .Convert (goimg );if _edcca !=nil {return nil ,_edcca ;};_acaba .Data =_fcde .Pix ();};return _acaba ,nil ;};func (_gdbg *PdfReader )newPdfAnnotation3DFromDict (_cae *_de .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fecd :=PdfAnnotation3D {};_fecd .T3DD =_cae .Get ("\u0033\u0044\u0044");_fecd .T3DV =_cae .Get ("\u0033\u0044\u0056");_fecd .T3DA =_cae .Get ("\u0033\u0044\u0041");_fecd .T3DI =_cae .Get ("\u0033\u0044\u0049");_fecd .T3DB =_cae .Get ("\u0033\u0044\u0042");return &_fecd ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_eea :=&PdfAction {};_eea ._daa =_de .MakeIndirectObject (_de .MakeDict ());return _eea ;};func _cgacc ()string {if len (_bgdgc )> 0{return _bgdgc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// String returns a human readable description of `fontfile`.
func (_aegc *fontFile )String ()string {_gfaea :="\u005b\u004e\u006f\u006e\u0065\u005d";if _aegc ._cfdc !=nil {_gfaea =_aegc ._cfdc .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_aegc ._bafgc ,_gfaea );};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bebe FieldFlag )Has (fl FieldFlag )bool {return (_bebe .Mask ()&fl .Mask ())> 0};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _de .PdfObject ;Name _de .PdfObject ;State _de .PdfObject ;StateModel _de .PdfObject ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fddb *PdfColorspaceLab )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffbgc ,_facf :=_de .GetNumbersAsFloat (objects );if _facf !=nil {return nil ,_facf ;};return _fddb .ColorFromFloats (_ffbgc );};func (_bdcb *PdfReader )newPdfAnnotationInkFromDict (_aba *_de .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ccgg :=PdfAnnotationInk {};_cdefd ,_abbf :=_bdcb .newPdfAnnotationMarkupFromDict (_aba );if _abbf !=nil {return nil ,_abbf ;};_ccgg .PdfAnnotationMarkup =_cdefd ;_ccgg .InkList =_aba .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ccgg .BS =_aba .Get ("\u0042\u0053");return &_ccgg ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_abab *PdfPage )AppendContentStream (contentStr string )error {_fffegge ,_gccf :=_abab .GetContentStreams ();if _gccf !=nil {return _gccf ;};if len (_fffegge )==0{_fffegge =[]string {contentStr };return _abab .SetContentStreams (_fffegge ,_de .NewFlateEncoder ());};var _cabea _eff .Buffer ;_cabea .WriteString (_fffegge [len (_fffegge )-1]);_cabea .WriteString ("\u000a");_cabea .WriteString (contentStr );_fffegge [len (_fffegge )-1]=_cabea .String ();return _abab .SetContentStreams (_fffegge ,_de .NewFlateEncoder ());};func (_eaa *PdfReader )newPdfActionGotoFromDict (_dff *_de .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dff .Get ("\u0044")},nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fceg :=NewPdfAnnotation ();_cfba :=&PdfAnnotationPolyLine {};_cfba .PdfAnnotation =_fceg ;_cfba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fceg .SetContext (_cfba );return _cfba ;};func (_aceb *PdfReader )newPdfActionTransFromDict (_ggg *_de .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ggg .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_cdgb *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _cdgb .RunesToCharcodeBytes ([]rune (str ));};func _baee (_dbbgc *XObjectImage )error {if _dbbgc .SMask ==nil {return nil ;};_dccdb ,_agdeba :=_dbbgc .SMask .(*_de .PdfObjectStream );if !_agdeba {_dg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _de .ErrTypeError ;};_dgfb :=_dccdb .PdfObjectDictionary ;_gfbcg :=_dgfb .Get ("\u004d\u0061\u0074t\u0065");if _gfbcg ==nil {return nil ;};_bgge ,_fdded :=_fcba (_gfbcg .(*_de .PdfObjectArray ));if _fdded !=nil {return _fdded ;};_abgbc :=_de .MakeArrayFromFloats ([]float64 {_bgge });_dgfb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_abgbc );return nil ;};func _bfac ()_a .Time {return _gcabb };type fontFile struct{_bafgc string ;_edeae string ;_cfdc _ed .SimpleEncoder ;};func (_eacdf *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _bccbge []*PdfFieldSignature ;for _ ,_bfdc :=range _eacdf .AllFields (){switch _edbfe :=_bfdc .GetContext ().(type ){case *PdfFieldSignature :_gcae :=_edbfe ;_bccbge =append (_bccbge ,_gcae );};};return _bccbge ;};func (_gebf *PdfReader )newPdfPageFromDict (_fabcg *_de .PdfObjectDictionary )(*PdfPage ,error ){_ebec :=NewPdfPage ();_ebec ._abdg =_fabcg ;_eddbfd :=*_fabcg ;_bfff ,_bbfcg :=_eddbfd .Get ("\u0054\u0079\u0070\u0065").(*_de .PdfObjectName );if !_bbfcg {return nil ,_eae .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_bfff !="\u0050\u0061\u0067\u0065"{return nil ,_eae .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _aedfc :=_eddbfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_aedfc !=nil {_ebec .Parent =_aedfc ;};if _febbd :=_eddbfd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_febbd !=nil {_cgbedb ,_gdbe :=_de .GetString (_febbd );if !_gdbe {return nil ,_eae .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_bedff ,_beac :=NewPdfDate (_cgbedb .Str ());if _beac !=nil {return nil ,_beac ;};_ebec .LastModified =&_bedff ;};if _ccdd :=_eddbfd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ccdd !=nil &&!_de .IsNullObject (_ccdd ){_aaaf ,_aebcc :=_de .GetDict (_ccdd );if !_aebcc {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ccdd );};var _aacfb error ;_ebec .Resources ,_aacfb =NewPdfPageResourcesFromDict (_aaaf );if _aacfb !=nil {return nil ,_aacfb ;};}else {_gcgfa ,_dbecd :=_ebec .getParentResources ();if _dbecd !=nil {return nil ,_dbecd ;};if _gcgfa ==nil {_gcgfa =NewPdfPageResources ();};_ebec .Resources =_gcgfa ;};if _cffa :=_eddbfd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cffa !=nil {_ggaag ,_bbbfc :=_de .GetArray (_cffa );if !_bbbfc {return nil ,_eae .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _effee error ;_ebec .MediaBox ,_effee =NewPdfRectangle (*_ggaag );if _effee !=nil {return nil ,_effee ;};};if _aecg :=_eddbfd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_aecg !=nil {_fbeef ,_afca :=_de .GetArray (_aecg );if !_afca {return nil ,_eae .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _affdc error ;_ebec .CropBox ,_affdc =NewPdfRectangle (*_fbeef );if _affdc !=nil {return nil ,_affdc ;};};if _edege :=_eddbfd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_edege !=nil {_gecg ,_fefc :=_de .GetArray (_edege );if !_fefc {return nil ,_eae .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _aabdb error ;_ebec .BleedBox ,_aabdb =NewPdfRectangle (*_gecg );if _aabdb !=nil {return nil ,_aabdb ;};};if _dccad :=_eddbfd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_dccad !=nil {_efdcd ,_facc :=_de .GetArray (_dccad );if !_facc {return nil ,_eae .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _dcacc error ;_ebec .TrimBox ,_dcacc =NewPdfRectangle (*_efdcd );if _dcacc !=nil {return nil ,_dcacc ;};};if _aaaa :=_eddbfd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_aaaa !=nil {_bbdae ,_eccde :=_de .GetArray (_aaaa );if !_eccde {return nil ,_eae .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _cbgba error ;_ebec .ArtBox ,_cbgba =NewPdfRectangle (*_bbdae );if _cbgba !=nil {return nil ,_cbgba ;};};if _fdgfd :=_eddbfd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fdgfd !=nil {_ebec .BoxColorInfo =_fdgfd ;};if _cacga :=_eddbfd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cacga !=nil {_ebec .Contents =_cacga ;};if _agaf :=_eddbfd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_agaf !=nil {_bfcd ,_dadg :=_de .GetInt (_agaf );if !_dadg {return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_adfdc :=int64 (*_bfcd );_ebec .Rotate =&_adfdc ;};if _cgbgb :=_eddbfd .Get ("\u0047\u0072\u006fu\u0070");_cgbgb !=nil {_ebec .Group =_cgbgb ;};if _dgede :=_eddbfd .Get ("\u0054\u0068\u0075m\u0062");_dgede !=nil {_ebec .Thumb =_dgede ;};if _agfaf :=_eddbfd .Get ("\u0042");_agfaf !=nil {_ebec .B =_agfaf ;};if _bbea :=_eddbfd .Get ("\u0044\u0075\u0072");_bbea !=nil {_ebec .Dur =_bbea ;};if _adgde :=_eddbfd .Get ("\u0054\u0072\u0061n\u0073");_adgde !=nil {_ebec .Trans =_adgde ;};if _bccd :=_eddbfd .Get ("\u0041\u0041");_bccd !=nil {_ebec .AA =_bccd ;};if _dgfg :=_eddbfd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dgfg !=nil {_ebec .Metadata =_dgfg ;};if _cebae :=_eddbfd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cebae !=nil {_ebec .PieceInfo =_cebae ;};if _gaefg :=_eddbfd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gaefg !=nil {_ebec .StructParents =_gaefg ;};if _dcebe :=_eddbfd .Get ("\u0049\u0044");_dcebe !=nil {_ebec .ID =_dcebe ;};if _bbgbcf :=_eddbfd .Get ("\u0050\u005a");_bbgbcf !=nil {_ebec .PZ =_bbgbcf ;};if _gfebc :=_eddbfd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_gfebc !=nil {_ebec .SeparationInfo =_gfebc ;};if _adcea :=_eddbfd .Get ("\u0054\u0061\u0062\u0073");_adcea !=nil {_ebec .Tabs =_adcea ;};if _cbbec :=_eddbfd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_cbbec !=nil {_ebec .TemplateInstantiated =_cbbec ;};if _abgg :=_eddbfd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_abgg !=nil {_ebec .PresSteps =_abgg ;};if _fdbg :=_eddbfd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_fdbg !=nil {_ebec .UserUnit =_fdbg ;};if _eccag :=_eddbfd .Get ("\u0056\u0050");_eccag !=nil {_ebec .VP =_eccag ;};if _fcdbd :=_eddbfd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fcdbd !=nil {_ebec .Annots =_fcdbd ;};_ebec ._dgde =_gebf ;return _ebec ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_dfcfd :=&XObjectForm {};_beada :=&_de .PdfObjectStream {};_beada .PdfObjectDictionary =_de .MakeDict ();_dfcfd ._bdda =_beada ;return _dfcfd ;};func (_ebd *PdfReader )newPdfActionSubmitFormFromDict (_cdcg *_de .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_bag ,_afbc :=_gfg (_cdcg .Get ("\u0046"));if _afbc !=nil {return nil ,_afbc ;};return &PdfActionSubmitForm {F :_bag ,Fields :_cdcg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cdcg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_dfee *Outline )Insert (index uint ,item *OutlineItem ){_daec :=uint (len (_dfee .Entries ));if index > _daec {index =_daec ;};_dfee .Entries =append (_dfee .Entries [:index ],append ([]*OutlineItem {item },_dfee .Entries [index :]...)...);};func _gabge ()_a .Time {return _bbfde };func _gefb (_ffecde *_de .PdfObjectDictionary ,_ddada *fontCommon )(*pdfFontType0 ,error ){_cfdaf ,_bege :=_de .GetArray (_ffecde .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_bege {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ddada );return nil ,_de .ErrRangeError ;};if _cfdaf .Len ()!=1{_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_cfdaf .Len ());return nil ,_de .ErrRangeError ;};_gbegf ,_aaea :=_gcbd (_cfdaf .Get (0),false );if _aaea !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_aaea ,_ddada );return nil ,_aaea ;};_cdgda :=_cgab (_ddada );_cdgda .DescendantFont =_gbegf ;_cbac ,_bege :=_de .GetNameVal (_ffecde .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bege {if _cbac =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cbac =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_cdgda ._fcbd =_ed .NewIdentityTextEncoder (_cbac );}else if _bf .IsPredefinedCMap (_cbac ){_cdgda ._abgb ,_aaea =_bf .LoadPredefinedCMap (_cbac );if _aaea !=nil {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cbac ,_aaea );};}else {_dg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cbac );};};if _acbf :=_gbegf .baseFields ()._cddfb ;_acbf !=nil {if _edef :=_acbf .Name ();_edef =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_edef =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_edef =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_edef =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_cdgda ._fcbd =_ed .NewCMapEncoder (_cbac ,_cdgda ._abgb ,_acbf );};};return _cdgda ,nil ;};

// SetAnnotations sets the annotations list.
func (_efdef *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_efdef ._ffddd =annotations };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_dacbcb pdfFontSimple )GetCharMetrics (code _ed .CharCode )(_eba .CharMetrics ,bool ){if _ffab ,_edab :=_dacbcb ._dcgfb [code ];_edab {return _eba .CharMetrics {Wx :_ffab },true ;};if _eba .IsStdFont (_eba .StdFontName (_dacbcb ._fbaf )){return _eba .CharMetrics {Wx :250},true ;};return _eba .CharMetrics {},false ;};

// B returns the value of the blue component of the color.
func (_bggf *PdfColorDeviceRGB )B ()float64 {return float64 (_bggf [2])};func (_bgbbf *PdfPattern )getDict ()*_de .PdfObjectDictionary {if _ggca ,_ecgeb :=_bgbbf ._dddfb .(*_de .PdfIndirectObject );_ecgeb {_feaf ,_afbfa :=_ggca .PdfObject .(*_de .PdfObjectDictionary );if !_afbfa {return nil ;};return _feaf ;}else if _eccg ,_bgcce :=_bgbbf ._dddfb .(*_de .PdfObjectStream );_bgcce {return _eccg .PdfObjectDictionary ;}else {_dg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_bgbbf ._dddfb );return nil ;};};

// GetContentStream returns the pattern cell's content stream
func (_gaefe *PdfTilingPattern )GetContentStream ()([]byte ,error ){_beeed ,_ ,_gdgbd :=_gaefe .GetContentStreamWithEncoder ();return _beeed ,_gdgbd ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _de .PdfObject )(_de .PdfObjectName ,error ){var _acae *_de .PdfObjectName ;var _eaca *_de .PdfObjectArray ;if _fbbfc ,_cbfb :=obj .(*_de .PdfIndirectObject );_cbfb {if _addgf ,_dbb :=_fbbfc .PdfObject .(*_de .PdfObjectArray );_dbb {_eaca =_addgf ;}else if _ddfd ,_daba :=_fbbfc .PdfObject .(*_de .PdfObjectName );_daba {_acae =_ddfd ;};}else if _bdbb ,_gfgb :=obj .(*_de .PdfObjectArray );_gfgb {_eaca =_bdbb ;}else if _fgeg ,_ffa :=obj .(*_de .PdfObjectName );_ffa {_acae =_fgeg ;};if _acae !=nil {switch *_acae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_acae ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_acae ,nil ;};};if _eaca !=nil &&_eaca .Len ()> 0{if _ecgg ,_cgaab :=_eaca .Get (0).(*_de .PdfObjectName );_cgaab {switch *_ecgg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _eaca .Len ()==1{return *_ecgg ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_ecgg ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_ecgg ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_ecgg ,nil ;};};};return "",nil ;};func (_ecedd *PdfWriter )writeBytes (_ebcda []byte ){if _ecedd ._fgbec !=nil {return ;};_dfaac ,_bdfa :=_ecedd ._gdbfd .Write (_ebcda );_ecedd ._ggdb +=int64 (_dfaac );_ecedd ._fgbec =_bdfa ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};func _gbba (_edgef _de .PdfObject )(*PdfColorspaceDeviceN ,error ){_deef :=NewPdfColorspaceDeviceN ();if _bfdf ,_acd :=_edgef .(*_de .PdfIndirectObject );_acd {_deef ._cddfg =_bfdf ;};_edgef =_de .TraceToDirectObject (_edgef );_dgdg ,_eddbf :=_edgef .(*_de .PdfObjectArray );if !_eddbf {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _dgdg .Len ()!=4&&_dgdg .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_edgef =_dgdg .Get (0);_afffg ,_eddbf :=_edgef .(*_de .PdfObjectName );if !_eddbf {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_afffg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_edgef =_dgdg .Get (1);_edgef =_de .TraceToDirectObject (_edgef );_gbbdf ,_eddbf :=_edgef .(*_de .PdfObjectArray );if !_eddbf {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_deef .ColorantNames =_gbbdf ;_edgef =_dgdg .Get (2);_gbgf ,_efcc :=NewPdfColorspaceFromPdfObject (_edgef );if _efcc !=nil {return nil ,_efcc ;};_deef .AlternateSpace =_gbgf ;_gedd ,_efcc :=_bbfe (_dgdg .Get (3));if _efcc !=nil {return nil ,_efcc ;};_deef .TintTransform =_gedd ;if _dgdg .Len ()==5{_dggc ,_ebbc :=_ggadb (_dgdg .Get (4));if _ebbc !=nil {return nil ,_ebbc ;};_deef .Attributes =_dggc ;};return _deef ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ecafc *PdfReader )Inspect ()(map[string ]int ,error ){return _ecafc ._bffa .Inspect ()};func (_fbb *PdfReader )newPdfAnnotationWidgetFromDict (_gcgf *_de .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_afac :=PdfAnnotationWidget {};_afac .H =_gcgf .Get ("\u0048");_afac .MK =_gcgf .Get ("\u004d\u004b");_afac .A =_gcgf .Get ("\u0041");_afac .AA =_gcgf .Get ("\u0041\u0041");_afac .BS =_gcgf .Get ("\u0042\u0053");_afac .Parent =_gcgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_afac ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gdafc *Outline )ToPdfOutline ()*PdfOutline {_adcg :=NewPdfOutline ();var _fbdca []*PdfOutlineItem ;var _fgcbd int64 ;var _dabag *PdfOutlineItem ;for _ ,_agdbg :=range _gdafc .Entries {_ceedd ,_feba :=_agdbg .ToPdfOutlineItem ();_ceedd .Parent =&_adcg .PdfOutlineTreeNode ;if _dabag !=nil {_dabag .Next =&_ceedd .PdfOutlineTreeNode ;_ceedd .Prev =&_dabag .PdfOutlineTreeNode ;};_fbdca =append (_fbdca ,_ceedd );_fgcbd +=_feba ;_dabag =_ceedd ;};_geccb :=int64 (len (_fbdca ));_fgcbd +=int64 (_geccb );if _geccb > 0{_adcg .First =&_fbdca [0].PdfOutlineTreeNode ;_adcg .Last =&_fbdca [_geccb -1].PdfOutlineTreeNode ;_adcg .Count =&_fgcbd ;};return _adcg ;};func (_agbbe *PdfReader )lookupPageByObject (_gfce _de .PdfObject )(*PdfPage ,error ){return nil ,_eae .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_eacdg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dcgd :=&PdfColorspaceCalGray {};_dcgd .BlackPoint =[]float64 {0.0,0.0,0.0};_dcgd .Gamma =1;return _dcgd ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _de .PdfObject ;T _de .PdfObject ;Operation _de .PdfObject ;};

// ToInteger convert to an integer format.
func (_bcgb *PdfColorLab )ToInteger (bits int )[3]uint32 {_febdb :=_ac .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_febdb *_bcgb .L ()),uint32 (_febdb *_bcgb .A ()),uint32 (_febdb *_bcgb .B ())};};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_dfged []_de .PdfObject )([]_de .PdfObject ,error );};

// AddFont adds a font dictionary to the Font resources.
func (_ffdce *PdfPage )AddFont (name _de .PdfObjectName ,font _de .PdfObject )error {if _ffdce .Resources ==nil {_ffdce .Resources =NewPdfPageResources ();};if _ffdce .Resources .Font ==nil {_ffdce .Resources .Font =_de .MakeDict ();};_cbed ,_gffee :=_de .TraceToDirectObject (_ffdce .Resources .Font ).(*_de .PdfObjectDictionary );if !_gffee {_dg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_de .TraceToDirectObject (_ffdce .Resources .Font ));return _eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbed .Set (name ,font );return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bbda *PdfFieldButton )GetType ()ButtonType {_aceg :=ButtonTypeCheckbox ;if _bbda .Ff !=nil {if (uint32 (*_bbda .Ff )&FieldFlagPushbutton .Mask ())> 0{_aceg =ButtonTypePush ;}else if (uint32 (*_bbda .Ff )&FieldFlagRadio .Mask ())> 0{_aceg =ButtonTypeRadio ;};};return _aceg ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_de .PdfObjectArray ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_ffbg :=PdfColorCalGray (grayVal );return &_ffbg ;};

// SetContext set the sub annotation (context).
func (_cfgc *PdfShading )SetContext (ctx PdfModel ){_cfgc ._afddf =ctx };

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gbea *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ed .CharCode )(_agdf []rune ,_bcaf ,_bgff int ){_abgce ,_bcaf ,_bgff :=_gbea .CharcodesToStrings (charcodes );return []rune (_fe .Join (_abgce ,"")),_bcaf ,_bgff ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cgbaeb :=&PdfOutlineItem {_ddadaa :_de .MakeIndirectObject (_de .MakeDict ())};_cgbaeb ._deec =_cgbaeb ;return _cgbaeb ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_de .PdfObjectName ;Colorants _de .PdfObject ;Process _de .PdfObject ;MixingHints _de .PdfObject ;_afbd *_de .PdfIndirectObject ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_affg *PdfFieldButton )IsRadio ()bool {return _affg .GetType ()==ButtonTypeRadio };

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ge PdfModel ;Type _de .PdfObject ;S _de .PdfObject ;Next _de .PdfObject ;_daa *_de .PdfIndirectObject ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _de .PdfObject ;BS _de .PdfObject ;LE _de .PdfObject ;IC _de .PdfObject ;LL _de .PdfObject ;LLE _de .PdfObject ;Cap _de .PdfObject ;IT _de .PdfObject ;LLO _de .PdfObject ;CP _de .PdfObject ;Measure _de .PdfObject ;CO _de .PdfObject ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _a .Time ){_bbfde =modifiedDate };

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _de .PdfObject ;NewWindow _de .PdfObject ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_efffa :=NewPdfAnnotation ();_ddg :=&PdfAnnotationTrapNet {};_ddg .PdfAnnotation =_efffa ;_efffa .SetContext (_ddg );return _ddg ;};

// StdFontName represents name of a standard font.
type StdFontName =_eba .StdFontName ;func (_fgba *PdfReader )newPdfAnnotationStrikeOut (_eceg *_de .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gbdf :=PdfAnnotationStrikeOut {};_gbbd ,_daab :=_fgba .newPdfAnnotationMarkupFromDict (_eceg );if _daab !=nil {return nil ,_daab ;};_gbdf .PdfAnnotationMarkup =_gbbd ;_gbdf .QuadPoints =_eceg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gbdf ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_aabd *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject implements interface PdfModel.
func (_eeg *PdfAnnotationText )ToPdfObject ()_de .PdfObject {_eeg .PdfAnnotation .ToPdfObject ();_deed :=_eeg ._egag ;_bea :=_deed .PdfObject .(*_de .PdfObjectDictionary );if _eeg .PdfAnnotationMarkup !=nil {_eeg .PdfAnnotationMarkup .appendToPdfDictionary (_bea );};_bea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0054\u0065\u0078\u0074"));_bea .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eeg .Open );_bea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eeg .Name );_bea .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eeg .State );_bea .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_eeg .StateModel );return _deed ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bccc :=NewPdfAnnotation ();_ff :=&PdfAnnotationSound {};_ff .PdfAnnotation =_bccc ;_ff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bccc .SetContext (_ff );return _ff ;};

// SetOCProperties sets the optional content properties.
func (_faafe *PdfWriter )SetOCProperties (ocProperties _de .PdfObject )error {_efgc :=_faafe ._acdea ;if ocProperties !=nil {_dg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_efgc .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _faafe .addObjects (ocProperties );};return nil ;};

// Subtype returns the font's "Subtype" field.
func (_bgefce *PdfFont )Subtype ()string {_eggb :=_bgefce .baseFields ()._dgbc ;if _afef ,_badc :=_bgefce ._fgef .(*pdfFontType0 );_badc {_eggb =_eggb +"\u003a"+_afef .DescendantFont .Subtype ();};return _eggb ;};func (_ccdcb *PdfWriter )writeString (_ffegf string ){if _ccdcb ._fgbec !=nil {return ;};_fcddb ,_fbcab :=_ccdcb ._gdbfd .WriteString (_ffegf );_ccdcb ._ggdb +=int64 (_fcddb );_ccdcb ._fgbec =_fbcab ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bdde *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cfgg []float64 ;for _badef :=0;_badef < _bdde .GetNumComponents ();_badef ++{_cfgg =append (_cfgg ,0.0,1.0);};return _cfgg ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _de .PdfObject )(*PdfFont ,error ){return _gcbd (fontObj ,true )};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ggbe :=PdfColorCalRGB {a ,b ,c };return &_ggbe ;};func _fgad (_gdbde string )map[string ]string {_acdbd :=_bbec .Split (_gdbde ,-1);_faed :=map[string ]string {};for _ ,_gdefd :=range _acdbd {_caab :=_bede .FindStringSubmatch (_gdefd );if _caab ==nil {continue ;};_agfb ,_abba :=_caab [1],_caab [2];_faed [_agfb ]=_abba ;};return _faed ;};func _cffeb (_fbad _de .PdfObject )(*PdfFunctionType2 ,error ){_acbd :=&PdfFunctionType2 {};var _befbb *_de .PdfObjectDictionary ;if _ebfa ,_eddg :=_fbad .(*_de .PdfIndirectObject );_eddg {_bgeag ,_gfdf :=_ebfa .PdfObject .(*_de .PdfObjectDictionary );if !_gfdf {return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acbd ._gcgcaca =_ebfa ;_befbb =_bgeag ;}else if _cabg ,_fafg :=_fbad .(*_de .PdfObjectDictionary );_fafg {_befbb =_cabg ;}else {return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_befbb .String ());_aegd ,_aeabb :=_de .TraceToDirectObject (_befbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_aeabb {_dg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aegd .Len ()< 0||_aegd .Len ()%2!=0{_dg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_eae .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cbbd ,_caecg :=_aegd .ToFloat64Array ();if _caecg !=nil {return nil ,_caecg ;};_acbd .Domain =_cbbd ;_aegd ,_aeabb =_de .TraceToDirectObject (_befbb .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if _aeabb {if _aegd .Len ()< 0||_aegd .Len ()%2!=0{return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cgdcba ,_baaeb :=_aegd .ToFloat64Array ();if _baaeb !=nil {return nil ,_baaeb ;};_acbd .Range =_cgdcba ;};_aegd ,_aeabb =_de .TraceToDirectObject (_befbb .Get ("\u0043\u0030")).(*_de .PdfObjectArray );if _aeabb {_dced ,_eeecg :=_aegd .ToFloat64Array ();if _eeecg !=nil {return nil ,_eeecg ;};_acbd .C0 =_dced ;};_aegd ,_aeabb =_de .TraceToDirectObject (_befbb .Get ("\u0043\u0031")).(*_de .PdfObjectArray );if _aeabb {_fdgec ,_dddfd :=_aegd .ToFloat64Array ();if _dddfd !=nil {return nil ,_dddfd ;};_acbd .C1 =_fdgec ;};if len (_acbd .C0 )!=len (_acbd .C1 ){_dg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_de .ErrRangeError ;};N ,_caecg :=_de .GetNumberAsFloat (_de .TraceToDirectObject (_befbb .Get ("\u004e")));if _caecg !=nil {_dg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_befbb .String ());return nil ,_caecg ;};_acbd .N =N ;return _acbd ,nil ;};

// SetDecode sets the decode image float slice.
func (_dgged *Image )SetDecode (decode []float64 ){_dgged ._fbdfg =decode };

// GetCharMetrics returns the char metrics for character code `code`.
func (_cggeg pdfFontType0 )GetCharMetrics (code _ed .CharCode )(_eba .CharMetrics ,bool ){if _cggeg .DescendantFont ==nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cggeg );return _eba .CharMetrics {},false ;};return _cggeg .DescendantFont .GetCharMetrics (code );};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_ddccc *PdfFieldButton )IsCheckbox ()bool {return _ddccc .GetType ()==ButtonTypeCheckbox };

// ColorToRGB converts a Lab color to an RGB color.
func (_bcef *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebee :=func (_agcc float64 )float64 {if _agcc >=6.0/29{return _agcc *_agcc *_agcc ;};return 108.0/841*(_agcc -4/29);};_cgfd ,_ecfa :=color .(*PdfColorLab );if !_ecfa {_dg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cgfd .L ();AStar :=_cgfd .A ();BStar :=_cgfd .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_bcef .WhitePoint [0]*_ebee (L );Y :=_bcef .WhitePoint [1]*_ebee (M );Z :=_bcef .WhitePoint [2]*_ebee (N );_afeb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_adfd :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdbd :=0.055648*X +-0.204043*Y +1.057311*Z ;_afeb =_ac .Min (_ac .Max (_afeb ,0),1.0);_adfd =_ac .Min (_ac .Max (_adfd ,0),1.0);_gdbd =_ac .Min (_ac .Max (_gdbd ,0),1.0);return NewPdfColorDeviceRGB (_afeb ,_adfd ,_gdbd ),nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dbe *PdfAnnotation )GetContainingPdfObject ()_de .PdfObject {return _dbe ._egag };

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fab :=NewPdfAction ();_aa :=&PdfActionSound {};_aa .PdfAction =_fab ;_fab .SetContext (_aa );return _aa ;};func (_gdcbe *PdfReader )buildOutlineTree (_abce _de .PdfObject ,_ceedg *PdfOutlineTreeNode ,_bcgg *PdfOutlineTreeNode ,_dccf map[_de .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _dccf ==nil {_dccf =map[_de .PdfObject ]struct{}{};};_dccf [_abce ]=struct{}{};_dedgd ,_cdgff :=_abce .(*_de .PdfIndirectObject );if !_cdgff {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_abce );};_gaged ,_baaa :=_dedgd .PdfObject .(*_de .PdfObjectDictionary );if !_baaa {return nil ,nil ,_eae .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_gaged ,_dedgd ,_dedgd );if _dbbac :=_gaged .Get ("\u0054\u0069\u0074l\u0065");_dbbac !=nil {_afdeb ,_aceed :=_gdcbe .newPdfOutlineItemFromIndirectObject (_dedgd );if _aceed !=nil {return nil ,nil ,_aceed ;};_afdeb .Parent =_ceedg ;_afdeb .Prev =_bcgg ;_afbge :=_de .ResolveReference (_gaged .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_fgdbb :=_dccf [_afbge ];_afbge !=nil &&_afbge !=_dedgd &&!_fgdbb {if !_de .IsNullObject (_afbge ){_dcbb ,_bbaa ,_dedb :=_gdcbe .buildOutlineTree (_afbge ,&_afdeb .PdfOutlineTreeNode ,nil ,_dccf );if _dedb !=nil {_dg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_dedb );}else {_afdeb .First =_dcbb ;_afdeb .Last =_bbaa ;};};};_eegdb :=_de .ResolveReference (_gaged .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ggbed :=_dccf [_eegdb ];_eegdb !=nil &&_eegdb !=_dedgd &&!_ggbed {if !_de .IsNullObject (_eegdb ){_dgbe ,_cfgbc ,_agebd :=_gdcbe .buildOutlineTree (_eegdb ,_ceedg ,&_afdeb .PdfOutlineTreeNode ,_dccf );if _agebd !=nil {_dg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_agebd );}else {_afdeb .Next =_dgbe ;return &_afdeb .PdfOutlineTreeNode ,_cfgbc ,nil ;};};};return &_afdeb .PdfOutlineTreeNode ,&_afdeb .PdfOutlineTreeNode ,nil ;};_fbba ,_acfc :=_bgdg (_dedgd );if _acfc !=nil {return nil ,nil ,_acfc ;};_fbba .Parent =_ceedg ;if _abfbb :=_gaged .Get ("\u0046\u0069\u0072s\u0074");_abfbb !=nil {_abfbb =_de .ResolveReference (_abfbb );_fgbfa :=_de .TraceToDirectObject (_abfbb );if _ ,_cgfc :=_fgbfa .(*_de .PdfObjectNull );!_cgfc &&_fgbfa !=nil {_deac ,_ebbcd ,_gdbdg :=_gdcbe .buildOutlineTree (_abfbb ,&_fbba .PdfOutlineTreeNode ,nil ,_dccf );if _gdbdg !=nil {_dg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gdbdg );}else {_fbba .First =_deac ;_fbba .Last =_ebbcd ;};};};return &_fbba .PdfOutlineTreeNode ,&_fbba .PdfOutlineTreeNode ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ceaed *PdfOutlineItem )ToPdfObject ()_de .PdfObject {_egff :=_ceaed ._ddadaa ;_daed :=_egff .PdfObject .(*_de .PdfObjectDictionary );_daed .Set ("\u0054\u0069\u0074l\u0065",_ceaed .Title );if _ceaed .A !=nil {_daed .Set ("\u0041",_ceaed .A );};if _cfcd :=_daed .Get ("\u0053\u0045");_cfcd !=nil {_daed .Remove ("\u0053\u0045");};if _ceaed .C !=nil {_daed .Set ("\u0043",_ceaed .C );};if _ceaed .Dest !=nil {_daed .Set ("\u0044\u0065\u0073\u0074",_ceaed .Dest );};if _ceaed .F !=nil {_daed .Set ("\u0046",_ceaed .F );};if _ceaed .Count !=nil {_daed .Set ("\u0043\u006f\u0075n\u0074",_de .MakeInteger (*_ceaed .Count ));};if _ceaed .Next !=nil {_daed .Set ("\u004e\u0065\u0078\u0074",_ceaed .Next .ToPdfObject ());};if _ceaed .First !=nil {_daed .Set ("\u0046\u0069\u0072s\u0074",_ceaed .First .ToPdfObject ());};if _ceaed .Prev !=nil {_daed .Set ("\u0050\u0072\u0065\u0076",_ceaed .Prev .GetContext ().GetContainingPdfObject ());};if _ceaed .Last !=nil {_daed .Set ("\u004c\u0061\u0073\u0074",_ceaed .Last .GetContext ().GetContainingPdfObject ());};if _ceaed .Parent !=nil {_daed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ceaed .Parent .GetContext ().GetContainingPdfObject ());};return _egff ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_dcba :=NewPdfAnnotation ();_dagc :=&PdfAnnotationRichMedia {};_dagc .PdfAnnotation =_dcba ;_dcba .SetContext (_dagc );return _dagc ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;RD _de .PdfObject ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_adafb *PdfFont )ToPdfObject ()_de .PdfObject {if _adafb ._fgef ==nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _de .MakeNull ();};return _adafb ._fgef .ToPdfObject ();};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cafaf =title };

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_de .PdfObject ,error );};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ebfbg :=&PdfPageResourcesColorspaces {};_ebfbg .Names =[]string {};_ebfbg .Colorspaces =map[string ]PdfColorspace {};_ebfbg ._dbfdc =&_de .PdfIndirectObject {};return _ebfbg ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fgef pdfFont };

// ToPdfObject implements interface PdfModel.
func (_efbf *PdfAnnotationWatermark )ToPdfObject ()_de .PdfObject {_efbf .PdfAnnotation .ToPdfObject ();_affd :=_efbf ._egag ;_dfcd :=_affd .PdfObject .(*_de .PdfObjectDictionary );_dfcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_dfcd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_efbf .FixedPrint );return _affd ;};func (_bbcc *PdfReader )newPdfAnnotationRedactFromDict (_eccd *_de .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_debd :=PdfAnnotationRedact {};_fdcf ,_bbfg :=_bbcc .newPdfAnnotationMarkupFromDict (_eccd );if _bbfg !=nil {return nil ,_bbfg ;};_debd .PdfAnnotationMarkup =_fdcf ;_debd .QuadPoints =_eccd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_debd .IC =_eccd .Get ("\u0049\u0043");_debd .RO =_eccd .Get ("\u0052\u004f");_debd .OverlayText =_eccd .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_debd .Repeat =_eccd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_debd .DA =_eccd .Get ("\u0044\u0041");_debd .Q =_eccd .Get ("\u0051");return &_debd ,nil ;};func _cbgea (_beecd *_de .PdfObjectDictionary )(*PdfFieldChoice ,error ){_geed :=&PdfFieldChoice {};_geed .Opt ,_ =_de .GetArray (_beecd .Get ("\u004f\u0070\u0074"));_geed .TI ,_ =_de .GetInt (_beecd .Get ("\u0054\u0049"));_geed .I ,_ =_de .GetArray (_beecd .Get ("\u0049"));return _geed ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fdgdb *PdfFieldButton )ToPdfObject ()_de .PdfObject {_fdgdb .PdfField .ToPdfObject ();_cggc :=_fdgdb ._bddd ;_bgefb :=_cggc .PdfObject .(*_de .PdfObjectDictionary );_bgefb .Set ("\u0046\u0054",_de .MakeName ("\u0042\u0074\u006e"));if _fdgdb .Opt !=nil {_bgefb .Set ("\u004f\u0070\u0074",_fdgdb .Opt );};return _cggc ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_dbffa *PdfPageResources )GetColorspaceByName (keyName _de .PdfObjectName )(PdfColorspace ,bool ){_edced ,_ecegg :=_dbffa .GetColorspaces ();if _ecegg !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ecegg );return nil ,false ;};if _edced ==nil {return nil ,false ;};_gcdae ,_gafbb :=_edced .Colorspaces [string (keyName )];if !_gafbb {return nil ,false ;};return _gcdae ,true ;};

// IsShading specifies if the pattern is a shading pattern.
func (_cgegc *PdfPattern )IsShading ()bool {return _cgegc .PatternType ==2};func (_eaacf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ValidateSignatures validates digital signatures in the document.
func (_gbcfb *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _gbcfb .AcroForm ==nil {return nil ,nil ;};if _gbcfb .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gbbabc *PdfSignature ;_dgace *PdfField ;_geegdb SignatureHandler ;};var _gdeee []*sigFieldPair ;for _ ,_ffefa :=range _gbcfb .AcroForm .AllFields (){if _ffefa .V ==nil {continue ;};if _ddea ,_fbbgdg :=_de .GetDict (_ffefa .V );_fbbgdg {if _ceaac ,_bcebd :=_de .GetNameVal (_ddea .Get ("\u0054\u0079\u0070\u0065"));_bcebd &&_ceaac =="\u0053\u0069\u0067"{_bbbg ,_facgd :=_de .GetIndirect (_ffefa .V );if !_facgd {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_faagb ,_fcedg :=_gbcfb .newPdfSignatureFromIndirect (_bbbg );if _fcedg !=nil {return nil ,_fcedg ;};var _gfaee SignatureHandler ;for _ ,_bbgcb :=range handlers {if _bbgcb .IsApplicable (_faagb ){_gfaee =_bbgcb ;break ;};};_gdeee =append (_gdeee ,&sigFieldPair {_gbbabc :_faagb ,_dgace :_ffefa ,_geegdb :_gfaee });};};};var _ebgbg []SignatureValidationResult ;for _ ,_cdggf :=range _gdeee {_ecdac :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_cdggf ._dgace }};if _cdggf ._geegdb ==nil {_ecdac .Errors =append (_ecdac .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_ebgbg =append (_ebgbg ,_ecdac );continue ;};_cadaf ,_fbcae :=_cdggf ._geegdb .NewDigest (_cdggf ._gbbabc );if _fbcae !=nil {_ecdac .Errors =append (_ecdac .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fbcae .Error ());_ebgbg =append (_ebgbg ,_ecdac );continue ;};_dbgfe :=_cdggf ._gbbabc .ByteRange ;if _dbgfe ==nil {_ecdac .Errors =append (_ecdac .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_ebgbg =append (_ebgbg ,_ecdac );continue ;};for _abcea :=0;_abcea < _dbgfe .Len ();_abcea =_abcea +2{_addbg ,_ :=_de .GetNumberAsInt64 (_dbgfe .Get (_abcea ));_bbdbf ,_ :=_de .GetIntVal (_dbgfe .Get (_abcea +1));if _ ,_eccea :=_gbcfb ._ddbac .Seek (_addbg ,_ea .SeekStart );_eccea !=nil {return nil ,_eccea ;};_cbfd :=make ([]byte ,_bbdbf );if _ ,_fedbg :=_gbcfb ._ddbac .Read (_cbfd );_fedbg !=nil {return nil ,_fedbg ;};_cadaf .Write (_cbfd );};_abffb ,_fbcae :=_cdggf ._geegdb .Validate (_cdggf ._gbbabc ,_cadaf );if _fbcae !=nil {return nil ,_fbcae ;};_abffb .Name =_cdggf ._gbbabc .Name .Decoded ();_abffb .Reason =_cdggf ._gbbabc .Reason .Decoded ();if _cdggf ._gbbabc .M !=nil {_faega ,_fedeg :=NewPdfDate (_cdggf ._gbbabc .M .String ());if _fedeg !=nil {_abffb .Errors =append (_abffb .Errors ,_fedeg .Error ());continue ;};_abffb .Date =_faega ;};_abffb .ContactInfo =_cdggf ._gbbabc .ContactInfo .Decoded ();_abffb .Location =_cdggf ._gbbabc .Location .Decoded ();_abffb .Fields =_ecdac .Fields ;_ebgbg =append (_ebgbg ,_abffb );};return _ebgbg ,nil ;};func (_gbca *PdfReader )newPdfAnnotationLinkFromDict (_becg *_de .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_afff :=PdfAnnotationLink {};_afff .A =_becg .Get ("\u0041");_afff .Dest =_becg .Get ("\u0044\u0065\u0073\u0074");_afff .H =_becg .Get ("\u0048");_afff .PA =_becg .Get ("\u0050\u0041");_afff .QuadPoints =_becg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_afff .BS =_becg .Get ("\u0042\u0053");return &_afff ,nil ;};

// Write writes out the PDF.
func (_bgaa *PdfWriter )Write (writer _ea .Writer )error {_dg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_gedf :=_gb .GetLicenseKey ();if (_gedf ==nil ||!_gedf .IsLicensed ())&&!_ccbga {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _eae .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _bgaa ._gadeea !=nil {_dg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bgaa ._gadeea );_edeb :=_bgaa ._gadeea .ToPdfObject ();_dg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_edeb ,_edeb ,_edeb );_bgaa ._acdea .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_edeb );_agebdb :=_bgaa .addObjects (_edeb );if _agebdb !=nil {return _agebdb ;};};if _bgaa ._eddbc !=nil {_dg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_faaca :=_bgaa ._eddbc .ToPdfObject ();_dg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_faaca );_bgaa ._acdea .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_faaca );_addad :=_bgaa .addObjects (_faaca );if _addad !=nil {return _addad ;};};for _baabb ,_ebaec :=range _bgaa ._gaee {if !_bgaa .hasObject (_baabb ){_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_baabb ,_baabb ,_baabb );for _ ,_eefda :=range _ebaec {for _ ,_efab :=range _eefda .Keys (){_ecfaf :=_eefda .Get (_efab );if _ecfaf ==_baabb {_dg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_eefda .Set (_efab ,_de .MakeNull ());break ;};};};};};_bgaa ._acdea .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_de .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_bgaa ._dccff ,_bgaa ._edafd )));_bgaa .copyObjects ();if _bgaa ._facgg !=nil {var _ggdca error ;_bgaa ._fcgg ,_ggdca =_bgaa ._facgg .Optimize (_bgaa ._fcgg );if _ggdca !=nil {return _ggdca ;};_gcaaec :=make (map[_de .PdfObject ]struct{},len (_bgaa ._fcgg ));for _ ,_agdbd :=range _bgaa ._fcgg {_gcaaec [_agdbd ]=struct{}{};};_bgaa ._ggafd =_gcaaec ;};_bgaa ._ggdb =_bgaa ._gecf ;_bgaa ._gdbfd =_ec .NewWriter (writer );_cgbb :=_bgaa ._dccff > 1||(_bgaa ._dccff ==1&&_bgaa ._edafd > 4);if _bgaa ._ggeec !=nil {_cgbb =*_bgaa ._ggeec ;};_bcega :=make (map[_de .PdfObject ]bool );for _ ,_gddga :=range _bgaa ._fcgg {if _bbcgcc ,_fgdcf :=_gddga .(*_de .PdfObjectStreams );_fgdcf {_cgbb =true ;for _ ,_efagb :=range _bbcgcc .Elements (){_bcega [_efagb ]=true ;if _eeea ,_dbccb :=_efagb .(*_de .PdfIndirectObject );_dbccb {_bcega [_eeea .PdfObject ]=true ;};};};};if _cgbb &&_bgaa ._dccff ==1&&_bgaa ._edafd < 5{_bgaa ._edafd =5;};if _bgaa ._feabe {_bgaa .writeString ("\u000a");}else {_bgaa .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_bgaa ._dccff ,_bgaa ._edafd ));_bgaa .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_bgaa .updateObjectNumbers ();_dg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bgaa ._fcgg ));_bgaa ._cebbbf =make (map[int ]crossReference );_bgaa ._cebbbf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bgaa ._dgdcf .ObjectMap !=nil {for _fdgcc ,_gageg :=range _bgaa ._dgdcf .ObjectMap {if _fdgcc ==0{continue ;};if _gageg .XType ==_de .XrefTypeObjectStream {_cccaf :=crossReference {Type :2,ObjectNumber :_gageg .OsObjNumber ,Index :_gageg .OsObjIndex };_bgaa ._cebbbf [_fdgcc ]=_cccaf ;};if _gageg .XType ==_de .XrefTypeTableEntry {_fgcee :=crossReference {Type :1,ObjectNumber :_gageg .ObjectNumber ,Offset :_gageg .Offset };_bgaa ._cebbbf [_fdgcc ]=_fgcee ;};};};for _ ,_dddb :=range _bgaa ._fcgg {if _cebf :=_bcega [_dddb ];_cebf {continue ;};_abdge :=int64 (0);switch _cecga :=_dddb .(type ){case *_de .PdfIndirectObject :_abdge =_cecga .ObjectNumber ;case *_de .PdfObjectStream :_abdge =_cecga .ObjectNumber ;case *_de .PdfObjectStreams :_abdge =_cecga .ObjectNumber ;default:_dg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_dddb );return ErrTypeCheck ;};if _bgaa ._fgdca !=nil &&_dddb !=_bgaa ._ffade {_dfdf :=_bgaa ._fgdca .Encrypt (_dddb ,int64 (_abdge ),0);if _dfdf !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dfdf );return _dfdf ;};};_bgaa .writeObject (int (_abdge ),_dddb );};_bbfba :=_bgaa ._ggdb ;var _efagf int ;for _faeef :=range _bgaa ._cebbbf {if _faeef > _efagf {_efagf =_faeef ;};};if _cgbb {_bbaeb :=_efagf +1;_bgaa ._cebbbf [_bbaeb ]=crossReference {Type :1,ObjectNumber :_bbaeb ,Offset :_bbfba };_affea :=_eff .NewBuffer (nil );_cbeag :=_de .MakeArray ();for _fedag :=0;_fedag <=_efagf ;{for ;_fedag <=_efagf ;_fedag ++{_bgae ,_dgedf :=_bgaa ._cebbbf [_fedag ];if _dgedf &&(!_bgaa ._feabe ||_bgaa ._feabe &&(_bgae .Type ==1&&_bgae .Offset >=_bgaa ._cbagc ||_bgae .Type ==0)){break ;};};var _edgdc int ;for _edgdc =_fedag +1;_edgdc <=_efagf ;_edgdc ++{_becgd ,_ccdf :=_bgaa ._cebbbf [_edgdc ];if _ccdf &&(!_bgaa ._feabe ||_bgaa ._feabe &&(_becgd .Type ==1&&_becgd .Offset > _bgaa ._cbagc )){continue ;};break ;};_cbeag .Append (_de .MakeInteger (int64 (_fedag )),_de .MakeInteger (int64 (_edgdc -_fedag )));for _decdd :=_fedag ;_decdd < _edgdc ;_decdd ++{_ebffe :=_bgaa ._cebbbf [_decdd ];switch _ebffe .Type {case 0:_ee .Write (_affea ,_ee .BigEndian ,byte (0));_ee .Write (_affea ,_ee .BigEndian ,uint32 (0));_ee .Write (_affea ,_ee .BigEndian ,uint16 (0xFFFF));case 1:_ee .Write (_affea ,_ee .BigEndian ,byte (1));_ee .Write (_affea ,_ee .BigEndian ,uint32 (_ebffe .Offset ));_ee .Write (_affea ,_ee .BigEndian ,uint16 (_ebffe .Generation ));case 2:_ee .Write (_affea ,_ee .BigEndian ,byte (2));_ee .Write (_affea ,_ee .BigEndian ,uint32 (_ebffe .ObjectNumber ));_ee .Write (_affea ,_ee .BigEndian ,uint16 (_ebffe .Index ));};};_fedag =_edgdc +1;};_caeab ,_bbeca :=_de .MakeStream (_affea .Bytes (),_de .NewFlateEncoder ());if _bbeca !=nil {return _bbeca ;};_caeab .ObjectNumber =int64 (_bbaeb );_caeab .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0058\u0052\u0065\u0066"));_caeab .PdfObjectDictionary .Set ("\u0057",_de .MakeArray (_de .MakeInteger (1),_de .MakeInteger (4),_de .MakeInteger (2)));_caeab .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cbeag );_caeab .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_de .MakeInteger (int64 (_bbaeb +1)));_caeab .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_bgaa ._gccea );_caeab .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_bgaa ._abbfa );if _bgaa ._feabe &&_bgaa ._facff > 0{_caeab .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_de .MakeInteger (_bgaa ._facff ));};if _bgaa ._fgdca !=nil {_caeab .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bgaa ._ffade );_caeab .Set ("\u0049\u0044",_bgaa ._effc );_dg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bgaa ._effc );};_bgaa .writeObject (int (_caeab .ObjectNumber ),_caeab );}else {_bgaa .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _edca :=0;_edca <=_efagf ;{for ;_edca <=_efagf ;_edca ++{_aeccd ,_bgfag :=_bgaa ._cebbbf [_edca ];if _bgfag &&(!_bgaa ._feabe ||_bgaa ._feabe &&(_aeccd .Type ==1&&_aeccd .Offset >=_bgaa ._cbagc ||_aeccd .Type ==0)){break ;};};var _bbdbfa int ;for _bbdbfa =_edca +1;_bbdbfa <=_efagf ;_bbdbfa ++{_bddcgf ,_fdba :=_bgaa ._cebbbf [_bbdbfa ];if _fdba &&(!_bgaa ._feabe ||_bgaa ._feabe &&(_bddcgf .Type ==1&&_bddcgf .Offset > _bgaa ._cbagc )){continue ;};break ;};_dceae :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_edca ,_bbdbfa -_edca );_bgaa .writeString (_dceae );for _ccaffe :=_edca ;_ccaffe < _bbdbfa ;_ccaffe ++{_fgdg :=_bgaa ._cebbbf [_ccaffe ];switch _fgdg .Type {case 0:_dceae =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_bgaa .writeString (_dceae );case 1:_dceae =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_fgdg .Offset ,0);_bgaa .writeString (_dceae );};};_edca =_bbdbfa +1;};_ebfdc :=_de .MakeDict ();_ebfdc .Set ("\u0049\u006e\u0066\u006f",_bgaa ._gccea );_ebfdc .Set ("\u0052\u006f\u006f\u0074",_bgaa ._abbfa );_ebfdc .Set ("\u0053\u0069\u007a\u0065",_de .MakeInteger (int64 (_efagf +1)));if _bgaa ._feabe &&_bgaa ._facff > 0{_ebfdc .Set ("\u0050\u0072\u0065\u0076",_de .MakeInteger (_bgaa ._facff ));};if _bgaa ._fgdca !=nil {_ebfdc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bgaa ._ffade );_ebfdc .Set ("\u0049\u0044",_bgaa ._effc );_dg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bgaa ._effc );};_bgaa .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_bgaa .writeString (_ebfdc .WriteString ());_bgaa .writeString ("\u000a");};_gbcgdd :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_bbfba );_bgaa .writeString (_gbcgdd );_bgaa .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _bgaa ._fgbec ==nil {_bgaa ._fgbec =_bgaa ._gdbfd .Flush ();};return _bgaa ._fgbec ;};

// ToInteger convert to an integer format.
func (_egdce *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_aadec :=_ac .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aadec *_egdce .R ()),uint32 (_aadec *_egdce .G ()),uint32 (_aadec *_egdce .B ())};};func _dfad (_eebfb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_aabdfa ,_fageg :=_de .GetDict (_eebfb .AP );if !_fageg {return nil ,nil ,_eae .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _aabdfa ==nil {return nil ,nil ,nil ;};_agfd ,_fageg :=_de .GetArray (_eebfb .Rect );if !_fageg ||_agfd .Len ()!=4{return nil ,nil ,_eae .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cdgfb ,_dafg :=NewPdfRectangle (*_agfd );if _dafg !=nil {return nil ,nil ,_dafg ;};_cegc :=_de .TraceToDirectObject (_aabdfa .Get ("\u004e"));switch _dceee :=_cegc .(type ){case *_de .PdfObjectStream :_abeg :=_dceee ;_aacb ,_efedb :=NewXObjectFormFromStream (_abeg );return _aacb ,_cdgfb ,_efedb ;case *_de .PdfObjectDictionary :_ccfg :=_dceee ;_ggd ,_cdeg :=_de .GetName (_eebfb .AS );if !_cdeg {return nil ,nil ,nil ;};if _ccfg .Get (*_ggd )==nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_edga ,_cdeg :=_de .GetStream (_ccfg .Get (*_ggd ));if !_cdeg {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ggd );return nil ,nil ,_eae .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dded ,_bdgf :=NewXObjectFormFromStream (_edga );return _dded ,_cdgfb ,_bdgf ;};_dg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cegc );return nil ,nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// Encoder returns the font's text encoder.
func (_eacea pdfFontType0 )Encoder ()_ed .TextEncoder {return _eacea ._fcbd };type pdfFontSimple struct{fontCommon ;_dfada *_de .PdfIndirectObject ;_dcgfb map[_ed .CharCode ]float64 ;_bbcag _ed .TextEncoder ;_ffdc _ed .TextEncoder ;_eegg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _de .PdfObject ;LastChar _de .PdfObject ;Widths _de .PdfObject ;Encoding _de .PdfObject ;_dbbb map[rune ]_eba .CharMetrics ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_de .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _de .PdfObject ;A _de .PdfObject ;SE _de .PdfObject ;C _de .PdfObject ;F _de .PdfObject ;_ddadaa *_de .PdfIndirectObject ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_de .PdfObjectBool ;SigFlags *_de .PdfObjectInteger ;CO *_de .PdfObjectArray ;DR *PdfPageResources ;DA *_de .PdfObjectString ;Q *_de .PdfObjectInteger ;XFA _de .PdfObject ;_egbd *_de .PdfIndirectObject ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ddadaac *PdfPattern )SetContext (ctx PdfModel ){_ddadaac ._dcdcc =ctx };

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cfdcf int64 ;_ecga int64 ;_bcae int64 ;_adea int64 ;_ggegg int64 ;_gfcccd int64 ;_dgfac byte ;_eccagf int64 ;_affgb int64 ;};func _fcba (_cdfeb *_de .PdfObjectArray )(float64 ,error ){_gcag ,_bbdca :=_cdfeb .ToFloat64Array ();if _bbdca !=nil {_dg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdfeb ,_bbdca );};switch len (_gcag ){case 1:return _gcag [0],nil ;case 3:_aeaef :=PdfColorspaceDeviceRGB {};_gfgaf ,_abdab :=_aeaef .ColorFromFloats (_gcag );if _abdab !=nil {return 0.0,_abdab ;};return _gfgaf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fgbgf :=PdfColorspaceDeviceCMYK {};_fdcde ,_eecc :=_fgbgf .ColorFromFloats (_gcag );if _eecc !=nil {return 0.0,_eecc ;};_bbecae ,_eecc :=_fgbgf .ColorToRGB (_fdcde .(*PdfColorDeviceCMYK ));if _eecc !=nil {return 0.0,_eecc ;};return _bbecae .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_bbdca =_eae .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_dg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdfeb ,_bbdca );return 0.0,_bbdca ;};

// String returns a string representation of what flags are set.
func (_fdef FieldFlag )String ()string {_fdca :="";if _fdef ==FieldFlagClear {_fdca ="\u0043\u006c\u0065a\u0072";return _fdca ;};if _fdef &FieldFlagReadOnly > 0{_fdca +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fdef &FieldFlagRequired > 0{_fdca +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fdef &FieldFlagNoExport > 0{_fdca +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _fdef &FieldFlagNoToggleToOff > 0{_fdca +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _fdef &FieldFlagRadio > 0{_fdca +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _fdef &FieldFlagPushbutton > 0{_fdca +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _fdef &FieldFlagRadiosInUnision > 0{_fdca +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _fdef &FieldFlagMultiline > 0{_fdca +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _fdef &FieldFlagPassword > 0{_fdca +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _fdef &FieldFlagFileSelect > 0{_fdca +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _fdef &FieldFlagDoNotScroll > 0{_fdca +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _fdef &FieldFlagComb > 0{_fdca +="\u007c\u0043\u006fm\u0062";};if _fdef &FieldFlagRichText > 0{_fdca +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _fdef &FieldFlagDoNotSpellCheck > 0{_fdca +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _fdef &FieldFlagCombo > 0{_fdca +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _fdef &FieldFlagEdit > 0{_fdca +="\u007c\u0045\u0064i\u0074";};if _fdef &FieldFlagSort > 0{_fdca +="\u007c\u0053\u006fr\u0074";};if _fdef &FieldFlagMultiSelect > 0{_fdca +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _fdef &FieldFlagCommitOnSelChange > 0{_fdca +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fe .Trim (_fdca ,"\u007c");};func (_acegc *PdfWriter )updateObjectNumbers (){_accaa :=_acegc .ObjNumOffset ;_efcd :=0;for _ ,_agce :=range _acegc ._fcgg {_agcf :=int64 (_efcd +1+_accaa );_fdabg :=true ;if _acegc ._feabe {if _dagf ,_bdeacd :=_acegc ._dffdee [_agce ];_bdeacd {_agcf =_dagf ;_fdabg =false ;};};switch _ffbcdb :=_agce .(type ){case *_de .PdfIndirectObject :_ffbcdb .ObjectNumber =_agcf ;_ffbcdb .GenerationNumber =0;case *_de .PdfObjectStream :_ffbcdb .ObjectNumber =_agcf ;_ffbcdb .GenerationNumber =0;case *_de .PdfObjectStreams :_ffbcdb .ObjectNumber =_agcf ;_ffbcdb .GenerationNumber =0;default:_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ffbcdb );continue ;};if _fdabg {_efcd ++;};};_cdaag :=func (_gdffe _de .PdfObject )int64 {switch _ggafa :=_gdffe .(type ){case *_de .PdfIndirectObject :return _ggafa .ObjectNumber ;case *_de .PdfObjectStream :return _ggafa .ObjectNumber ;case *_de .PdfObjectStreams :return _ggafa .ObjectNumber ;};return 0;};_cb .SliceStable (_acegc ._fcgg ,func (_adcbc ,_affcd int )bool {return _cdaag (_acegc ._fcgg [_adcbc ])< _cdaag (_acegc ._fcgg [_affcd ])});};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cfbe *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cfbe .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cfbe ._egfe =acroForm ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func _bbdb (_bbee _de .PdfObject )(*PdfFontDescriptor ,error ){_gade :=&PdfFontDescriptor {};_bbee =_de .ResolveReference (_bbee );if _ddbad ,_cebbd :=_bbee .(*_de .PdfIndirectObject );_cebbd {_gade ._agaa =_ddbad ;_bbee =_ddbad .PdfObject ;};_aeeg ,_agacf :=_de .GetDict (_bbee );if !_agacf {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bbee );return nil ,_de .ErrTypeError ;};if _cdaef :=_aeeg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_cdaef !=nil {_gade .FontName =_cdaef ;}else {_dg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_fbgbb ,_ :=_de .GetName (_gade .FontName );if _gdbfc :=_aeeg .Get ("\u0054\u0079\u0070\u0065");_gdbfc !=nil {_fddbd ,_fgdc :=_gdbfc .(*_de .PdfObjectName );if !_fgdc ||string (*_fddbd )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gdbfc ,_fbgbb ,_gade .FontName );};}else {_dg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fbgbb ,_gade .FontName );};_gade .FontFamily =_aeeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gade .FontStretch =_aeeg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gade .FontWeight =_aeeg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_gade .Flags =_aeeg .Get ("\u0046\u006c\u0061g\u0073");_gade .FontBBox =_aeeg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gade .ItalicAngle =_aeeg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gade .Ascent =_aeeg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_gade .Descent =_aeeg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gade .Leading =_aeeg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gade .CapHeight =_aeeg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gade .XHeight =_aeeg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_gade .StemV =_aeeg .Get ("\u0053\u0074\u0065m\u0056");_gade .StemH =_aeeg .Get ("\u0053\u0074\u0065m\u0048");_gade .AvgWidth =_aeeg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gade .MaxWidth =_aeeg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_gade .MissingWidth =_aeeg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gade .FontFile =_aeeg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gade .FontFile2 =_aeeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_gade .FontFile3 =_aeeg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gade .CharSet =_aeeg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gade .Style =_aeeg .Get ("\u0053\u0074\u0079l\u0065");_gade .Lang =_aeeg .Get ("\u004c\u0061\u006e\u0067");_gade .FD =_aeeg .Get ("\u0046\u0044");_gade .CIDSet =_aeeg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gade .Flags !=nil {if _bgfbg ,_gfbc :=_de .GetIntVal (_gade .Flags );_gfbc {_gade ._gagf =_bgfbg ;};};if _gade .MissingWidth !=nil {if _edgdg ,_aagb :=_de .GetNumberAsFloat (_gade .MissingWidth );_aagb ==nil {_gade ._cccgg =_edgdg ;};};if _gade .FontFile !=nil {_bdecd ,_baff :=_fgbaa (_gade .FontFile );if _baff !=nil {return _gade ,_baff ;};_dg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bdecd );_gade .fontFile =_bdecd ;};if _gade .FontFile2 !=nil {_cadc ,_ddgdb :=_eba .NewFontFile2FromPdfObject (_gade .FontFile2 );if _ddgdb !=nil {return _gade ,_ddgdb ;};_dg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cadc .String ());_gade ._cabc =&_cadc ;};return _gade ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_dcfdf *PdfReader )GetNumPages ()(int ,error ){if _dcfdf ._bffa .GetCrypter ()!=nil &&!_dcfdf ._bffa .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_dcfdf ._aafa ),nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _de .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_de .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_ecgbdg ,_gbfge :=encoder .EncodeBytes (img .Data );if _gbfge !=nil {_dg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gbfge );return nil ,_gbfge ;};_gdgc :=NewXObjectImage ();_gdgff :=img .Width ;_bbecf :=img .Height ;_gdgc .Width =&_gdgff ;_gdgc .Height =&_bbecf ;_acebf :=img .BitsPerComponent ;_gdgc .BitsPerComponent =&_acebf ;_gdgc .Filter =encoder ;_gdgc .Stream =_ecgbdg ;if cs ==nil {if img .ColorComponents ==1{_gdgc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gdgc .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gdgc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_eae .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gdgc .ColorSpace =cs ;};if img ._dfbbe {_gadfa :=NewXObjectImage ();_gadfa .Filter =encoder ;_edfed ,_acfab :=encoder .EncodeBytes (img ._abbgb );if _acfab !=nil {_dg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_acfab );return nil ,_acfab ;};_gadfa .Stream =_edfed ;_gadfa .BitsPerComponent =_gdgc .BitsPerComponent ;_gadfa .Width =&img .Width ;_gadfa .Height =&img .Height ;_gadfa .ColorSpace =NewPdfColorspaceDeviceGray ();_gdgc .SMask =_gadfa .ToPdfObject ();}else {_gdgc .SMask =xobjIn .SMask ;_gdgc .ImageMask =xobjIn .ImageMask ;if _gdgc .ColorSpace .GetNumComponents ()==1{_baee (_gdgc );};};return _gdgc ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_beggc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efge :=vals [0];if _efge < 0.0||_efge > 1.0{_dg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _efge < 0.0{_efge =0.0;}else if _efge > 1.0{_efge =1.0;};return NewPdfColorDeviceGray (_efge ),nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gfggg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gfggg ._dcgdc !=nil {return _gfggg ._dcgdc ,nil ;};if _gfggg .ColorSpace ==nil {return nil ,nil ;};_cdbdc ,_aaagff :=_dggbfb (_gfggg .ColorSpace );if _aaagff !=nil {return nil ,_aaagff ;};_gfggg ._dcgdc =_cdbdc ;return _gfggg ._dcgdc ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_dbfd *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dbfd .fill (provider ,nil )};

// ToPdfObject implements interface PdfModel.
func (_aefe *PdfAnnotationProjection )ToPdfObject ()_de .PdfObject {_aefe .PdfAnnotation .ToPdfObject ();_afba :=_aefe ._egag ;_fgd :=_afba .PdfObject .(*_de .PdfObjectDictionary );_aefe .PdfAnnotationMarkup .appendToPdfDictionary (_fgd );return _afba ;};func (_gdgb *PdfReader )newPdfAnnotationStampFromDict (_fbdf *_de .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_febd :=PdfAnnotationStamp {};_efgf ,_agde :=_gdgb .newPdfAnnotationMarkupFromDict (_fbdf );if _agde !=nil {return nil ,_agde ;};_febd .PdfAnnotationMarkup =_efgf ;_febd .Name =_fbdf .Get ("\u004e\u0061\u006d\u0065");return &_febd ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetOptimizer returns current PDF optimizer.
func (_dgeag *PdfWriter )GetOptimizer ()Optimizer {return _dgeag ._facgg };

// L returns the value of the L component of the color.
func (_fefb *PdfColorLab )L ()float64 {return float64 (_fefb [0])};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fagg *PdfPageResources )HasXObjectByName (keyName _de .PdfObjectName )bool {_ebefb ,_ :=_fagg .GetXObjectByName (keyName );return _ebefb !=nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bgbe *pdfCIDFontType2 )ToPdfObject ()_de .PdfObject {if _bgbe ._aadd ==nil {_bgbe ._aadd =&_de .PdfIndirectObject {};};_ggaf :=_bgbe .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_bgbe ._aadd .PdfObject =_ggaf ;if _bgbe .CIDSystemInfo !=nil {_ggaf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bgbe .CIDSystemInfo );};if _bgbe .DW !=nil {_ggaf .Set ("\u0044\u0057",_bgbe .DW );};if _bgbe .DW2 !=nil {_ggaf .Set ("\u0044\u0057\u0032",_bgbe .DW2 );};if _bgbe .W !=nil {_ggaf .Set ("\u0057",_bgbe .W );};if _bgbe .W2 !=nil {_ggaf .Set ("\u0057\u0032",_bgbe .W2 );};if _bgbe .CIDToGIDMap !=nil {_ggaf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bgbe .CIDToGIDMap );};return _bgbe ._aadd ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_eeag *PdfPageResources )SetShadingByName (keyName _de .PdfObjectName ,shadingObj _de .PdfObject )error {if _eeag .Shading ==nil {_eeag .Shading =_de .MakeDict ();};_ggdd ,_fffg :=_eeag .Shading .(*_de .PdfObjectDictionary );if !_fffg {return _de .ErrTypeError ;};_ggdd .Set (keyName ,shadingObj );return nil ;};func _begf (_afcdf _de .PdfObject )(*_de .PdfObjectDictionary ,*fontCommon ,error ){_bgeb :=&fontCommon {};if _bgage ,_gfaa :=_afcdf .(*_de .PdfIndirectObject );_gfaa {_bgeb ._agcd =_bgage .ObjectNumber ;};_abd ,_egfbf :=_de .GetDict (_afcdf );if !_egfbf {_dg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_afcdf );return nil ,nil ,ErrFontNotSupported ;};_gbage ,_egfbf :=_de .GetNameVal (_abd .Get ("\u0054\u0079\u0070\u0065"));if !_egfbf {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _gbage !="\u0046\u006f\u006e\u0074"{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gbage ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_de .ErrTypeError ;};_efaf ,_egfbf :=_de .GetNameVal (_abd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_egfbf {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_bgeb ._dgbc =_efaf ;_ggfac ,_egfbf :=_de .GetNameVal (_abd .Get ("\u004e\u0061\u006d\u0065"));if _egfbf {_bgeb ._caaf =_ggfac ;};if _efaf =="\u0054\u0079\u0070e\u0033"{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_abd );return _abd ,_bgeb ,ErrType3FontNotSupported ;};_faec ,_egfbf :=_de .GetNameVal (_abd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_egfbf {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _abd ,_bgeb ,ErrRequiredAttributeMissing ;};_bgeb ._fbaf =_faec ;_dccc :=_abd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dccc !=nil {_dcfd ,_baae :=_bbdb (_dccc );if _baae !=nil {_dg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baae );return _abd ,_bgeb ,_baae ;};_bgeb ._ccbgb =_dcfd ;};_bebf :=_abd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bebf !=nil {_bgeb ._ecace =_de .TraceToDirectObject (_bebf );_cgbf ,_gaecg :=_gafc (_bgeb ._ecace ,_bgeb );if _gaecg !=nil {return _abd ,_bgeb ,_gaecg ;};_bgeb ._cddfb =_cgbf ;}else if _efaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_efaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gaeg ,_aafeb :=_bf .NewCIDSystemInfo (_abd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _aafeb !=nil {return _abd ,_bgeb ,_aafeb ;};_cefae :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gaeg .Registry ,_gaeg .Ordering );if _bf .IsPredefinedCMap (_cefae ){_bgeb ._cddfb ,_aafeb =_bf .LoadPredefinedCMap (_cefae );if _aafeb !=nil {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cefae ,_aafeb );};};};return _abd ,_bgeb ,nil ;};func _gfdgg ()*modelManager {_geedf :=modelManager {};_geedf ._cggae =map[PdfModel ]_de .PdfObject {};_geedf ._gefca =map[_de .PdfObject ]PdfModel {};return &_geedf ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_dffg *PdfAcroForm ,_aae *PdfField ,_gbde *PdfAnnotationWidget )(*_de .PdfObjectDictionary ,error );};func _egfg (_cagfa *_de .PdfObjectStream )(*PdfFunctionType0 ,error ){_cdbf :=&PdfFunctionType0 {};_cdbf ._adbg =_cagfa ;_gdgd :=_cagfa .PdfObjectDictionary ;_cbda ,_ffef :=_de .TraceToDirectObject (_gdgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_ffef {_dg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cbda .Len ()< 0||_cbda .Len ()%2!=0{_dg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_eae .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cdbf .NumInputs =_cbda .Len ()/2;_acbcg ,_gegb :=_cbda .ToFloat64Array ();if _gegb !=nil {return nil ,_gegb ;};_cdbf .Domain =_acbcg ;_cbda ,_ffef =_de .TraceToDirectObject (_gdgd .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if !_ffef {_dg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cbda .Len ()< 0||_cbda .Len ()%2!=0{return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cdbf .NumOutputs =_cbda .Len ()/2;_gfgea ,_gegb :=_cbda .ToFloat64Array ();if _gegb !=nil {return nil ,_gegb ;};_cdbf .Range =_gfgea ;_cbda ,_ffef =_de .TraceToDirectObject (_gdgd .Get ("\u0053\u0069\u007a\u0065")).(*_de .PdfObjectArray );if !_ffef {_dg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fcdb ,_gegb :=_cbda .ToIntegerArray ();if _gegb !=nil {return nil ,_gegb ;};if len (_fcdb )!=_cdbf .NumInputs {_dg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdbf .Size =_fcdb ;_bddcc ,_ffef :=_de .TraceToDirectObject (_gdgd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_de .PdfObjectInteger );if !_ffef {_dg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_bddcc !=1&&*_bddcc !=2&&*_bddcc !=4&&*_bddcc !=8&&*_bddcc !=12&&*_bddcc !=16&&*_bddcc !=24&&*_bddcc !=32{_dg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_bddcc );return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdbf .BitsPerSample =int (*_bddcc );_cdbf .Order =1;_badea ,_ffef :=_de .TraceToDirectObject (_gdgd .Get ("\u004f\u0072\u0064e\u0072")).(*_de .PdfObjectInteger );if _ffef {if *_badea !=1&&*_badea !=3{_dg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_badea );return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdbf .Order =int (*_badea );};_cbda ,_ffef =_de .TraceToDirectObject (_gdgd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_de .PdfObjectArray );if _ffef {_feee ,_fdgeb :=_cbda .ToFloat64Array ();if _fdgeb !=nil {return nil ,_fdgeb ;};_cdbf .Encode =_feee ;};_cbda ,_ffef =_de .TraceToDirectObject (_gdgd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_de .PdfObjectArray );if _ffef {_bfgfg ,_cffef :=_cbda .ToFloat64Array ();if _cffef !=nil {return nil ,_cffef ;};_cdbf .Decode =_bfgfg ;};_aaeag ,_gegb :=_de .DecodeStream (_cagfa );if _gegb !=nil {return nil ,_gegb ;};_cdbf ._gbdfa =_aaeag ;return _cdbf ,nil ;};

// SetDate sets the `M` field of the signature.
func (_feede *PdfSignature )SetDate (date _a .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_feede .M =_de .MakeString (date .Format (format ));};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_eecb *PdfPageResources )HasExtGState (keyName _de .PdfObjectName )bool {_ ,_ecgce :=_eecb .GetFontByName (keyName );return _ecgce ;};func (_cdaf fontCommon )isCIDFont ()bool {if _cdaf ._dgbc ==""{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdaf );};_gfdde :=false ;switch _cdaf ._dgbc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gfdde =true ;};_dg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_gfdde ,_cdaf );return _gfdde ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_cffbb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dcdde []_ed .TextEncoder ;if _cbeab :=_cffbb .baseFields ()._cddfb ;_cbeab !=nil {_dcdde =append (_dcdde ,_ed .NewCMapEncoder ("",nil ,_cbeab ));};if _ccagd :=_cffbb .Encoder ();_ccagd !=nil {_dcdde =append (_dcdde ,_ccagd );};var _ecca _eff .Buffer ;var _fdbcb int ;for _ ,_fadde :=range data {var _gcda bool ;for _ ,_bdgg :=range _dcdde {if _fagfge :=_bdgg .Encode (string (_fadde ));len (_fagfge )> 0{_ecca .Write (_fagfge );_gcda =true ;break ;};};if !_gcda {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_fadde );_fdbcb ++;};};if _fdbcb !=0{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_fdbcb ,_cffbb ,_dcdde );};return _ecca .Bytes (),_fdbcb ;};var _ _de .PdfObject =&pdfSignDictionary {};func (_befaf *PdfReader )newPdfAcroFormFromDict (_fgdd *_de .PdfIndirectObject ,_fgead *_de .PdfObjectDictionary )(*PdfAcroForm ,error ){_bggg :=NewPdfAcroForm ();if _fgdd !=nil {_bggg ._egbd =_fgdd ;_fgdd .PdfObject =_de .MakeDict ();};if _cbba :=_fgead .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cbba !=nil {_bfdcc ,_bgbbb :=_de .GetArray (_cbba );if !_bgbbb {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cbba );};var _gcce []*PdfField ;for _ ,_geegd :=range _bfdcc .Elements (){_afceb ,_bgfbe :=_de .GetIndirect (_geegd );if !_bgfbe {if _ ,_ffdcf :=_geegd .(*_de .PdfObjectNull );_ffdcf {_dg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_dg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_geegd );return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gdaf ,_fedbf :=_befaf .newPdfFieldFromIndirectObject (_afceb ,nil );if _fedbf !=nil {return nil ,_fedbf ;};_dg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gdaf );_gcce =append (_gcce ,_gdaf );};_bggg .Fields =&_gcce ;};if _cfebd :=_fgead .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_cfebd !=nil {_feegd ,_afaf :=_de .GetBool (_cfebd );if _afaf {_bggg .NeedAppearances =_feegd ;}else {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cfebd );};};if _bdgc :=_fgead .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bdgc !=nil {_fdcab ,_fbeb :=_de .GetInt (_bdgc );if _fbeb {_bggg .SigFlags =_fdcab ;}else {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgc );};};if _fadbe :=_fgead .Get ("\u0043\u004f");_fadbe !=nil {_bfafc ,_eeeb :=_de .GetArray (_fadbe );if _eeeb {_bggg .CO =_bfafc ;}else {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fadbe );};};if _cdcc :=_fgead .Get ("\u0044\u0052");_cdcc !=nil {if _deeaa ,_eedce :=_de .GetDict (_cdcc );_eedce {_fdadc ,_fggdb :=NewPdfPageResourcesFromDict (_deeaa );if _fggdb !=nil {_dg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fggdb );return nil ,_fggdb ;};_bggg .DR =_fdadc ;}else {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cdcc );};};if _bagaf :=_fgead .Get ("\u0044\u0041");_bagaf !=nil {_bcddd ,_faeff :=_de .GetString (_bagaf );if _faeff {_bggg .DA =_bcddd ;}else {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bagaf );};};if _feaaf :=_fgead .Get ("\u0051");_feaaf !=nil {_acac ,_ceefd :=_de .GetInt (_feaaf );if _ceefd {_bggg .Q =_acac ;}else {_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_feaaf );};};if _gagg :=_fgead .Get ("\u0058\u0046\u0041");_gagg !=nil {_bggg .XFA =_gagg ;};return _bggg ,nil ;};

// SetImage updates XObject Image with new image data.
func (_beffe *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_beffe .Filter .UpdateParams (img .GetParamsDict ());_acegg ,_abecc :=_beffe .Filter .EncodeBytes (img .Data );if _abecc !=nil {return _abecc ;};_beffe .Stream =_acegg ;_ecaea :=img .Width ;_beffe .Width =&_ecaea ;_aeaefb :=img .Height ;_beffe .Height =&_aeaefb ;_dbeab :=img .BitsPerComponent ;_beffe .BitsPerComponent =&_dbeab ;if cs ==nil {if img .ColorComponents ==1{_beffe .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_beffe .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_beffe .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _eae .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_beffe .ColorSpace =cs ;};return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_afdgaa *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_afdgaa .NumInputs {_dg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_eae .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _afdgaa ._cafba ==nil {_cacg :=_afdgaa .processSamples ();if _cacg !=nil {return nil ,_cacg ;};};_bddcg :=_afdgaa .Encode ;if _bddcg ==nil {_bddcg =[]float64 {};for _adcef :=0;_adcef < len (_afdgaa .Size );_adcef ++{_bddcg =append (_bddcg ,0);_bddcg =append (_bddcg ,float64 (_afdgaa .Size [_adcef ]-1));};};_ccff :=_afdgaa .Decode ;if _ccff ==nil {_ccff =_afdgaa .Range ;};_aadf :=make ([]int ,len (x ));for _egda :=0;_egda < len (x );_egda ++{_afgdb :=x [_egda ];_feagb :=_ac .Min (_ac .Max (_afgdb ,_afdgaa .Domain [2*_egda ]),_afdgaa .Domain [2*_egda +1]);_abcg :=_bdb .LinearInterpolate (_feagb ,_afdgaa .Domain [2*_egda ],_afdgaa .Domain [2*_egda +1],_bddcg [2*_egda ],_bddcg [2*_egda +1]);_bfdac :=_ac .Min (_ac .Max (_abcg ,0),float64 (_afdgaa .Size [_egda ]-1));_fdgad :=int (_ac .Floor (_bfdac +0.5));if _fdgad < 0{_fdgad =0;}else if _fdgad > _afdgaa .Size [_egda ]{_fdgad =_afdgaa .Size [_egda ]-1;};_aadf [_egda ]=_fdgad ;};_fced :=_aadf [0];for _bdga :=1;_bdga < _afdgaa .NumInputs ;_bdga ++{_fcace :=_aadf [_bdga ];for _bced :=0;_bced < _bdga ;_bced ++{_fcace *=_afdgaa .Size [_bced ];};_fced +=_fcace ;};_fced *=_afdgaa .NumOutputs ;var _gebe []float64 ;for _ccegc :=0;_ccegc < _afdgaa .NumOutputs ;_ccegc ++{_eadae :=_fced +_ccegc ;if _eadae >=len (_afdgaa ._cafba ){_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_fafcg :=_afdgaa ._cafba [_eadae ];_gdfd :=_bdb .LinearInterpolate (float64 (_fafcg ),0,_ac .Pow (2,float64 (_afdgaa .BitsPerSample )),_ccff [2*_ccegc ],_ccff [2*_ccegc +1]);_dgfcc :=_ac .Min (_ac .Max (_gdfd ,_afdgaa .Range [2*_ccegc ]),_afdgaa .Range [2*_ccegc +1]);_gebe =append (_gebe ,_dgfcc );};return _gebe ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dfc :=NewPdfAnnotation ();_gcf :=&PdfAnnotationPolygon {};_gcf .PdfAnnotation =_dfc ;_gcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfc .SetContext (_gcf );return _gcf ;};func (_bebb *PdfWriter )addObject (_cggga _de .PdfObject )bool {_dadee :=_bebb .hasObject (_cggga );if !_dadee {_dfccg :=_de .ResolveReferencesDeep (_cggga ,_bebb ._bdbe );if _dfccg !=nil {_dg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dfccg );};_bebb ._fcgg =append (_bebb ._fcgg ,_cggga );_bebb ._ggafd [_cggga ]=struct{}{};return true ;};return false ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gcee *PdfField )FullName ()(string ,error ){var _dcfg _eff .Buffer ;if _gcee .T ==nil {return _dcfg .String (),_eae .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ddccf :=[]string {_gcee .T .Decoded ()};_dbgd :=map[*PdfField ]bool {};_dbgd [_gcee ]=true ;_cafb :=_gcee .Parent ;for _cafb !=nil {if _ ,_cdgdf :=_dbgd [_cafb ];_cdgdf {return _dcfg .String (),_eae .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _cafb .T ==nil {return _dcfg .String (),_eae .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ddccf =append (_ddccf ,_cafb .T .Decoded ());_dbgd [_cafb ]=true ;_cafb =_cafb .Parent ;};for _effd :=len (_ddccf )-1;_effd >=0;_effd --{_dcfg .WriteString (_ddccf [_effd ]);if _effd > 0{_dcfg .WriteString ("\u002e");};};return _dcfg .String (),nil ;};func _bfgf (_bfca *PdfField ,_eebfbd _de .PdfObject ){for _ ,_gggae :=range _bfca .Annotations {_gggae .AS =_eebfbd ;_gggae .ToPdfObject ();};};func (_acdc *PdfReader )loadAnnotations (_decbe _de .PdfObject )([]*PdfAnnotation ,error ){_bdeb ,_daabf :=_de .GetArray (_decbe );if !_daabf {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _aaac []*PdfAnnotation ;for _ ,_ggbb :=range _bdeb .Elements (){_ggbb =_de .ResolveReference (_ggbb );if _ ,_gfcg :=_ggbb .(*_de .PdfObjectNull );_gfcg {continue ;};_ebcfc ,_gbgcf :=_ggbb .(*_de .PdfObjectDictionary );_fcaba ,_ffag :=_ggbb .(*_de .PdfIndirectObject );if _gbgcf {_fcaba =&_de .PdfIndirectObject {};_fcaba .PdfObject =_ebcfc ;}else {if !_ffag {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_ccefe ,_aeeac :=_acdc .newPdfAnnotationFromIndirectObject (_fcaba );if _aeeac !=nil {return nil ,_aeeac ;};switch _bffdd :=_ccefe .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_facca :=range _acdc .AcroForm .AllFields (){if _facca ._bddd ==_bffdd .Parent {_bffdd ._bgf =_facca ;break ;};};};if _ccefe !=nil {_aaac =append (_aaac ,_ccefe );};};return _aaac ,nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_ba :=NewPdfAction ();_fea :=&PdfActionNamed {};_fea .PdfAction =_ba ;_ba .SetContext (_fea );return _fea ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_acdb *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _acdb .flattenFieldsWithOpts (allannots ,appgen ,nil );};func (_gdb *PdfReader )newPdfAnnotationPopupFromDict (_dfcc *_de .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_ggcb :=PdfAnnotationPopup {};_ggcb .Parent =_dfcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_ggcb .Open =_dfcc .Get ("\u004f\u0070\u0065\u006e");return &_ggcb ,nil ;};func (_gbbfb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};var _dcca =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// ToInteger convert to an integer format.
func (_cbc *PdfColorCalGray )ToInteger (bits int )uint32 {_cdgd :=_ac .Pow (2,float64 (bits ))-1;return uint32 (_cdgd *_cbc .Val ());};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_eccgc *PdfPageResources )SetXObjectByName (keyName _de .PdfObjectName ,stream *_de .PdfObjectStream )error {if _eccgc .XObject ==nil {_eccgc .XObject =_de .MakeDict ();};_ffdcd :=_de .TraceToDirectObject (_eccgc .XObject );_fcedb ,_egcfde :=_ffdcd .(*_de .PdfObjectDictionary );if !_egcfde {_dg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_eccgc .XObject ,_ffdcd );return _eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcedb .Set (keyName ,stream );return nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bac :=NewPdfAction ();_efe :=&PdfActionGoTo3DView {};_efe .PdfAction =_bac ;_bac .SetContext (_efe );return _efe ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bddb :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bddb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fdge *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gded :=vals [0];if _gded < 0.0||_gded > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbecb :=vals [1];if _fbecb < 0.0||_fbecb > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dabb :=vals [2];if _dabb < 0.0||_dabb > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eafe :=NewPdfColorDeviceRGB (_gded ,_fbecb ,_dabb );return _eafe ,nil ;};func (_bgagc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bgagc ._bffa .GetCrypter ()!=nil &&!_bgagc ._bffa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_cddad :=_bgagc ._bbad ;_deffb :=_cddad .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _deffb ==nil {return nil ,nil ;};_dg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ddaea :=_de .ResolveReference (_deffb );_dg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ddaea );if _ebae :=_de .IsNullObject (_ddaea );_ebae {_dg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_gdeg ,_addfd :=_ddaea .(*_de .PdfIndirectObject );if !_addfd {if _ ,_gecd :=_de .GetDict (_ddaea );!_gecd {_dg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_dg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_gdeg =_de .MakeIndirectObject (_ddaea );};_ffaf ,_addfd :=_gdeg .PdfObject .(*_de .PdfObjectDictionary );if !_addfd {return nil ,_eae .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_dg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_ffaf );_bbdc ,_ ,_cffag :=_bgagc .buildOutlineTree (_gdeg ,nil ,nil ,nil );if _cffag !=nil {return nil ,_cffag ;};_dg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_bbdc );return _bbdc ,nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gbceb *PdfPage )GetPageDict ()*_de .PdfObjectDictionary {_febge :=_gbceb ._abdg ;_febge .Clear ();_febge .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050\u0061\u0067\u0065"));_febge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbceb .Parent );if _gbceb .LastModified !=nil {_febge .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gbceb .LastModified .ToPdfObject ());};if _gbceb .Resources !=nil {_febge .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gbceb .Resources .ToPdfObject ());};if _gbceb .CropBox !=nil {_febge .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gbceb .CropBox .ToPdfObject ());};if _gbceb .MediaBox !=nil {_febge .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gbceb .MediaBox .ToPdfObject ());};if _gbceb .BleedBox !=nil {_febge .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gbceb .BleedBox .ToPdfObject ());};if _gbceb .TrimBox !=nil {_febge .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gbceb .TrimBox .ToPdfObject ());};if _gbceb .ArtBox !=nil {_febge .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gbceb .ArtBox .ToPdfObject ());};_febge .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gbceb .BoxColorInfo );_febge .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gbceb .Contents );if _gbceb .Rotate !=nil {_febge .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_de .MakeInteger (*_gbceb .Rotate ));};_febge .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gbceb .Group );_febge .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gbceb .Thumb );_febge .SetIfNotNil ("\u0042",_gbceb .B );_febge .SetIfNotNil ("\u0044\u0075\u0072",_gbceb .Dur );_febge .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gbceb .Trans );_febge .SetIfNotNil ("\u0041\u0041",_gbceb .AA );_febge .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gbceb .Metadata );_febge .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gbceb .PieceInfo );_febge .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gbceb .StructParents );_febge .SetIfNotNil ("\u0049\u0044",_gbceb .ID );_febge .SetIfNotNil ("\u0050\u005a",_gbceb .PZ );_febge .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gbceb .SeparationInfo );_febge .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gbceb .Tabs );_febge .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gbceb .TemplateInstantiated );_febge .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gbceb .PresSteps );_febge .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gbceb .UserUnit );_febge .SetIfNotNil ("\u0056\u0050",_gbceb .VP );if _gbceb ._ffddd !=nil {_caggb :=_de .MakeArray ();for _ ,_gafg :=range _gbceb ._ffddd {if _dgae :=_gafg .GetContext ();_dgae !=nil {_caggb .Append (_dgae .ToPdfObject ());}else {_caggb .Append (_gafg .ToPdfObject ());};};if _caggb .Len ()> 0{_febge .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_caggb );};}else if _gbceb .Annots !=nil {_febge .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gbceb .Annots );};return _febge ;};func (_cbgg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToPdfObject implements interface PdfModel.
func (_gbdfb *PdfAnnotation3D )ToPdfObject ()_de .PdfObject {_gbdfb .PdfAnnotation .ToPdfObject ();_fed :=_gbdfb ._egag ;_ceda :=_fed .PdfObject .(*_de .PdfObjectDictionary );_ceda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0033\u0044"));_ceda .SetIfNotNil ("\u0033\u0044\u0044",_gbdfb .T3DD );_ceda .SetIfNotNil ("\u0033\u0044\u0056",_gbdfb .T3DV );_ceda .SetIfNotNil ("\u0033\u0044\u0041",_gbdfb .T3DA );_ceda .SetIfNotNil ("\u0033\u0044\u0049",_gbdfb .T3DI );_ceda .SetIfNotNil ("\u0033\u0044\u0042",_gbdfb .T3DB );return _fed ;};

// ToPdfObject returns the PDF representation of the function.
func (_gbef *PdfFunctionType3 )ToPdfObject ()_de .PdfObject {_gfbce :=_de .MakeDict ();_gfbce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (3));_abfc :=&_de .PdfObjectArray {};for _ ,_afbcg :=range _gbef .Domain {_abfc .Append (_de .MakeFloat (_afbcg ));};_gfbce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abfc );if _gbef .Range !=nil {_fgggd :=&_de .PdfObjectArray {};for _ ,_agcaf :=range _gbef .Range {_fgggd .Append (_de .MakeFloat (_agcaf ));};_gfbce .Set ("\u0052\u0061\u006eg\u0065",_fgggd );};if _gbef .Functions !=nil {_egfa :=&_de .PdfObjectArray {};for _ ,_cbfa :=range _gbef .Functions {_egfa .Append (_cbfa .ToPdfObject ());};_gfbce .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_egfa );};if _gbef .Bounds !=nil {_faefa :=&_de .PdfObjectArray {};for _ ,_adaa :=range _gbef .Bounds {_faefa .Append (_de .MakeFloat (_adaa ));};_gfbce .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_faefa );};if _gbef .Encode !=nil {_bgbcd :=&_de .PdfObjectArray {};for _ ,_dcgb :=range _gbef .Encode {_bgbcd .Append (_de .MakeFloat (_dcgb ));};_gfbce .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bgbcd );};if _gbef ._fgfdb !=nil {_gbef ._fgfdb .PdfObject =_gfbce ;return _gbef ._fgfdb ;};return _gfbce ;};func (_gdfb *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// String returns a string that describes `font`.
func (_cfbff *PdfFont )String ()string {_abaad :="";if _cfbff ._fgef .Encoder ()!=nil {_abaad =_cfbff ._fgef .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_cfbff ._fgef ,_cfbff .baseFields ().coreString (),_abaad );};func _cbfbf (_edbge StdFontName )(pdfFontSimple ,error ){_gbcfa ,_egegg :=_eba .NewStdFontByName (_edbge );if !_egegg {return pdfFontSimple {},ErrFontNotSupported ;};_gdde :=_cedd (_gbcfa );return _gdde ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bbab *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbab .AlternateSpace ==nil {return nil ,_eae .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _bbab .AlternateSpace .ColorToRGB (color );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_agfc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _agfc .Alternate ==nil {if _agfc .N ==1{_aada :=NewPdfColorspaceDeviceGray ();return _aada .ColorFromFloats (vals );}else if _agfc .N ==3{_bdfc :=NewPdfColorspaceDeviceRGB ();return _bdfc .ColorFromFloats (vals );}else if _agfc .N ==4{_cgbg :=NewPdfColorspaceDeviceCMYK ();return _cgbg .ColorFromFloats (vals );}else {return nil ,_eae .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _agfc .Alternate .ColorFromFloats (vals );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dfde *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fedb ,_fbbg :=_de .GetNumbersAsFloat (objects );if _fbbg !=nil {return nil ,_fbbg ;};return _dfde .ColorFromFloats (_fedb );};

// AddWatermarkImage adds a watermark to the page.
func (_dgcgc *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cbefa ,_afgbc :=_dgcgc .GetMediaBox ();if _afgbc !=nil {return _afgbc ;};_bdafa :=_cbefa .Urx -_cbefa .Llx ;_deca :=_cbefa .Ury -_cbefa .Lly ;_eaeb :=float64 (*ximg .Width );_bdfd :=(float64 (_bdafa )-float64 (_eaeb ))/2;if opt .FitToWidth {_eaeb =_bdafa ;_bdfd =0;};_beba :=_deca ;_ccffc :=float64 (0);if opt .PreserveAspectRatio {_beba =_eaeb *float64 (*ximg .Height )/float64 (*ximg .Width );_ccffc =(_deca -_beba )/2;};if _dgcgc .Resources ==nil {_dgcgc .Resources =NewPdfPageResources ();};_cbdbd :=0;_eacde :=_de .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_cbdbd ));for _dgcgc .Resources .HasXObjectByName (_eacde ){_cbdbd ++;_eacde =_de .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_cbdbd ));};_afgbc =_dgcgc .AddImageResource (_eacde ,ximg );if _afgbc !=nil {return _afgbc ;};_cbdbd =0;_cfgfe :=_de .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_cbdbd ));for _dgcgc .HasExtGState (_cfgfe ){_cbdbd ++;_cfgfe =_de .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_cbdbd ));};_adfa :=_de .MakeDict ();_adfa .Set ("\u0042\u004d",_de .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_adfa .Set ("\u0043\u0041",_de .MakeFloat (opt .Alpha ));_adfa .Set ("\u0063\u0061",_de .MakeFloat (opt .Alpha ));_afgbc =_dgcgc .AddExtGState (_cfgfe ,_adfa );if _afgbc !=nil {return _afgbc ;};_dfgcg :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_cfgfe ,_eaeb ,_beba ,_bdfd ,_ccffc ,_eacde );_dgcgc .AddContentStreamByString (_dfgcg );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbgd *PdfAnnotationSquare )ToPdfObject ()_de .PdfObject {_fbgd .PdfAnnotation .ToPdfObject ();_deea :=_fbgd ._egag ;_ggae :=_deea .PdfObject .(*_de .PdfObjectDictionary );if _fbgd .PdfAnnotationMarkup !=nil {_fbgd .PdfAnnotationMarkup .appendToPdfDictionary (_ggae );};_ggae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ggae .SetIfNotNil ("\u0042\u0053",_fbgd .BS );_ggae .SetIfNotNil ("\u0049\u0043",_fbgd .IC );_ggae .SetIfNotNil ("\u0042\u0045",_fbgd .BE );_ggae .SetIfNotNil ("\u0052\u0044",_fbgd .RD );return _deea ;};func _cedd (_cabe _eba .StdFont )pdfFontSimple {_gbadf :=_cabe .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_dgbc :"\u0054\u0079\u0070e\u0031",_fbaf :_cabe .Name ()},_dbbb :_cabe .GetMetricsTable (),_eegg :&PdfFontDescriptor {FontName :_de .MakeName (string (_gbadf .Name )),FontFamily :_de .MakeName (_gbadf .Family ),FontWeight :_de .MakeFloat (float64 (_gbadf .Weight )),Flags :_de .MakeInteger (int64 (_gbadf .Flags )),FontBBox :_de .MakeArrayFromFloats (_gbadf .BBox [:]),ItalicAngle :_de .MakeFloat (_gbadf .ItalicAngle ),Ascent :_de .MakeFloat (_gbadf .Ascent ),Descent :_de .MakeFloat (_gbadf .Descent ),CapHeight :_de .MakeFloat (_gbadf .CapHeight ),XHeight :_de .MakeFloat (_gbadf .XHeight ),StemV :_de .MakeFloat (_gbadf .StemV ),StemH :_de .MakeFloat (_gbadf .StemH )},_ffdc :_cabe .Encoder ()};};

// ToPdfObject implements interface PdfModel.
func (_agca *PdfAnnotationMovie )ToPdfObject ()_de .PdfObject {_agca .PdfAnnotation .ToPdfObject ();_acca :=_agca ._egag ;_cdfd :=_acca .PdfObject .(*_de .PdfObjectDictionary );_cdfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u004d\u006f\u0076i\u0065"));_cdfd .SetIfNotNil ("\u0054",_agca .T );_cdfd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_agca .Movie );_cdfd .SetIfNotNil ("\u0041",_agca .A );return _acca ;};

// GetContentStream returns the XObject Form's content stream.
func (_adcdg *XObjectForm )GetContentStream ()([]byte ,error ){_acag ,_gfad :=_de .DecodeStream (_adcdg ._bdda );if _gfad !=nil {return nil ,_gfad ;};return _acag ,nil ;};func _dcgg ()string {return _ddgbd };

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_dgbf *PdfReader )GetEncryptionMethod ()string {_dbeg :=_dgbf ._bffa .GetCrypter ();return _dbeg .String ();};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_de .PdfObjectArray ;Matrix *_de .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_abcbe *PdfSignature )ToPdfObject ()_de .PdfObject {_ebfg :=_abcbe ._cgda ;var _babag *_de .PdfObjectDictionary ;if _ffdgg ,_addaf :=_ebfg .PdfObject .(*pdfSignDictionary );_addaf {_babag =_ffdgg .PdfObjectDictionary ;}else {_babag =_ebfg .PdfObject .(*_de .PdfObjectDictionary );};_babag .SetIfNotNil ("\u0054\u0079\u0070\u0065",_abcbe .Type );_babag .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_abcbe .Filter );_babag .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_abcbe .SubFilter );_babag .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_abcbe .ByteRange );_babag .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_abcbe .Contents );_babag .SetIfNotNil ("\u0043\u0065\u0072\u0074",_abcbe .Cert );_babag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abcbe .Name );_babag .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_abcbe .Reason );_babag .SetIfNotNil ("\u004d",_abcbe .M );_babag .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_abcbe .Reference );_babag .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_abcbe .Changes );_babag .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_abcbe .ContactInfo );return _ebfg ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dcfga DefaultImageHandler )Read (reader _ea .Reader )(*Image ,error ){_gagd ,_ ,_bgfaf :=_dd .Decode (reader );if _bgfaf !=nil {_dg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bgfaf );return nil ,_bgfaf ;};return _dcfga .NewImageFromGoImage (_gagd );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ccf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecafe :=vals [0];if _ecafe < 0.0||_ecafe > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cecgf :=vals [1];if _cecgf < 0.0||_cecgf > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgd :=vals [2];if _afgd < 0.0||_afgd > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebcee :=NewPdfColorCalRGB (_ecafe ,_cecgf ,_afgd );return _ebcee ,nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// Width returns the width of `rect`.
func (_eeabc *PdfRectangle )Width ()float64 {return _ac .Abs (_eeabc .Urx -_eeabc .Llx )};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bcad *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bfcaa *modelManager )GetModelFromPrimitive (primitive _de .PdfObject )PdfModel {model ,_eaae :=_bfcaa ._gefca [primitive ];if !_eaae {return nil ;};return model ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bbfcb *PdfOutlineTreeNode )GetContainingPdfObject ()_de .PdfObject {return _bbfcb .GetContext ().GetContainingPdfObject ();};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cbbbc *PdfPageResources )GetContainingPdfObject ()_de .PdfObject {return _cbbbc ._gfbgd };

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_bef :=NewPdfAnnotation ();_accb :=&PdfAnnotationPopup {};_accb .PdfAnnotation =_bef ;_bef .SetContext (_accb );return _accb ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_efbbg *PdfReader )GetOutlines ()(*Outline ,error ){if _efbbg ==nil {return nil ,_eae .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_feada :=_efbbg .GetOutlineTree ();if _feada ==nil {return nil ,_eae .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _caecgb func (_egfbdc *PdfOutlineTreeNode ,_faee *[]*OutlineItem );_caecgb =func (_feac *PdfOutlineTreeNode ,_cbgeag *[]*OutlineItem ){if _feac ==nil {return ;};if _feac ._deec ==nil {_dg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _dbdc *OutlineItem ;if _cbaca ,_ccfd :=_feac ._deec .(*PdfOutlineItem );_ccfd {_daeda :=_cbaca .Dest ;if (_daeda ==nil ||_de .IsNullObject (_daeda ))&&_cbaca .A !=nil {if _fggdd ,_cbgaa :=_de .GetDict (_cbaca .A );_cbgaa {_daeda ,_ =_de .GetArray (_fggdd .Get ("\u0044"));};};var _ggec OutlineDest ;if _daeda !=nil &&!_de .IsNullObject (_daeda ){if _gffge ,_fgagb :=_ecbg (_daeda ,_efbbg );_fgagb ==nil {_ggec =*_gffge ;}else {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_daeda ,_fgagb );};};_dbdc =NewOutlineItem (_cbaca .Title .Decoded (),_ggec );*_cbgeag =append (*_cbgeag ,_dbdc );if _cbaca .Next !=nil {_caecgb (_cbaca .Next ,_cbgeag );};};if _feac .First !=nil {if _dbdc !=nil {_cbgeag =&_dbdc .Entries ;};_caecgb (_feac .First ,_cbgeag );};};_bbfb :=NewOutline ();_caecgb (_feada ,&_bbfb .Entries );return _bbfb ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_edaf ,_cbcfa :=NewStandard14Font (basefont );if _cbcfa !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _edaf ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _de .PdfObject ;T3DV _de .PdfObject ;T3DA _de .PdfObject ;T3DI _de .PdfObject ;T3DB _de .PdfObject ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_aecce *PdfOutline )GetContainingPdfObject ()_de .PdfObject {return _aecce ._eddcd };

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_egg *PdfAppender )UpdateObject (obj _de .PdfObject ){_egg .replaceObject (obj ,obj );if _ ,_babg :=_egg ._cgge [obj ];!_babg {_egg ._ccda =append (_egg ._ccda ,obj );_egg ._cgge [obj ]=struct{}{};};};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_dbaed OutlineDest )ToPdfObject ()_de .PdfObject {if (_dbaed .PageObj ==nil &&_dbaed .Page < 0)||_dbaed .Mode ==""{return _de .MakeNull ();};_adfc :=_de .MakeArray ();if _dbaed .PageObj !=nil {_adfc .Append (_dbaed .PageObj );}else {_adfc .Append (_de .MakeInteger (_dbaed .Page ));};_adfc .Append (_de .MakeName (_dbaed .Mode ));switch _dbaed .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_adfc .Append (_de .MakeFloat (_dbaed .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_adfc .Append (_de .MakeFloat (_dbaed .X ));case "\u0058\u0059\u005a":_adfc .Append (_de .MakeFloat (_dbaed .X ));_adfc .Append (_de .MakeFloat (_dbaed .Y ));_adfc .Append (_de .MakeFloat (_dbaed .Zoom ));default:_adfc .Set (1,_de .MakeName ("\u0046\u0069\u0074"));};return _adfc ;};func (_dgfeg *PdfFilespec )getDict ()*_de .PdfObjectDictionary {if _ffegb ,_dfce :=_dgfeg ._dcfb .(*_de .PdfIndirectObject );_dfce {_befb ,_egdbe :=_ffegb .PdfObject .(*_de .PdfObjectDictionary );if !_egdbe {return nil ;};return _befb ;}else if _ggbg ,_eebc :=_dgfeg ._dcfb .(*_de .PdfObjectDictionary );_eebc {return _ggbg ;}else {_dg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dgfeg ._dcfb );return nil ;};};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ddgbd =subject };func (_gaca *PdfReader )newPdfActionRenditionFromDict (_ega *_de .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ega .Get ("\u0052"),AN :_ega .Get ("\u0041\u004e"),OP :_ega .Get ("\u004f\u0050"),JS :_ega .Get ("\u004a\u0053")},nil ;};var _bbfde _a .Time ;func _adbcd (_abfb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_abfb }};func _dacbc (_fgac _de .PdfObject )(*PdfColorspaceCalRGB ,error ){_aecac :=NewPdfColorspaceCalRGB ();if _gdef ,_cagf :=_fgac .(*_de .PdfIndirectObject );_cagf {_aecac ._cbdb =_gdef ;};_fgac =_de .TraceToDirectObject (_fgac );_ffda ,_fdced :=_fgac .(*_de .PdfObjectArray );if !_fdced {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffda .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_fgac =_de .TraceToDirectObject (_ffda .Get (0));_acab ,_fdced :=_fgac .(*_de .PdfObjectName );if !_fdced {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_acab !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fgac =_de .TraceToDirectObject (_ffda .Get (1));_dfccb ,_fdced :=_fgac .(*_de .PdfObjectDictionary );if !_fdced {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_fgac =_dfccb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fgac =_de .TraceToDirectObject (_fgac );_eefa ,_fdced :=_fgac .(*_de .PdfObjectArray );if !_fdced {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _eefa .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gacf ,_fefa :=_eefa .GetAsFloat64Slice ();if _fefa !=nil {return nil ,_fefa ;};_aecac .WhitePoint =_gacf ;_fgac =_dfccb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fgac !=nil {_fgac =_de .TraceToDirectObject (_fgac );_dge ,_dcege :=_fgac .(*_de .PdfObjectArray );if !_dcege {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _dge .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_fbccd ,_cbge :=_dge .GetAsFloat64Slice ();if _cbge !=nil {return nil ,_cbge ;};_aecac .BlackPoint =_fbccd ;};_fgac =_dfccb .Get ("\u0047\u0061\u006dm\u0061");if _fgac !=nil {_fgac =_de .TraceToDirectObject (_fgac );_bgce ,_cbcg :=_fgac .(*_de .PdfObjectArray );if !_cbcg {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bgce .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_gbff ,_afgba :=_bgce .GetAsFloat64Slice ();if _afgba !=nil {return nil ,_afgba ;};_aecac .Gamma =_gbff ;};_fgac =_dfccb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fgac !=nil {_fgac =_de .TraceToDirectObject (_fgac );_cefd ,_geef :=_fgac .(*_de .PdfObjectArray );if !_geef {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cefd .Len ()!=9{_dg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cefd .String ());return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_ecbf ,_dggf :=_cefd .GetAsFloat64Slice ();if _dggf !=nil {return nil ,_dggf ;};_aecac .Matrix =_ecbf ;};return _aecac ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_cab PdfModel ;Rect _de .PdfObject ;Contents _de .PdfObject ;P _de .PdfObject ;NM _de .PdfObject ;M _de .PdfObject ;F _de .PdfObject ;AP _de .PdfObject ;AS _de .PdfObject ;Border _de .PdfObject ;C _de .PdfObject ;StructParent _de .PdfObject ;OC _de .PdfObject ;_egag *_de .PdfIndirectObject ;};

// ToPdfObject returns a stream object.
func (_gaegba *XObjectForm )ToPdfObject ()_de .PdfObject {_fdeed :=_gaegba ._bdda ;_adbbe :=_fdeed .PdfObjectDictionary ;if _gaegba .Filter !=nil {_adbbe =_gaegba .Filter .MakeStreamDict ();_fdeed .PdfObjectDictionary =_adbbe ;};_adbbe .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_adbbe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0046\u006f\u0072\u006d"));_adbbe .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gaegba .FormType );_adbbe .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gaegba .BBox );_adbbe .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gaegba .Matrix );if _gaegba .Resources !=nil {_adbbe .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gaegba .Resources .ToPdfObject ());};_adbbe .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gaegba .Group );_adbbe .SetIfNotNil ("\u0052\u0065\u0066",_gaegba .Ref );_adbbe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gaegba .MetaData );_adbbe .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gaegba .PieceInfo );_adbbe .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gaegba .LastModified );_adbbe .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gaegba .StructParent );_adbbe .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gaegba .StructParents );_adbbe .SetIfNotNil ("\u004f\u0050\u0049",_gaegba .OPI );_adbbe .SetIfNotNil ("\u004f\u0043",_gaegba .OC );_adbbe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gaegba .Name );_adbbe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_gaegba .Stream ))));_fdeed .Stream =_gaegba .Stream ;return _fdeed ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_fbgb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _de .GetNumberAsFloat (_fbgb .Ascent );};func (_cggad *Image )resampleLowBits (_fdaef []uint32 ){_bcaa :=_bdb .BytesPerLine (int (_cggad .Width ),int (_cggad .BitsPerComponent ),_cggad .ColorComponents );_fffb :=make ([]byte ,_cggad .ColorComponents *_bcaa *int (_cggad .Height ));_bggc :=int (_cggad .BitsPerComponent )*_cggad .ColorComponents *int (_cggad .Width );_fcbb :=uint8 (8);var (_gfbcc ,_cdcdd int ;_fbdd uint32 ;);for _ffbcb :=0;_ffbcb < int (_cggad .Height );_ffbcb ++{_cdcdd =_ffbcb *_bcaa ;for _abgff :=0;_abgff < _bggc ;_abgff ++{_fbdd =_fdaef [_gfbcc ];_fcbb -=uint8 (_cggad .BitsPerComponent );_fffb [_cdcdd ]|=byte (_fbdd )<<_fcbb ;if _fcbb ==0{_fcbb =8;_cdcdd ++;};_gfbcc ++;};};_cggad .Data =_fffb ;};func (_gcegg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gcegg .fontCommon };func (_eadd *pdfFontType0 )bytesToCharcodes (_ddgaa []byte )([]_ed .CharCode ,bool ){if _eadd ._abgb ==nil {return nil ,false ;};_defeg ,_bdddf :=_eadd ._abgb .BytesToCharcodes (_ddgaa );if !_bdddf {return nil ,false ;};_gbae :=make ([]_ed .CharCode ,len (_defeg ));for _bdege ,_cafac :=range _defeg {_gbae [_bdege ]=_ed .CharCode (_cafac );};return _gbae ,true ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_egcfd *PdfField )GetContext ()PdfModel {return _egcfd ._cbee };

// ToPdfObject implements interface PdfModel.
func (_fcgb *PdfActionResetForm )ToPdfObject ()_de .PdfObject {_fcgb .PdfAction .ToPdfObject ();_cad :=_fcgb ._daa ;_ace :=_cad .PdfObject .(*_de .PdfObjectDictionary );_ace .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeResetForm )));_ace .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fcgb .Fields );_ace .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fcgb .Flags );return _cad ;};type pdfFont interface{_eba .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_de .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject returns a stream object.
func (_aafc *XObjectImage )ToPdfObject ()_de .PdfObject {_fcced :=_aafc ._cccf ;_bccgd :=_fcced .PdfObjectDictionary ;if _aafc .Filter !=nil {_bccgd =_aafc .Filter .MakeStreamDict ();_fcced .PdfObjectDictionary =_bccgd ;};_bccgd .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bccgd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0049\u006d\u0061g\u0065"));_bccgd .Set ("\u0057\u0069\u0064t\u0068",_de .MakeInteger (*(_aafc .Width )));_bccgd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_de .MakeInteger (*(_aafc .Height )));if _aafc .BitsPerComponent !=nil {_bccgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_de .MakeInteger (*(_aafc .BitsPerComponent )));};if _aafc .ColorSpace !=nil {_bccgd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aafc .ColorSpace .ToPdfObject ());};_bccgd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_aafc .Intent );_bccgd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_aafc .ImageMask );_bccgd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_aafc .Mask );_bccgd .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_aafc .Decode );_bccgd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_aafc .Interpolate );_bccgd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_aafc .Alternatives );_bccgd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_aafc .SMask );_bccgd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_aafc .SMaskInData );_bccgd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aafc .Matte );_bccgd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aafc .Name );_bccgd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aafc .StructParent );_bccgd .SetIfNotNil ("\u0049\u0044",_aafc .ID );_bccgd .SetIfNotNil ("\u004f\u0050\u0049",_aafc .OPI );_bccgd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aafc .Metadata );_bccgd .SetIfNotNil ("\u004f\u0043",_aafc .OC );_bccgd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_aafc .Stream ))));_fcced .Stream =_aafc .Stream ;return _fcced ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_begb *PdfColorspaceDeviceRGB )ToPdfObject ()_de .PdfObject {return _de .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_eadg *PdfColorspaceLab )GetNumComponents ()int {return 3};func _acfa ()string {return _cbca };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_gfcbb *PdfPage )GetAllContentStreams ()(string ,error ){_fbge ,_fgfe :=_gfcbb .GetContentStreams ();if _fgfe !=nil {return "",_fgfe ;};return _fe .Join (_fbge ,"\u0020"),nil ;};func (_bgbgc *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bgbgc ._ccbgb };var ImageHandling ImageHandler =DefaultImageHandler {};

// R returns the value of the red component of the color.
func (_bbca *PdfColorDeviceRGB )R ()float64 {return float64 (_bbca [0])};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ggacc byte )byte ;func (_bfec *PdfShading )getShadingDict ()(*_de .PdfObjectDictionary ,error ){_abea :=_bfec ._bcfa ;if _geab ,_ccdae :=_abea .(*_de .PdfIndirectObject );_ccdae {_cgfa ,_fbcf :=_geab .PdfObject .(*_de .PdfObjectDictionary );if !_fbcf {return nil ,_de .ErrTypeError ;};return _cgfa ,nil ;}else if _gcbfd ,_ebdg :=_abea .(*_de .PdfObjectStream );_ebdg {return _gcbfd .PdfObjectDictionary ,nil ;}else if _bcdb ,_gbee :=_abea .(*_de .PdfObjectDictionary );_gbee {return _bcdb ,nil ;}else {_dg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_de .ErrTypeError ;};};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_aeg :=NewPdfAction ();_bgb :=&PdfActionGoToE {};_bgb .PdfAction =_aeg ;_aeg .SetContext (_bgb );return _bgb ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ceadd *PdfColorspaceLab )ToPdfObject ()_de .PdfObject {_bacf :=_de .MakeArray ();_bacf .Append (_de .MakeName ("\u004c\u0061\u0062"));_bcfg :=_de .MakeDict ();if _ceadd .WhitePoint !=nil {_gbeb :=_de .MakeArray (_de .MakeFloat (_ceadd .WhitePoint [0]),_de .MakeFloat (_ceadd .WhitePoint [1]),_de .MakeFloat (_ceadd .WhitePoint [2]));_bcfg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gbeb );}else {_dg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _ceadd .BlackPoint !=nil {_dcdc :=_de .MakeArray (_de .MakeFloat (_ceadd .BlackPoint [0]),_de .MakeFloat (_ceadd .BlackPoint [1]),_de .MakeFloat (_ceadd .BlackPoint [2]));_bcfg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dcdc );};if _ceadd .Range !=nil {_edbgg :=_de .MakeArray (_de .MakeFloat (_ceadd .Range [0]),_de .MakeFloat (_ceadd .Range [1]),_de .MakeFloat (_ceadd .Range [2]),_de .MakeFloat (_ceadd .Range [3]));_bcfg .Set ("\u0052\u0061\u006eg\u0065",_edbgg );};_bacf .Append (_bcfg );if _ceadd ._dbcga !=nil {_ceadd ._dbcga .PdfObject =_bacf ;return _ceadd ._dbcga ;};return _bacf ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ccec *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ccec .AlternateSpace ==nil {return nil ,_eae .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _ccec .AlternateSpace .ColorToRGB (color );};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;BitsPerFlag *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};func (_dagdb *PdfPage )setContainer (_ffea *_de .PdfIndirectObject ){_ffea .PdfObject =_dagdb ._abdg ;_dagdb ._debgbf =_ffea ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ffac *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bccbg :=vals [0];if _bccbg < 0.0||_bccbg > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggade :=NewPdfColorCalGray (_bccbg );return _ggade ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cadeb *Image )ColorAt (x ,y int )(_c .Color ,error ){_becd :=_bdb .BytesPerLine (int (_cadeb .Width ),int (_cadeb .BitsPerComponent ),_cadeb .ColorComponents );switch _cadeb .ColorComponents {case 1:return _bdb .ColorAtGrayscale (x ,y ,int (_cadeb .BitsPerComponent ),_becd ,_cadeb .Data ,_cadeb ._fbdfg );case 3:return _bdb .ColorAtNRGBA (x ,y ,int (_cadeb .Width ),_becd ,int (_cadeb .BitsPerComponent ),_cadeb .Data ,_cadeb ._abbgb ,_cadeb ._fbdfg );case 4:return _bdb .ColorAtCMYK (x ,y ,int (_cadeb .Width ),_cadeb .Data ,_cadeb ._fbdfg );};_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cadeb .ColorComponents ,_cadeb .BitsPerComponent );return nil ,_eae .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_agcdd *XObjectImage )SetFilter (encoder _de .StreamEncoder )error {_afcfa :=_agcdd .Stream ;_ffadb ,_fdec :=_agcdd .Filter .DecodeBytes (_afcfa );if _fdec !=nil {return _fdec ;};_agcdd .Filter =encoder ;encoder .UpdateParams (_agcdd .getParamsDict ());_afcfa ,_fdec =encoder .EncodeBytes (_ffadb );if _fdec !=nil {return _fdec ;};_agcdd .Stream =_afcfa ;return nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bfaa *PdfPage )SetContentStreams (cStreams []string ,encoder _de .StreamEncoder )error {if len (cStreams )==0{_bfaa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_de .NewRawEncoder ();};var _ceebb []*_de .PdfObjectStream ;for _ ,_dedg :=range cStreams {_fabdd :=&_de .PdfObjectStream {};_eedf :=encoder .MakeStreamDict ();_afccef ,_ffcd :=encoder .EncodeBytes ([]byte (_dedg ));if _ffcd !=nil {return _ffcd ;};_eedf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_afccef ))));_fabdd .PdfObjectDictionary =_eedf ;_fabdd .Stream =[]byte (_afccef );_ceebb =append (_ceebb ,_fabdd );};if len (_ceebb )==1{_bfaa .Contents =_ceebb [0];}else {_eeceb :=_de .MakeArray ();for _ ,_cggg :=range _ceebb {_eeceb .Append (_cggg );};_bfaa .Contents =_eeceb ;};return nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _de .PdfObject ;IsMap _de .PdfObject ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _de .PdfObject ;BS _de .PdfObject ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _de .PdfObject ;ColorSpace _de .PdfObject ;Pattern _de .PdfObject ;Shading _de .PdfObject ;XObject _de .PdfObject ;Font _de .PdfObject ;ProcSet _de .PdfObject ;Properties _de .PdfObject ;_gfbgd *_de .PdfObjectDictionary ;_dcgdc *PdfPageResourcesColorspaces ;};

// C returns the value of the cyan component of the color.
func (_acebd *PdfColorDeviceCMYK )C ()float64 {return float64 (_acebd [0])};func (_fcfd *fontFile )loadFromSegments (_gbec ,_cecgb []byte )error {_dg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gbec ),len (_cecgb ));_cgaf :=_fcfd .parseASCIIPart (_gbec );if _cgaf !=nil {return _cgaf ;};_dg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fcfd );if len (_cecgb )==0{return nil ;};_dg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fcfd );return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_ecad *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gbad *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gaed :=vals [0];if _gaed < 0.0||_gaed > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gaec :=vals [1];if _gaec < 0.0||_gaec > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aee :=vals [2];if _aee < 0.0||_aee > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aabf :=vals [3];if _aabf < 0.0||_aabf > 1.0{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfdg :=NewPdfColorDeviceCMYK (_gaed ,_gaec ,_aee ,_aabf );return _gfdg ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_caafc *PdfPageResources )GetXObjectFormByName (keyName _de .PdfObjectName )(*XObjectForm ,error ){_dfgfe ,_fdbge :=_caafc .GetXObjectByName (keyName );if _dfgfe ==nil {return nil ,nil ;};if _fdbge !=XObjectTypeForm {return nil ,_eae .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_dggcg ,_agfafd :=NewXObjectFormFromStream (_dfgfe );if _agfafd !=nil {return nil ,_agfafd ;};return _dggcg ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_eeec *pdfFontSimple )ToPdfObject ()_de .PdfObject {if _eeec ._dfada ==nil {_eeec ._dfada =&_de .PdfIndirectObject {};};_cagea :=_eeec .baseFields ().asPdfObjectDictionary ("");_eeec ._dfada .PdfObject =_cagea ;if _eeec .FirstChar !=nil {_cagea .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eeec .FirstChar );};if _eeec .LastChar !=nil {_cagea .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eeec .LastChar );};if _eeec .Widths !=nil {_cagea .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eeec .Widths );};if _eeec .Encoding !=nil {_cagea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eeec .Encoding );}else if _eeec ._bbcag !=nil {_fcgce :=_eeec ._bbcag .ToPdfObject ();if _fcgce !=nil {_cagea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcgce );};};return _eeec ._dfada ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_fbcba *Image )AlphaMap (mapFunc AlphaMapFunc ){for _fggf ,_ebafd :=range _fbcba ._abbgb {_fbcba ._abbgb [_fggf ]=mapFunc (_ebafd );};};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _de .PdfObject ;Mac _de .PdfObject ;Unix _de .PdfObject ;NewWindow _de .PdfObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cgbae *Image )ConvertToBinary ()error {if _cgbae .ColorComponents ==1&&_cgbae .BitsPerComponent ==1{return nil ;};_acgd ,_bfbc :=_cgbae .ToGoImage ();if _bfbc !=nil {return _bfbc ;};_gaecbe ,_bfbc :=_bdb .MonochromeConverter .Convert (_acgd );if _bfbc !=nil {return _bfbc ;};_cgbae .BitsPerComponent =1;_cgbae .ColorComponents =1;_cgbae .Data =_gaecbe .Base ().Data ;return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_egde *PdfFieldChoice )ToPdfObject ()_de .PdfObject {_egde .PdfField .ToPdfObject ();_aadb :=_egde ._bddd ;_bagfb :=_aadb .PdfObject .(*_de .PdfObjectDictionary );_bagfb .Set ("\u0046\u0054",_de .MakeName ("\u0043\u0068"));if _egde .Opt !=nil {_bagfb .Set ("\u004f\u0070\u0074",_egde .Opt );};if _egde .TI !=nil {_bagfb .Set ("\u0054\u0049",_egde .TI );};if _egde .I !=nil {_bagfb .Set ("\u0049",_egde .I );};return _aadb ;};

// ToPdfObject implements interface PdfModel.
func (_afb *PdfActionMovie )ToPdfObject ()_de .PdfObject {_afb .PdfAction .ToPdfObject ();_efb :=_afb ._daa ;_cbe :=_efb .PdfObject .(*_de .PdfObjectDictionary );_cbe .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeMovie )));_cbe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_afb .Annotation );_cbe .SetIfNotNil ("\u0054",_afb .T );_cbe .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_afb .Operation );return _efb ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ddd :=NewPdfAnnotation ();_cfc :=&PdfAnnotationCaret {};_cfc .PdfAnnotation =_ddd ;_cfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddd .SetContext (_cfc );return _cfc ;};func _fbgg (_dbbf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dbbf }};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_effda *XObjectForm )SetContentStream (content []byte ,encoder _de .StreamEncoder )error {_cegde :=content ;if encoder ==nil {if _effda .Filter !=nil {encoder =_effda .Filter ;}else {encoder =_de .NewRawEncoder ();};};_ffegd ,_bcac :=encoder .EncodeBytes (_cegde );if _bcac !=nil {return _bcac ;};_cegde =_ffegd ;_effda .Stream =_cegde ;_effda .Filter =encoder ;return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_de .PdfObjectArray ;TI *_de .PdfObjectInteger ;I *_de .PdfObjectArray ;};func (_fggg *PdfAppender )mergeResources (_ddf ,_eddea _de .PdfObject ,_bbgd map[_de .PdfObjectName ]_de .PdfObjectName )_de .PdfObject {if _eddea ==nil &&_ddf ==nil {return nil ;};if _eddea ==nil {return _ddf ;};_bddg ,_fafb :=_de .GetDict (_eddea );if !_fafb {return _ddf ;};if _ddf ==nil {_dgaf :=_de .MakeDict ();_dgaf .Merge (_bddg );return _eddea ;};_afgb ,_fafb :=_de .GetDict (_ddf );if !_fafb {_dg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_afgb =_de .MakeDict ();};for _ ,_eaea :=range _bddg .Keys (){if _ecee ,_cca :=_bbgd [_eaea ];_cca {_afgb .Set (_ecee ,_bddg .Get (_eaea ));}else {_afgb .Set (_eaea ,_bddg .Get (_eaea ));};};return _afgb ;};

// WriteString outputs the object as it is to be written to file.
func (_fgfff *pdfSignDictionary )WriteString ()string {_fgfff ._gbbff =0;_fgfff ._eaaaa =0;_fgfff ._becge =0;_fgfff ._bgdc =0;_gfga :=_eff .NewBuffer (nil );_gfga .WriteString ("\u003c\u003c");for _ ,_efae :=range _fgfff .Keys (){_bggd :=_fgfff .Get (_efae );switch _efae {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gfga .WriteString (_efae .WriteString ());_gfga .WriteString ("\u0020");_fgfff ._becge =_gfga .Len ();_gfga .WriteString (_bggd .WriteString ());_gfga .WriteString ("\u0020");_fgfff ._bgdc =_gfga .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gfga .WriteString (_efae .WriteString ());_gfga .WriteString ("\u0020");_fgfff ._gbbff =_gfga .Len ();_gfga .WriteString (_bggd .WriteString ());_gfga .WriteString ("\u0020");_fgfff ._eaaaa =_gfga .Len ()-1;default:_gfga .WriteString (_efae .WriteString ());_gfga .WriteString ("\u0020");_gfga .WriteString (_bggd .WriteString ());};};_gfga .WriteString ("\u003e\u003e");return _gfga .String ();};

// ToPdfObject implements interface PdfModel.
func (_add *PdfActionRendition )ToPdfObject ()_de .PdfObject {_add .PdfAction .ToPdfObject ();_aec :=_add ._daa ;_cdg :=_aec .PdfObject .(*_de .PdfObjectDictionary );_cdg .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeRendition )));_cdg .SetIfNotNil ("\u0052",_add .R );_cdg .SetIfNotNil ("\u0041\u004e",_add .AN );_cdg .SetIfNotNil ("\u004f\u0050",_add .OP );_cdg .SetIfNotNil ("\u004a\u0053",_add .JS );return _aec ;};

// Add appends a top level outline item to the outline.
func (_gecc *Outline )Add (item *OutlineItem ){_gecc .Entries =append (_gecc .Entries ,item )};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_bceg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_bceg .Mask ()|fl .Mask ())};func _ebffg (_caad _de .PdfObject )(*PdfShading ,error ){_bfgg :=&PdfShading {};var _aggbd *_de .PdfObjectDictionary ;if _cdegc ,_ddefd :=_de .GetIndirect (_caad );_ddefd {_bfgg ._bcfa =_cdegc ;_bbege ,_afbgf :=_cdegc .PdfObject .(*_de .PdfObjectDictionary );if !_afbgf {_dg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_de .ErrTypeError ;};_aggbd =_bbege ;}else if _aegcc ,_aeba :=_de .GetStream (_caad );_aeba {_bfgg ._bcfa =_aegcc ;_aggbd =_aegcc .PdfObjectDictionary ;}else if _cdab ,_eafd :=_de .GetDict (_caad );_eafd {_bfgg ._bcfa =_cdab ;_aggbd =_cdab ;}else {_dg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_caad );return nil ,_de .ErrTypeError ;};if _aggbd ==nil {_dg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_eae .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_caad =_aggbd .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _caad ==nil {_dg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_caad =_de .TraceToDirectObject (_caad );_eceeg ,_cfeac :=_caad .(*_de .PdfObjectInteger );if !_cfeac {_dg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_caad );return nil ,_de .ErrTypeError ;};if *_eceeg < 1||*_eceeg > 7{_dg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_eceeg );return nil ,_de .ErrTypeError ;};_bfgg .ShadingType =_eceeg ;_caad =_aggbd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _caad ==nil {_dg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccabf ,_agad :=NewPdfColorspaceFromPdfObject (_caad );if _agad !=nil {_dg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_agad );return nil ,_agad ;};_bfgg .ColorSpace =_ccabf ;_caad =_aggbd .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _caad !=nil {_caad =_de .TraceToDirectObject (_caad );_bgcg ,_fdefg :=_caad .(*_de .PdfObjectArray );if !_fdefg {_dg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_caad );return nil ,_de .ErrTypeError ;};_bfgg .Background =_bgcg ;};_caad =_aggbd .Get ("\u0042\u0042\u006f\u0078");if _caad !=nil {_caad =_de .TraceToDirectObject (_caad );_efdff ,_aggfa :=_caad .(*_de .PdfObjectArray );if !_aggfa {_dg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_caad );return nil ,_de .ErrTypeError ;};_defbe ,_geec :=NewPdfRectangle (*_efdff );if _geec !=nil {_dg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_geec );return nil ,_geec ;};_bfgg .BBox =_defbe ;};_caad =_aggbd .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _caad !=nil {_caad =_de .TraceToDirectObject (_caad );_gdgbdf ,_fdffe :=_caad .(*_de .PdfObjectBool );if !_fdffe {_dg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caad );return nil ,_de .ErrTypeError ;};_bfgg .AntiAlias =_gdgbdf ;};switch *_eceeg {case 1:_bfeaf ,_dfcf :=_eacfd (_aggbd );if _dfcf !=nil {return nil ,_dfcf ;};_bfeaf .PdfShading =_bfgg ;_bfgg ._afddf =_bfeaf ;return _bfgg ,nil ;case 2:_baeb ,_dffde :=_fadgg (_aggbd );if _dffde !=nil {return nil ,_dffde ;};_baeb .PdfShading =_bfgg ;_bfgg ._afddf =_baeb ;return _bfgg ,nil ;case 3:_ccbd ,_fdda :=_febdc (_aggbd );if _fdda !=nil {return nil ,_fdda ;};_ccbd .PdfShading =_bfgg ;_bfgg ._afddf =_ccbd ;return _bfgg ,nil ;case 4:_eafeg ,_gdbdb :=_gdddb (_aggbd );if _gdbdb !=nil {return nil ,_gdbdb ;};_eafeg .PdfShading =_bfgg ;_bfgg ._afddf =_eafeg ;return _bfgg ,nil ;case 5:_dfaf ,_dgcdf :=_eccgd (_aggbd );if _dgcdf !=nil {return nil ,_dgcdf ;};_dfaf .PdfShading =_bfgg ;_bfgg ._afddf =_dfaf ;return _bfgg ,nil ;case 6:_bdcg ,_bebff :=_gfcee (_aggbd );if _bebff !=nil {return nil ,_bebff ;};_bdcg .PdfShading =_bfgg ;_bfgg ._afddf =_bdcg ;return _bfgg ,nil ;case 7:_dfcb ,_ddec :=_eegag (_aggbd );if _ddec !=nil {return nil ,_ddec ;};_dfcb .PdfShading =_bfgg ;_bfgg ._afddf =_dfcb ;return _bfgg ,nil ;};return nil ,_eae .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};var _fbfba ="";

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ca :=NewPdfAction ();_gcg :=&PdfActionRendition {};_gcg .PdfAction =_ca ;_ca .SetContext (_gcg );return _gcg ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_efada *PdfReader )GetTrailer ()(*_de .PdfObjectDictionary ,error ){_faddg :=_efada ._bffa .GetTrailer ();if _faddg ==nil {return nil ,_eae .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _faddg ,nil ;};func _gcgca (_agf *PdfPage )map[_de .PdfObjectName ]_de .PdfObject {_eebg :=make (map[_de .PdfObjectName ]_de .PdfObject );if _agf .Resources ==nil {return _eebg ;};if _agf .Resources .Font !=nil {if _dgce ,_edfd :=_de .GetDict (_agf .Resources .Font );_edfd {for _ ,_aebda :=range _dgce .Keys (){_eebg [_aebda ]=_dgce .Get (_aebda );};};};if _agf .Resources .ExtGState !=nil {if _ccbc ,_dddge :=_de .GetDict (_agf .Resources .ExtGState );_dddge {for _ ,_gdebe :=range _ccbc .Keys (){_eebg [_gdebe ]=_ccbc .Get (_gdebe );};};};if _agf .Resources .XObject !=nil {if _bfbe ,_eege :=_de .GetDict (_agf .Resources .XObject );_eege {for _ ,_ggee :=range _bfbe .Keys (){_eebg [_ggee ]=_bfbe .Get (_ggee );};};};if _agf .Resources .Pattern !=nil {if _cgeb ,_eab :=_de .GetDict (_agf .Resources .Pattern );_eab {for _ ,_ded :=range _cgeb .Keys (){_eebg [_ded ]=_cgeb .Get (_ded );};};};if _agf .Resources .Shading !=nil {if _eda ,_cada :=_de .GetDict (_agf .Resources .Shading );_cada {for _ ,_efed :=range _eda .Keys (){_eebg [_efed ]=_eda .Get (_efed );};};};if _agf .Resources .ProcSet !=nil {if _eebf ,_cdga :=_de .GetDict (_agf .Resources .ProcSet );_cdga {for _ ,_ggff :=range _eebf .Keys (){_eebg [_ggff ]=_eebf .Get (_ggff );};};};if _agf .Resources .Properties !=nil {if _dgcc ,_bdae :=_de .GetDict (_agf .Resources .Properties );_bdae {for _ ,_abec :=range _dgcc .Keys (){_eebg [_abec ]=_dgcc .Get (_abec );};};};return _eebg ;};

// ToPdfObject implements interface PdfModel.
func (_efad *PdfAnnotationScreen )ToPdfObject ()_de .PdfObject {_efad .PdfAnnotation .ToPdfObject ();_gffa :=_efad ._egag ;_eagc :=_gffa .PdfObject .(*_de .PdfObjectDictionary );_eagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_eagc .SetIfNotNil ("\u0054",_efad .T );_eagc .SetIfNotNil ("\u004d\u004b",_efad .MK );_eagc .SetIfNotNil ("\u0041",_efad .A );_eagc .SetIfNotNil ("\u0041\u0041",_efad .AA );return _gffa ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_dffgd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ccaf ,_ ,_gacdc :=_dffgd .CharcodesToUnicodeWithStats (_dffgd .BytesToCharcodes (data ));_ecfb :=_ed .ExpandLigatures (_ccaf );return _ecfb ,_bd .RuneCountInString (_ecfb ),_gacdc ;};func _dafec (_bgda _de .PdfObject )(*PdfColorspaceLab ,error ){_fbbcd :=NewPdfColorspaceLab ();if _afae ,_efcbf :=_bgda .(*_de .PdfIndirectObject );_efcbf {_fbbcd ._dbcga =_afae ;};_bgda =_de .TraceToDirectObject (_bgda );_bbba ,_fbecd :=_bgda .(*_de .PdfObjectArray );if !_fbecd {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbba .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_bgda =_de .TraceToDirectObject (_bbba .Get (0));_eegc ,_fbecd :=_bgda .(*_de .PdfObjectName );if !_fbecd {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_eegc !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bgda =_de .TraceToDirectObject (_bbba .Get (1));_fgfg ,_fbecd :=_bgda .(*_de .PdfObjectDictionary );if !_fbecd {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_bgda =_fgfg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bgda =_de .TraceToDirectObject (_bgda );_decc ,_fbecd :=_bgda .(*_de .PdfObjectArray );if !_fbecd {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _decc .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_abca ,_ggag :=_decc .GetAsFloat64Slice ();if _ggag !=nil {return nil ,_ggag ;};_fbbcd .WhitePoint =_abca ;_bgda =_fgfg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bgda !=nil {_bgda =_de .TraceToDirectObject (_bgda );_gegd ,_bega :=_bgda .(*_de .PdfObjectArray );if !_bega {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gegd .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_deba ,_ggeb :=_gegd .GetAsFloat64Slice ();if _ggeb !=nil {return nil ,_ggeb ;};_fbbcd .BlackPoint =_deba ;};_bgda =_fgfg .Get ("\u0052\u0061\u006eg\u0065");if _bgda !=nil {_bgda =_de .TraceToDirectObject (_bgda );_eacf ,_ccggb :=_bgda .(*_de .PdfObjectArray );if !_ccggb {_dg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eacf .Len ()!=4{_dg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eeaa ,_efecf :=_eacf .GetAsFloat64Slice ();if _efecf !=nil {return nil ,_efecf ;};_fbbcd .Range =_eeaa ;};return _fbbcd ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _de .PdfObject ;Movie _de .PdfObject ;A _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fcac *PdfAnnotationRedact )ToPdfObject ()_de .PdfObject {_fcac .PdfAnnotation .ToPdfObject ();_afccf :=_fcac ._egag ;_dacd :=_afccf .PdfObject .(*_de .PdfObjectDictionary );_fcac .PdfAnnotationMarkup .appendToPdfDictionary (_dacd );_dacd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_dacd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcac .QuadPoints );_dacd .SetIfNotNil ("\u0049\u0043",_fcac .IC );_dacd .SetIfNotNil ("\u0052\u004f",_fcac .RO );_dacd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_fcac .OverlayText );_dacd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fcac .Repeat );_dacd .SetIfNotNil ("\u0044\u0041",_fcac .DA );_dacd .SetIfNotNil ("\u0051",_fcac .Q );return _afccf ;};

// ToPdfObject implements interface PdfModel.
func (_ageac *PdfAnnotationCaret )ToPdfObject ()_de .PdfObject {_ageac .PdfAnnotation .ToPdfObject ();_affc :=_ageac ._egag ;_defe :=_affc .PdfObject .(*_de .PdfObjectDictionary );_ageac .PdfAnnotationMarkup .appendToPdfDictionary (_defe );_defe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0043\u0061\u0072e\u0074"));_defe .SetIfNotNil ("\u0052\u0044",_ageac .RD );_defe .SetIfNotNil ("\u0053\u0079",_ageac .Sy );return _affc ;};func _gcbd (_dcaf _de .PdfObject ,_bcceb bool )(*PdfFont ,error ){_fbgdf ,_feggc ,_eebb :=_begf (_dcaf );if _eebb !=nil {if _eebb ==ErrType3FontNotSupported ||_eebb ==ErrType1CFontNotSupported {_egcge ,_afbcb :=_becf (_fbgdf ,_feggc ,nil );if _afbcb !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_feggc ,_afbcb );return nil ,_eebb ;};return &PdfFont {_fgef :_egcge },_eebb ;};return nil ,_eebb ;};_fffeg :=&PdfFont {};switch _feggc ._dgbc {case "\u0054\u0079\u0070e\u0030":if !_bcceb {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_feggc );return nil ,_eae .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fbfda ,_baef :=_gefb (_fbgdf ,_feggc );if _baef !=nil {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feggc ,_baef );return nil ,_baef ;};_fffeg ._fgef =_fbfda ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _affcc *pdfFontSimple ;_aafee ,_eccb :=_eba .NewStdFontByName (_eba .StdFontName (_feggc ._fbaf ));if _eccb {_fadd :=_cedd (_aafee );_fffeg ._fgef =&_fadd ;_fgeff :=_de .TraceToDirectObject (_fadd .ToPdfObject ());_fedg ,_fdcbd ,_adaf :=_begf (_fgeff );if _adaf !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_feggc ,_fadd );return nil ,_adaf ;};for _ ,_bbgbc :=range _fbgdf .Keys (){_fedg .Set (_bbgbc ,_fbgdf .Get (_bbgbc ));};_affcc ,_adaf =_becf (_fedg ,_fdcbd ,_fadd ._ffdc );if _adaf !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_feggc ,_fadd );return nil ,_adaf ;};_affcc ._dcgfb =_fadd ._dcgfb ;_affcc ._dbbb =_fadd ._dbbb ;}else {_affcc ,_eebb =_becf (_fbgdf ,_feggc ,nil );if _eebb !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_feggc ,_eebb );return nil ,_eebb ;};};_eebb =_affcc .addEncoding ();if _eebb !=nil {return nil ,_eebb ;};if _eccb {_affcc .updateStandard14Font ();};if _eccb &&_affcc ._bbcag ==nil &&_affcc ._ffdc ==nil {_dg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_affcc );_dg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_aafee );};if len (_affcc ._dcgfb )==0{_dg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_affcc );};_fffeg ._fgef =_affcc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_bagdd ,_dabbb :=_fcfe (_fbgdf ,_feggc );if _dabbb !=nil {_dg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dabbb );return nil ,_dabbb ;};_fffeg ._fgef =_bagdd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_degf ,_feea :=_bbbe (_fbgdf ,_feggc );if _feea !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_feggc ,_feea );return nil ,_feea ;};_fffeg ._fgef =_degf ;default:_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_feggc );return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_feggc );};return _fffeg ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_aebeeg *PdfFont )GetCharMetrics (code _ed .CharCode )(CharMetrics ,bool ){var _fafff _eba .CharMetrics ;switch _efbfe :=_aebeeg ._fgef .(type ){case *pdfFontSimple :if _egfba ,_acdf :=_efbfe .GetCharMetrics (code );_acdf {return _egfba ,_acdf ;};case *pdfFontType0 :if _fcbc ,_dagcb :=_efbfe .GetCharMetrics (code );_dagcb {return _fcbc ,_dagcb ;};case *pdfCIDFontType0 :if _cbbfc ,_fcce :=_efbfe .GetCharMetrics (code );_fcce {return _cbbfc ,_fcce ;};case *pdfCIDFontType2 :if _gdffa ,_bddcb :=_efbfe .GetCharMetrics (code );_bddcb {return _gdffa ,_bddcb ;};default:_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_aebeeg ._fgef );return _fafff ,false ;};if _cdae ,_aacc :=_aebeeg .GetFontDescriptor ();_aacc ==nil &&_cdae !=nil {return _eba .CharMetrics {Wx :_cdae ._cccgg },true ;};_dg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_aebeeg );return _fafff ,false ;};

// PartialName returns the partial name of the field.
func (_cac *PdfField )PartialName ()string {_bbed :="";if _cac .T !=nil {_bbed =_cac .T .Decoded ();}else {_dg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _bbed ;};

// GetContainingPdfObject implements interface PdfModel.
func (_edffg *PdfFilespec )GetContainingPdfObject ()_de .PdfObject {return _edffg ._dcfb };func (_efa *PdfReader )newPdfAnnotationFromIndirectObject (_gea *_de .PdfIndirectObject )(*PdfAnnotation ,error ){_bcf ,_edc :=_gea .PdfObject .(*_de .PdfObjectDictionary );if !_edc {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_efa ._edgab .GetModelFromPrimitive (_bcf );model !=nil {_fge ,_bga :=model .(*PdfAnnotation );if !_bga {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _fge ,nil ;};_dde :=&PdfAnnotation {};_dde ._egag =_gea ;_efa ._edgab .Register (_bcf ,_dde );if _cebcd :=_bcf .Get ("\u0054\u0079\u0070\u0065");_cebcd !=nil {_aebe ,_dfcg :=_cebcd .(*_de .PdfObjectName );if !_dfcg {_dg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cebcd );}else {if *_aebe !="\u0041\u006e\u006eo\u0074"{_dg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_aebe );};};};if _gbg :=_bcf .Get ("\u0052\u0065\u0063\u0074");_gbg !=nil {_dde .Rect =_gbg ;};if _cdef :=_bcf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cdef !=nil {_dde .Contents =_cdef ;};if _ffe :=_bcf .Get ("\u0050");_ffe !=nil {_dde .P =_ffe ;};if _gce :=_bcf .Get ("\u004e\u004d");_gce !=nil {_dde .NM =_gce ;};if _daef :=_bcf .Get ("\u004d");_daef !=nil {_dde .M =_daef ;};if _dgdd :=_bcf .Get ("\u0046");_dgdd !=nil {_dde .F =_dgdd ;};if _adcb :=_bcf .Get ("\u0041\u0050");_adcb !=nil {_dde .AP =_adcb ;};if _aff :=_bcf .Get ("\u0041\u0053");_aff !=nil {_dde .AS =_aff ;};if _bgaf :=_bcf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bgaf !=nil {_dde .Border =_bgaf ;};if _dab :=_bcf .Get ("\u0043");_dab !=nil {_dde .C =_dab ;};if _dccg :=_bcf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dccg !=nil {_dde .StructParent =_dccg ;};if _ecac :=_bcf .Get ("\u004f\u0043");_ecac !=nil {_dde .OC =_ecac ;};_fee :=_bcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fee ==nil {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_dde ._cab =nil ;return _dde ,nil ;};_fbe ,_ggc :=_fee .(*_de .PdfObjectName );if !_ggc {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fee );return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fee );};switch *_fbe {case "\u0054\u0065\u0078\u0074":_edbg ,_dgc :=_efa .newPdfAnnotationTextFromDict (_bcf );if _dgc !=nil {return nil ,_dgc ;};_edbg .PdfAnnotation =_dde ;_dde ._cab =_edbg ;return _dde ,nil ;case "\u004c\u0069\u006e\u006b":_aag ,_cabd :=_efa .newPdfAnnotationLinkFromDict (_bcf );if _cabd !=nil {return nil ,_cabd ;};_aag .PdfAnnotation =_dde ;_dde ._cab =_aag ;return _dde ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bfb ,_ced :=_efa .newPdfAnnotationFreeTextFromDict (_bcf );if _ced !=nil {return nil ,_ced ;};_bfb .PdfAnnotation =_dde ;_dde ._cab =_bfb ;return _dde ,nil ;case "\u004c\u0069\u006e\u0065":_adga ,_ceec :=_efa .newPdfAnnotationLineFromDict (_bcf );if _ceec !=nil {return nil ,_ceec ;};_adga .PdfAnnotation =_dde ;_dde ._cab =_adga ;_dg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dde ,_dde );_dg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_adga ,_adga );_dg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_adga .PdfAnnotationMarkup ,_adga .PdfAnnotationMarkup );return _dde ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_acb ,_geac :=_efa .newPdfAnnotationSquareFromDict (_bcf );if _geac !=nil {return nil ,_geac ;};_acb .PdfAnnotation =_dde ;_dde ._cab =_acb ;return _dde ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_fbc ,_bdf :=_efa .newPdfAnnotationCircleFromDict (_bcf );if _bdf !=nil {return nil ,_bdf ;};_fbc .PdfAnnotation =_dde ;_dde ._cab =_fbc ;return _dde ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_gddc ,_ebdf :=_efa .newPdfAnnotationPolygonFromDict (_bcf );if _ebdf !=nil {return nil ,_ebdf ;};_gddc .PdfAnnotation =_dde ;_dde ._cab =_gddc ;return _dde ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_agd ,_fcgbe :=_efa .newPdfAnnotationPolyLineFromDict (_bcf );if _fcgbe !=nil {return nil ,_fcgbe ;};_agd .PdfAnnotation =_dde ;_dde ._cab =_agd ;return _dde ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bbd ,_gcef :=_efa .newPdfAnnotationHighlightFromDict (_bcf );if _gcef !=nil {return nil ,_gcef ;};_bbd .PdfAnnotation =_dde ;_dde ._cab =_bbd ;return _dde ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ged ,_addb :=_efa .newPdfAnnotationUnderlineFromDict (_bcf );if _addb !=nil {return nil ,_addb ;};_ged .PdfAnnotation =_dde ;_dde ._cab =_ged ;return _dde ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ccba ,_aef :=_efa .newPdfAnnotationSquigglyFromDict (_bcf );if _aef !=nil {return nil ,_aef ;};_ccba .PdfAnnotation =_dde ;_dde ._cab =_ccba ;return _dde ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ebdc ,_edgd :=_efa .newPdfAnnotationStrikeOut (_bcf );if _edgd !=nil {return nil ,_edgd ;};_ebdc .PdfAnnotation =_dde ;_dde ._cab =_ebdc ;return _dde ,nil ;case "\u0043\u0061\u0072e\u0074":_ggcg ,_cadg :=_efa .newPdfAnnotationCaretFromDict (_bcf );if _cadg !=nil {return nil ,_cadg ;};_ggcg .PdfAnnotation =_dde ;_dde ._cab =_ggcg ;return _dde ,nil ;case "\u0053\u0074\u0061m\u0070":_bge ,_cfe :=_efa .newPdfAnnotationStampFromDict (_bcf );if _cfe !=nil {return nil ,_cfe ;};_bge .PdfAnnotation =_dde ;_dde ._cab =_bge ;return _dde ,nil ;case "\u0049\u006e\u006b":_abbg ,_fbfdf :=_efa .newPdfAnnotationInkFromDict (_bcf );if _fbfdf !=nil {return nil ,_fbfdf ;};_abbg .PdfAnnotation =_dde ;_dde ._cab =_abbg ;return _dde ,nil ;case "\u0050\u006f\u0070u\u0070":_affe ,_dce :=_efa .newPdfAnnotationPopupFromDict (_bcf );if _dce !=nil {return nil ,_dce ;};_affe .PdfAnnotation =_dde ;_dde ._cab =_affe ;return _dde ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_afde ,_gcaf :=_efa .newPdfAnnotationFileAttachmentFromDict (_bcf );if _gcaf !=nil {return nil ,_gcaf ;};_afde .PdfAnnotation =_dde ;_dde ._cab =_afde ;return _dde ,nil ;case "\u0053\u006f\u0075n\u0064":_ceeca ,_gedb :=_efa .newPdfAnnotationSoundFromDict (_bcf );if _gedb !=nil {return nil ,_gedb ;};_ceeca .PdfAnnotation =_dde ;_dde ._cab =_ceeca ;return _dde ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bad ,_afdd :=_efa .newPdfAnnotationRichMediaFromDict (_bcf );if _afdd !=nil {return nil ,_afdd ;};_bad .PdfAnnotation =_dde ;_dde ._cab =_bad ;return _dde ,nil ;case "\u004d\u006f\u0076i\u0065":_gbfg ,_dfbb :=_efa .newPdfAnnotationMovieFromDict (_bcf );if _dfbb !=nil {return nil ,_dfbb ;};_gbfg .PdfAnnotation =_dde ;_dde ._cab =_gbfg ;return _dde ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_fff ,_bdec :=_efa .newPdfAnnotationScreenFromDict (_bcf );if _bdec !=nil {return nil ,_bdec ;};_fff .PdfAnnotation =_dde ;_dde ._cab =_fff ;return _dde ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_eec ,_cdfb :=_efa .newPdfAnnotationWidgetFromDict (_bcf );if _cdfb !=nil {return nil ,_cdfb ;};_eec .PdfAnnotation =_dde ;_dde ._cab =_eec ;return _dde ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_fba ,_fgb :=_efa .newPdfAnnotationPrinterMarkFromDict (_bcf );if _fgb !=nil {return nil ,_fgb ;};_fba .PdfAnnotation =_dde ;_dde ._cab =_fba ;return _dde ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_geacf ,_aca :=_efa .newPdfAnnotationTrapNetFromDict (_bcf );if _aca !=nil {return nil ,_aca ;};_geacf .PdfAnnotation =_dde ;_dde ._cab =_geacf ;return _dde ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gbcg ,_fcdf :=_efa .newPdfAnnotationWatermarkFromDict (_bcf );if _fcdf !=nil {return nil ,_fcdf ;};_gbcg .PdfAnnotation =_dde ;_dde ._cab =_gbcg ;return _dde ,nil ;case "\u0033\u0044":_cddg ,_edbc :=_efa .newPdfAnnotation3DFromDict (_bcf );if _edbc !=nil {return nil ,_edbc ;};_cddg .PdfAnnotation =_dde ;_dde ._cab =_cddg ;return _dde ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cdea ,_bee :=_efa .newPdfAnnotationProjectionFromDict (_bcf );if _bee !=nil {return nil ,_bee ;};_cdea .PdfAnnotation =_dde ;_dde ._cab =_cdea ;return _dde ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_aad ,_cdcge :=_efa .newPdfAnnotationRedactFromDict (_bcf );if _cdcge !=nil {return nil ,_cdcge ;};_aad .PdfAnnotation =_dde ;_dde ._cab =_aad ;return _dde ,nil ;};_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_fbe );return nil ,nil ;};

// M returns the value of the magenta component of the color.
func (_bgac *PdfColorDeviceCMYK )M ()float64 {return float64 (_bgac [1])};

// ToPdfObject implements interface PdfModel.
func (_cba *PdfAnnotationSquiggly )ToPdfObject ()_de .PdfObject {_cba .PdfAnnotation .ToPdfObject ();_gcafc :=_cba ._egag ;_gdaa :=_gcafc .PdfObject .(*_de .PdfObjectDictionary );_cba .PdfAnnotationMarkup .appendToPdfDictionary (_gdaa );_gdaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_gdaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cba .QuadPoints );return _gcafc ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _de .PdfObject ;Name _de .PdfObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_egcfc *PdfPageResources )SetPatternByName (keyName _de .PdfObjectName ,pattern _de .PdfObject )error {if _egcfc .Pattern ==nil {_egcfc .Pattern =_de .MakeDict ();};_ceeeg ,_efgbg :=_egcfc .Pattern .(*_de .PdfObjectDictionary );if !_efgbg {return _de .ErrTypeError ;};_ceeeg .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_caec *PdfAnnotationCircle )ToPdfObject ()_de .PdfObject {_caec .PdfAnnotation .ToPdfObject ();_dbcg :=_caec ._egag ;_ebfc :=_dbcg .PdfObject .(*_de .PdfObjectDictionary );_caec .PdfAnnotationMarkup .appendToPdfDictionary (_ebfc );_ebfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_ebfc .SetIfNotNil ("\u0042\u0053",_caec .BS );_ebfc .SetIfNotNil ("\u0049\u0043",_caec .IC );_ebfc .SetIfNotNil ("\u0042\u0045",_caec .BE );_ebfc .SetIfNotNil ("\u0052\u0044",_caec .RD );return _dbcg ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gfc :=NewPdfAction ();_fa :=&PdfActionLaunch {};_fa .PdfAction =_gfc ;_gfc .SetContext (_fa );return _fa ;};func _ffccb (_bbfeb _de .PdfObject )(*PdfPattern ,error ){_cagbg :=&PdfPattern {};var _fbgfg *_de .PdfObjectDictionary ;if _cfec ,_ebafb :=_de .GetIndirect (_bbfeb );_ebafb {_cagbg ._dddfb =_cfec ;_aagda ,_bdgb :=_cfec .PdfObject .(*_de .PdfObjectDictionary );if !_bdgb {_dg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cfec .PdfObject );return nil ,_de .ErrTypeError ;};_fbgfg =_aagda ;}else if _fbgge ,_dbcfb :=_de .GetStream (_bbfeb );_dbcfb {_cagbg ._dddfb =_fbgge ;_fbgfg =_fbgge .PdfObjectDictionary ;}else {_dg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_bbfeb );return nil ,_de .ErrTypeError ;};_afdfd :=_fbgfg .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _afdfd ==nil {_dg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_accfe ,_ddcf :=_afdfd .(*_de .PdfObjectInteger );if !_ddcf {_dg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_afdfd );return nil ,_de .ErrTypeError ;};if *_accfe !=1&&*_accfe !=2{_dg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_accfe );return nil ,_de .ErrRangeError ;};_cagbg .PatternType =int64 (*_accfe );switch *_accfe {case 1:_cdced ,_bgafef :=_fgfdd (_fbgfg );if _bgafef !=nil {return nil ,_bgafef ;};_cdced .PdfPattern =_cagbg ;_cagbg ._dcdcc =_cdced ;return _cagbg ,nil ;case 2:_dfgg ,_cbabe :=_cbfba (_fbgfg );if _cbabe !=nil {return nil ,_cbabe ;};_dfgg .PdfPattern =_cagbg ;_cagbg ._dcdcc =_dfgg ;return _cagbg ,nil ;};return nil ,_eae .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_fcf :=NewPdfAction ();_dga :=&PdfActionTrans {};_dga .PdfAction =_fcf ;_fcf .SetContext (_dga );return _dga ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_ddeb *PdfFieldButton )IsPush ()bool {return _ddeb .GetType ()==ButtonTypePush };

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cfdad *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cfdad ._agdeb ==nil {_cfdad ._agdeb =_fd .NewPSExecutor (_cfdad .Program );};var _caabg []_fd .PSObject ;for _ ,_caac :=range xVec {_caabg =append (_caabg ,_fd .MakeReal (_caac ));};_edcbf ,_dfge :=_cfdad ._agdeb .Execute (_caabg );if _dfge !=nil {return nil ,_dfge ;};_dabgc ,_dfge :=_fd .PSObjectArrayToFloat64Array (_edcbf );if _dfge !=nil {return nil ,_dfge ;};return _dabgc ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dfbdg *PdfOutlineItem )GetContainingPdfObject ()_de .PdfObject {return _dfbdg ._ddadaa };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fbdc *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if _fbdc .Alternate ==nil {if _fbdc .N ==1{_bccbgc :=NewPdfColorspaceDeviceGray ();return _bccbgc .ColorFromPdfObjects (objects );}else if _fbdc .N ==3{_cbad :=NewPdfColorspaceDeviceRGB ();return _cbad .ColorFromPdfObjects (objects );}else if _fbdc .N ==4{_adcab :=NewPdfColorspaceDeviceCMYK ();return _adcab .ColorFromPdfObjects (objects );}else {return nil ,_eae .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _fbdc .Alternate .ColorFromPdfObjects (objects );};

// RemovePage removes a page by number.
func (_bbfd *PdfAppender )RemovePage (pageNum int ){_beed :=pageNum -1;_bbfd ._debg =append (_bbfd ._debg [0:_beed ],_bbfd ._debg [pageNum :]...);};

// ImageToRGB convert an indexed image to RGB.
func (_cage *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_cage .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_cebcb :=_bdb .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._abbgb ,img ._fbdfg );_daaa :=_dgb .NewReader (img .getBase ());_ccge :=_dgb .NewWriter (_cebcb );var (_bdcd uint32 ;_cfabc int ;_gbga error ;);for {_bdcd ,_gbga =_daaa .ReadSample ();if _gbga ==_ea .EOF {break ;}else if _gbga !=nil {return img ,_gbga ;};_cfabc =int (_bdcd );_dg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_cfabc ,N ,len (_cage ._ecae ));if (_cfabc +1)*N > len (_cage ._ecae ){_cfabc =len (_cage ._ecae )/N -1;_dg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_cfabc );if _cfabc < 0{_dg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _effa :=_cfabc *N ;_effa < (_cfabc +1)*N ;_effa ++{if _gbga =_ccge .WriteSample (uint32 (_cage ._ecae [_effa ]));_gbga !=nil {return img ,_gbga ;};};};return _cage .Base .ImageToRGB (_cecd (&_cebcb ));};type modelManager struct{_cggae map[PdfModel ]_de .PdfObject ;_gefca map[_de .PdfObject ]PdfModel ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_gaf :=NewPdfAnnotation ();_fga :=&PdfAnnotationSquiggly {};_fga .PdfAnnotation =_gaf ;_fga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaf .SetContext (_fga );return _fga ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_eaefe *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dfga ,_fecc :=color .(*PdfColorCalGray );if !_fecc {_dg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dfga .Val ();X :=_eaefe .WhitePoint [0]*_ac .Pow (ANorm ,_eaefe .Gamma );Y :=_eaefe .WhitePoint [1]*_ac .Pow (ANorm ,_eaefe .Gamma );Z :=_eaefe .WhitePoint [2]*_ac .Pow (ANorm ,_eaefe .Gamma );_cfeb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gbfa :=-0.969256*X +1.875992*Y +0.041556*Z ;_ffad :=0.055648*X +-0.204043*Y +1.057311*Z ;_cfeb =_ac .Min (_ac .Max (_cfeb ,0),1.0);_gbfa =_ac .Min (_ac .Max (_gbfa ,0),1.0);_ffad =_ac .Min (_ac .Max (_ffad ,0),1.0);return NewPdfColorDeviceRGB (_cfeb ,_gbfa ,_ffad ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_daaf *PdfActionImportData )ToPdfObject ()_de .PdfObject {_daaf .PdfAction .ToPdfObject ();_bfg :=_daaf ._daa ;_aedd :=_bfg .PdfObject .(*_de .PdfObjectDictionary );_aedd .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeImportData )));if _daaf .F !=nil {_aedd .Set ("\u0046",_daaf .F .ToPdfObject ());};return _bfg ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_de .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ecedb *_de .PdfIndirectObject ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_agdc *PdfReader )CheckAccessRights (password []byte )(bool ,_aed .Permissions ,error ){return _agdc ._bffa .CheckAccessRights (password );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cadbe pdfCIDFontType2 )GetRuneMetrics (r rune )(_eba .CharMetrics ,bool ){_efdg ,_egdbg :=_cadbe ._efeg [r ];if !_egdbg {_ebff ,_ccbb :=_de .GetInt (_cadbe .DW );if !_ccbb {return _eba .CharMetrics {},false ;};_efdg =int (*_ebff );};return _eba .CharMetrics {Wx :float64 (_efdg )},true ;};

// ToInteger convert to an integer format.
func (_gbdff *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gdede :=_ac .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gdede *_gbdff .C ()),uint32 (_gdede *_gbdff .M ()),uint32 (_gdede *_gbdff .Y ()),uint32 (_gdede *_gbdff .K ())};};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_cdcd *PdfFontDescriptor )ToPdfObject ()_de .PdfObject {_gfag :=_de .MakeDict ();if _cdcd ._agaa ==nil {_cdcd ._agaa =&_de .PdfIndirectObject {};};_cdcd ._agaa .PdfObject =_gfag ;_gfag .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _cdcd .FontName !=nil {_gfag .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cdcd .FontName );};if _cdcd .FontFamily !=nil {_gfag .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_cdcd .FontFamily );};if _cdcd .FontStretch !=nil {_gfag .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_cdcd .FontStretch );};if _cdcd .FontWeight !=nil {_gfag .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_cdcd .FontWeight );};if _cdcd .Flags !=nil {_gfag .Set ("\u0046\u006c\u0061g\u0073",_cdcd .Flags );};if _cdcd .FontBBox !=nil {_gfag .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cdcd .FontBBox );};if _cdcd .ItalicAngle !=nil {_gfag .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_cdcd .ItalicAngle );};if _cdcd .Ascent !=nil {_gfag .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_cdcd .Ascent );};if _cdcd .Descent !=nil {_gfag .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_cdcd .Descent );};if _cdcd .Leading !=nil {_gfag .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_cdcd .Leading );};if _cdcd .CapHeight !=nil {_gfag .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_cdcd .CapHeight );};if _cdcd .XHeight !=nil {_gfag .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_cdcd .XHeight );};if _cdcd .StemV !=nil {_gfag .Set ("\u0053\u0074\u0065m\u0056",_cdcd .StemV );};if _cdcd .StemH !=nil {_gfag .Set ("\u0053\u0074\u0065m\u0048",_cdcd .StemH );};if _cdcd .AvgWidth !=nil {_gfag .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_cdcd .AvgWidth );};if _cdcd .MaxWidth !=nil {_gfag .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_cdcd .MaxWidth );};if _cdcd .MissingWidth !=nil {_gfag .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_cdcd .MissingWidth );};if _cdcd .FontFile !=nil {_gfag .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_cdcd .FontFile );};if _cdcd .FontFile2 !=nil {_gfag .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_cdcd .FontFile2 );};if _cdcd .FontFile3 !=nil {_gfag .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_cdcd .FontFile3 );};if _cdcd .CharSet !=nil {_gfag .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_cdcd .CharSet );};if _cdcd .Style !=nil {_gfag .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_cdcd .FontName );};if _cdcd .Lang !=nil {_gfag .Set ("\u004c\u0061\u006e\u0067",_cdcd .Lang );};if _cdcd .FD !=nil {_gfag .Set ("\u0046\u0044",_cdcd .FD );};if _cdcd .CIDSet !=nil {_gfag .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_cdcd .CIDSet );};return _cdcd ._agaa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afdcb *PdfShadingType7 )ToPdfObject ()_de .PdfObject {_afdcb .PdfShading .ToPdfObject ();_dccba ,_bcgeb :=_afdcb .getShadingDict ();if _bcgeb !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _afdcb .BitsPerCoordinate !=nil {_dccba .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_afdcb .BitsPerCoordinate );};if _afdcb .BitsPerComponent !=nil {_dccba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afdcb .BitsPerComponent );};if _afdcb .BitsPerFlag !=nil {_dccba .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_afdcb .BitsPerFlag );};if _afdcb .Decode !=nil {_dccba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_afdcb .Decode );};if _afdcb .Function !=nil {if len (_afdcb .Function )==1{_dccba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afdcb .Function [0].ToPdfObject ());}else {_ebbec :=_de .MakeArray ();for _ ,_efadc :=range _afdcb .Function {_ebbec .Append (_efadc .ToPdfObject ());};_dccba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebbec );};};return _afdcb ._bcfa ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_fggcf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fagd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gebb ,_bacd :=color .(*PdfColorDeviceRGB );if !_bacd {_dg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _gebb ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_acacd *PdfReader )IsEncrypted ()(bool ,error ){return _acacd ._bffa .IsEncrypted ()};

// GetContainingPdfObject implements interface PdfModel.
func (_be *PdfAction )GetContainingPdfObject ()_de .PdfObject {return _be ._daa };func (_efbc *PdfReader )newPdfActionGotoEFromDict (_bdd *_de .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ceb ,_accd :=_gfg (_bdd .Get ("\u0046"));if _accd !=nil {return nil ,_accd ;};return &PdfActionGoToE {D :_bdd .Get ("\u0044"),NewWindow :_bdd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bdd .Get ("\u0054"),F :_ceb },nil ;};func (_egec *PdfReader )newPdfActionImportDataFromDict (_efd *_de .PdfObjectDictionary )(*PdfActionImportData ,error ){_dbda ,_ece :=_gfg (_efd .Get ("\u0046"));if _ece !=nil {return nil ,_ece ;};return &PdfActionImportData {F :_dbda },nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ea .ReadSeeker )(*PdfReader ,error ){_fbcbb :=&PdfReader {_ddbac :rs ,_cafd :map[_de .PdfObject ]struct{}{},_edgab :_gfdgg (),_agdga :true };_acde ,_caccg :=_de .NewParser (rs );if _caccg !=nil {return nil ,_caccg ;};_fbcbb ._bffa =_acde ;_cgbfb ,_caccg :=_fbcbb .IsEncrypted ();if _caccg !=nil {return nil ,_caccg ;};if !_cgbfb {_caccg =_fbcbb .loadStructure ();if _caccg !=nil {return nil ,_caccg ;};};return _fbcbb ,nil ;};

// String implements interface PdfObject.
func (_fdc *PdfAction )String ()string {_db ,_gdc :=_fdc .ToPdfObject ().(*_de .PdfIndirectObject );if _gdc {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fdc ._ge ,_db .PdfObject .String ());};return "";};func (_bdag *PdfWriter )addObjects (_fgcef _de .PdfObject )error {_dg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _efee ,_aebcg :=_fgcef .(*_de .PdfIndirectObject );_aebcg {_dg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_dg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fgcef ,_efee );_dg .Log .Trace ("\u002d\u0020\u0025\u0073",_efee .PdfObject );if _bdag .addObject (_efee ){_aaafd :=_bdag .addObjects (_efee .PdfObject );if _aaafd !=nil {return _aaafd ;};};return nil ;};if _caffab ,_aeec :=_fgcef .(*_de .PdfObjectStream );_aeec {_dg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fgcef ,_fgcef );if _bdag .addObject (_caffab ){_gabgd :=_bdag .addObjects (_caffab .PdfObjectDictionary );if _gabgd !=nil {return _gabgd ;};};return nil ;};if _bagab ,_aaceb :=_fgcef .(*_de .PdfObjectDictionary );_aaceb {_dg .Log .Trace ("\u0044\u0069\u0063\u0074");_dg .Log .Trace ("\u002d\u0020\u0025\u0073",_fgcef );for _ ,_adbee :=range _bagab .Keys (){_cdbc :=_bagab .Get (_adbee );if _ebfdb ,_fgbfe :=_cdbc .(*_de .PdfObjectReference );_fgbfe {_cdbc =_ebfdb .Resolve ();_bagab .Set (_adbee ,_cdbc );};if _adbee !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _aegec :=_bdag .addObjects (_cdbc );_aegec !=nil {return _aegec ;};}else {if _ ,_fgbea :=_cdbc .(*_de .PdfObjectNull );_fgbea {continue ;};if _gcggg :=_bdag .hasObject (_cdbc );!_gcggg {_dg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cdbc ,_cdbc ,_cdbc );_bdag ._gaee [_cdbc ]=append (_bdag ._gaee [_cdbc ],_bagab );};};};return nil ;};if _gace ,_egad :=_fgcef .(*_de .PdfObjectArray );_egad {_dg .Log .Trace ("\u0041\u0072\u0072a\u0079");_dg .Log .Trace ("\u002d\u0020\u0025\u0073",_fgcef );if _gace ==nil {return _eae .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _cegea ,_bedcbf :=range _gace .Elements (){if _cggdd ,_cdccg :=_bedcbf .(*_de .PdfObjectReference );_cdccg {_bedcbf =_cggdd .Resolve ();_gace .Set (_cegea ,_bedcbf );};if _agag :=_bdag .addObjects (_bedcbf );_agag !=nil {return _agag ;};};return nil ;};if _ ,_bebbf :=_fgcef .(*_de .PdfObjectReference );_bebbf {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fgcef );return _eae .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_eddcd *_de .PdfIndirectObject ;};

// ToPdfObject converts rectangle to a PDF object.
func (_aefeg *PdfRectangle )ToPdfObject ()_de .PdfObject {return _de .MakeArray (_de .MakeFloat (_aefeg .Llx ),_de .MakeFloat (_aefeg .Lly ),_de .MakeFloat (_aefeg .Urx ),_de .MakeFloat (_aefeg .Ury ));};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ecd :=NewPdfAction ();_fce :=&PdfActionImportData {};_fce .PdfAction =_ecd ;_ecd .SetContext (_fce );return _fce ;};func (_bdafc *PdfWriter )copyObject (_gccc _de .PdfObject ,_gdffab map[_de .PdfObject ]_de .PdfObject ,_fffgf map[_de .PdfObject ]struct{},_accbeb bool )_de .PdfObject {_ecdcg :=!_bdafc ._feabe &&_fffgf !=nil ;if _beaga ,_cfcgc :=_gdffab [_gccc ];_cfcgc {if _ecdcg &&!_accbeb {delete (_fffgf ,_gccc );};return _beaga ;};_fdbee :=_gccc ;switch _fagac :=_gccc .(type ){case *_de .PdfObjectArray :_ebcc :=_de .MakeArray ();_fdbee =_ebcc ;_gdffab [_gccc ]=_fdbee ;for _ ,_afacg :=range _fagac .Elements (){_ebcc .Append (_bdafc .copyObject (_afacg ,_gdffab ,_fffgf ,_accbeb ));};case *_de .PdfObjectStreams :_ggbge :=&_de .PdfObjectStreams {PdfObjectReference :_fagac .PdfObjectReference };_fdbee =_ggbge ;_gdffab [_gccc ]=_fdbee ;for _ ,_gcdb :=range _fagac .Elements (){_ggbge .Append (_bdafc .copyObject (_gcdb ,_gdffab ,_fffgf ,_accbeb ));};case *_de .PdfObjectStream :_ffdddg :=&_de .PdfObjectStream {Stream :_fagac .Stream ,PdfObjectReference :_fagac .PdfObjectReference };_fdbee =_ffdddg ;_gdffab [_gccc ]=_fdbee ;_ffdddg .PdfObjectDictionary =_bdafc .copyObject (_fagac .PdfObjectDictionary ,_gdffab ,_fffgf ,_accbeb ).(*_de .PdfObjectDictionary );case *_de .PdfObjectDictionary :var _ecde bool ;if _ecdcg &&!_accbeb {if _ddcca ,_ :=_de .GetNameVal (_fagac .Get ("\u0054\u0079\u0070\u0065"));_ddcca =="\u0050\u0061\u0067\u0065"{_ ,_efdfa :=_bdafc ._dbegc [_fagac ];_accbeb =!_efdfa ;_ecde =_accbeb ;};};_bedef :=_de .MakeDict ();_fdbee =_bedef ;_gdffab [_gccc ]=_fdbee ;for _ ,_cabdg :=range _fagac .Keys (){_bedef .Set (_cabdg ,_bdafc .copyObject (_fagac .Get (_cabdg ),_gdffab ,_fffgf ,_accbeb ));};if _ecde {_fdbee =_de .MakeNull ();_accbeb =false ;};case *_de .PdfIndirectObject :_geddc :=&_de .PdfIndirectObject {PdfObjectReference :_fagac .PdfObjectReference };_fdbee =_geddc ;_gdffab [_gccc ]=_fdbee ;_geddc .PdfObject =_bdafc .copyObject (_fagac .PdfObject ,_gdffab ,_fffgf ,_accbeb );case *_de .PdfObjectString :_fcgda :=*_fagac ;_fdbee =&_fcgda ;_gdffab [_gccc ]=_fdbee ;case *_de .PdfObjectName :_dceeea :=_de .PdfObjectName (*_fagac );_fdbee =&_dceeea ;_gdffab [_gccc ]=_fdbee ;case *_de .PdfObjectNull :_fdbee =_de .MakeNull ();_gdffab [_gccc ]=_fdbee ;case *_de .PdfObjectInteger :_fadee :=_de .PdfObjectInteger (*_fagac );_fdbee =&_fadee ;_gdffab [_gccc ]=_fdbee ;case *_de .PdfObjectReference :_aageb :=_de .PdfObjectReference (*_fagac );_fdbee =&_aageb ;_gdffab [_gccc ]=_fdbee ;case *_de .PdfObjectFloat :_feecb :=_de .PdfObjectFloat (*_fagac );_fdbee =&_feecb ;_gdffab [_gccc ]=_fdbee ;case *_de .PdfObjectBool :_deab :=_de .PdfObjectBool (*_fagac );_fdbee =&_deab ;_gdffab [_gccc ]=_fdbee ;case *pdfSignDictionary :_cbabf :=&pdfSignDictionary {PdfObjectDictionary :_de .MakeDict (),_bfdbd :_fagac ._bfdbd ,_beccc :_fagac ._beccc };_fdbee =_cbabf ;_gdffab [_gccc ]=_fdbee ;for _ ,_ecbef :=range _fagac .Keys (){_cbabf .Set (_ecbef ,_bdafc .copyObject (_fagac .Get (_ecbef ),_gdffab ,_fffgf ,_accbeb ));};default:_dg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gccc );};if _ecdcg &&_accbeb {_fffgf [_gccc ]=struct{}{};};return _fdbee ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_fgfdb *_de .PdfIndirectObject ;};func _gbbc (_daee _de .PdfObject )(*PdfBorderStyle ,error ){_dea :=&PdfBorderStyle {};_dea ._dddg =_daee ;var _eddd *_de .PdfObjectDictionary ;_daee =_de .TraceToDirectObject (_daee );_eddd ,_gaaf :=_daee .(*_de .PdfObjectDictionary );if !_gaaf {return nil ,_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dbdd :=_eddd .Get ("\u0054\u0079\u0070\u0065");_dbdd !=nil {_ccef ,_acbc :=_dbdd .(*_de .PdfObjectName );if !_acbc {_dg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dbdd );}else {if *_ccef !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ccef );};};};if _bcgf :=_eddd .Get ("\u0057");_bcgf !=nil {_gcfb ,_eef :=_de .GetNumberAsFloat (_bcgf );if _eef !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_eef );return nil ,_eef ;};_dea .W =&_gcfb ;};if _dceg :=_eddd .Get ("\u0053");_dceg !=nil {_ggcc ,_ddab :=_dceg .(*_de .PdfObjectName );if !_ddab {return nil ,_eae .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _fag BorderStyle ;switch *_ggcc {case "\u0053":_fag =BorderStyleSolid ;case "\u0044":_fag =BorderStyleDashed ;case "\u0042":_fag =BorderStyleBeveled ;case "\u0049":_fag =BorderStyleInset ;case "\u0055":_fag =BorderStyleUnderline ;default:_dg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ggcc );return nil ,_eae .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dea .S =&_fag ;};if _gddb :=_eddd .Get ("\u0044");_gddb !=nil {_eefb ,_bgcc :=_gddb .(*_de .PdfObjectArray );if !_bgcc {_dg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_gddb );return nil ,_eae .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_gdbgc ,_gebd :=_eefb .ToIntegerArray ();if _gebd !=nil {_dg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_gebd );return nil ,_gebd ;};_dea .D =&_gdbgc ;};return _dea ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gcfc *_de .PdfIndirectObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _de .PdfObject ;_ecae []byte ;_cced *_de .PdfIndirectObject ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dad _ea .ReadSeeker ;_gcgc *_de .PdfParser ;_effbd *PdfReader ;Reader *PdfReader ;_debg []*PdfPage ;_egfe *PdfAcroForm ;_ecbc _de .XrefTable ;_eage int64 ;_bgbb int ;_ccda []_de .PdfObject ;_cgge map[_de .PdfObject ]struct{};_dafe map[_de .PdfObject ]int64 ;_aebef map[_de .PdfObject ]struct{};_cdefb map[_de .PdfObject ]struct{};_ebe int64 ;_cdba bool ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_dcafd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _dcafd ._ffddd ==nil {_dcafd .GetAnnotations ();};_dcafd ._ffddd =append (_dcafd ._ffddd ,annot );};

// GetOCProperties returns the optional content properties PdfObject.
func (_aafd *PdfReader )GetOCProperties ()(_de .PdfObject ,error ){_afegc :=_aafd ._bbad ;_gedc :=_afegc .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gedc =_de .ResolveReference (_gedc );if !_aafd ._agdga {_gdac :=_aafd .traverseObjectData (_gedc );if _gdac !=nil {return nil ,_gdac ;};};return _gedc ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_fgdf *_de .PdfIndirectObject ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_efgfg *PdfPageResourcesColorspaces )Set (key _de .PdfObjectName ,val PdfColorspace ){if _ ,_gegc :=_efgfg .Colorspaces [string (key )];!_gegc {_efgfg .Names =append (_efgfg .Names ,string (key ));};_efgfg .Colorspaces [string (key )]=val ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_egbd :_de .MakeIndirectObject (_de .MakeDict ())};};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_de .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_ecec *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _ecec .flattenFieldsWithOpts (false ,appgen ,opts );};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_aaee *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cbegb []*PdfOutlineTreeNode ;var _fbbce []string ;var _acdd func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_acdd =func (_ffca *PdfOutlineTreeNode ,_beadb *[]*PdfOutlineTreeNode ,_bfafe *[]string ,_cgadb int ){if _ffca ==nil {return ;};if _ffca ._deec ==nil {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_dbfc ,_egcc :=_ffca ._deec .(*PdfOutlineItem );if _egcc {*_beadb =append (*_beadb ,&_dbfc .PdfOutlineTreeNode );_aabfa :=_fe .Repeat ("\u0020",_cgadb *2)+_dbfc .Title .Decoded ();*_bfafe =append (*_bfafe ,_aabfa );};if _ffca .First !=nil {_afagf :=_fe .Repeat ("\u0020",_cgadb *2)+"\u002b";*_bfafe =append (*_bfafe ,_afagf );_acdd (_ffca .First ,_beadb ,_bfafe ,_cgadb +1);};if _egcc &&_dbfc .Next !=nil {_acdd (_dbfc .Next ,_beadb ,_bfafe ,_cgadb );};};_acdd (_aaee ._fgff ,&_cbegb ,&_fbbce ,0);return _cbegb ,_fbbce ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gee :=NewPdfAnnotation ();_adc :=&PdfAnnotationRedact {};_adc .PdfAnnotation =_gee ;_adc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gee .SetContext (_adc );return _adc ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_geca *PdfColorspaceICCBased )ToPdfObject ()_de .PdfObject {_ade :=&_de .PdfObjectArray {};_ade .Append (_de .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bbag *_de .PdfObjectStream ;if _geca ._dcga !=nil {_bbag =_geca ._dcga ;}else {_bbag =&_de .PdfObjectStream {};};_faad :=_de .MakeDict ();_faad .Set ("\u004e",_de .MakeInteger (int64 (_geca .N )));if _geca .Alternate !=nil {_faad .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_geca .Alternate .ToPdfObject ());};if _geca .Metadata !=nil {_faad .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_geca .Metadata );};if _geca .Range !=nil {var _dcee []_de .PdfObject ;for _ ,_gffe :=range _geca .Range {_dcee =append (_dcee ,_de .MakeFloat (_gffe ));};_faad .Set ("\u0052\u0061\u006eg\u0065",_de .MakeArray (_dcee ...));};_faad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_geca .Data ))));_bbag .Stream =_geca .Data ;_bbag .PdfObjectDictionary =_faad ;_ade .Append (_bbag );if _geca ._gebc !=nil {_geca ._gebc .PdfObject =_ade ;return _geca ._gebc ;};return _ade ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ggged *PdfPageResources )GetShadingByName (keyName _de .PdfObjectName )(*PdfShading ,bool ){if _ggged .Shading ==nil {return nil ,false ;};_ggcbf ,_fbada :=_de .TraceToDirectObject (_ggged .Shading ).(*_de .PdfObjectDictionary );if !_fbada {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggged .Shading );return nil ,false ;};if _cceef :=_ggcbf .Get (keyName );_cceef !=nil {_cgbfg ,_feec :=_ebffg (_cceef );if _feec !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_feec );return nil ,false ;};return _cgbfg ,true ;};return nil ,false ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_agcbd *PdfOutline )ToPdfObject ()_de .PdfObject {_ddcae :=_agcbd ._eddcd ;_cbfe :=_ddcae .PdfObject .(*_de .PdfObjectDictionary );_cbfe .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _agcbd .First !=nil {_cbfe .Set ("\u0046\u0069\u0072s\u0074",_agcbd .First .ToPdfObject ());};if _agcbd .Last !=nil {_cbfe .Set ("\u004c\u0061\u0073\u0074",_agcbd .Last .GetContext ().GetContainingPdfObject ());};if _agcbd .Parent !=nil {_cbfe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agcbd .Parent .GetContext ().GetContainingPdfObject ());};if _agcbd .Count !=nil {_cbfe .Set ("\u0043\u006f\u0075n\u0074",_de .MakeInteger (*_agcbd .Count ));};return _ddcae ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gfddf pdfCIDFontType0 )GetRuneMetrics (r rune )(_eba .CharMetrics ,bool ){return _eba .CharMetrics {Wx :_gfddf ._bdecf },true ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _de .PdfObject ;LE _de .PdfObject ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;IT _de .PdfObject ;Measure _de .PdfObject ;};func (_beea *PdfReader )newPdfFieldFromIndirectObject (_cfbdf *_de .PdfIndirectObject ,_dcgfg *PdfField )(*PdfField ,error ){if _dbef ,_beecg :=_beea ._edgab .GetModelFromPrimitive (_cfbdf ).(*PdfField );_beecg {return _dbef ,nil ;};_abgcf ,_edag :=_de .GetDict (_cfbdf );if !_edag {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gbgfe :=NewPdfField ();_gbgfe ._bddd =_cfbdf ;_gbgfe ._bddd .PdfObject =_abgcf ;_dffea :=false ;if _fggca ,_gfccc :=_de .GetName (_abgcf .Get ("\u0046\u0054"));_gfccc {_gbgfe .FT =_fggca ;_dffea =true ;};_gbgfe ._gege =&_dffea ;_gbgfe .T ,_ =_abgcf .Get ("\u0054").(*_de .PdfObjectString );_gbgfe .TU ,_ =_abgcf .Get ("\u0054\u0055").(*_de .PdfObjectString );_gbgfe .TM ,_ =_abgcf .Get ("\u0054\u004d").(*_de .PdfObjectString );_gbgfe .Ff ,_ =_abgcf .Get ("\u0046\u0066").(*_de .PdfObjectInteger );_gbgfe .V =_abgcf .Get ("\u0056");_gbgfe .DV =_abgcf .Get ("\u0044\u0056");_gbgfe .AA =_abgcf .Get ("\u0041\u0041");if _gbgfe .FT !=nil {switch *_gbgfe .FT {case "\u0054\u0078":_ccbg ,_gdee :=_accg (_abgcf );if _gdee !=nil {return nil ,_gdee ;};_ccbg .PdfField =_gbgfe ;_gbgfe ._cbee =_ccbg ;case "\u0043\u0068":_daaag ,_fgca :=_cbgea (_abgcf );if _fgca !=nil {return nil ,_fgca ;};_daaag .PdfField =_gbgfe ;_gbgfe ._cbee =_daaag ;case "\u0042\u0074\u006e":_adab ,_fbbga :=_agccg (_abgcf );if _fbbga !=nil {return nil ,_fbbga ;};_adab .PdfField =_gbgfe ;_gbgfe ._cbee =_adab ;case "\u0053\u0069\u0067":_fcdd ,_bccg :=_beea .newPdfFieldSignatureFromDict (_abgcf );if _bccg !=nil {return nil ,_bccg ;};_fcdd .PdfField =_gbgfe ;_gbgfe ._cbee =_fcdd ;default:_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gbgfe .FT );return nil ,_eae .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _dcgfg !=nil {_gbgfe .Parent =_dcgfg ;};_gbgfe .Annotations =[]*PdfAnnotationWidget {};if _becgb ,_cgfdd :=_de .GetName (_abgcf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_cgfdd {if *_becgb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gcea ,_adeg :=_beea .newPdfAnnotationFromIndirectObject (_cfbdf );if _adeg !=nil {return nil ,_adeg ;};_fedc ,_afgg :=_gcea .GetContext ().(*PdfAnnotationWidget );if !_afgg {return nil ,_eae .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_fedc ._bgf =_gbgfe ;_fedc .Parent =_gbgfe ._bddd ;_gbgfe .Annotations =append (_gbgfe .Annotations ,_fedc );return _gbgfe ,nil ;};};if _edaa ,_ggab :=_de .GetArray (_abgcf .Get ("\u004b\u0069\u0064\u0073"));_ggab {_gbgfe .Kids =[]*PdfField {};for _ ,_cdefc :=range _edaa .Elements (){_bbgb ,_dcecgf :=_de .GetIndirect (_cdefc );if !_dcecgf {_ebgc ,_gedbe :=_de .GetStream (_cdefc );if _gedbe &&_ebgc .PdfObjectDictionary !=nil {_bgag ,_bfdb :=_de .GetNameVal (_ebgc .Get ("\u0054\u0079\u0070\u0065"));if _bfdb &&_bgag =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_eae .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_gega ,_eacbe :=_de .GetDict (_bbgb );if !_eacbe {return nil ,ErrTypeCheck ;};_ ,_ggea :=_de .GetName (_gega .Get ("\u0046\u0054"));if _abaf ,_cefg :=_de .GetName (_gega .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_cefg &&!_ggea &&*_abaf =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fgaca ,_caea :=_beea .newPdfAnnotationFromIndirectObject (_bbgb );if _caea !=nil {_dg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_caea );return nil ,_caea ;};_fgag ,_aeab :=_fgaca ._cab .(*PdfAnnotationWidget );if !_aeab {return nil ,ErrTypeCheck ;};_fgag ._bgf =_gbgfe ;_gbgfe .Annotations =append (_gbgfe .Annotations ,_fgag );}else {_cggd ,_ceaee :=_beea .newPdfFieldFromIndirectObject (_bbgb ,_gbgfe );if _ceaee !=nil {_dg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_ceaee );return nil ,_ceaee ;};_gbgfe .Kids =append (_gbgfe .Kids ,_cggd );};};};return _gbgfe ,nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_bbcgc *PdfPageResources )SetFontByName (keyName _de .PdfObjectName ,obj _de .PdfObject )error {if _bbcgc .Font ==nil {_bbcgc .Font =_de .MakeDict ();};_egaf ,_cdcab :=_de .TraceToDirectObject (_bbcgc .Font ).(*_de .PdfObjectDictionary );if !_cdcab {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_de .TraceToDirectObject (_bbcgc .Font ));return _de .ErrTypeError ;};_egaf .Set (keyName ,obj );return nil ;};func _gefc (_aeea _de .PdfObject )(*PdfColorspaceICCBased ,error ){_gabg :=&PdfColorspaceICCBased {};if _fagfg ,_gfgde :=_aeea .(*_de .PdfIndirectObject );_gfgde {_gabg ._gebc =_fagfg ;};_aeea =_de .TraceToDirectObject (_aeea );_beb ,_gbbf :=_aeea .(*_de .PdfObjectArray );if !_gbbf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _beb .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_aeea =_de .TraceToDirectObject (_beb .Get (0));_gafa ,_gbbf :=_aeea .(*_de .PdfObjectName );if !_gbbf {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_gafa !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_aeea =_beb .Get (1);_adce ,_gbbf :=_de .GetStream (_aeea );if !_gbbf {_dg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_aeea );return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ccae :=_adce .PdfObjectDictionary ;_fded ,_gbbf :=_ccae .Get ("\u004e").(*_de .PdfObjectInteger );if !_gbbf {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fded !=1&&*_fded !=3&&*_fded !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_gabg .N =int (*_fded );if _dgac :=_ccae .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dgac !=nil {_eaff ,_fedaf :=NewPdfColorspaceFromPdfObject (_dgac );if _fedaf !=nil {return nil ,_fedaf ;};_gabg .Alternate =_eaff ;};if _bgefc :=_ccae .Get ("\u0052\u0061\u006eg\u0065");_bgefc !=nil {_bgefc =_de .TraceToDirectObject (_bgefc );_ccfb ,_dgagb :=_bgefc .(*_de .PdfObjectArray );if !_dgagb {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _ccfb .Len ()!=2*_gabg .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_cfda ,_fbde :=_ccfb .GetAsFloat64Slice ();if _fbde !=nil {return nil ,_fbde ;};_gabg .Range =_cfda ;}else {_gabg .Range =make ([]float64 ,2*_gabg .N );for _dgcf :=0;_dgcf < _gabg .N ;_dgcf ++{_gabg .Range [2*_dgcf ]=0.0;_gabg .Range [2*_dgcf +1]=1.0;};};if _eace :=_ccae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eace !=nil {_ggaee ,_edcg :=_eace .(*_de .PdfObjectStream );if !_edcg {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_gabg .Metadata =_ggaee ;};_bafg ,_cdcgg :=_de .DecodeStream (_adce );if _cdcgg !=nil {return nil ,_cdcgg ;};_gabg .Data =_bafg ;_gabg ._dcga =_adce ;return _gabg ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbcec *PdfShading )ToPdfObject ()_de .PdfObject {_becb :=_gbcec ._bcfa ;_aadc ,_ccdea :=_gbcec .getShadingDict ();if _ccdea !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gbcec .ShadingType !=nil {_aadc .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gbcec .ShadingType );};if _gbcec .ColorSpace !=nil {_aadc .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gbcec .ColorSpace .ToPdfObject ());};if _gbcec .Background !=nil {_aadc .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_gbcec .Background );};if _gbcec .BBox !=nil {_aadc .Set ("\u0042\u0042\u006f\u0078",_gbcec .BBox .ToPdfObject ());};if _gbcec .AntiAlias !=nil {_aadc .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_gbcec .AntiAlias );};return _becb ;};func _cbgec (_edgfc *[]*PdfField ,_fgabb FieldFilterFunc ,_aebdg bool )[]*PdfField {if _edgfc ==nil {return nil ;};_fede :=*_edgfc ;if len (*_edgfc )==0{return nil ;};_eafb :=_fede [:0];if _fgabb ==nil {_fgabb =func (*PdfField )bool {return true };};var _gcbe []*PdfField ;for _ ,_agdde :=range _fede {_abadc :=_fgabb (_agdde );if _abadc {_gcbe =append (_gcbe ,_agdde );if len (_agdde .Kids )> 0{_gcbe =append (_gcbe ,_cbgec (&_agdde .Kids ,_fgabb ,_aebdg )...);};};if !_aebdg ||!_abadc ||len (_agdde .Kids )> 0{_eafb =append (_eafb ,_agdde );};};*_edgfc =_eafb ;return _gcbe ;};var (ErrRequiredAttributeMissing =_eae .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cagg =_eae .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_eae .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_eae .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_b .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0076\u0029",_de .ErrNotSupported );ErrType1CFontNotSupported =_b .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0076\u0029",_de .ErrNotSupported );ErrType3FontNotSupported =_b .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0076\u0029",_de .ErrNotSupported );ErrTTCmapNotSupported =_b .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0076\u0029",_de .ErrNotSupported ););func (_cff *PdfReader )newPdfAnnotationSquareFromDict (_ggfa *_de .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bdff :=PdfAnnotationSquare {};_cgga ,_fddc :=_cff .newPdfAnnotationMarkupFromDict (_ggfa );if _fddc !=nil {return nil ,_fddc ;};_bdff .PdfAnnotationMarkup =_cgga ;_bdff .BS =_ggfa .Get ("\u0042\u0053");_bdff .IC =_ggfa .Get ("\u0049\u0043");_bdff .BE =_ggfa .Get ("\u0042\u0045");_bdff .RD =_ggfa .Get ("\u0052\u0044");return &_bdff ,nil ;};var (_dgdge =_ae .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_bede =_ae .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_dcecb =_ae .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_cbeaf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ccgeg ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ceeg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);func (_agecb *PdfReader )loadStructure ()error {if _agecb ._bffa .GetCrypter ()!=nil &&!_agecb ._bffa .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_dcdda :=_agecb ._bffa .GetTrailer ();if _dcdda ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_accea ,_fgefg :=_dcdda .Get ("\u0052\u006f\u006f\u0074").(*_de .PdfObjectReference );if !_fgefg {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dcdda );};_ebfcb ,_gcaae :=_agecb ._bffa .LookupByReference (*_accea );if _gcaae !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gcaae );return _gcaae ;};_ecdd ,_fgefg :=_ebfcb .(*_de .PdfIndirectObject );if !_fgefg {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ebfcb ,*_dcdda );return _eae .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eaaffb ,_fgefg :=(*_ecdd ).PdfObject .(*_de .PdfObjectDictionary );if !_fgefg {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ecdd .PdfObject );return _eae .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eaaffb );_abfda ,_fgefg :=_eaaffb .Get ("\u0050\u0061\u0067e\u0073").(*_de .PdfObjectReference );if !_fgefg {return _eae .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_edgff ,_gcaae :=_agecb ._bffa .LookupByReference (*_abfda );if _gcaae !=nil {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gcaae ;};_gacdg ,_fgefg :=_edgff .(*_de .PdfIndirectObject );if !_fgefg {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_dg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_gacdg );return _eae .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_acgbe ,_fgefg :=_gacdg .PdfObject .(*_de .PdfObjectDictionary );if !_fgefg {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_gacdg );return _eae .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_effef ,_fgefg :=_de .GetInt (_acgbe .Get ("\u0043\u006f\u0075n\u0074"));if !_fgefg {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _eae .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fgefg =_de .GetName (_acgbe .Get ("\u0054\u0079\u0070\u0065"));!_fgefg {_dg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_acgbe .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050\u0061\u0067e\u0073"));};_agecb ._dbdge =_accea ;_agecb ._bbad =_eaaffb ;_agecb ._geagd =_acgbe ;_agecb ._badf =_gacdg ;_agecb ._gffedd =int (*_effef );_agecb ._aafa =[]*_de .PdfIndirectObject {};_caffa :=map[_de .PdfObject ]struct{}{};_gcaae =_agecb .buildPageList (_gacdg ,nil ,_caffa );if _gcaae !=nil {return _gcaae ;};_dg .Log .Trace ("\u002d\u002d\u002d");_dg .Log .Trace ("\u0054\u004f\u0043");_dg .Log .Trace ("\u0050\u0061\u0067e\u0073");_dg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_agecb ._aafa ),_agecb ._aafa );_agecb ._fgff ,_gcaae =_agecb .loadOutlines ();if _gcaae !=nil {_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gcaae );return _gcaae ;};_agecb .AcroForm ,_gcaae =_agecb .loadForms ();if _gcaae !=nil {return _gcaae ;};return nil ;};

// String returns a string representation of the field.
func (_cbgge *PdfField )String ()string {if _dccd ,_fcb :=_cbgge .ToPdfObject ().(*_de .PdfIndirectObject );_fcb {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cbgge ._cbee ,_dccd .PdfObject .String ());};return "";};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_edcff *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _edcff ._ffddd !=nil {return _edcff ._ffddd ,nil ;};if _edcff .Annots ==nil {_edcff ._ffddd =[]*PdfAnnotation {};return nil ,nil ;};if _edcff ._dgde ==nil {_edcff ._ffddd =[]*PdfAnnotation {};return nil ,nil ;};_ecce ,_fffcc :=_edcff ._dgde .loadAnnotations (_edcff .Annots );if _fffcc !=nil {return nil ,_fffcc ;};if _ecce ==nil {_edcff ._ffddd =[]*PdfAnnotation {};};_edcff ._ffddd =_ecce ;return _edcff ._ffddd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ce *PdfActionGoTo3DView )ToPdfObject ()_de .PdfObject {_ce .PdfAction .ToPdfObject ();_bffg :=_ce ._daa ;_ada :=_bffg .PdfObject .(*_de .PdfObjectDictionary );_ada .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoTo3DView )));_ada .SetIfNotNil ("\u0054\u0041",_ce .TA );_ada .SetIfNotNil ("\u0056",_ce .V );return _bffg ;};func (_agb *PdfReader )newPdfActionMovieFromDict (_edb *_de .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_edb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_edb .Get ("\u0054"),Operation :_edb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_edge *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gaba *PdfReader )GetPageLabels ()(_de .PdfObject ,error ){_cbaed :=_de .ResolveReference (_gaba ._bbad .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cbaed ==nil {return nil ,nil ;};if !_gaba ._agdga {_bfdaf :=_gaba .traverseObjectData (_cbaed );if _bfdaf !=nil {return nil ,_bfdaf ;};};return _cbaed ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_aade *PdfAnnotationFileAttachment )ToPdfObject ()_de .PdfObject {_aade .PdfAnnotation .ToPdfObject ();_agbb :=_aade ._egag ;_fcda :=_agbb .PdfObject .(*_de .PdfObjectDictionary );_aade .PdfAnnotationMarkup .appendToPdfDictionary (_fcda );_fcda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_fcda .SetIfNotNil ("\u0046\u0053",_aade .FS );_fcda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aade .Name );return _agbb ;};

// String returns a string that describes `base`.
func (_fbae fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_fbae .coreString ());};

// Encrypt encrypts the output file with a specified user/owner password.
func (_gedab *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_deggae :=RC4_128bit ;if options !=nil {_deggae =options .Algorithm ;};_bgagf :=_aed .PermOwner ;if options !=nil {_bgagf =options .Permissions ;};var _fcedbg _da .Filter ;switch _deggae {case RC4_128bit :_fcedbg =_da .NewFilterV2 (16);case AES_128bit :_fcedbg =_da .NewFilterAESV2 ();case AES_256bit :_fcedbg =_da .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_fdadb ,_fdgfg ,_cadff :=_de .PdfCryptNewEncrypt (_fcedbg ,userPass ,ownerPass ,_bgagf );if _cadff !=nil {return _cadff ;};_gedab ._fgdca =_fdadb ;if _fdgfg .Major !=0{_gedab .SetVersion (_fdgfg .Major ,_fdgfg .Minor );};_gedab ._aabbg =_fdgfg .Encrypt ;_gedab ._effc =_de .MakeArray (_de .MakeHexString (_fdgfg .ID0 ),_de .MakeHexString (_fdgfg .ID1 ));_dddd :=_de .MakeIndirectObject (_fdgfg .Encrypt );_gedab ._ffade =_dddd ;_gedab .addObject (_dddd );return nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_egabg fontCommon )coreString ()string {_aaag :="";if _egabg ._ccbgb !=nil {_aaag =_egabg ._ccbgb .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_egabg ._dgbc ,_egabg ._fbaf ,_egabg ._caaf ,_egabg ._agcd ,_egabg ._ecace !=nil ,_egabg .fontFlags (),_aaag );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_dffda *PdfColorspaceDeviceN )GetNumComponents ()int {return _dffda .ColorantNames .Len ()};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eacbc *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _ecfe []*PdfField ;if _eacbc .AcroForm !=nil {_ecfe =_eacbc .AcroForm .AllFields ();};_aafgb :=make (map[*PdfField ]struct{},len (_ecfe ));for _ ,_gcddc :=range _ecfe {_aafgb [_gcddc ]=struct{}{};};for _ ,_gaff :=range _eacbc .PageList {_gcega ,_dbaae :=_gaff .GetAnnotations ();if _dbaae !=nil {return false ,_dbaae ;};for _ ,_adeee :=range _gcega {_egegb ,_bdfef :=_adeee .GetContext ().(*PdfAnnotationWidget );if !_bdfef {continue ;};_facgf :=_egegb .Field ();if _facgf ==nil {return true ,nil ;};if _ ,_abda :=_aafgb [_facgf ];!_abda {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebg *PdfActionGoToR )ToPdfObject ()_de .PdfObject {_ebg .PdfAction .ToPdfObject ();_ga :=_ebg ._daa ;_gad :=_ga .PdfObject .(*_de .PdfObjectDictionary );_gad .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoToR )));if _ebg .F !=nil {_gad .Set ("\u0046",_ebg .F .ToPdfObject ());};_gad .SetIfNotNil ("\u0044",_ebg .D );_gad .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ebg .NewWindow );return _ga ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_dbfdc *_de .PdfIndirectObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _de .StreamEncoder ;FormType _de .PdfObject ;BBox _de .PdfObject ;Matrix _de .PdfObject ;Resources *PdfPageResources ;Group _de .PdfObject ;Ref _de .PdfObject ;MetaData _de .PdfObject ;PieceInfo _de .PdfObject ;LastModified _de .PdfObject ;StructParent _de .PdfObject ;StructParents _de .PdfObject ;OPI _de .PdfObject ;OC _de .PdfObject ;Name _de .PdfObject ;

// Stream data.
Stream []byte ;_bdda *_de .PdfObjectStream ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_afgag *XObjectImage )GetContainingPdfObject ()_de .PdfObject {return _afgag ._cccf };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_adbab :=PdfDate {};_ceagd :=_gaebc .FindAllStringSubmatch (dateStr ,1);if len (_ceagd )< 1{return _adbab ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_ceagd [0])!=10{return _adbab ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_adbab ._cfdcf ,_ =_fc .ParseInt (_ceagd [0][1],10,32);_adbab ._ecga ,_ =_fc .ParseInt (_ceagd [0][2],10,32);_adbab ._bcae ,_ =_fc .ParseInt (_ceagd [0][3],10,32);_adbab ._adea ,_ =_fc .ParseInt (_ceagd [0][4],10,32);_adbab ._ggegg ,_ =_fc .ParseInt (_ceagd [0][5],10,32);_adbab ._gfcccd ,_ =_fc .ParseInt (_ceagd [0][6],10,32);if len (_ceagd [0][7])> 0{_adbab ._dgfac =_ceagd [0][7][0];}else {_adbab ._dgfac ='+';};if len (_ceagd [0][8])> 0{_adbab ._eccagf ,_ =_fc .ParseInt (_ceagd [0][8],10,32);}else {_adbab ._eccagf =0;};if len (_ceagd [0][9])> 0{_adbab ._affgb ,_ =_fc .ParseInt (_ceagd [0][9],10,32);}else {_adbab ._affgb =0;};return _adbab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eag *PdfActionSetOCGState )ToPdfObject ()_de .PdfObject {_eag .PdfAction .ToPdfObject ();_gaa :=_eag ._daa ;_acc :=_gaa .PdfObject .(*_de .PdfObjectDictionary );_acc .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeSetOCGState )));_acc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eag .State );_acc .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_eag .PreserveRB );return _gaa ;};

// GetBorderWidth returns the border style's width.
func (_befa *PdfBorderStyle )GetBorderWidth ()float64 {if _befa .W ==nil {return 1;};return *_befa .W ;};var _gaebc =_ae .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_gfda *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_dg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_egagd ,_gada :=_bdb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abbgb ,img ._fbdfg );if _gada !=nil {return Image {},_gada ;};_cfaf ,_gada :=_bdb .NRGBAConverter .Convert (_egagd );if _gada !=nil {return Image {},_gada ;};return _cecd (_cfaf .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_adcc *PdfAnnotationFreeText )ToPdfObject ()_de .PdfObject {_adcc .PdfAnnotation .ToPdfObject ();_geda :=_adcc ._egag ;_bed :=_geda .PdfObject .(*_de .PdfObjectDictionary );_adcc .PdfAnnotationMarkup .appendToPdfDictionary (_bed );_bed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_bed .SetIfNotNil ("\u0044\u0041",_adcc .DA );_bed .SetIfNotNil ("\u0051",_adcc .Q );_bed .SetIfNotNil ("\u0052\u0043",_adcc .RC );_bed .SetIfNotNil ("\u0044\u0053",_adcc .DS );_bed .SetIfNotNil ("\u0043\u004c",_adcc .CL );_bed .SetIfNotNil ("\u0049\u0054",_adcc .IT );_bed .SetIfNotNil ("\u0042\u0045",_adcc .BE );_bed .SetIfNotNil ("\u0052\u0044",_adcc .RD );_bed .SetIfNotNil ("\u0042\u0053",_adcc .BS );_bed .SetIfNotNil ("\u004c\u0045",_adcc .LE );return _geda ;};func (_fage *PdfAppender )addNewObject (_ebgb _de .PdfObject ){if _ ,_acge :=_fage ._cgge [_ebgb ];!_acge {_fage ._ccda =append (_fage ._ccda ,_ebgb );_fage ._cgge [_ebgb ]=struct{}{};};};

// SetReason sets the `Reason` field of the signature.
func (_agdef *PdfSignature )SetReason (reason string ){_agdef .Reason =_de .MakeString (reason )};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_efcec *PdfPattern )GetContext ()PdfModel {return _efcec ._dcdcc };

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_aefb DefaultImageHandler )NewImageFromGoImage (goimg _dd .Image )(*Image ,error ){_eadba ,_dcbd :=_bdb .FromGoImage (goimg );if _dcbd !=nil {return nil ,_dcbd ;};_eaad :=_cecd (_eadba .Base ());return &_eaad ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ecgf *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_ecgf .Base .GetNumComponents ();_edbgc :=int (vals [0])*N ;if _edbgc < 0||(_edbgc +N -1)>=len (_ecgf ._ecae ){return nil ,_eae .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_bdgd :=_ecgf ._ecae [_edbgc :_edbgc +N ];var _ggcfa []float64 ;for _ ,_baeab :=range _bdgd {_ggcfa =append (_ggcfa ,float64 (_baeab )/255.0);};_bbbbe ,_gfcc :=_ecgf .Base .ColorFromFloats (_ggcfa );if _gfcc !=nil {return nil ,_gfcc ;};return _bbbbe ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_bebca :=&PdfSignature {Type :_de .MakeName ("\u0053\u0069\u0067"),Handler :handler };_ddeda :=&pdfSignDictionary {PdfObjectDictionary :_de .MakeDict (),_bfdbd :&handler ,_beccc :_bebca };_bebca ._cgda =_de .MakeIndirectObject (_ddeda );return _bebca ;};var _cafaf ="";func (_gfbed *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _afed :=_gfbed ._ccbgb ;_afed !=nil {return _afed ;};return _gfbed ._eegg ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cggcf *PdfReader )GetIndirectObjectByNumber (number int )(_de .PdfObject ,error ){_bdabcf ,_bdfb :=_cggcf ._bffa .LookupByNumber (number );return _bdabcf ,_bdfb ;};

// C returns the value of the C component of the color.
func (_ebeg *PdfColorCalRGB )C ()float64 {return float64 (_ebeg [2])};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dfacd *Image )GetParamsDict ()*_de .PdfObjectDictionary {_ceeccg :=_de .MakeDict ();_ceeccg .Set ("\u0057\u0069\u0064t\u0068",_de .MakeInteger (_dfacd .Width ));_ceeccg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_de .MakeInteger (_dfacd .Height ));_ceeccg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_de .MakeInteger (int64 (_dfacd .ColorComponents )));_ceeccg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_de .MakeInteger (_dfacd .BitsPerComponent ));return _ceeccg ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_beef *XObjectImage )ToImage ()(*Image ,error ){_bdfeff :=&Image {};if _beef .Height ==nil {return nil ,_eae .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bdfeff .Height =*_beef .Height ;if _beef .Width ==nil {return nil ,_eae .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bdfeff .Width =*_beef .Width ;if _beef .BitsPerComponent ==nil {return nil ,_eae .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_bdfeff .BitsPerComponent =*_beef .BitsPerComponent ;_bdfeff .ColorComponents =_beef .ColorSpace .GetNumComponents ();_beef ._cccf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_de .MakeInteger (int64 (_bdfeff .ColorComponents )));_eadgd ,_ffadba :=_de .DecodeStream (_beef ._cccf );if _ffadba !=nil {return nil ,_ffadba ;};_bdfeff .Data =_eadgd ;if _beef .Decode !=nil {_dggfd ,_gggbc :=_beef .Decode .(*_de .PdfObjectArray );if !_gggbc {_dg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_eae .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bfafb ,_ggfebb :=_dggfd .ToFloat64Array ();if _ggfebb !=nil {return nil ,_ggfebb ;};_bdfeff ._fbdfg =_bfafb ;};return _bdfeff ,nil ;};func (_bfd *PdfReader )newPdfAnnotationCaretFromDict (_dbgc *_de .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dgbg :=PdfAnnotationCaret {};_ebab ,_ebfb :=_bfd .newPdfAnnotationMarkupFromDict (_dbgc );if _ebfb !=nil {return nil ,_ebfb ;};_dgbg .PdfAnnotationMarkup =_ebab ;_dgbg .RD =_dbgc .Get ("\u0052\u0044");_dgbg .Sy =_dbgc .Get ("\u0053\u0079");return &_dgbg ,nil ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cagbeg *PdfWriter )SetNamedDestinations (names _de .PdfObject )error {if names ==nil {return nil ;};_dg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_cagbeg ._acdea .Set ("\u004e\u0061\u006de\u0073",names );return _cagbeg .addObjects (names );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfea *PdfPageResourcesColorspaces )ToPdfObject ()_de .PdfObject {_bbgc :=_de .MakeDict ();for _ ,_gfbb :=range _cfea .Names {_bbgc .Set (_de .PdfObjectName (_gfbb ),_cfea .Colorspaces [_gfbb ].ToPdfObject ());};if _cfea ._dbfdc !=nil {_cfea ._dbfdc .PdfObject =_bbgc ;return _cfea ._dbfdc ;};return _bbgc ;};

// AllFields returns a flattened list of all fields in the form.
func (_cgebg *PdfAcroForm )AllFields ()[]*PdfField {if _cgebg ==nil {return nil ;};var _dafca []*PdfField ;if _cgebg .Fields !=nil {for _ ,_faaec :=range *_cgebg .Fields {_dafca =append (_dafca ,_gcffd (_faaec )...);};};return _dafca ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _de .PdfObjectName ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_cgged *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cgged .Alternate ==nil {_dg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _cgged .N ==1{_dg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_begbc :=NewPdfColorspaceDeviceGray ();return _begbc .ColorToRGB (color );}else if _cgged .N ==3{_dg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _cgged .N ==4{_dg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cbbgd :=NewPdfColorspaceDeviceCMYK ();return _cbbgd .ColorToRGB (color );}else {return nil ,_eae .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_dg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cgged );return _cgged .Alternate .ColorToRGB (color );};

// Register registers (caches) a model to primitive object relationship.
func (_aefd *modelManager )Register (primitive _de .PdfObject ,model PdfModel ){_aefd ._cggae [model ]=primitive ;_aefd ._gefca [primitive ]=model ;};

// SetContext sets the sub annotation (context).
func (_feb *PdfAnnotation )SetContext (ctx PdfModel ){_feb ._cab =ctx };

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_de .PdfObjectString ;Q *_de .PdfObjectInteger ;DS *_de .PdfObjectString ;RV _de .PdfObject ;MaxLen *_de .PdfObjectInteger ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _de .PdfObject ;FontFamily _de .PdfObject ;FontStretch _de .PdfObject ;FontWeight _de .PdfObject ;Flags _de .PdfObject ;FontBBox _de .PdfObject ;ItalicAngle _de .PdfObject ;Ascent _de .PdfObject ;Descent _de .PdfObject ;Leading _de .PdfObject ;CapHeight _de .PdfObject ;XHeight _de .PdfObject ;StemV _de .PdfObject ;StemH _de .PdfObject ;AvgWidth _de .PdfObject ;MaxWidth _de .PdfObject ;MissingWidth _de .PdfObject ;FontFile _de .PdfObject ;FontFile2 _de .PdfObject ;FontFile3 _de .PdfObject ;CharSet _de .PdfObject ;_gagf int ;_cccgg float64 ;*fontFile ;_cabc *_eba .TtfType ;

// Additional entries for CIDFonts
Style _de .PdfObject ;Lang _de .PdfObject ;FD _de .PdfObject ;CIDSet _de .PdfObject ;_agaa *_de .PdfIndirectObject ;};

// Add appends an outline item as a child of the current outline item.
func (_aaed *OutlineItem )Add (item *OutlineItem ){_aaed .Entries =append (_aaed .Entries ,item )};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _de .PdfObject ;Name _de .PdfObject ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_cffeea *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _de .GetNumberAsFloat (_cffeea .Descent );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_faeee *PdfShadingType3 )ToPdfObject ()_de .PdfObject {_faeee .PdfShading .ToPdfObject ();_fgaa ,_ccbceb :=_faeee .getShadingDict ();if _ccbceb !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _faeee .Coords !=nil {_fgaa .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_faeee .Coords );};if _faeee .Domain !=nil {_fgaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_faeee .Domain );};if _faeee .Function !=nil {if len (_faeee .Function )==1{_fgaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_faeee .Function [0].ToPdfObject ());}else {_dadgd :=_de .MakeArray ();for _ ,_aggbe :=range _faeee .Function {_dadgd .Append (_aggbe .ToPdfObject ());};_fgaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dadgd );};};if _faeee .Extend !=nil {_fgaa .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_faeee .Extend );};return _faeee ._bcfa ;};func _cbae (_fbgdfg *_de .PdfObjectStream )(*PdfFunctionType4 ,error ){_bdcc :=&PdfFunctionType4 {};_bdcc ._afgde =_fbgdfg ;_gbcgd :=_fbgdfg .PdfObjectDictionary ;_ffgba ,_ggeab :=_de .TraceToDirectObject (_gbcgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_ggeab {_dg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_eae .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ffgba .Len ()%2!=0{_dg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_eae .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bfea ,_gfgee :=_ffgba .ToFloat64Array ();if _gfgee !=nil {return nil ,_gfgee ;};_bdcc .Domain =_bfea ;_ffgba ,_ggeab =_de .TraceToDirectObject (_gbcgd .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if _ggeab {if _ffgba .Len ()< 0||_ffgba .Len ()%2!=0{return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dedcd ,_gfebg :=_ffgba .ToFloat64Array ();if _gfebg !=nil {return nil ,_gfebg ;};_bdcc .Range =_dedcd ;};_edffc ,_gfgee :=_de .DecodeStream (_fbgdfg );if _gfgee !=nil {return nil ,_gfgee ;};_bdcc ._ccdb =_edffc ;_cacc :=_fd .NewPSParser ([]byte (_edffc ));_dcea ,_gfgee :=_cacc .Parse ();if _gfgee !=nil {return nil ,_gfgee ;};_bdcc .Program =_dcea ;return _bdcc ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ecba *pdfFontSimple )SetEncoder (encoder _ed .TextEncoder ){_ecba ._bbcag =encoder };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_bedcb *PdfPageResources )GetFontByName (keyName _de .PdfObjectName )(_de .PdfObject ,bool ){if _bedcb .Font ==nil {return nil ,false ;};_gecbg ,_eccae :=_de .TraceToDirectObject (_bedcb .Font ).(*_de .PdfObjectDictionary );if !_eccae {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_de .TraceToDirectObject (_bedcb .Font ));return nil ,false ;};if _bfcfb :=_gecbg .Get (keyName );_bfcfb !=nil {return _bfcfb ,true ;};return nil ,false ;};func _cgege (_bfbf *PdfPage ){_cbbdf :=_gb .GetLicenseKey ();if _cbbdf !=nil &&_cbbdf .IsLicensed (){return ;};_agfdd :=_de .PdfObjectName ("\u0055\u0046\u0031");if !_bfbf .Resources .HasFontByName (_agfdd ){_bfbf .Resources .SetFontByName (_agfdd ,DefaultFont ().ToPdfObject ());};var _gedg []string ;_gedg =append (_gedg ,"\u0071");_gedg =append (_gedg ,"\u0042\u0054");_gedg =append (_gedg ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_agfdd .String ()));_gedg =append (_gedg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_gedg =append (_gedg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_cgfef :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_gedg =append (_gedg ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cgfef ));_gedg =append (_gedg ,"\u0045\u0054");_gedg =append (_gedg ,"\u0051");_eegbd :=_fe .Join (_gedg ,"\u000a");_bfbf .AddContentStreamByString (_eegbd );_bfbf .ToPdfObject ();};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_bagb :=&PdfColorspaceCalRGB {};_bagb .BlackPoint =[]float64 {0.0,0.0,0.0};_bagb .Gamma =[]float64 {1.0,1.0,1.0};_bagb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _bagb ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_addd *PdfFieldSignature )ToPdfObject ()_de .PdfObject {if _addd .PdfAnnotationWidget !=nil {_addd .PdfAnnotationWidget .ToPdfObject ();};_addd .PdfField .ToPdfObject ();_ecebd :=_addd ._bddd ;_dfcgb :=_ecebd .PdfObject .(*_de .PdfObjectDictionary );_dfcgb .SetIfNotNil ("\u0046\u0054",_de .MakeName ("\u0053\u0069\u0067"));_dfcgb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_addd .Lock );_dfcgb .SetIfNotNil ("\u0053\u0056",_addd .SV );if _addd .V !=nil {_dfcgb .SetIfNotNil ("\u0056",_addd .V .ToPdfObject ());};return _ecebd ;};

// SetContext sets the sub action (context).
func (_cf *PdfAction )SetContext (ctx PdfModel ){_cf ._ge =ctx };

// GetContainingPdfObject implements interface PdfModel.
func (_bfbbbf *PdfSignature )GetContainingPdfObject ()_de .PdfObject {return _bfbbbf ._cgda };

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ecbac *XObjectForm )GetContainingPdfObject ()_de .PdfObject {return _ecbac ._bdda };type fontCommon struct{_fbaf string ;_dgbc string ;_caaf string ;_ecace _de .PdfObject ;_cddfb *_bf .CMap ;_ccbgb *PdfFontDescriptor ;_agcd int64 ;};

// ToGoTime returns the date in time.Time format.
func (_ffgc PdfDate )ToGoTime ()_a .Time {_bbgf :=int (_ffgc ._eccagf *60*60+_ffgc ._affgb *60);switch _ffgc ._dgfac {case '-':_bbgf =-_bbgf ;case 'Z':_bbgf =0;};_accafg :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ffgc ._dgfac ,_ffgc ._eccagf ,_ffgc ._affgb );_bbffe :=_a .FixedZone (_accafg ,_bbgf );return _a .Date (int (_ffgc ._cfdcf ),_a .Month (_ffgc ._ecga ),int (_ffgc ._bcae ),int (_ffgc ._adea ),int (_ffgc ._ggegg ),int (_ffgc ._gfcccd ),0,_bbffe );};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _de .StreamEncoder ;Intent _de .PdfObject ;ImageMask _de .PdfObject ;Mask _de .PdfObject ;Matte _de .PdfObject ;Decode _de .PdfObject ;Interpolate _de .PdfObject ;Alternatives _de .PdfObject ;SMask _de .PdfObject ;SMaskInData _de .PdfObject ;Name _de .PdfObject ;StructParent _de .PdfObject ;ID _de .PdfObject ;OPI _de .PdfObject ;Metadata _de .PdfObject ;OC _de .PdfObject ;Stream []byte ;_cccf *_de .PdfObjectStream ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_fdd :=NewPdfAction ();_eca :=&PdfActionHide {};_eca .PdfAction =_fdd ;_fdd .SetContext (_eca );return _eca ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _de .PdfObject ;LE _de .PdfObject ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;IT _de .PdfObject ;Measure _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dabe *PdfAnnotationTrapNet )ToPdfObject ()_de .PdfObject {_dabe .PdfAnnotation .ToPdfObject ();_gfde :=_dabe ._egag ;_cead :=_gfde .PdfObject .(*_de .PdfObjectDictionary );_cead .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _gfde ;};func _ddcg ()string {_dcda :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _gbcac _eff .Buffer ;for _fgafa :=0;_fgafa < 6;_fgafa ++{_gbcac .WriteRune (rune (_dcda [_eg .Intn (len (_dcda ))]));};return _gbcac .String ();};

// SetLocation sets the `Location` field of the signature.
func (_bdee *PdfSignature )SetLocation (location string ){_bdee .Location =_de .MakeString (location )};func (_gggfg *PdfWriter )hasObject (_bedgf _de .PdfObject )bool {_ ,_fafca :=_gggfg ._ggafd [_bedgf ];return _fafca ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ecfeb *PdfPageResources )SetColorspaceByName (keyName _de .PdfObjectName ,cs PdfColorspace )error {_gbcaf ,_fdbe :=_ecfeb .GetColorspaces ();if _fdbe !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fdbe );return _fdbe ;};if _gbcaf ==nil {_gbcaf =NewPdfPageResourcesColorspaces ();_ecfeb .SetColorSpace (_gbcaf );};_gbcaf .Set (keyName ,cs );return nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};

// IsColored specifies if the pattern is colored.
func (_gaagd *PdfTilingPattern )IsColored ()bool {if _gaagd .PaintType !=nil &&*_gaagd .PaintType ==1{return true ;};return false ;};func (_cgec *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ageb *_de .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dfg :=PdfAnnotationFileAttachment {};_dffd ,_dfdb :=_cgec .newPdfAnnotationMarkupFromDict (_ageb );if _dfdb !=nil {return nil ,_dfdb ;};_dfg .PdfAnnotationMarkup =_dffd ;_dfg .FS =_ageb .Get ("\u0046\u0053");_dfg .Name =_ageb .Get ("\u004e\u0061\u006d\u0065");return &_dfg ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bagc pdfCIDFontType0 )GetCharMetrics (code _ed .CharCode )(_eba .CharMetrics ,bool ){_dgfa :=_bagc ._bdecf ;if _adagb ,_eddc :=_bagc ._dbec [code ];_eddc {_dgfa =_adagb ;};return _eba .CharMetrics {Wx :_dgfa },true ;};

// ToInteger convert to an integer format.
func (_beae *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_bgca :=_ac .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bgca *_beae .A ()),uint32 (_bgca *_beae .B ()),uint32 (_bgca *_beae .C ())};};func _badgd ()string {return _dg .Version };func _gcffd (_caaag *PdfField )[]*PdfField {_dbdf :=[]*PdfField {_caaag };for _ ,_cdaeb :=range _caaag .Kids {_dbdf =append (_dbdf ,_gcffd (_cdaeb )...);};return _dbdf ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fbab *PdfField )GetContainingPdfObject ()_de .PdfObject {return _fbab ._bddd };

// Initialize initializes the PdfSignature.
func (_eageb *PdfSignature )Initialize ()error {if _eageb .Handler ==nil {return _eae .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _eageb .Handler .InitSignature (_eageb );};

// ToPdfObject implements interface PdfModel.
func (_gcde *PdfAnnotationHighlight )ToPdfObject ()_de .PdfObject {_gcde .PdfAnnotation .ToPdfObject ();_daea :=_gcde ._egag ;_eacb :=_daea .PdfObject .(*_de .PdfObjectDictionary );_gcde .PdfAnnotationMarkup .appendToPdfDictionary (_eacb );_eacb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_eacb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcde .QuadPoints );return _daea ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cegec *PdfPageResources )GetXObjectByName (keyName _de .PdfObjectName )(*_de .PdfObjectStream ,XObjectType ){if _cegec .XObject ==nil {return nil ,XObjectTypeUndefined ;};_edcgd ,_eeace :=_de .TraceToDirectObject (_cegec .XObject ).(*_de .PdfObjectDictionary );if !_eeace {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_de .TraceToDirectObject (_cegec .XObject ));return nil ,XObjectTypeUndefined ;};if _bgdd :=_edcgd .Get (keyName );_bgdd !=nil {_eddgg ,_febba :=_de .GetStream (_bgdd );if !_febba {_dg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bgdd );return nil ,XObjectTypeUndefined ;};_eeadc :=_eddgg .PdfObjectDictionary ;_ffege ,_febba :=_de .TraceToDirectObject (_eeadc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_de .PdfObjectName );if !_febba {_dg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_eeadc .String ());return nil ,XObjectTypeUndefined ;};if *_ffege =="\u0049\u006d\u0061g\u0065"{return _eddgg ,XObjectTypeImage ;}else if *_ffege =="\u0046\u006f\u0072\u006d"{return _eddgg ,XObjectTypeForm ;}else if *_ffege =="\u0050\u0053"{return _eddgg ,XObjectTypePS ;}else {_dg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_ffege );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// GetNumComponents returns the number of color components.
func (_abfg *PdfColorspaceICCBased )GetNumComponents ()int {return _abfg .N };func (_debe *PdfReader )newPdfAnnotationScreenFromDict (_cded *_de .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_efgb :=PdfAnnotationScreen {};_efgb .T =_cded .Get ("\u0054");_efgb .MK =_cded .Get ("\u004d\u004b");_efgb .A =_cded .Get ("\u0041");_efgb .AA =_cded .Get ("\u0041\u0041");return &_efgb ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _de .PdfObject ;Flags _de .PdfObject ;};

// Val returns the value of the color.
func (_dacdd *PdfColorCalGray )Val ()float64 {return float64 (*_dacdd )};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cdaee ,_ebcba :=_ef .Open (filePath );if _ebcba !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebcba );return nil ,_ebcba ;};defer _cdaee .Close ();return NewPdfFontFromTTF (_cdaee );};

// HasXObjectByName checks if has XObject resource by name.
func (_cffebe *PdfPage )HasXObjectByName (name _de .PdfObjectName )bool {_eece ,_abfff :=_cffebe .Resources .XObject .(*_de .PdfObjectDictionary );if !_abfff {return false ;};if _dcdb :=_eece .Get (name );_dcdb !=nil {return true ;};return false ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _de .PdfObject ;AN _de .PdfObject ;OP _de .PdfObject ;JS _de .PdfObject ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dbbe *PdfField )ToPdfObject ()_de .PdfObject {_abad :=_dbbe ._bddd ;_decd :=_abad .PdfObject .(*_de .PdfObjectDictionary );_aefg :=_de .MakeArray ();for _ ,_cfffe :=range _dbbe .Kids {_aefg .Append (_cfffe .ToPdfObject ());};for _ ,_aedf :=range _dbbe .Annotations {if _aedf ._egag !=_dbbe ._bddd {_aefg .Append (_aedf .GetContext ().ToPdfObject ());};};if _dbbe .Parent !=nil {_decd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbbe .Parent .GetContainingPdfObject ());};if _aefg .Len ()> 0{_decd .Set ("\u004b\u0069\u0064\u0073",_aefg );};_decd .SetIfNotNil ("\u0046\u0054",_dbbe .FT );_decd .SetIfNotNil ("\u0054",_dbbe .T );_decd .SetIfNotNil ("\u0054\u0055",_dbbe .TU );_decd .SetIfNotNil ("\u0054\u004d",_dbbe .TM );_decd .SetIfNotNil ("\u0046\u0066",_dbbe .Ff );_decd .SetIfNotNil ("\u0056",_dbbe .V );_decd .SetIfNotNil ("\u0044\u0056",_dbbe .DV );_decd .SetIfNotNil ("\u0041\u0041",_dbbe .AA );return _abad ;};

// String returns a string describing the font descriptor.
func (_cffg *PdfFontDescriptor )String ()string {var _bggab []string ;if _cffg .FontName !=nil {_bggab =append (_bggab ,_cffg .FontName .String ());};if _cffg .FontFamily !=nil {_bggab =append (_bggab ,_cffg .FontFamily .String ());};if _cffg .fontFile !=nil {_bggab =append (_bggab ,_cffg .fontFile .String ());};if _cffg ._cabc !=nil {_bggab =append (_bggab ,_cffg ._cabc .String ());};_bggab =append (_bggab ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_cffg .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fe .Join (_bggab ,"\u002c\u0020"));};func (_dddf *fontFile )parseASCIIPart (_ebdce []byte )error {if len (_ebdce )< 2||string (_ebdce [:2])!="\u0025\u0021"{return _eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_beaeg ,_caaad ,_gdcf :=_afagg (_ebdce );if _gdcf !=nil {return _gdcf ;};_gfdcb :=_fgad (_beaeg );_dddf ._bafgc =_gfdcb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dddf ._bafgc ==""{_dg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _caaad !=""{_edbf ,_efce :=_dacde (_caaad );if _efce !=nil {return _efce ;};_deff ,_efce :=_ed .NewCustomSimpleTextEncoder (_edbf ,nil );if _efce !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_efce );return nil ;};_dddf ._cfdc =_deff ;};return nil ;};

// Encoder returns the font's text encoder.
func (_afagd *PdfFont )Encoder ()_ed .TextEncoder {_ccecg :=_afagd .actualFont ();if _ccecg ==nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_afagd ._fgef );return nil ;};return _ccecg .Encoder ();};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// AddOutlineTree adds outlines to a PDF file.
func (_cefeg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_cefeg ._gadeea =outlineTree ;};func (_gbcf *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ebge *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bgef :=_dgb .NewReader (img .getBase ());_accfa :=_bdb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_caded :=_dgb .NewWriter (_accfa );_ffcg :=_ac .Pow (2,float64 (img .BitsPerComponent ))-1;_fdab :=make ([]uint32 ,3);var (_bgbd uint32 ;ANorm ,X ,Y ,Z ,_baea ,_bdbd ,_bbcg float64 ;_gbfde error ;);for {_bgbd ,_gbfde =_bgef .ReadSample ();if _gbfde ==_ea .EOF {break ;}else if _gbfde !=nil {return img ,_gbfde ;};ANorm =float64 (_bgbd )/_ffcg ;X =_ebge .WhitePoint [0]*_ac .Pow (ANorm ,_ebge .Gamma );Y =_ebge .WhitePoint [1]*_ac .Pow (ANorm ,_ebge .Gamma );Z =_ebge .WhitePoint [2]*_ac .Pow (ANorm ,_ebge .Gamma );_baea =3.240479*X +-1.537150*Y +-0.498535*Z ;_bdbd =-0.969256*X +1.875992*Y +0.041556*Z ;_bbcg =0.055648*X +-0.204043*Y +1.057311*Z ;_baea =_ac .Min (_ac .Max (_baea ,0),1.0);_bdbd =_ac .Min (_ac .Max (_bdbd ,0),1.0);_bbcg =_ac .Min (_ac .Max (_bbcg ,0),1.0);_fdab [0]=uint32 (_baea *_ffcg );_fdab [1]=uint32 (_bdbd *_ffcg );_fdab [2]=uint32 (_bbcg *_ffcg );if _gbfde =_caded .WriteSamples (_fdab );_gbfde !=nil {return img ,_gbfde ;};};return _cecd (&_accfa ),nil ;};func _ddga (_caag _de .PdfObject )(*PdfColorspaceCalGray ,error ){_bcgc :=NewPdfColorspaceCalGray ();if _acebg ,_gfbga :=_caag .(*_de .PdfIndirectObject );_gfbga {_bcgc ._fgdf =_acebg ;};_caag =_de .TraceToDirectObject (_caag );_fbbc ,_fegg :=_caag .(*_de .PdfObjectArray );if !_fegg {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbbc .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_caag =_de .TraceToDirectObject (_fbbc .Get (0));_dbae ,_fegg :=_caag .(*_de .PdfObjectName );if !_fegg {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_dbae !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_caag =_de .TraceToDirectObject (_fbbc .Get (1));_bdad ,_fegg :=_caag .(*_de .PdfObjectDictionary );if !_fegg {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_caag =_bdad .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_caag =_de .TraceToDirectObject (_caag );_eceea ,_fegg :=_caag .(*_de .PdfObjectArray );if !_fegg {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _eceea .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bbfc ,_afccd :=_eceea .GetAsFloat64Slice ();if _afccd !=nil {return nil ,_afccd ;};_bcgc .WhitePoint =_bbfc ;_caag =_bdad .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _caag !=nil {_caag =_de .TraceToDirectObject (_caag );_bbccg ,_bbga :=_caag .(*_de .PdfObjectArray );if !_bbga {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bbccg .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ecgbd ,_dbbc :=_bbccg .GetAsFloat64Slice ();if _dbbc !=nil {return nil ,_dbbc ;};_bcgc .BlackPoint =_ecgbd ;};_caag =_bdad .Get ("\u0047\u0061\u006dm\u0061");if _caag !=nil {_caag =_de .TraceToDirectObject (_caag );_gafb ,_dcbad :=_de .GetNumberAsFloat (_caag );if _dcbad !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_bcgc .Gamma =_gafb ;};return _bcgc ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_egba *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fddd ,_gdfg :=_de .GetNumbersAsFloat (objects );if _gdfg !=nil {return nil ,_gdfg ;};return _egba .ColorFromFloats (_fddd );};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_de .PdfObjectInteger ;TilingType *_de .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_de .PdfObjectFloat ;YStep *_de .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_de .PdfObjectArray ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_fbfba =keywords };

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gacb :=NewPdfAnnotation ();_abb :=&PdfAnnotationLink {};_abb .PdfAnnotation =_gacb ;_gacb .SetContext (_abb );return _abb ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bfeg *PdfWriter )SetOptimizer (optimizer Optimizer ){_bfeg ._facgg =optimizer };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cefc *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbf ,_cgcd :=_de .GetNumbersAsFloat (objects );if _cgcd !=nil {return nil ,_cgcd ;};return _cefc .ColorFromFloats (_bcbf );};func (_bgcff fontCommon )asPdfObjectDictionary (_gefd string )*_de .PdfObjectDictionary {if _gefd !=""&&_bgcff ._dgbc !=""&&_gefd !=_bgcff ._dgbc {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gefd ,_bgcff );}else if _gefd ==""&&_bgcff ._dgbc ==""{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bgcff );}else if _bgcff ._dgbc ==""{_bgcff ._dgbc =_gefd ;};_gfae :=_de .MakeDict ();_gfae .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0046\u006f\u006e\u0074"));_gfae .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_de .MakeName (_bgcff ._fbaf ));_gfae .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName (_bgcff ._dgbc ));if _bgcff ._ccbgb !=nil {_gfae .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bgcff ._ccbgb .ToPdfObject ());};if _bgcff ._ecace !=nil {_gfae .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bgcff ._ecace );}else if _bgcff ._cddfb !=nil {_fgce ,_eabf :=_bgcff ._cddfb .Stream ();if _eabf !=nil {_dg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_eabf );}else {_gfae .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgce );};};return _gfae ;};func (_gcd *PdfReader )newPdfAnnotationUnderlineFromDict (_cdfe *_de .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bbf :=PdfAnnotationUnderline {};_fcfb ,_gcec :=_gcd .newPdfAnnotationMarkupFromDict (_cdfe );if _gcec !=nil {return nil ,_gcec ;};_bbf .PdfAnnotationMarkup =_fcfb ;_bbf .QuadPoints =_cdfe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbf ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_agea :=NewPdfAnnotation ();_fec :=&PdfAnnotationUnderline {};_fec .PdfAnnotation =_agea ;_fec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agea .SetContext (_fec );return _fec ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bged *PdfPage )error ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_eebd :=NewPdfAnnotation ();_fca :=&PdfAnnotationMovie {};_fca .PdfAnnotation =_eebd ;_eebd .SetContext (_fca );return _fca ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dbdb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_adbb :=&PdfColorspaceDeviceN {};return _adbb };

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gfca *PdfFont )ToUnicode ()string {if _gfca .baseFields ()._cddfb ==nil {return "";};return _gfca .baseFields ()._cddfb .Name ();};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bddd :_de .MakeIndirectObject (_de .MakeDict ())}};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bafaa pdfFontType0 )GetRuneMetrics (r rune )(_eba .CharMetrics ,bool ){if _bafaa .DescendantFont ==nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bafaa );return _eba .CharMetrics {},false ;};return _bafaa .DescendantFont .GetRuneMetrics (r );};func (_dbaaeb *PdfWriter )copyObjects (){_dbaef :=make (map[_de .PdfObject ]_de .PdfObject );_dgccf :=make ([]_de .PdfObject ,0,len (_dbaaeb ._fcgg ));_agadf :=make (map[_de .PdfObject ]struct{},len (_dbaaeb ._fcgg ));_dface :=make (map[_de .PdfObject ]struct{});for _ ,_ccca :=range _dbaaeb ._fcgg {_gagce :=_dbaaeb .copyObject (_ccca ,_dbaef ,_dface ,false );if _ ,_eafgc :=_dface [_ccca ];_eafgc {continue ;};_dgccf =append (_dgccf ,_gagce );_agadf [_gagce ]=struct{}{};};_dbaaeb ._fcgg =_dgccf ;_dbaaeb ._ggafd =_agadf ;_dbaaeb ._gccea =_dbaaeb .copyObject (_dbaaeb ._gccea ,_dbaef ,nil ,false ).(*_de .PdfIndirectObject );_dbaaeb ._abbfa =_dbaaeb .copyObject (_dbaaeb ._abbfa ,_dbaef ,nil ,false ).(*_de .PdfIndirectObject );if _dbaaeb ._ffade !=nil {_dbaaeb ._ffade =_dbaaeb .copyObject (_dbaaeb ._ffade ,_dbaef ,nil ,false ).(*_de .PdfIndirectObject );};if _dbaaeb ._feabe {_bcege :=make (map[_de .PdfObject ]int64 );for _fdefd ,_fecea :=range _dbaaeb ._dffdee {if _bbacef ,_cfccb :=_dbaef [_fdefd ];_cfccb {_bcege [_bbacef ]=_fecea ;}else {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_dbaaeb ._dffdee =_bcege ;};};

// ToPdfObject implements interface PdfModel.
func (_fcca *PdfAnnotationLink )ToPdfObject ()_de .PdfObject {_fcca .PdfAnnotation .ToPdfObject ();_dbf :=_fcca ._egag ;_fdceb :=_dbf .PdfObject .(*_de .PdfObjectDictionary );_fdceb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u004c\u0069\u006e\u006b"));if _fcca ._gbb !=nil &&_fcca ._gbb ._ge !=nil {_fdceb .Set ("\u0041",_fcca ._gbb ._ge .ToPdfObject ());}else if _fcca .A !=nil {_fdceb .Set ("\u0041",_fcca .A );};_fdceb .SetIfNotNil ("\u0044\u0065\u0073\u0074",_fcca .Dest );_fdceb .SetIfNotNil ("\u0048",_fcca .H );_fdceb .SetIfNotNil ("\u0050\u0041",_fcca .PA );_fdceb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcca .QuadPoints );_fdceb .SetIfNotNil ("\u0042\u0053",_fcca .BS );return _dbf ;};func (_afdg *PdfReader )newPdfAnnotationTrapNetFromDict (_agg *_de .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_fdce :=PdfAnnotationTrapNet {};return &_fdce ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_debgd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _debgd .Alternate ==nil {_dg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _debgd .N ==1{_dg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_gagba :=NewPdfColorspaceDeviceGray ();return _gagba .ImageToRGB (img );}else if _debgd .N ==3{_dg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _debgd .N ==4{_dg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cbdg :=NewPdfColorspaceDeviceCMYK ();return _cbdg .ImageToRGB (img );}else {return img ,_eae .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_dg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_debgd );_eagde ,_cbcd :=_debgd .Alternate .ImageToRGB (img );_dg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_eagde );return _eagde ,_cbcd ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cgdd :=NewPdfAnnotation ();_gcca :=&PdfAnnotationProjection {};_gcca .PdfAnnotation =_cgdd ;_gcca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgdd .SetContext (_gcca );return _gcca ;};

// Encoder returns the font's text encoder.
func (_ebed *pdfFontSimple )Encoder ()_ed .TextEncoder {if _ebed ._bbcag !=nil {return _ebed ._bbcag ;};if _ebed ._ffdc !=nil {return _ebed ._ffdc ;};_gabf ,_ :=_ed .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _gabf ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;BitsPerFlag *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};func (_acgbb *PdfFont )baseFields ()*fontCommon {if _acgbb ._fgef ==nil {_dg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _acgbb ._fgef .baseFields ();};func (_baf *PdfReader )newPdfAnnotationMovieFromDict (_cgef *_de .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_dbgf :=PdfAnnotationMovie {};_dbgf .T =_cgef .Get ("\u0054");_dbgf .Movie =_cgef .Get ("\u004d\u006f\u0076i\u0065");_dbgf .A =_cgef .Get ("\u0041");return &_dbgf ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _de .PdfObject )(PdfColorspace ,error ){var _aecc *_de .PdfIndirectObject ;var _abf *_de .PdfObjectName ;var _ggb *_de .PdfObjectArray ;if _dgagd ,_ffgd :=obj .(*_de .PdfIndirectObject );_ffgd {_aecc =_dgagd ;};obj =_de .TraceToDirectObject (obj );switch _bagf :=obj .(type ){case *_de .PdfObjectArray :_ggb =_bagf ;case *_de .PdfObjectName :_abf =_bagf ;};if _abf !=nil {switch *_abf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_dg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_abf );return nil ,_cagg ;};};if _ggb !=nil &&_ggb .Len ()> 0{var _cdgf _de .PdfObject =_aecc ;if _aecc ==nil {_cdgf =_ggb ;};if _cfd ,_fagf :=_de .GetName (_ggb .Get (0));_fagf {switch _cfd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _ggb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _ggb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ggb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ddga (_cdgf );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dacbc (_cdgf );case "\u004c\u0061\u0062":return _dafec (_cdgf );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gefc (_cdgf );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _fbbbg (_cdgf );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eegb (_cdgf );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dffe (_cdgf );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gbba (_cdgf );default:_dg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_cfd );};};};_dg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_bgdae *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggef ,_gfef :=color .(*PdfColorPattern );if !_gfef {_dg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _ggef .Color ==nil {return color ,nil ;};if _bgdae .UnderlyingCS ==nil {return nil ,_eae .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _bgdae .UnderlyingCS .ColorToRGB (_ggef .Color );};func _cbfba (_dadde *_de .PdfObjectDictionary )(*PdfShadingPattern ,error ){_babde :=&PdfShadingPattern {};_edefb :=_dadde .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _edefb ==nil {_dg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gaagc ,_fgeadc :=_ebffg (_edefb );if _fgeadc !=nil {_dg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fgeadc );return nil ,_fgeadc ;};_babde .Shading =_gaagc ;if _aeggb :=_dadde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_aeggb !=nil {_becfe ,_edfa :=_aeggb .(*_de .PdfObjectArray );if !_edfa {_dg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aeggb );return nil ,_de .ErrTypeError ;};_babde .Matrix =_becfe ;};if _gfbfc :=_dadde .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gfbfc !=nil {_babde .ExtGState =_gfbfc ;};return _babde ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcga *PdfAnnotationRichMedia )ToPdfObject ()_de .PdfObject {_gcga .PdfAnnotation .ToPdfObject ();_ffc :=_gcga ._egag ;_ddce :=_ffc .PdfObject .(*_de .PdfObjectDictionary );_ddce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_ddce .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gcga .RichMediaSettings );_ddce .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gcga .RichMediaContent );return _ffc ;};func (_eeabe *pdfFontSimple )getFontEncoding ()(_agdb string ,_edcc map[_ed .CharCode ]_ed .GlyphName ,_aggec error ){_agdb ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _eaba ,_feaba :=_dcca [_eeabe ._fbaf ];_feaba {_agdb =_eaba ;}else if _eeabe .fontFlags ()&_fbabf !=0{for _ggebd ,_agba :=range _dcca {if _fe .Contains (_eeabe ._fbaf ,_ggebd ){_agdb =_agba ;break ;};};};if _eeabe .Encoding ==nil {return _agdb ,nil ,nil ;};switch _cdeb :=_eeabe .Encoding .(type ){case *_de .PdfObjectName :return string (*_cdeb ),nil ,nil ;case *_de .PdfObjectDictionary :_ggcga ,_dacc :=_de .GetName (_cdeb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dacc {_agdb =_ggcga .String ();};if _gfcbce :=_cdeb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_gfcbce !=nil {_gefbf ,_gfdc :=_de .GetArray (_gfcbce );if !_gfdc {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cdeb ,_cdeb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_de .ErrTypeError ;};_edcc ,_aggec =_ed .FromFontDifferences (_gefbf );};return _agdb ,_edcc ,_aggec ;default:_dg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_eeabe .Encoding ,_eeabe .Encoding );return "",nil ,_de .ErrTypeError ;};};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ggabe ,_gbeab :=_ef .Open (filePath );if _gbeab !=nil {_dg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gbeab );return nil ,_gbeab ;};defer _ggabe .Close ();return NewCompositePdfFontFromTTF (_ggabe );};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_gfd :=NewPdfAction ();_deb :=&PdfActionURI {};_deb .PdfAction =_gfd ;_gfd .SetContext (_deb );return _deb ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_fggc *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_eced ,_afdfb :=color .(*PdfColorCalRGB );if !_afdfb {_dg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_agcb :=_eced .A ();_aabbf :=_eced .B ();_dbdba :=_eced .C ();X :=_fggc .Matrix [0]*_ac .Pow (_agcb ,_fggc .Gamma [0])+_fggc .Matrix [3]*_ac .Pow (_aabbf ,_fggc .Gamma [1])+_fggc .Matrix [6]*_ac .Pow (_dbdba ,_fggc .Gamma [2]);Y :=_fggc .Matrix [1]*_ac .Pow (_agcb ,_fggc .Gamma [0])+_fggc .Matrix [4]*_ac .Pow (_aabbf ,_fggc .Gamma [1])+_fggc .Matrix [7]*_ac .Pow (_dbdba ,_fggc .Gamma [2]);Z :=_fggc .Matrix [2]*_ac .Pow (_agcb ,_fggc .Gamma [0])+_fggc .Matrix [5]*_ac .Pow (_aabbf ,_fggc .Gamma [1])+_fggc .Matrix [8]*_ac .Pow (_dbdba ,_fggc .Gamma [2]);_bagd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ceg :=-0.969256*X +1.875992*Y +0.041556*Z ;_eaaff :=0.055648*X +-0.204043*Y +1.057311*Z ;_bagd =_ac .Min (_ac .Max (_bagd ,0),1.0);_ceg =_ac .Min (_ac .Max (_ceg ,0),1.0);_eaaff =_ac .Min (_ac .Max (_eaaff ,0),1.0);return NewPdfColorDeviceRGB (_bagd ,_ceg ,_eaaff ),nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fcfdd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _aafg []*PdfField ;_adbec :=map[*_de .PdfIndirectObject ]struct{}{};for _ ,_caaae :=range _fcfdd .PageList {_fgbd ,_dcgac :=_caaae .GetAnnotations ();if _dcgac !=nil {return _dcgac ;};for _ ,_dffa :=range _fgbd {var _aaga *PdfField ;switch _ecebdb :=_dffa .GetContext ().(type ){case *PdfAnnotationWidget :if _ecebdb ._bgf !=nil {_aaga =_ecebdb ._bgf ;break ;};if _eacac ,_deeb :=_de .GetIndirect (_ecebdb .Parent );_deeb {_aaga ,_dcgac =_fcfdd .newPdfFieldFromIndirectObject (_eacac ,nil );if _dcgac ==nil {break ;};_dg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eacac ,_dcgac );};if _ecebdb ._egag !=nil {_aaga ,_dcgac =_fcfdd .newPdfFieldFromIndirectObject (_ecebdb ._egag ,nil );if _dcgac ==nil {break ;};_dg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecebdb ._egag ,_dcgac );};};if _aaga ==nil {continue ;};if _ ,_fdcad :=_adbec [_aaga ._bddd ];_fdcad {continue ;};_adbec [_aaga ._bddd ]=struct{}{};_aafg =append (_aafg ,_aaga );};};if len (_aafg )==0{return nil ;};if _fcfdd .AcroForm ==nil {_fcfdd .AcroForm =NewPdfAcroForm ();};_fcfdd .AcroForm .Fields =&_aafg ;return nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _a .Time )(PdfDate ,error ){_ddgb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gadc ,_ :=_fc .ParseInt (_ddgb [1:3],10,32);_gcgcc ,_ :=_fc .ParseInt (_ddgb [4:6],10,32);return PdfDate {_cfdcf :int64 (timeObj .Year ()),_ecga :int64 (timeObj .Month ()),_bcae :int64 (timeObj .Day ()),_adea :int64 (timeObj .Hour ()),_ggegg :int64 (timeObj .Minute ()),_gfcccd :int64 (timeObj .Second ()),_dgfac :_ddgb [0],_eccagf :_gadc ,_affgb :_gcgcc },nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cbee PdfModel ;_bddd *_de .PdfIndirectObject ;_gege *bool ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_de .PdfObjectName ;T *_de .PdfObjectString ;TU *_de .PdfObjectString ;TM *_de .PdfObjectString ;Ff *_de .PdfObjectInteger ;V _de .PdfObject ;DV _de .PdfObject ;AA _de .PdfObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_de .PdfObjectStream )(*XObjectImage ,error ){_ffgf :=&XObjectImage {};_ffgf ._cccf =stream ;_deggc :=*(stream .PdfObjectDictionary );_bbeb ,_adbgb :=_de .NewEncoderFromStream (stream );if _adbgb !=nil {return nil ,_adbgb ;};_ffgf .Filter =_bbeb ;if _eacgga :=_de .TraceToDirectObject (_deggc .Get ("\u0057\u0069\u0064t\u0068"));_eacgga !=nil {_gafbd ,_fceaa :=_eacgga .(*_de .PdfObjectInteger );if !_fceaa {return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_aebfb :=int64 (*_gafbd );_ffgf .Width =&_aebfb ;}else {return nil ,_eae .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bfeae :=_de .TraceToDirectObject (_deggc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_bfeae !=nil {_begae ,_dbcfa :=_bfeae .(*_de .PdfObjectInteger );if !_dbcfa {return nil ,_eae .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ccfbf :=int64 (*_begae );_ffgf .Height =&_ccfbf ;}else {return nil ,_eae .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _faagc :=_de .TraceToDirectObject (_deggc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_faagc !=nil {_face ,_dafcf :=NewPdfColorspaceFromPdfObject (_faagc );if _dafcf !=nil {return nil ,_dafcf ;};_ffgf .ColorSpace =_face ;}else {_dg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_ffgf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _bggabg :=_de .TraceToDirectObject (_deggc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_bggabg !=nil {_fgdfb ,_dadgdg :=_bggabg .(*_de .PdfObjectInteger );if !_dadgdg {return nil ,_eae .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bfdfg :=int64 (*_fgdfb );_ffgf .BitsPerComponent =&_bfdfg ;};_ffgf .Intent =_deggc .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_ffgf .ImageMask =_deggc .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_ffgf .Mask =_deggc .Get ("\u004d\u0061\u0073\u006b");_ffgf .Decode =_deggc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_ffgf .Interpolate =_deggc .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_ffgf .Alternatives =_deggc .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_ffgf .SMask =_deggc .Get ("\u0053\u004d\u0061s\u006b");_ffgf .SMaskInData =_deggc .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_ffgf .Matte =_deggc .Get ("\u004d\u0061\u0074t\u0065");_ffgf .Name =_deggc .Get ("\u004e\u0061\u006d\u0065");_ffgf .StructParent =_deggc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ffgf .ID =_deggc .Get ("\u0049\u0044");_ffgf .OPI =_deggc .Get ("\u004f\u0050\u0049");_ffgf .Metadata =_deggc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ffgf .OC =_deggc .Get ("\u004f\u0043");_ffgf .Stream =stream .Stream ;return _ffgf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gef *PdfActionThread )ToPdfObject ()_de .PdfObject {_gef .PdfAction .ToPdfObject ();_aeb :=_gef ._daa ;_cg :=_aeb .PdfObject .(*_de .PdfObjectDictionary );_cg .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeThread )));if _gef .F !=nil {_cg .Set ("\u0046",_gef .F .ToPdfObject ());};_cg .SetIfNotNil ("\u0044",_gef .D );_cg .SetIfNotNil ("\u0042",_gef .B );return _aeb ;};func _gfcee (_cdgdg *_de .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ebcaa :=PdfShadingType6 {};_bfdcg :=_cdgdg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bfdcg ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cbgbb ,_cgbgc :=_bfdcg .(*_de .PdfObjectInteger );if !_cgbgc {_dg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bfdcg );return nil ,_de .ErrTypeError ;};_ebcaa .BitsPerCoordinate =_cbgbb ;_bfdcg =_cdgdg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bfdcg ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cbgbb ,_cgbgc =_bfdcg .(*_de .PdfObjectInteger );if !_cgbgc {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bfdcg );return nil ,_de .ErrTypeError ;};_ebcaa .BitsPerComponent =_cbgbb ;_bfdcg =_cdgdg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bfdcg ==nil {_dg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbgbb ,_cgbgc =_bfdcg .(*_de .PdfObjectInteger );if !_cgbgc {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bfdcg );return nil ,_de .ErrTypeError ;};_ebcaa .BitsPerComponent =_cbgbb ;_bfdcg =_cdgdg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bfdcg ==nil {_dg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_egfc ,_cgbgc :=_bfdcg .(*_de .PdfObjectArray );if !_cgbgc {_dg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfdcg );return nil ,_de .ErrTypeError ;};_ebcaa .Decode =_egfc ;if _aeda :=_cdgdg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aeda !=nil {_ebcaa .Function =[]PdfFunction {};if _dcbac ,_cfbb :=_aeda .(*_de .PdfObjectArray );_cfbb {for _ ,_gbcab :=range _dcbac .Elements (){_ebbef ,_ffbag :=_bbfe (_gbcab );if _ffbag !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffbag );return nil ,_ffbag ;};_ebcaa .Function =append (_ebcaa .Function ,_ebbef );};}else {_gadaaa ,_gffec :=_bbfe (_aeda );if _gffec !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gffec );return nil ,_gffec ;};_ebcaa .Function =append (_ebcaa .Function ,_gadaaa );};};return &_ebcaa ,nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gcgcaca *_de .PdfIndirectObject ;};

// GetContentStreams returns the content stream as an array of strings.
func (_fgcad *PdfPage )GetContentStreams ()([]string ,error ){if _fgcad .Contents ==nil {return nil ,nil ;};_aacfd :=_de .TraceToDirectObject (_fgcad .Contents );var _begfeg []_de .PdfObject ;if _gfbf ,_cgdga :=_aacfd .(*_de .PdfObjectArray );_cgdga {_begfeg =_gfbf .Elements ();}else {_begfeg =[]_de .PdfObject {_aacfd };};var _dbefd []string ;for _ ,_ecbff :=range _begfeg {_bcgab ,_fbfb :=_egacd (_ecbff );if _fbfb !=nil {return nil ,_fbfb ;};_dbefd =append (_dbefd ,_bcgab );};return _dbefd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_egabb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_eega *Image )samplesTrimPadding (_beeae []uint32 )[]uint32 {_gdab :=_eega .ColorComponents *int (_eega .Width )*int (_eega .Height );if len (_beeae )==_gdab {return _beeae ;};_ceag :=make ([]uint32 ,_gdab );_egaabf :=int (_eega .Width )*_eega .ColorComponents ;var _eegge ,_gdedg ,_ggge ,_bfag int ;_gefeg :=_bdb .BytesPerLine (int (_eega .Width ),int (_eega .BitsPerComponent ),_eega .ColorComponents );for _eegge =0;_eegge < int (_eega .Height );_eegge ++{_gdedg =_eegge *int (_eega .Width );_ggge =_eegge *_gefeg ;for _bfag =0;_bfag < _egaabf ;_bfag ++{_ceag [_gdedg +_bfag ]=_beeae [_ggge +_bfag ];};};return _ceag ;};func (_bcbba *PdfReader )resolveReference (_eafgd *_de .PdfObjectReference )(_de .PdfObject ,bool ,error ){_ecfbd ,_caffe :=_bcbba ._bffa .ObjCache [int (_eafgd .ObjectNumber )];if !_caffe {_dg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_eafgd );_ccbag ,_bffbg :=_bcbba ._bffa .LookupByReference (*_eafgd );if _bffbg !=nil {return nil ,false ,_bffbg ;};_bcbba ._bffa .ObjCache [int (_eafgd .ObjectNumber )]=_ccbag ;return _ccbag ,false ,nil ;};return _ecfbd ,true ,nil ;};

// K returns the value of the key component of the color.
func (_faef *PdfColorDeviceCMYK )K ()float64 {return float64 (_faef [3])};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_bc :=NewPdfAction ();_ede :=&PdfActionGoToR {};_ede .PdfAction =_bc ;_bc .SetContext (_ede );return _ede ;};const (_fdabd =0x00001;_adad =0x00002;_fbabf =0x00004;_dgcdd =0x00008;_dfeab =0x00020;_dedc =0x00040;_fbff =0x10000;_feed =0x20000;_gcfe =0x40000;);

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fd .PSProgram ;_agdeb *_fd .PSExecutor ;_ccdb []byte ;_afgde *_de .PdfObjectStream ;};var _ddgbd ="";

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};func (_cdfg *pdfFontSimple )addEncoding ()error {var (_begef string ;_fcdab map[_ed .CharCode ]_ed .GlyphName ;_bbdg _ed .SimpleEncoder ;);if _cdfg .Encoder ()!=nil {_egaabb ,_gdada :=_cdfg .Encoder ().(_ed .SimpleEncoder );if _gdada &&_egaabb !=nil {_begef =_egaabb .BaseName ();};};if _cdfg .Encoding !=nil {_cccea ,_gdcb ,_fageb :=_cdfg .getFontEncoding ();if _fageb !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdfg ._fbaf ,_cdfg ._dgbc ,_cdfg .Encoding ,_cdfg .Encoding ,_fageb );return _fageb ;};if _cccea !=""{_begef =_cccea ;};_bbdg ,_fageb =_ed .NewSimpleTextEncoder (_begef ,_gdcb );if _fageb !=nil {return _fageb ;};};if _bbdg ==nil {_dcagb :=_cdfg ._ccbgb ;if _dcagb !=nil {switch _cdfg ._dgbc {case "\u0054\u0079\u0070e\u0031":if _dcagb .fontFile !=nil &&_dcagb .fontFile ._cfdc !=nil {_dg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_bbdg =_dcagb .fontFile ._cfdc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _dcagb ._cabc !=nil {_dg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dgagg ,_cdeed :=_dcagb ._cabc .MakeEncoder ();if _cdeed ==nil {_bbdg =_dgagg ;};};};};};if _bbdg !=nil {if _fcdab !=nil {_dg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcdab ,_cdfg .baseFields ());_bbdg =_ed .ApplyDifferences (_bbdg ,_fcdab );};_cdfg .SetEncoder (_bbdg );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fae *PdfAnnotationLine )ToPdfObject ()_de .PdfObject {_fae .PdfAnnotation .ToPdfObject ();_acceg :=_fae ._egag ;_dba :=_acceg .PdfObject .(*_de .PdfObjectDictionary );_fae .PdfAnnotationMarkup .appendToPdfDictionary (_dba );_dba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u004c\u0069\u006e\u0065"));_dba .SetIfNotNil ("\u004c",_fae .L );_dba .SetIfNotNil ("\u0042\u0053",_fae .BS );_dba .SetIfNotNil ("\u004c\u0045",_fae .LE );_dba .SetIfNotNil ("\u0049\u0043",_fae .IC );_dba .SetIfNotNil ("\u004c\u004c",_fae .LL );_dba .SetIfNotNil ("\u004c\u004c\u0045",_fae .LLE );_dba .SetIfNotNil ("\u0043\u0061\u0070",_fae .Cap );_dba .SetIfNotNil ("\u0049\u0054",_fae .IT );_dba .SetIfNotNil ("\u004c\u004c\u004f",_fae .LLO );_dba .SetIfNotNil ("\u0043\u0050",_fae .CP );_dba .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fae .Measure );_dba .SetIfNotNil ("\u0043\u004f",_fae .CO );return _acceg ;};func (_eaaf *PdfReader )newPdfAnnotationLineFromDict (_cdee *_de .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_effb :=PdfAnnotationLine {};_bgg ,_fged :=_eaaf .newPdfAnnotationMarkupFromDict (_cdee );if _fged !=nil {return nil ,_fged ;};_effb .PdfAnnotationMarkup =_bgg ;_effb .L =_cdee .Get ("\u004c");_effb .BS =_cdee .Get ("\u0042\u0053");_effb .LE =_cdee .Get ("\u004c\u0045");_effb .IC =_cdee .Get ("\u0049\u0043");_effb .LL =_cdee .Get ("\u004c\u004c");_effb .LLE =_cdee .Get ("\u004c\u004c\u0045");_effb .Cap =_cdee .Get ("\u0043\u0061\u0070");_effb .IT =_cdee .Get ("\u0049\u0054");_effb .LLO =_cdee .Get ("\u004c\u004c\u004f");_effb .CP =_cdee .Get ("\u0043\u0050");_effb .Measure =_cdee .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_effb .CO =_cdee .Get ("\u0043\u004f");return &_effb ,nil ;};func (_edda *pdfFontSimple )updateStandard14Font (){_aabbd ,_dfbf :=_edda .Encoder ().(_ed .SimpleEncoder );if !_dfbf {_dg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_edda .Encoder (),_edda );return ;};_gdecd :=_aabbd .Charcodes ();_edda ._dcgfb =make (map[_ed .CharCode ]float64 ,len (_gdecd ));for _ ,_dgab :=range _gdecd {_adff ,_ :=_aabbd .CharcodeToRune (_dgab );_edda ._dcgfb [_dgab ]=_edda ._dbbb [_adff ].Wx ;};};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _aed .Permissions ;Algorithm EncryptionAlgorithm ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bgdgc =creator };

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dccb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_ageca :=NewPdfOutlineItem ();_ageca .Title =_de .MakeEncodedString (_dccb .Title ,true );_ageca .Dest =_dccb .Dest .ToPdfObject ();var _gdge []*PdfOutlineItem ;var _cgad int64 ;var _adgc *PdfOutlineItem ;for _ ,_fbaea :=range _dccb .Entries {_agecdf ,_addgcb :=_fbaea .ToPdfOutlineItem ();_agecdf .Parent =&_ageca .PdfOutlineTreeNode ;if _adgc !=nil {_adgc .Next =&_agecdf .PdfOutlineTreeNode ;_agecdf .Prev =&_adgc .PdfOutlineTreeNode ;};_gdge =append (_gdge ,_agecdf );_cgad +=_addgcb ;_adgc =_agecdf ;};_cbgd :=len (_gdge );_cgad +=int64 (_cbgd );if _cbgd > 0{_ageca .First =&_gdge [0].PdfOutlineTreeNode ;_ageca .Last =&_gdge [_cbgd -1].PdfOutlineTreeNode ;_ageca .Count =&_cgad ;};return _ageca ,_cgad ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ecc :=NewPdfAction ();_dc :=&PdfActionJavaScript {};_dc .PdfAction =_ecc ;_ecc .SetContext (_dc );return _dc ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_fgabg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_fgabg ._dcgdc =colorspace ;};func (_cafe *PdfAcroForm )filteredFields (_dbfad FieldFilterFunc ,_fecf bool )[]*PdfField {if _cafe ==nil {return nil ;};return _cbgec (_cafe .Fields ,_dbfad ,_fecf );};

// GetXObjectByName gets XObject by name.
func (_gegec *PdfPage )GetXObjectByName (name _de .PdfObjectName )(_de .PdfObject ,bool ){_dcccc ,_cfcgf :=_gegec .Resources .XObject .(*_de .PdfObjectDictionary );if !_cfcgf {return nil ,false ;};if _dffee :=_dcccc .Get (name );_dffee !=nil {return _dffee ,true ;};return nil ,false ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dcdcc PdfModel ;_dddfb _de .PdfObject ;};func _eegag (_abfba *_de .PdfObjectDictionary )(*PdfShadingType7 ,error ){_fegaa :=PdfShadingType7 {};_cfcga :=_abfba .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cfcga ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_adcee ,_fabg :=_cfcga .(*_de .PdfObjectInteger );if !_fabg {_dg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfcga );return nil ,_de .ErrTypeError ;};_fegaa .BitsPerCoordinate =_adcee ;_cfcga =_abfba .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cfcga ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_adcee ,_fabg =_cfcga .(*_de .PdfObjectInteger );if !_fabg {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cfcga );return nil ,_de .ErrTypeError ;};_fegaa .BitsPerComponent =_adcee ;_cfcga =_abfba .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cfcga ==nil {_dg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_adcee ,_fabg =_cfcga .(*_de .PdfObjectInteger );if !_fabg {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cfcga );return nil ,_de .ErrTypeError ;};_fegaa .BitsPerComponent =_adcee ;_cfcga =_abfba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cfcga ==nil {_dg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_eacgg ,_fabg :=_cfcga .(*_de .PdfObjectArray );if !_fabg {_dg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfcga );return nil ,_de .ErrTypeError ;};_fegaa .Decode =_eacgg ;if _bgbga :=_abfba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bgbga !=nil {_fegaa .Function =[]PdfFunction {};if _fgcbg ,_eggf :=_bgbga .(*_de .PdfObjectArray );_eggf {for _ ,_cgfe :=range _fgcbg .Elements (){_gdebf ,_cfagf :=_bbfe (_cgfe );if _cfagf !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfagf );return nil ,_cfagf ;};_fegaa .Function =append (_fegaa .Function ,_gdebf );};}else {_fcae ,_fafd :=_bbfe (_bgbga );if _fafd !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fafd );return nil ,_fafd ;};_fegaa .Function =append (_fegaa .Function ,_fcae );};};return &_fegaa ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;VerticesPerRow *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gfba *Outline )ToPdfObject ()_de .PdfObject {return _gfba .ToPdfOutline ().ToPdfObject ()};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_agec :=&PdfBorderStyle {};return _agec };func _cecd (_fdade *_bdb .ImageBase )(_addgc Image ){_addgc .Width =int64 (_fdade .Width );_addgc .Height =int64 (_fdade .Height );_addgc .BitsPerComponent =int64 (_fdade .BitsPerComponent );_addgc .ColorComponents =_fdade .ColorComponents ;_addgc .Data =_fdade .Data ;_addgc ._fbdfg =_fdade .Decode ;_addgc ._abbgb =_fdade .Alpha ;return _addgc ;};func (_gagec *Image )samplesAddPadding (_caga []uint32 )[]uint32 {_ceeb :=_bdb .BytesPerLine (int (_gagec .Width ),int (_gagec .BitsPerComponent ),_gagec .ColorComponents )*(8/int (_gagec .BitsPerComponent ));_eaggf :=_ceeb *int (_gagec .Height );if len (_caga )==_eaggf {return _caga ;};_bgeaf :=make ([]uint32 ,_eaggf );_cdda :=int (_gagec .Width )*_gagec .ColorComponents ;for _egdcg :=0;_egdcg < int (_gagec .Height );_egdcg ++{_dfdgcg :=_egdcg *int (_gagec .Width );_becag :=_egdcg *_ceeb ;for _aeff :=0;_aeff < _cdda ;_aeff ++{_bgeaf [_becag +_aeff ]=_caga [_dfdgcg +_aeff ];};};return _bgeaf ;};

// MergePageWith appends page content to source Pdf file page content.
func (_caaa *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dgdb :=pageNum -1;var _agdec *PdfPage ;for _efec ,_abed :=range _caaa ._debg {if _efec ==_dgdb {_agdec =_abed ;};};if _agdec ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _agdec ._debgbf !=nil &&_agdec ._debgbf .GetParser ()==_caaa ._effbd ._bffa {_agdec =_agdec .Duplicate ();_caaa ._debg [_dgdb ]=_agdec ;};page =page .Duplicate ();_cgege (page );_bgbc :=_gcgca (_agdec );_ffb :=_gcgca (page );_fgea :=make (map[_de .PdfObjectName ]_de .PdfObjectName );for _fbgf :=range _ffb {if _ ,_gacaf :=_bgbc [_fbgf ];_gacaf {for _gbge :=1;true ;_gbge ++{_bedc :=_de .PdfObjectName (string (_fbgf )+_fc .Itoa (_gbge ));if _ ,_ddae :=_bgbc [_bedc ];!_ddae {_fgea [_fbgf ]=_bedc ;break ;};};};};_geea ,_cedc :=page .GetContentStreams ();if _cedc !=nil {return _cedc ;};_ffbc ,_cedc :=_agdec .GetContentStreams ();if _cedc !=nil {return _cedc ;};for _cbbg ,_abgc :=range _geea {for _egab ,_bbbb :=range _fgea {_abgc =_fe .Replace (_abgc ,"\u002f"+string (_egab ),"\u002f"+string (_bbbb ),-1);};_geea [_cbbg ]=_abgc ;};_ffbc =append (_ffbc ,_geea ...);if _ebbb :=_agdec .SetContentStreams (_ffbc ,_de .NewFlateEncoder ());_ebbb !=nil {return _ebbb ;};for _ ,_afdf :=range page ._ffddd {_agdec ._ffddd =append (_agdec ._ffddd ,_afdf );};if _agdec .Resources ==nil {_agdec .Resources =NewPdfPageResources ();};if page .Resources !=nil {_agdec .Resources .Font =_caaa .mergeResources (_agdec .Resources .Font ,page .Resources .Font ,_fgea );_agdec .Resources .XObject =_caaa .mergeResources (_agdec .Resources .XObject ,page .Resources .XObject ,_fgea );_agdec .Resources .Properties =_caaa .mergeResources (_agdec .Resources .Properties ,page .Resources .Properties ,_fgea );if _agdec .Resources .ProcSet ==nil {_agdec .Resources .ProcSet =page .Resources .ProcSet ;};_agdec .Resources .Shading =_caaa .mergeResources (_agdec .Resources .Shading ,page .Resources .Shading ,_fgea );_agdec .Resources .ExtGState =_caaa .mergeResources (_agdec .Resources .ExtGState ,page .Resources .ExtGState ,_fgea );};_gedaf ,_cedc :=_agdec .GetMediaBox ();if _cedc !=nil {return _cedc ;};_dfdg ,_cedc :=page .GetMediaBox ();if _cedc !=nil {return _cedc ;};var _gegg bool ;if _gedaf .Llx > _dfdg .Llx {_gedaf .Llx =_dfdg .Llx ;_gegg =true ;};if _gedaf .Lly > _dfdg .Lly {_gedaf .Lly =_dfdg .Lly ;_gegg =true ;};if _gedaf .Urx < _dfdg .Urx {_gedaf .Urx =_dfdg .Urx ;_gegg =true ;};if _gedaf .Ury < _dfdg .Ury {_gedaf .Ury =_dfdg .Ury ;_gegg =true ;};if _gegg {_agdec .MediaBox =_gedaf ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dada *PdfShadingPattern )ToPdfObject ()_de .PdfObject {_dada .PdfPattern .ToPdfObject ();_egaad :=_dada .getDict ();if _dada .Shading !=nil {_egaad .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dada .Shading .ToPdfObject ());};if _dada .Matrix !=nil {_egaad .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dada .Matrix );};if _dada .ExtGState !=nil {_egaad .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dada .ExtGState );};return _dada ._dddfb ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _de .PdfObject ;B _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ag *PdfActionSound )ToPdfObject ()_de .PdfObject {_ag .PdfAction .ToPdfObject ();_dcc :=_ag ._daa ;_cde :=_dcc .PdfObject .(*_de .PdfObjectDictionary );_cde .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeSound )));_cde .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ag .Sound );_cde .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ag .Volume );_cde .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ag .Synchronous );_cde .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ag .Repeat );_cde .SetIfNotNil ("\u004d\u0069\u0078",_ag .Mix );return _dcc ;};

// ToInteger convert to an integer format.
func (_ddda *PdfColorDeviceGray )ToInteger (bits int )uint32 {_dgcd :=_ac .Pow (2,float64 (bits ))-1;return uint32 (_dgcd *_ddda .Val ());};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_acgb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aagd ,_cbgb :=_de .GetNumbersAsFloat (objects );if _cbgb !=nil {return nil ,_cbgb ;};return _acgb .ColorFromFloats (_aagd );};func (_dgfe *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func _accg (_cecge *_de .PdfObjectDictionary )(*PdfFieldText ,error ){_fadb :=&PdfFieldText {};_fadb .DA ,_ =_de .GetString (_cecge .Get ("\u0044\u0041"));_fadb .Q ,_ =_de .GetInt (_cecge .Get ("\u0051"));_fadb .DS ,_ =_de .GetString (_cecge .Get ("\u0044\u0053"));_fadb .RV =_cecge .Get ("\u0052\u0056");_fadb .MaxLen ,_ =_de .GetInt (_cecge .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _fadb ,nil ;};var _bbec =_ae .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// GetSubFilter returns SubFilter value or empty string.
func (_ebbab *pdfSignDictionary )GetSubFilter ()string {_egfea :=_ebbab .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _egfea ==nil {return "";};if _gdecf ,_ffaee :=_de .GetNameVal (_egfea );_ffaee {return _gdecf ;};return "";};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ddcda ,_dcag :=_eba .NewStdFontByName (HelveticaName );if !_dcag {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_bfbb :=_cedd (_ddcda );return &PdfFont {_fgef :&_bfbb };};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_befe *PdfShadingType2 )ToPdfObject ()_de .PdfObject {_befe .PdfShading .ToPdfObject ();_dbege ,_gecbd :=_befe .getShadingDict ();if _gecbd !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dbege ==nil {_dg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _befe .Coords !=nil {_dbege .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_befe .Coords );};if _befe .Domain !=nil {_dbege .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_befe .Domain );};if _befe .Function !=nil {if len (_befe .Function )==1{_dbege .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_befe .Function [0].ToPdfObject ());}else {_daga :=_de .MakeArray ();for _ ,_aabad :=range _befe .Function {_daga .Append (_aabad .ToPdfObject ());};_dbege .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daga );};};if _befe .Extend !=nil {_dbege .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_befe .Extend );};return _befe ._bcfa ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gceec *modelManager )GetPrimitiveFromModel (model PdfModel )_de .PdfObject {_baab ,_fbdfa :=_gceec ._cggae [model ];if !_fbdfa {return nil ;};return _baab ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ddad *PdfColorCalGray )GetNumComponents ()int {return 1};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_beda :=PdfColorDeviceRGB {r ,g ,b };return &_beda ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _de .PdfObject ;Q _de .PdfObject ;RC _de .PdfObject ;DS _de .PdfObject ;CL _de .PdfObject ;IT _de .PdfObject ;BE _de .PdfObject ;RD _de .PdfObject ;BS _de .PdfObject ;LE _de .PdfObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dgfdc *PdfPageResources )SetXObjectFormByName (keyName _de .PdfObjectName ,xform *XObjectForm )error {_bcefb :=xform .ToPdfObject ().(*_de .PdfObjectStream );_ffcae :=_dgfdc .SetXObjectByName (keyName ,_bcefb );return _ffcae ;};

// Val returns the color value.
func (_dabc *PdfColorDeviceGray )Val ()float64 {return float64 (*_dabc )};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_ccac *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_ccac .GetNumComponents (){return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbgfa ,_aceeb :=_ccac .TintTransform .Evaluate (vals );if _aceeb !=nil {return nil ,_aceeb ;};_bcdg ,_aceeb :=_ccac .AlternateSpace .ColorFromFloats (_fbgfa );if _aceeb !=nil {return nil ,_aceeb ;};return _bcdg ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ddag *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbecde :=[]float64 {0.0};if _ddag .C0 !=nil {_fbecde =_ddag .C0 ;};_gefg :=[]float64 {1.0};if _ddag .C1 !=nil {_gefg =_ddag .C1 ;};var _egbb []float64 ;for _ggbea :=0;_ggbea < len (_fbecde );_ggbea ++{_gcafa :=_fbecde [_ggbea ]+_ac .Pow (x [0],_ddag .N )*(_gefg [_ggbea ]-_fbecde [_ggbea ]);_egbb =append (_egbb ,_gcafa );};return _egbb ,nil ;};func _fadgg (_effdg *_de .PdfObjectDictionary )(*PdfShadingType2 ,error ){_eefdg :=PdfShadingType2 {};_bgccf :=_effdg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bgccf ==nil {_dg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_bbbc ,_dfffe :=_bgccf .(*_de .PdfObjectArray );if !_dfffe {_dg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgccf );return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbbc .Len ()!=4{_dg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bbbc .Len ());return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_eefdg .Coords =_bbbc ;if _dbdad :=_effdg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dbdad !=nil {_dbdad =_de .TraceToDirectObject (_dbdad );_aeffd ,_bcgce :=_dbdad .(*_de .PdfObjectArray );if !_bcgce {_dg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbdad );return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eefdg .Domain =_aeffd ;};_bgccf =_effdg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bgccf ==nil {_dg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_eefdg .Function =[]PdfFunction {};if _adaec ,_abbae :=_bgccf .(*_de .PdfObjectArray );_abbae {for _ ,_fddbe :=range _adaec .Elements (){_cgabd ,_dcgdcg :=_bbfe (_fddbe );if _dcgdcg !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcgdcg );return nil ,_dcgdcg ;};_eefdg .Function =append (_eefdg .Function ,_cgabd );};}else {_cbeb ,_agfbe :=_bbfe (_bgccf );if _agfbe !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agfbe );return nil ,_agfbe ;};_eefdg .Function =append (_eefdg .Function ,_cbeb );};if _ggfaf :=_effdg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ggfaf !=nil {_ggfaf =_de .TraceToDirectObject (_ggfaf );_agfcd ,_dgabf :=_ggfaf .(*_de .PdfObjectArray );if !_dgabf {_dg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggfaf );return nil ,_de .ErrTypeError ;};if _agfcd .Len ()!=2{_dg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_agfcd .Len ());return nil ,ErrInvalidAttribute ;};_eefdg .Extend =_agfcd ;};return &_eefdg ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_cgca *OutlineItem )Insert (index uint ,item *OutlineItem ){_gece :=uint (len (_cgca .Entries ));if index > _gece {index =_gece ;};_cgca .Entries =append (_cgca .Entries [:index ],append ([]*OutlineItem {item },_cgca .Entries [index :]...)...);};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dcaa :=&PdfAppender {_dad :reader ._ddbac ,Reader :reader ,_gcgc :reader ._bffa ,_cdefb :reader ._cafd };if _dacdf ,_feda :=_dcaa ._dad .Seek (0,_ea .SeekEnd );_feda !=nil {return nil ,_feda ;}else {_dcaa ._ebe =_dacdf ;};if _ ,_ead :=_dcaa ._dad .Seek (0,_ea .SeekStart );_ead !=nil {return nil ,_ead ;};var _ddcc error ;_dcaa ._effbd ,_ddcc =NewPdfReader (_dcaa ._dad );if _ddcc !=nil {return nil ,_ddcc ;};for _ ,_ggad :=range _dcaa .Reader .GetObjectNums (){if _dcaa ._bgbb < _ggad {_dcaa ._bgbb =_ggad ;};};_dcaa ._ecbc =_dcaa ._gcgc .GetXrefTable ();_dcaa ._eage =_dcaa ._gcgc .GetXrefOffset ();_dcaa ._cgge =make (map[_de .PdfObject ]struct{});for _ ,_faae :=range _dcaa ._effbd .PageList {_dcaa ._debg =append (_dcaa ._debg ,_faae );};_dcaa ._dafe =make (map[_de .PdfObject ]int64 );_dcaa ._aebef =make (map[_de .PdfObject ]struct{});_dcaa ._egfe =_dcaa ._effbd .AcroForm ;return _dcaa ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_fefgd *PdfShading )GetContainingPdfObject ()_de .PdfObject {return _fefgd ._bcfa };

// ToPdfObject returns the PDF representation of the colorspace.
func (_cgeae *PdfColorspaceSpecialSeparation )ToPdfObject ()_de .PdfObject {_dagd :=_de .MakeArray (_de .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dagd .Append (_cgeae .ColorantName );_dagd .Append (_cgeae .AlternateSpace .ToPdfObject ());_dagd .Append (_cgeae .TintTransform .ToPdfObject ());if _cgeae ._ecedb !=nil {_cgeae ._ecedb .PdfObject =_dagd ;return _cgeae ._ecedb ;};return _dagd ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_cbec *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _cbec .UnderlyingCS .GetNumComponents ();};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_cagff *PdfFont )BytesToCharcodes (data []byte )[]_ed .CharCode {_dg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _gcegd ,_dbddc :=_cagff ._fgef .(*pdfFontType0 );_dbddc &&_gcegd ._abgb !=nil {if _dcce ,_cbea :=_gcegd .bytesToCharcodes (data );_cbea {return _dcce ;};};_edegb :=make ([]_ed .CharCode ,0,len (data )+len (data )%2);if _cagff .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _ffba :=0;_ffba < len (data );_ffba +=2{_gdce :=uint16 (data [_ffba ])<<8|uint16 (data [_ffba +1]);_edegb =append (_edegb ,_ed .CharCode (_gdce ));};}else {for _ ,_edad :=range data {_edegb =append (_edegb ,_ed .CharCode (_edad ));};};return _edegb ;};func _dggbfb (_abge _de .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bfbbb :=&PdfPageResourcesColorspaces {};if _dcegd ,_cfdcg :=_abge .(*_de .PdfIndirectObject );_cfdcg {_bfbbb ._dbfdc =_dcegd ;_abge =_dcegd .PdfObject ;};_fdac ,_ffcb :=_de .GetDict (_abge );if !_ffcb {return nil ,_eae .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bfbbb .Names =[]string {};_bfbbb .Colorspaces =map[string ]PdfColorspace {};for _ ,_egcb :=range _fdac .Keys (){_ebbca :=_fdac .Get (_egcb );_bfbbb .Names =append (_bfbbb .Names ,string (_egcb ));_fffca ,_decf :=NewPdfColorspaceFromPdfObject (_ebbca );if _decf !=nil {return nil ,_decf ;};_bfbbb .Colorspaces [string (_egcb )]=_fffca ;};return _bfbbb ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dddg _de .PdfObject ;};func (_fg *PdfReader )newPdfActionThreadFromDict (_beg *_de .PdfObjectDictionary )(*PdfActionThread ,error ){_gac ,_ceed :=_gfg (_beg .Get ("\u0046"));if _ceed !=nil {return nil ,_ceed ;};return &PdfActionThread {D :_beg .Get ("\u0044"),B :_beg .Get ("\u0042"),F :_gac },nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bebc :=&PdfFilespec {};_bebc ._dcfb =_de .MakeIndirectObject (_de .MakeDict ());return _bebc ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_ebbe PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _ebbe ._fgef .getFontDescriptor (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdd *PdfActionTrans )ToPdfObject ()_de .PdfObject {_cdd .PdfAction .ToPdfObject ();_dcb :=_cdd ._daa ;_fad :=_dcb .PdfObject .(*_de .PdfObjectDictionary );_fad .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeTrans )));_fad .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cdd .Trans );return _dcb ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_afc :=NewPdfAnnotation ();_fcebd :=&PdfAnnotationStamp {};_fcebd .PdfAnnotation =_afc ;_fcebd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afc .SetContext (_fcebd );return _fcebd ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_cafd :map[_de .PdfObject ]struct{}{},_edgab :_gfdgg (),_bffa :_de .NewParserFromString (txt )};};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_eccf *PdfColorCalRGB )GetNumComponents ()int {return 3};

// GetOutlineTree returns the outline tree.
func (_badee *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _badee ._fgff };

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gf *PdfAction )GetContext ()PdfModel {if _gf ==nil {return nil ;};return _gf ._ge ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_eecd *PdfColorLab )GetNumComponents ()int {return 3};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dfgfb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dfgfb ._dcdcc .(*PdfShadingPattern );};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_geaf *_de .PdfObjectDictionary ;_cbdb *_de .PdfIndirectObject ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fffd *PdfFieldButton )SetType (btype ButtonType ){_abeb :=uint32 (0);if _fffd .Ff !=nil {_abeb =uint32 (*_fffd .Ff );};switch btype {case ButtonTypePush :_abeb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abeb |=FieldFlagRadio .Mask ();};_fffd .Ff =_de .MakeInteger (int64 (_abeb ));};

// ToPdfObject implements interface PdfModel.
func (_ggcf *PdfAnnotationStrikeOut )ToPdfObject ()_de .PdfObject {_ggcf .PdfAnnotation .ToPdfObject ();_gcdg :=_ggcf ._egag ;_aacf :=_gcdg .PdfObject .(*_de .PdfObjectDictionary );_ggcf .PdfAnnotationMarkup .appendToPdfDictionary (_aacf );_aacf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_aacf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ggcf .QuadPoints );return _gcdg ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_geb :=NewPdfAnnotation ();_fgf :=&PdfAnnotationFreeText {};_fgf .PdfAnnotation =_geb ;_fgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_geb .SetContext (_fgf );return _fgf ;};func _eacfd (_eaagg *_de .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cbedf :=PdfShadingType1 {};if _afgc :=_eaagg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_afgc !=nil {_afgc =_de .TraceToDirectObject (_afgc );_adfcc ,_dbdgae :=_afgc .(*_de .PdfObjectArray );if !_dbdgae {_dg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afgc );return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbedf .Domain =_adfcc ;};if _edeeb :=_eaagg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_edeeb !=nil {_edeeb =_de .TraceToDirectObject (_edeeb );_fdcd ,_adeef :=_edeeb .(*_de .PdfObjectArray );if !_adeef {_dg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edeeb );return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbedf .Matrix =_fdcd ;};_gfcgd :=_eaagg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gfcgd ==nil {_dg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cbedf .Function =[]PdfFunction {};if _fadg ,_ebgeg :=_gfcgd .(*_de .PdfObjectArray );_ebgeg {for _ ,_ffaed :=range _fadg .Elements (){_efag ,_gdbgf :=_bbfe (_ffaed );if _gdbgf !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdbgf );return nil ,_gdbgf ;};_cbedf .Function =append (_cbedf .Function ,_efag );};}else {_ceedgg ,_eaga :=_bbfe (_gfcgd );if _eaga !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaga );return nil ,_eaga ;};_cbedf .Function =append (_cbedf .Function ,_ceedgg );};return &_cbedf ,nil ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ToPdfObject implements interface PdfModel.
func (_bbg *PdfActionJavaScript )ToPdfObject ()_de .PdfObject {_bbg .PdfAction .ToPdfObject ();_gge :=_bbg ._daa ;_eed :=_gge .PdfObject .(*_de .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeJavaScript )));_eed .SetIfNotNil ("\u004a\u0053",_bbg .JS );return _gge ;};func (_effddc Image )getBase ()_bdb .ImageBase {return _bdb .NewImageBase (int (_effddc .Width ),int (_effddc .Height ),int (_effddc .BitsPerComponent ),_effddc .ColorComponents ,_effddc .Data ,_effddc ._abbgb ,_effddc ._fbdfg );};

// Y returns the value of the yellow component of the color.
func (_bcce *PdfColorDeviceCMYK )Y ()float64 {return float64 (_bcce [2])};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gffag *BorderStyle )GetPdfName ()string {switch *_gffag {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dade *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dade .baseFields ()._ccbgb !=nil {return _dade .baseFields ()._ccbgb ;};if _faea :=_dade ._fgef .getFontDescriptor ();_faea !=nil {return _faea ;};_dg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dade );return nil ;};

// GetAction returns the PDF action for the annotation link.
func (_aac *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _aac ._gbb !=nil {return _aac ._gbb ,nil ;};if _aac .A ==nil {return nil ,nil ;};if _aac ._gfcb ==nil {return nil ,nil ;};_bcd ,_fadc :=_aac ._gfcb .loadAction (_aac .A );if _fadc !=nil {return nil ,_fadc ;};_aac ._gbb =_bcd ;return _aac ._gbb ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _de .PdfObject ;Dest _de .PdfObject ;H _de .PdfObject ;PA _de .PdfObject ;QuadPoints _de .PdfObject ;BS _de .PdfObject ;_gbb *PdfAction ;_gfcb *PdfReader ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_abbfa *_de .PdfIndirectObject ;_gbadc *_de .PdfIndirectObject ;_dbegc map[_de .PdfObject ]struct{};_fcgg []_de .PdfObject ;_ggafd map[_de .PdfObject ]struct{};_bffga []*_de .PdfIndirectObject ;_gadeea *PdfOutlineTreeNode ;_acdea *_de .PdfObjectDictionary ;_dadb []_de .PdfObject ;_gccea *_de .PdfIndirectObject ;_gdbfd *_ec .Writer ;_ggdb int64 ;_fgbec error ;_fgdca *_de .PdfCrypt ;_aabbg *_de .PdfObjectDictionary ;_ffade *_de .PdfIndirectObject ;_effc *_de .PdfObjectArray ;_dccff int ;_edafd int ;_ggeec *bool ;_gaee map[_de .PdfObject ][]*_de .PdfObjectDictionary ;_eddbc *PdfAcroForm ;_facgg Optimizer ;_cebbbf map[int ]crossReference ;_gecf int64 ;ObjNumOffset int ;_feabe bool ;_dgdcf _de .XrefTable ;_facff int64 ;_cbagc int64 ;_dffdee map[_de .PdfObject ]int64 ;_bdbe map[_de .PdfObject ]struct{};};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bca *PdfColorspaceCalGray )ToPdfObject ()_de .PdfObject {_gbgd :=&_de .PdfObjectArray {};_gbgd .Append (_de .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_eggd :=_de .MakeDict ();if _bca .WhitePoint !=nil {_eggd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_de .MakeArray (_de .MakeFloat (_bca .WhitePoint [0]),_de .MakeFloat (_bca .WhitePoint [1]),_de .MakeFloat (_bca .WhitePoint [2])));}else {_dg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bca .BlackPoint !=nil {_eggd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_de .MakeArray (_de .MakeFloat (_bca .BlackPoint [0]),_de .MakeFloat (_bca .BlackPoint [1]),_de .MakeFloat (_bca .BlackPoint [2])));};_eggd .Set ("\u0047\u0061\u006dm\u0061",_de .MakeFloat (_bca .Gamma ));_gbgd .Append (_eggd );if _bca ._fgdf !=nil {_bca ._fgdf .PdfObject =_gbgd ;return _bca ._fgdf ;};return _gbgd ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _de .PdfObject ;Flags _de .PdfObject ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dbcga *_de .PdfIndirectObject ;};

// HasFontByName checks if has font resource by name.
func (_eebgd *PdfPage )HasFontByName (name _de .PdfObjectName )bool {_dgaa ,_eeaba :=_eebgd .Resources .Font .(*_de .PdfObjectDictionary );if !_eeaba {return false ;};if _bceb :=_dgaa .Get (name );_bceb !=nil {return true ;};return false ;};func _eccgd (_cede *_de .PdfObjectDictionary )(*PdfShadingType5 ,error ){_cabce :=PdfShadingType5 {};_edgeff :=_cede .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _edgeff ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_fdddc ,_adbdc :=_edgeff .(*_de .PdfObjectInteger );if !_adbdc {_dg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edgeff );return nil ,_de .ErrTypeError ;};_cabce .BitsPerCoordinate =_fdddc ;_edgeff =_cede .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _edgeff ==nil {_dg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_fdddc ,_adbdc =_edgeff .(*_de .PdfObjectInteger );if !_adbdc {_dg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_edgeff );return nil ,_de .ErrTypeError ;};_cabce .BitsPerComponent =_fdddc ;_edgeff =_cede .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _edgeff ==nil {_dg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_fdddc ,_adbdc =_edgeff .(*_de .PdfObjectInteger );if !_adbdc {_dg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_edgeff );return nil ,_de .ErrTypeError ;};_cabce .VerticesPerRow =_fdddc ;_edgeff =_cede .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _edgeff ==nil {_dg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dcbcd ,_adbdc :=_edgeff .(*_de .PdfObjectArray );if !_adbdc {_dg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edgeff );return nil ,_de .ErrTypeError ;};_cabce .Decode =_dcbcd ;if _gdbfa :=_cede .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gdbfa !=nil {_cabce .Function =[]PdfFunction {};if _ebgd ,_ebbea :=_gdbfa .(*_de .PdfObjectArray );_ebbea {for _ ,_fadaf :=range _ebgd .Elements (){_bafff ,_bcgd :=_bbfe (_fadaf );if _bcgd !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcgd );return nil ,_bcgd ;};_cabce .Function =append (_cabce .Function ,_bafff );};}else {_bdcgb ,_gbdgae :=_bbfe (_gdbfa );if _gbdgae !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbdgae );return nil ,_gbdgae ;};_cabce .Function =append (_cabce .Function ,_bdcgb );};};return &_cabce ,nil ;};var _ccbga =false ;func (_caff *PdfReader )newPdfAnnotationTextFromDict (_fdb *_de .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gdf :=PdfAnnotationText {};_ddaf ,_ecbe :=_caff .newPdfAnnotationMarkupFromDict (_fdb );if _ecbe !=nil {return nil ,_ecbe ;};_gdf .PdfAnnotationMarkup =_ddaf ;_gdf .Open =_fdb .Get ("\u004f\u0070\u0065\u006e");_gdf .Name =_fdb .Get ("\u004e\u0061\u006d\u0065");_gdf .State =_fdb .Get ("\u0053\u0074\u0061t\u0065");_gdf .StateModel =_fdb .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gdf ,nil ;};func (_egcd *PdfReader )newPdfActionLaunchFromDict (_dec *_de .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gff ,_cgd :=_gfg (_dec .Get ("\u0046"));if _cgd !=nil {return nil ,_cgd ;};return &PdfActionLaunch {Win :_dec .Get ("\u0057\u0069\u006e"),Mac :_dec .Get ("\u004d\u0061\u0063"),Unix :_dec .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_dec .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gff },nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_de .PdfObjectStream ;Data []byte ;_gebc *_de .PdfIndirectObject ;_dcga *_de .PdfObjectStream ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_cdeeg *PdfTilingPattern )ToPdfObject ()_de .PdfObject {_cdeeg .PdfPattern .ToPdfObject ();_fbebb :=_cdeeg .getDict ();if _cdeeg .PaintType !=nil {_fbebb .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_cdeeg .PaintType );};if _cdeeg .TilingType !=nil {_fbebb .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cdeeg .TilingType );};if _cdeeg .BBox !=nil {_fbebb .Set ("\u0042\u0042\u006f\u0078",_cdeeg .BBox .ToPdfObject ());};if _cdeeg .XStep !=nil {_fbebb .Set ("\u0058\u0053\u0074e\u0070",_cdeeg .XStep );};if _cdeeg .YStep !=nil {_fbebb .Set ("\u0059\u0053\u0074e\u0070",_cdeeg .YStep );};if _cdeeg .Resources !=nil {_fbebb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cdeeg .Resources .ToPdfObject ());};if _cdeeg .Matrix !=nil {_fbebb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cdeeg .Matrix );};return _cdeeg ._dddfb ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fgcb :=&PdfFieldSignature {};_fgcb .PdfField =NewPdfField ();_fgcb .PdfField .SetContext (_fgcb );_fgcb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fgcb .PdfAnnotationWidget .SetContext (_fgcb );_fgcb .PdfAnnotationWidget ._egag =_fgcb .PdfField ._bddd ;_fgcb .T =_de .MakeString ("");_fgcb .F =_de .MakeInteger (132);_fgcb .V =signature ;return _fgcb ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_addff *PdfPageResources )GetExtGState (keyName _de .PdfObjectName )(_de .PdfObject ,bool ){if _addff .ExtGState ==nil {return nil ,false ;};_ffeaf ,_aafb :=_de .TraceToDirectObject (_addff .ExtGState ).(*_de .PdfObjectDictionary );if !_aafb {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_addff .ExtGState );return nil ,false ;};if _eadca :=_ffeaf .Get (keyName );_eadca !=nil {return _eadca ,true ;};return nil ,false ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _de .PdfObject ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cagbe *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cagbe .ToPdfOutline ().PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_gfgd *PdfAnnotationUnderline )ToPdfObject ()_de .PdfObject {_gfgd .PdfAnnotation .ToPdfObject ();_ecge :=_gfgd ._egag ;_gae :=_ecge .PdfObject .(*_de .PdfObjectDictionary );_gfgd .PdfAnnotationMarkup .appendToPdfDictionary (_gae );_gae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_gae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gfgd .QuadPoints );return _ecge ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_edffe *PdfWriter )SetPageLabels (pageLabels _de .PdfObject )error {if pageLabels ==nil {return nil ;};_dg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_edffe ._acdea .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _edffe .addObjects (pageLabels );};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_accbe *Image )Resample (targetBitsPerComponent int64 ){if _accbe .BitsPerComponent ==targetBitsPerComponent {return ;};_deffd :=_accbe .GetSamples ();if targetBitsPerComponent < _accbe .BitsPerComponent {_cgbad :=_accbe .BitsPerComponent -targetBitsPerComponent ;for _debgb :=range _deffd {_deffd [_debgb ]>>=uint (_cgbad );};}else if targetBitsPerComponent > _accbe .BitsPerComponent {_fbggb :=targetBitsPerComponent -_accbe .BitsPerComponent ;for _cfaae :=range _deffd {_deffd [_cfaae ]<<=uint (_fbggb );};};_accbe .BitsPerComponent =targetBitsPerComponent ;if _accbe .BitsPerComponent < 8{_accbe .resampleLowBits (_deffd );return ;};_ccggd :=_bdb .BytesPerLine (int (_accbe .Width ),int (_accbe .BitsPerComponent ),_accbe .ColorComponents );_gdbad :=make ([]byte ,_ccggd *int (_accbe .Height ));var (_cgdea ,_fbcaa ,_cgdeaf ,_cgcde int ;_ebgec uint32 ;);for _cgdeaf =0;_cgdeaf < int (_accbe .Height );_cgdeaf ++{_cgdea =_cgdeaf *_ccggd ;_fbcaa =(_cgdeaf +1)*_ccggd -1;_gcfbc :=_dgb .ResampleUint32 (_deffd [_cgdea :_fbcaa ],int (targetBitsPerComponent ),8);for _cgcde ,_ebgec =range _gcfbc {_gdbad [_cgcde +_cgdea ]=byte (_ebgec );};};_accbe .Data =_gdbad ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_cdaea *PdfShading )GetContext ()PdfModel {return _cdaea ._afddf };

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gbdfa []byte ;_cafba []uint32 ;_adbg *_de .PdfObjectStream ;};func _dged (_acbcf *PdfField ,_afcb _de .PdfObject )error {switch _acbcf .GetContext ().(type ){case *PdfFieldText :switch _gefe :=_afcb .(type ){case *_de .PdfObjectName :_aacfe :=_gefe ;_dg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_aacfe .String ());_acbcf .V =_de .MakeEncodedString (_gefe .String (),true );case *_de .PdfObjectString :_acbcf .V =_de .MakeEncodedString (_gefe .String (),true );default:_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gefe ,_gefe );};case *PdfFieldButton :switch _afcb .(type ){case *_de .PdfObjectName :if len (_afcb .String ())> 0{_acbcf .V =_afcb ;_bfgf (_acbcf ,_afcb );};case *_de .PdfObjectString :if len (_afcb .String ())> 0{_acbcf .V =_de .MakeName (_afcb .String ());_bfgf (_acbcf ,_acbcf .V );};default:_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_acbcf .PartialName (),_afcb );_acbcf .V =_afcb ;};case *PdfFieldChoice :switch _afcb .(type ){case *_de .PdfObjectName :if len (_afcb .String ())> 0{_acbcf .V =_de .MakeString (_afcb .String ());_bfgf (_acbcf ,_afcb );};case *_de .PdfObjectString :if len (_afcb .String ())> 0{_acbcf .V =_afcb ;_bfgf (_acbcf ,_de .MakeName (_afcb .String ()));};default:_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_acbcf .PartialName (),_afcb );_acbcf .V =_afcb ;};case *PdfFieldSignature :_dg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_acbcf .PartialName (),_afcb );};return nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gcgab *PdfFieldText )ToPdfObject ()_de .PdfObject {_gcgab .PdfField .ToPdfObject ();_afdga :=_gcgab ._bddd ;_accaf :=_afdga .PdfObject .(*_de .PdfObjectDictionary );_accaf .Set ("\u0046\u0054",_de .MakeName ("\u0054\u0078"));if _gcgab .DA !=nil {_accaf .Set ("\u0044\u0041",_gcgab .DA );};if _gcgab .Q !=nil {_accaf .Set ("\u0051",_gcgab .Q );};if _gcgab .DS !=nil {_accaf .Set ("\u0044\u0053",_gcgab .DS );};if _gcgab .RV !=nil {_accaf .Set ("\u0052\u0056",_gcgab .RV );};if _gcgab .MaxLen !=nil {_accaf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gcgab .MaxLen );};return _afdga ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ea .ReadSeeker )(*PdfFont ,error ){_aeef ,_egagda :=_g .ReadAll (r );if _egagda !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_egagda );return nil ,_egagda ;};_deeg ,_egagda :=_eba .TtfParse (_eff .NewReader (_aeef ));if _egagda !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_egagda );return nil ,_egagda ;};_ecadf :=&pdfCIDFontType2 {fontCommon :fontCommon {_dgbc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_de .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_beff :=make ([]rune ,0,len (_deeg .Chars ));for _beca :=range _deeg .Chars {_beff =append (_beff ,rune (_beca ));};_cb .Slice (_beff ,func (_dgeg ,_dggba int )bool {return _beff [_dgeg ]< _beff [_dggba ]});_dcbe :=1000.0/float64 (_deeg .UnitsPerEm );if len (_deeg .Widths )<=0{return nil ,_eae .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_cgdcb :=_dcbe *float64 (_deeg .Widths [0]);_bfaff :=make (map[rune ]int );for _ ,_gbfgf :=range _beff {_fcaa :=_deeg .Chars [_gbfgf ];_dcfc :=_dcbe *float64 (_deeg .Widths [_fcaa ]);_bfaff [_gbfgf ]=int (_dcfc );};_ecadf ._efeg =_bfaff ;_ecadf .DW =_de .MakeInteger (int64 (_cgdcb ));_gddf :=_dbea (_beff ,_bfaff ,_deeg .Chars );_ecadf .W =_de .MakeIndirectObject (_gddf );_ccee :=_de .MakeDict ();_ccee .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_de .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_ccee .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_de .MakeString ("\u0041\u0064\u006fb\u0065"));_ccee .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_de .MakeInteger (0));_ecadf .CIDSystemInfo =_ccee ;_bbedd :=&PdfFontDescriptor {FontName :_de .MakeName (_deeg .PostScriptName ),Ascent :_de .MakeFloat (_dcbe *float64 (_deeg .TypoAscender )),Descent :_de .MakeFloat (_dcbe *float64 (_deeg .TypoDescender )),CapHeight :_de .MakeFloat (_dcbe *float64 (_deeg .CapHeight )),FontBBox :_de .MakeArrayFromFloats ([]float64 {_dcbe *float64 (_deeg .Xmin ),_dcbe *float64 (_deeg .Ymin ),_dcbe *float64 (_deeg .Xmax ),_dcbe *float64 (_deeg .Ymax )}),ItalicAngle :_de .MakeFloat (float64 (_deeg .ItalicAngle )),MissingWidth :_de .MakeFloat (_dcbe *float64 (_deeg .Widths [0]))};_dcbff ,_egagda :=_de .MakeStream (_aeef ,_de .NewFlateEncoder ());if _egagda !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_egagda );return nil ,_egagda ;};_dcbff .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_de .MakeInteger (int64 (len (_aeef ))));_bbedd .FontFile2 =_dcbff ;if _deeg .Bold {_bbedd .StemV =_de .MakeInteger (120);}else {_bbedd .StemV =_de .MakeInteger (70);};_fbbfg :=_fbabf ;if _deeg .IsFixedPitch {_fbbfg |=_fdabd ;};if _deeg .ItalicAngle !=0{_fbbfg |=_dedc ;};_bbedd .Flags =_de .MakeInteger (int64 (_fbbfg ));_ecadf ._fbaf =_deeg .PostScriptName ;_ecadf ._ccbgb =_bbedd ;_ccced :=pdfFontType0 {fontCommon :fontCommon {_dgbc :"\u0054\u0079\u0070e\u0030",_fbaf :_deeg .PostScriptName },DescendantFont :&PdfFont {_fgef :_ecadf },Encoding :_de .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fcbd :_deeg .NewEncoder ()};if len (_deeg .Chars )> 0{_dcge :=make (map[_bf .CharCode ]rune ,len (_deeg .Chars ));for _afaee ,_ggeef :=range _deeg .Chars {_bdaa :=_bf .CharCode (_ggeef );if _bdabc ,_ggdg :=_dcge [_bdaa ];!_ggdg ||(_ggdg &&_bdabc > _afaee ){_dcge [_bdaa ]=_afaee ;};};_ccced ._cddfb =_bf .NewToUnicodeCMap (_dcge );};_gcfd :=PdfFont {_fgef :&_ccced };return &_gcfd ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bff :=NewPdfAction ();_dda :=&PdfActionMovie {};_dda .PdfAction =_bff ;_bff .SetContext (_dda );return _dda ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ecf :=&PdfAnnotation {};_ecf ._egag =_de .MakeIndirectObject (_de .MakeDict ());return _ecf ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_de .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cddfg *_de .PdfIndirectObject ;};func _aadff ()string {return _fbfba };

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gbefc *PdfPage )ToPdfObject ()_de .PdfObject {_abedb :=_gbefc ._debgbf ;_gbefc .GetPageDict ();return _abedb ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_aggc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_ceeec :=_dgb .NewReader (img .getBase ());_egbe :=_bdb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._abbgb ,img ._fbdfg );_bcddc :=_dgb .NewWriter (_egbe );_cgbe :=_ac .Pow (2,float64 (img .BitsPerComponent ))-1;_fade :=_aggc .GetNumComponents ();_fcag :=make ([]uint32 ,_fade );_eefef :=make ([]float64 ,_fade );for {_abef :=_ceeec .ReadSamples (_fcag );if _abef ==_ea .EOF {break ;}else if _abef !=nil {return img ,_abef ;};for _bdffd :=0;_bdffd < _fade ;_bdffd ++{_fgab :=float64 (_fcag [_bdffd ])/_cgbe ;_eefef [_bdffd ]=_fgab ;};_cdbd ,_abef :=_aggc .TintTransform .Evaluate (_eefef );if _abef !=nil {return img ,_abef ;};for _ ,_dbcb :=range _cdbd {_dbcb =_ac .Min (_ac .Max (0,_dbcb ),1.0);if _abef =_bcddc .WriteSample (uint32 (_dbcb *_cgbe ));_abef !=nil {return img ,_abef ;};};};return _aggc .AlternateSpace .ImageToRGB (_cecd (&_egbe ));};var _cbca ="";

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_caegf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_gacd ,_feadb :=color .(*PdfColorDeviceCMYK );if !_feadb {_dg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_faag :=_gacd .C ();_aeaf :=_gacd .M ();_adca :=_gacd .Y ();_dbce :=_gacd .K ();_faag =_faag *(1-_dbce )+_dbce ;_aeaf =_aeaf *(1-_dbce )+_dbce ;_adca =_adca *(1-_dbce )+_dbce ;_fgaf :=1-_faag ;_cebg :=1-_aeaf ;_ccaa :=1-_adca ;return NewPdfColorDeviceRGB (_fgaf ,_cebg ,_ccaa ),nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ebcd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_de .PdfIndirectObject )*PdfOutlineItem {_fabf :=PdfOutlineItem {};_fabf ._deec =&_fabf ;_fabf .Title =_de .MakeString (title );_eacfg :=_de .MakeArray ();_eacfg .Append (page );_eacfg .Append (_de .MakeName ("\u0046\u0069\u0074"));_fabf .Dest =_eacfg ;return &_fabf ;};func _gafc (_dffgg _de .PdfObject ,_aded *fontCommon )(*_bf .CMap ,error ){_gdbfg ,_ageace :=_de .GetStream (_dffgg );if !_ageace {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dffgg );return nil ,_de .ErrTypeError ;};_dgeaf ,_fgbag :=_de .DecodeStream (_gdbfg );if _fgbag !=nil {return nil ,_fgbag ;};_eedc ,_fgbag :=_bf .LoadCmapFromData (_dgeaf ,!_aded .isCIDFont ());if _fgbag !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_gdbfg .ObjectNumber ,_fgbag );};return _eedc ,_fgbag ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ddba *PdfColorspaceSpecialPattern )ToPdfObject ()_de .PdfObject {if _ddba .UnderlyingCS ==nil {return _de .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cfdg :=_de .MakeArray (_de .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cfdg .Append (_ddba .UnderlyingCS .ToPdfObject ());if _ddba ._gcfc !=nil {_ddba ._gcfc .PdfObject =_cfdg ;return _ddba ._gcfc ;};return _cfdg ;};func _febdc (_edabf *_de .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cafbc :=PdfShadingType3 {};_aabbdf :=_edabf .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _aabbdf ==nil {_dg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_fcee ,_abadf :=_aabbdf .(*_de .PdfObjectArray );if !_abadf {_dg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aabbdf );return nil ,_de .ErrTypeError ;};if _fcee .Len ()!=6{_dg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fcee .Len ());return nil ,ErrInvalidAttribute ;};_cafbc .Coords =_fcee ;if _eecbe :=_edabf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eecbe !=nil {_eecbe =_de .TraceToDirectObject (_eecbe );_debgbfd ,_ccaff :=_eecbe .(*_de .PdfObjectArray );if !_ccaff {_dg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eecbe );return nil ,_de .ErrTypeError ;};_cafbc .Domain =_debgbfd ;};_aabbdf =_edabf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aabbdf ==nil {_dg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cafbc .Function =[]PdfFunction {};if _gggc ,_dedcg :=_aabbdf .(*_de .PdfObjectArray );_dedcg {for _ ,_fbebbg :=range _gggc .Elements (){_afgcd ,_adabd :=_bbfe (_fbebbg );if _adabd !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adabd );return nil ,_adabd ;};_cafbc .Function =append (_cafbc .Function ,_afgcd );};}else {_bcbff ,_ddde :=_bbfe (_aabbdf );if _ddde !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddde );return nil ,_ddde ;};_cafbc .Function =append (_cafbc .Function ,_bcbff );};if _cdfgb :=_edabf .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cdfgb !=nil {_cdfgb =_de .TraceToDirectObject (_cdfgb );_eaada ,_aebaa :=_cdfgb .(*_de .PdfObjectArray );if !_aebaa {_dg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdfgb );return nil ,_de .ErrTypeError ;};if _eaada .Len ()!=2{_dg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eaada .Len ());return nil ,ErrInvalidAttribute ;};_cafbc .Extend =_eaada ;};return &_cafbc ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fdfgg *PdfWriter )AddPage (page *PdfPage )error {_cgege (page );_deee :=page .ToPdfObject ();_dg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_dg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_deee );_bfbg ,_aadg :=_de .GetIndirect (_deee );if !_aadg {return _eae .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_dg .Log .Trace ("\u0025\u0073",_bfbg );_dg .Log .Trace ("\u0025\u0073",_bfbg .PdfObject );_bcbbb ,_aadg :=_de .GetDict (_bfbg .PdfObject );if !_aadg {return _eae .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ddfg ,_aadg :=_de .GetName (_bcbbb .Get ("\u0054\u0079\u0070\u0065"));if !_aadg {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_bcbbb .Get ("\u0054\u0079\u0070\u0065"));};if _ddfg .String ()!="\u0050\u0061\u0067\u0065"{return _eae .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_abcae :=[]_de .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_dceea ,_fgadb :=_de .GetIndirect (_bcbbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_bcbbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fgadb );for _fgadb {_dg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dceea );_eeaec ,_beedd :=_de .GetDict (_dceea .PdfObject );if !_beedd {return _eae .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_gddfg :=range _abcae {_dg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gddfg );if _bcbbb .Get (_gddfg )!=nil {_dg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _dfgaff :=_eeaec .Get (_gddfg );_dfgaff !=nil {_dg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gddfg );_bcbbb .Set (_gddfg ,_dfgaff );};};_dceea ,_fgadb =_de .GetIndirect (_eeaec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eeaec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_bcbbb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdfgg ._gbadc );_bfbg .PdfObject =_bcbbb ;_adgba ,_aadg :=_de .GetDict (_fdfgg ._gbadc .PdfObject );if !_aadg {return _eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_dffaa ,_aadg :=_de .GetArray (_adgba .Get ("\u004b\u0069\u0064\u0073"));if !_aadg {return _eae .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_dffaa .Append (_bfbg );_fdfgg ._dbegc [_bcbbb ]=struct{}{};_cacf ,_aadg :=_de .GetInt (_adgba .Get ("\u0043\u006f\u0075n\u0074"));if !_aadg {return _eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_cacf =*_cacf +1;_fdfgg .addObject (_bfbg );_eeada :=_fdfgg .addObjects (_bcbbb );if _eeada !=nil {return _eeada ;};return nil ;};func _adbae (_babae ,_beeda string )string {if _fe .Contains (_babae ,"\u002b"){_geff :=_fe .Split (_babae ,"\u002b");if len (_geff )==2{_babae =_geff [1];};};return _beeda +"\u002b"+_babae ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ed .SimpleEncoder ,error ){_bfae ,_egfb :=_cbfbf (basefont );if _egfb !=nil {return nil ,nil ,_egfb ;};_dcgc ,_fcfcg :=_bfae .Encoder ().(_ed .SimpleEncoder );if !_fcfcg {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bfae .Encoder ());};_ebcb :=make (map[rune ]_ed .GlyphName );for _edfg :=range alphabet {if _ ,_bfde :=_dcgc .RuneToCharcode (_edfg );!_bfde {_ ,_dfcgc :=_bfae ._dbbb [_edfg ];if !_dfcgc {_dg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_edfg ,_edfg );continue ;};_faff ,_dfcgc :=_ed .RuneToGlyph (_edfg );if !_dfcgc {_dg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_edfg ,_edfg );continue ;};if len (_ebcb )>=255{return nil ,nil ,_eae .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_ebcb [_edfg ]=_faff ;};};var (_bbcf []_ed .CharCode ;_cgfb []_ed .CharCode ;);for _dgad :=_ed .CharCode (1);_dgad <=0xff;_dgad ++{_ddeea ,_agee :=_dcgc .CharcodeToRune (_dgad );if !_agee {_bbcf =append (_bbcf ,_dgad );continue ;};if _ ,_agee =alphabet [_ddeea ];!_agee {_cgfb =append (_cgfb ,_dgad );};};_cgde :=append (_bbcf ,_cgfb ...);if len (_cgde )< len (_ebcb ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ebcb ),len (_cgde ));};_ecebe :=make ([]rune ,0,len (_ebcb ));for _ccgc :=range _ebcb {_ecebe =append (_ecebe ,_ccgc );};_cb .Slice (_ecebe ,func (_fddda ,_fgcd int )bool {return _ecebe [_fddda ]< _ecebe [_fgcd ]});_gagc :=make (map[_ed .CharCode ]_ed .GlyphName ,len (_ecebe ));for _ ,_dadd :=range _ecebe {_bffd :=_cgde [0];_cgde =_cgde [1:];_gagc [_bffd ]=_ebcb [_dadd ];};_dcgc =_ed .ApplyDifferences (_dcgc ,_gagc );_bfae .SetEncoder (_dcgc );return &PdfFont {_fgef :&_bfae },_dcgc ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_daeg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adbe ,_eddb :=_de .GetNumbersAsFloat (objects );if _eddb !=nil {return nil ,_eddb ;};return _daeg .ColorFromFloats (_adbe );};func _fbbbg (_fadf _de .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_fadf .String (),_fadf );_deccb :=NewPdfColorspaceSpecialPattern ();if _fbee ,_fcfc :=_fadf .(*_de .PdfIndirectObject );_fcfc {_deccb ._gcfc =_fbee ;};_fadf =_de .TraceToDirectObject (_fadf );if _dbedb ,_ddcd :=_fadf .(*_de .PdfObjectName );_ddcd {if *_dbedb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _deccb ,nil ;};_bddc ,_efdc :=_fadf .(*_de .PdfObjectArray );if !_efdc {_dg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_fadf );return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bddc .Len ()!=1&&_bddc .Len ()!=2{_dg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bddc );return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_fadf =_bddc .Get (0);if _effe ,_ebbg :=_fadf .(*_de .PdfObjectName );_ebbg {if *_effe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_effe );return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bddc .Len ()> 1{_fadf =_bddc .Get (1);_fadf =_de .TraceToDirectObject (_fadf );_fdee ,_fdf :=NewPdfColorspaceFromPdfObject (_fadf );if _fdf !=nil {return nil ,_fdf ;};_deccb .UnderlyingCS =_fdee ;};_dg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_deccb .UnderlyingCS );return _deccb ,nil ;};func (_age *PdfReader )newPdfActionGotoRFromDict (_bde *_de .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cgg ,_dfba :=_gfg (_bde .Get ("\u0046"));if _dfba !=nil {return nil ,_dfba ;};return &PdfActionGoToR {D :_bde .Get ("\u0044"),NewWindow :_bde .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cgg },nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_bgcf *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_eae .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_bdbc ,_cfff :=_bdb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abbgb ,img ._fbdfg );if _cfff !=nil {return img ,_cfff ;};_ecgea ,_cfff :=_bdb .NRGBAConverter .Convert (_bdbc );if _cfff !=nil {return img ,_cfff ;};_cefb :=_cecd (_ecgea .Base ());_dg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_dg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cefb .Data );_dg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cefb );return _cefb ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_bbfce *pdfCIDFontType0 )ToPdfObject ()_de .PdfObject {return _de .MakeNull ()};func (_feg *PdfReader )newPdfActionHideFromDict (_bfc *_de .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bfc .Get ("\u0054"),H :_bfc .Get ("\u0048")},nil ;};type pdfFontType0 struct{fontCommon ;_cedg *_de .PdfIndirectObject ;_fcbd _ed .TextEncoder ;Encoding _de .PdfObject ;DescendantFont *PdfFont ;_abgb *_bf .CMap ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bdaf *PdfOutlineTreeNode )GetContext ()PdfModel {if _faaf ,_bfcad :=_bdaf ._deec .(*PdfOutline );_bfcad {return _faaf ;};if _befd ,_daeea :=_bdaf ._deec .(*PdfOutlineItem );_daeea {return _befd ;};_dg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};func _dacde (_cbbc string )(map[_ed .CharCode ]_ed .GlyphName ,error ){_gfcf :=_fe .Split (_cbbc ,"\u000a");_dbff :=make (map[_ed .CharCode ]_ed .GlyphName );for _ ,_fggcfb :=range _gfcf {_gdaab :=_dcecb .FindStringSubmatch (_fggcfb );if _gdaab ==nil {continue ;};_gbedb ,_dabg :=_gdaab [1],_gdaab [2];_fbbe ,_ddfac :=_fc .Atoi (_gbedb );if _ddfac !=nil {_dg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fggcfb );return nil ,_de .ErrTypeError ;};_dbff [_ed .CharCode (_fbbe )]=_ed .GlyphName (_dabg );};_dg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_dbff );return _dbff ,nil ;};

// PdfVersion returns version of the PDF file.
func (_cabccg *PdfReader )PdfVersion ()_de .Version {return _cabccg ._bffa .PdfVersion ()};func (_cdcae *PdfWriter )writeObject (_abebe int ,_efga _de .PdfObject ){_dg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_abebe );if _cffff ,_eacc :=_efga .(*_de .PdfIndirectObject );_eacc {_cdcae ._cebbbf [_abebe ]=crossReference {Type :1,Offset :_cdcae ._ggdb ,Generation :_cffff .GenerationNumber };_ebbag :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_abebe );if _eeed ,_ccgbf :=_cffff .PdfObject .(*pdfSignDictionary );_ccgbf {_eeed ._abbag =_cdcae ._ggdb +int64 (len (_ebbag ));};if _cffff .PdfObject ==nil {_dg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_cffff .PdfObject =_de .MakeNull ();};_ebbag +=_cffff .PdfObject .WriteString ();_ebbag +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cdcae .writeString (_ebbag );return ;};if _fgcec ,_efffc :=_efga .(*_de .PdfObjectStream );_efffc {_cdcae ._cebbbf [_abebe ]=crossReference {Type :1,Offset :_cdcae ._ggdb ,Generation :_fgcec .GenerationNumber };_faadf :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_abebe );_faadf +=_fgcec .PdfObjectDictionary .WriteString ();_faadf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cdcae .writeString (_faadf );_cdcae .writeBytes (_fgcec .Stream );_cdcae .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _bafcf ,_fdffb :=_efga .(*_de .PdfObjectStreams );_fdffb {_cdcae ._cebbbf [_abebe ]=crossReference {Type :1,Offset :_cdcae ._ggdb ,Generation :_bafcf .GenerationNumber };_gefec :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_abebe );var _bbgec []string ;var _fgfc string ;var _gfcdg int64 ;for _cfgfcb ,_cggca :=range _bafcf .Elements (){_bdca ,_abdaa :=_cggca .(*_de .PdfIndirectObject );if !_abdaa {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_abebe ,_cggca );continue ;};_aadcc :=_bdca .PdfObject .WriteString ()+"\u0020";_fgfc =_fgfc +_aadcc ;_bbgec =append (_bbgec ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_bdca .ObjectNumber ,_gfcdg ));_cdcae ._cebbbf [int (_bdca .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_abebe ,Index :_cfgfcb };_gfcdg =_gfcdg +int64 (len ([]byte (_aadcc )));};_feccb :=_fe .Join (_bbgec ,"\u0020")+"\u0020";_dgadc :=_de .NewFlateEncoder ();_gdcgf :=_dgadc .MakeStreamDict ();_gdcgf .Set (_de .PdfObjectName ("\u0054\u0079\u0070\u0065"),_de .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_fabfb :=int64 (_bafcf .Len ());_gdcgf .Set (_de .PdfObjectName ("\u004e"),_de .MakeInteger (_fabfb ));_gaegb :=int64 (len (_feccb ));_gdcgf .Set (_de .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_de .MakeInteger (_gaegb ));_bacaf ,_ :=_dgadc .EncodeBytes ([]byte (_feccb +_fgfc ));_dabef :=int64 (len (_bacaf ));_gdcgf .Set (_de .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_de .MakeInteger (_dabef ));_gefec +=_gdcgf .WriteString ();_gefec +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cdcae .writeString (_gefec );_cdcae .writeBytes (_bacaf );_cdcae .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cdcae .writeString (_efga .WriteString ());};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dfcgf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func _dbea (_dadf []rune ,_ffeee map[rune ]int ,_ccde map[rune ]_eba .GID )*_de .PdfObjectArray {_dbeda :=&_de .PdfObjectArray {};for _faba :=0;_faba < len (_dadf );{_bdcde :=_ffeee [_dadf [_faba ]];_gcgdg :=_faba ;for _bggac :=_faba +1;_bggac < len (_dadf );_bggac ++{_ddca :=_ffeee [_dadf [_bggac ]];if _bdcde ==_ddca {_gcgdg =_bggac ;}else {break ;};};_ccacc :=_ccde [_dadf [_faba ]];_fcab :=_ccde [_dadf [_gcgdg ]];_dbeda .Append (_de .MakeInteger (int64 (_ccacc )));_dbeda .Append (_de .MakeInteger (int64 (_fcab )));_dbeda .Append (_de .MakeInteger (int64 (_bdcde )));_faba =_gcgdg +1;};return _dbeda ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fbeed *PdfPageResources )SetXObjectImageByName (keyName _de .PdfObjectName ,ximg *XObjectImage )error {_cgdf :=ximg .ToPdfObject ().(*_de .PdfObjectStream );_cdgfc :=_fbeed .SetXObjectByName (keyName ,_cgdf );return _cdgfc ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_bffc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_eae .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_adfb :=&PdfColorPattern {};_gffg ,_feaa :=objects [len (objects )-1].(*_de .PdfObjectName );if !_feaa {_dg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_adfb .PatternName =*_gffg ;if len (objects )> 1{_bbbbc :=objects [0:len (objects )-1];if _bffc .UnderlyingCS ==nil {_dg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_eae .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_fdgd ,_bbdf :=_bffc .UnderlyingCS .ColorFromPdfObjects (_bbbbc );if _bbdf !=nil {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bbdf );return nil ,_bbdf ;};_adfb .Color =_fdgd ;};return _adfb ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _de .PdfObject ;V _de .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aefc *PdfColorspaceDeviceGray )ToPdfObject ()_de .PdfObject {return _de .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject implements interface PdfModel.
func (_edcb *PdfAnnotationInk )ToPdfObject ()_de .PdfObject {_edcb .PdfAnnotation .ToPdfObject ();_efbbc :=_edcb ._egag ;_ggegd :=_efbbc .PdfObject .(*_de .PdfObjectDictionary );_edcb .PdfAnnotationMarkup .appendToPdfDictionary (_ggegd );_ggegd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0049\u006e\u006b"));_ggegd .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_edcb .InkList );_ggegd .SetIfNotNil ("\u0042\u0053",_edcb .BS );return _efbbc ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ffd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgeaf ,_aefce :=color .(*PdfColorDeviceGray );if !_aefce {_dg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_eae .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cgeaf ),float64 (*_cgeaf ),float64 (*_cgeaf )),nil ;};func (_bbbf *PdfReader )flattenFieldsWithOpts (_degb bool ,_dgca FieldAppearanceGenerator ,_cfac *FieldFlattenOpts )error {if _cfac ==nil {_cfac =&FieldFlattenOpts {};};var _baca bool ;_gdeec :=map[*PdfAnnotation ]bool {};{var _agecd []*PdfField ;_fdaa :=_bbbf .AcroForm ;if _fdaa !=nil {if _cfac .FilterFunc !=nil {_agecd =_fdaa .filteredFields (_cfac .FilterFunc ,true );_baca =_fdaa .Fields !=nil &&len (*_fdaa .Fields )> 0;}else {_agecd =_fdaa .AllFields ();};};for _ ,_dbdgf :=range _agecd {for _ ,_defb :=range _dbdgf .Annotations {_gdeec [_defb .PdfAnnotation ]=_dbdgf .V !=nil ;if _dgca !=nil {_bdeg ,_dfec :=_dgca .GenerateAppearanceDict (_fdaa ,_dbdgf ,_defb );if _dfec !=nil {return _dfec ;};_defb .AP =_bdeg ;};};};};if _degb {for _ ,_bage :=range _bbbf .PageList {_dbcf ,_cefa :=_bage .GetAnnotations ();if _cefa !=nil {return _cefa ;};for _ ,_cfed :=range _dbcf {_gdeec [_cfed ]=true ;};};};for _ ,_ggcfd :=range _bbbf .PageList {var _bgacg []*PdfAnnotation ;if _dgca !=nil {if _fgda :=_dgca .WrapContentStream (_ggcfd );_fgda !=nil {return _fgda ;};};_fbbgb ,_bcbg :=_ggcfd .GetAnnotations ();if _bcbg !=nil {return _bcbg ;};for _ ,_afcd :=range _fbbgb {_bbcd ,_eeda :=_gdeec [_afcd ];if !_eeda {_bgacg =append (_bgacg ,_afcd );continue ;};switch _afcd .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_gbag ,_bfaf ,_adcbb :=_dfad (_afcd );if _adcbb !=nil {if !_bbcd {_dg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_adcbb );continue ;};if _gbag ==nil {continue ;};_cgdcg :=_ggcfd .Resources .GenerateXObjectName ();_ggcfd .Resources .SetXObjectFormByName (_cgdcg ,_gbag );_dgff :=_ac .Min (_bfaf .Llx ,_bfaf .Urx );_cbgef :=_ac .Min (_bfaf .Lly ,_bfaf .Ury );var _fabdg []string ;_fabdg =append (_fabdg ,"\u0071");_fabdg =append (_fabdg ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_dgff ,_cbgef ));_fabdg =append (_fabdg ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cgdcg .String ()));_fabdg =append (_fabdg ,"\u0051");_geddb :=_fe .Join (_fabdg ,"\u000a");_adcbb =_ggcfd .AppendContentStream (_geddb );if _adcbb !=nil {return _adcbb ;};if _gbag .Resources !=nil {_fbcd ,_egfec :=_de .GetDict (_gbag .Resources .Font );if _egfec {for _ ,_aefcd :=range _fbcd .Keys (){if !_ggcfd .Resources .HasFontByName (_aefcd ){_ggcfd .Resources .SetFontByName (_aefcd ,_fbcd .Get (_aefcd ));};};};};};if len (_bgacg )> 0{_ggcfd ._ffddd =_bgacg ;}else {_ggcfd ._ffddd =[]*PdfAnnotation {};};};if !_baca {_bbbf .AcroForm =nil ;};return nil ;};

// Encoder returns the font's text encoder.
func (_daag pdfCIDFontType2 )Encoder ()_ed .TextEncoder {return _daag ._bcfc };

// ToPdfObject implements interface PdfModel.
func (_bdg *PdfAnnotationPrinterMark )ToPdfObject ()_de .PdfObject {_bdg .PdfAnnotation .ToPdfObject ();_cecg :=_bdg ._egag ;_gab :=_cecg .PdfObject .(*_de .PdfObjectDictionary );_gab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_gab .SetIfNotNil ("\u004d\u004e",_bdg .MN );return _cecg ;};func (_fceb *PdfReader )newPdfActionFromIndirectObject (_fef *_de .PdfIndirectObject )(*PdfAction ,error ){_ab ,_dace :=_fef .PdfObject .(*_de .PdfObjectDictionary );if !_dace {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_fceb ._edgab .GetModelFromPrimitive (_ab );model !=nil {_cc ,_cfa :=model .(*PdfAction );if !_cfa {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _cc ,nil ;};_dfd :=&PdfAction {};_dfd ._daa =_fef ;_fceb ._edgab .Register (_ab ,_dfd );if _edff :=_ab .Get ("\u0054\u0079\u0070\u0065");_edff !=nil {_bace ,_efg :=_edff .(*_de .PdfObjectName );if !_efg {_dg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_edff );}else {if *_bace !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bace );};_dfd .Type =_bace ;};};if _efbb :=_ab .Get ("\u004e\u0065\u0078\u0074");_efbb !=nil {_dfd .Next =_efbb ;};if _edfb :=_ab .Get ("\u0053");_edfb !=nil {_dfd .S =_edfb ;};_cdc ,_aeddf :=_dfd .S .(*_de .PdfObjectName );if !_aeddf {_dg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dfd .S );return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dfd .S );};_gcb :=PdfActionType (_cdc .String ());switch _gcb {case ActionTypeGoTo :_bbb ,_def :=_fceb .newPdfActionGotoFromDict (_ab );if _def !=nil {return nil ,_def ;};_bbb .PdfAction =_dfd ;_dfd ._ge =_bbb ;return _dfd ,nil ;case ActionTypeGoToR :_faf ,_bcc :=_fceb .newPdfActionGotoRFromDict (_ab );if _bcc !=nil {return nil ,_bcc ;};_faf .PdfAction =_dfd ;_dfd ._ge =_faf ;return _dfd ,nil ;case ActionTypeGoToE :_fbfd ,_fcd :=_fceb .newPdfActionGotoEFromDict (_ab );if _fcd !=nil {return nil ,_fcd ;};_fbfd .PdfAction =_dfd ;_dfd ._ge =_fbfd ;return _dfd ,nil ;case ActionTypeLaunch :_acec ,_ebag :=_fceb .newPdfActionLaunchFromDict (_ab );if _ebag !=nil {return nil ,_ebag ;};_acec .PdfAction =_dfd ;_dfd ._ge =_acec ;return _dfd ,nil ;case ActionTypeThread :_ccg ,_cee :=_fceb .newPdfActionThreadFromDict (_ab );if _cee !=nil {return nil ,_cee ;};_ccg .PdfAction =_dfd ;_dfd ._ge =_ccg ;return _dfd ,nil ;case ActionTypeURI :_dbd ,_aeca :=_fceb .newPdfActionURIFromDict (_ab );if _aeca !=nil {return nil ,_aeca ;};_dbd .PdfAction =_dfd ;_dfd ._ge =_dbd ;return _dfd ,nil ;case ActionTypeSound :_bgc ,_egd :=_fceb .newPdfActionSoundFromDict (_ab );if _egd !=nil {return nil ,_egd ;};_bgc .PdfAction =_dfd ;_dfd ._ge =_bgc ;return _dfd ,nil ;case ActionTypeMovie :_ccb ,_bab :=_fceb .newPdfActionMovieFromDict (_ab );if _bab !=nil {return nil ,_bab ;};_ccb .PdfAction =_dfd ;_dfd ._ge =_ccb ;return _dfd ,nil ;case ActionTypeHide :_acg ,_eaef :=_fceb .newPdfActionHideFromDict (_ab );if _eaef !=nil {return nil ,_eaef ;};_acg .PdfAction =_dfd ;_dfd ._ge =_acg ;return _dfd ,nil ;case ActionTypeNamed :_ccc ,_bacg :=_fceb .newPdfActionNamedFromDict (_ab );if _bacg !=nil {return nil ,_bacg ;};_ccc .PdfAction =_dfd ;_dfd ._ge =_ccc ;return _dfd ,nil ;case ActionTypeSubmitForm :_cdcf ,_cddc :=_fceb .newPdfActionSubmitFormFromDict (_ab );if _cddc !=nil {return nil ,_cddc ;};_cdcf .PdfAction =_dfd ;_dfd ._ge =_cdcf ;return _dfd ,nil ;case ActionTypeResetForm :_adg ,_efff :=_fceb .newPdfActionResetFormFromDict (_ab );if _efff !=nil {return nil ,_efff ;};_adg .PdfAction =_dfd ;_dfd ._ge =_adg ;return _dfd ,nil ;case ActionTypeImportData :_gbd ,_dgd :=_fceb .newPdfActionImportDataFromDict (_ab );if _dgd !=nil {return nil ,_dgd ;};_gbd .PdfAction =_dfd ;_dfd ._ge =_gbd ;return _dfd ,nil ;case ActionTypeSetOCGState :_cce ,_gdd :=_fceb .newPdfActionSetOCGStateFromDict (_ab );if _gdd !=nil {return nil ,_gdd ;};_cce .PdfAction =_dfd ;_dfd ._ge =_cce ;return _dfd ,nil ;case ActionTypeRendition :_gbfd ,_adb :=_fceb .newPdfActionRenditionFromDict (_ab );if _adb !=nil {return nil ,_adb ;};_gbfd .PdfAction =_dfd ;_dfd ._ge =_gbfd ;return _dfd ,nil ;case ActionTypeTrans :_ggf ,_gbc :=_fceb .newPdfActionTransFromDict (_ab );if _gbc !=nil {return nil ,_gbc ;};_ggf .PdfAction =_dfd ;_dfd ._ge =_ggf ;return _dfd ,nil ;case ActionTypeGoTo3DView :_ecda ,_abg :=_fceb .newPdfActionGoTo3DViewFromDict (_ab );if _abg !=nil {return nil ,_abg ;};_ecda .PdfAction =_dfd ;_dfd ._ge =_ecda ;return _dfd ,nil ;case ActionTypeJavaScript :_gcc ,_eeab :=_fceb .newPdfActionJavaScriptFromDict (_ab );if _eeab !=nil {return nil ,_eeab ;};_gcc .PdfAction =_dfd ;_dfd ._ge =_gcc ;return _dfd ,nil ;};_dg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gcb );return nil ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fdae *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cfabg :=func (_ebcf float64 )float64 {if _ebcf >=6.0/29{return _ebcf *_ebcf *_ebcf ;};return 108.0/841*(_ebcf -4/29);};_dgea :=img ._fbdfg ;if len (_dgea )!=6{_dg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_dgea =_fdae .DecodeArray ();};_agdg :=_dgb .NewReader (img .getBase ());_eaag :=_bdb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._abbgb ,img ._fbdfg );_dgdf :=_dgb .NewWriter (_eaag );_ecff :=_ac .Pow (2,float64 (img .BitsPerComponent ))-1;_ffed :=make ([]uint32 ,3);var (_ffcf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_dcac ,_gbeg ,_bfa float64 ;);for {_ffcf =_agdg .ReadSamples (_ffed );if _ffcf ==_ea .EOF {break ;}else if _ffcf !=nil {return img ,_ffcf ;};Ls =float64 (_ffed [0])/_ecff ;As =float64 (_ffed [1])/_ecff ;Bs =float64 (_ffed [2])/_ecff ;Ls =_bdb .LinearInterpolate (Ls ,0.0,1.0,_dgea [0],_dgea [1]);As =_bdb .LinearInterpolate (As ,0.0,1.0,_dgea [2],_dgea [3]);Bs =_bdb .LinearInterpolate (Bs ,0.0,1.0,_dgea [4],_dgea [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_fdae .WhitePoint [0]*_cfabg (L );Y =_fdae .WhitePoint [1]*_cfabg (M );Z =_fdae .WhitePoint [2]*_cfabg (N );_dcac =3.240479*X +-1.537150*Y +-0.498535*Z ;_gbeg =-0.969256*X +1.875992*Y +0.041556*Z ;_bfa =0.055648*X +-0.204043*Y +1.057311*Z ;_dcac =_ac .Min (_ac .Max (_dcac ,0),1.0);_gbeg =_ac .Min (_ac .Max (_gbeg ,0),1.0);_bfa =_ac .Min (_ac .Max (_bfa ,0),1.0);_ffed [0]=uint32 (_dcac *_ecff );_ffed [1]=uint32 (_gbeg *_ecff );_ffed [2]=uint32 (_bfa *_ecff );if _ffcf =_dgdf .WriteSamples (_ffed );_ffcf !=nil {return img ,_ffcf ;};};return _cecd (&_eaag ),nil ;};func (_agc *PdfReader )newPdfAnnotationHighlightFromDict (_defc *_de .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_bdba :=PdfAnnotationHighlight {};_ceecc ,_eac :=_agc .newPdfAnnotationMarkupFromDict (_defc );if _eac !=nil {return nil ,_eac ;};_bdba .PdfAnnotationMarkup =_ceecc ;_bdba .QuadPoints =_defc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bdba ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_aebee *PdfColorspaceCalRGB )ToPdfObject ()_de .PdfObject {_ddabg :=&_de .PdfObjectArray {};_ddabg .Append (_de .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_acga :=_de .MakeDict ();if _aebee .WhitePoint !=nil {_fdcb :=_de .MakeArray (_de .MakeFloat (_aebee .WhitePoint [0]),_de .MakeFloat (_aebee .WhitePoint [1]),_de .MakeFloat (_aebee .WhitePoint [2]));_acga .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fdcb );}else {_dg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _aebee .BlackPoint !=nil {_cbcf :=_de .MakeArray (_de .MakeFloat (_aebee .BlackPoint [0]),_de .MakeFloat (_aebee .BlackPoint [1]),_de .MakeFloat (_aebee .BlackPoint [2]));_acga .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cbcf );};if _aebee .Gamma !=nil {_dbbcd :=_de .MakeArray (_de .MakeFloat (_aebee .Gamma [0]),_de .MakeFloat (_aebee .Gamma [1]),_de .MakeFloat (_aebee .Gamma [2]));_acga .Set ("\u0047\u0061\u006dm\u0061",_dbbcd );};if _aebee .Matrix !=nil {_ccdg :=_de .MakeArray (_de .MakeFloat (_aebee .Matrix [0]),_de .MakeFloat (_aebee .Matrix [1]),_de .MakeFloat (_aebee .Matrix [2]),_de .MakeFloat (_aebee .Matrix [3]),_de .MakeFloat (_aebee .Matrix [4]),_de .MakeFloat (_aebee .Matrix [5]),_de .MakeFloat (_aebee .Matrix [6]),_de .MakeFloat (_aebee .Matrix [7]),_de .MakeFloat (_aebee .Matrix [8]));_acga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ccdg );};_ddabg .Append (_acga );if _aebee ._cbdb !=nil {_aebee ._cbdb .PdfObject =_ddabg ;return _aebee ._cbdb ;};return _ddabg ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _de .PdfObjectArray )(*PdfRectangle ,error ){_edbab :=PdfRectangle {};if arr .Len ()!=4{return nil ,_eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _dgfcg error ;_edbab .Llx ,_dgfcg =_de .GetNumberAsFloat (arr .Get (0));if _dgfcg !=nil {return nil ,_dgfcg ;};_edbab .Lly ,_dgfcg =_de .GetNumberAsFloat (arr .Get (1));if _dgfcg !=nil {return nil ,_dgfcg ;};_edbab .Urx ,_dgfcg =_de .GetNumberAsFloat (arr .Get (2));if _dgfcg !=nil {return nil ,_dgfcg ;};_edbab .Ury ,_dgfcg =_de .GetNumberAsFloat (arr .Get (3));if _dgfcg !=nil {return nil ,_dgfcg ;};return &_edbab ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// SetVersion sets the PDF version of the output file.
func (_acdcb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_acdcb ._dccff =majorVersion ;_acdcb ._edafd =minorVersion ;};

// Height returns the height of `rect`.
func (_bfgbb *PdfRectangle )Height ()float64 {return _ac .Abs (_bfgbb .Ury -_bfgbb .Lly )};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_deec interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bfef *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _de .GetNumberAsFloat (_bfef .CapHeight );};

// SetBorderWidth sets the style's border width.
func (_deg *PdfBorderStyle )SetBorderWidth (width float64 ){_deg .W =&width };

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_gfeb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbe ,_ffde :=_de .GetNumbersAsFloat (objects );if _ffde !=nil {return nil ,_ffde ;};return _gfeb .ColorFromFloats (_gbe );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fccb pdfCIDFontType2 )GetCharMetrics (code _ed .CharCode )(_eba .CharMetrics ,bool ){if _dfbd ,_dbga :=_fccb ._dddac [code ];_dbga {return _eba .CharMetrics {Wx :float64 (_dfbd )},true ;};_dfca :=rune (code );_gbfag ,_afce :=_fccb ._efeg [_dfca ];if !_afce {_gbfag =int (_fccb ._dbdga );};return _eba .CharMetrics {Wx :float64 (_gbfag )},true ;};func (_debf *PdfReader )newPdfAnnotationPolygonFromDict (_ddb *_de .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dbca :=PdfAnnotationPolygon {};_fbd ,_cadb :=_debf .newPdfAnnotationMarkupFromDict (_ddb );if _cadb !=nil {return nil ,_cadb ;};_dbca .PdfAnnotationMarkup =_fbd ;_dbca .Vertices =_ddb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dbca .LE =_ddb .Get ("\u004c\u0045");_dbca .BS =_ddb .Get ("\u0042\u0053");_dbca .IC =_ddb .Get ("\u0049\u0043");_dbca .BE =_ddb .Get ("\u0042\u0045");_dbca .IT =_ddb .Get ("\u0049\u0054");_dbca .Measure =_ddb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dbca ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_de .PdfObjectArray ;Domain *_de .PdfObjectArray ;Function []PdfFunction ;Extend *_de .PdfObjectArray ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fccdg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=_fccdg .GetNumComponents (){return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efde ,_eaab :=_de .GetNumbersAsFloat (objects );if _eaab !=nil {return nil ,_eaab ;};return _fccdg .ColorFromFloats (_efde );};func _fgfdd (_bbgdc *_de .PdfObjectDictionary )(*PdfTilingPattern ,error ){_eabc :=&PdfTilingPattern {};_fccf :=_bbgdc .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _fccf ==nil {_dg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdegfb ,_bafdb :=_fccf .(*_de .PdfObjectInteger );if !_bafdb {_dg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fccf );return nil ,_de .ErrTypeError ;};_eabc .PaintType =_cdegfb ;_fccf =_bbgdc .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fccf ==nil {_dg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_daeb ,_bafdb :=_fccf .(*_de .PdfObjectInteger );if !_bafdb {_dg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fccf );return nil ,_de .ErrTypeError ;};_eabc .TilingType =_daeb ;_fccf =_bbgdc .Get ("\u0042\u0042\u006f\u0078");if _fccf ==nil {_dg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fccf =_de .TraceToDirectObject (_fccf );_fddbf ,_bafdb :=_fccf .(*_de .PdfObjectArray );if !_bafdb {_dg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fccf );return nil ,_de .ErrTypeError ;};_gaea ,_agefb :=NewPdfRectangle (*_fddbf );if _agefb !=nil {_dg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_agefb );return nil ,_agefb ;};_eabc .BBox =_gaea ;_fccf =_bbgdc .Get ("\u0058\u0053\u0074e\u0070");if _fccf ==nil {_dg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_edce ,_agefb :=_de .GetNumberAsFloat (_fccf );if _agefb !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_edce );return nil ,_agefb ;};_eabc .XStep =_de .MakeFloat (_edce );_fccf =_bbgdc .Get ("\u0059\u0053\u0074e\u0070");if _fccf ==nil {_dg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_abae ,_agefb :=_de .GetNumberAsFloat (_fccf );if _agefb !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_abae );return nil ,_agefb ;};_eabc .YStep =_de .MakeFloat (_abae );_fccf =_bbgdc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fccf ==nil {_dg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bbgdc ,_bafdb =_de .TraceToDirectObject (_fccf ).(*_de .PdfObjectDictionary );if !_bafdb {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fccf );};_cfcde ,_agefb :=NewPdfPageResourcesFromDict (_bbgdc );if _agefb !=nil {return nil ,_agefb ;};_eabc .Resources =_cfcde ;if _fbfc :=_bbgdc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fbfc !=nil {_effg ,_feabg :=_fbfc .(*_de .PdfObjectArray );if !_feabg {_dg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbfc );return nil ,_de .ErrTypeError ;};_eabc .Matrix =_effg ;};return _eabc ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _de .PdfObject ;MK _de .PdfObject ;A _de .PdfObject ;AA _de .PdfObject ;};func (_bcga *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_feagc *PdfAppender )replaceObject (_adag ,_bbaf _de .PdfObject ){switch _cfgb :=_adag .(type ){case *_de .PdfIndirectObject :_feagc ._dafe [_bbaf ]=_cfgb .ObjectNumber ;case *_de .PdfObjectStream :_feagc ._dafe [_bbaf ]=_cfgb .ObjectNumber ;};};func (_gdfe *PdfWriter )seekByName (_dfegf _de .PdfObject ,_ebbfe []string ,_dgef string )([]_de .PdfObject ,error ){_dg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_dfegf );var _edbe []_de .PdfObject ;if _cegfbd ,_bccac :=_dfegf .(*_de .PdfIndirectObject );_bccac {return _gdfe .seekByName (_cegfbd .PdfObject ,_ebbfe ,_dgef );};if _fccbf ,_edeea :=_dfegf .(*_de .PdfObjectStream );_edeea {return _gdfe .seekByName (_fccbf .PdfObjectDictionary ,_ebbfe ,_dgef );};if _cedag ,_eabcd :=_dfegf .(*_de .PdfObjectDictionary );_eabcd {_dg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_beeb :=range _cedag .Keys (){_cgbea :=_cedag .Get (_beeb );if string (_beeb )==_dgef {_edbe =append (_edbe ,_cgbea );};for _ ,_abdee :=range _ebbfe {if string (_beeb )==_abdee {_dg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_abdee );_ebaea ,_cbgbbe :=_gdfe .seekByName (_cgbea ,_ebbfe ,_dgef );if _cbgbbe !=nil {return _edbe ,_cbgbbe ;};for _ ,_ccbcb :=range _ebaea {_edbe =append (_edbe ,_ccbcb );};break ;};};};return _edbe ,nil ;};return _edbe ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_cdgg :=NewPdfAnnotation ();_afaa :=&PdfAnnotation3D {};_afaa .PdfAnnotation =_cdgg ;_cdgg .SetContext (_afaa );return _afaa ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_abde *PdfReader )traverseObjectData (_baeg _de .PdfObject )error {return _de .ResolveReferencesDeep (_baeg ,_abde ._cafd );};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_edd *PdfReader )newPdfActionNamedFromDict (_dbg *_de .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dbg .Get ("\u004e")},nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dgacc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dgacc ._dcdcc .(*PdfTilingPattern );};

// IsTiling specifies if the pattern is a tiling pattern.
func (_ffcbc *PdfPattern )IsTiling ()bool {return _ffcbc .PatternType ==1};

// ToPdfObject implements interface PdfModel.
func (_cbg *PdfActionSubmitForm )ToPdfObject ()_de .PdfObject {_cbg .PdfAction .ToPdfObject ();_geg :=_cbg ._daa ;_gda :=_geg .PdfObject .(*_de .PdfObjectDictionary );_gda .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeSubmitForm )));if _cbg .F !=nil {_gda .Set ("\u0046",_cbg .F .ToPdfObject ());};_gda .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cbg .Fields );_gda .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cbg .Flags );return _geg ;};func _eegb (_aebb _de .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_bgced :=NewPdfColorspaceSpecialIndexed ();if _adagc ,_bded :=_aebb .(*_de .PdfIndirectObject );_bded {_bgced ._cced =_adagc ;};_aebb =_de .TraceToDirectObject (_aebb );_gcgdc ,_gebcf :=_aebb .(*_de .PdfObjectArray );if !_gebcf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcgdc .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_aebb =_gcgdc .Get (0);_ccce ,_gebcf :=_aebb .(*_de .PdfObjectName );if !_gebcf {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_ccce !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_aebb =_gcgdc .Get (1);_geacb ,_ebagaa :=DetermineColorspaceNameFromPdfObject (_aebb );if _geacb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_geacb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_geacb );return nil ,_cagg ;};_aeaa ,_ebagaa :=NewPdfColorspaceFromPdfObject (_aebb );if _ebagaa !=nil {return nil ,_ebagaa ;};_bgced .Base =_aeaa ;_aebb =_gcgdc .Get (2);_gfeg ,_ebagaa :=_de .GetNumberAsInt64 (_aebb );if _ebagaa !=nil {return nil ,_ebagaa ;};if _gfeg > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_bgced .HiVal =int (_gfeg );_aebb =_gcgdc .Get (3);_bgced .Lookup =_aebb ;_aebb =_de .TraceToDirectObject (_aebb );var _dgdde []byte ;if _abbe ,_dgdbb :=_aebb .(*_de .PdfObjectString );_dgdbb {_dgdde =_abbe .Bytes ();_dg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_dgdde );}else if _dcab ,_fafc :=_aebb .(*_de .PdfObjectStream );_fafc {_dg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_aebb .String ());_dg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dcab .Stream ),_dcab .Stream );_cega ,_bgfe :=_de .DecodeStream (_dcab );if _bgfe !=nil {return nil ,_bgfe ;};_dg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cega ),_cega );_dgdde =_cega ;}else {_dg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_aebb );return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_dgdde )< _bgced .Base .GetNumComponents ()*(_bgced .HiVal +1){_dg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_dg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_dgdde ),_bgced .Base .GetNumComponents (),_bgced .HiVal );}else {_dgdde =_dgdde [:_bgced .Base .GetNumComponents ()*(_bgced .HiVal +1)];};_bgced ._ecae =_dgdde ;return _bgced ,nil ;};

// SetFlag sets the flag for the field.
func (_egeg *PdfField )SetFlag (flag FieldFlag ){_egeg .Ff =_de .MakeInteger (int64 (flag ))};

// SetForms sets the Acroform for a PDF file.
func (_bbade *PdfWriter )SetForms (form *PdfAcroForm )error {_bbade ._eddbc =form ;return nil };var _ pdfFont =(*pdfCIDFontType0 )(nil );type pdfSignDictionary struct{*_de .PdfObjectDictionary ;_bfdbd *SignatureHandler ;_beccc *PdfSignature ;_abbag int64 ;_gbbff int ;_eaaaa int ;_becge int ;_bgdc int ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_accf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func _bgdg (_aaff *_de .PdfIndirectObject )(*PdfOutline ,error ){_aagfe ,_aaad :=_aaff .PdfObject .(*_de .PdfObjectDictionary );if !_aaad {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfegg :=NewPdfOutline ();if _abfe :=_aagfe .Get ("\u0054\u0079\u0070\u0065");_abfe !=nil {_bdggf ,_cgeg :=_abfe .(*_de .PdfObjectName );if _cgeg {if *_bdggf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bdggf );};};};if _bedg :=_aagfe .Get ("\u0043\u006f\u0075n\u0074");_bedg !=nil {_gadaa ,_gbefg :=_de .GetNumberAsInt64 (_bedg );if _gbefg !=nil {return nil ,_gbefg ;};_gfegg .Count =&_gadaa ;};return _gfegg ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_dac :=NewPdfAction ();_egc :=&PdfActionSubmitForm {};_egc .PdfAction =_dac ;_dac .SetContext (_egc );return _egc ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_gcffe *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_gcac *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _fbbgbc (_cgbed []byte )[]byte {const _fffegg =52845;const _eaead =22719;_gbdad :=55665;for _ ,_dbgg :=range _cgbed [:4]{_gbdad =(int (_dbgg )+_gbdad )*_fffegg +_eaead ;};_gbbg :=make ([]byte ,len (_cgbed )-4);for _cdfc ,_adabe :=range _cgbed [4:]{_gbbg [_cdfc ]=byte (int (_adabe )^_gbdad >>8);_gbdad =(int (_adabe )+_gbdad )*_fffegg +_eaead ;};return _gbbg ;};func _gfg (_ege _de .PdfObject )(*PdfFilespec ,error ){if _ege ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ege );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dbaeb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_de .StreamEncoder ,error ){_gefce ,_aggcg :=_dbaeb ._dddfb .(*_de .PdfObjectStream );if !_aggcg {_dg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbaeb ._dddfb );return nil ,nil ,_de .ErrTypeError ;};_cabcc ,_dcdec :=_de .DecodeStream (_gefce );if _dcdec !=nil {_dg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dcdec );return nil ,nil ,_dcdec ;};_edae ,_dcdec :=_de .NewEncoderFromStream (_gefce );if _dcdec !=nil {_dg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dcdec );return nil ,nil ,_dcdec ;};return _cabcc ,_edae ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_accad *PdfAppender )Write (w _ea .Writer )error {if _accad ._cdba {return _eae .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_bbe :=NewPdfWriter ();_eead ,_fgbe :=_de .GetDict (_bbe ._gbadc );if !_fgbe {return _eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_cgea ,_fgbe :=_eead .Get ("\u004b\u0069\u0064\u0073").(*_de .PdfObjectArray );if !_fgbe {return _eae .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_dedf ,_fgbe :=_eead .Get ("\u0043\u006f\u0075n\u0074").(*_de .PdfObjectInteger );if !_fgbe {return _eae .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_dfdgc :=_accad ._effbd ._bffa ;_cefe :=_dfdgc .GetTrailer ();if _cefe ==nil {return _eae .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dbge ,_fgbe :=_de .GetIndirect (_cefe .Get ("\u0052\u006f\u006f\u0074"));if !_fgbe {return _eae .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_adac ,_fgbe :=_de .GetDict (_dbge );if !_fgbe {_dg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dbge ,*_cefe );return _eae .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_ggcgc :=range _adac .Keys (){if _bbe ._acdea .Get (_ggcgc )==nil {_cagb :=_adac .Get (_ggcgc );_bbe ._acdea .Set (_ggcgc ,_cagb );};};if _accad ._egfe !=nil {_bbe ._acdea .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_accad ._egfe .ToPdfObject ());_accad .updateObjectsDeep (_accad ._egfe .ToPdfObject (),nil );};_accad .addNewObject (_bbe ._gccea );_accad .addNewObject (_bbe ._abbfa );_gggfb :=false ;if len (_accad ._effbd .PageList )!=len (_accad ._debg ){_gggfb =true ;}else {for _gfbe :=range _accad ._effbd .PageList {switch {case _accad ._debg [_gfbe ]==_accad ._effbd .PageList [_gfbe ]:case _accad ._debg [_gfbe ]==_accad .Reader .PageList [_gfbe ]:default:_gggfb =true ;};if _gggfb {break ;};};};if _gggfb {_accad .updateObjectsDeep (_bbe ._gbadc ,nil );}else {_accad ._aebef [_bbe ._gbadc ]=struct{}{};};_bbe ._gbadc .ObjectNumber =_accad .Reader ._badf .ObjectNumber ;_accad ._dafe [_bbe ._gbadc ]=_accad .Reader ._badf .ObjectNumber ;_gdba :=[]_de .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_dffdc :=range _accad ._debg {_dcecg :=_dffdc .ToPdfObject ();*_dedf =*_dedf +1;if _fde ,_beec :=_dcecg .(*_de .PdfIndirectObject );_beec &&_fde .GetParser ()==_accad ._effbd ._bffa {_cgea .Append (&_fde .PdfObjectReference );continue ;};if _bdbf ,_eface :=_de .GetDict (_dcecg );_eface {_ggffb ,_adgd :=_bdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_de .PdfIndirectObject );for _adgd {_dg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ggffb );_cdeab ,_fbbb :=_ggffb .PdfObject .(*_de .PdfObjectDictionary );if !_fbbb {return _eae .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_caeg :=range _gdba {_dg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_caeg );if _bdbf .Get (_caeg )!=nil {_dg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _cfaa :=_cdeab .Get (_caeg );_cfaa !=nil {_dg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_caeg );_bdbf .Set (_caeg ,_cfaa );};};_ggffb ,_adgd =_cdeab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_de .PdfIndirectObject );_dg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cdeab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bdbf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbe ._gbadc );};_accad .updateObjectsDeep (_dcecg ,nil );_cgea .Append (_dcecg );};if _ ,_cgaa :=_accad ._dad .Seek (0,_ea .SeekStart );_cgaa !=nil {return _cgaa ;};_fggd :=make (map[SignatureHandler ]_ea .Writer );_cdca :=_de .MakeArray ();for _ ,_bcdd :=range _accad ._ccda {if _bcba ,_bafd :=_de .GetIndirect (_bcdd );_bafd {if _edeg ,_cdbbd :=_bcba .PdfObject .(*pdfSignDictionary );_cdbbd {_bacbe :=*_edeg ._bfdbd ;var _ffg error ;_fggd [_bacbe ],_ffg =_bacbe .NewDigest (_edeg ._beccc );if _ffg !=nil {return _ffg ;};_cdca .Append (_de .MakeInteger (0xfffff),_de .MakeInteger (0xfffff));};};};if _cdca .Len ()> 0{_cdca .Append (_de .MakeInteger (0xfffff),_de .MakeInteger (0xfffff));};for _ ,_gdbf :=range _accad ._ccda {if _bafa ,_eabg :=_de .GetIndirect (_gdbf );_eabg {if _abgf ,_agfg :=_bafa .PdfObject .(*pdfSignDictionary );_agfg {_abgf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cdca );};};};_aecab :=len (_fggd )> 0;var _fcegc _ea .Reader =_accad ._dad ;if _aecab {_efcb :=make ([]_ea .Writer ,0,len (_fggd ));for _ ,_fffe :=range _fggd {_efcb =append (_efcb ,_fffe );};_fcegc =_ea .TeeReader (_accad ._dad ,_ea .MultiWriter (_efcb ...));};_dcbc ,_degc :=_ea .Copy (w ,_fcegc );if _degc !=nil {return _degc ;};if len (_accad ._ccda )==0{return nil ;};_bbe ._gecf =_dcbc ;_bbe .ObjNumOffset =_accad ._bgbb ;_bbe ._feabe =true ;_bbe ._dgdcf =_accad ._ecbc ;_bbe ._facff =_accad ._eage ;_bbe ._cbagc =_accad ._ebe ;_bbe ._edafd =_accad ._effbd .PdfVersion ().Minor ;_bbe ._dffdee =_accad ._dafe ;_aggb :=_accad ._gcgc .GetXrefType ();if _aggb !=nil {_dafc :=*_aggb ==_de .XrefTypeObjectStream ;_bbe ._ggeec =&_dafc ;};_bbe ._ggafd =map[_de .PdfObject ]struct{}{};_bbe ._fcgg =[]_de .PdfObject {};for _ ,_dadc :=range _accad ._ccda {if _ ,_fead :=_accad ._aebef [_dadc ];_fead {continue ;};_bbe .addObject (_dadc );};_decg :=w ;if _aecab {_decg =_eff .NewBuffer (nil );};if _dgf :=_bbe .Write (_decg );_dgf !=nil {return _dgf ;};if _aecab {_cedcg :=_decg .(*_eff .Buffer ).Bytes ();_adde :=_de .MakeArray ();var _bgafd []*pdfSignDictionary ;var _aga int64 ;for _ ,_gec :=range _bbe ._fcgg {if _facg ,_fabc :=_de .GetIndirect (_gec );_fabc {if _gdcg ,_bce :=_facg .PdfObject .(*pdfSignDictionary );_bce {_bgafd =append (_bgafd ,_gdcg );_bccb :=_gdcg ._abbag +int64 (_gdcg ._gbbff );_adde .Append (_de .MakeInteger (_aga ),_de .MakeInteger (_bccb -_aga ));_aga =_gdcg ._abbag +int64 (_gdcg ._eaaaa );};};};_adde .Append (_de .MakeInteger (_aga ),_de .MakeInteger (_dcbc +int64 (len (_cedcg ))-_aga ));_facb :=[]byte (_adde .WriteString ());for _ ,_gabc :=range _bgafd {_gcgd :=int (_gabc ._abbag -_dcbc );for _dceb :=_gabc ._becge ;_dceb < _gabc ._bgdc ;_dceb ++{_cedcg [_gcgd +_dceb ]=' ';};_afdc :=_cedcg [_gcgd +_gabc ._becge :_gcgd +_gabc ._bgdc ];copy (_afdc ,_facb );};var _fda int ;for _ ,_cade :=range _bgafd {_abaa :=int (_cade ._abbag -_dcbc );_dgg :=_cedcg [_fda :_abaa +_cade ._gbbff ];_dgag :=*_cade ._bfdbd ;_fggd [_dgag ].Write (_dgg );_fda =_abaa +_cade ._eaaaa ;};for _ ,_agfa :=range _bgafd {_babd :=_cedcg [_fda :];_bbeg :=*_agfa ._bfdbd ;_fggd [_bbeg ].Write (_babd );};for _ ,_eebgb :=range _bgafd {_afga :=int (_eebgb ._abbag -_dcbc );_dcdd :=*_eebgb ._bfdbd ;_eeaf :=_fggd [_dcdd ];if _ddfa :=_dcdd .Sign (_eebgb ._beccc ,_eeaf );_ddfa !=nil {return _ddfa ;};_eebgb ._beccc .ByteRange =_adde ;_cdce :=[]byte (_eebgb ._beccc .Contents .WriteString ());for _cafa :=_eebgb ._becge ;_cafa < _eebgb ._bgdc ;_cafa ++{_cedcg [_afga +_cafa ]=' ';};for _ecbcb :=_eebgb ._gbbff ;_ecbcb < _eebgb ._eaaaa ;_ecbcb ++{_cedcg [_afga +_ecbcb ]=' ';};_bcdda :=_cedcg [_afga +_eebgb ._becge :_afga +_eebgb ._bgdc ];copy (_bcdda ,_facb );_bcdda =_cedcg [_afga +_eebgb ._gbbff :_afga +_eebgb ._eaaaa ];copy (_bcdda ,_cdce );};_eedd :=_eff .NewBuffer (_cedcg );_ ,_degc =_ea .Copy (w ,_eedd );if _degc !=nil {return _degc ;};};_accad ._cdba =true ;return nil ;};func (_dee *PdfReader )newPdfAnnotationCircleFromDict (_faa *_de .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_accbb :=PdfAnnotationCircle {};_gdg ,_cfab :=_dee .newPdfAnnotationMarkupFromDict (_faa );if _cfab !=nil {return nil ,_cfab ;};_accbb .PdfAnnotationMarkup =_gdg ;_accbb .BS =_faa .Get ("\u0042\u0053");_accbb .IC =_faa .Get ("\u0049\u0043");_accbb .BE =_faa .Get ("\u0042\u0045");_accbb .RD =_faa .Get ("\u0052\u0044");return &_accbb ,nil ;};

// Items returns all children outline items.
func (_effed *OutlineItem )Items ()[]*OutlineItem {return _effed .Entries };

// Items returns all children outline items.
func (_baaba *Outline )Items ()[]*OutlineItem {return _baaba .Entries };func (_dbdfb *PdfFunctionType0 )processSamples ()error {_eceba :=_dgb .ResampleBytes (_dbdfb ._gbdfa ,_dbdfb .BitsPerSample );_dbdfb ._cafba =_eceba ;return nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bdac *PdfField )SetContext (ctx PdfModel ){_bdac ._cbee =ctx };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_de .PdfObjectArray ;ExtGState _de .PdfObject ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_gggdc *PdfSignature )bool ;Validate (_dbeeb *PdfSignature ,_edbd Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_dfeg *PdfSignature )(Hasher ,error );Sign (_dadgdf *PdfSignature ,_aggff Hasher )error ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bbac *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bbac .UnderlyingCS ==nil {return nil ,_eae .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _bbac .UnderlyingCS .ColorFromFloats (vals );};func (_debee *pdfCIDFontType2 )baseFields ()*fontCommon {return &_debee .fontCommon };func (_gceg *PdfReader )newPdfAnnotationProjectionFromDict (_egac *_de .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_adgf :=&PdfAnnotationProjection {};_affa ,_ddc :=_gceg .newPdfAnnotationMarkupFromDict (_egac );if _ddc !=nil {return nil ,_ddc ;};_adgf .PdfAnnotationMarkup =_affa ;return _adgf ,nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_de .PdfObjectStream )(*XObjectForm ,error ){_bfdee :=&XObjectForm {};_bfdee ._bdda =stream ;_cgcab :=*(stream .PdfObjectDictionary );_fegga ,_fceda :=_de .NewEncoderFromStream (stream );if _fceda !=nil {return nil ,_fceda ;};_bfdee .Filter =_fegga ;if _ggcd :=_cgcab .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ggcd !=nil {_dbcd ,_aagdd :=_ggcd .(*_de .PdfObjectName );if !_aagdd {return nil ,_eae .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_dbcd !="\u0046\u006f\u0072\u006d"{_dg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_eae .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _bgffg :=_cgcab .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bgffg !=nil {_bfdee .FormType =_bgffg ;};if _fdgef :=_cgcab .Get ("\u0042\u0042\u006f\u0078");_fdgef !=nil {_bfdee .BBox =_fdgef ;};if _acbfd :=_cgcab .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_acbfd !=nil {_bfdee .Matrix =_acbfd ;};if _cffc :=_cgcab .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cffc !=nil {_cffc =_de .TraceToDirectObject (_cffc );_fcad ,_aagc :=_cffc .(*_de .PdfObjectDictionary );if !_aagc {_dg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_de .ErrTypeError ;};_ffbcbc ,_adbcf :=NewPdfPageResourcesFromDict (_fcad );if _adbcf !=nil {_dg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_adbcf ;};_bfdee .Resources =_ffbcbc ;_dg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_bfdee .Resources );};_bfdee .Group =_cgcab .Get ("\u0047\u0072\u006fu\u0070");_bfdee .Ref =_cgcab .Get ("\u0052\u0065\u0066");_bfdee .MetaData =_cgcab .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_bfdee .PieceInfo =_cgcab .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bfdee .LastModified =_cgcab .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bfdee .StructParent =_cgcab .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bfdee .StructParents =_cgcab .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_bfdee .OPI =_cgcab .Get ("\u004f\u0050\u0049");_bfdee .OC =_cgcab .Get ("\u004f\u0043");_bfdee .Name =_cgcab .Get ("\u004e\u0061\u006d\u0065");_bfdee .Stream =stream .Stream ;return _bfdee ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_egbf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_eae .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cffb :=vals [0];_dgcb :=[]float64 {_cffb };_gbed ,_affcg :=_egbf .TintTransform .Evaluate (_dgcb );if _affcg !=nil {_dg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_affcg );_dg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_egbf .TintTransform );return nil ,_affcg ;};_dg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_gbed ,_egbf .AlternateSpace );_bafc ,_affcg :=_egbf .AlternateSpace .ColorFromFloats (_gbed );if _affcg !=nil {_dg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_affcg );return nil ,_affcg ;};return _bafc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cebb *PdfAnnotationStamp )ToPdfObject ()_de .PdfObject {_cebb .PdfAnnotation .ToPdfObject ();_ffec :=_cebb ._egag ;_eacd :=_ffec .PdfObject .(*_de .PdfObjectDictionary );_cebb .PdfAnnotationMarkup .appendToPdfDictionary (_eacd );_eacd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0074\u0061m\u0070"));_eacd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cebb .Name );return _ffec ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bfga :=NewPdfAnnotation ();_bec :=&PdfAnnotationHighlight {};_bec .PdfAnnotation =_bfga ;_bec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfga .SetContext (_bec );return _bec ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_beccf *PdfPattern )ToPdfObject ()_de .PdfObject {_fbef :=_beccf .getDict ();_fbef .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fbef .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (_beccf .PatternType ));return _beccf ._dddfb ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_afab :=PdfColorLab {l ,a ,b };return &_afab };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afdgf *PdfShadingType1 )ToPdfObject ()_de .PdfObject {_afdgf .PdfShading .ToPdfObject ();_gefcf ,_gcgdcg :=_afdgf .getShadingDict ();if _gcgdcg !=nil {_dg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _afdgf .Domain !=nil {_gefcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_afdgf .Domain );};if _afdgf .Matrix !=nil {_gefcf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afdgf .Matrix );};if _afdgf .Function !=nil {if len (_afdgf .Function )==1{_gefcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afdgf .Function [0].ToPdfObject ());}else {_gbgga :=_de .MakeArray ();for _ ,_abfbg :=range _afdgf .Function {_gbgga .Append (_abfbg .ToPdfObject ());};_gefcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbgga );};};return _afdgf ._bcfa ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_agbe :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_agbe .N =N ;return _agbe ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dbed *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _eae .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_dfgf :=field .V ;if _dfgf ==nil {return _eae .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_fbcb :=pageNum -1;if _fbcb < 0||_fbcb > len (_dbed ._debg )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ebcg :=_dbed .Reader .PageList [_fbcb ];field .P =_ebcg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_de .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_ebcg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _dbed ._egfe ==_dbed ._effbd .AcroForm {_dbed ._egfe =_dbed .Reader .AcroForm ;};_febe :=_dbed ._egfe ;if _febe ==nil {_febe =NewPdfAcroForm ();};_febe .SigFlags =_de .MakeInteger (3);_abc :=append (_febe .AllFields (),field .PdfField );_febe .Fields =&_abc ;_dbed .ReplaceAcroForm (_febe );_dbed .UpdatePage (_ebcg );_dbed ._debg [_fbcb ]=_ebcg ;return nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_eeeca *PdfTilingPattern )SetContentStream (content []byte ,encoder _de .StreamEncoder )error {_dfead ,_ebef :=_eeeca ._dddfb .(*_de .PdfObjectStream );if !_ebef {_dg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eeeca ._dddfb );return _de .ErrTypeError ;};if encoder ==nil {encoder =_de .NewRawEncoder ();};_defad :=_dfead .PdfObjectDictionary ;_gcdgf :=encoder .MakeStreamDict ();_defad .Merge (_gcdgf );_effdc ,_ggace :=encoder .EncodeBytes (content );if _ggace !=nil {return _ggace ;};_defad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_effdc ))));_dfead .Stream =[]byte (_effdc );return nil ;};

// B returns the value of the B component of the color.
func (_abff *PdfColorCalRGB )B ()float64 {return float64 (_abff [1])};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfActionGoTo )ToPdfObject ()_de .PdfObject {_fcg .PdfAction .ToPdfObject ();_gfa :=_fcg ._daa ;_gbac :=_gfa .PdfObject .(*_de .PdfObjectDictionary );_gbac .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoTo )));_gbac .SetIfNotNil ("\u0044",_fcg .D );return _gfa ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cgdg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_eae .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_dbaf ,_geag :=_bdb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._abbgb ,img ._fbdfg );if _geag !=nil {return img ,_geag ;};_gffd ,_geag :=_bdb .GrayConverter .Convert (_dbaf );if _geag !=nil {return img ,_geag ;};return _cecd (_gffd .Base ()),nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_abbgb []byte ;_dfbbe bool ;_fbdfg []float64 ;};