//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_de "bufio";_ed "bytes";_b "crypto/md5";_g "crypto/rand";_ec "crypto/sha1";_c "crypto/x509";_dg "encoding/binary";_eg "encoding/hex";_cfe "errors";_e "fmt";_cd "github.com/unidoc/pkcs7";_ca "github.com/unidoc/unipdf/v3/common";_ebc "github.com/unidoc/unipdf/v3/core";
_eac "github.com/unidoc/unipdf/v3/core/security";_ee "github.com/unidoc/unipdf/v3/core/security/crypt";_ag "github.com/unidoc/unipdf/v3/internal/cmap";_cfef "github.com/unidoc/unipdf/v3/internal/imageutil";_aa "github.com/unidoc/unipdf/v3/internal/license";
_ba "github.com/unidoc/unipdf/v3/internal/sampling";_cgf "github.com/unidoc/unipdf/v3/internal/textencoding";_eb "github.com/unidoc/unipdf/v3/internal/timeutils";_ad "github.com/unidoc/unipdf/v3/internal/transform";_dde "github.com/unidoc/unipdf/v3/model/internal/docutil";
_ge "github.com/unidoc/unipdf/v3/model/internal/fonts";_ggb "github.com/unidoc/unipdf/v3/model/mdp";_gd "github.com/unidoc/unipdf/v3/model/sigutil";_gf "github.com/unidoc/unipdf/v3/ps";_ddf "github.com/unidoc/unitype";_dbc "golang.org/x/xerrors";_fd "hash";
_ecg "image";_bc "image/color";_ "image/gif";_ "image/png";_eag "io";_dec "io/ioutil";_bcd "math";_fa "math/rand";_db "os";_cf "regexp";_cfa "sort";_cb "strconv";_ea "strings";_f "sync";_a "time";_dd "unicode";_ga "unicode/utf8";);

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_ecfbca *PdfPageResources )GetColorspaceByName (keyName _ebc .PdfObjectName )(PdfColorspace ,bool ){_cfaba ,_egbbd :=_ecfbca .GetColorspaces ();if _egbbd !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egbbd );
return nil ,false ;};if _cfaba ==nil {return nil ,false ;};_ebgaf ,_abdee :=_cfaba .Colorspaces [string (keyName )];if !_abdee {return nil ,false ;};return _ebgaf ,true ;};func _babcf (_dgde *_ebc .PdfObjectDictionary )(*PdfShadingType2 ,error ){_eefef :=PdfShadingType2 {};
_adbga :=_dgde .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _adbga ==nil {_ca .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aggbe ,_gcada :=_adbga .(*_ebc .PdfObjectArray );if !_gcada {_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adbga );
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aggbe .Len ()!=4{_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aggbe .Len ());
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_eefef .Coords =_aggbe ;if _bdef :=_dgde .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bdef !=nil {_bdef =_ebc .TraceToDirectObject (_bdef );
_baff ,_edfee :=_bdef .(*_ebc .PdfObjectArray );if !_edfee {_ca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdef );return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_eefef .Domain =_baff ;};_adbga =_dgde .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _adbga ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_eefef .Function =[]PdfFunction {};if _gdgba ,_fcdba :=_adbga .(*_ebc .PdfObjectArray );_fcdba {for _ ,_ffegc :=range _gdgba .Elements (){_fdaab ,_efdff :=_adda (_ffegc );if _efdff !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efdff );
return nil ,_efdff ;};_eefef .Function =append (_eefef .Function ,_fdaab );};}else {_eeedd ,_bfbgd :=_adda (_adbga );if _bfbgd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfbgd );
return nil ,_bfbgd ;};_eefef .Function =append (_eefef .Function ,_eeedd );};if _dbbd :=_dgde .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dbbd !=nil {_dbbd =_ebc .TraceToDirectObject (_dbbd );_cdaa ,_daedb :=_dbbd .(*_ebc .PdfObjectArray );if !_daedb {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbbd );
return nil ,_ebc .ErrTypeError ;};if _cdaa .Len ()!=2{_ca .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cdaa .Len ());return nil ,ErrInvalidAttribute ;
};_eefef .Extend =_cdaa ;};return &_eefef ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fbdee *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _ebc .GetNumberAsFloat (_fbdee .CapHeight );};

// GetDescent returns the Descent of the font `descriptor`.
func (_gdad *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _ebc .GetNumberAsFloat (_gdad .Descent );};func (_aaf *PdfReader )newPdfActionHideFromDict (_gaaf *_ebc .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gaaf .Get ("\u0054"),H :_gaaf .Get ("\u0048")},nil ;
};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// Encoder returns the font's text encoder.
func (_bdbeaf pdfCIDFontType2 )Encoder ()_cgf .TextEncoder {return _bdbeaf ._dgef };func (_cfcd *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_cfcd ._aeafa .Major ,_cfcd ._aeafa .Minor );};

// IsValid checks if the given pdf output intent type is valid.
func (_bccg PdfOutputIntentType )IsValid ()bool {return _bccg >=PdfOutputIntentTypeA1 &&_bccg <=PdfOutputIntentTypeX ;};

// ToPdfObject implements interface PdfModel.
func (_gaad *PdfAnnotationProjection )ToPdfObject ()_ebc .PdfObject {_gaad .PdfAnnotation .ToPdfObject ();_aggb :=_gaad ._daf ;_deae :=_aggb .PdfObject .(*_ebc .PdfObjectDictionary );_gaad .PdfAnnotationMarkup .appendToPdfDictionary (_deae );return _aggb ;
};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_cdb :=NewPdfAction ();_gdg :=&PdfActionGoToE {};_gdg .PdfAction =_cdb ;_cdb .SetContext (_gdg );return _gdg ;};

// Write writes out the PDF.
func (_caeg *PdfWriter )Write (writer _eag .Writer )error {_ca .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_fadcd :=_caeg .checkLicense ();if _fadcd !=nil {return _fadcd ;};if _fadcd =_caeg .writeOutlines ();_fadcd !=nil {return _fadcd ;};if _fadcd =_caeg .writeAcroFormFields ();
_fadcd !=nil {return _fadcd ;};_caeg .checkPendingObjects ();if _fadcd =_caeg .writeOutputIntents ();_fadcd !=nil {return _fadcd ;};_caeg .setCatalogVersion ();_caeg .copyObjects ();if _fadcd =_caeg .optimize ();_fadcd !=nil {return _fadcd ;};if _fadcd =_caeg .optimizeDocument ();
_fadcd !=nil {return _fadcd ;};var _baffe _fd .Hash ;if _caeg ._ceadg {_baffe =_b .New ();writer =_eag .MultiWriter (_baffe ,writer );};_caeg .setWriter (writer );_gbdbc :=_caeg .checkCrossReferenceStream ();_dfabd ,_gbdbc :=_caeg .mapObjectStreams (_gbdbc );
_caeg .adjustXRefAffectedVersion (_gbdbc );_caeg .writeDocumentVersion ();_caeg .updateObjectNumbers ();_caeg .writeObjects ();if _fadcd =_caeg .writeObjectsInStreams (_dfabd );_fadcd !=nil {return _fadcd ;};_ecgdda :=_caeg ._facg ;var _bbgfbe int ;for _agegb :=range _caeg ._bdgf {if _agegb > _bbgfbe {_bbgfbe =_agegb ;
};};if _caeg ._ceadg {if _fadcd =_caeg .setHashIDs (_baffe );_fadcd !=nil {return _fadcd ;};};if _gbdbc {if _fadcd =_caeg .writeXRefStreams (_bbgfbe ,_ecgdda );_fadcd !=nil {return _fadcd ;};}else {_caeg .writeTrailer (_bbgfbe );};_caeg .makeOffSetReference (_ecgdda );
if _fadcd =_caeg .flushWriter ();_fadcd !=nil {return _fadcd ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_geedd *PdfShadingType3 )ToPdfObject ()_ebc .PdfObject {_geedd .PdfShading .ToPdfObject ();_cbeefc ,_adef :=_geedd .getShadingDict ();if _adef !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _geedd .Coords !=nil {_cbeefc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_geedd .Coords );};if _geedd .Domain !=nil {_cbeefc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_geedd .Domain );};if _geedd .Function !=nil {if len (_geedd .Function )==1{_cbeefc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_geedd .Function [0].ToPdfObject ());
}else {_aagce :=_ebc .MakeArray ();for _ ,_bbfd :=range _geedd .Function {_aagce .Append (_bbfd .ToPdfObject ());};_cbeefc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aagce );};};if _geedd .Extend !=nil {_cbeefc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_geedd .Extend );
};return _geedd ._abfcbf ;};var _eaeba =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_gbaa *PdfReader )newPdfActionURIFromDict (_aaeg *_ebc .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_aaeg .Get ("\u0055\u0052\u0049"),IsMap :_aaeg .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_acfb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_fddeb ,_ ,_bfcg :=_acfb .CharcodesToUnicodeWithStats (_acfb .BytesToCharcodes (data ));_gbebf :=_cgf .ExpandLigatures (_fddeb );return _gbebf ,_ga .RuneCountInString (_gbebf ),_bfcg ;
};func (_dddb *DSS )generateHashMaps ()error {_abef ,_cfbbd :=_dddb .generateHashMap (_dddb .Certs );if _cfbbd !=nil {return _cfbbd ;};_fcgf ,_cfbbd :=_dddb .generateHashMap (_dddb .OCSPs );if _cfbbd !=nil {return _cfbbd ;};_dcda ,_cfbbd :=_dddb .generateHashMap (_dddb .CRLs );
if _cfbbd !=nil {return _cfbbd ;};_dddb ._abfb =_abef ;_dddb ._gdcg =_fcgf ;_dddb ._fced =_dcda ;return nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dfgb *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbde :=vals [0];if _fbde < 0.0||_fbde > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbde );
return nil ,ErrColorOutOfRange ;};_gccg :=vals [1];if _gccg < 0.0||_gccg > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gccg );return nil ,ErrColorOutOfRange ;
};_efcf :=vals [2];if _efcf < 0.0||_efcf > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_efcf );return nil ,ErrColorOutOfRange ;};_fcgc :=vals [3];
if _fcgc < 0.0||_fcgc > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcgc );return nil ,ErrColorOutOfRange ;};_gea :=NewPdfColorDeviceCMYK (_fbde ,_gccg ,_efcf ,_fcgc );
return _gea ,nil ;};func (_baeca *PdfAppender )mergeResources (_cdfe ,_cgae _ebc .PdfObject ,_dfdgg map[_ebc .PdfObjectName ]_ebc .PdfObjectName )_ebc .PdfObject {if _cgae ==nil &&_cdfe ==nil {return nil ;};if _cgae ==nil {return _cdfe ;};_cbaa ,_dace :=_ebc .GetDict (_cgae );
if !_dace {return _cdfe ;};if _cdfe ==nil {_aacg :=_ebc .MakeDict ();_aacg .Merge (_cbaa );return _cgae ;};_fcge ,_dace :=_ebc .GetDict (_cdfe );if !_dace {_ca .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_fcge =_ebc .MakeDict ();};for _ ,_agedd :=range _cbaa .Keys (){if _adbbb ,_baeg :=_dfdgg [_agedd ];_baeg {_fcge .Set (_adbbb ,_cbaa .Get (_agedd ));}else {_fcge .Set (_agedd ,_cbaa .Get (_agedd ));};};return _fcge ;};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_cacag :=&PdfShadingPatternType3 {};_cacag .Matrix =_ebc .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_cacag .PdfPattern =&PdfPattern {};_cacag .PdfPattern .PatternType =int64 (*_ebc .MakeInteger (2));
_cacag .PdfPattern ._adgca =_cacag ;_cacag .PdfPattern ._bcgg =_ebc .MakeIndirectObject (_ebc .MakeDict ());return _cacag ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_adba *PdfPageResourcesColorspaces )Set (key _ebc .PdfObjectName ,val PdfColorspace ){if _ ,_degdg :=_adba .Colorspaces [string (key )];!_degdg {_adba .Names =append (_adba .Names ,string (key ));};_adba .Colorspaces [string (key )]=val ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_acec *PdfPage )GetRotate ()(int64 ,error ){if _acec .Rotate !=nil {return *_acec .Rotate ,nil ;};_gacbd :=_acec .Parent ;for _gacbd !=nil {_aggdd ,_fabcf :=_ebc .GetDict (_gacbd );if !_fabcf {return 0,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _acfg :=_aggdd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_acfg !=nil {_fdgde ,_gfgfd :=_ebc .GetInt (_acfg );if !_gfgfd {return 0,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _fdgde !=nil {return int64 (*_fdgde ),nil ;
};return 0,_cfe .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_gacbd =_aggdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_cfe .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_ebegf *PdfAnnotationInk )ToPdfObject ()_ebc .PdfObject {_ebegf .PdfAnnotation .ToPdfObject ();_cfga :=_ebegf ._daf ;_cba :=_cfga .PdfObject .(*_ebc .PdfObjectDictionary );_ebegf .PdfAnnotationMarkup .appendToPdfDictionary (_cba );_cba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0049\u006e\u006b"));
_cba .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ebegf .InkList );_cba .SetIfNotNil ("\u0042\u0053",_ebegf .BS );return _cfga ;};

// GetBorderWidth returns the border style's width.
func (_gabb *PdfBorderStyle )GetBorderWidth ()float64 {if _gabb .W ==nil {return 1;};return *_gabb .W ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_abgc :=NewPdfAnnotation ();_ega :=&PdfAnnotationTrapNet {};_ega .PdfAnnotation =_abgc ;_abgc .SetContext (_ega );return _ega ;};

// Initialize initializes the PdfSignature.
func (_gcgab *PdfSignature )Initialize ()error {if _gcgab .Handler ==nil {return _cfe .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gcgab .Handler .InitSignature (_gcgab );};func (_dfbb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func _ccfce (_ebefe *XObjectForm )(*PdfRectangle ,error ){if _aaacd ,_gbed :=_ebefe .BBox .(*_ebc .PdfObjectArray );
_gbed {_eafgc ,_aadd :=NewPdfRectangle (*_aaacd );if _aadd !=nil {return nil ,_aadd ;};if _cedg ,_cgggc :=_ebefe .Matrix .(*_ebc .PdfObjectArray );_cgggc {_eeee ,_ddbd :=_cedg .ToFloat64Array ();if _ddbd !=nil {return nil ,_ddbd ;};_eeeef :=_ad .IdentityMatrix ();
if len (_eeee )==6{_eeeef =_ad .NewMatrix (_eeee [0],_eeee [1],_eeee [2],_eeee [3],_eeee [4],_eeee [5]);};_eafgc .Transform (_eeeef );return _eafgc ,nil ;};};return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_beec *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _ebc .PdfObject ;BS _ebc .PdfObject ;LE _ebc .PdfObject ;IC _ebc .PdfObject ;LL _ebc .PdfObject ;LLE _ebc .PdfObject ;Cap _ebc .PdfObject ;IT _ebc .PdfObject ;LLO _ebc .PdfObject ;CP _ebc .PdfObject ;
Measure _ebc .PdfObject ;CO _ebc .PdfObject ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_gbfca *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _ggede []*PdfOutlineTreeNode ;var _eafce []string ;var _gcddc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gcddc =func (_bcebf *PdfOutlineTreeNode ,_agdbc *[]*PdfOutlineTreeNode ,_ccgcfg *[]string ,_adfe int ){if _bcebf ==nil {return ;
};if _bcebf ._degdbf ==nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_affff ,_afbdb :=_bcebf ._degdbf .(*PdfOutlineItem );if _afbdb {*_agdbc =append (*_agdbc ,&_affff .PdfOutlineTreeNode );
_affd :=_ea .Repeat ("\u0020",_adfe *2)+_affff .Title .Decoded ();*_ccgcfg =append (*_ccgcfg ,_affd );};if _bcebf .First !=nil {_eeeag :=_ea .Repeat ("\u0020",_adfe *2)+"\u002b";*_ccgcfg =append (*_ccgcfg ,_eeeag );_gcddc (_bcebf .First ,_agdbc ,_ccgcfg ,_adfe +1);
};if _afbdb &&_affff .Next !=nil {_gcddc (_affff .Next ,_agdbc ,_ccgcfg ,_adfe );};};_gcddc (_gbfca ._dbdfgg ,&_ggede ,&_eafce ,0);return _ggede ,_eafce ,nil ;};func (_ddbdc *PdfWriter )addObject (_eafa _ebc .PdfObject )bool {_fcgcg :=_ddbdc .hasObject (_eafa );
if !_fcgcg {_bcegb :=_ebc .ResolveReferencesDeep (_eafa ,_ddbdc ._cebef );if _bcegb !=nil {_ca .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bcegb );};_ddbdc ._gfbe =append (_ddbdc ._gfbe ,_eafa );
_ddbdc ._bbfbd [_eafa ]=struct{}{};return true ;};return false ;};

// SetLocation sets the `Location` field of the signature.
func (_bbfgd *PdfSignature )SetLocation (location string ){_bbfgd .Location =_ebc .MakeString (location )};

// ToPdfObject implements interface PdfModel.
func (_edef *PdfAnnotationSound )ToPdfObject ()_ebc .PdfObject {_edef .PdfAnnotation .ToPdfObject ();_efeg :=_edef ._daf ;_bgee :=_efeg .PdfObject .(*_ebc .PdfObjectDictionary );_edef .PdfAnnotationMarkup .appendToPdfDictionary (_bgee );_bgee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0053\u006f\u0075n\u0064"));
_bgee .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_edef .Sound );_bgee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edef .Name );return _efeg ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_egfba *_dde .Document )error ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_aabad *PdfPageResources )GetContainingPdfObject ()_ebc .PdfObject {return _aabad ._bgbaf };func (_fcd *PdfReader )newPdfAnnotationRedactFromDict (_cec *_ebc .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bgff :=PdfAnnotationRedact {};_bbcb ,_cgcc :=_fcd .newPdfAnnotationMarkupFromDict (_cec );
if _cgcc !=nil {return nil ,_cgcc ;};_bgff .PdfAnnotationMarkup =_bbcb ;_bgff .QuadPoints =_cec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bgff .IC =_cec .Get ("\u0049\u0043");_bgff .RO =_cec .Get ("\u0052\u004f");_bgff .OverlayText =_cec .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_bgff .Repeat =_cec .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bgff .DA =_cec .Get ("\u0044\u0041");_bgff .Q =_cec .Get ("\u0051");return &_bgff ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func _ffge (_agac _ebc .PdfObject )(*PdfColorspaceCalRGB ,error ){_gdea :=NewPdfColorspaceCalRGB ();if _efcfg ,_fgee :=_agac .(*_ebc .PdfIndirectObject );
_fgee {_gdea ._fbfe =_efcfg ;};_agac =_ebc .TraceToDirectObject (_agac );_fagb ,_badd :=_agac .(*_ebc .PdfObjectArray );if !_badd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fagb .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_agac =_ebc .TraceToDirectObject (_fagb .Get (0));_cef ,_badd :=_agac .(*_ebc .PdfObjectName );if !_badd {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_cef !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_agac =_ebc .TraceToDirectObject (_fagb .Get (1));
_ebfg ,_badd :=_agac .(*_ebc .PdfObjectDictionary );if !_badd {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_agac =_ebfg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_agac =_ebc .TraceToDirectObject (_agac );_adbd ,_badd :=_agac .(*_ebc .PdfObjectArray );if !_badd {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _adbd .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cde ,_bde :=_adbd .GetAsFloat64Slice ();
if _bde !=nil {return nil ,_bde ;};_gdea .WhitePoint =_cde ;_agac =_ebfg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _agac !=nil {_agac =_ebc .TraceToDirectObject (_agac );_cbeg ,_ceec :=_agac .(*_ebc .PdfObjectArray );if !_ceec {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _cbeg .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_efcd ,_bdbe :=_cbeg .GetAsFloat64Slice ();
if _bdbe !=nil {return nil ,_bdbe ;};_gdea .BlackPoint =_efcd ;};_agac =_ebfg .Get ("\u0047\u0061\u006dm\u0061");if _agac !=nil {_agac =_ebc .TraceToDirectObject (_agac );_bgd ,_egab :=_agac .(*_ebc .PdfObjectArray );if !_egab {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _bgd .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_eeaf ,_cbde :=_bgd .GetAsFloat64Slice ();if _cbde !=nil {return nil ,_cbde ;
};_gdea .Gamma =_eeaf ;};_agac =_ebfg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _agac !=nil {_agac =_ebc .TraceToDirectObject (_agac );_bcbd ,_ebgf :=_agac .(*_ebc .PdfObjectArray );if !_ebgf {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _bcbd .Len ()!=9{_ca .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bcbd .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_ccce ,_efge :=_bcbd .GetAsFloat64Slice ();if _efge !=nil {return nil ,_efge ;};_gdea .Matrix =_ccce ;};return _gdea ,nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cgc :=NewPdfAnnotation ();_ffd :=&PdfAnnotationSquiggly {};_ffd .PdfAnnotation =_cgc ;_ffd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgc .SetContext (_ffd );return _ffd ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_gd .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_gd .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_gd .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_agfbg *PdfAppender ;_dgee *DSS ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ef :=NewPdfAction ();_bce :=&PdfActionGoTo {};_bce .PdfAction =_ef ;_ef .SetContext (_bce );return _bce ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetContainingPdfObject implements interface PdfModel.
func (_aaeee *PdfFilespec )GetContainingPdfObject ()_ebc .PdfObject {return _aaeee ._dacdc };

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _eag .ReadSeeker )(*PdfReader ,error ){const _agdg ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dbad (rs ,&ReaderOpts {},false ,_agdg );};

// ToInteger convert to an integer format.
func (_eaeg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_eba :=_bcd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eba *_eaeg .R ()),uint32 (_eba *_eaeg .G ()),uint32 (_eba *_eaeg .B ())};};func (_bdb *PdfReader )newPdfActionFromIndirectObject (_fgf *_ebc .PdfIndirectObject )(*PdfAction ,error ){_feb ,_ebe :=_fgf .PdfObject .(*_ebc .PdfObjectDictionary );
if !_ebe {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bdb ._faaab .GetModelFromPrimitive (_feb );model !=nil {_bg ,_dcaf :=model .(*PdfAction );if !_dcaf {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _bg ,nil ;};_cgde :=&PdfAction {};_cgde ._dc =_fgf ;_bdb ._faaab .Register (_feb ,_cgde );if _afe :=_feb .Get ("\u0054\u0079\u0070\u0065");_afe !=nil {_efb ,_edf :=_afe .(*_ebc .PdfObjectName );if !_edf {_ca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afe );
}else {if *_efb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ca .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_efb );
};_cgde .Type =_efb ;};};if _aae :=_feb .Get ("\u004e\u0065\u0078\u0074");_aae !=nil {_cgde .Next =_aae ;};if _dfa :=_feb .Get ("\u0053");_dfa !=nil {_cgde .S =_dfa ;};_gef ,_bge :=_cgde .S .(*_ebc .PdfObjectName );if !_bge {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cgde .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cgde .S );};_afc :=PdfActionType (_gef .String ());
switch _afc {case ActionTypeGoTo :_dab ,_afce :=_bdb .newPdfActionGotoFromDict (_feb );if _afce !=nil {return nil ,_afce ;};_dab .PdfAction =_cgde ;_cgde ._adf =_dab ;return _cgde ,nil ;case ActionTypeGoToR :_fb ,_afef :=_bdb .newPdfActionGotoRFromDict (_feb );
if _afef !=nil {return nil ,_afef ;};_fb .PdfAction =_cgde ;_cgde ._adf =_fb ;return _cgde ,nil ;case ActionTypeGoToE :_eaea ,_fcc :=_bdb .newPdfActionGotoEFromDict (_feb );if _fcc !=nil {return nil ,_fcc ;};_eaea .PdfAction =_cgde ;_cgde ._adf =_eaea ;
return _cgde ,nil ;case ActionTypeLaunch :_afb ,_eca :=_bdb .newPdfActionLaunchFromDict (_feb );if _eca !=nil {return nil ,_eca ;};_afb .PdfAction =_cgde ;_cgde ._adf =_afb ;return _cgde ,nil ;case ActionTypeThread :_bfg ,_cae :=_bdb .newPdfActionThreadFromDict (_feb );
if _cae !=nil {return nil ,_cae ;};_bfg .PdfAction =_cgde ;_cgde ._adf =_bfg ;return _cgde ,nil ;case ActionTypeURI :_cbb ,_bfgg :=_bdb .newPdfActionURIFromDict (_feb );if _bfgg !=nil {return nil ,_bfgg ;};_cbb .PdfAction =_cgde ;_cgde ._adf =_cbb ;return _cgde ,nil ;
case ActionTypeSound :_fbc ,_gbd :=_bdb .newPdfActionSoundFromDict (_feb );if _gbd !=nil {return nil ,_gbd ;};_fbc .PdfAction =_cgde ;_cgde ._adf =_fbc ;return _cgde ,nil ;case ActionTypeMovie :_geda ,_bdd :=_bdb .newPdfActionMovieFromDict (_feb );if _bdd !=nil {return nil ,_bdd ;
};_geda .PdfAction =_cgde ;_cgde ._adf =_geda ;return _cgde ,nil ;case ActionTypeHide :_beg ,_ggc :=_bdb .newPdfActionHideFromDict (_feb );if _ggc !=nil {return nil ,_ggc ;};_beg .PdfAction =_cgde ;_cgde ._adf =_beg ;return _cgde ,nil ;case ActionTypeNamed :_cgbe ,_cag :=_bdb .newPdfActionNamedFromDict (_feb );
if _cag !=nil {return nil ,_cag ;};_cgbe .PdfAction =_cgde ;_cgde ._adf =_cgbe ;return _cgde ,nil ;case ActionTypeSubmitForm :_bgc ,_gfac :=_bdb .newPdfActionSubmitFormFromDict (_feb );if _gfac !=nil {return nil ,_gfac ;};_bgc .PdfAction =_cgde ;_cgde ._adf =_bgc ;
return _cgde ,nil ;case ActionTypeResetForm :_dgd ,_cca :=_bdb .newPdfActionResetFormFromDict (_feb );if _cca !=nil {return nil ,_cca ;};_dgd .PdfAction =_cgde ;_cgde ._adf =_dgd ;return _cgde ,nil ;case ActionTypeImportData :_ce ,_fdeb :=_bdb .newPdfActionImportDataFromDict (_feb );
if _fdeb !=nil {return nil ,_fdeb ;};_ce .PdfAction =_cgde ;_cgde ._adf =_ce ;return _cgde ,nil ;case ActionTypeSetOCGState :_dcf ,_fgd :=_bdb .newPdfActionSetOCGStateFromDict (_feb );if _fgd !=nil {return nil ,_fgd ;};_dcf .PdfAction =_cgde ;_cgde ._adf =_dcf ;
return _cgde ,nil ;case ActionTypeRendition :_dbcg ,_def :=_bdb .newPdfActionRenditionFromDict (_feb );if _def !=nil {return nil ,_def ;};_dbcg .PdfAction =_cgde ;_cgde ._adf =_dbcg ;return _cgde ,nil ;case ActionTypeTrans :_ebfe ,_cga :=_bdb .newPdfActionTransFromDict (_feb );
if _cga !=nil {return nil ,_cga ;};_ebfe .PdfAction =_cgde ;_cgde ._adf =_ebfe ;return _cgde ,nil ;case ActionTypeGoTo3DView :_aeg ,_cgab :=_bdb .newPdfActionGoTo3DViewFromDict (_feb );if _cgab !=nil {return nil ,_cgab ;};_aeg .PdfAction =_cgde ;_cgde ._adf =_aeg ;
return _cgde ,nil ;case ActionTypeJavaScript :_ddfc ,_bege :=_bdb .newPdfActionJavaScriptFromDict (_feb );if _bege !=nil {return nil ,_bege ;};_ddfc .PdfAction =_cgde ;_cgde ._adf =_ddfc ;return _cgde ,nil ;};_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_afc );
return nil ,nil ;};

// SetFlag sets the flag for the field.
func (_eafg *PdfField )SetFlag (flag FieldFlag ){_eafg .Ff =_ebc .MakeInteger (int64 (flag ))};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_gbge *_ebc .PdfIndirectObject ;};func (_fdg *PdfReader )newPdfActionGotoEFromDict (_gadc *_ebc .PdfObjectDictionary )(*PdfActionGoToE ,error ){_fdc ,_cdd :=_ece (_gadc .Get ("\u0046"));
if _cdd !=nil {return nil ,_cdd ;};return &PdfActionGoToE {D :_gadc .Get ("\u0044"),NewWindow :_gadc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gadc .Get ("\u0054"),F :_fdc },nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bgeeg :=PdfColorDeviceRGB {r ,g ,b };return &_bgeeg ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fafg *PdfField )FullName ()(string ,error ){var _cdba _ed .Buffer ;_ccfe :=[]string {};if _fafg .T !=nil {_ccfe =append (_ccfe ,_fafg .T .Decoded ());};_cfdc :=map[*PdfField ]bool {};_cfdc [_fafg ]=true ;_fabab :=_fafg .Parent ;for _fabab !=nil {if _ ,_eeece :=_cfdc [_fabab ];
_eeece {return _cdba .String (),_cfe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _fabab .T ==nil {return _cdba .String (),_cfe .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_ccfe =append (_ccfe ,_fabab .T .Decoded ());_cfdc [_fabab ]=true ;_fabab =_fabab .Parent ;};for _bdcf :=len (_ccfe )-1;_bdcf >=0;_bdcf --{_cdba .WriteString (_ccfe [_bdcf ]);if _bdcf > 0{_cdba .WriteString ("\u002e");};};return _cdba .String (),nil ;
};func (_bacaa *fontFile )parseASCIIPart (_bfaba []byte )error {if len (_bfaba )< 2||string (_bfaba [:2])!="\u0025\u0021"{return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_befde ,_daeea ,_dggc :=_aefe (_bfaba );if _dggc !=nil {return _dggc ;};_dbdff :=_geccb (_befde );_bacaa ._ffdca =_dbdff ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _bacaa ._ffdca ==""{_ca .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _daeea !=""{_cdcd ,_dfgc :=_debcc (_daeea );if _dfgc !=nil {return _dfgc ;};_gfdcc ,_dfgc :=_cgf .NewCustomSimpleTextEncoder (_cdcd ,nil );if _dfgc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dfgc );
return nil ;};_bacaa ._bfccf =_gfdcc ;};return nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ffdgf *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _efcfb []_cgf .TextEncoder ;var _agdfcag _cgf .CMapEncoder ;if _gadb :=_ffdgf .baseFields ()._fcffc ;_gadb !=nil {_agdfcag =_cgf .NewCMapEncoder ("",nil ,_gadb );};_dcbde :=_ffdgf .Encoder ();
if _dcbde !=nil {switch _gegea :=_dcbde .(type ){case _cgf .SimpleEncoder :_bebc :=_gegea .BaseName ();if _ ,_edcbb :=_geaac [_bebc ];_edcbb {_efcfb =append (_efcfb ,_dcbde );};};};if len (_efcfb )==0{if _ffdgf .baseFields ()._fcffc !=nil {_efcfb =append (_efcfb ,_agdfcag );
};if _dcbde !=nil {_efcfb =append (_efcfb ,_dcbde );};};var _fdfc _ed .Buffer ;var _aefae int ;for _ ,_edbb :=range data {var _dabag bool ;for _ ,_ebfb :=range _efcfb {if _fbbd :=_ebfb .Encode (string (_edbb ));len (_fbbd )> 0{_fdfc .Write (_fbbd );_dabag =true ;
break ;};};if !_dabag {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_edbb );
_aefae ++;};};if _aefae !=0{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_aefae ,_ffdgf ,_efcfb );
};return _fdfc .Bytes (),_aefae ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bbgd :=PdfWriter {};_bbgd ._bbfbd =map[_ebc .PdfObject ]struct{}{};_bbgd ._gfbe =[]_ebc .PdfObject {};_bbgd ._aedab =map[_ebc .PdfObject ][]*_ebc .PdfObjectDictionary {};_bbgd ._cebef =map[_ebc .PdfObject ]struct{}{};_bbgd ._aeafa .Major =1;
_bbgd ._aeafa .Minor =3;_bdcbb :=_ebc .MakeDict ();_fcfd :=[]struct{_gbdfg _ebc .PdfObjectName ;_gagbe string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_abdce ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_dabacg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_gbabfd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gcbdg ()},{"\u0054\u0069\u0074l\u0065",_ebagf ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fdfab ()}};
for _ ,_fgddf :=range _fcfd {if _fgddf ._gagbe !=""{_bdcbb .Set (_fgddf ._gbdfg ,_ebc .MakeString (_fgddf ._gagbe ));};};if _fdecc :=_dfdbc ();!_fdecc .IsZero (){if _abacg ,_acdaa :=NewPdfDateFromTime (_fdecc );_acdaa ==nil {_bdcbb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_abacg .ToPdfObject ());
};};if _dgdfa :=_fefeg ();!_dgdfa .IsZero (){if _bddace ,_fbebe :=NewPdfDateFromTime (_dgdfa );_fbebe ==nil {_bdcbb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bddace .ToPdfObject ());};};_dbebgf :=_ebc .PdfIndirectObject {};_dbebgf .PdfObject =_bdcbb ;
_bbgd ._ebgcgg =&_dbebgf ;_bbgd .addObject (&_dbebgf );_adfgd :=_ebc .PdfIndirectObject {};_cefffa :=_ebc .MakeDict ();_cefffa .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_adfgd .PdfObject =_cefffa ;_bbgd ._acbba =&_adfgd ;
_bbgd .addObject (_bbgd ._acbba );_bega ,_dffce :=_aadad ("\u0077");if _dffce !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dffce );};_bbgd ._ddcgbf =_bega ;_ggfb :=_ebc .PdfIndirectObject {};_aceefc :=_ebc .MakeDict ();_aceefc .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0050\u0061\u0067e\u0073"));
_eefc :=_ebc .PdfObjectArray {};_aceefc .Set ("\u004b\u0069\u0064\u0073",&_eefc );_aceefc .Set ("\u0043\u006f\u0075n\u0074",_ebc .MakeInteger (0));_ggfb .PdfObject =_aceefc ;_bbgd ._ecbba =&_ggfb ;_bbgd ._ababf =map[_ebc .PdfObject ]struct{}{};_bbgd .addObject (_bbgd ._ecbba );
_cefffa .Set ("\u0050\u0061\u0067e\u0073",&_ggfb );_bbgd ._aaefa =_cefffa ;_ca .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_adfgd );return _bbgd ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cdbbd *PdfSignature )GetDocMDPPermission ()(_ggb .DocMDPPermission ,bool ){for _ ,_cedfa :=range _cdbbd .Reference .Elements (){if _degec ,_fffed :=_ebc .GetDict (_cedfa );_fffed {if _afbga ,_caecg :=_ebc .GetNameVal (_degec .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_caecg &&_afbga =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _bfacc ,_fegaa :=_ebc .GetDict (_degec .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fegaa {if P ,_bebag :=_ebc .GetIntVal (_bfacc .Get ("\u0050"));
_bebag {return _ggb .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cgfgcb *XObjectForm )SetContentStream (content []byte ,encoder _ebc .StreamEncoder )error {_cgfaa :=content ;if encoder ==nil {if _cgfgcb .Filter !=nil {encoder =_cgfgcb .Filter ;}else {encoder =_ebc .NewRawEncoder ();};};_cfad ,_bfdbe :=encoder .EncodeBytes (_cgfaa );
if _bfdbe !=nil {return _bfdbe ;};_cgfaa =_cfad ;_cgfgcb .Stream =_cgfaa ;_cgfgcb .Filter =encoder ;return nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_edgf :=NewPdfAction ();_af :=&PdfActionRendition {};_af .PdfAction =_edgf ;_edgf .SetContext (_af );return _af ;};func _ddga (_aaef []byte )[]byte {const _acdeg =52845;const _ffde =22719;_dgbb :=55665;
for _ ,_efee :=range _aaef [:4]{_dgbb =(int (_efee )+_dgbb )*_acdeg +_ffde ;};_gfbdd :=make ([]byte ,len (_aaef )-4);for _eeggf ,_bbeg :=range _aaef [4:]{_gfbdd [_eeggf ]=byte (int (_bbeg )^_dgbb >>8);_dgbb =(int (_bbeg )+_dgbb )*_acdeg +_ffde ;};return _gfbdd ;
};func (_febe *PdfAnnotation )String ()string {_ffga :="";_cfbb ,_eaed :=_febe .ToPdfObject ().(*_ebc .PdfIndirectObject );if _eaed {_ffga =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_febe ._fddc ,_cfbb .PdfObject .String ());};return _ffga ;};


// ToPdfObject implements interface PdfModel.
func (_agae *PdfAnnotationSquiggly )ToPdfObject ()_ebc .PdfObject {_agae .PdfAnnotation .ToPdfObject ();_agg :=_agae ._daf ;_edgbb :=_agg .PdfObject .(*_ebc .PdfObjectDictionary );_agae .PdfAnnotationMarkup .appendToPdfDictionary (_edgbb );_edgbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_edgbb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agae .QuadPoints );return _agg ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cfafe *PdfFieldButton )IsPush ()bool {return _cfafe .GetType ()==ButtonTypePush };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fab :=&PdfAnnotation {};_fab ._daf =_ebc .MakeIndirectObject (_ebc .MakeDict ());return _fab ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gcbc *PdfFieldText )ToPdfObject ()_ebc .PdfObject {_gcbc .PdfField .ToPdfObject ();_aacd :=_gcbc ._faga ;_ddbcc :=_aacd .PdfObject .(*_ebc .PdfObjectDictionary );_ddbcc .Set ("\u0046\u0054",_ebc .MakeName ("\u0054\u0078"));if _gcbc .DA !=nil {_ddbcc .Set ("\u0044\u0041",_gcbc .DA );
};if _gcbc .Q !=nil {_ddbcc .Set ("\u0051",_gcbc .Q );};if _gcbc .DS !=nil {_ddbcc .Set ("\u0044\u0053",_gcbc .DS );};if _gcbc .RV !=nil {_ddbcc .Set ("\u0052\u0056",_gcbc .RV );};if _gcbc .MaxLen !=nil {_ddbcc .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gcbc .MaxLen );
};return _aacd ;};func (_aeggg *PdfWriter )writeOutlines ()error {if _aeggg ._cdccgg ==nil {return nil ;};_ca .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_aeggg ._cdccgg );_gfcbf :=_aeggg ._cdccgg .ToPdfObject ();
_ca .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_gfcbf ,_gfcbf ,_gfcbf );_aeggg ._aaefa .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_gfcbf );
_daedf :=_aeggg .addObjects (_gfcbf );if _daedf !=nil {return _daedf ;};return nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bf :=NewPdfAction ();_dce :=&PdfActionResetForm {};_dce .PdfAction =_bf ;_bf .SetContext (_dce );return _dce ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ebc .PdfObject ;LE _ebc .PdfObject ;BS _ebc .PdfObject ;IC _ebc .PdfObject ;BE _ebc .PdfObject ;IT _ebc .PdfObject ;Measure _ebc .PdfObject ;};

// CustomKeys returns all custom info keys as list.
func (_ceecg *PdfInfo )CustomKeys ()[]string {if _ceecg ._fefbe ==nil {return nil ;};_ccge :=make ([]string ,len (_ceecg ._fefbe .Keys ()));for _ ,_ced :=range _ceecg ._fefbe .Keys (){_ccge =append (_ccge ,_ced .String ());};return _ccge ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ebebf :=PdfPage {};_ebebf ._gaefe =_ebc .MakeDict ();_ebebf .Resources =NewPdfPageResources ();_fbdbb :=_ebc .PdfIndirectObject {};_fbdbb .PdfObject =_ebebf ._gaefe ;_ebebf ._beacb =&_fbdbb ;_ebebf ._edgfd =*_ebebf ._gaefe ;
return &_ebebf ;};

// ToPdfObject implements interface PdfModel.
func (_dfgd *PdfActionSubmitForm )ToPdfObject ()_ebc .PdfObject {_dfgd .PdfAction .ToPdfObject ();_ebf :=_dfgd ._dc ;_dfc :=_ebf .PdfObject .(*_ebc .PdfObjectDictionary );_dfc .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeSubmitForm )));if _dfgd .F !=nil {_dfc .Set ("\u0046",_dfgd .F .ToPdfObject ());
};_dfc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dfgd .Fields );_dfc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dfgd .Flags );return _ebf ;};

// Val returns the color value.
func (_dage *PdfColorDeviceGray )Val ()float64 {return float64 (*_dage )};func (_egcaf *PdfWriter )writeString (_adcfa string ){if _egcaf ._beage !=nil {return ;};_fdabb ,_cggd :=_egcaf ._afba .WriteString (_adcfa );_egcaf ._facg +=int64 (_fdabb );_egcaf ._beage =_cggd ;
};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_affbd *_ebc .PdfObjectDictionary ;Type *_ebc .PdfObjectName ;TransformMethod *_ebc .PdfObjectName ;TransformParams _ebc .PdfObject ;Data _ebc .PdfObject ;DigestMethod *_ebc .PdfObjectName ;};func (_egbba *PdfReader )newPdfSignatureReferenceFromDict (_bfbe *_ebc .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _egegb ,_cgddd :=_egbba ._faaab .GetModelFromPrimitive (_bfbe ).(*PdfSignatureReference );
_cgddd {return _egegb ,nil ;};_gacda :=&PdfSignatureReference {_affbd :_bfbe ,Data :_bfbe .Get ("\u0044\u0061\u0074\u0061")};var _cgdfe bool ;_gacda .Type ,_ =_ebc .GetName (_bfbe .Get ("\u0054\u0079\u0070\u0065"));_gacda .TransformMethod ,_cgdfe =_ebc .GetName (_bfbe .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_cgdfe {_ca .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gacda .TransformParams ,_ =_ebc .GetDict (_bfbe .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_gacda .DigestMethod ,_ =_ebc .GetName (_bfbe .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _gacda ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ebc .PdfObject ;IC _ebc .PdfObject ;BE _ebc .PdfObject ;RD _ebc .PdfObject ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_fgfdb *PdfOutlineTreeNode )ToPdfObject ()_ebc .PdfObject {return _fgfdb .GetContext ().ToPdfObject ();};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fagaf ,_ggaa :=_db .Open (filePath );if _ggaa !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ggaa );
return nil ,_ggaa ;};defer _fagaf .Close ();return NewPdfFontFromTTF (_fagaf );};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _ebc .PdfObject ;Dest _ebc .PdfObject ;H _ebc .PdfObject ;PA _ebc .PdfObject ;QuadPoints _ebc .PdfObject ;BS _ebc .PdfObject ;_adaa *PdfAction ;_fcf *PdfReader ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gdbdf *PdfPageResources )GenerateXObjectName ()_ebc .PdfObjectName {_bbddd :=1;for {_fcdcc :=_ebc .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_bbddd ));if !_gdbdf .HasXObjectByName (*_fcdcc ){return *_fcdcc ;};_bbddd ++;};};

// B returns the value of the B component of the color.
func (_gccfa *PdfColorLab )B ()float64 {return _gccfa [2]};func (_ffgag *PdfAcroForm )fillImageWithAppearance (_eecga FieldImageProvider ,_ffcff FieldAppearanceGenerator )error {if _ffgag ==nil {return nil ;};_fdgaa ,_gbdc :=_eecga .FieldImageValues ();
if _gbdc !=nil {return _gbdc ;};for _ ,_aeafba :=range _ffgag .AllFields (){_fefae :=_aeafba .PartialName ();_befda ,_bbcaf :=_fdgaa [_fefae ];if !_bbcaf {if _bceb ,_fbcdge :=_aeafba .FullName ();_fbcdge ==nil {_befda ,_bbcaf =_fdgaa [_bceb ];};};if !_bbcaf {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fefae );
continue ;};switch _fddgb :=_aeafba .GetContext ().(type ){case *PdfFieldButton :if _fddgb .IsPush (){_fddgb .SetFillImage (_befda );};};if _ffcff ==nil {continue ;};for _ ,_fdbd :=range _aeafba .Annotations {_bbafd ,_bfgd :=_ffcff .GenerateAppearanceDict (_ffgag ,_aeafba ,_fdbd );
if _bfgd !=nil {return _bfgd ;};_fdbd .AP =_bbafd ;_fdbd .ToPdfObject ();};};return nil ;};func (_ccadd *PdfFilespec )getDict ()*_ebc .PdfObjectDictionary {if _dgcbb ,_bgce :=_ccadd ._dacdc .(*_ebc .PdfIndirectObject );_bgce {_bdaa ,_cgcdg :=_dgcbb .PdfObject .(*_ebc .PdfObjectDictionary );
if !_cgcdg {return nil ;};return _bdaa ;}else if _ebbg ,_caagg :=_ccadd ._dacdc .(*_ebc .PdfObjectDictionary );_caagg {return _ebbg ;}else {_ca .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_ccadd ._dacdc );
return nil ;};};

// ToInteger convert to an integer format.
func (_efa *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_bcdb :=_bcd .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_bcdb *_efa .C ()),uint32 (_bcdb *_efa .M ()),uint32 (_bcdb *_efa .Y ()),uint32 (_bcdb *_efa .K ())};};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_decd *PdfColorspaceDeviceN )ToPdfObject ()_ebc .PdfObject {_egdad :=_ebc .MakeArray (_ebc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_egdad .Append (_decd .ColorantNames );_egdad .Append (_decd .AlternateSpace .ToPdfObject ());_egdad .Append (_decd .TintTransform .ToPdfObject ());
if _decd .Attributes !=nil {_egdad .Append (_decd .Attributes .ToPdfObject ());};if _decd ._acade !=nil {_decd ._acade .PdfObject =_egdad ;return _decd ._acade ;};return _egdad ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_afbe *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_bfae :=_ba .NewReader (img .getBase ());_dffg :=_cfef .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ddee :=_ba .NewWriter (_dffg );
_cebd :=_bcd .Pow (2,float64 (img .BitsPerComponent ))-1;_gcbec :=make ([]uint32 ,3);var (_eeeaa uint32 ;ANorm ,X ,Y ,Z ,_degg ,_caee ,_gbfg float64 ;_afaaa error ;);for {_eeeaa ,_afaaa =_bfae .ReadSample ();if _afaaa ==_eag .EOF {break ;}else if _afaaa !=nil {return img ,_afaaa ;
};ANorm =float64 (_eeeaa )/_cebd ;X =_afbe .WhitePoint [0]*_bcd .Pow (ANorm ,_afbe .Gamma );Y =_afbe .WhitePoint [1]*_bcd .Pow (ANorm ,_afbe .Gamma );Z =_afbe .WhitePoint [2]*_bcd .Pow (ANorm ,_afbe .Gamma );_degg =3.240479*X +-1.537150*Y +-0.498535*Z ;
_caee =-0.969256*X +1.875992*Y +0.041556*Z ;_gbfg =0.055648*X +-0.204043*Y +1.057311*Z ;_degg =_bcd .Min (_bcd .Max (_degg ,0),1.0);_caee =_bcd .Min (_bcd .Max (_caee ,0),1.0);_gbfg =_bcd .Min (_bcd .Max (_gbfg ,0),1.0);_gcbec [0]=uint32 (_degg *_cebd );
_gcbec [1]=uint32 (_caee *_cebd );_gcbec [2]=uint32 (_gbfg *_cebd );if _afaaa =_ddee .WriteSamples (_gcbec );_afaaa !=nil {return img ,_afaaa ;};};return _ebeb (&_dffg ),nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _ebc .PdfObject ;_cgdc []byte ;_ffae *_ebc .PdfIndirectObject ;};

// MergePageWith appends page content to source Pdf file page content.
func (_fcefd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cacg :=pageNum -1;var _baecf *PdfPage ;for _cega ,_aag :=range _fcefd ._dcbg {if _cega ==_cacg {_baecf =_aag ;};};if _baecf ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _baecf ._beacb !=nil &&_baecf ._beacb .GetParser ()==_fcefd ._ccf ._bfef {_baecf =_baecf .Duplicate ();_fcefd ._dcbg [_cacg ]=_baecf ;};page =page .Duplicate ();_edced (page );_gbba :=_ddfg (_baecf );_gdgd :=_ddfg (page );_fdga :=make (map[_ebc .PdfObjectName ]_ebc .PdfObjectName );
for _cbg :=range _gdgd {if _ ,_cccb :=_gbba [_cbg ];_cccb {for _agde :=1;true ;_agde ++{_efdgb :=_ebc .PdfObjectName (string (_cbg )+_cb .Itoa (_agde ));if _ ,_ebeda :=_gbba [_efdgb ];!_ebeda {_fdga [_cbg ]=_efdgb ;break ;};};};};_defa ,_afefg :=page .GetContentStreams ();
if _afefg !=nil {return _afefg ;};_dgcb ,_afefg :=_baecf .GetContentStreams ();if _afefg !=nil {return _afefg ;};for _fcce ,_egc :=range _defa {for _dgdf ,_cfaa :=range _fdga {_egc =_ea .Replace (_egc ,"\u002f"+string (_dgdf ),"\u002f"+string (_cfaa ),-1);
};_defa [_fcce ]=_egc ;};_dgcb =append (_dgcb ,_defa ...);if _bcae :=_baecf .SetContentStreams (_dgcb ,_ebc .NewFlateEncoder ());_bcae !=nil {return _bcae ;};_baecf ._ebgag =append (_baecf ._ebgag ,page ._ebgag ...);if _baecf .Resources ==nil {_baecf .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_baecf .Resources .Font =_fcefd .mergeResources (_baecf .Resources .Font ,page .Resources .Font ,_fdga );_baecf .Resources .XObject =_fcefd .mergeResources (_baecf .Resources .XObject ,page .Resources .XObject ,_fdga );_baecf .Resources .Properties =_fcefd .mergeResources (_baecf .Resources .Properties ,page .Resources .Properties ,_fdga );
if _baecf .Resources .ProcSet ==nil {_baecf .Resources .ProcSet =page .Resources .ProcSet ;};_baecf .Resources .Shading =_fcefd .mergeResources (_baecf .Resources .Shading ,page .Resources .Shading ,_fdga );_baecf .Resources .ExtGState =_fcefd .mergeResources (_baecf .Resources .ExtGState ,page .Resources .ExtGState ,_fdga );
};_abbd ,_afefg :=_baecf .GetMediaBox ();if _afefg !=nil {return _afefg ;};_faff ,_afefg :=page .GetMediaBox ();if _afefg !=nil {return _afefg ;};var _agdfd bool ;if _abbd .Llx > _faff .Llx {_abbd .Llx =_faff .Llx ;_agdfd =true ;};if _abbd .Lly > _faff .Lly {_abbd .Lly =_faff .Lly ;
_agdfd =true ;};if _abbd .Urx < _faff .Urx {_abbd .Urx =_faff .Urx ;_agdfd =true ;};if _abbd .Ury < _faff .Ury {_abbd .Ury =_faff .Ury ;_agdfd =true ;};if _agdfd {_baecf .MediaBox =_abbd ;};return nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_gbddb *Outline )Insert (index uint ,item *OutlineItem ){_gedf :=uint (len (_gbddb .Entries ));if index > _gedf {index =_gedf ;};_gbddb .Entries =append (_gbddb .Entries [:index ],append ([]*OutlineItem {item },_gbddb .Entries [index :]...)...);};


// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dffge *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};var (CourierName =_ge .CourierName ;CourierBoldName =_ge .CourierBoldName ;CourierObliqueName =_ge .CourierObliqueName ;CourierBoldObliqueName =_ge .CourierBoldObliqueName ;
HelveticaName =_ge .HelveticaName ;HelveticaBoldName =_ge .HelveticaBoldName ;HelveticaObliqueName =_ge .HelveticaObliqueName ;HelveticaBoldObliqueName =_ge .HelveticaBoldObliqueName ;SymbolName =_ge .SymbolName ;ZapfDingbatsName =_ge .ZapfDingbatsName ;
TimesRomanName =_ge .TimesRomanName ;TimesBoldName =_ge .TimesBoldName ;TimesItalicName =_ge .TimesItalicName ;TimesBoldItalicName =_ge .TimesBoldItalicName ;);

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_dbabe *PdfReader )GetIndirectObjectByNumber (number int )(_ebc .PdfObject ,error ){_adabaf ,_feggd :=_dbabe ._bfef .LookupByNumber (number );return _adabaf ,_feggd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gdecf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbcb :=vals [0];_adcf :=[]float64 {_bcbcb };
_bdgd ,_dbfe :=_gdecf .TintTransform .Evaluate (_adcf );if _dbfe !=nil {_ca .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dbfe );
_ca .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gdecf .TintTransform );return nil ,_dbfe ;};_ca .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bdgd ,_gdecf .AlternateSpace );
_bebfe ,_dbfe :=_gdecf .AlternateSpace .ColorFromFloats (_bdgd );if _dbfe !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dbfe );
return nil ,_dbfe ;};return _bebfe ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cff :=NewPdfAnnotation ();_dcbd :=&PdfAnnotationProjection {};_dcbd .PdfAnnotation =_cff ;_dcbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cff .SetContext (_dcbd );return _dcbd ;};

// StdFontName represents name of a standard font.
type StdFontName =_ge .StdFontName ;

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_fgcb _eag .ReadSeeker ;_fdac *_ebc .PdfParser ;_ccf *PdfReader ;Reader *PdfReader ;_dcbg []*PdfPage ;_bebg *PdfAcroForm ;_ggda *DSS ;_ebca *Permissions ;_dacd _ebc .XrefTable ;_deaeb int64 ;_faf int ;_ccbc []_ebc .PdfObject ;_aacc map[_ebc .PdfObject ]struct{};
_cce map[_ebc .PdfObject ]int64 ;_bba map[_ebc .PdfObject ]struct{};_debe map[_ebc .PdfObject ]struct{};_ecgf int64 ;_gcbd bool ;_dff string ;_dbeb *EncryptOptions ;_eed *PdfInfo ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_afa :=NewPdfAnnotation ();_caf :=&PdfAnnotationWatermark {};_caf .PdfAnnotation =_afa ;_afa .SetContext (_caf );return _caf ;};func (_eecb *PdfReader )newPdfAnnotationLinkFromDict (_dbg *_ebc .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gebg :=PdfAnnotationLink {};
_gebg .A =_dbg .Get ("\u0041");_gebg .Dest =_dbg .Get ("\u0044\u0065\u0073\u0074");_gebg .H =_dbg .Get ("\u0048");_gebg .PA =_dbg .Get ("\u0050\u0041");_gebg .QuadPoints =_dbg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gebg .BS =_dbg .Get ("\u0042\u0053");
return &_gebg ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aaac *PdfColorspaceDeviceGray )ToPdfObject ()_ebc .PdfObject {return _ebc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_caeef :=&PdfOutlineItem {_gaab :_ebc .MakeIndirectObject (_ebc .MakeDict ())};_caeef ._degdbf =_caeef ;return _caeef ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_fdaf *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_adae :=_fdaf .actualFont ();if _adae ==nil {_ca .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_fdaf ._cbfg );
return _ge .CharMetrics {},false ;};if _ddfbf ,_ggca :=_adae .GetRuneMetrics (r );_ggca {return _ddfbf ,true ;};if _efdee ,_bgdbe :=_fdaf .GetFontDescriptor ();_bgdbe ==nil &&_efdee !=nil {return _ge .CharMetrics {Wx :_efdee ._caed },true ;};_ca .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdaf );
return _ge .CharMetrics {},false ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_beba *VRI )ToPdfObject ()*_ebc .PdfObjectDictionary {_daecc :=_ebc .MakeDict ();_daecc .SetIfNotNil (_ebc .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ddaec (_beba .Cert ));_daecc .SetIfNotNil (_ebc .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ddaec (_beba .OCSP ));
_daecc .SetIfNotNil (_ebc .PdfObjectName ("\u0043\u0052\u004c"),_ddaec (_beba .CRL ));_daecc .SetIfNotNil ("\u0054\u0055",_beba .TU );_daecc .SetIfNotNil ("\u0054\u0053",_beba .TS );return _daecc ;};func (_afade *PdfWriter )writeAcroFormFields ()error {if _afade ._bcecb ==nil {return nil ;
};_ca .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_ageeba :=_afade ._bcecb .ToPdfObject ();_ca .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ageeba );
_afade ._aaefa .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ageeba );_dceee :=_afade .addObjects (_ageeba );if _dceee !=nil {return _dceee ;};return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _ebc .PdfObject ;};

// SetAlpha sets the alpha layer for the image.
func (_bceec *Image )SetAlpha (alpha []byte ){_bceec ._afeca =alpha };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_ebc .PdfObjectArray ;_deea *Image ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fbcg :=NewPdfAnnotation ();_bef :=&PdfAnnotationLine {};_bef .PdfAnnotation =_fbcg ;_bef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbcg .SetContext (_bef );return _bef ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;func (_gafdd *PdfSignature )extractChainFromCert ()([]*_c .Certificate ,error ){var _dcfc *_ebc .PdfObjectArray ;switch _bafgd :=_gafdd .Cert .(type ){case *_ebc .PdfObjectString :_dcfc =_ebc .MakeArray (_bafgd );case *_ebc .PdfObjectArray :_dcfc =_bafgd ;
default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bafgd );
};var _bbcag _ed .Buffer ;for _ ,_baggf :=range _dcfc .Elements (){_ageebb ,_aecfe :=_ebc .GetString (_baggf );if !_aecfe {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_baggf );
};if _ ,_ccegf :=_bbcag .Write (_ageebb .Bytes ());_ccegf !=nil {return nil ,_ccegf ;};};return _c .ParseCertificates (_bbcag .Bytes ());};func _ddfae (_ebaf *PdfField )[]*PdfField {_afbde :=[]*PdfField {_ebaf };for _ ,_acgb :=range _ebaf .Kids {_afbde =append (_afbde ,_ddfae (_acgb )...);
};return _afbde ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_ebc .PdfObjectInteger ;BitsPerComponent *_ebc .PdfObjectInteger ;BitsPerFlag *_ebc .PdfObjectInteger ;Decode *_ebc .PdfObjectArray ;Function []PdfFunction ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dcdbb *PdfWriter )SetPageLabels (pageLabels _ebc .PdfObject )error {if pageLabels ==nil {return nil ;};_ca .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_dcdbb ._aaefa .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _dcdbb .addObjects (pageLabels );};

// Val returns the value of the color.
func (_dcgg *PdfColorCalGray )Val ()float64 {return float64 (*_dcgg )};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _ebc .PdfObject ;};func (_bbga *PdfReader )newPdfAnnotationMovieFromDict (_dfed *_ebc .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ecfg :=PdfAnnotationMovie {};_ecfg .T =_dfed .Get ("\u0054");_ecfg .Movie =_dfed .Get ("\u004d\u006f\u0076i\u0065");
_ecfg .A =_dfed .Get ("\u0041");return &_ecfg ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afbdbe *PdfShadingType6 )ToPdfObject ()_ebc .PdfObject {_afbdbe .PdfShading .ToPdfObject ();_gcbdbf ,_dabcdc :=_afbdbe .getShadingDict ();if _dabcdc !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _afbdbe .BitsPerCoordinate !=nil {_gcbdbf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_afbdbe .BitsPerCoordinate );};if _afbdbe .BitsPerComponent !=nil {_gcbdbf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afbdbe .BitsPerComponent );
};if _afbdbe .BitsPerFlag !=nil {_gcbdbf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_afbdbe .BitsPerFlag );};if _afbdbe .Decode !=nil {_gcbdbf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_afbdbe .Decode );};if _afbdbe .Function !=nil {if len (_afbdbe .Function )==1{_gcbdbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afbdbe .Function [0].ToPdfObject ());
}else {_egba :=_ebc .MakeArray ();for _ ,_caff :=range _afbdbe .Function {_egba .Append (_caff .ToPdfObject ());};_gcbdbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egba );};};return _afbdbe ._abfcbf ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cbaabd *PdfShadingPattern )ToPdfObject ()_ebc .PdfObject {_cbaabd .PdfPattern .ToPdfObject ();_deeb :=_cbaabd .getDict ();if _cbaabd .Shading !=nil {_deeb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cbaabd .Shading .ToPdfObject ());};if _cbaabd .Matrix !=nil {_deeb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cbaabd .Matrix );
};if _cbaabd .ExtGState !=nil {_deeb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cbaabd .ExtGState );};return _cbaabd ._bcgg ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ffa :=NewPdfAction ();_aab :=&PdfActionTrans {};_aab .PdfAction =_ffa ;_ffa .SetContext (_aab );return _aab ;};func (_eggcb *fontFile )loadFromSegments (_bebfd ,_bcfbe []byte )error {_ca .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_bebfd ),len (_bcfbe ));
_gead :=_eggcb .parseASCIIPart (_bebfd );if _gead !=nil {return _gead ;};_ca .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_eggcb );if len (_bcfbe )==0{return nil ;};_ca .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_eggcb );
return nil ;};func _edefa (_gebeg _ebc .PdfObject )(*fontFile ,error ){_ca .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gebeg );
_cgaeb :=&fontFile {};_gebeg =_ebc .TraceToDirectObject (_gebeg );_dfea ,_bcbde :=_gebeg .(*_ebc .PdfObjectStream );if !_bcbde {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gebeg );
return nil ,_ebc .ErrTypeError ;};_eafd :=_dfea .PdfObjectDictionary ;_gaedb ,_ddagc :=_ebc .DecodeStream (_dfea );if _ddagc !=nil {return nil ,_ddagc ;};_cfgb ,_bcbde :=_ebc .GetNameVal (_eafd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bcbde {_cgaeb ._aebb =_cfgb ;
if _cfgb =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ca .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_fdebf ,_ :=_ebc .GetIntVal (_eafd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gafg ,_ :=_ebc .GetIntVal (_eafd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _fdebf > len (_gaedb ){_fdebf =len (_gaedb );
};if _fdebf +_gafg > len (_gaedb ){_gafg =len (_gaedb )-_fdebf ;};_eacee :=_gaedb [:_fdebf ];var _ccafb []byte ;if _gafg > 0{_ccafb =_gaedb [_fdebf :_fdebf +_gafg ];};if _fdebf > 0&&_gafg > 0{_abeg :=_cgaeb .loadFromSegments (_eacee ,_ccafb );if _abeg !=nil {return nil ,_abeg ;
};};return _cgaeb ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_ebc .PdfObjectStream ;OCSP []*_ebc .PdfObjectStream ;CRL []*_ebc .PdfObjectStream ;TU *_ebc .PdfObjectString ;TS *_ebc .PdfObjectString ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fcccb *PdfPageResources )SetXObjectFormByName (keyName _ebc .PdfObjectName ,xform *XObjectForm )error {_afbfc :=xform .ToPdfObject ().(*_ebc .PdfObjectStream );_cdccg :=_fcccb .SetXObjectByName (keyName ,_afbfc );return _cdccg ;};

// GetNumPages returns the number of pages in the document.
func (_ccaga *PdfReader )GetNumPages ()(int ,error ){if _ccaga ._bfef .GetCrypter ()!=nil &&!_ccaga ._bfef .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_ccaga ._dfgde ),nil ;};

// A returns the value of the A component of the color.
func (_aegb *PdfColorLab )A ()float64 {return _aegb [1]};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fafag *PdfReader )GetNamedDestinations ()(_ebc .PdfObject ,error ){_abgef :=_ebc .ResolveReference (_fafag ._fcdfa .Get ("\u0044\u0065\u0073t\u0073"));if _abgef ==nil {return nil ,nil ;};if !_fafag ._gebcd {_bcfda :=_fafag .traverseObjectData (_abgef );
if _bcfda !=nil {return nil ,_bcfda ;};};return _abgef ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_fcgcb *_ebc .PdfIndirectObject ;};func _adda (_eggdb _ebc .PdfObject )(PdfFunction ,error ){_eggdb =_ebc .ResolveReference (_eggdb );if _dfcd ,_cgdbg :=_eggdb .(*_ebc .PdfObjectStream );
_cgdbg {_fggaad :=_dfcd .PdfObjectDictionary ;_eecfe ,_ecefg :=_fggaad .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ebc .PdfObjectInteger );if !_ecefg {_ca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_eecfe ==0{return _afaf (_dfcd );}else if *_eecfe ==4{return _dfddc (_dfcd );
}else {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _afbcb ,_efdag :=_eggdb .(*_ebc .PdfIndirectObject );_efdag {_ebabg ,_deaf :=_afbcb .PdfObject .(*_ebc .PdfObjectDictionary );
if !_deaf {_ca .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_bgeefg ,_deaf :=_ebabg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ebc .PdfObjectInteger );
if !_deaf {_ca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_bgeefg ==2{return _aecdc (_afbcb );}else if *_bgeefg ==3{return _ffeaa (_afbcb );}else {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ebdb ,_dgbf :=_eggdb .(*_ebc .PdfObjectDictionary );
_dgbf {_dbbf ,_begeg :=_ebdb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ebc .PdfObjectInteger );if !_begeg {_ca .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dbbf ==2{return _aecdc (_ebdb );}else if *_dbbf ==3{return _ffeaa (_ebdb );
}else {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ca .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_eggdb );
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cacgf .Lock ();defer _cacgf .Unlock ();_egccf =title };

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_fddag *PdfPage )SetContentStreams (cStreams []string ,encoder _ebc .StreamEncoder )error {if len (cStreams )==0{_fddag .Contents =nil ;return nil ;};if encoder ==nil {encoder =_ebc .NewRawEncoder ();};var _aebaf []*_ebc .PdfObjectStream ;for _ ,_cbee :=range cStreams {_afgge :=&_ebc .PdfObjectStream {};
_egddg :=encoder .MakeStreamDict ();_ebdc ,_dfede :=encoder .EncodeBytes ([]byte (_cbee ));if _dfede !=nil {return _dfede ;};_egddg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_ebdc ))));_afgge .PdfObjectDictionary =_egddg ;
_afgge .Stream =_ebdc ;_aebaf =append (_aebaf ,_afgge );};if len (_aebaf )==1{_fddag .Contents =_aebaf [0];}else {_aafeb :=_ebc .MakeArray ();for _ ,_aebee :=range _aebaf {_aafeb .Append (_aebee );};_fddag .Contents =_aafeb ;};return nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_aagddf *_ebc .PdfObjectDictionary ;};func _ebeb (_fafc *_cfef .ImageBase )(_gbefe Image ){_gbefe .Width =int64 (_fafc .Width );_gbefe .Height =int64 (_fafc .Height );_gbefe .BitsPerComponent =int64 (_fafc .BitsPerComponent );
_gbefe .ColorComponents =_fafc .ColorComponents ;_gbefe .Data =_fafc .Data ;_gbefe ._facag =_fafc .Decode ;_gbefe ._afeca =_fafc .Alpha ;return _gbefe ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _ebc .PdfObject ;V _ebc .PdfObject ;};

// AddWatermarkImage adds a watermark to the page.
func (_dabaa *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_babeg ,_gcbdb :=_dabaa .GetMediaBox ();if _gcbdb !=nil {return _gcbdb ;};_cbfgd :=_babeg .Urx -_babeg .Llx ;_dfbaa :=_babeg .Ury -_babeg .Lly ;_bbae :=float64 (*ximg .Width );
_gbda :=(_cbfgd -_bbae )/2;if opt .FitToWidth {_bbae =_cbfgd ;_gbda =0;};_cefgg :=_dfbaa ;_fdbgg :=float64 (0);if opt .PreserveAspectRatio {_cefgg =_bbae *float64 (*ximg .Height )/float64 (*ximg .Width );_fdbgg =(_dfbaa -_cefgg )/2;};if _dabaa .Resources ==nil {_dabaa .Resources =NewPdfPageResources ();
};_bcbga :=0;_dcfec :=_ebc .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_bcbga ));for _dabaa .Resources .HasXObjectByName (_dcfec ){_bcbga ++;_dcfec =_ebc .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_bcbga ));};_gcbdb =_dabaa .AddImageResource (_dcfec ,ximg );
if _gcbdb !=nil {return _gcbdb ;};_bcbga =0;_gggdb :=_ebc .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_bcbga ));for _dabaa .HasExtGState (_gggdb ){_bcbga ++;_gggdb =_ebc .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_bcbga ));};_cbabb :=_ebc .MakeDict ();
_cbabb .Set ("\u0042\u004d",_ebc .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cbabb .Set ("\u0043\u0041",_ebc .MakeFloat (opt .Alpha ));_cbabb .Set ("\u0063\u0061",_ebc .MakeFloat (opt .Alpha ));_gcbdb =_dabaa .AddExtGState (_gggdb ,_cbabb );if _gcbdb !=nil {return _gcbdb ;
};_fecfe :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gggdb ,_bbae ,_cefgg ,_gbda ,_fdbgg ,_dcfec );
_dabaa .AddContentStreamByString (_fecfe );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_adab *PdfAnnotationCircle )ToPdfObject ()_ebc .PdfObject {_adab .PdfAnnotation .ToPdfObject ();_ddfb :=_adab ._daf ;_eebb :=_ddfb .PdfObject .(*_ebc .PdfObjectDictionary );_adab .PdfAnnotationMarkup .appendToPdfDictionary (_eebb );_eebb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_eebb .SetIfNotNil ("\u0042\u0053",_adab .BS );_eebb .SetIfNotNil ("\u0049\u0043",_adab .IC );_eebb .SetIfNotNil ("\u0042\u0045",_adab .BE );_eebb .SetIfNotNil ("\u0052\u0044",_adab .RD );return _ddfb ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_aafcf *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_ggbc fontCommon )coreString ()string {_ffgfd :="";if _ggbc ._adgc !=nil {_ffgfd =_ggbc ._adgc .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ggbc ._dccgbc ,_ggbc ._eeda ,_ggbc ._ccef ,_ggbc ._bdadb ,_ggbc ._gfcc !=nil ,_ggbc .fontFlags (),_ffgfd );
};func _gaed (_dbaf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_dbaf }};func (_cfafc *PdfReader )newPdfAnnotationTrapNetFromDict (_cbdg *_ebc .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_egag :=PdfAnnotationTrapNet {};
return &_egag ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ceag *PdfFieldSignature )ToPdfObject ()_ebc .PdfObject {if _ceag .PdfAnnotationWidget !=nil {_ceag .PdfAnnotationWidget .ToPdfObject ();};_ceag .PdfField .ToPdfObject ();_defb :=_ceag ._faga ;_eade :=_defb .PdfObject .(*_ebc .PdfObjectDictionary );
_eade .SetIfNotNil ("\u0046\u0054",_ebc .MakeName ("\u0053\u0069\u0067"));_eade .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ceag .Lock );_eade .SetIfNotNil ("\u0053\u0056",_ceag .SV );if _ceag .V !=nil {_eade .SetIfNotNil ("\u0056",_ceag .V .ToPdfObject ());
};return _defb ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_faefeb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _fcggd []*PdfField ;_efeaf :=map[*_ebc .PdfIndirectObject ]struct{}{};for _ ,_acff :=range _faefeb .PageList {_bggb ,_gcgdc :=_acff .GetAnnotations ();if _gcgdc !=nil {return _gcgdc ;
};for _ ,_gbdbg :=range _bggb {var _beabc *PdfField ;switch _eggfa :=_gbdbg .GetContext ().(type ){case *PdfAnnotationWidget :if _eggfa ._cdgb !=nil {_beabc =_eggfa ._cdgb ;break ;};if _adgfc ,_gebddd :=_ebc .GetIndirect (_eggfa .Parent );_gebddd {_beabc ,_gcgdc =_faefeb .newPdfFieldFromIndirectObject (_adgfc ,nil );
if _gcgdc ==nil {break ;};_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_adgfc ,_gcgdc );
};if _eggfa ._daf !=nil {_beabc ,_gcgdc =_faefeb .newPdfFieldFromIndirectObject (_eggfa ._daf ,nil );if _gcgdc ==nil {break ;};_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eggfa ._daf ,_gcgdc );
};};if _beabc ==nil {continue ;};if _ ,_becef :=_efeaf [_beabc ._faga ];_becef {continue ;};_efeaf [_beabc ._faga ]=struct{}{};_fcggd =append (_fcggd ,_beabc );};};if len (_fcggd )==0{return nil ;};if _faefeb .AcroForm ==nil {_faefeb .AcroForm =NewPdfAcroForm ();
};_faefeb .AcroForm .Fields =&_fcggd ;return nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ggaf *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfbd ,_fggd :=color .(*PdfColorDeviceRGB );if !_fggd {_ca .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bfbd ,nil ;};func (_fge *PdfAppender )addNewObject (_gfec _ebc .PdfObject ){if _ ,_bcc :=_fge ._aacc [_gfec ];!_bcc {_fge ._ccbc =append (_fge ._ccbc ,_gfec );
_fge ._aacc [_gfec ]=struct{}{};};};

// Transform rectangle with the supplied matrix.
func (_bcafe *PdfRectangle )Transform (transformMatrix _ad .Matrix ){_bcafe .Llx ,_bcafe .Lly =transformMatrix .Transform (_bcafe .Llx ,_bcafe .Lly );_bcafe .Urx ,_bcafe .Ury =transformMatrix .Transform (_bcafe .Urx ,_bcafe .Ury );_bcafe .Normalize ();
};

// ToPdfObject implements interface PdfModel.
func (_cbba *PdfAnnotation3D )ToPdfObject ()_ebc .PdfObject {_cbba .PdfAnnotation .ToPdfObject ();_ggga :=_cbba ._daf ;_gada :=_ggga .PdfObject .(*_ebc .PdfObjectDictionary );_gada .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0033\u0044"));
_gada .SetIfNotNil ("\u0033\u0044\u0044",_cbba .T3DD );_gada .SetIfNotNil ("\u0033\u0044\u0056",_cbba .T3DV );_gada .SetIfNotNil ("\u0033\u0044\u0041",_cbba .T3DA );_gada .SetIfNotNil ("\u0033\u0044\u0049",_cbba .T3DI );_gada .SetIfNotNil ("\u0033\u0044\u0042",_cbba .T3DB );
return _ggga ;};type pdfCIDFontType0 struct{fontCommon ;_fccd *_ebc .PdfIndirectObject ;_fgbbf _cgf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_ebc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ebc .PdfObject ;W _ebc .PdfObject ;DW2 _ebc .PdfObject ;W2 _ebc .PdfObject ;_gaba map[_cgf .CharCode ]float64 ;_fbacg float64 ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gege *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_edgc :=func (_cacb float64 )float64 {if _cacb >=6.0/29{return _cacb *_cacb *_cacb ;};return 108.0/841*(_cacb -4.0/29.0);};_eegb :=img ._facag ;if len (_eegb )!=6{_ca .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_eegb =_gege .DecodeArray ();};_gfecc :=_ba .NewReader (img .getBase ());_ddcafg :=_cfef .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._afeca ,img ._facag );_gcg :=_ba .NewWriter (_ddcafg );_bbbdg :=_bcd .Pow (2,float64 (img .BitsPerComponent ))-1;
_fegab :=make ([]uint32 ,3);var (_cgdeb error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_bfag ,_baca ,_ddce float64 ;);for {_cgdeb =_gfecc .ReadSamples (_fegab );if _cgdeb ==_eag .EOF {break ;}else if _cgdeb !=nil {return img ,_cgdeb ;};Ls =float64 (_fegab [0])/_bbbdg ;
As =float64 (_fegab [1])/_bbbdg ;Bs =float64 (_fegab [2])/_bbbdg ;Ls =_cfef .LinearInterpolate (Ls ,0.0,1.0,_eegb [0],_eegb [1]);As =_cfef .LinearInterpolate (As ,0.0,1.0,_eegb [2],_eegb [3]);Bs =_cfef .LinearInterpolate (Bs ,0.0,1.0,_eegb [4],_eegb [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_gege .WhitePoint [0]*_edgc (L );Y =_gege .WhitePoint [1]*_edgc (M );Z =_gege .WhitePoint [2]*_edgc (N );_bfag =3.240479*X +-1.537150*Y +-0.498535*Z ;_baca =-0.969256*X +1.875992*Y +0.041556*Z ;
_ddce =0.055648*X +-0.204043*Y +1.057311*Z ;_bfag =_bcd .Min (_bcd .Max (_bfag ,0),1.0);_baca =_bcd .Min (_bcd .Max (_baca ,0),1.0);_ddce =_bcd .Min (_bcd .Max (_ddce ,0),1.0);_fegab [0]=uint32 (_bfag *_bbbdg );_fegab [1]=uint32 (_baca *_bbbdg );_fegab [2]=uint32 (_ddce *_bbbdg );
if _cgdeb =_gcg .WriteSamples (_fegab );_cgdeb !=nil {return img ,_cgdeb ;};};return _ebeb (&_ddcafg ),nil ;};func (_abgg *PdfReader )newPdfActionImportDataFromDict (_cdg *_ebc .PdfObjectDictionary )(*PdfActionImportData ,error ){_efba ,_ffg :=_ece (_cdg .Get ("\u0046"));
if _ffg !=nil {return nil ,_ffg ;};return &PdfActionImportData {F :_efba },nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddc *PdfActionMovie )ToPdfObject ()_ebc .PdfObject {_ddc .PdfAction .ToPdfObject ();_fgb :=_ddc ._dc ;_bcb :=_fgb .PdfObject .(*_ebc .PdfObjectDictionary );_bcb .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeMovie )));_bcb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ddc .Annotation );
_bcb .SetIfNotNil ("\u0054",_ddc .T );_bcb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ddc .Operation );return _fgb ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_gdbb *PdfAppender )UpdatePage (page *PdfPage ){_gdbb .updateObjectsDeep (page .ToPdfObject (),nil )};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ggg :=NewPdfAnnotation ();_bcbe :=&PdfAnnotationInk {};_bcbe .PdfAnnotation =_ggg ;_bcbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggg .SetContext (_bcbe );return _bcbe ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_ebc .PdfObjectStream ;Data []byte ;_cbgg *_ebc .PdfIndirectObject ;_eaeec *_ebc .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_geefg *PdfAnnotationMovie )ToPdfObject ()_ebc .PdfObject {_geefg .PdfAnnotation .ToPdfObject ();_cgdd :=_geefg ._daf ;_dggb :=_cgdd .PdfObject .(*_ebc .PdfObjectDictionary );_dggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u004d\u006f\u0076i\u0065"));
_dggb .SetIfNotNil ("\u0054",_geefg .T );_dggb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_geefg .Movie );_dggb .SetIfNotNil ("\u0041",_geefg .A );return _cgdd ;};func (_befb *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_dadgg *PdfReader )Decrypt (password []byte )(bool ,error ){_agceg ,_cdac :=_dadgg ._bfef .Decrypt (password );if _cdac !=nil {return false ,_cdac ;};if !_agceg {return false ,nil ;};_cdac =_dadgg .loadStructure ();if _cdac !=nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_cdac );
return false ,_cdac ;};return true ,nil ;};func (_ggge fontCommon )asPdfObjectDictionary (_ggae string )*_ebc .PdfObjectDictionary {if _ggae !=""&&_ggge ._dccgbc !=""&&_ggae !=_ggge ._dccgbc {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_ggae ,_ggge );
}else if _ggae ==""&&_ggge ._dccgbc ==""{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ggge );
}else if _ggge ._dccgbc ==""{_ggge ._dccgbc =_ggae ;};_bdfgg :=_ebc .MakeDict ();_bdfgg .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0046\u006f\u006e\u0074"));_bdfgg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ebc .MakeName (_ggge ._eeda ));
_bdfgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName (_ggge ._dccgbc ));if _ggge ._adgc !=nil {_bdfgg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_ggge ._adgc .ToPdfObject ());};if _ggge ._gfcc !=nil {_bdfgg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ggge ._gfcc );
}else if _ggge ._fcffc !=nil {_faae ,_dadb :=_ggge ._fcffc .Stream ();if _dadb !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dadb );
}else {_bdfgg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_faae );};};return _bdfgg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fdcff *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dafg ,_egga :=_ebc .GetNumbersAsFloat (objects );
if _egga !=nil {return nil ,_egga ;};return _fdcff .ColorFromFloats (_dafg );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gbfc *_ebc .PdfIndirectObject ;Certs []*_ebc .PdfObjectStream ;OCSPs []*_ebc .PdfObjectStream ;CRLs []*_ebc .PdfObjectStream ;VRI map[string ]*VRI ;_abfb map[string ]*_ebc .PdfObjectStream ;_gdcg map[string ]*_ebc .PdfObjectStream ;_fced map[string ]*_ebc .PdfObjectStream ;
};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bae :=NewPdfAnnotation ();_fffd :=&PdfAnnotationSound {};_fffd .PdfAnnotation =_bae ;_fffd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bae .SetContext (_fffd );return _fffd ;};func _cgdf (_cccbd _ebc .PdfObject )(*PdfPattern ,error ){_affbc :=&PdfPattern {};
var _eaage *_ebc .PdfObjectDictionary ;if _eebag ,_fgadf :=_ebc .GetIndirect (_cccbd );_fgadf {_affbc ._bcgg =_eebag ;_beag ,_egcde :=_eebag .PdfObject .(*_ebc .PdfObjectDictionary );if !_egcde {_ca .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_eebag .PdfObject );
return nil ,_ebc .ErrTypeError ;};_eaage =_beag ;}else if _efedf ,_cdcce :=_ebc .GetStream (_cccbd );_cdcce {_affbc ._bcgg =_efedf ;_eaage =_efedf .PdfObjectDictionary ;}else {_ca .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_cccbd );
return nil ,_ebc .ErrTypeError ;};_ggegd :=_eaage .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ggegd ==nil {_ca .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fccba ,_cceb :=_ggegd .(*_ebc .PdfObjectInteger );if !_cceb {_ca .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggegd );
return nil ,_ebc .ErrTypeError ;};if *_fccba !=1&&*_fccba !=2{_ca .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fccba );return nil ,_ebc .ErrRangeError ;
};_affbc .PatternType =int64 (*_fccba );switch *_fccba {case 1:_caefd ,_bbcac :=_bbdbbg (_eaage );if _bbcac !=nil {return nil ,_bbcac ;};_caefd .PdfPattern =_affbc ;_affbc ._adgca =_caefd ;return _affbc ,nil ;case 2:_acag ,_gfef :=_ddba (_eaage );if _gfef !=nil {return nil ,_gfef ;
};_acag .PdfPattern =_affbc ;_affbc ._adgca =_acag ;return _affbc ,nil ;};return nil ,_cfe .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fgcf :=&PdfColorspaceSpecialSeparation {};return _fgcf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_egddgg *Permissions )GetContainingPdfObject ()_ebc .PdfObject {return _egddgg ._aagddf };

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_aacf *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecac ,_fgbb :=_ebc .GetNumbersAsFloat (objects );
if _fgbb !=nil {return nil ,_fgbb ;};return _aacf .ColorFromFloats (_ecac );};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_fdacd :=Permissions {};_fdacd .DocMDP =docMdp ;_adcae :=_ebc .MakeDict ();_adcae .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_fdacd ._aagddf =_adcae ;return &_fdacd ;};func _cgaa (_cffba *_ebc .PdfObjectDictionary ,_dcfb *fontCommon ,_dcab _cgf .TextEncoder )(*pdfFontSimple ,error ){_aafae :=_fcebb (_dcfb );
_aafae ._fdfcb =_dcab ;if _dcab ==nil {_ffbb :=_cffba .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ffbb ==nil {_ffbb =_ebc .MakeInteger (0);};_aafae .FirstChar =_ffbb ;_cbaed ,_dgbd :=_ebc .GetIntVal (_ffbb );if !_dgbd {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ffbb );
return nil ,_ebc .ErrTypeError ;};_gddfc :=_cgf .CharCode (_cbaed );_ffbb =_cffba .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ffbb ==nil {_ffbb =_ebc .MakeInteger (255);};_aafae .LastChar =_ffbb ;_cbaed ,_dgbd =_ebc .GetIntVal (_ffbb );
if !_dgbd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ffbb );return nil ,_ebc .ErrTypeError ;
};_egddc :=_cgf .CharCode (_cbaed );_aafae ._bcbfd =make (map[_cgf .CharCode ]float64 );_ffbb =_cffba .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ffbb !=nil {_aafae .Widths =_ffbb ;_dgdgg ,_dafca :=_ebc .GetArray (_ffbb );if !_dafca {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ffbb );
return nil ,_ebc .ErrTypeError ;};_dcbgc ,_edbe :=_dgdgg .ToFloat64Array ();if _edbe !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_edbe ;};if len (_dcbgc )!=int (_egddc -_gddfc +1){_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_egddc -_gddfc +1,len (_dcbgc ));
return nil ,_ebc .ErrRangeError ;};for _gebc ,_edffg :=range _dcbgc {_aafae ._bcbfd [_gddfc +_cgf .CharCode (_gebc )]=_edffg ;};};};_aafae .Encoding =_ebc .TraceToDirectObject (_cffba .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _aafae ,nil ;
};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_dfeca *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dfeca .AlternateSpace ==nil {return nil ,_cfe .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _dfeca .AlternateSpace .ColorToRGB (color );};func _bedbae (_aeac *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_aeac }};

// SetContext set the sub annotation (context).
func (_fgcaeb *PdfShading )SetContext (ctx PdfModel ){_fgcaeb ._fcbcf =ctx };func (_gbabf *pdfFontSimple )addEncoding ()error {var (_cbge string ;_bcfbb map[_cgf .CharCode ]_cgf .GlyphName ;_feed _cgf .SimpleEncoder ;);if _gbabf .Encoder ()!=nil {_eaafe ,_fegec :=_gbabf .Encoder ().(_cgf .SimpleEncoder );
if _fegec &&_eaafe !=nil {_cbge =_eaafe .BaseName ();};};if _gbabf .Encoding !=nil {_aebe ,_dedd ,_fbbac :=_gbabf .getFontEncoding ();if _fbbac !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gbabf ._eeda ,_gbabf ._dccgbc ,_gbabf .Encoding ,_gbabf .Encoding ,_fbbac );
return _fbbac ;};if _aebe !=""{_cbge =_aebe ;};_bcfbb =_dedd ;_feed ,_fbbac =_cgf .NewSimpleTextEncoder (_cbge ,_bcfbb );if _fbbac !=nil {return _fbbac ;};};if _feed ==nil {_fbeea :=_gbabf ._adgc ;if _fbeea !=nil {switch _gbabf ._dccgbc {case "\u0054\u0079\u0070e\u0031":if _fbeea .fontFile !=nil &&_fbeea .fontFile ._bfccf !=nil {_ca .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_feed =_fbeea .fontFile ._bfccf ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fbeea ._feabd !=nil {_ca .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_eceafe ,_fbdecd :=_fbeea ._feabd .MakeEncoder ();
if _fbdecd ==nil {_feed =_eceafe ;};};};};};if _feed !=nil {if _bcfbb !=nil {_ca .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcfbb ,_gbabf .baseFields ());
_feed =_cgf .ApplyDifferences (_feed ,_bcfbb );};_gbabf .SetEncoder (_feed );};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_egae *PdfAnnotation )GetContainingPdfObject ()_ebc .PdfObject {return _egae ._daf };func _abdce ()string {_cacgf .Lock ();defer _cacgf .Unlock ();_cdecc :=_aa .GetLicenseKey ();if len (_ggcce )> 0&&(_cdecc .IsLicensed ()||_edgdf ){return _ggcce ;
};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eacda (),_cdecc .TypeToString ());};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_defg *_ebc .PdfIndirectObject ;};

// SetForms sets the Acroform for a PDF file.
func (_ffdda *PdfWriter )SetForms (form *PdfAcroForm )error {_ffdda ._bcecb =form ;return nil };

// String returns the name of the colorspace (DeviceN).
func (_ecefb *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _ebc .PdfObject ;IsMap _ebc .PdfObject ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_dcgcf *PdfPage )Duplicate ()*PdfPage {_cafga :=*_dcgcf ;_cafga ._gaefe =_ebc .MakeDict ();_cafga ._beacb =_ebc .MakeIndirectObject (_cafga ._gaefe );_cafga ._edgfd =*_cafga ._gaefe ;return &_cafga ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_gegb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gegb .AlternateSpace ==nil {return nil ,_cfe .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gegb .AlternateSpace .ColorToRGB (color );};func (_fabbb Image )getBase ()_cfef .ImageBase {return _cfef .NewImageBase (int (_fabbb .Width ),int (_fabbb .Height ),int (_fabbb .BitsPerComponent ),_fabbb .ColorComponents ,_fabbb .Data ,_fabbb ._afeca ,_fabbb ._facag );
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func (_gfccd *LTV )getCerts (_bfbca []*_c .Certificate )([][]byte ,error ){_gedbd :=make ([][]byte ,0,len (_bfbca ));for _ ,_bdfe :=range _bfbca {_gedbd =append (_gedbd ,_bdfe .Raw );};return _gedbd ,nil ;
};

// AddCustomInfo adds a custom info into document info dictionary.
func (_gdbdg *PdfInfo )AddCustomInfo (name string ,value string )error {if _gdbdg ._fefbe ==nil {_gdbdg ._fefbe =_ebc .MakeDict ();};if _ ,_gggf :=_dbdc [name ];_gggf {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_gdbdg ._fefbe .SetIfNotNil (*_ebc .MakeName (name ),_ebc .MakeString (value ));return nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _ebc .PdfObject ;MK _ebc .PdfObject ;A _ebc .PdfObject ;AA _ebc .PdfObject ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_edb *_ebc .PdfObjectDictionary ;_fbfe *_ebc .PdfIndirectObject ;};func _cfdcee (_caac *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_caac }};


// SetVersion sets the PDF version of the output file.
func (_becdf *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_becdf ._aeafa .Major =majorVersion ;_becdf ._aeafa .Minor =minorVersion ;};

// String returns a string representation of the field.
func (_bfabg *PdfField )String ()string {if _ggbag ,_fbec :=_bfabg .ToPdfObject ().(*_ebc .PdfIndirectObject );_fbec {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bfabg ._febf ,_ggbag .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_dfb *PdfActionGoToR )ToPdfObject ()_ebc .PdfObject {_dfb .PdfAction .ToPdfObject ();_dfg :=_dfb ._dc ;_aac :=_dfg .PdfObject .(*_ebc .PdfObjectDictionary );_aac .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeGoToR )));if _dfb .F !=nil {_aac .Set ("\u0046",_dfb .F .ToPdfObject ());
};_aac .SetIfNotNil ("\u0044",_dfb .D );_aac .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dfb .NewWindow );return _dfg ;};func (_fefdf *Image )resampleLowBits (_fccda []uint32 ){_ffgfg :=_cfef .BytesPerLine (int (_fefdf .Width ),int (_fefdf .BitsPerComponent ),_fefdf .ColorComponents );
_bada :=make ([]byte ,_fefdf .ColorComponents *_ffgfg *int (_fefdf .Height ));_bbbf :=int (_fefdf .BitsPerComponent )*_fefdf .ColorComponents *int (_fefdf .Width );_fffcc :=uint8 (8);var (_ebcbe ,_acgbd int ;_geab uint32 ;);for _ggefa :=0;_ggefa < int (_fefdf .Height );
_ggefa ++{_acgbd =_ggefa *_ffgfg ;for _cdef :=0;_cdef < _bbbf ;_cdef ++{_geab =_fccda [_ebcbe ];_fffcc -=uint8 (_fefdf .BitsPerComponent );_bada [_acgbd ]|=byte (_geab )<<_fffcc ;if _fffcc ==0{_fffcc =8;_acgbd ++;};_ebcbe ++;};};_fefdf .Data =_bada ;};


// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_eae :=NewPdfAction ();_ab :=&PdfActionSubmitForm {};_ab .PdfAction =_eae ;_eae .SetContext (_ab );return _ab ;};

// Fill populates `form` with values provided by `provider`.
func (_cbca *PdfAcroForm )Fill (provider FieldValueProvider )error {return _cbca .fill (provider ,nil )};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bbfa *PdfColorLab )GetNumComponents ()int {return 3};func (_fff *PdfReader )newPdfActionJavaScriptFromDict (_bbg *_ebc .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bbg .Get ("\u004a\u0053")},nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_becda *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _becda .flattenFieldsWithOpts (false ,appgen ,opts );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gadag *PdfColorspaceCalRGB )ToPdfObject ()_ebc .PdfObject {_fadd :=&_ebc .PdfObjectArray {};_fadd .Append (_ebc .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fdcf :=_ebc .MakeDict ();if _gadag .WhitePoint !=nil {_cecgc :=_ebc .MakeArray (_ebc .MakeFloat (_gadag .WhitePoint [0]),_ebc .MakeFloat (_gadag .WhitePoint [1]),_ebc .MakeFloat (_gadag .WhitePoint [2]));
_fdcf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cecgc );}else {_ca .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gadag .BlackPoint !=nil {_bcad :=_ebc .MakeArray (_ebc .MakeFloat (_gadag .BlackPoint [0]),_ebc .MakeFloat (_gadag .BlackPoint [1]),_ebc .MakeFloat (_gadag .BlackPoint [2]));_fdcf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bcad );
};if _gadag .Gamma !=nil {_caea :=_ebc .MakeArray (_ebc .MakeFloat (_gadag .Gamma [0]),_ebc .MakeFloat (_gadag .Gamma [1]),_ebc .MakeFloat (_gadag .Gamma [2]));_fdcf .Set ("\u0047\u0061\u006dm\u0061",_caea );};if _gadag .Matrix !=nil {_agacg :=_ebc .MakeArray (_ebc .MakeFloat (_gadag .Matrix [0]),_ebc .MakeFloat (_gadag .Matrix [1]),_ebc .MakeFloat (_gadag .Matrix [2]),_ebc .MakeFloat (_gadag .Matrix [3]),_ebc .MakeFloat (_gadag .Matrix [4]),_ebc .MakeFloat (_gadag .Matrix [5]),_ebc .MakeFloat (_gadag .Matrix [6]),_ebc .MakeFloat (_gadag .Matrix [7]),_ebc .MakeFloat (_gadag .Matrix [8]));
_fdcf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_agacg );};_fadd .Append (_fdcf );if _gadag ._fbfe !=nil {_gadag ._fbfe .PdfObject =_fadd ;return _gadag ._fbfe ;};return _fadd ;};var ErrColorOutOfRange =_cfe .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// ToPdfObject implements interface PdfModel.
func (_dca *PdfActionGoTo )ToPdfObject ()_ebc .PdfObject {_dca .PdfAction .ToPdfObject ();_adb :=_dca ._dc ;_adbb :=_adb .PdfObject .(*_ebc .PdfObjectDictionary );_adbb .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeGoTo )));_adbb .SetIfNotNil ("\u0044",_dca .D );
return _adb ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_ebc .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _ebc .PdfObject ;A _ebc .PdfObject ;SE _ebc .PdfObject ;C _ebc .PdfObject ;F _ebc .PdfObject ;
_gaab *_ebc .PdfIndirectObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fbdf *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_aeebc :=_fbdf .fill (provider ,appGen );if _aeebc !=nil {return _aeebc ;};if _ ,_cfddf :=provider .(FieldImageProvider );_cfddf {_aeebc =_fbdf .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _aeebc ;};

// ToPdfObject implements interface PdfModel.
func (_dgdggd *PdfTransformParamsDocMDP )ToPdfObject ()_ebc .PdfObject {_cefff :=_ebc .MakeDict ();_cefff .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dgdggd .Type );_cefff .SetIfNotNil ("\u0056",_dgdggd .V );_cefff .SetIfNotNil ("\u0050",_dgdggd .P );return _cefff ;
};

// ToPdfObject implements interface PdfModel.
func (_bgcd *PdfAnnotationPrinterMark )ToPdfObject ()_ebc .PdfObject {_bgcd .PdfAnnotation .ToPdfObject ();_ecbef :=_bgcd ._daf ;_dcd :=_ecbef .PdfObject .(*_ebc .PdfObjectDictionary );_dcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_dcd .SetIfNotNil ("\u004d\u004e",_bgcd .MN );return _ecbef ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bbcf *PdfPage )GetPageAsIndirectObject ()*_ebc .PdfIndirectObject {return _bbcf ._beacb };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_agacc *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdedg ,_gacf :=_ebc .GetNumbersAsFloat (objects );
if _gacf !=nil {return nil ,_gacf ;};return _agacc .ColorFromFloats (_gdedg );};func _bdfcg (_cgea *_ebc .PdfObjectDictionary )(*PdfFieldText ,error ){_adbdd :=&PdfFieldText {};_adbdd .DA ,_ =_ebc .GetString (_cgea .Get ("\u0044\u0041"));_adbdd .Q ,_ =_ebc .GetInt (_cgea .Get ("\u0051"));
_adbdd .DS ,_ =_ebc .GetString (_cgea .Get ("\u0044\u0053"));_adbdd .RV =_cgea .Get ("\u0052\u0056");_adbdd .MaxLen ,_ =_ebc .GetInt (_cgea .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _adbdd ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_cege *PdfAppender )Write (w _eag .Writer )error {if _cege ._gcbd {return _cfe .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_cgcd :=NewPdfWriter ();_dcga ,_gfad :=_ebc .GetDict (_cgcd ._ecbba );if !_gfad {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bad ,_gfad :=_dcga .Get ("\u004b\u0069\u0064\u0073").(*_ebc .PdfObjectArray );if !_gfad {return _cfe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dcba ,_gfad :=_dcga .Get ("\u0043\u006f\u0075n\u0074").(*_ebc .PdfObjectInteger );if !_gfad {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dacf :=_cege ._ccf ._bfef ;_edce :=_dacf .GetTrailer ();if _edce ==nil {return _cfe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_adgf ,_gfad :=_ebc .GetIndirect (_edce .Get ("\u0052\u006f\u006f\u0074"));
if !_gfad {return _cfe .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_bfff ,_gfad :=_ebc .GetDict (_adgf );if !_gfad {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_adgf ,*_edce );
return _cfe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_ggde :=range _bfff .Keys (){if _cgcd ._aaefa .Get (_ggde )==nil {_fcceg :=_bfff .Get (_ggde );_cgcd ._aaefa .Set (_ggde ,_fcceg );};};if _cege ._bebg !=nil {if _cege ._bebg ._efeff {if _ceb :=_ebc .TraceToDirectObject (_cege ._bebg .ToPdfObject ());
!_ebc .IsNullObject (_ceb ){_cgcd ._aaefa .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ceb );_cege .updateObjectsDeep (_ceb ,nil );}else {_ca .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_cgcd ._aaefa .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_cege ._bebg .ToPdfObject ());_cege .updateObjectsDeep (_cege ._bebg .ToPdfObject (),nil );};};if _cege ._ggda !=nil {_cege .updateObjectsDeep (_cege ._ggda .ToPdfObject (),nil );
_cgcd ._aaefa .Set ("\u0044\u0053\u0053",_cege ._ggda .GetContainingPdfObject ());};if _cege ._ebca !=nil {_cgcd ._aaefa .Set ("\u0050\u0065\u0072m\u0073",_cege ._ebca .ToPdfObject ());_cege .updateObjectsDeep (_cege ._ebca .ToPdfObject (),nil );};if _cgcd ._aeafa .Major < 2{_cgcd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_cgcd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _fcee ,_fbf :=_ebc .GetDict (_edce .Get ("\u0049\u006e\u0066\u006f"));_fbf {if _becb ,_fgab :=_ebc .GetDict (_cgcd ._ebgcgg );_fgab {for _ ,_cfab :=range _fcee .Keys (){if _becb .Get (_cfab )==nil {_becb .Set (_cfab ,_fcee .Get (_cfab ));
};};};};if _cege ._eed !=nil {_cgcd ._ebgcgg =_ebc .MakeIndirectObject (_cege ._eed .ToPdfObject ());};_cege .addNewObject (_cgcd ._ebgcgg );_cege .addNewObject (_cgcd ._acbba );_eaeb :=false ;if len (_cege ._ccf .PageList )!=len (_cege ._dcbg ){_eaeb =true ;
}else {for _bbbgb :=range _cege ._ccf .PageList {switch {case _cege ._dcbg [_bbbgb ]==_cege ._ccf .PageList [_bbbgb ]:case _cege ._dcbg [_bbbgb ]==_cege .Reader .PageList [_bbbgb ]:default:_eaeb =true ;};if _eaeb {break ;};};};if _eaeb {_cege .updateObjectsDeep (_cgcd ._ecbba ,nil );
}else {_cege ._bba [_cgcd ._ecbba ]=struct{}{};};_cgcd ._ecbba .ObjectNumber =_cege .Reader ._ecbc .ObjectNumber ;_cege ._cce [_cgcd ._ecbba ]=_cege .Reader ._ecbc .ObjectNumber ;_cfafg :=[]_ebc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_edeg :=range _cege ._dcbg {_gbga :=_edeg .ToPdfObject ();*_dcba =*_dcba +1;if _ggcg ,_dege :=_gbga .(*_ebc .PdfIndirectObject );_dege &&_ggcg .GetParser ()==_cege ._ccf ._bfef {_bad .Append (&_ggcg .PdfObjectReference );continue ;};if _cged ,_cfeg :=_ebc .GetDict (_gbga );
_cfeg {_ddb ,_efdf :=_cged .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ebc .PdfIndirectObject );for _efdf {_ca .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ddb );_acdc ,_cade :=_ddb .PdfObject .(*_ebc .PdfObjectDictionary );
if !_cade {return _cfe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_gaaff :=range _cfafg {_ca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gaaff );if _afea :=_cged .Get (_gaaff );
_afea !=nil {_ca .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_edeg ._edgfd .Keys ())> 0&&!_eaeb {_acdcc :=_edeg ._edgfd ;if _gacd :=_acdcc .Get (_gaaff );_gacd !=nil {if _afea !=_gacd {_ca .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_gaaff ,_gacd );
_cged .Set (_gaaff ,_gacd );};};};continue ;};if _acbdb :=_acdc .Get (_gaaff );_acbdb !=nil {_ca .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gaaff );_cged .Set (_gaaff ,_acbdb );
};};_ddb ,_efdf =_acdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ebc .PdfIndirectObject );_ca .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_acdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};
_cged .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgcd ._ecbba );};_cege .updateObjectsDeep (_gbga ,nil );_bad .Append (_gbga );};if _ ,_bgccd :=_cege ._fgcb .Seek (0,_eag .SeekStart );_bgccd !=nil {return _bgccd ;};_bffdc :=make (map[SignatureHandler ]_eag .Writer );
_daae :=_ebc .MakeArray ();for _ ,_fcgg :=range _cege ._ccbc {if _gfd ,_gca :=_ebc .GetIndirect (_fcgg );_gca {if _eaef ,_abad :=_gfd .PdfObject .(*pdfSignDictionary );_abad {_cfafgc :=*_eaef ._cagff ;var _faa error ;_bffdc [_cfafgc ],_faa =_cfafgc .NewDigest (_eaef ._gffg );
if _faa !=nil {return _faa ;};_daae .Append (_ebc .MakeInteger (0xfffff),_ebc .MakeInteger (0xfffff));};};};if _daae .Len ()> 0{_daae .Append (_ebc .MakeInteger (0xfffff),_ebc .MakeInteger (0xfffff));};for _ ,_ggdg :=range _cege ._ccbc {if _fgca ,_ddcaf :=_ebc .GetIndirect (_ggdg );
_ddcaf {if _fecf ,_aaad :=_fgca .PdfObject .(*pdfSignDictionary );_aaad {_fecf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_daae );};};};_cgda :=len (_bffdc )> 0;var _cccgb _eag .Reader =_cege ._fgcb ;if _cgda {_aeeb :=make ([]_eag .Writer ,0,len (_bffdc ));
for _ ,_babd :=range _bffdc {_aeeb =append (_aeeb ,_babd );};_cccgb =_eag .TeeReader (_cege ._fgcb ,_eag .MultiWriter (_aeeb ...));};_dbcaf ,_bfb :=_eag .Copy (w ,_cccgb );if _bfb !=nil {return _bfb ;};if len (_cege ._ccbc )==0{return nil ;};_cgcd ._eaeecb =_dbcaf ;
_cgcd .ObjNumOffset =_cege ._faf ;_cgcd ._ffdcc =true ;_cgcd ._bfede =_cege ._dacd ;_cgcd ._eebgb =_cege ._deaeb ;_cgcd ._fabfae =_cege ._ecgf ;_cgcd ._aeafa =_cege ._ccf .PdfVersion ();_cgcd ._aeade =_cege ._cce ;_cgcd ._aacgc =_cege ._fdac .GetCrypter ();
_cgcd ._daeff =_cege ._fdac .GetEncryptObj ();_agcb :=_cege ._fdac .GetXrefType ();if _agcb !=nil {_fafa :=*_agcb ==_ebc .XrefTypeObjectStream ;_cgcd ._acgegc =&_fafa ;};_cgcd ._bbfbd =map[_ebc .PdfObject ]struct{}{};_cgcd ._gfbe =[]_ebc .PdfObject {};
for _ ,_daag :=range _cege ._ccbc {if _ ,_decfc :=_cege ._bba [_daag ];_decfc {continue ;};_cgcd .addObject (_daag );};_dceb :=w ;if _cgda {_dceb =_ed .NewBuffer (nil );};if _cege ._dff !=""&&_cgcd ._aacgc ==nil {_cgcd .Encrypt ([]byte (_cege ._dff ),[]byte (_cege ._dff ),_cege ._dbeb );
};if _fdfb :=_edce .Get ("\u0049\u0044");_fdfb !=nil {if _ddbc ,_gfadb :=_ebc .GetArray (_fdfb );_gfadb {_cgcd ._fgbaa =_ddbc ;};};if _aggd :=_cgcd .Write (_dceb );_aggd !=nil {return _aggd ;};if _cgda {_ddea :=_dceb .(*_ed .Buffer ).Bytes ();_ccfa :=_ebc .MakeArray ();
var _facd []*pdfSignDictionary ;var _ecef int64 ;for _ ,_abac :=range _cgcd ._gfbe {if _aada ,_aacce :=_ebc .GetIndirect (_abac );_aacce {if _bbd ,_dfec :=_aada .PdfObject .(*pdfSignDictionary );_dfec {_facd =append (_facd ,_bbd );_agf :=_bbd ._efaad +int64 (_bbd ._cdcb );
_ccfa .Append (_ebc .MakeInteger (_ecef ),_ebc .MakeInteger (_agf -_ecef ));_ecef =_bbd ._efaad +int64 (_bbd ._dggeg );};};};_ccfa .Append (_ebc .MakeInteger (_ecef ),_ebc .MakeInteger (_dbcaf +int64 (len (_ddea ))-_ecef ));_gdaf :=[]byte (_ccfa .WriteString ());
for _ ,_beacf :=range _facd {_cbdb :=int (_beacf ._efaad -_dbcaf );for _fdbfe :=_beacf ._edegd ;_fdbfe < _beacf ._aagaa ;_fdbfe ++{_ddea [_cbdb +_fdbfe ]=' ';};_dceg :=_ddea [_cbdb +_beacf ._edegd :_cbdb +_beacf ._aagaa ];copy (_dceg ,_gdaf );};var _bagg int ;
for _ ,_cadb :=range _facd {_cegea :=int (_cadb ._efaad -_dbcaf );_fcff :=_ddea [_bagg :_cegea +_cadb ._cdcb ];_ecff :=*_cadb ._cagff ;_bffdc [_ecff ].Write (_fcff );_bagg =_cegea +_cadb ._dggeg ;};for _ ,_dcbff :=range _facd {_baga :=_ddea [_bagg :];_bbcg :=*_dcbff ._cagff ;
_bffdc [_bbcg ].Write (_baga );};for _ ,_aagc :=range _facd {_abge :=int (_aagc ._efaad -_dbcaf );_gaaa :=*_aagc ._cagff ;_eebf :=_bffdc [_gaaa ];if _acge :=_gaaa .Sign (_aagc ._gffg ,_eebf );_acge !=nil {return _acge ;};_aagc ._gffg .ByteRange =_ccfa ;
_cdga :=[]byte (_aagc ._gffg .Contents .WriteString ());for _ebec :=_aagc ._edegd ;_ebec < _aagc ._aagaa ;_ebec ++{_ddea [_abge +_ebec ]=' ';};for _ggf :=_aagc ._cdcb ;_ggf < _aagc ._dggeg ;_ggf ++{_ddea [_abge +_ggf ]=' ';};_bddc :=_ddea [_abge +_aagc ._edegd :_abge +_aagc ._aagaa ];
copy (_bddc ,_gdaf );_bddc =_ddea [_abge +_aagc ._cdcb :_abge +_aagc ._dggeg ];copy (_bddc ,_cdga );};_dgfd :=_ed .NewBuffer (_ddea );_ ,_bfb =_eag .Copy (w ,_dgfd );if _bfb !=nil {return _bfb ;};};_cege ._gcbd =true ;return nil ;};func (_gadbf *PdfWriter )writeObject (_aaged int ,_bbag _ebc .PdfObject ){_ca .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_aaged );
if _abdg ,_dgffe :=_bbag .(*_ebc .PdfIndirectObject );_dgffe {_gadbf ._bdgf [_aaged ]=crossReference {Type :1,Offset :_gadbf ._facg ,Generation :_abdg .GenerationNumber };_debgec :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_aaged );if _fcdbe ,_daecec :=_abdg .PdfObject .(*pdfSignDictionary );
_daecec {_fcdbe ._efaad =_gadbf ._facg +int64 (len (_debgec ));};if _abdg .PdfObject ==nil {_ca .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_abdg .PdfObject =_ebc .MakeNull ();};_debgec +=_abdg .PdfObject .WriteString ();_debgec +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_gadbf .writeString (_debgec );return ;};if _ggea ,_affce :=_bbag .(*_ebc .PdfObjectStream );_affce {_gadbf ._bdgf [_aaged ]=crossReference {Type :1,Offset :_gadbf ._facg ,Generation :_ggea .GenerationNumber };
_dbfdf :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_aaged );_dbfdf +=_ggea .PdfObjectDictionary .WriteString ();_dbfdf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gadbf .writeString (_dbfdf );_gadbf .writeBytes (_ggea .Stream );
_gadbf .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _aegce ,_bbabf :=_bbag .(*_ebc .PdfObjectStreams );_bbabf {_gadbf ._bdgf [_aaged ]=crossReference {Type :1,Offset :_gadbf ._facg ,Generation :_aegce .GenerationNumber };
_babab :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_aaged );var _fcgge []string ;var _febfd string ;var _eeeeca int64 ;for _bbcgg ,_gcgbd :=range _aegce .Elements (){_bgdecb ,_bgbbbd :=_gcgbd .(*_ebc .PdfIndirectObject );if !_bgbbbd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_aaged ,_gcgbd );
continue ;};_eaeacg :=_bgdecb .PdfObject .WriteString ()+"\u0020";_febfd =_febfd +_eaeacg ;_fcgge =append (_fcgge ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_bgdecb .ObjectNumber ,_eeeeca ));_gadbf ._bdgf [int (_bgdecb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_aaged ,Index :_bbcgg };
_eeeeca =_eeeeca +int64 (len ([]byte (_eaeacg )));};_cbggc :=_ea .Join (_fcgge ,"\u0020")+"\u0020";_ffgdf :=_ebc .NewFlateEncoder ();_gbdbae :=_ffgdf .MakeStreamDict ();_gbdbae .Set (_ebc .PdfObjectName ("\u0054\u0079\u0070\u0065"),_ebc .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_abeaae :=int64 (_aegce .Len ());_gbdbae .Set (_ebc .PdfObjectName ("\u004e"),_ebc .MakeInteger (_abeaae ));_caab :=int64 (len (_cbggc ));_gbdbae .Set (_ebc .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_ebc .MakeInteger (_caab ));_gecafc ,_ :=_ffgdf .EncodeBytes ([]byte (_cbggc +_febfd ));
_ccdb :=int64 (len (_gecafc ));_gbdbae .Set (_ebc .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_ebc .MakeInteger (_ccdb ));_babab +=_gbdbae .WriteString ();_babab +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_gadbf .writeString (_babab );
_gadbf .writeBytes (_gecafc );_gadbf .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_gadbf .writeString (_bbag .WriteString ());};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fddfg *PdfShadingType1 )ToPdfObject ()_ebc .PdfObject {_fddfg .PdfShading .ToPdfObject ();_ddegbc ,_acfgb :=_fddfg .getShadingDict ();if _acfgb !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fddfg .Domain !=nil {_ddegbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fddfg .Domain );};if _fddfg .Matrix !=nil {_ddegbc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fddfg .Matrix );};if _fddfg .Function !=nil {if len (_fddfg .Function )==1{_ddegbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fddfg .Function [0].ToPdfObject ());
}else {_ffdfd :=_ebc .MakeArray ();for _ ,_edaeed :=range _fddfg .Function {_ffdfd .Append (_edaeed .ToPdfObject ());};_ddegbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffdfd );};};return _fddfg ._abfcbf ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfObject implements interface PdfModel.
func (_acgca *PdfFilespec )ToPdfObject ()_ebc .PdfObject {_eafb :=_acgca .getDict ();_eafb .Clear ();_eafb .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_eafb .SetIfNotNil ("\u0046\u0053",_acgca .FS );
_eafb .SetIfNotNil ("\u0046",_acgca .F );_eafb .SetIfNotNil ("\u0055\u0046",_acgca .UF );_eafb .SetIfNotNil ("\u0044\u004f\u0053",_acgca .DOS );_eafb .SetIfNotNil ("\u004d\u0061\u0063",_acgca .Mac );_eafb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_acgca .Unix );
_eafb .SetIfNotNil ("\u0049\u0044",_acgca .ID );_eafb .SetIfNotNil ("\u0056",_acgca .V );_eafb .SetIfNotNil ("\u0045\u0046",_acgca .EF );_eafb .SetIfNotNil ("\u0052\u0046",_acgca .RF );_eafb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_acgca .Desc );_eafb .SetIfNotNil ("\u0043\u0049",_acgca .CI );
return _acgca ._dacdc ;};

// ToPdfObject implements interface PdfModel.
func (_bdag *PdfAnnotationStrikeOut )ToPdfObject ()_ebc .PdfObject {_bdag .PdfAnnotation .ToPdfObject ();_bgeba :=_bdag ._daf ;_eaag :=_bgeba .PdfObject .(*_ebc .PdfObjectDictionary );_bdag .PdfAnnotationMarkup .appendToPdfDictionary (_eaag );_eaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_eaag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdag .QuadPoints );return _bgeba ;};func _caefb (_ccgfd *_ebc .PdfObjectDictionary ,_dacdd *fontCommon )(*pdfFontType3 ,error ){_cgeac :=_bedbae (_dacdd );_ceff :=_ccgfd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _ceff ==nil {_ceff =_ebc .MakeInteger (0);};_cgeac .FirstChar =_ceff ;_ggbad ,_bebb :=_ebc .GetIntVal (_ceff );if !_bebb {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ceff );
return nil ,_ebc .ErrTypeError ;};_aabe :=_cgf .CharCode (_ggbad );_ceff =_ccgfd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ceff ==nil {_ceff =_ebc .MakeInteger (255);};_cgeac .LastChar =_ceff ;_ggbad ,_bebb =_ebc .GetIntVal (_ceff );
if !_bebb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ceff );return nil ,_ebc .ErrTypeError ;
};_bddf :=_cgf .CharCode (_ggbad );_ceff =_ccgfd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ceff !=nil {_cgeac .Resources =_ceff ;};_ceff =_ccgfd .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _ceff ==nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_ceff );
return nil ,_ebc .ErrNotSupported ;};_cgeac .CharProcs =_ceff ;_ceff =_ccgfd .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _ceff ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_ceff );
return nil ,_ebc .ErrNotSupported ;};_cgeac .FontMatrix =_ceff ;_cgeac ._gdege =make (map[_cgf .CharCode ]float64 );_ceff =_ccgfd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ceff !=nil {_cgeac .Widths =_ceff ;_cfed ,_egbg :=_ebc .GetArray (_ceff );
if !_egbg {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ceff );return nil ,_ebc .ErrTypeError ;
};_eedde ,_dggfa :=_cfed .ToFloat64Array ();if _dggfa !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dggfa ;};if len (_eedde )!=int (_bddf -_aabe +1){_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bddf -_aabe +1,len (_eedde ));
return nil ,_ebc .ErrRangeError ;};_ecdf ,_egbg :=_ebc .GetArray (_cgeac .FontMatrix );if !_egbg {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ecdf );
return nil ,_dggfa ;};_eccg ,_dggfa :=_ecdf .ToFloat64Array ();if _dggfa !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dggfa ;};_adad :=_ad .NewMatrix (_eccg [0],_eccg [1],_eccg [2],_eccg [3],_eccg [4],_eccg [5]);for _bcege ,_dgag :=range _eedde {_ggaea ,_ :=_adad .Transform (_dgag ,_dgag );_cgeac ._gdege [_aabe +_cgf .CharCode (_bcege )]=_ggaea ;};};_cgeac .Encoding =_ebc .TraceToDirectObject (_ccgfd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_eggd :=_ccgfd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _eggd !=nil {_cgeac ._gfcc =_ebc .TraceToDirectObject (_eggd );_gaefd ,_aefac :=_bcddf (_cgeac ._gfcc ,&_cgeac .fontCommon );if _aefac !=nil {return nil ,_aefac ;};_cgeac ._fcffc =_gaefd ;
};if _gbbc :=_cgeac ._fcffc ;_gbbc !=nil {_cgeac ._dbbe =_cgf .NewCMapEncoder ("",nil ,_gbbc );}else {_cgeac ._dbbe =_cgf .NewPdfDocEncoder ();};return _cgeac ,nil ;};

// ToInteger convert to an integer format.
func (_gdecg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ebag :=_bcd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ebag *_gdecg .A ()),uint32 (_ebag *_gdecg .B ()),uint32 (_ebag *_gdecg .C ())};};type fontCommon struct{_eeda string ;_dccgbc string ;
_ccef string ;_gfcc _ebc .PdfObject ;_fcffc *_ag .CMap ;_adgc *PdfFontDescriptor ;_bdadb int64 ;};func (_cdbdd *pdfFontType0 )subsetRegistered ()error {_fabb ,_gbade :=_cdbdd .DescendantFont ._cbfg .(*pdfCIDFontType2 );if !_gbade {_ca .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_cdbdd .DescendantFont );
return nil ;};if _fabb ==nil {return nil ;};if _fabb ._adgc ==nil {_ca .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _cdbdd ._bbdffb ==nil {_ca .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gcgdd ,_gbade :=_ebc .GetStream (_fabb ._adgc .FontFile2 );if !_gbade {_ca .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cfe .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cbae ,_bgdae :=_ebc .DecodeStream (_gcgdd );if _bgdae !=nil {_ca .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bgdae );
return _bgdae ;};_bdaga ,_bgdae :=_ddf .Parse (_ed .NewReader (_cbae ));if _bgdae !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gcgdd .Stream ));
return _bgdae ;};var _ddge []rune ;var _eebc *_ddf .Font ;switch _gcag :=_cdbdd ._bbdffb .(type ){case *_cgf .TrueTypeFontEncoder :_ddge =_gcag .RegisteredRunes ();_eebc ,_bgdae =_bdaga .SubsetKeepRunes (_ddge );if _bgdae !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdae );
return _bgdae ;};_gcag .SubsetRegistered ();case *_cgf .IdentityEncoder :_ddge =_gcag .RegisteredRunes ();_faffg :=make ([]_ddf .GlyphIndex ,len (_ddge ));for _efdc ,_gcge :=range _ddge {_faffg [_efdc ]=_ddf .GlyphIndex (_gcge );};_eebc ,_bgdae =_bdaga .SubsetKeepIndices (_faffg );
if _bgdae !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdae );return _bgdae ;};case _cgf .SimpleEncoder :_cdcc :=_gcag .Charcodes ();for _ ,_gfgd :=range _cdcc {_acbe ,_aaaece :=_gcag .CharcodeToRune (_gfgd );if !_aaaece {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gfgd );
continue ;};_ddge =append (_ddge ,_acbe );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_cdbdd ._bbdffb );
};var _eadab _ed .Buffer ;_bgdae =_eebc .Write (&_eadab );if _bgdae !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdae );return _bgdae ;};if _cdbdd ._fcffc !=nil {_cacgc :=make (map[_ag .CharCode ]rune ,len (_ddge ));for _ ,_bffga :=range _ddge {_ceeab ,_abgb :=_cdbdd ._bbdffb .RuneToCharcode (_bffga );
if !_abgb {continue ;};_cacgc [_ag .CharCode (_ceeab )]=_bffga ;};_cdbdd ._fcffc =_ag .NewToUnicodeCMap (_cacgc );};_gcgdd ,_bgdae =_ebc .MakeStream (_eadab .Bytes (),_ebc .NewFlateEncoder ());if _bgdae !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdae );
return _bgdae ;};_gcgdd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ebc .MakeInteger (int64 (_eadab .Len ())));if _afad ,_eabb :=_ebc .GetStream (_fabb ._adgc .FontFile2 );_eabb {*_afad =*_gcgdd ;}else {_fabb ._adgc .FontFile2 =_gcgdd ;};_gaafd :=_cgede ();
if len (_cdbdd ._eeda )> 0{_cdbdd ._eeda =_fgcbc (_cdbdd ._eeda ,_gaafd );};if len (_fabb ._eeda )> 0{_fabb ._eeda =_fgcbc (_fabb ._eeda ,_gaafd );};if len (_cdbdd ._ccef )> 0{_cdbdd ._ccef =_fgcbc (_cdbdd ._ccef ,_gaafd );};if _fabb ._adgc !=nil {_deagc ,_acgg :=_ebc .GetName (_fabb ._adgc .FontName );
if _acgg &&len (_deagc .String ())> 0{_dffb :=_fgcbc (_deagc .String (),_gaafd );_fabb ._adgc .FontName =_ebc .MakeName (_dffb );};};return nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_fgbe *PdfReader )GetOutlines ()(*Outline ,error ){if _fgbe ==nil {return nil ,_cfe .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_aaeddc :=_fgbe .GetOutlineTree ();if _aaeddc ==nil {return nil ,_cfe .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fdbde func (_fgfef *PdfOutlineTreeNode ,_baaf *[]*OutlineItem );_fdbde =func (_aaeef *PdfOutlineTreeNode ,_dcdcf *[]*OutlineItem ){if _aaeef ==nil {return ;};if _aaeef ._degdbf ==nil {_ca .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _egedd *OutlineItem ;if _aaegb ,_efbga :=_aaeef ._degdbf .(*PdfOutlineItem );_efbga {_geacd :=_aaegb .Dest ;if (_geacd ==nil ||_ebc .IsNullObject (_geacd ))&&_aaegb .A !=nil {if _afbdf ,_fbcdf :=_ebc .GetDict (_aaegb .A );_fbcdf {if _fggaade ,_dcgea :=_ebc .GetArray (_afbdf .Get ("\u0044"));
_dcgea {_geacd =_fggaade ;}else {_egec ,_ecbee :=_ebc .GetString (_afbdf .Get ("\u0044"));if !_ecbee {return ;};_ddgfe ,_ecbee :=_fgbe ._fcdfa .Get ("\u004e\u0061\u006de\u0073").(*_ebc .PdfObjectReference );if !_ecbee {return ;};_acgf ,_egcc :=_fgbe ._bfef .LookupByReference (*_ddgfe );
if _egcc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_egcc .Error ());
return ;};_eddaf ,_ecbee :=_acgf .(*_ebc .PdfIndirectObject );if !_ecbee {return ;};_dafea :=map[_ebc .PdfObject ]struct{}{};_egcc =_fgbe .buildNameNodes (_eddaf ,_dafea );if _egcc !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_egcc .Error ());
return ;};for _beeb :=range _dafea {_daeaf ,_gaec :=_ebc .GetDict (_beeb );if !_gaec {continue ;};_ebedfa ,_gaec :=_ebc .GetArray (_daeaf .Get ("\u004e\u0061\u006de\u0073"));if !_gaec {continue ;};for _dcaeg ,_dfeeb :=range _ebedfa .Elements (){switch _dfeeb .(type ){case *_ebc .PdfObjectString :if _dfeeb .String ()==_egec .String (){if _gcbfe :=_ebedfa .Get (_dcaeg +1);
_gcbfe !=nil {if _febed ,_agebb :=_ebc .GetDict (_gcbfe );_agebb {_geacd =_febed .Get ("\u0044");break ;};};};};};};};};};var _gfcbb OutlineDest ;if _geacd !=nil &&!_ebc .IsNullObject (_geacd ){if _cagge ,_deffde :=_abgbe (_geacd ,_fgbe );_deffde ==nil {_gfcbb =*_cagge ;
}else {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_geacd ,_deffde );
};};_egedd =NewOutlineItem (_aaegb .Title .Decoded (),_gfcbb );*_dcdcf =append (*_dcdcf ,_egedd );if _aaegb .Next !=nil {_fdbde (_aaegb .Next ,_dcdcf );};};if _aaeef .First !=nil {if _egedd !=nil {_dcdcf =&_egedd .Entries ;};_fdbde (_aaeef .First ,_dcdcf );
};};_ebgb :=NewOutline ();_fdbde (_aaeddc ,&_ebgb .Entries );return _ebgb ,nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gccde *PdfPageResources )AddExtGState (gsName _ebc .PdfObjectName ,gsDict _ebc .PdfObject )error {if _gccde .ExtGState ==nil {_gccde .ExtGState =_ebc .MakeDict ();};_eedg :=_gccde .ExtGState ;_gbbed ,_ebfd :=_ebc .TraceToDirectObject (_eedg ).(*_ebc .PdfObjectDictionary );
if !_ebfd {_ca .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_eedg ,_ebc .TraceToDirectObject (_eedg ));
return _ebc .ErrTypeError ;};_gbbed .Set (gsName ,gsDict );return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_eaaf *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_aadg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_aadg .N =N ;return _aadg ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dagff *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_afcbg *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _afcbg ._adgc };func _ddfg (_bbbg *PdfPage )map[_ebc .PdfObjectName ]_ebc .PdfObject {_fceb :=make (map[_ebc .PdfObjectName ]_ebc .PdfObject );
if _bbbg .Resources ==nil {return _fceb ;};if _bbbg .Resources .Font !=nil {if _gebf ,_agc :=_ebc .GetDict (_bbbg .Resources .Font );_agc {for _ ,_fbg :=range _gebf .Keys (){_fceb [_fbg ]=_gebf .Get (_fbg );};};};if _bbbg .Resources .ExtGState !=nil {if _acbf ,_fabg :=_ebc .GetDict (_bbbg .Resources .ExtGState );
_fabg {for _ ,_bbbb :=range _acbf .Keys (){_fceb [_bbbb ]=_acbf .Get (_bbbb );};};};if _bbbg .Resources .XObject !=nil {if _deaa ,_eafe :=_ebc .GetDict (_bbbg .Resources .XObject );_eafe {for _ ,_addd :=range _deaa .Keys (){_fceb [_addd ]=_deaa .Get (_addd );
};};};if _bbbg .Resources .Pattern !=nil {if _afcf ,_beaca :=_ebc .GetDict (_bbbg .Resources .Pattern );_beaca {for _ ,_daad :=range _afcf .Keys (){_fceb [_daad ]=_afcf .Get (_daad );};};};if _bbbg .Resources .Shading !=nil {if _cfafcg ,_eaacf :=_ebc .GetDict (_bbbg .Resources .Shading );
_eaacf {for _ ,_eda :=range _cfafcg .Keys (){_fceb [_eda ]=_cfafcg .Get (_eda );};};};if _bbbg .Resources .ProcSet !=nil {if _aece ,_fcec :=_ebc .GetDict (_bbbg .Resources .ProcSet );_fcec {for _ ,_bfad :=range _aece .Keys (){_fceb [_bfad ]=_aece .Get (_bfad );
};};};if _bbbg .Resources .Properties !=nil {if _gbffc ,_gcfe :=_ebc .GetDict (_bbbg .Resources .Properties );_gcfe {for _ ,_gafc :=range _gbffc .Keys (){_fceb [_gafc ]=_gbffc .Get (_gafc );};};};return _fceb ;};

// ToPdfObject implements interface PdfModel.
func (_gfaa *PdfAnnotationTrapNet )ToPdfObject ()_ebc .PdfObject {_gfaa .PdfAnnotation .ToPdfObject ();_adge :=_gfaa ._daf ;_abf :=_adge .PdfObject .(*_ebc .PdfObjectDictionary );_abf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _adge ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gfc :=NewPdfAnnotation ();_cfd :=&PdfAnnotationFreeText {};_cfd .PdfAnnotation =_gfc ;_cfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfc .SetContext (_cfd );return _cfd ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_caef :=NewPdfAnnotation ();_egd :=&PdfAnnotationCircle {};_egd .PdfAnnotation =_caef ;_egd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_caef .SetContext (_egd );return _egd ;};func _aefe (_bgcg []byte )(_dfdd ,_egbf string ,_ccgaf error ){_ca .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bgcg ));
_feccb :=_eeaed .FindIndex (_bgcg );if _feccb ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_ebc .ErrTypeError ;};_gddfa :=_feccb [1];_afeff :=_ea .Index (string (_bgcg [_gddfa :]),_ffcde );if _afeff < 0{_dfdd =string (_bgcg [_gddfa :]);return _dfdd ,"",nil ;};_gcaf :=_gddfa +_afeff ;_dfdd =string (_bgcg [_gddfa :_gcaf ]);_defba :=_gcaf ;
_afeff =_ea .Index (string (_bgcg [_defba :]),_ebgcg );if _afeff < 0{_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccgaf );
return "","",_ebc .ErrTypeError ;};_fccbg :=_defba +_afeff ;_egbf =string (_bgcg [_defba :_fccbg ]);return _dfdd ,_egbf ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_bdbed *PdfFont )CharcodesToUnicode (charcodes []_cgf .CharCode )[]rune {_efac ,_ ,_ :=_bdbed .CharcodesToUnicodeWithStats (charcodes );return _efac ;};func _cgfde (_cdfa _ge .StdFont )pdfFontSimple {_ccdc :=_cdfa .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_dccgbc :"\u0054\u0079\u0070e\u0031",_eeda :_cdfa .Name ()},_ddaf :_cdfa .GetMetricsTable (),_cbfc :&PdfFontDescriptor {FontName :_ebc .MakeName (string (_ccdc .Name )),FontFamily :_ebc .MakeName (_ccdc .Family ),FontWeight :_ebc .MakeFloat (float64 (_ccdc .Weight )),Flags :_ebc .MakeInteger (int64 (_ccdc .Flags )),FontBBox :_ebc .MakeArrayFromFloats (_ccdc .BBox [:]),ItalicAngle :_ebc .MakeFloat (_ccdc .ItalicAngle ),Ascent :_ebc .MakeFloat (_ccdc .Ascent ),Descent :_ebc .MakeFloat (_ccdc .Descent ),CapHeight :_ebc .MakeFloat (_ccdc .CapHeight ),XHeight :_ebc .MakeFloat (_ccdc .XHeight ),StemV :_ebc .MakeFloat (_ccdc .StemV ),StemH :_ebc .MakeFloat (_ccdc .StemH )},_fdfcb :_cdfa .Encoder ()};
};func (_fagc *PdfReader )newPdfAnnotationRichMediaFromDict (_abgga *_ebc .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bffd :=&PdfAnnotationRichMedia {};_bffd .RichMediaSettings =_abgga .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_bffd .RichMediaContent =_abgga .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bffd ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_dbgg *pdfFontSimple )ToPdfObject ()_ebc .PdfObject {if _dbgg ._aafg ==nil {_dbgg ._aafg =&_ebc .PdfIndirectObject {};};_bbef :=_dbgg .baseFields ().asPdfObjectDictionary ("");_dbgg ._aafg .PdfObject =_bbef ;if _dbgg .FirstChar !=nil {_bbef .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_dbgg .FirstChar );
};if _dbgg .LastChar !=nil {_bbef .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_dbgg .LastChar );};if _dbgg .Widths !=nil {_bbef .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_dbgg .Widths );};if _dbgg .Encoding !=nil {_bbef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbgg .Encoding );
}else if _dbgg ._fedce !=nil {_cdcg :=_dbgg ._fedce .ToPdfObject ();if _cdcg !=nil {_bbef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cdcg );};};return _dbgg ._aafg ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bbcbe *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggdc ,_fdec :=color .(*PdfColorDeviceCMYK );if !_fdec {_ca .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcdb :=_ggdc .C ();_abfd :=_ggdc .M ();_fggb :=_ggdc .Y ();_bfc :=_ggdc .K ();_fcdb =_fcdb *(1-_bfc )+_bfc ;_abfd =_abfd *(1-_bfc )+_bfc ;
_fggb =_fggb *(1-_bfc )+_bfc ;_cffe :=1-_fcdb ;_aaed :=1-_abfd ;_dcdb :=1-_fggb ;return NewPdfColorDeviceRGB (_cffe ,_aaed ,_dcdb ),nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_ebc .PdfObjectBool ;SigFlags *_ebc .PdfObjectInteger ;CO *_ebc .PdfObjectArray ;DR *PdfPageResources ;DA *_ebc .PdfObjectString ;Q *_ebc .PdfObjectInteger ;XFA _ebc .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _ebc .PdfObject ;_aceeg *_ebc .PdfIndirectObject ;_efeff bool ;};func (_fcafe *LTV )getOCSPs (_edac []*_c .Certificate ,_dadac map[string ]*_c .Certificate )([][]byte ,error ){_gfgf :=make ([][]byte ,0,len (_edac ));for _ ,_agfbd :=range _edac {for _ ,_gfdf :=range _agfbd .OCSPServer {if _fcafe .CertClient .IsCA (_agfbd ){continue ;
};_gedgd ,_fgfd :=_dadac [_agfbd .Issuer .CommonName ];if !_fgfd {_ca .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_cdcab ,_aagdd :=_fcafe .OCSPClient .MakeRequest (_gfdf ,_agfbd ,_gedgd );if _aagdd !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_aagdd );
continue ;};_gfgf =append (_gfgf ,_cdcab );};};return _gfgf ,nil ;};func (_fbgb *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_ebc .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_afd *PdfColorspaceLab )DecodeArray ()[]float64 {_gcfef :=[]float64 {0,100};if _afd .Range !=nil &&len (_afd .Range )==4{_gcfef =append (_gcfef ,_afd .Range ...);}else {_gcfef =append (_gcfef ,-100,100,-100,100);};return _gcfef ;};func (_dda *PdfReader )newPdfActionMovieFromDict (_dgaf *_ebc .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dgaf .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dgaf .Get ("\u0054"),Operation :_dgaf .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_febaf *PdfReader )newPdfAnnotationPolyLineFromDict (_dgce *_ebc .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_feg :=PdfAnnotationPolyLine {};_egde ,_gdbc :=_febaf .newPdfAnnotationMarkupFromDict (_dgce );if _gdbc !=nil {return nil ,_gdbc ;
};_feg .PdfAnnotationMarkup =_egde ;_feg .Vertices =_dgce .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_feg .LE =_dgce .Get ("\u004c\u0045");_feg .BS =_dgce .Get ("\u0042\u0053");_feg .IC =_dgce .Get ("\u0049\u0043");_feg .BE =_dgce .Get ("\u0042\u0045");
_feg .IT =_dgce .Get ("\u0049\u0054");_feg .Measure =_dgce .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_feg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eace *PdfAnnotationStamp )ToPdfObject ()_ebc .PdfObject {_eace .PdfAnnotation .ToPdfObject ();_agdfc :=_eace ._daf ;_bedbc :=_agdfc .PdfObject .(*_ebc .PdfObjectDictionary );_eace .PdfAnnotationMarkup .appendToPdfDictionary (_bedbc );_bedbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0053\u0074\u0061m\u0070"));
_bedbc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eace .Name );return _agdfc ;};

// SetName sets the `Name` field of the signature.
func (_cccab *PdfSignature )SetName (name string ){_cccab .Name =_ebc .MakeString (name )};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gedc :=&PdfFilespec {};_gedc ._dacdc =_ebc .MakeIndirectObject (_ebc .MakeDict ());return _gedc ;};

// HasFontByName checks if has font resource by name.
func (_eeeb *PdfPage )HasFontByName (name _ebc .PdfObjectName )bool {_agfcb ,_fbbbb :=_eeeb .Resources .Font .(*_ebc .PdfObjectDictionary );if !_fbbbb {return false ;};if _aadc :=_agfcb .Get (name );_aadc !=nil {return true ;};return false ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_edcgc *PdfPattern )GetContainingPdfObject ()_ebc .PdfObject {return _edcgc ._bcgg };

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_eeecc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_cdge :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_fcfgf ,_cefe :=_eeecc .GetNumPages ();if _cefe !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefe );
return nil ,_cefe ;};for _efeb :=1;_efeb <=_fcfgf ;_efeb ++{_eadgfa ,_agadc :=_eeecc .GetPage (_efeb );if _agadc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agadc );return nil ,_agadc ;};if opts .PageProcessCallback !=nil {_agadc =opts .PageProcessCallback (_efeb ,_eadgfa );
if _agadc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agadc );return nil ,_agadc ;};}else if opts .PageCallback !=nil {opts .PageCallback (_efeb ,_eadgfa );};_agadc =_cdge .AddPage (_eadgfa );if _agadc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agadc );
return nil ,_agadc ;};};_cdge ._aeafa =_eeecc .PdfVersion ();if !opts .SkipInfo {_eeaa ,_gebdf :=_eeecc .GetPdfInfo ();if _gebdf !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gebdf );}else {_cdge ._ebgcgg .PdfObject =_eeaa .ToPdfObject ();
};};if !opts .SkipMetadata {if _cccegb :=_eeecc ._fcdfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cccegb !=nil {if _dgec :=_cdge .SetCatalogMetadata (_cccegb );_dgec !=nil {return nil ,_dgec ;};};};if !opts .SkipAcroForm {_afcd :=_cdge .SetForms (_eeecc .AcroForm );
if _afcd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afcd );return nil ,_afcd ;};};if !opts .SkipOutlines {_cdge .AddOutlineTree (_eeecc .GetOutlineTree ());};if !opts .SkipOCProperties {_abgf ,_eacg :=_eeecc .GetOCProperties ();
if _eacg !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eacg );}else {_eacg =_cdge .SetOCProperties (_abgf );if _eacg !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eacg );};};};if !opts .SkipPageLabels {_agbef ,_eeffc :=_eeecc .GetPageLabels ();
if _eeffc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeffc );}else {_eeffc =_cdge .SetPageLabels (_agbef );if _eeffc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeffc );};};};if !opts .SkipNamedDests {_agedc ,_bfcfd :=_eeecc .GetNamedDestinations ();
if _bfcfd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcfd );}else {_bfcfd =_cdge .SetNamedDestinations (_agedc );if _bfcfd !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcfd );};};};if !opts .SkipNameDictionary {_ffged ,_adgcc :=_eeecc .GetNameDictionary ();
if _adgcc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adgcc );}else {_adgcc =_cdge .SetNameDictionary (_ffged );if _adgcc !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adgcc );};};};if !opts .SkipRotation &&_eeecc .Rotate !=nil {if _afagg :=_cdge .SetRotation (*_eeecc .Rotate );
_afagg !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afagg );};};return &_cdge ,nil ;};var _efgg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// WriteString outputs the object as it is to be written to file.
func (_gagca *pdfSignDictionary )WriteString ()string {_gagca ._cdcb =0;_gagca ._dggeg =0;_gagca ._edegd =0;_gagca ._aagaa =0;_abfda :=_ed .NewBuffer (nil );_abfda .WriteString ("\u003c\u003c");for _ ,_dfebe :=range _gagca .Keys (){_bcadd :=_gagca .Get (_dfebe );
switch _dfebe {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_abfda .WriteString (_dfebe .WriteString ());_abfda .WriteString ("\u0020");_gagca ._edegd =_abfda .Len ();_abfda .WriteString (_bcadd .WriteString ());_abfda .WriteString ("\u0020");_gagca ._aagaa =_abfda .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_abfda .WriteString (_dfebe .WriteString ());_abfda .WriteString ("\u0020");_gagca ._cdcb =_abfda .Len ();_abfda .WriteString (_bcadd .WriteString ());_abfda .WriteString ("\u0020");_gagca ._dggeg =_abfda .Len ()-1;
default:_abfda .WriteString (_dfebe .WriteString ());_abfda .WriteString ("\u0020");_abfda .WriteString (_bcadd .WriteString ());};};_abfda .WriteString ("\u003e\u003e");return _abfda .String ();};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gaef *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// String implements interface PdfObject.
func (_bd *PdfAction )String ()string {_gb ,_ged :=_bd .ToPdfObject ().(*_ebc .PdfIndirectObject );if _ged {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bd ._adf ,_gb .PdfObject .String ());};return "";};func (_bcde *PdfReader )newPdfActionSoundFromDict (_ceg *_ebc .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ceg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ceg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ceg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ceg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ceg .Get ("\u004d\u0069\u0078")},nil ;
};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_edaf *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ca .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ca .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ca .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ca .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bdcc ,_dfgf :=_cfef .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afeca ,img ._facag );if _dfgf !=nil {return Image {},_dfgf ;};_dbdb ,_dfgf :=_cfef .NRGBAConverter .Convert (_bdcc );
if _dfgf !=nil {return Image {},_dfgf ;};return _ebeb (_dbdb .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gedd *PdfAnnotationLine )ToPdfObject ()_ebc .PdfObject {_gedd .PdfAnnotation .ToPdfObject ();_aecb :=_gedd ._daf ;_becd :=_aecb .PdfObject .(*_ebc .PdfObjectDictionary );_gedd .PdfAnnotationMarkup .appendToPdfDictionary (_becd );_becd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u004c\u0069\u006e\u0065"));
_becd .SetIfNotNil ("\u004c",_gedd .L );_becd .SetIfNotNil ("\u0042\u0053",_gedd .BS );_becd .SetIfNotNil ("\u004c\u0045",_gedd .LE );_becd .SetIfNotNil ("\u0049\u0043",_gedd .IC );_becd .SetIfNotNil ("\u004c\u004c",_gedd .LL );_becd .SetIfNotNil ("\u004c\u004c\u0045",_gedd .LLE );
_becd .SetIfNotNil ("\u0043\u0061\u0070",_gedd .Cap );_becd .SetIfNotNil ("\u0049\u0054",_gedd .IT );_becd .SetIfNotNil ("\u004c\u004c\u004f",_gedd .LLO );_becd .SetIfNotNil ("\u0043\u0050",_gedd .CP );_becd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gedd .Measure );
_becd .SetIfNotNil ("\u0043\u004f",_gedd .CO );return _aecb ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_aagd *pdfFontSimple )SetEncoder (encoder _cgf .TextEncoder ){_aagd ._fedce =encoder };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_abgac *Image )AlphaMap (mapFunc AlphaMapFunc ){for _aedccg ,_defbab :=range _abgac ._afeca {_abgac ._afeca [_aedccg ]=mapFunc (_defbab );};};func (_aafce *pdfCIDFontType0 )baseFields ()*fontCommon {return &_aafce .fontCommon };

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_cgeg *PdfPageResources )SetXObjectByName (keyName _ebc .PdfObjectName ,stream *_ebc .PdfObjectStream )error {if _cgeg .XObject ==nil {_cgeg .XObject =_ebc .MakeDict ();};_fbgc :=_ebc .TraceToDirectObject (_cgeg .XObject );_aefef ,_agfe :=_fbgc .(*_ebc .PdfObjectDictionary );
if !_agfe {_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_cgeg .XObject ,_fbgc );return _cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_aefef .Set (keyName ,stream );return nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ccbee *PdfWriter )SetOptimizer (optimizer Optimizer ){_ccbee ._gaaga =optimizer };

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_eedfc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_cfee :=_ba .NewReader (img .getBase ());_eefd :=_cfef .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._afeca ,img ._facag );
_egagd :=_ba .NewWriter (_eefd );_cdgcb :=_bcd .Pow (2,float64 (img .BitsPerComponent ))-1;_acde :=_eedfc .GetNumComponents ();_bfgb :=make ([]uint32 ,_acde );_afbgf :=make ([]float64 ,_acde );for {_dfdf :=_cfee .ReadSamples (_bfgb );if _dfdf ==_eag .EOF {break ;
}else if _dfdf !=nil {return img ,_dfdf ;};for _gbdg :=0;_gbdg < _acde ;_gbdg ++{_acbdg :=float64 (_bfgb [_gbdg ])/_cdgcb ;_afbgf [_gbdg ]=_acbdg ;};_efbea ,_dfdf :=_eedfc .TintTransform .Evaluate (_afbgf );if _dfdf !=nil {return img ,_dfdf ;};for _ ,_bgae :=range _efbea {_bgae =_bcd .Min (_bcd .Max (0,_bgae ),1.0);
if _dfdf =_egagd .WriteSample (uint32 (_bgae *_cdgcb ));_dfdf !=nil {return img ,_dfdf ;};};};return _eedfc .AlternateSpace .ImageToRGB (_ebeb (&_eefd ));};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dbdg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dbdg .flattenFieldsWithOpts (allannots ,appgen ,nil );};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ddffbc *OutlineItem )Insert (index uint ,item *OutlineItem ){_feecb :=uint (len (_ddffbc .Entries ));if index > _feecb {index =_feecb ;};_ddffbc .Entries =append (_ddffbc .Entries [:index ],append ([]*OutlineItem {item },_ddffbc .Entries [index :]...)...);
};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ggcbg *LTV )EnableByName (name string ,extraCerts []*_c .Certificate )error {_fgae :=_ggcbg ._agfbg ._ccf .AcroForm ;for _ ,_egdb :=range _fgae .AllFields (){_cfgbe ,_ :=_egdb .GetContext ().(*PdfFieldSignature );if _cfgbe ==nil {continue ;};if _agab :=_cfgbe .PartialName ();
_agab !=name {continue ;};return _ggcbg .Enable (_cfgbe .V ,extraCerts );};return nil ;};

// RemovePage removes a page by number.
func (_bfaf *PdfAppender )RemovePage (pageNum int ){_bcbg :=pageNum -1;_bfaf ._dcbg =append (_bfaf ._dcbg [0:_bcbg ],_bfaf ._dcbg [pageNum :]...);};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eebe pdfCIDFontType0 )GetCharMetrics (code _cgf .CharCode )(_ge .CharMetrics ,bool ){_dgbgf :=_eebe ._fbacg ;if _bacd ,_fee :=_eebe ._gaba [code ];_fee {_dgbgf =_bacd ;};return _ge .CharMetrics {Wx :_dgbgf },true ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_dfad *PdfAnnotation )GetContext ()PdfModel {if _dfad ==nil {return nil ;};return _dfad ._fddc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gdeb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gdeb .Alternate ==nil {if _gdeb .N ==1{_fdab :=NewPdfColorspaceDeviceGray ();return _fdab .ColorFromFloats (vals );}else if _gdeb .N ==3{_ffdb :=NewPdfColorspaceDeviceRGB ();
return _ffdb .ColorFromFloats (vals );}else if _gdeb .N ==4{_feab :=NewPdfColorspaceDeviceCMYK ();return _feab .ColorFromFloats (vals );}else {return nil ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gdeb .Alternate .ColorFromFloats (vals );};func (_cbgfd *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fdaa []*PdfFieldSignature ;for _ ,_cfgge :=range _cbgfd .AllFields (){switch _acbbb :=_cfgge .GetContext ().(type ){case *PdfFieldSignature :_aceed :=_acbbb ;
_fdaa =append (_fdaa ,_aceed );};};return _fdaa ;};func _fgadg ()*modelManager {_egdcb :=modelManager {};_egdcb ._cced =map[PdfModel ]_ebc .PdfObject {};_egdcb ._caad =map[_ebc .PdfObject ]PdfModel {};return &_egdcb ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_ccffd *CompliancePdfReader )error ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gaaba *PdfReader )PageFromIndirectObject (ind *_ebc .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gaaba .PageList )!=len (_gaaba ._dfgde ){return nil ,0,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _fbdd ,_ccbed :=range _gaaba ._dfgde {if _ccbed ==ind {return _gaaba .PageList [_fbdd ],_fbdd +1,nil ;};};return nil ,0,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject returns a stream object.
func (_ggacd *XObjectImage )ToPdfObject ()_ebc .PdfObject {_egeaa :=_ggacd ._febcg ;_accdc :=_egeaa .PdfObjectDictionary ;if _ggacd .Filter !=nil {_accdc =_ggacd .Filter .MakeStreamDict ();_egeaa .PdfObjectDictionary =_accdc ;};_accdc .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_accdc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0049\u006d\u0061g\u0065"));_accdc .Set ("\u0057\u0069\u0064t\u0068",_ebc .MakeInteger (*(_ggacd .Width )));_accdc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ebc .MakeInteger (*(_ggacd .Height )));
if _ggacd .BitsPerComponent !=nil {_accdc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebc .MakeInteger (*(_ggacd .BitsPerComponent )));};if _ggacd .ColorSpace !=nil {_accdc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ggacd .ColorSpace .ToPdfObject ());
};_accdc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ggacd .Intent );_accdc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ggacd .ImageMask );_accdc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ggacd .Mask );_ecgge :=_accdc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _ggacd .Decode ==nil &&_ecgge {_accdc .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ggacd .Decode !=nil {_accdc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggacd .Decode );};_accdc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ggacd .Interpolate );
_accdc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ggacd .Alternatives );_accdc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ggacd .SMask );_accdc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ggacd .SMaskInData );
_accdc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ggacd .Matte );_accdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggacd .Name );_accdc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ggacd .StructParent );_accdc .SetIfNotNil ("\u0049\u0044",_ggacd .ID );
_accdc .SetIfNotNil ("\u004f\u0050\u0049",_ggacd .OPI );_accdc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ggacd .Metadata );_accdc .SetIfNotNil ("\u004f\u0043",_ggacd .OC );_accdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_ggacd .Stream ))));
_egeaa .Stream =_ggacd .Stream ;return _egeaa ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ggee *PdfReader )GetOCProperties ()(_ebc .PdfObject ,error ){_cbbg :=_ggee ._fcdfa ;_abcc :=_cbbg .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_abcc =_ebc .ResolveReference (_abcc );if !_ggee ._gebcd {_daebg :=_ggee .traverseObjectData (_abcc );
if _daebg !=nil {return nil ,_daebg ;};};return _abcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dagf *PdfAnnotationPopup )ToPdfObject ()_ebc .PdfObject {_dagf .PdfAnnotation .ToPdfObject ();_beff :=_dagf ._daf ;_aea :=_beff .PdfObject .(*_ebc .PdfObjectDictionary );_aea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0050\u006f\u0070u\u0070"));
_aea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dagf .Parent );_aea .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dagf .Open );return _beff ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_fbac *PdfInfo )GetCustomInfo (name string )*_ebc .PdfObjectString {var _eeab *_ebc .PdfObjectString ;if _fbac ._fefbe ==nil {return _eeab ;};if _aegfb ,_fcdgf :=_fbac ._fefbe .Get (*_ebc .MakeName (name )).(*_ebc .PdfObjectString );_fcdgf {_eeab =_aegfb ;
};return _eeab ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_ffafg :=&PdfColorspaceCalRGB {};_ffafg .BlackPoint =[]float64 {0.0,0.0,0.0};_ffafg .Gamma =[]float64 {1.0,1.0,1.0};_ffafg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _ffafg ;};var _dbdc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgeag pdfFontSimple )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){if _fgeag ._ddaf !=nil {_acdge ,_gcec :=_fgeag ._ddaf .Read (r );if _gcec {return _acdge ,true ;};};_gfbac :=_fgeag .Encoder ();if _gfbac ==nil {_ca .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fgeag );
return _ge .CharMetrics {},false ;};_fecda ,_feccg :=_gfbac .RuneToCharcode (r );if !_feccg {if r !=' '{_ca .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fgeag );
};return _ge .CharMetrics {},false ;};_debgb ,_caaa :=_fgeag .GetCharMetrics (_fecda );return _debgb ,_caaa ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_fca :=NewPdfAnnotation ();_aca :=&PdfAnnotationRichMedia {};_aca .PdfAnnotation =_fca ;_fca .SetContext (_aca );return _aca ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gefcc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gefcc .MediaBox !=nil {return _gefcc .MediaBox ,nil ;};_fecgfc :=_gefcc .Parent ;for _fecgfc !=nil {_dcebd ,_afff :=_ebc .GetDict (_fecgfc );if !_afff {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _caggd :=_dcebd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_caggd !=nil {_adbc ,_cede :=_ebc .GetArray (_caggd );if !_cede {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fdcad ,_bacad :=NewPdfRectangle (*_adbc );if _bacad !=nil {return nil ,_bacad ;};return _fdcad ,nil ;};_fecgfc =_dcebd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cfe .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// B returns the value of the B component of the color.
func (_cacd *PdfColorCalRGB )B ()float64 {return _cacd [1]};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_egcbc *DSS )ToPdfObject ()_ebc .PdfObject {_cabb :=_egcbc ._gbfc .PdfObject .(*_ebc .PdfObjectDictionary );_cabb .Clear ();_bfcf :=_ebc .MakeDict ();for _bcegd ,_ddeac :=range _egcbc .VRI {_bfcf .Set (*_ebc .MakeName (_bcegd ),_ddeac .ToPdfObject ());
};_cabb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ddaec (_egcbc .Certs ));_cabb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ddaec (_egcbc .OCSPs ));_cabb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ddaec (_egcbc .CRLs ));_cabb .Set ("\u0056\u0052\u0049",_bfcf );
return _egcbc ._gbfc ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_egfab *modelManager )GetPrimitiveFromModel (model PdfModel )_ebc .PdfObject {_adaec ,_ddega :=_egfab ._cced [model ];if !_ddega {return nil ;};return _adaec ;};func (_fafb *PdfReader )loadStructure ()error {if _fafb ._bfef .GetCrypter ()!=nil &&!_fafb ._bfef .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecbb :=_fafb ._bfef .GetTrailer ();if _ecbb ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eeeee ,_bdege :=_ecbb .Get ("\u0052\u006f\u006f\u0074").(*_ebc .PdfObjectReference );if !_bdege {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ecbb );
};_ccaedg ,_dfabc :=_fafb ._bfef .LookupByReference (*_eeeee );if _dfabc !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dfabc );
return _dfabc ;};_cacge ,_bdege :=_ccaedg .(*_ebc .PdfIndirectObject );if !_bdege {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ccaedg ,*_ecbb );
return _cfe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fcegb ,_bdege :=(*_cacge ).PdfObject .(*_ebc .PdfObjectDictionary );if !_bdege {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_cacge .PdfObject );
return _cfe .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ca .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fcegb );_fdfeb ,_bdege :=_fcegb .Get ("\u0050\u0061\u0067e\u0073").(*_ebc .PdfObjectReference );
if !_bdege {return _cfe .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gdgb ,_dfabc :=_fafb ._bfef .LookupByReference (*_fdfeb );
if _dfabc !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dfabc ;};_ggfde ,_bdege :=_gdgb .(*_ebc .PdfIndirectObject );if !_bdege {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ca .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ggfde );return _cfe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cbcf ,_bdege :=_ggfde .PdfObject .(*_ebc .PdfObjectDictionary );if !_bdege {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ggfde );
return _cfe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ccbga ,_bdege :=_ebc .GetInt (_cbcf .Get ("\u0043\u006f\u0075n\u0074"));if !_bdege {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cfe .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bdege =_ebc .GetName (_cbcf .Get ("\u0054\u0079\u0070\u0065"));!_bdege {_ca .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cbcf .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0050\u0061\u0067e\u0073"));};if _abed ,_begg :=_ebc .GetInt (_cbcf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_begg {_aabac :=int64 (*_abed );_fafb .Rotate =&_aabac ;};_fafb ._cbeef =_eeeee ;
_fafb ._fcdfa =_fcegb ;_fafb ._eeaec =_cbcf ;_fafb ._ecbc =_ggfde ;_fafb ._cfaaa =int (*_ccbga );_fafb ._dfgde =[]*_ebc .PdfIndirectObject {};_fabbe :=map[_ebc .PdfObject ]struct{}{};_dfabc =_fafb .buildPageList (_ggfde ,nil ,_fabbe );if _dfabc !=nil {return _dfabc ;
};_ca .Log .Trace ("\u002d\u002d\u002d");_ca .Log .Trace ("\u0054\u004f\u0043");_ca .Log .Trace ("\u0050\u0061\u0067e\u0073");_ca .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_fafb ._dfgde ),_fafb ._dfgde );_fafb ._dbdfgg ,_dfabc =_fafb .loadOutlines ();
if _dfabc !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dfabc );
return _dfabc ;};_fafb .AcroForm ,_dfabc =_fafb .loadForms ();if _dfabc !=nil {return _dfabc ;};_fafb .DSS ,_dfabc =_fafb .loadDSS ();if _dfabc !=nil {return _dfabc ;};_fafb ._fbabb ,_dfabc =_fafb .loadPerms ();if _dfabc !=nil {return _dfabc ;};return nil ;
};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cacgf .Lock ();defer _cacgf .Unlock ();_ecde =creator };func (_badg *pdfFontSimple )updateStandard14Font (){_ecfd ,_agff :=_badg .Encoder ().(_cgf .SimpleEncoder );if !_agff {_ca .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_badg .Encoder (),_badg );
return ;};_gcdeab :=_ecfd .Charcodes ();_badg ._bcbfd =make (map[_cgf .CharCode ]float64 ,len (_gcdeab ));for _ ,_bgaf :=range _gcdeab {_ccba ,_ :=_ecfd .CharcodeToRune (_bgaf );_ccfcg ,_ :=_badg ._ddaf .Read (_ccba );_badg ._bcbfd [_bgaf ]=_ccfcg .Wx ;
};};

// ToPdfObject implements interface PdfModel.
func (_aec *PdfActionResetForm )ToPdfObject ()_ebc .PdfObject {_aec .PdfAction .ToPdfObject ();_cgd :=_aec ._dc ;_gba :=_cgd .PdfObject .(*_ebc .PdfObjectDictionary );_gba .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeResetForm )));_gba .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_aec .Fields );
_gba .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_aec .Flags );return _cgd ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _ebc .PdfObject ;Name _ebc .PdfObject ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _eac .Permissions ;Algorithm EncryptionAlgorithm ;};func (_agfc *DSS )addCerts (_eeedf [][]byte )([]*_ebc .PdfObjectStream ,error ){return _agfc .add (&_agfc .Certs ,_agfc ._abfb ,_eeedf );};

// ToPdfObject returns the PDF representation of the function.
func (_cbag *PdfFunctionType3 )ToPdfObject ()_ebc .PdfObject {_fffg :=_ebc .MakeDict ();_fffg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ebc .MakeInteger (3));_gfccb :=&_ebc .PdfObjectArray {};for _ ,_aabd :=range _cbag .Domain {_gfccb .Append (_ebc .MakeFloat (_aabd ));
};_fffg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfccb );if _cbag .Range !=nil {_aaccg :=&_ebc .PdfObjectArray {};for _ ,_eabg :=range _cbag .Range {_aaccg .Append (_ebc .MakeFloat (_eabg ));};_fffg .Set ("\u0052\u0061\u006eg\u0065",_aaccg );};if _cbag .Functions !=nil {_bfge :=&_ebc .PdfObjectArray {};
for _ ,_gcadb :=range _cbag .Functions {_bfge .Append (_gcadb .ToPdfObject ());};_fffg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bfge );};if _cbag .Bounds !=nil {_agbgg :=&_ebc .PdfObjectArray {};for _ ,_ccfd :=range _cbag .Bounds {_agbgg .Append (_ebc .MakeFloat (_ccfd ));
};_fffg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_agbgg );};if _cbag .Encode !=nil {_gcfgg :=&_ebc .PdfObjectArray {};for _ ,_bdga :=range _cbag .Encode {_gcfgg .Append (_ebc .MakeFloat (_bdga ));};_fffg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_gcfgg );
};if _cbag ._gedbg !=nil {_cbag ._gedbg .PdfObject =_fffg ;return _cbag ._gedbg ;};return _fffg ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dabba *modelManager )GetModelFromPrimitive (primitive _ebc .PdfObject )PdfModel {model ,_fbae :=_dabba ._caad [primitive ];if !_fbae {return nil ;};return model ;};func (_debbb *PdfReader )newPdfSignatureFromIndirect (_bffa *_ebc .PdfIndirectObject )(*PdfSignature ,error ){_bbaca ,_abffd :=_bffa .PdfObject .(*_ebc .PdfObjectDictionary );
if !_abffd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _ecbfb ,_bbdgg :=_debbb ._faaab .GetModelFromPrimitive (_bffa ).(*PdfSignature );_bbdgg {return _ecbfb ,nil ;};_bbcge :=&PdfSignature {};_bbcge ._ffaeb =_bffa ;_bbcge .Type ,_ =_ebc .GetName (_bbaca .Get ("\u0054\u0079\u0070\u0065"));
_bbcge .Filter ,_abffd =_ebc .GetName (_bbaca .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_abffd {_ca .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bbcge .SubFilter ,_ =_ebc .GetName (_bbaca .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_bbcge .Contents ,_abffd =_ebc .GetString (_bbaca .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_abffd {_ca .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _bcbgg ,_acgcg :=_ebc .GetArray (_bbaca .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_acgcg {_bbcge .Reference =_ebc .MakeArray ();for _ ,_defed :=range _bcbgg .Elements (){_cecdb ,_gbedd :=_ebc .GetDict (_defed );
if !_gbedd {_ca .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_egedf ,_dgfbb :=_debbb .newPdfSignatureReferenceFromDict (_cecdb );if _dgfbb !=nil {return nil ,_dgfbb ;};_bbcge .Reference .Append (_egedf .ToPdfObject ());};};_bbcge .Cert =_bbaca .Get ("\u0043\u0065\u0072\u0074");_bbcge .ByteRange ,_ =_ebc .GetArray (_bbaca .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_bbcge .Changes ,_ =_ebc .GetArray (_bbaca .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_bbcge .Name ,_ =_ebc .GetString (_bbaca .Get ("\u004e\u0061\u006d\u0065"));_bbcge .M ,_ =_ebc .GetString (_bbaca .Get ("\u004d"));_bbcge .Location ,_ =_ebc .GetString (_bbaca .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_bbcge .Reason ,_ =_ebc .GetString (_bbaca .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_bbcge .ContactInfo ,_ =_ebc .GetString (_bbaca .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_bbcge .R ,_ =_ebc .GetInt (_bbaca .Get ("\u0052"));
_bbcge .V ,_ =_ebc .GetInt (_bbaca .Get ("\u0056"));_bbcge .PropBuild ,_ =_ebc .GetDict (_bbaca .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_bbcge .PropAuthTime ,_ =_ebc .GetInt (_bbaca .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_bbcge .PropAuthType ,_ =_ebc .GetName (_bbaca .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_debbb ._faaab .Register (_bffa ,_bbcge );return _bbcge ,nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ecfbc *PdfFieldButton )GetType ()ButtonType {_bgba :=ButtonTypeCheckbox ;if _ecfbc .Ff !=nil {if (uint32 (*_ecfbc .Ff )&FieldFlagPushbutton .Mask ())> 0{_bgba =ButtonTypePush ;}else if (uint32 (*_ecfbc .Ff )&FieldFlagRadio .Mask ())> 0{_bgba =ButtonTypeRadio ;
};};return _bgba ;};

// ToInteger convert to an integer format.
func (_fggbg *PdfColorCalGray )ToInteger (bits int )uint32 {_afece :=_bcd .Pow (2,float64 (bits ))-1;return uint32 (_afece *_fggbg .Val ());};

// Mask returns the uin32 bitmask for the specific flag.
func (_fecc FieldFlag )Mask ()uint32 {return uint32 (_fecc )};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_acdae *PdfPageResources )HasExtGState (keyName _ebc .PdfObjectName )bool {_ ,_fegdg :=_acdae .GetFontByName (keyName );return _fegdg ;};var (ErrRequiredAttributeMissing =_cfe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_bfbaa =_cfe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cfe .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cfe .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_dbc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_ebc .ErrNotSupported );ErrType1CFontNotSupported =_dbc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ebc .ErrNotSupported );
ErrType3FontNotSupported =_dbc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_ebc .ErrNotSupported );
ErrTTCmapNotSupported =_dbc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_ebc .ErrNotSupported );
ErrSignNotEnoughSpace =_dbc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dbc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_aafc :=NewPdfAnnotation ();_dfd :=&PdfAnnotationFileAttachment {};_dfd .PdfAnnotation =_aafc ;_dfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aafc .SetContext (_dfd );return _dfd ;
};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_facbg *Image )SetSamples (samples []uint32 ){if _facbg .BitsPerComponent < 8{samples =_facbg .samplesAddPadding (samples );};_adaf :=_ba .ResampleUint32 (samples ,int (_facbg .BitsPerComponent ),8);_fdca :=make ([]byte ,len (_adaf ));for _ebecc ,_adbg :=range _adaf {_fdca [_ebecc ]=byte (_adbg );
};_facbg .Data =_fdca ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bcfb *PdfFieldButton )ToPdfObject ()_ebc .PdfObject {_bcfb .PdfField .ToPdfObject ();_caefg :=_bcfb ._faga ;_fdfd :=_caefg .PdfObject .(*_ebc .PdfObjectDictionary );_fdfd .Set ("\u0046\u0054",_ebc .MakeName ("\u0042\u0074\u006e"));if _bcfb .Opt !=nil {_fdfd .Set ("\u004f\u0070\u0074",_bcfb .Opt );
};return _caefg ;};

// ToPdfObject implements interface PdfModel.
func (_fed *PdfAnnotationText )ToPdfObject ()_ebc .PdfObject {_fed .PdfAnnotation .ToPdfObject ();_fbda :=_fed ._daf ;_dge :=_fbda .PdfObject .(*_ebc .PdfObjectDictionary );if _fed .PdfAnnotationMarkup !=nil {_fed .PdfAnnotationMarkup .appendToPdfDictionary (_dge );
};_dge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0054\u0065\u0078\u0074"));_dge .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fed .Open );_dge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fed .Name );_dge .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fed .State );
_dge .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fed .StateModel );return _fbda ;};func _ddaec (_ffadf []*_ebc .PdfObjectStream )*_ebc .PdfObjectArray {if len (_ffadf )==0{return nil ;};_gccag :=make ([]_ebc .PdfObject ,0,len (_ffadf ));
for _ ,_ebbb :=range _ffadf {_gccag =append (_gccag ,_ebbb );};return _ebc .MakeArray (_gccag ...);};func (_gbfe *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_bfbcb pdfFontSimple )GetCharMetrics (code _cgf .CharCode )(_ge .CharMetrics ,bool ){if _ddbf ,_acace :=_bfbcb ._bcbfd [code ];_acace {return _ge .CharMetrics {Wx :_ddbf },true ;};if _ge .IsStdFont (_ge .StdFontName (_bfbcb ._eeda )){return _ge .CharMetrics {Wx :250},true ;
};return _ge .CharMetrics {},false ;};func _ceabc (_dbcba *_ebc .PdfIndirectObject )(*PdfOutline ,error ){_fgcd ,_cdbfc :=_dbcba .PdfObject .(*_ebc .PdfObjectDictionary );if !_cdbfc {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dcggg :=NewPdfOutline ();if _abaa :=_fgcd .Get ("\u0054\u0079\u0070\u0065");_abaa !=nil {_afdfg ,_bcab :=_abaa .(*_ebc .PdfObjectName );if _bcab {if *_afdfg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_afdfg );
};};};if _aaadb :=_fgcd .Get ("\u0043\u006f\u0075n\u0074");_aaadb !=nil {_debca ,_dafb :=_ebc .GetNumberAsInt64 (_aaadb );if _dafb !=nil {return nil ,_dafb ;};_dcggg .Count =&_debca ;};return _dcggg ,nil ;};func (_ebddc *PdfWriter )optimizeDocument ()error {if _ebddc ._eaagd ==nil {return nil ;
};_cgfbe ,_daebf :=_ebc .GetDict (_ebddc ._ebgcgg );if !_daebf {return _cfe .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_edcfc :=_dde .Document {ID :[2]string {_ebddc ._eced ,_ebddc ._gdegc },Version :_ebddc ._aeafa ,Objects :_ebddc ._gfbe ,Info :_cgfbe ,Crypt :_ebddc ._aacgc ,UseHashBasedID :_ebddc ._ceadg };if _gebdb :=_ebddc ._eaagd .ApplyStandard (&_edcfc );_gebdb !=nil {return _gebdb ;
};_ebddc ._eced ,_ebddc ._gdegc =_edcfc .ID [0],_edcfc .ID [1];_ebddc ._aeafa =_edcfc .Version ;_ebddc ._gfbe =_edcfc .Objects ;_ebddc ._ebgcgg .PdfObject =_edcfc .Info ;_ebddc ._ceadg =_edcfc .UseHashBasedID ;_ebddc ._aacgc =_edcfc .Crypt ;_ggbd :=make (map[_ebc .PdfObject ]struct{},len (_ebddc ._gfbe ));
for _ ,_bcedd :=range _ebddc ._gfbe {_ggbd [_bcedd ]=struct{}{};};_ebddc ._bbfbd =_ggbd ;return nil ;};func (_ceagg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _ceagg ._bfef .GetCrypter ()!=nil &&!_ceagg ._bfef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fgde :=_ceagg ._fcdfa ;_agcdf :=_fgde .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _agcdf ==nil {return nil ,nil ;};_ca .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dbgb :=_ebc .ResolveReference (_agcdf );
_ca .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dbgb );if _cccfb :=_ebc .IsNullObject (_dbgb );_cccfb {_ca .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_cgacd ,_cdcdg :=_dbgb .(*_ebc .PdfIndirectObject );if !_cdcdg {if _ ,_bgdd :=_ebc .GetDict (_dbgb );!_bgdd {_ca .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ca .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_cgacd =_ebc .MakeIndirectObject (_dbgb );};_egedb ,_cdcdg :=_cgacd .PdfObject .(*_ebc .PdfObjectDictionary );if !_cdcdg {return nil ,_cfe .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ca .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_egedb );_aaeda ,_ ,_fdfda :=_ceagg .buildOutlineTree (_cgacd ,nil ,nil ,nil );if _fdfda !=nil {return nil ,_fdfda ;};_ca .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_aaeda );
return _aaeda ,nil ;};

// Encoder returns the font's text encoder.
func (_beffa pdfCIDFontType0 )Encoder ()_cgf .TextEncoder {return _beffa ._fgbbf };func (_eff *PdfReader )newPdfAnnotationCircleFromDict (_deff *_ebc .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ggbb :=PdfAnnotationCircle {};_ffdg ,_caa :=_eff .newPdfAnnotationMarkupFromDict (_deff );
if _caa !=nil {return nil ,_caa ;};_ggbb .PdfAnnotationMarkup =_ffdg ;_ggbb .BS =_deff .Get ("\u0042\u0053");_ggbb .IC =_deff .Get ("\u0049\u0043");_ggbb .BE =_deff .Get ("\u0042\u0045");_ggbb .RD =_deff .Get ("\u0052\u0044");return &_ggbb ,nil ;};func _egfa (_agcf *_ebc .PdfObjectDictionary )(*PdfFieldChoice ,error ){_faab :=&PdfFieldChoice {};
_faab .Opt ,_ =_ebc .GetArray (_agcf .Get ("\u004f\u0070\u0074"));_faab .TI ,_ =_ebc .GetInt (_agcf .Get ("\u0054\u0049"));_faab .I ,_ =_ebc .GetArray (_agcf .Get ("\u0049"));return _faab ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_egfbg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_agdcc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgabf :=vals [0];if _fgabf < 0.0||_fgabf > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgabf );
return nil ,ErrColorOutOfRange ;};_agca :=vals [1];if _agca < 0.0||_agca > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_agca );return nil ,ErrColorOutOfRange ;
};_aege :=vals [2];if _aege < 0.0||_aege > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aege );return nil ,ErrColorOutOfRange ;};_fbag :=NewPdfColorCalRGB (_fgabf ,_agca ,_aege );
return _fbag ,nil ;};func _bbff (_bggdc *_ebc .PdfObjectDictionary )(*PdfShadingType4 ,error ){_aabfd :=PdfShadingType4 {};_bgbe :=_bggdc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bgbe ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ceecb ,_dabcd :=_bgbe .(*_ebc .PdfObjectInteger );if !_dabcd {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgbe );
return nil ,_ebc .ErrTypeError ;};_aabfd .BitsPerCoordinate =_ceecb ;_bgbe =_bggdc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bgbe ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ceecb ,_dabcd =_bgbe .(*_ebc .PdfObjectInteger );if !_dabcd {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bgbe );
return nil ,_ebc .ErrTypeError ;};_aabfd .BitsPerComponent =_ceecb ;_bgbe =_bggdc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bgbe ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ceecb ,_dabcd =_bgbe .(*_ebc .PdfObjectInteger );if !_dabcd {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bgbe );
return nil ,_ebc .ErrTypeError ;};_aabfd .BitsPerComponent =_ceecb ;_bgbe =_bggdc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bgbe ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_daeaee ,_dabcd :=_bgbe .(*_ebc .PdfObjectArray );if !_dabcd {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgbe );
return nil ,_ebc .ErrTypeError ;};_aabfd .Decode =_daeaee ;_bgbe =_bggdc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bgbe ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_aabfd .Function =[]PdfFunction {};if _faaaf ,_dcead :=_bgbe .(*_ebc .PdfObjectArray );_dcead {for _ ,_fcbbfd :=range _faaaf .Elements (){_fcaae ,_egfde :=_adda (_fcbbfd );if _egfde !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egfde );
return nil ,_egfde ;};_aabfd .Function =append (_aabfd .Function ,_fcaae );};}else {_eagcf ,_fbgbf :=_adda (_bgbe );if _fbgbf !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbgbf );
return nil ,_fbgbf ;};_aabfd .Function =append (_aabfd .Function ,_eagcf );};return &_aabfd ,nil ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _ebc .PdfObjectArray )(*PdfRectangle ,error ){_dcbc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _aaebfd error ;_dcbc .Llx ,_aaebfd =_ebc .GetNumberAsFloat (arr .Get (0));if _aaebfd !=nil {return nil ,_aaebfd ;};_dcbc .Lly ,_aaebfd =_ebc .GetNumberAsFloat (arr .Get (1));if _aaebfd !=nil {return nil ,_aaebfd ;};_dcbc .Urx ,_aaebfd =_ebc .GetNumberAsFloat (arr .Get (2));
if _aaebfd !=nil {return nil ,_aaebfd ;};_dcbc .Ury ,_aaebfd =_ebc .GetNumberAsFloat (arr .Get (3));if _aaebfd !=nil {return nil ,_aaebfd ;};return &_dcbc ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_bdeae *PdfPageResources )GetXObjectImageByName (keyName _ebc .PdfObjectName )(*XObjectImage ,error ){_ggbadc ,_cded :=_bdeae .GetXObjectByName (keyName );if _ggbadc ==nil {return nil ,nil ;};if _cded !=XObjectTypeImage {return nil ,_cfe .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_egagc ,_fgbd :=NewXObjectImageFromStream (_ggbadc );if _fgbd !=nil {return nil ,_fgbd ;};return _egagc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bed *PdfActionImportData )ToPdfObject ()_ebc .PdfObject {_bed .PdfAction .ToPdfObject ();_dag :=_bed ._dc ;_ac :=_dag .PdfObject .(*_ebc .PdfObjectDictionary );_ac .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeImportData )));if _bed .F !=nil {_ac .Set ("\u0046",_bed .F .ToPdfObject ());
};return _dag ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_dfcbc *XObjectImage )GetContainingPdfObject ()_ebc .PdfObject {return _dfcbc ._febcg };

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_bced *PdfFont )GetCharMetrics (code _cgf .CharCode )(CharMetrics ,bool ){var _deee _ge .CharMetrics ;switch _afedf :=_bced ._cbfg .(type ){case *pdfFontSimple :if _becgg ,_aefbf :=_afedf .GetCharMetrics (code );_aefbf {return _becgg ,_aefbf ;};case *pdfFontType0 :if _afgde ,_dfaag :=_afedf .GetCharMetrics (code );
_dfaag {return _afgde ,_dfaag ;};case *pdfCIDFontType0 :if _cefgd ,_cccge :=_afedf .GetCharMetrics (code );_cccge {return _cefgd ,_cccge ;};case *pdfCIDFontType2 :if _cgeb ,_abce :=_afedf .GetCharMetrics (code );_abce {return _cgeb ,_abce ;};case *pdfFontType3 :if _eabc ,_beacd :=_afedf .GetCharMetrics (code );
_beacd {return _eabc ,_beacd ;};default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_bced ._cbfg );
return _deee ,false ;};if _gagc ,_aadf :=_bced .GetFontDescriptor ();_aadf ==nil &&_gagc !=nil {return _ge .CharMetrics {Wx :_gagc ._caed },true ;};_ca .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_bced );
return _deee ,false ;};func _becgd (_fceca *_ebc .PdfObjectDictionary )(*PdfShadingType7 ,error ){_gccdd :=PdfShadingType7 {};_gddfee :=_fceca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gddfee ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecdff ,_gggbb :=_gddfee .(*_ebc .PdfObjectInteger );if !_gggbb {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gddfee );
return nil ,_ebc .ErrTypeError ;};_gccdd .BitsPerCoordinate =_ecdff ;_gddfee =_fceca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gddfee ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ecdff ,_gggbb =_gddfee .(*_ebc .PdfObjectInteger );if !_gggbb {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gddfee );
return nil ,_ebc .ErrTypeError ;};_gccdd .BitsPerComponent =_ecdff ;_gddfee =_fceca .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gddfee ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ecdff ,_gggbb =_gddfee .(*_ebc .PdfObjectInteger );if !_gggbb {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gddfee );
return nil ,_ebc .ErrTypeError ;};_gccdd .BitsPerComponent =_ecdff ;_gddfee =_fceca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gddfee ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_deagb ,_gggbb :=_gddfee .(*_ebc .PdfObjectArray );if !_gggbb {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gddfee );
return nil ,_ebc .ErrTypeError ;};_gccdd .Decode =_deagb ;if _dgba :=_fceca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dgba !=nil {_gccdd .Function =[]PdfFunction {};if _fcccf ,_aafea :=_dgba .(*_ebc .PdfObjectArray );_aafea {for _ ,_fdcbde :=range _fcccf .Elements (){_fegdf ,_gcaef :=_adda (_fdcbde );
if _gcaef !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcaef );return nil ,_gcaef ;};_gccdd .Function =append (_gccdd .Function ,_fegdf );
};}else {_fgdfg ,_fdgcb :=_adda (_dgba );if _fdgcb !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdgcb );return nil ,_fdgcb ;
};_gccdd .Function =append (_gccdd .Function ,_fgdfg );};};return &_gccdd ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_deaac *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_feec *PdfFunctionType0 )processSamples ()error {_abee :=_ba .ResampleBytes (_feec ._beegf ,_feec .BitsPerSample );_feec ._dfgdaf =_abee ;
return nil ;};func (_edaeee *PdfWriter )writeXRefStreams (_dcgbc int ,_dbba int64 )error {_acdac :=_dcgbc +1;_edaeee ._bdgf [_acdac ]=crossReference {Type :1,ObjectNumber :_acdac ,Offset :_dbba };_eagdc :=_ed .NewBuffer (nil );_fgcab :=_ebc .MakeArray ();
for _edbgb :=0;_edbgb <=_dcgbc ;{for ;_edbgb <=_dcgbc ;_edbgb ++{_ddbgf ,_fgbbc :=_edaeee ._bdgf [_edbgb ];if _fgbbc &&(!_edaeee ._ffdcc ||_edaeee ._ffdcc &&(_ddbgf .Type ==1&&_ddbgf .Offset >=_edaeee ._fabfae ||_ddbgf .Type ==0)){break ;};};var _deef int ;
for _deef =_edbgb +1;_deef <=_dcgbc ;_deef ++{_ebcaa ,_eggae :=_edaeee ._bdgf [_deef ];if _eggae &&(!_edaeee ._ffdcc ||_edaeee ._ffdcc &&(_ebcaa .Type ==1&&_ebcaa .Offset > _edaeee ._fabfae )){continue ;};break ;};_fgcab .Append (_ebc .MakeInteger (int64 (_edbgb )),_ebc .MakeInteger (int64 (_deef -_edbgb )));
for _fagcfd :=_edbgb ;_fagcfd < _deef ;_fagcfd ++{_cdadd :=_edaeee ._bdgf [_fagcfd ];switch _cdadd .Type {case 0:_dg .Write (_eagdc ,_dg .BigEndian ,byte (0));_dg .Write (_eagdc ,_dg .BigEndian ,uint32 (0));_dg .Write (_eagdc ,_dg .BigEndian ,uint16 (0xFFFF));
case 1:_dg .Write (_eagdc ,_dg .BigEndian ,byte (1));_dg .Write (_eagdc ,_dg .BigEndian ,uint32 (_cdadd .Offset ));_dg .Write (_eagdc ,_dg .BigEndian ,uint16 (_cdadd .Generation ));case 2:_dg .Write (_eagdc ,_dg .BigEndian ,byte (2));_dg .Write (_eagdc ,_dg .BigEndian ,uint32 (_cdadd .ObjectNumber ));
_dg .Write (_eagdc ,_dg .BigEndian ,uint16 (_cdadd .Index ));};};_edbgb =_deef +1;};_efage ,_debedg :=_ebc .MakeStream (_eagdc .Bytes (),_ebc .NewFlateEncoder ());if _debedg !=nil {return _debedg ;};_efage .ObjectNumber =int64 (_acdac );_efage .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0058\u0052\u0065\u0066"));
_efage .PdfObjectDictionary .Set ("\u0057",_ebc .MakeArray (_ebc .MakeInteger (1),_ebc .MakeInteger (4),_ebc .MakeInteger (2)));_efage .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fgcab );_efage .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_ebc .MakeInteger (int64 (_acdac +1)));
_efage .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_edaeee ._ebgcgg );_efage .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_edaeee ._acbba );if _edaeee ._ffdcc &&_edaeee ._eebgb > 0{_efage .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_ebc .MakeInteger (_edaeee ._eebgb ));
};if _edaeee ._aacgc !=nil {_efage .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_edaeee ._daeff );};if _edaeee ._fgbaa ==nil &&_edaeee ._eced !=""&&_edaeee ._gdegc !=""{_edaeee ._fgbaa =_ebc .MakeArray (_ebc .MakeHexString (_edaeee ._eced ),_ebc .MakeHexString (_edaeee ._gdegc ));
};if _edaeee ._fgbaa !=nil {_ca .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_edaeee ._fgbaa );_efage .Set ("\u0049\u0044",_edaeee ._fgbaa );};_edaeee .writeObject (int (_efage .ObjectNumber ),_efage );return nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cacgf .Lock ();defer _cacgf .Unlock ();_cdffa =subject };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _a .Time )(PdfDate ,error ){_ccbeb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_bfacd ,_ :=_cb .ParseInt (_ccbeb [1:3],10,32);_caade ,_ :=_cb .ParseInt (_ccbeb [4:6],10,32);return PdfDate {_acbce :int64 (timeObj .Year ()),_adeba :int64 (timeObj .Month ()),_bcfc :int64 (timeObj .Day ()),_egafc :int64 (timeObj .Hour ()),_ggfge :int64 (timeObj .Minute ()),_gabc :int64 (timeObj .Second ()),_cbafe :_ccbeb [0],_fbaab :_bfacd ,_afbcf :_caade },nil ;
};func (_fcgb PdfFont )actualFont ()pdfFont {if _fcgb ._cbfg ==nil {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcgb );
};return _fcgb ._cbfg ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _ebc .PdfObject )(*PdfInfo ,error ){var _afdgc PdfInfo ;_agcg ,_dgfb :=obj .(*_ebc .PdfObjectDictionary );if !_dgfb {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_dggbf :=range _agcg .Keys (){switch _dggbf {case "\u0054\u0069\u0074l\u0065":_afdgc .Title ,_ =_ebc .GetString (_agcg .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_afdgc .Author ,_ =_ebc .GetString (_agcg .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_afdgc .Subject ,_ =_ebc .GetString (_agcg .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_afdgc .Keywords ,_ =_ebc .GetString (_agcg .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_afdgc .Creator ,_ =_ebc .GetString (_agcg .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_afdgc .Producer ,_ =_ebc .GetString (_agcg .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_afdgc .Trapped ,_ =_ebc .GetName (_agcg .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cfeee ,_adfd :=_ebc .GetString (_agcg .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_adfd &&_cfeee .String ()!=""{_abfge ,_gddcf :=NewPdfDate (_cfeee .String ());if _gddcf !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_gddcf );
};_afdgc .CreationDate =&_abfge ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _bcbf ,_fede :=_ebc .GetString (_agcg .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_fede &&_bcbf .String ()!=""{_ffgf ,_ffcc :=NewPdfDate (_bcbf .String ());if _ffcc !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_ffcc );
};_afdgc .ModifiedDate =&_ffgf ;};default:_fgbc ,_ :=_ebc .GetString (_agcg .Get (_dggbf ));if _afdgc ._fefbe ==nil {_afdgc ._fefbe =_ebc .MakeDict ();};_afdgc ._fefbe .Set (_dggbf ,_fgbc );};};return &_afdgc ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gad *PdfAction )GetContainingPdfObject ()_ebc .PdfObject {return _gad ._dc };

// GetVersion gets the document version.
func (_bggab *PdfWriter )GetVersion ()_ebc .Version {return _bggab ._aeafa };

// ToPdfObject implements interface PdfModel.
func (_cbcc *PdfAnnotationHighlight )ToPdfObject ()_ebc .PdfObject {_cbcc .PdfAnnotation .ToPdfObject ();_eaf :=_cbcc ._daf ;_fcdd :=_eaf .PdfObject .(*_ebc .PdfObjectDictionary );_cbcc .PdfAnnotationMarkup .appendToPdfDictionary (_fcdd );_fcdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fcdd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cbcc .QuadPoints );return _eaf ;};func _bcddf (_bdfbd _ebc .PdfObject ,_cedf *fontCommon )(*_ag .CMap ,error ){_ggfc ,_abada :=_ebc .GetStream (_bdfbd );if !_abada {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_bdfbd );
return nil ,_ebc .ErrTypeError ;};_dddee ,_bgcef :=_ebc .DecodeStream (_ggfc );if _bgcef !=nil {return nil ,_bgcef ;};_bbbdcd ,_bgcef :=_ag .LoadCmapFromData (_dddee ,!_cedf .isCIDFont ());if _bgcef !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_ggfc .ObjectNumber ,_bgcef );
};return _bbbdcd ,_bgcef ;};func (_ggbe *PdfField )inherit (_eeef func (*PdfField )bool )(bool ,error ){_ceeag :=map[*PdfField ]bool {};_fagcb :=false ;_efea :=_ggbe ;for _efea !=nil {if _ ,_bcag :=_ceeag [_efea ];_bcag {return false ,_cfe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ddeab :=_eeef (_efea );if _ddeab {_fagcb =true ;break ;};_ceeag [_efea ]=true ;_efea =_efea .Parent ;};return _fagcb ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// SetContext sets the sub annotation (context).
func (_bbbd *PdfAnnotation )SetContext (ctx PdfModel ){_bbbd ._fddc =ctx };func (_bffc *PdfPage )getParentResources ()(*PdfPageResources ,error ){_cffbf :=_bffc .Parent ;for _cffbf !=nil {_fecdd ,_cfbbc :=_ebc .GetDict (_cffbf );if !_cfbbc {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _gbecg :=_fecdd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gbecg !=nil {_eaec ,_eccf :=_ebc .GetDict (_gbecg );
if !_eccf {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_cbbbc ,_ecdfe :=NewPdfPageResourcesFromDict (_eaec );if _ecdfe !=nil {return nil ,_ecdfe ;};return _cbbbc ,nil ;
};_cffbf =_fecdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_ecaa *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ebb *_ebc .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_decfd :=PdfAnnotationFileAttachment {};
_cccg ,_ddcg :=_ecaa .newPdfAnnotationMarkupFromDict (_ebb );if _ddcg !=nil {return nil ,_ddcg ;};_decfd .PdfAnnotationMarkup =_cccg ;_decfd .FS =_ebb .Get ("\u0046\u0053");_decfd .Name =_ebb .Get ("\u004e\u0061\u006d\u0065");return &_decfd ,nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_addbac *PdfReader )GetTrailer ()(*_ebc .PdfObjectDictionary ,error ){_ffee :=_addbac ._bfef .GetTrailer ();if _ffee ==nil {return nil ,_cfe .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ffee ,nil ;
};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dcff :=&PdfOutline {_defg :_ebc .MakeIndirectObject (_ebc .MakeDict ())};_dcff ._degdbf =_dcff ;return _dcff ;};

// ToPdfObject implements interface PdfModel.
func (_cc *PdfActionGoToE )ToPdfObject ()_ebc .PdfObject {_cc .PdfAction .ToPdfObject ();_ada :=_cc ._dc ;_ddfa :=_ada .PdfObject .(*_ebc .PdfObjectDictionary );_ddfa .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeGoToE )));if _cc .F !=nil {_ddfa .Set ("\u0046",_cc .F .ToPdfObject ());
};_ddfa .SetIfNotNil ("\u0044",_cc .D );_ddfa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cc .NewWindow );_ddfa .SetIfNotNil ("\u0054",_cc .T );return _ada ;};func (_debdd *PdfWriter )hasObject (_eaafad _ebc .PdfObject )bool {_ ,_eeag :=_debdd ._bbfbd [_eaafad ];
return _eeag ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _eag .ReadSeeker )(*PdfFont ,error ){const _gdgf =_cgf .CharCode (32);const _ecdcb =_cgf .CharCode (255);_efbb ,_dcdfd :=_dec .ReadAll (r );if _dcdfd !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dcdfd );
return nil ,_dcdfd ;};_bcgb ,_dcdfd :=_ge .TtfParse (_ed .NewReader (_efbb ));if _dcdfd !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_dcdfd );
return nil ,_dcdfd ;};_cecgd :=&pdfFontSimple {_bcbfd :make (map[_cgf .CharCode ]float64 ),fontCommon :fontCommon {_dccgbc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_cecgd ._fedce =_cgf .NewWinAnsiEncoder ();_cecgd ._eeda =_bcgb .PostScriptName ;
_cecgd .FirstChar =_ebc .MakeInteger (int64 (_gdgf ));_cecgd .LastChar =_ebc .MakeInteger (int64 (_ecdcb ));_edag :=1000.0/float64 (_bcgb .UnitsPerEm );if len (_bcgb .Widths )<=0{return nil ,_cfe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gegc :=_edag *float64 (_bcgb .Widths [0]);_gfdcd :=make ([]float64 ,0,_ecdcb -_gdgf +1);for _fbaa :=_gdgf ;_fbaa <=_ecdcb ;_fbaa ++{_agfg ,_ffade :=_cecgd .Encoder ().CharcodeToRune (_fbaa );if !_ffade {_ca .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fbaa );
_gfdcd =append (_gfdcd ,_gegc );continue ;};_ffcfc ,_dafd :=_bcgb .Chars [_agfg ];if !_dafd {_ca .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_gfdcd =append (_gfdcd ,_gegc );continue ;
};_befa :=_edag *float64 (_bcgb .Widths [_ffcfc ]);_gfdcd =append (_gfdcd ,_befa );};_cecgd .Widths =_ebc .MakeIndirectObject (_ebc .MakeArrayFromFloats (_gfdcd ));if len (_gfdcd )< int (_ecdcb -_gdgf +1){_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_gfdcd ),255-32+1);
return nil ,_ebc .ErrRangeError ;};for _bafdd :=_gdgf ;_bafdd <=_ecdcb ;_bafdd ++{_cecgd ._bcbfd [_bafdd ]=_gfdcd [_bafdd -_gdgf ];};_cecgd .Encoding =_ebc .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_aaccc :=&PdfFontDescriptor {};
_aaccc .FontName =_ebc .MakeName (_bcgb .PostScriptName );_aaccc .Ascent =_ebc .MakeFloat (_edag *float64 (_bcgb .TypoAscender ));_aaccc .Descent =_ebc .MakeFloat (_edag *float64 (_bcgb .TypoDescender ));_aaccc .CapHeight =_ebc .MakeFloat (_edag *float64 (_bcgb .CapHeight ));
_aaccc .FontBBox =_ebc .MakeArrayFromFloats ([]float64 {_edag *float64 (_bcgb .Xmin ),_edag *float64 (_bcgb .Ymin ),_edag *float64 (_bcgb .Xmax ),_edag *float64 (_bcgb .Ymax )});_aaccc .ItalicAngle =_ebc .MakeFloat (_bcgb .ItalicAngle );_aaccc .MissingWidth =_ebc .MakeFloat (_edag *float64 (_bcgb .Widths [0]));
_acab ,_dcdfd :=_ebc .MakeStream (_efbb ,_ebc .NewFlateEncoder ());if _dcdfd !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dcdfd );
return nil ,_dcdfd ;};_acab .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ebc .MakeInteger (int64 (len (_efbb ))));_aaccc .FontFile2 =_acab ;if _bcgb .Bold {_aaccc .StemV =_ebc .MakeInteger (120);}else {_aaccc .StemV =_ebc .MakeInteger (70);
};_afcca :=_cfbde ;if _bcgb .IsFixedPitch {_afcca |=_fdfg ;};if _bcgb .ItalicAngle !=0{_afcca |=_fabfa ;};_aaccc .Flags =_ebc .MakeInteger (int64 (_afcca ));_cecgd ._adgc =_aaccc ;_bgeef :=&PdfFont {_cbfg :_cecgd };return _bgeef ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func _dcafg (_ggbfg _ebc .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_ffcea :=NewPdfColorspaceSpecialSeparation ();if _eebfc ,_acdg :=_ggbfg .(*_ebc .PdfIndirectObject );_acdg {_ffcea ._aff =_eebfc ;};_ggbfg =_ebc .TraceToDirectObject (_ggbfg );
_bbdff ,_edgae :=_ggbfg .(*_ebc .PdfObjectArray );if !_edgae {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _bbdff .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_ggbfg =_bbdff .Get (0);_bfafg ,_edgae :=_ggbfg .(*_ebc .PdfObjectName );if !_edgae {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bfafg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_ggbfg =_bbdff .Get (1);_bfafg ,_edgae =_ggbfg .(*_ebc .PdfObjectName );if !_edgae {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_ffcea .ColorantName =_bfafg ;_ggbfg =_bbdff .Get (2);_gcgc ,_agce :=NewPdfColorspaceFromPdfObject (_ggbfg );if _agce !=nil {return nil ,_agce ;};_ffcea .AlternateSpace =_gcgc ;_cgce ,_agce :=_adda (_bbdff .Get (3));if _agce !=nil {return nil ,_agce ;
};_ffcea .TintTransform =_cgce ;return _ffcea ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _ebc .PdfObjectName ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// Height returns the height of `rect`.
func (_cfeaa *PdfRectangle )Height ()float64 {return _bcd .Abs (_cfeaa .Ury -_cfeaa .Lly )};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_dacgc :=&PdfShadingType2 {};_dacgc .PdfShading =&PdfShading {};_dacgc .PdfShading ._abfcbf =_ebc .MakeIndirectObject (_ebc .MakeDict ());_dacgc .PdfShading ._fcbcf =_dacgc ;return _dacgc ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_aad :=NewPdfAnnotation ();_eagc :=&PdfAnnotationLink {};_eagc .PdfAnnotation =_aad ;_aad .SetContext (_eagc );return _eagc ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_fddd *PdfWriter )makeOffSetReference (_cgbbg int64 ){_befeag :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_cgbbg );
_fddd .writeString (_befeag );_fddd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// GetCharMetrics returns the char metrics for character code `code`.
func (_becggg pdfCIDFontType2 )GetCharMetrics (code _cgf .CharCode )(_ge .CharMetrics ,bool ){if _cddca ,_ggbff :=_becggg ._aeef [code ];_ggbff {return _ge .CharMetrics {Wx :_cddca },true ;};_bgfab :=rune (code );_aedcc ,_fdffa :=_becggg ._dfgda [_bgfab ];
if !_fdffa {_aedcc =int (_becggg ._cfcf );};return _ge .CharMetrics {Wx :float64 (_aedcc )},true ;};type pdfFontType3 struct{fontCommon ;_eefe *_ebc .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _ebc .PdfObject ;Encoding _ebc .PdfObject ;FontBBox _ebc .PdfObject ;FontMatrix _ebc .PdfObject ;FirstChar _ebc .PdfObject ;LastChar _ebc .PdfObject ;Widths _ebc .PdfObject ;Resources _ebc .PdfObject ;_gdege map[_cgf .CharCode ]float64 ;_dbbe _cgf .TextEncoder ;
};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _ebc .PdfObject ;NewWindow _ebc .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _ebc .PdfObject ;Sy _ebc .PdfObject ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_baeff *PdfReader )GetEncryptionMethod ()string {_adeef :=_baeff ._bfef .GetCrypter ();return _adeef .String ();};

// M returns the value of the magenta component of the color.
func (_egacg *PdfColorDeviceCMYK )M ()float64 {return _egacg [1]};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject implements interface PdfModel.
func (_fcef *PdfAnnotationRichMedia )ToPdfObject ()_ebc .PdfObject {_fcef .PdfAnnotation .ToPdfObject ();_ggad :=_fcef ._daf ;_gfacc :=_ggad .PdfObject .(*_ebc .PdfObjectDictionary );_gfacc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_gfacc .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fcef .RichMediaSettings );_gfacc .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fcef .RichMediaContent );
return _ggad ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _ebc .PdfObject ;Movie _ebc .PdfObject ;A _ebc .PdfObject ;};

// Encoder returns the font's text encoder.
func (_afgdc pdfFontType0 )Encoder ()_cgf .TextEncoder {return _afgdc ._bbdffb };

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _ebc .PdfObject ;Open _ebc .PdfObject ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_db .File ,error ){const _fdcda ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fbdgd ,_cafb :=_db .Open (pdfFile );if _cafb !=nil {return nil ,nil ,_cafb ;};_ffcgd ,_cafb :=_dbad (_fbdgd ,opts ,true ,_fdcda );if _cafb !=nil {_fbdgd .Close ();return nil ,nil ,_cafb ;};return _ffcgd ,_fbdgd ,nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ggbfe FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ggbfe .Mask ()|fl .Mask ())};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ebc .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_cfbfe OutlineDest )ToPdfObject ()_ebc .PdfObject {if (_cfbfe .PageObj ==nil &&_cfbfe .Page < 0)||_cfbfe .Mode ==""{return _ebc .MakeNull ();};_gbffba :=_ebc .MakeArray ();if _cfbfe .PageObj !=nil {_gbffba .Append (_cfbfe .PageObj );}else {_gbffba .Append (_ebc .MakeInteger (_cfbfe .Page ));
};_gbffba .Append (_ebc .MakeName (_cfbfe .Mode ));switch _cfbfe .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gbffba .Append (_ebc .MakeFloat (_cfbfe .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gbffba .Append (_ebc .MakeFloat (_cfbfe .X ));
case "\u0058\u0059\u005a":_gbffba .Append (_ebc .MakeFloat (_cfbfe .X ));_gbffba .Append (_ebc .MakeFloat (_cfbfe .Y ));_gbffba .Append (_ebc .MakeFloat (_cfbfe .Zoom ));default:_gbffba .Set (1,_ebc .MakeName ("\u0046\u0069\u0074"));};return _gbffba ;};


// Register registers (caches) a model to primitive object relationship.
func (_fbabf *modelManager )Register (primitive _ebc .PdfObject ,model PdfModel ){_fbabf ._cced [model ]=primitive ;_fbabf ._caad [primitive ]=model ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gcefg *PdfPage )error ;};

// B returns the value of the blue component of the color.
func (_fffc *PdfColorDeviceRGB )B ()float64 {return _fffc [2]};

// GetContentStream returns the XObject Form's content stream.
func (_dbeac *XObjectForm )GetContentStream ()([]byte ,error ){_baacc ,_bdbcb :=_ebc .DecodeStream (_dbeac ._eaffe );if _bdbcb !=nil {return nil ,_bdbcb ;};return _baacc ,nil ;};func (_bbfgg *PdfWriter )writeObjects (){_ca .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bbfgg ._gfbe ));
_bbfgg ._bdgf =make (map[int ]crossReference );_bbfgg ._bdgf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bbfgg ._bfede .ObjectMap !=nil {for _efcea ,_cbecc :=range _bbfgg ._bfede .ObjectMap {if _efcea ==0{continue ;};if _cbecc .XType ==_ebc .XrefTypeObjectStream {_cefcf :=crossReference {Type :2,ObjectNumber :_cbecc .OsObjNumber ,Index :_cbecc .OsObjIndex };
_bbfgg ._bdgf [_efcea ]=_cefcf ;};if _cbecc .XType ==_ebc .XrefTypeTableEntry {_fbcgd :=crossReference {Type :1,ObjectNumber :_cbecc .ObjectNumber ,Offset :_cbecc .Offset };_bbfgg ._bdgf [_efcea ]=_fbcgd ;};};};};func (_bgca *PdfReader )loadAnnotations (_gcdfe _ebc .PdfObject )([]*PdfAnnotation ,error ){_faaba ,_ccfff :=_ebc .GetArray (_gcdfe );
if !_ccfff {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _ebeeg []*PdfAnnotation ;for _ ,_gacfb :=range _faaba .Elements (){_gacfb =_ebc .ResolveReference (_gacfb );
if _ ,_dadfe :=_gacfb .(*_ebc .PdfObjectNull );_dadfe {continue ;};_caeff ,_edcg :=_gacfb .(*_ebc .PdfObjectDictionary );_abeba ,_ggfd :=_gacfb .(*_ebc .PdfIndirectObject );if _edcg {_abeba =&_ebc .PdfIndirectObject {};_abeba .PdfObject =_caeff ;}else {if !_ggfd {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_fefef ,_dceceb :=_bgca .newPdfAnnotationFromIndirectObject (_abeba );if _dceceb !=nil {return nil ,_dceceb ;};switch _ffgcc :=_fefef .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_efdde :=range _bgca .AcroForm .AllFields (){if _efdde ._faga ==_ffgcc .Parent {_ffgcc ._cdgb =_efdde ;
break ;};};};if _fefef !=nil {_ebeeg =append (_ebeeg ,_fefef );};};return _ebeeg ,nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_ebc .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_ebc .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_ebc .PdfObjectBool ;_fcbcf PdfModel ;_abfcbf _ebc .PdfObject ;};func (_dbebg *DSS )addOCSPs (_egdde [][]byte )([]*_ebc .PdfObjectStream ,error ){return _dbebg .add (&_dbebg .OCSPs ,_dbebg ._gdcg ,_egdde );
};func (_ccgc *PdfAnnotationMarkup )appendToPdfDictionary (_gbdf *_ebc .PdfObjectDictionary ){_gbdf .SetIfNotNil ("\u0054",_ccgc .T );if _ccgc .Popup !=nil {_gbdf .Set ("\u0050\u006f\u0070u\u0070",_ccgc .Popup .ToPdfObject ());};_gbdf .SetIfNotNil ("\u0043\u0041",_ccgc .CA );
_gbdf .SetIfNotNil ("\u0052\u0043",_ccgc .RC );_gbdf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccgc .CreationDate );_gbdf .SetIfNotNil ("\u0049\u0052\u0054",_ccgc .IRT );_gbdf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ccgc .Subj );
_gbdf .SetIfNotNil ("\u0052\u0054",_ccgc .RT );_gbdf .SetIfNotNil ("\u0049\u0054",_ccgc .IT );_gbdf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ccgc .ExData );};func (_cecc *LTV )enable (_bdbdc ,_geace []*_c .Certificate ,_adfac string )error {_ceeef ,_fbebc ,_deac :=_cecc .buildCertChain (_bdbdc ,_geace );
if _deac !=nil {return _deac ;};_cbgee ,_deac :=_cecc .getCerts (_ceeef );if _deac !=nil {return _deac ;};var _agage ,_egaec [][]byte ;if _cecc .OCSPClient !=nil {_agage ,_deac =_cecc .getOCSPs (_ceeef ,_fbebc );if _deac !=nil {return _deac ;};};if _cecc .CRLClient !=nil {_egaec ,_deac =_cecc .getCRLs (_ceeef );
if _deac !=nil {return _deac ;};};_dddfe :=_cecc ._dgee ;_eded ,_deac :=_dddfe .addCerts (_cbgee );if _deac !=nil {return _deac ;};_degce ,_deac :=_dddfe .addOCSPs (_agage );if _deac !=nil {return _deac ;};_ebfcd ,_deac :=_dddfe .addCRLs (_egaec );if _deac !=nil {return _deac ;
};if _adfac !=""{_dddfe .VRI [_adfac ]=&VRI {Cert :_eded ,OCSP :_degce ,CRL :_ebfcd };};_cecc ._agfbg .SetDSS (_dddfe );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_aaacg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abggf :=vals [0];if _abggf < 0.0||_abggf > 1.0{_ca .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _abggf < 0.0{_abggf =0.0;}else if _abggf > 1.0{_abggf =1.0;};return NewPdfColorDeviceGray (_abggf ),nil ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gbfc :_ebc .MakeIndirectObject (_ebc .MakeDict ()),VRI :map[string ]*VRI {}};};

// GetContainingPdfObject implements model.PdfModel interface.
func (_bdfef *PdfOutputIntent )GetContainingPdfObject ()_ebc .PdfObject {return _bdfef ._fbge };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ageddf *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgfe :=vals [0];if _dgfe < 0.0||_dgfe > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgfe );
return nil ,ErrColorOutOfRange ;};_cecg :=NewPdfColorCalGray (_dgfe );return _cecg ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_ecfc *PdfPage )AddFont (name _ebc .PdfObjectName ,font _ebc .PdfObject )error {if _ecfc .Resources ==nil {_ecfc .Resources =NewPdfPageResources ();};if _ecfc .Resources .Font ==nil {_ecfc .Resources .Font =_ebc .MakeDict ();};_aedga ,_gfea :=_ebc .TraceToDirectObject (_ecfc .Resources .Font ).(*_ebc .PdfObjectDictionary );
if !_gfea {_ca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_ebc .TraceToDirectObject (_ecfc .Resources .Font ));
return _cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aedga .Set (name ,font );return nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dacda :=&PdfSignature {Type :_ebc .MakeName ("\u0053\u0069\u0067"),Handler :handler };_ecgdd :=&pdfSignDictionary {PdfObjectDictionary :_ebc .MakeDict (),_cagff :&handler ,_gffg :_dacda };
_dacda ._ffaeb =_ebc .MakeIndirectObject (_ecgdd );return _dacda ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject implements interface PdfModel.
func (_bfd *PdfActionSetOCGState )ToPdfObject ()_ebc .PdfObject {_bfd .PdfAction .ToPdfObject ();_cbd :=_bfd ._dc ;_fde :=_cbd .PdfObject .(*_ebc .PdfObjectDictionary );_fde .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeSetOCGState )));_fde .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bfd .State );
_fde .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bfd .PreserveRB );return _cbd ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_adgca PdfModel ;_bcgg _ebc .PdfObject ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cdda *PdfPage )GetAllContentStreams ()(string ,error ){_cfca ,_fdbc :=_cdda .GetContentStreams ();if _fdbc !=nil {return "",_fdbc ;};return _ea .Join (_cfca ,"\u0020"),nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_gdbdgb *PdfField )Flags ()FieldFlag {var _adeg FieldFlag ;_bacg ,_cffc :=_gdbdgb .inherit (func (_bfdda *PdfField )bool {if _bfdda .Ff !=nil {_adeg =FieldFlag (*_bfdda .Ff );return true ;};return false ;});if _cffc !=nil {_ca .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_cffc );
};if !_bacg {_ca .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _adeg ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_agaa *_ebc .PdfIndirectObject ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_gdag *PdfFieldChoice )ToPdfObject ()_ebc .PdfObject {_gdag .PdfField .ToPdfObject ();_fdff :=_gdag ._faga ;_faad :=_fdff .PdfObject .(*_ebc .PdfObjectDictionary );_faad .Set ("\u0046\u0054",_ebc .MakeName ("\u0043\u0068"));if _gdag .Opt !=nil {_faad .Set ("\u004f\u0070\u0074",_gdag .Opt );
};if _gdag .TI !=nil {_faad .Set ("\u0054\u0049",_gdag .TI );};if _gdag .I !=nil {_faad .Set ("\u0049",_gdag .I );};return _fdff ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ccbcb :=&PdfFieldSignature {};_ccbcb .PdfField =NewPdfField ();_ccbcb .PdfField .SetContext (_ccbcb );_ccbcb .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ccbcb .PdfAnnotationWidget .SetContext (_ccbcb );
_ccbcb .PdfAnnotationWidget ._daf =_ccbcb .PdfField ._faga ;_ccbcb .T =_ebc .MakeString ("");_ccbcb .F =_ebc .MakeInteger (132);_ccbcb .V =signature ;return _ccbcb ;};func _aaff (_eabbc []byte )bool {if len (_eabbc )< 4{return true ;};for _ddff :=range _eabbc [:4]{_eacea :=rune (_ddff );
if !_dd .Is (_dd .ASCII_Hex_Digit ,_eacea )&&!_dd .IsSpace (_eacea ){return true ;};};return false ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fe :=NewPdfAction ();_adfa :=&PdfActionMovie {};_adfa .PdfAction =_fe ;_fe .SetContext (_adfa );return _adfa ;};func (_bgcf fontCommon )isCIDFont ()bool {if _bgcf ._dccgbc ==""{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bgcf );
};_dagfd :=false ;switch _bgcf ._dccgbc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dagfd =true ;};_ca .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_dagfd ,_bgcf );
return _dagfd ;};

// IsSimple returns true if `font` is a simple font.
func (_ceegg *PdfFont )IsSimple ()bool {_ ,_fbcgc :=_ceegg ._cbfg .(*pdfFontSimple );return _fbcgc };func (_cfb *PdfReader )newPdfActionGotoRFromDict (_gffe *_ebc .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cbdd ,_bcdag :=_ece (_gffe .Get ("\u0046"));
if _bcdag !=nil {return nil ,_bcdag ;};return &PdfActionGoToR {D :_gffe .Get ("\u0044"),NewWindow :_gffe .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cbdd },nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fecd *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_ebc .PdfObjectArray ;Domain *_ebc .PdfObjectArray ;Function []PdfFunction ;Extend *_ebc .PdfObjectArray ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_efbg *PdfField )SetContext (ctx PdfModel ){_efbg ._febf =ctx };

// PdfVersion returns version of the PDF file.
func (_abadac *PdfReader )PdfVersion ()_ebc .Version {return _abadac ._bfef .PdfVersion ()};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dgda *PdfFontDescriptor )ToPdfObject ()_ebc .PdfObject {_gcbb :=_ebc .MakeDict ();if _dgda ._afcc ==nil {_dgda ._afcc =&_ebc .PdfIndirectObject {};};_dgda ._afcc .PdfObject =_gcbb ;_gcbb .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dgda .FontName !=nil {_gcbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dgda .FontName );};if _dgda .FontFamily !=nil {_gcbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dgda .FontFamily );};if _dgda .FontStretch !=nil {_gcbb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dgda .FontStretch );
};if _dgda .FontWeight !=nil {_gcbb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dgda .FontWeight );};if _dgda .Flags !=nil {_gcbb .Set ("\u0046\u006c\u0061g\u0073",_dgda .Flags );};if _dgda .FontBBox !=nil {_gcbb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dgda .FontBBox );
};if _dgda .ItalicAngle !=nil {_gcbb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dgda .ItalicAngle );};if _dgda .Ascent !=nil {_gcbb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dgda .Ascent );};if _dgda .Descent !=nil {_gcbb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dgda .Descent );
};if _dgda .Leading !=nil {_gcbb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dgda .Leading );};if _dgda .CapHeight !=nil {_gcbb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dgda .CapHeight );};if _dgda .XHeight !=nil {_gcbb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dgda .XHeight );
};if _dgda .StemV !=nil {_gcbb .Set ("\u0053\u0074\u0065m\u0056",_dgda .StemV );};if _dgda .StemH !=nil {_gcbb .Set ("\u0053\u0074\u0065m\u0048",_dgda .StemH );};if _dgda .AvgWidth !=nil {_gcbb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dgda .AvgWidth );
};if _dgda .MaxWidth !=nil {_gcbb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dgda .MaxWidth );};if _dgda .MissingWidth !=nil {_gcbb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dgda .MissingWidth );};if _dgda .FontFile !=nil {_gcbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dgda .FontFile );
};if _dgda .FontFile2 !=nil {_gcbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dgda .FontFile2 );};if _dgda .FontFile3 !=nil {_gcbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dgda .FontFile3 );};if _dgda .CharSet !=nil {_gcbb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dgda .CharSet );
};if _dgda .Style !=nil {_gcbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dgda .FontName );};if _dgda .Lang !=nil {_gcbb .Set ("\u004c\u0061\u006e\u0067",_dgda .Lang );};if _dgda .FD !=nil {_gcbb .Set ("\u0046\u0044",_dgda .FD );};if _dgda .CIDSet !=nil {_gcbb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dgda .CIDSet );
};return _dgda ._afcc ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ecaaa DefaultImageHandler )NewImageFromGoImage (goimg _ecg .Image )(*Image ,error ){_febef ,_aefaf :=_cfef .FromGoImage (goimg );if _aefaf !=nil {return nil ,_aefaf ;};_ecffc :=_ebeb (_febef .Base ());return &_ecffc ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_agbgb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _agbgb .UnderlyingCS .GetNumComponents ();};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_ddfd *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_ddfd .GetNumComponents (){return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcafd ,_begf :=_ddfd .TintTransform .Evaluate (vals );
if _begf !=nil {return nil ,_begf ;};_bfdd ,_begf :=_ddfd .AlternateSpace .ColorFromFloats (_dcafd );if _begf !=nil {return nil ,_begf ;};return _bfdd ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_bdfag *PdfReader )resolveReference (_dcbef *_ebc .PdfObjectReference )(_ebc .PdfObject ,bool ,error ){_cffgee ,_adcg :=_bdfag ._bfef .ObjCache [int (_dcbef .ObjectNumber )];
if !_adcg {_ca .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_dcbef );_dacgd ,_dfege :=_bdfag ._bfef .LookupByReference (*_dcbef );if _dfege !=nil {return nil ,false ,_dfege ;};_bdfag ._bfef .ObjCache [int (_dcbef .ObjectNumber )]=_dacgd ;
return _dacgd ,false ,nil ;};return _cffgee ,true ,nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _ebc .PdfObject )(*PdfOutputIntent ,error ){_bbbbe :=&PdfOutputIntent {};if _cdcca :=_bbbbe .ParsePdfObject (object );_cdcca !=nil {return nil ,_cdcca ;};return _bbbbe ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_aafdf :=appender .Reader .DSS ;if _aafdf ==nil {_aafdf =NewDSS ();};if _ecee :=_aafdf .generateHashMaps ();_ecee !=nil {return nil ,_ecee ;};return &LTV {CertClient :_gd .NewCertClient (),OCSPClient :_gd .NewOCSPClient (),CRLClient :_gd .NewCRLClient (),SkipExisting :true ,_agfbg :appender ,_dgee :_aafdf },nil ;
};

// ReplacePage replaces the original page to a new page.
func (_gbbe *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_eebg :=pageNum -1;for _bdc :=range _gbbe ._dcbg {if _bdc ==_eebg {_faea :=page .Duplicate ();_edced (_faea );_gbbe ._dcbg [_bdc ]=_faea ;};};};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dgcfc *PdfFieldButton )IsCheckbox ()bool {return _dgcfc .GetType ()==ButtonTypeCheckbox };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ffaeb *_ebc .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_ebc .PdfObjectName ;Filter *_ebc .PdfObjectName ;SubFilter *_ebc .PdfObjectName ;Contents *_ebc .PdfObjectString ;Cert _ebc .PdfObject ;ByteRange *_ebc .PdfObjectArray ;Reference *_ebc .PdfObjectArray ;Changes *_ebc .PdfObjectArray ;Name *_ebc .PdfObjectString ;
M *_ebc .PdfObjectString ;Location *_ebc .PdfObjectString ;Reason *_ebc .PdfObjectString ;ContactInfo *_ebc .PdfObjectString ;R *_ebc .PdfObjectInteger ;V *_ebc .PdfObjectInteger ;PropBuild *_ebc .PdfObjectDictionary ;PropAuthTime *_ebc .PdfObjectInteger ;
PropAuthType *_ebc .PdfObjectName ;};

// WriteToFile writes the Appender output to file specified by path.
func (_ddg *PdfAppender )WriteToFile (outputPath string )error {_debg ,_egfb :=_db .Create (outputPath );if _egfb !=nil {return _egfb ;};defer _debg .Close ();return _ddg .Write (_debg );};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_afaed *DSS )GetContainingPdfObject ()_ebc .PdfObject {return _afaed ._gbfc };

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_ebc .PdfObjectString ;Q *_ebc .PdfObjectInteger ;DS *_ebc .PdfObjectString ;RV _ebc .PdfObject ;};func _ffeaa (_befaf _ebc .PdfObject )(*PdfFunctionType3 ,error ){_cddd :=&PdfFunctionType3 {};var _gede *_ebc .PdfObjectDictionary ;
if _dacb ,_abga :=_befaf .(*_ebc .PdfIndirectObject );_abga {_dggcd ,_efaae :=_dacb .PdfObject .(*_ebc .PdfObjectDictionary );if !_efaae {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};
_cddd ._gedbg =_dacb ;_gede =_dggcd ;}else if _fdfaa ,_dfaf :=_befaf .(*_ebc .PdfObjectDictionary );_dfaf {_gede =_fdfaa ;}else {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgbc ,_gdca :=_ebc .TraceToDirectObject (_gede .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ebc .PdfObjectArray );
if !_gdca {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dgbc .Len ()!=2{_ca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fecgf ,_agbaff :=_dgbc .ToFloat64Array ();
if _agbaff !=nil {return nil ,_agbaff ;};_cddd .Domain =_fecgf ;_dgbc ,_gdca =_ebc .TraceToDirectObject (_gede .Get ("\u0052\u0061\u006eg\u0065")).(*_ebc .PdfObjectArray );if _gdca {if _dgbc .Len ()< 0||_dgbc .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gcdaa ,_cacae :=_dgbc .ToFloat64Array ();if _cacae !=nil {return nil ,_cacae ;};_cddd .Range =_gcdaa ;};_dgbc ,_gdca =_ebc .TraceToDirectObject (_gede .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_ebc .PdfObjectArray );if !_gdca {_ca .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cddd .Functions =[]PdfFunction {};
for _ ,_bdfac :=range _dgbc .Elements (){_gdfed ,_abfcb :=_adda (_bdfac );if _abfcb !=nil {return nil ,_abfcb ;};_cddd .Functions =append (_cddd .Functions ,_gdfed );};_dgbc ,_gdca =_ebc .TraceToDirectObject (_gede .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_ebc .PdfObjectArray );
if !_gdca {_ca .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_aedcf ,_agbaff :=_dgbc .ToFloat64Array ();if _agbaff !=nil {return nil ,_agbaff ;};_cddd .Bounds =_aedcf ;if len (_cddd .Bounds )!=len (_cddd .Functions )-1{_ca .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_cddd .Bounds ),len (_cddd .Functions ));
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgbc ,_gdca =_ebc .TraceToDirectObject (_gede .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ebc .PdfObjectArray );if !_gdca {_ca .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gecaa ,_agbaff :=_dgbc .ToFloat64Array ();
if _agbaff !=nil {return nil ,_agbaff ;};_cddd .Encode =_gecaa ;if len (_cddd .Encode )!=2*len (_cddd .Functions ){_ca .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_cddd .Encode ),len (_cddd .Functions ));
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _cddd ,nil ;};

// Encoder returns the font's text encoder.
func (_cdbg pdfFontType3 )Encoder ()_cgf .TextEncoder {return _cdbg ._dbbe };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _ebc .PdfObject ;Name _ebc .PdfObject ;};var _edgdf =false ;

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_degde :=&PdfShadingPatternType2 {};_degde .Matrix =_ebc .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_degde .PdfPattern =&PdfPattern {};_degde .PdfPattern .PatternType =int64 (*_ebc .MakeInteger (2));
_degde .PdfPattern ._adgca =_degde ;_degde .PdfPattern ._bcgg =_ebc .MakeIndirectObject (_ebc .MakeDict ());return _degde ;};

// PartialName returns the partial name of the field.
func (_bfege *PdfField )PartialName ()string {_eecgg :="";if _bfege .T !=nil {_eecgg =_bfege .T .Decoded ();}else {_ca .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _eecgg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_deca *PdfColorspaceDeviceCMYK )ToPdfObject ()_ebc .PdfObject {return _ebc .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_egbd *PdfFieldButton )SetType (btype ButtonType ){_gbbd :=uint32 (0);if _egbd .Ff !=nil {_gbbd =uint32 (*_egbd .Ff );};switch btype {case ButtonTypePush :_gbbd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_gbbd |=FieldFlagRadio .Mask ();
};_egbd .Ff =_ebc .MakeInteger (int64 (_gbbd ));};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ccfcf *pdfCIDFontType0 )ToPdfObject ()_ebc .PdfObject {return _ebc .MakeNull ()};func (_fabfc *PdfWriter )mapObjectStreams (_gefcd bool )(map[_ebc .PdfObject ]bool ,bool ){_gaeag :=make (map[_ebc .PdfObject ]bool );for _ ,_begeb :=range _fabfc ._gfbe {if _baedc ,_gdffg :=_begeb .(*_ebc .PdfObjectStreams );
_gdffg {_gefcd =true ;for _ ,_cebee :=range _baedc .Elements (){_gaeag [_cebee ]=true ;if _gdegcf ,_cfcgd :=_cebee .(*_ebc .PdfIndirectObject );_cfcgd {_gaeag [_gdegcf .PdfObject ]=true ;};};};};return _gaeag ,_gefcd ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_ebc .PdfParser ;DiffPolicy _ggb .DiffPolicy ;};func (_geeb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_badac *PdfReader )GetObjectNums ()[]int {return _badac ._bfef .GetObjectNums ()};func _ddba (_debfd *_ebc .PdfObjectDictionary )(*PdfShadingPattern ,error ){_eafff :=&PdfShadingPattern {};_daece :=_debfd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _daece ==nil {_ca .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gbgdc ,_gegfe :=_bdgecc (_daece );if _gegfe !=nil {_ca .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gegfe );
return nil ,_gegfe ;};_eafff .Shading =_gbgdc ;if _debedb :=_debfd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_debedb !=nil {_gfbgb ,_edgfb :=_debedb .(*_ebc .PdfObjectArray );if !_edgfb {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_debedb );
return nil ,_ebc .ErrTypeError ;};_eafff .Matrix =_gfbgb ;};if _aacdd :=_debfd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_aacdd !=nil {_eafff .ExtGState =_aacdd ;};return _eafff ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_aeafb *pdfFontType3 )ToPdfObject ()_ebc .PdfObject {if _aeafb ._eefe ==nil {_aeafb ._eefe =&_ebc .PdfIndirectObject {};};_fcbe :=_aeafb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_aeafb ._eefe .PdfObject =_fcbe ;if _aeafb .FirstChar !=nil {_fcbe .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aeafb .FirstChar );
};if _aeafb .LastChar !=nil {_fcbe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aeafb .LastChar );};if _aeafb .Widths !=nil {_fcbe .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aeafb .Widths );};if _aeafb .Encoding !=nil {_fcbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aeafb .Encoding );
}else if _aeafb ._dbbe !=nil {_eecgc :=_aeafb ._dbbe .ToPdfObject ();if _eecgc !=nil {_fcbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eecgc );};};if _aeafb .FontBBox !=nil {_fcbe .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_aeafb .FontBBox );
};if _aeafb .FontMatrix !=nil {_fcbe .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_aeafb .FontMatrix );};if _aeafb .CharProcs !=nil {_fcbe .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_aeafb .CharProcs );};if _aeafb .Resources !=nil {_fcbe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aeafb .Resources );
};return _aeafb ._eefe ;};func (_cbddf *PdfReader )newPdfAnnotationSquareFromDict (_eab *_ebc .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dafc :=PdfAnnotationSquare {};_bedb ,_dgc :=_cbddf .newPdfAnnotationMarkupFromDict (_eab );if _dgc !=nil {return nil ,_dgc ;
};_dafc .PdfAnnotationMarkup =_bedb ;_dafc .BS =_eab .Get ("\u0042\u0053");_dafc .IC =_eab .Get ("\u0049\u0043");_dafc .BE =_eab .Get ("\u0042\u0045");_dafc .RD =_eab .Get ("\u0052\u0044");return &_dafc ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_geec *PdfPage )GetPageDict ()*_ebc .PdfObjectDictionary {_cgacc :=_geec ._gaefe ;_cgacc .Clear ();_cgacc .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0050\u0061\u0067\u0065"));_cgacc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_geec .Parent );
if _geec .LastModified !=nil {_cgacc .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_geec .LastModified .ToPdfObject ());};if _geec .Resources !=nil {_cgacc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_geec .Resources .ToPdfObject ());
};if _geec .CropBox !=nil {_cgacc .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_geec .CropBox .ToPdfObject ());};if _geec .MediaBox !=nil {_cgacc .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_geec .MediaBox .ToPdfObject ());};if _geec .BleedBox !=nil {_cgacc .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_geec .BleedBox .ToPdfObject ());
};if _geec .TrimBox !=nil {_cgacc .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_geec .TrimBox .ToPdfObject ());};if _geec .ArtBox !=nil {_cgacc .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_geec .ArtBox .ToPdfObject ());};_cgacc .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_geec .BoxColorInfo );
_cgacc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_geec .Contents );if _geec .Rotate !=nil {_cgacc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ebc .MakeInteger (*_geec .Rotate ));};_cgacc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_geec .Group );
_cgacc .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_geec .Thumb );_cgacc .SetIfNotNil ("\u0042",_geec .B );_cgacc .SetIfNotNil ("\u0044\u0075\u0072",_geec .Dur );_cgacc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_geec .Trans );_cgacc .SetIfNotNil ("\u0041\u0041",_geec .AA );
_cgacc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_geec .Metadata );_cgacc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_geec .PieceInfo );_cgacc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_geec .StructParents );
_cgacc .SetIfNotNil ("\u0049\u0044",_geec .ID );_cgacc .SetIfNotNil ("\u0050\u005a",_geec .PZ );_cgacc .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_geec .SeparationInfo );_cgacc .SetIfNotNil ("\u0054\u0061\u0062\u0073",_geec .Tabs );
_cgacc .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_geec .TemplateInstantiated );_cgacc .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_geec .PresSteps );_cgacc .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_geec .UserUnit );
_cgacc .SetIfNotNil ("\u0056\u0050",_geec .VP );if _geec ._ebgag !=nil {_eaegf :=_ebc .MakeArray ();for _ ,_decdb :=range _geec ._ebgag {if _eabae :=_decdb .GetContext ();_eabae !=nil {_eaegf .Append (_eabae .ToPdfObject ());}else {_eaegf .Append (_decdb .ToPdfObject ());
};};if _eaegf .Len ()> 0{_cgacc .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_eaegf );};}else if _geec .Annots !=nil {_cgacc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_geec .Annots );};return _cgacc ;};

// R returns the value of the red component of the color.
func (_bbce *PdfColorDeviceRGB )R ()float64 {return _bbce [0]};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _ebc .PdfObject ;AN _ebc .PdfObject ;OP _ebc .PdfObject ;JS _ebc .PdfObject ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fbeg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_ebc .StreamEncoder ,error ){_efggd ,_cdaf :=_fbeg ._bcgg .(*_ebc .PdfObjectStream );if !_cdaf {_ca .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbeg ._bcgg );
return nil ,nil ,_ebc .ErrTypeError ;};_degabg ,_efad :=_ebc .DecodeStream (_efggd );if _efad !=nil {_ca .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_efad );
return nil ,nil ,_efad ;};_cacfc ,_efad :=_ebc .NewEncoderFromStream (_efggd );if _efad !=nil {_ca .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_efad );
return nil ,nil ,_efad ;};return _degabg ,_cacfc ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbaad *PdfColorspaceSpecialSeparation )ToPdfObject ()_ebc .PdfObject {_bcdeg :=_ebc .MakeArray (_ebc .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_bcdeg .Append (_cbaad .ColorantName );_bcdeg .Append (_cbaad .AlternateSpace .ToPdfObject ());
_bcdeg .Append (_cbaad .TintTransform .ToPdfObject ());if _cbaad ._aff !=nil {_cbaad ._aff .PdfObject =_bcdeg ;return _cbaad ._aff ;};return _bcdeg ;};

// GetContentStream returns the pattern cell's content stream
func (_bcfff *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ddad ,_ ,_gaea :=_bcfff .GetContentStreamWithEncoder ();return _ddad ,_gaea ;};

// GetOptimizer returns current PDF optimizer.
func (_cffgeb *PdfWriter )GetOptimizer ()Optimizer {return _cffgeb ._gaaga };

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_ebc .PdfObjectArray ;ExtGState _ebc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dcb *PdfActionJavaScript )ToPdfObject ()_ebc .PdfObject {_dcb .PdfAction .ToPdfObject ();_fdd :=_dcb ._dc ;_gde :=_fdd .PdfObject .(*_ebc .PdfObjectDictionary );_gde .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeJavaScript )));_gde .SetIfNotNil ("\u004a\u0053",_dcb .JS );
return _fdd ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cffa *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _cfedf (_bcabd []byte )([]byte ,error ){_gaebg :=_ec .New ();if _ ,_eddga :=_eag .Copy (_gaebg ,_ed .NewReader (_bcabd ));_eddga !=nil {return nil ,_eddga ;};
return _gaebg .Sum (nil ),nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_aggbd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_addebf *PdfSignature )extractChainFromPKCS7 ()([]*_c .Certificate ,error ){_bafa ,_agcgc :=_cd .Parse (_addebf .Contents .Bytes ());if _agcgc !=nil {return nil ,_agcgc ;
};return _bafa .Certificates ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_cafe *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_faeab *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_ebc .PdfObject ,error );};

// GetAction returns the PDF action for the annotation link.
func (_eaa *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _eaa ._adaa !=nil {return _eaa ._adaa ,nil ;};if _eaa .A ==nil {return nil ,nil ;};if _eaa ._fcf ==nil {return nil ,nil ;};_bag ,_gbc :=_eaa ._fcf .loadAction (_eaa .A );if _gbc !=nil {return nil ,_gbc ;
};_eaa ._adaa =_bag ;return _eaa ._adaa ,nil ;};func (_dagc *PdfReader )newPdfActionSetOCGStateFromDict (_cad *_ebc .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cad .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cad .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_ffega :=&PdfPageResources {};_ffega ._bgbaf =_ebc .MakeDict ();return _ffega ;};

// SetContentStream sets the pattern cell's content stream.
func (_gdgdc *PdfTilingPattern )SetContentStream (content []byte ,encoder _ebc .StreamEncoder )error {_dbggc ,_ccde :=_gdgdc ._bcgg .(*_ebc .PdfObjectStream );if !_ccde {_ca .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdgdc ._bcgg );
return _ebc .ErrTypeError ;};if encoder ==nil {encoder =_ebc .NewRawEncoder ();};_ccabf :=_dbggc .PdfObjectDictionary ;_gabd :=encoder .MakeStreamDict ();_ccabf .Merge (_gabd );_bdgb ,_ggbfec :=encoder .EncodeBytes (content );if _ggbfec !=nil {return _ggbfec ;
};_ccabf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_bdgb ))));_dbggc .Stream =_bdgb ;return nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _ebc .PdfObject ;FontFamily _ebc .PdfObject ;FontStretch _ebc .PdfObject ;FontWeight _ebc .PdfObject ;Flags _ebc .PdfObject ;FontBBox _ebc .PdfObject ;ItalicAngle _ebc .PdfObject ;Ascent _ebc .PdfObject ;Descent _ebc .PdfObject ;
Leading _ebc .PdfObject ;CapHeight _ebc .PdfObject ;XHeight _ebc .PdfObject ;StemV _ebc .PdfObject ;StemH _ebc .PdfObject ;AvgWidth _ebc .PdfObject ;MaxWidth _ebc .PdfObject ;MissingWidth _ebc .PdfObject ;FontFile _ebc .PdfObject ;FontFile2 _ebc .PdfObject ;
FontFile3 _ebc .PdfObject ;CharSet _ebc .PdfObject ;_fcga int ;_caed float64 ;*fontFile ;_feabd *_ge .TtfType ;

// Additional entries for CIDFonts
Style _ebc .PdfObject ;Lang _ebc .PdfObject ;FD _ebc .PdfObject ;CIDSet _ebc .PdfObject ;_afcc *_ebc .PdfIndirectObject ;};func _cgba (_cdedc _ebc .PdfObject )[]*_ebc .PdfObjectStream {if _cdedc ==nil {return nil ;};_gafcf ,_abfaf :=_ebc .GetArray (_cdedc );
if !_abfaf ||_gafcf .Len ()==0{return nil ;};_gedfb :=make ([]*_ebc .PdfObjectStream ,0,_gafcf .Len ());for _ ,_eaagg :=range _gafcf .Elements (){if _accb ,_cefbc :=_ebc .GetStream (_eaagg );_cefbc {_gedfb =append (_gedfb ,_accb );};};return _gedfb ;};


// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gfade *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_fcfg :=0.3*_gfade .R ()+0.59*_gfade .G ()+0.11*_gfade .B ();_fcfg =_bcd .Min (_bcd .Max (_fcfg ,0.0),1.0);return NewPdfColorDeviceGray (_fcfg );};func (_gbab *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _ebc .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _ebc .PdfObject ;Contents _ebc .PdfObject ;
Rotate *int64 ;Group _ebc .PdfObject ;Thumb _ebc .PdfObject ;B _ebc .PdfObject ;Dur _ebc .PdfObject ;Trans _ebc .PdfObject ;AA _ebc .PdfObject ;Metadata _ebc .PdfObject ;PieceInfo _ebc .PdfObject ;StructParents _ebc .PdfObject ;ID _ebc .PdfObject ;PZ _ebc .PdfObject ;
SeparationInfo _ebc .PdfObject ;Tabs _ebc .PdfObject ;TemplateInstantiated _ebc .PdfObject ;PresSteps _ebc .PdfObject ;UserUnit _ebc .PdfObject ;VP _ebc .PdfObject ;Annots _ebc .PdfObject ;_ebgag []*PdfAnnotation ;_gaefe *_ebc .PdfObjectDictionary ;_beacb *_ebc .PdfIndirectObject ;
_edgfd _ebc .PdfObjectDictionary ;_fagg *PdfReader ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bgfc *PdfColorspaceSpecialPattern )ToPdfObject ()_ebc .PdfObject {if _bgfc .UnderlyingCS ==nil {return _ebc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ffeg :=_ebc .MakeArray (_ebc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_ffeg .Append (_bgfc .UnderlyingCS .ToPdfObject ());if _bgfc ._fcgcb !=nil {_bgfc ._fcgcb .PdfObject =_ffeg ;return _bgfc ._fcgcb ;};return _ffeg ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_dddfc *PdfPattern )SetContext (ctx PdfModel ){_dddfc ._adgca =ctx };

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_afbec :=&PdfColorPatternType3 {};return _afbec ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_ecfcf *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_aggg :=_ecfcf ._bfef .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _aggg {return nil ,_cfe .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_aggg {return _ecfcf ,nil ;};if _ecfcf ._gecba [revisionNumber ]!=nil {return _ecfcf ._gecba [revisionNumber ],nil ;};_dfeaa :=_ecfcf ;for _fdece :=_aggg -1;_fdece >=revisionNumber ;_fdece --{_cbea ,_bacde :=_dfeaa .GetPreviousRevision ();
if _bacde !=nil {return nil ,_bacde ;};_ecfcf ._gecba [_fdece ]=_cbea ;_dfeaa =_cbea ;};return _dfeaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbcdd *PdfAnnotationPolyLine )ToPdfObject ()_ebc .PdfObject {_fbcdd .PdfAnnotation .ToPdfObject ();_bbf :=_fbcdd ._daf ;_abb :=_bbf .PdfObject .(*_ebc .PdfObjectDictionary );_fbcdd .PdfAnnotationMarkup .appendToPdfDictionary (_abb );_abb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_abb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_fbcdd .Vertices );_abb .SetIfNotNil ("\u004c\u0045",_fbcdd .LE );_abb .SetIfNotNil ("\u0042\u0053",_fbcdd .BS );_abb .SetIfNotNil ("\u0049\u0043",_fbcdd .IC );_abb .SetIfNotNil ("\u0042\u0045",_fbcdd .BE );
_abb .SetIfNotNil ("\u0049\u0054",_fbcdd .IT );_abb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fbcdd .Measure );return _bbf ;};

// ToPdfObject implements interface PdfModel.
func (_gaf *PdfActionNamed )ToPdfObject ()_ebc .PdfObject {_gaf .PdfAction .ToPdfObject ();_efd :=_gaf ._dc ;_ccg :=_efd .PdfObject .(*_ebc .PdfObjectDictionary );_ccg .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeNamed )));_ccg .SetIfNotNil ("\u004e",_gaf .N );
return _efd ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_degab *Image )GetSamples ()[]uint32 {_fcdce :=_ba .ResampleBytes (_degab .Data ,int (_degab .BitsPerComponent ));if _degab .BitsPerComponent < 8{_fcdce =_degab .samplesTrimPadding (_fcdce );};_cgca :=int (_degab .Width )*int (_degab .Height )*_degab .ColorComponents ;
if len (_fcdce )< _cgca {_ca .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fcdce ),_cgca );
return _fcdce ;}else if len (_fcdce )> _cgca {_ca .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fcdce ),_cgca );
_fcdce =_fcdce [:_cgca ];};return _fcdce ;};

// ToPdfObject returns the PDF representation of the function.
func (_dgge *PdfFunctionType0 )ToPdfObject ()_ebc .PdfObject {if _dgge ._cgfff ==nil {_dgge ._cgfff =&_ebc .PdfObjectStream {};};_ebafc :=_ebc .MakeDict ();_ebafc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ebc .MakeInteger (0));
_dgdbb :=&_ebc .PdfObjectArray {};for _ ,_gebdd :=range _dgge .Domain {_dgdbb .Append (_ebc .MakeFloat (_gebdd ));};_ebafc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgdbb );_abgcg :=&_ebc .PdfObjectArray {};for _ ,_dcgb :=range _dgge .Range {_abgcg .Append (_ebc .MakeFloat (_dcgb ));
};_ebafc .Set ("\u0052\u0061\u006eg\u0065",_abgcg );_dafa :=&_ebc .PdfObjectArray {};for _ ,_cgfb :=range _dgge .Size {_dafa .Append (_ebc .MakeInteger (int64 (_cgfb )));};_ebafc .Set ("\u0053\u0069\u007a\u0065",_dafa );_ebafc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_ebc .MakeInteger (int64 (_dgge .BitsPerSample )));
if _dgge .Order !=1{_ebafc .Set ("\u004f\u0072\u0064e\u0072",_ebc .MakeInteger (int64 (_dgge .Order )));};_ebafc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_dgge ._beegf ))));_dgge ._cgfff .Stream =_dgge ._beegf ;_dgge ._cgfff .PdfObjectDictionary =_ebafc ;
return _dgge ._cgfff ;};func (_bafdf *pdfFontType0 )baseFields ()*fontCommon {return &_bafdf .fontCommon };

// ParserMetadata gets the parser  metadata.
func (_caeb *CompliancePdfReader )ParserMetadata ()_ebc .ParserMetadata {if _caeb ._gcbea ==(_ebc .ParserMetadata {}){_caeb ._gcbea ,_ =_caeb ._bfef .ParserMetadata ();};return _caeb ._gcbea ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfgc *PdfShading )ToPdfObject ()_ebc .PdfObject {_aaagdg :=_bfgc ._abfcbf ;_ccee ,_dafed :=_bfgc .getShadingDict ();if _dafed !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfgc .ShadingType !=nil {_ccee .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bfgc .ShadingType );};if _bfgc .ColorSpace !=nil {_ccee .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bfgc .ColorSpace .ToPdfObject ());
};if _bfgc .Background !=nil {_ccee .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bfgc .Background );};if _bfgc .BBox !=nil {_ccee .Set ("\u0042\u0042\u006f\u0078",_bfgc .BBox .ToPdfObject ());};if _bfgc .AntiAlias !=nil {_ccee .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bfgc .AntiAlias );
};return _aaagdg ;};func (_fbedf *PdfWriter )copyObjects (){_beefa :=make (map[_ebc .PdfObject ]_ebc .PdfObject );_afca :=make ([]_ebc .PdfObject ,0,len (_fbedf ._gfbe ));_bfgac :=make (map[_ebc .PdfObject ]struct{},len (_fbedf ._gfbe ));_bfce :=make (map[_ebc .PdfObject ]struct{});
for _ ,_egbdb :=range _fbedf ._gfbe {_ffefd :=_fbedf .copyObject (_egbdb ,_beefa ,_bfce ,false );if _ ,_facbef :=_bfce [_egbdb ];_facbef {continue ;};_afca =append (_afca ,_ffefd );_bfgac [_ffefd ]=struct{}{};};_fbedf ._gfbe =_afca ;_fbedf ._bbfbd =_bfgac ;
_fbedf ._ebgcgg =_fbedf .copyObject (_fbedf ._ebgcgg ,_beefa ,nil ,false ).(*_ebc .PdfIndirectObject );_fbedf ._acbba =_fbedf .copyObject (_fbedf ._acbba ,_beefa ,nil ,false ).(*_ebc .PdfIndirectObject );if _fbedf ._daeff !=nil {_fbedf ._daeff =_fbedf .copyObject (_fbedf ._daeff ,_beefa ,nil ,false ).(*_ebc .PdfIndirectObject );
};if _fbedf ._ffdcc {_beacg :=make (map[_ebc .PdfObject ]int64 );for _adfbb ,_eefbc :=range _fbedf ._aeade {if _bbdda ,_gbcge :=_beefa [_adfbb ];_gbcge {_beacg [_bbdda ]=_eefbc ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_fbedf ._aeade =_beacg ;};};type modelManager struct{_cced map[PdfModel ]_ebc .PdfObject ;_caad map[_ebc .PdfObject ]PdfModel ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bdfc :=NewPdfAnnotation ();_dgfa :=&PdfAnnotationText {};_dgfa .PdfAnnotation =_bdfc ;_dgfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdfc .SetContext (_dgfa );return _dgfa ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_acdgb *PdfReader )GetCatalogStructTreeRoot ()(_ebc .PdfObject ,bool ){if _acdgb ._fcdfa ==nil {return nil ,false ;};_egbca :=_acdgb ._fcdfa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _egbca ,_egbca !=nil ;
};

// ToPdfObject implements interface PdfModel.
func (_fac *PdfActionGoTo3DView )ToPdfObject ()_ebc .PdfObject {_fac .PdfAction .ToPdfObject ();_bfed :=_fac ._dc ;_fga :=_bfed .PdfObject .(*_ebc .PdfObjectDictionary );_fga .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeGoTo3DView )));_fga .SetIfNotNil ("\u0054\u0041",_fac .TA );
_fga .SetIfNotNil ("\u0056",_fac .V );return _bfed ;};func _fceg (_agdcd *_ebc .PdfObjectDictionary ,_ddebd *fontCommon )(*pdfFontType0 ,error ){_feaf ,_aggba :=_ebc .GetArray (_agdcd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_aggba {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ddebd );
return nil ,_ebc .ErrRangeError ;};if _feaf .Len ()!=1{_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_feaf .Len ());return nil ,_ebc .ErrRangeError ;
};_dddbe ,_bbde :=_deed (_feaf .Get (0),false );if _bbde !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bbde ,_ddebd );
return nil ,_bbde ;};_gdade :=_cfdcee (_ddebd );_gdade .DescendantFont =_dddbe ;_abage ,_aggba :=_ebc .GetNameVal (_agdcd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _aggba {if _abage =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_abage =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gdade ._bbdffb =_cgf .NewIdentityTextEncoder (_abage );
}else if _ag .IsPredefinedCMap (_abage ){_gdade ._dceae ,_bbde =_ag .LoadPredefinedCMap (_abage );if _bbde !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_abage ,_bbde );
};}else {_ca .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_abage );};};if _acbad :=_dddbe .baseFields ()._fcffc ;_acbad !=nil {if _eggc :=_acbad .Name ();_eggc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_eggc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_eggc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_eggc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gdade ._bbdffb =_cgf .NewCMapEncoder (_abage ,_gdade ._dceae ,_acbad );
};};return _gdade ,nil ;};func (_facf *PdfReader )newPdfAnnotationUnderlineFromDict (_gcb *_ebc .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_gbac :=PdfAnnotationUnderline {};_fgc ,_eacf :=_facf .newPdfAnnotationMarkupFromDict (_gcb );if _eacf !=nil {return nil ,_eacf ;
};_gbac .PdfAnnotationMarkup =_fgc ;_gbac .QuadPoints =_gcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gbac ,nil ;};func (_bcfgg *PdfWriter )writeOutputIntents ()error {if len (_bcfgg ._dbead )==0{return nil ;};_gdef :=make ([]_ebc .PdfObject ,len (_bcfgg ._dbead ));
for _eacec ,_feabde :=range _bcfgg ._dbead {_adcb :=_feabde .ToPdfObject ();_gdef [_eacec ]=_ebc .MakeIndirectObject (_adcb );};_abfbg :=_ebc .MakeIndirectObject (_ebc .MakeArray (_gdef ...));_bcfgg ._aaefa .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_abfbg );
if _debdb :=_bcfgg .addObjects (_abfbg );_debdb !=nil {return _debdb ;};return nil ;};func (_cegce *pdfFontSimple )getFontEncoding ()(_addba string ,_bgec map[_cgf .CharCode ]_cgf .GlyphName ,_aegg error ){_addba ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _bbgbf ,_fcad :=_eaeba [_cegce ._eeda ];_fcad {_addba =_bbgbf ;}else if _cegce .fontFlags ()&_cabd !=0{for _feeb ,_aecdf :=range _eaeba {if _ea .Contains (_cegce ._eeda ,_feeb ){_addba =_aecdf ;break ;};};};if _cegce .Encoding ==nil {return _addba ,nil ,nil ;
};switch _bccb :=_cegce .Encoding .(type ){case *_ebc .PdfObjectName :return string (*_bccb ),nil ,nil ;case *_ebc .PdfObjectDictionary :_cccaga ,_adgga :=_ebc .GetName (_bccb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _adgga {_addba =_cccaga .String ();};if _bedba :=_bccb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_bedba !=nil {_faddd ,_dgacb :=_ebc .GetArray (_bedba );if !_dgacb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bccb ,_bccb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_ebc .ErrTypeError ;};_bgec ,_aegg =_cgf .FromFontDifferences (_faddd );};return _addba ,_bgec ,_aegg ;default:_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cegce .Encoding ,_cegce .Encoding );
return "",nil ,_ebc .ErrTypeError ;};};

// AllFields returns a flattened list of all fields in the form.
func (_fbbae *PdfAcroForm )AllFields ()[]*PdfField {if _fbbae ==nil {return nil ;};var _eafc []*PdfField ;if _fbbae .Fields !=nil {for _ ,_dcdg :=range *_fbbae .Fields {_eafc =append (_eafc ,_ddfae (_dcdg )...);};};return _eafc ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_aefbe *PdfFont )BytesToCharcodes (data []byte )[]_cgf .CharCode {_ca .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _fedae ,_ageef :=_aefbe ._cbfg .(*pdfFontType0 );_ageef &&_fedae ._dceae !=nil {if _eebbd ,_bagea :=_fedae .bytesToCharcodes (data );_bagea {return _eebbd ;};};var (_adbf =make ([]_cgf .CharCode ,0,len (data )+len (data )%2);_dceda =_aefbe .baseFields ();
);if _dceda ._fcffc !=nil {if _dgcef ,_gagb :=_dceda ._fcffc .BytesToCharcodes (data );_gagb {for _ ,_ccabb :=range _dgcef {_adbf =append (_adbf ,_cgf .CharCode (_ccabb ));};return _adbf ;};};if _dceda .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bfgbe :=0;_bfgbe < len (data );_bfgbe +=2{_gcga :=uint16 (data [_bfgbe ])<<8|uint16 (data [_bfgbe +1]);_adbf =append (_adbf ,_cgf .CharCode (_gcga ));};}else {for _ ,_dfcbg :=range data {_adbf =append (_adbf ,_cgf .CharCode (_dfcbg ));
};};return _adbf ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// Y returns the value of the yellow component of the color.
func (_gfbb *PdfColorDeviceCMYK )Y ()float64 {return _gfbb [2]};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ebc .PdfObject ;LE _ebc .PdfObject ;BS _ebc .PdfObject ;IC _ebc .PdfObject ;BE _ebc .PdfObject ;IT _ebc .PdfObject ;Measure _ebc .PdfObject ;};

// WriteString outputs the object as it is to be written to file.
func (_edgaf *PdfTransformParamsDocMDP )WriteString ()string {return _edgaf .ToPdfObject ().WriteString ();};func _baea (_dbgc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_dbgc }};func _fbdeg (_bddac *_ebc .PdfObjectDictionary ,_ggec *fontCommon )(*pdfCIDFontType0 ,error ){if _ggec ._dccgbc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ggec );
return nil ,_ebc .ErrRangeError ;};_ceca :=_baea (_ggec );_dcdad ,_gdbec :=_ebc .GetDict (_bddac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gdbec {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ggec );
return nil ,ErrRequiredAttributeMissing ;};_ceca .CIDSystemInfo =_dcdad ;_ceca .DW =_bddac .Get ("\u0044\u0057");_ceca .W =_bddac .Get ("\u0057");_ceca .DW2 =_bddac .Get ("\u0044\u0057\u0032");_ceca .W2 =_bddac .Get ("\u0057\u0032");_ceca ._fbacg =1000.0;
if _gdcge ,_afbdg :=_ebc .GetNumberAsFloat (_ceca .DW );_afbdg ==nil {_ceca ._fbacg =_gdcge ;};_cdec ,_gbfd :=_eddbe (_ceca .W );if _gbfd !=nil {return nil ,_gbfd ;};if _cdec ==nil {_cdec =map[_cgf .CharCode ]float64 {};};_ceca ._gaba =_cdec ;return _ceca ,nil ;
};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_bbgba *PdfPageResources )SetColorspaceByName (keyName _ebc .PdfObjectName ,cs PdfColorspace )error {_gegce ,_bdffe :=_bbgba .GetColorspaces ();if _bdffe !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bdffe );
return _bdffe ;};if _gegce ==nil {_gegce =NewPdfPageResourcesColorspaces ();_bbgba .SetColorSpace (_gegce );};_gegce .Set (keyName ,cs );return nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cccfbd *PdfPageResources )GetShadingByName (keyName _ebc .PdfObjectName )(*PdfShading ,bool ){if _cccfbd .Shading ==nil {return nil ,false ;};_aabfe ,_bcebb :=_ebc .TraceToDirectObject (_cccfbd .Shading ).(*_ebc .PdfObjectDictionary );if !_bcebb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cccfbd .Shading );
return nil ,false ;};if _fcegf :=_aabfe .Get (keyName );_fcegf !=nil {_gaeab ,_gecg :=_bdgecc (_fcegf );if _gecg !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gecg );
return nil ,false ;};return _gaeab ,true ;};return nil ,false ;};func (_fbdcb *PdfWriter )writeDocumentVersion (){if _fbdcb ._ffdcc {_fbdcb .writeString ("\u000a");}else {_fbdcb .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fbdcb ._aeafa .Major ,_fbdcb ._aeafa .Minor ));
_fbdcb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_ccaef DefaultImageHandler )Read (reader _eag .Reader )(*Image ,error ){_ggce ,_ ,_ebecf :=_ecg .Decode (reader );if _ebecf !=nil {_ca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_ebecf );
return nil ,_ebecf ;};return _ccaef .NewImageFromGoImage (_ggce );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_cegf *PdfColorspaceLab )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dafe ,_cead :=_ebc .GetNumbersAsFloat (objects );
if _cead !=nil {return nil ,_cead ;};return _cegf .ColorFromFloats (_dafe );};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cacgf .Lock ();defer _cacgf .Unlock ();_aceef =keywords };

// ToPdfObject implements interface PdfModel.
func (_ffgc *PdfAnnotationPolygon )ToPdfObject ()_ebc .PdfObject {_ffgc .PdfAnnotation .ToPdfObject ();_fefd :=_ffgc ._daf ;_edff :=_fefd .PdfObject .(*_ebc .PdfObjectDictionary );_ffgc .PdfAnnotationMarkup .appendToPdfDictionary (_edff );_edff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_edff .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ffgc .Vertices );_edff .SetIfNotNil ("\u004c\u0045",_ffgc .LE );_edff .SetIfNotNil ("\u0042\u0053",_ffgc .BS );_edff .SetIfNotNil ("\u0049\u0043",_ffgc .IC );_edff .SetIfNotNil ("\u0042\u0045",_ffgc .BE );
_edff .SetIfNotNil ("\u0049\u0054",_ffgc .IT );_edff .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffgc .Measure );return _fefd ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;
PdfOutputIntentTypeX ;);

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_dbge *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=_dbge .GetNumComponents (){return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edffb ,_aeb :=_ebc .GetNumbersAsFloat (objects );
if _aeb !=nil {return nil ,_aeb ;};return _dbge .ColorFromFloats (_edffb );};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_ecgaa *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _ecgaa ._bfef .GetRevisionNumber ()==0{return nil ,_cfe .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _baefe ,_cfff :=_ecgaa ._dffe [_ecgaa ];_cfff {return _baefe ,nil ;};_efdec ,_cbbfe :=_ecgaa ._bfef .GetPreviousRevisionReadSeeker ();if _cbbfe !=nil {return nil ,_cbbfe ;};_ecdg ,_cbbfe :=_dbad (_efdec ,_ecgaa ._cegeb ,_ecgaa ._dddc ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cbbfe !=nil {return nil ,_cbbfe ;};_ecgaa ._gecba [_ecgaa ._bfef .GetRevisionNumber ()-1]=_ecdg ;_ecgaa ._dffe [_ecgaa ]=_ecdg ;_ecdg ._dffe =_ecgaa ._dffe ;return _ecdg ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_acbba *_ebc .PdfIndirectObject ;_ecbba *_ebc .PdfIndirectObject ;_ababf map[_ebc .PdfObject ]struct{};_gfbe []_ebc .PdfObject ;_bbfbd map[_ebc .PdfObject ]struct{};_eegac []*_ebc .PdfIndirectObject ;_cdccgg *PdfOutlineTreeNode ;_aaefa *_ebc .PdfObjectDictionary ;
_gebgb []_ebc .PdfObject ;_ebgcgg *_ebc .PdfIndirectObject ;_afba *_de .Writer ;_facg int64 ;_beage error ;_aacgc *_ebc .PdfCrypt ;_bgcgg *_ebc .PdfObjectDictionary ;_daeff *_ebc .PdfIndirectObject ;_fgbaa *_ebc .PdfObjectArray ;_aeafa _ebc .Version ;_acgegc *bool ;
_aedab map[_ebc .PdfObject ][]*_ebc .PdfObjectDictionary ;_bcecb *PdfAcroForm ;_gaaga Optimizer ;_eaagd StandardApplier ;_bdgf map[int ]crossReference ;_eaeecb int64 ;ObjNumOffset int ;_ffdcc bool ;_bfede _ebc .XrefTable ;_eebgb int64 ;_fabfae int64 ;_aeade map[_ebc .PdfObject ]int64 ;
_cebef map[_ebc .PdfObject ]struct{};_ddcgbf string ;_dbead []*PdfOutputIntent ;_ceadg bool ;_eced ,_gdegc string ;};

// ImageToRGB convert an indexed image to RGB.
func (_dbac *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_dbac .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_debge :=_cfef .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._afeca ,img ._facag );_eceaf :=_ba .NewReader (img .getBase ());_fcac :=_ba .NewWriter (_debge );var (_bageg uint32 ;_bcdcc int ;_ebda error ;);for {_bageg ,_ebda =_eceaf .ReadSample ();
if _ebda ==_eag .EOF {break ;}else if _ebda !=nil {return img ,_ebda ;};_bcdcc =int (_bageg );_ca .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bcdcc ,N ,len (_dbac ._cgdc ));
if (_bcdcc +1)*N > len (_dbac ._cgdc ){_bcdcc =len (_dbac ._cgdc )/N -1;_ca .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bcdcc );if _bcdcc < 0{_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ddfgb :=_bcdcc *N ;_ddfgb < (_bcdcc +1)*N ;_ddfgb ++{if _ebda =_fcac .WriteSample (uint32 (_dbac ._cgdc [_ddfgb ]));_ebda !=nil {return img ,_ebda ;};};};return _dbac .Base .ImageToRGB (_ebeb (&_debge ));};func (_agega *PdfShading )getShadingDict ()(*_ebc .PdfObjectDictionary ,error ){_gbfgc :=_agega ._abfcbf ;
if _bbfbe ,_egecg :=_gbfgc .(*_ebc .PdfIndirectObject );_egecg {_gafe ,_geee :=_bbfbe .PdfObject .(*_ebc .PdfObjectDictionary );if !_geee {return nil ,_ebc .ErrTypeError ;};return _gafe ,nil ;}else if _bagd ,_fgffce :=_gbfgc .(*_ebc .PdfObjectStream );
_fgffce {return _bagd .PdfObjectDictionary ,nil ;}else if _gbdce ,_aeabg :=_gbfgc .(*_ebc .PdfObjectDictionary );_aeabg {return _gbdce ,nil ;}else {_ca .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_ebc .ErrTypeError ;};};var (_eeaed =_cf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_ccceg =_cf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_fccdd =_cf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_ffcde ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ebgcg ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ggcb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_efda *PdfReader )newPdfAnnotationSquigglyFromDict (_fce *_ebc .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gfee :=PdfAnnotationSquiggly {};_gbe ,_ageg :=_efda .newPdfAnnotationMarkupFromDict (_fce );if _ageg !=nil {return nil ,_ageg ;
};_gfee .PdfAnnotationMarkup =_gbe ;_gfee .QuadPoints =_fce .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gfee ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dffd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cfe .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_befd ,_efdb :=_cfef .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afeca ,img ._facag );if _efdb !=nil {return img ,_efdb ;};_eedd ,_efdb :=_cfef .NRGBAConverter .Convert (_befd );
if _efdb !=nil {return img ,_efdb ;};_bdagb :=_ebeb (_eedd .Base ());_ca .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ca .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_ca .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_bdagb .Data );_ca .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_bdagb );return _bdagb ,nil ;};func (_edeecf *LTV )validateSig (_bdede *PdfSignature )error {if _bdede ==nil ||_bdede .Contents ==nil ||len (_bdede .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bdede );
};return nil ;};func _dbde (_agad map[_ge .GID ]int ,_eeabf uint16 )*_ebc .PdfObjectArray {_dggd :=&_ebc .PdfObjectArray {};_acbae :=_ge .GID (_eeabf );for _daef :=_ge .GID (0);_daef < _acbae ;{_eeeca ,_fcgeb :=_agad [_daef ];if !_fcgeb {_daef ++;continue ;
};_efcbd :=_daef ;for _ffcf :=_efcbd +1;_ffcf < _acbae ;_ffcf ++{if _gfgcc ,_fbea :=_agad [_ffcf ];!_fbea ||_eeeca !=_gfgcc {break ;};_efcbd =_ffcf ;};_dggd .Append (_ebc .MakeInteger (int64 (_daef )));_dggd .Append (_ebc .MakeInteger (int64 (_efcbd )));
_dggd .Append (_ebc .MakeInteger (int64 (_eeeca )));_daef =_efcbd +1;};return _dggd ;};

// Encoder returns the font's text encoder.
func (_bcef *PdfFont )Encoder ()_cgf .TextEncoder {_fggda :=_bcef .actualFont ();if _fggda ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bcef ._cbfg );
return nil ;};return _fggda .Encoder ();};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_faga :_ebc .MakeIndirectObject (_ebc .MakeDict ())}};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dcgd *PdfField )IsTerminal ()bool {return len (_dcgd .Kids )==0};

// SetReason sets the `Reason` field of the signature.
func (_fadcb *PdfSignature )SetReason (reason string ){_fadcb .Reason =_ebc .MakeString (reason )};

// ToPdfObject converts rectangle to a PDF object.
func (_ggccf *PdfRectangle )ToPdfObject ()_ebc .PdfObject {return _ebc .MakeArray (_ebc .MakeFloat (_ggccf .Llx ),_ebc .MakeFloat (_ggccf .Lly ),_ebc .MakeFloat (_ggccf .Urx ),_ebc .MakeFloat (_ggccf .Ury ));};func (_bgaba *PdfReader )lookupPageByObject (_cgaccc _ebc .PdfObject )(*PdfPage ,error ){return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_afgcd byte )byte ;func _efbgc (_effd *_ebc .PdfObjectDictionary )(*PdfFieldButton ,error ){_dccf :=&PdfFieldButton {};_dccf .PdfField =NewPdfField ();_dccf .PdfField .SetContext (_dccf );_dccf .Opt ,_ =_ebc .GetArray (_effd .Get ("\u004f\u0070\u0074"));
_gdac :=NewPdfAnnotationWidget ();_gdac .A ,_ =_ebc .GetDict (_effd .Get ("\u0041"));_gdac .AP ,_ =_ebc .GetDict (_effd .Get ("\u0041\u0050"));_gdac .SetContext (_dccf );_dccf .PdfField .Annotations =append (_dccf .PdfField .Annotations ,_gdac );return _dccf ,nil ;
};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bfdgf *PdfOutlineTreeNode )GetContainingPdfObject ()_ebc .PdfObject {return _bfdgf .GetContext ().GetContainingPdfObject ();};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_aefb *PdfField )ToPdfObject ()_ebc .PdfObject {_fdcg :=_aefb ._faga ;_bfbc :=_fdcg .PdfObject .(*_ebc .PdfObjectDictionary );_beeg :=_ebc .MakeArray ();for _ ,_cdfgb :=range _aefb .Kids {_beeg .Append (_cdfgb .ToPdfObject ());};for _ ,_ebcdg :=range _aefb .Annotations {if _ebcdg ._daf !=_aefb ._faga {_beeg .Append (_ebcdg .GetContext ().ToPdfObject ());
};};if _aefb .Parent !=nil {_bfbc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aefb .Parent .GetContainingPdfObject ());};if _beeg .Len ()> 0{_bfbc .Set ("\u004b\u0069\u0064\u0073",_beeg );};_bfbc .SetIfNotNil ("\u0046\u0054",_aefb .FT );_bfbc .SetIfNotNil ("\u0054",_aefb .T );
_bfbc .SetIfNotNil ("\u0054\u0055",_aefb .TU );_bfbc .SetIfNotNil ("\u0054\u004d",_aefb .TM );_bfbc .SetIfNotNil ("\u0046\u0066",_aefb .Ff );_bfbc .SetIfNotNil ("\u0056",_aefb .V );_bfbc .SetIfNotNil ("\u0044\u0056",_aefb .DV );_bfbc .SetIfNotNil ("\u0041\u0041",_aefb .AA );
if _aefb .VariableText !=nil {_bfbc .SetIfNotNil ("\u0044\u0041",_aefb .VariableText .DA );_bfbc .SetIfNotNil ("\u0051",_aefb .VariableText .Q );_bfbc .SetIfNotNil ("\u0044\u0053",_aefb .VariableText .DS );_bfbc .SetIfNotNil ("\u0052\u0056",_aefb .VariableText .RV );
};return _fdcg ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_acbce int64 ;_adeba int64 ;_bcfc int64 ;_egafc int64 ;_ggfge int64 ;_gabc int64 ;_cbafe byte ;_fbaab int64 ;_afbcf int64 ;};func (_bgcc *PdfReader )newPdfAnnotationCaretFromDict (_cffg *_ebc .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gac :=PdfAnnotationCaret {};
_add ,_dbdd :=_bgcc .newPdfAnnotationMarkupFromDict (_cffg );if _dbdd !=nil {return nil ,_dbdd ;};_gac .PdfAnnotationMarkup =_add ;_gac .RD =_cffg .Get ("\u0052\u0044");_gac .Sy =_cffg .Get ("\u0053\u0079");return &_gac ,nil ;};

// Items returns all children outline items.
func (_bcddg *Outline )Items ()[]*OutlineItem {return _bcddg .Entries };

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _ebc .PdfObject ;Flags _ebc .PdfObject ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _ebc .PdfObject ;Q _ebc .PdfObject ;RC _ebc .PdfObject ;DS _ebc .PdfObject ;CL _ebc .PdfObject ;IT _ebc .PdfObject ;BE _ebc .PdfObject ;RD _ebc .PdfObject ;BS _ebc .PdfObject ;LE _ebc .PdfObject ;
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ffdga *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ca .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cfe .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_dagfc *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_adeec *PdfSignature ,_gefeg Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_abeaa *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fbfab *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fdecb *PdfSignature ,_gabec Hasher )error ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _ebc .PdfObject ;ColorSpace _ebc .PdfObject ;Pattern _ebc .PdfObject ;Shading _ebc .PdfObject ;XObject _ebc .PdfObject ;Font _ebc .PdfObject ;ProcSet _ebc .PdfObject ;Properties _ebc .PdfObject ;_bgbaf *_ebc .PdfObjectDictionary ;
_geff *PdfPageResourcesColorspaces ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gbca :=PdfColorDeviceGray (grayVal );return &_gbca ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ede :=NewPdfAction ();_df :=&PdfActionGoToR {};_df .PdfAction =_ede ;_ede .SetContext (_df );return _df ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gbef *PdfColorspaceLab )GetNumComponents ()int {return 3};func (_gcf *PdfReader )newPdfActionRenditionFromDict (_gfg *_ebc .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gfg .Get ("\u0052"),AN :_gfg .Get ("\u0041\u004e"),OP :_gfg .Get ("\u004f\u0050"),JS :_gfg .Get ("\u004a\u0053")},nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gfgc *PdfColorspaceDeviceRGB )ToPdfObject ()_ebc .PdfObject {return _ebc .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func _ffaga (_fdcd _ebc .PdfObject )(string ,error ){_fdcd =_ebc .TraceToDirectObject (_fdcd );switch _efbec :=_fdcd .(type ){case *_ebc .PdfObjectString :return _efbec .Str (),nil ;
case *_ebc .PdfObjectStream :_aaaba ,_fadda :=_ebc .DecodeStream (_efbec );if _fadda !=nil {return "",_fadda ;};return string (_aaaba ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fdcd );
};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_ebc .PdfObject ;GetContainingPdfObject ()_ebc .PdfObject ;};

// SetBorderWidth sets the style's border width.
func (_cdgc *PdfBorderStyle )SetBorderWidth (width float64 ){_cdgc .W =&width };

// SetDate sets the `M` field of the signature.
func (_deegb *PdfSignature )SetDate (date _a .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_deegb .M =_ebc .MakeString (date .Format (format ));
};

// SetFillImage attach a model.Image to push button.
func (_ecdc *PdfFieldButton )SetFillImage (image *Image ){if _ecdc .IsPush (){_ecdc ._deea =image ;};};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_eaegfb :=&PdfShadingType3 {};_eaegfb .PdfShading =&PdfShading {};_eaegfb .PdfShading ._abfcbf =_ebc .MakeIndirectObject (_ebc .MakeDict ());_eaegfb .PdfShading ._fcbcf =_eaegfb ;return _eaegfb ;};var ImageHandling ImageHandler =DefaultImageHandler {};
func (_gdec *PdfReader )newPdfAnnotationWidgetFromDict (_cbdf *_ebc .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gbdb :=PdfAnnotationWidget {};_gbdb .H =_cbdf .Get ("\u0048");_gbdb .MK =_cbdf .Get ("\u004d\u004b");_gbdb .A =_cbdf .Get ("\u0041");
_gbdb .AA =_cbdf .Get ("\u0041\u0041");_gbdb .BS =_cbdf .Get ("\u0042\u0053");_gbdb .Parent =_cbdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_gbdb ,nil ;};func (_bfged *PdfWriter )setCatalogVersion (){_bfged ._aaefa .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_ebc .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_bfged ._aeafa .Major ,_bfged ._aeafa .Minor )));
};func _fecfc (_dfff *_ebc .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bfcb :=PdfShadingType1 {};if _bdbf :=_dfff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bdbf !=nil {_bdbf =_ebc .TraceToDirectObject (_bdbf );_ggecc ,_dcdca :=_bdbf .(*_ebc .PdfObjectArray );
if !_dcdca {_ca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdbf );return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bfcb .Domain =_ggecc ;};if _dfccd :=_dfff .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dfccd !=nil {_dfccd =_ebc .TraceToDirectObject (_dfccd );_ddfce ,_effcf :=_dfccd .(*_ebc .PdfObjectArray );if !_effcf {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfccd );
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfcb .Matrix =_ddfce ;};_fbcab :=_dfff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbcab ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bfcb .Function =[]PdfFunction {};if _eeeec ,_abbgg :=_fbcab .(*_ebc .PdfObjectArray );_abbgg {for _ ,_bfdcg :=range _eeeec .Elements (){_becbc ,_cbadg :=_adda (_bfdcg );if _cbadg !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbadg );
return nil ,_cbadg ;};_bfcb .Function =append (_bfcb .Function ,_becbc );};}else {_acbcf ,_fdgg :=_adda (_fbcab );if _fdgg !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdgg );
return nil ,_fdgg ;};_bfcb .Function =append (_bfcb .Function ,_acbcf );};return &_bfcb ,nil ;};func (_bbcfa *PdfReader )traverseObjectData (_cddac _ebc .PdfObject )error {return _ebc .ResolveReferencesDeep (_cddac ,_bbcfa ._debfg );};func (_bcea *Image )samplesAddPadding (_cgbbf []uint32 )[]uint32 {_deead :=_cfef .BytesPerLine (int (_bcea .Width ),int (_bcea .BitsPerComponent ),_bcea .ColorComponents )*(8/int (_bcea .BitsPerComponent ));
_bbdbc :=_deead *int (_bcea .Height );if len (_cgbbf )==_bbdbc {return _cgbbf ;};_abgbc :=make ([]uint32 ,_bbdbc );_agdd :=int (_bcea .Width )*_bcea .ColorComponents ;for _cegb :=0;_cegb < int (_bcea .Height );_cegb ++{_adbda :=_cegb *int (_bcea .Width );
_gcdfb :=_cegb *_deead ;for _abgcf :=0;_abgcf < _agdd ;_abgcf ++{_abgbc [_gcdfb +_abgcf ]=_cgbbf [_adbda +_abgcf ];};};return _abgbc ;};func (_agdcf *PdfReader )newPdfFieldFromIndirectObject (_geaa *_ebc .PdfIndirectObject ,_ccae *PdfField )(*PdfField ,error ){if _feda ,_bfga :=_agdcf ._faaab .GetModelFromPrimitive (_geaa ).(*PdfField );
_bfga {return _feda ,nil ;};_ddgg ,_degf :=_ebc .GetDict (_geaa );if !_degf {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cagc :=NewPdfField ();_cagc ._faga =_geaa ;_cagc ._faga .PdfObject =_ddgg ;if _decb ,_fdcb :=_ebc .GetName (_ddgg .Get ("\u0046\u0054"));_fdcb {_cagc .FT =_decb ;};if _ccae !=nil {_cagc .Parent =_ccae ;};_cagc .T ,_ =_ddgg .Get ("\u0054").(*_ebc .PdfObjectString );
_cagc .TU ,_ =_ddgg .Get ("\u0054\u0055").(*_ebc .PdfObjectString );_cagc .TM ,_ =_ddgg .Get ("\u0054\u004d").(*_ebc .PdfObjectString );_cagc .Ff ,_ =_ddgg .Get ("\u0046\u0066").(*_ebc .PdfObjectInteger );_cagc .V =_ddgg .Get ("\u0056");_cagc .DV =_ddgg .Get ("\u0044\u0056");
_cagc .AA =_ddgg .Get ("\u0041\u0041");if DA :=_ddgg .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_ebc .GetString (DA );_cagc .VariableText =&VariableText {DA :DA };Q ,_ :=_ddgg .Get ("\u0051").(*_ebc .PdfObjectInteger );DS ,_ :=_ddgg .Get ("\u0044\u0053").(*_ebc .PdfObjectString );
RV :=_ddgg .Get ("\u0052\u0056");_cagc .VariableText .Q =Q ;_cagc .VariableText .DS =DS ;_cagc .VariableText .RV =RV ;};_ddefe :=_cagc .FT ;if _ddefe ==nil &&_ccae !=nil {_ddefe =_ccae .FT ;};if _ddefe !=nil {switch *_ddefe {case "\u0054\u0078":_ddde ,_ffea :=_bdfcg (_ddgg );
if _ffea !=nil {return nil ,_ffea ;};_ddde .PdfField =_cagc ;_cagc ._febf =_ddde ;case "\u0043\u0068":_adcca ,_gbfb :=_egfa (_ddgg );if _gbfb !=nil {return nil ,_gbfb ;};_adcca .PdfField =_cagc ;_cagc ._febf =_adcca ;case "\u0042\u0074\u006e":_edda ,_dada :=_efbgc (_ddgg );
if _dada !=nil {return nil ,_dada ;};_edda .PdfField =_cagc ;_cagc ._febf =_edda ;case "\u0053\u0069\u0067":_bgab ,_edffe :=_agdcf .newPdfFieldSignatureFromDict (_ddgg );if _edffe !=nil {return nil ,_edffe ;};_bgab .PdfField =_cagc ;_cagc ._febf =_bgab ;
default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_cagc .FT );return nil ,_cfe .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _eefff ,_eggf :=_ebc .GetName (_ddgg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eggf {if *_eefff =="\u0057\u0069\u0064\u0067\u0065\u0074"{_aagf ,_fccc :=_agdcf .newPdfAnnotationFromIndirectObject (_geaa );if _fccc !=nil {return nil ,_fccc ;
};_baedg ,_addgg :=_aagf .GetContext ().(*PdfAnnotationWidget );if !_addgg {return nil ,_cfe .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_baedg ._cdgb =_cagc ;_baedg .Parent =_cagc ._faga ;
_cagc .Annotations =append (_cagc .Annotations ,_baedg );return _cagc ,nil ;};};_bbe :=true ;if _cbec ,_cbad :=_ebc .GetArray (_ddgg .Get ("\u004b\u0069\u0064\u0073"));_cbad {_cadd :=make ([]*_ebc .PdfIndirectObject ,0,_cbec .Len ());for _ ,_fggbe :=range _cbec .Elements (){_cfcb ,_cdfbc :=_ebc .GetIndirect (_fggbe );
if !_cdfbc {_afbee ,_baad :=_ebc .GetStream (_fggbe );if _baad &&_afbee .PdfObjectDictionary !=nil {_fgea ,_baecc :=_ebc .GetNameVal (_afbee .Get ("\u0054\u0079\u0070\u0065"));if _baecc &&_fgea =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ca .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cfe .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bdfb ,_efca :=_ebc .GetDict (_cfcb );
if !_efca {return nil ,ErrTypeCheck ;};if _bbe {_bbe =!_afced (_bdfb );};_cadd =append (_cadd ,_cfcb );};for _ ,_cgfdc :=range _cadd {if _bbe {_dbabc ,_afbc :=_agdcf .newPdfAnnotationFromIndirectObject (_cgfdc );if _afbc !=nil {_ca .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_afbc );
return nil ,_afbc ;};_aedg ,_efec :=_dbabc ._fddc .(*PdfAnnotationWidget );if !_efec {return nil ,ErrTypeCheck ;};_aedg ._cdgb =_cagc ;_cagc .Annotations =append (_cagc .Annotations ,_aedg );}else {_eaeff ,_fbdec :=_agdcf .newPdfFieldFromIndirectObject (_cgfdc ,_cagc );
if _fbdec !=nil {_ca .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fbdec );return nil ,_fbdec ;};_cagc .Kids =append (_cagc .Kids ,_eaeff );
};};};return _cagc ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bbefe *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bbefe ._adgca .(*PdfShadingPattern );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cebf pdfFontType0 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){if _cebf .DescendantFont ==nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cebf );
return _ge .CharMetrics {},false ;};return _cebf .DescendantFont .GetRuneMetrics (r );};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ffag *Image )ColorAt (x ,y int )(_bc .Color ,error ){_fafd :=_cfef .BytesPerLine (int (_ffag .Width ),int (_ffag .BitsPerComponent ),_ffag .ColorComponents );switch _ffag .ColorComponents {case 1:return _cfef .ColorAtGrayscale (x ,y ,int (_ffag .BitsPerComponent ),_fafd ,_ffag .Data ,_ffag ._facag );
case 3:return _cfef .ColorAtNRGBA (x ,y ,int (_ffag .Width ),_fafd ,int (_ffag .BitsPerComponent ),_ffag .Data ,_ffag ._afeca ,_ffag ._facag );case 4:return _cfef .ColorAtCMYK (x ,y ,int (_ffag .Width ),_ffag .Data ,_ffag ._facag );};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffag .ColorComponents ,_ffag .BitsPerComponent );
return nil ,_cfe .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cgf .SimpleEncoder ,error ){_edcdc ,_ggef :=_cacdf (basefont );if _ggef !=nil {return nil ,nil ,_ggef ;};_bdbd ,_bacga :=_edcdc .Encoder ().(_cgf .SimpleEncoder );
if !_bacga {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_edcdc .Encoder ());
};_gcae :=make (map[rune ]_cgf .GlyphName );for _bddcg :=range alphabet {if _ ,_eaga :=_bdbd .RuneToCharcode (_bddcg );!_eaga {_ ,_gbeag :=_edcdc ._ddaf .Read (_bddcg );if !_gbeag {_ca .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_bddcg ,_bddcg );
continue ;};_gcde ,_gbeag :=_cgf .RuneToGlyph (_bddcg );if !_gbeag {_ca .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_bddcg ,_bddcg );continue ;};if len (_gcae )>=255{return nil ,nil ,_cfe .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gcae [_bddcg ]=_gcde ;};};var (_ccgg []_cgf .CharCode ;_gcca []_cgf .CharCode ;);for _eaaff :=_cgf .CharCode (1);_eaaff <=0xff;_eaaff ++{_caagga ,_fefe :=_bdbd .CharcodeToRune (_eaaff );if !_fefe {_ccgg =append (_ccgg ,_eaaff );continue ;};if _ ,_fefe =alphabet [_caagga ];
!_fefe {_gcca =append (_gcca ,_eaaff );};};_gcade :=append (_ccgg ,_gcca ...);if len (_gcade )< len (_gcae ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gcae ),len (_gcade ));
};_gfgb :=make ([]rune ,0,len (_gcae ));for _gecc :=range _gcae {_gfgb =append (_gfgb ,_gecc );};_cfa .Slice (_gfgb ,func (_ccgcb ,_acbb int )bool {return _gfgb [_ccgcb ]< _gfgb [_acbb ]});_cece :=make (map[_cgf .CharCode ]_cgf .GlyphName ,len (_gfgb ));
for _ ,_gbfedb :=range _gfgb {_eecf :=_gcade [0];_gcade =_gcade [1:];_cece [_eecf ]=_gcae [_gbfedb ];};_bdbd =_cgf .ApplyDifferences (_bdbd ,_cece );_edcdc .SetEncoder (_bdbd );return &PdfFont {_cbfg :&_edcdc },_bdbd ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _ebc .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ffcg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcaa ,_fcceb :=_ebc .GetNumbersAsFloat (objects );
if _fcceb !=nil {return nil ,_fcceb ;};return _ffcg .ColorFromFloats (_bcaa );};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_eefcg *XObjectForm )GetContainingPdfObject ()_ebc .PdfObject {return _eefcg ._eaffe };func (_cdeee *PdfWriter )setWriter (_bfcfa _eag .Writer ){_cdeee ._facg =_cdeee ._eaeecb ;_cdeee ._afba =_de .NewWriter (_bfcfa );};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bdda FieldFlag )Has (fl FieldFlag )bool {return (_bdda .Mask ()&fl .Mask ())> 0};

// ToPdfObject returns the PDF representation of the function.
func (_gbecc *PdfFunctionType4 )ToPdfObject ()_ebc .PdfObject {_fcgfc :=_gbecc ._fbgg ;if _fcgfc ==nil {_gbecc ._fbgg =&_ebc .PdfObjectStream {};_fcgfc =_gbecc ._fbgg ;};_cccfed :=_ebc .MakeDict ();_cccfed .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ebc .MakeInteger (4));
_cgdad :=&_ebc .PdfObjectArray {};for _ ,_adcfg :=range _gbecc .Domain {_cgdad .Append (_ebc .MakeFloat (_adcfg ));};_cccfed .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgdad );_cgac :=&_ebc .PdfObjectArray {};for _ ,_edcca :=range _gbecc .Range {_cgac .Append (_ebc .MakeFloat (_edcca ));
};_cccfed .Set ("\u0052\u0061\u006eg\u0065",_cgac );if _gbecc ._gceb ==nil &&_gbecc .Program !=nil {_gbecc ._gceb =[]byte (_gbecc .Program .String ());};_cccfed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_gbecc ._gceb ))));
_fcgfc .Stream =_gbecc ._gceb ;_fcgfc .PdfObjectDictionary =_cccfed ;return _fcgfc ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aaae FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aaae .Mask ()&^fl .Mask ())};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_cbcce *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cfe .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_febg :=field .V ;if _febg ==nil {return _cfe .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gdc :=pageNum -1;
if _gdc < 0||_gdc > len (_cbcce ._dcbg )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ebd :=_cbcce .Reader .PageList [_gdc ];field .P =_ebd .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_ebc .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_ebd .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _cbcce ._bebg ==_cbcce ._ccf .AcroForm {_cbcce ._bebg =_cbcce .Reader .AcroForm ;};_bcbec :=_cbcce ._bebg ;if _bcbec ==nil {_bcbec =NewPdfAcroForm ();};_bcbec .SigFlags =_ebc .MakeInteger (3);
_daeb :=append (_bcbec .AllFields (),field .PdfField );_bcbec .Fields =&_daeb ;_cbcce .ReplaceAcroForm (_bcbec );_cbcce .UpdatePage (_ebd );_cbcce ._dcbg [_gdc ]=_ebd ;if _ ,_cge :=field .V .GetDocMDPPermission ();_cge {_cbcce ._ebca =NewPermissions (field .V );
};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_faccc pdfFontType3 )GetCharMetrics (code _cgf .CharCode )(_ge .CharMetrics ,bool ){if _cbab ,_aaga :=_faccc ._gdege [code ];_aaga {return _ge .CharMetrics {Wx :_cbab },true ;};if _ge .IsStdFont (_ge .StdFontName (_faccc ._eeda )){return _ge .CharMetrics {Wx :250},true ;
};return _ge .CharMetrics {},false ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_afbf *PdfAcroForm ,_bedgc *PdfField ,_bacgf *PdfAnnotationWidget )(*_ebc .PdfObjectDictionary ,error );};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _ebc .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _eegc *_ebc .PdfIndirectObject ;var _gfba *_ebc .PdfObjectName ;var _fbbe *_ebc .PdfObjectArray ;if _fbeb ,_fbfd :=obj .(*_ebc .PdfIndirectObject );
_fbfd {_eegc =_fbeb ;};obj =_ebc .TraceToDirectObject (obj );switch _edee :=obj .(type ){case *_ebc .PdfObjectArray :_fbbe =_edee ;case *_ebc .PdfObjectName :_gfba =_edee ;};if _gfba !=nil {switch *_gfba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ca .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_gfba );return nil ,_bfbaa ;};};if _fbbe !=nil &&_fbbe .Len ()> 0{var _gdbd _ebc .PdfObject =_eegc ;
if _eegc ==nil {_gdbd =_fbbe ;};if _efgb ,_aaab :=_ebc .GetName (_fbbe .Get (0));_aaab {switch _efgb .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fbbe .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fbbe .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbbe .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ade (_gdbd );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ffge (_gdbd );
case "\u004c\u0061\u0062":return _bfba (_gdbd );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gfab (_gdbd );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _geac (_gdbd );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _cefa (_gdbd );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dcafg (_gdbd );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _acc (_gdbd );default:_ca .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_efgb );
};};};_ca .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_cbc *PdfReader )loadAction (_cafa _ebc .PdfObject )(*PdfAction ,error ){if _cbce ,_dgaa :=_ebc .GetIndirect (_cafa );_dgaa {_fgff ,_cffd :=_cbc .newPdfActionFromIndirectObject (_cbce );if _cffd !=nil {return nil ,_cffd ;
};return _fgff ,nil ;}else if !_ebc .IsNullObject (_cafa ){return nil ,_cfe .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fdde :=NewPdfAnnotation ();_cfg :=&PdfAnnotationPrinterMark {};_cfg .PdfAnnotation =_fdde ;_fdde .SetContext (_cfg );return _cfg ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_adf PdfModel ;Type _ebc .PdfObject ;S _ebc .PdfObject ;Next _ebc .PdfObject ;_dc *_ebc .PdfIndirectObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_gf .PSProgram ;_cbcge *_gf .PSExecutor ;_gceb []byte ;_fbgg *_ebc .PdfObjectStream ;};func (_bdbc *PdfAppender )replaceObject (_dddf ,_egdf _ebc .PdfObject ){switch _ccga :=_dddf .(type ){case *_ebc .PdfIndirectObject :_bdbc ._cce [_egdf ]=_ccga .ObjectNumber ;
case *_ebc .PdfObjectStream :_bdbc ._cce [_egdf ]=_ccga .ObjectNumber ;};};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dbdbe ,_ccegg :=_eb .ParsePdfTime (dateStr );if _ccegg !=nil {return PdfDate {},_ccegg ;};return NewPdfDateFromTime (_dbdbe );};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _ebc .PdfObjectName ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gffeg *pdfCIDFontType2 )ToPdfObject ()_ebc .PdfObject {if _gffeg ._acaa ==nil {_gffeg ._acaa =&_ebc .PdfIndirectObject {};};_fegfa :=_gffeg .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_gffeg ._acaa .PdfObject =_fegfa ;if _gffeg .CIDSystemInfo !=nil {_fegfa .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gffeg .CIDSystemInfo );};if _gffeg .DW !=nil {_fegfa .Set ("\u0044\u0057",_gffeg .DW );};if _gffeg .DW2 !=nil {_fegfa .Set ("\u0044\u0057\u0032",_gffeg .DW2 );
};if _gffeg .W !=nil {_fegfa .Set ("\u0057",_gffeg .W );};if _gffeg .W2 !=nil {_fegfa .Set ("\u0057\u0032",_gffeg .W2 );};if _gffeg .CIDToGIDMap !=nil {_fegfa .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gffeg .CIDToGIDMap );};
return _gffeg ._acaa ;};

// Subtype returns the font's "Subtype" field.
func (_adce *PdfFont )Subtype ()string {_adca :=_adce .baseFields ()._dccgbc ;if _dbabf ,_fded :=_adce ._cbfg .(*pdfFontType0 );_fded {_adca =_adca +"\u003a"+_dbabf .DescendantFont .Subtype ();};return _adca ;};func _baedb (_egcea *PdfField ,_cegcg _ebc .PdfObject ){for _ ,_cbafg :=range _egcea .Annotations {_cbafg .AS =_cegcg ;
_cbafg .ToPdfObject ();};};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_daeba []byte )(_efbab int ,_ebgfa error );};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_afdf DefaultImageHandler )NewGrayImageFromGoImage (goimg _ecg .Image )(*Image ,error ){_ffafd :=goimg .Bounds ();_fgfab :=&Image {Width :int64 (_ffafd .Dx ()),Height :int64 (_ffafd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gafae :=goimg .(type ){case *_ecg .Gray :if len (_gafae .Pix )!=_ffafd .Dx ()*_ffafd .Dy (){_bfec ,_cebfb :=_cfef .GrayConverter .Convert (goimg );
if _cebfb !=nil {return nil ,_cebfb ;};_fgfab .Data =_bfec .Pix ();}else {_fgfab .Data =_gafae .Pix ;};case *_ecg .Gray16 :_fgfab .BitsPerComponent =16;if len (_gafae .Pix )!=_ffafd .Dx ()*_ffafd .Dy ()*2{_bacdd ,_gfffc :=_cfef .Gray16Converter .Convert (goimg );
if _gfffc !=nil {return nil ,_gfffc ;};_fgfab .Data =_bacdd .Pix ();}else {_fgfab .Data =_gafae .Pix ;};case _cfef .Image :_dgcfe :=_gafae .Base ();if _dgcfe .ColorComponents ==1{_fgfab .BitsPerComponent =int64 (_dgcfe .BitsPerComponent );_fgfab .Data =_dgcfe .Data ;
return _fgfab ,nil ;};_gefce ,_eedfe :=_cfef .GrayConverter .Convert (goimg );if _eedfe !=nil {return nil ,_eedfe ;};_fgfab .Data =_gefce .Pix ();default:_bfaa ,_fabfd :=_cfef .GrayConverter .Convert (goimg );if _fabfd !=nil {return nil ,_fabfd ;};_fgfab .Data =_bfaa .Pix ();
};return _fgfab ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cdbfe pdfFontType3 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){_cgabe :=_cdbfe .Encoder ();if _cgabe ==nil {_ca .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cdbfe );
return _ge .CharMetrics {},false ;};_ebgg ,_fgaa :=_cgabe .RuneToCharcode (r );if !_fgaa {if r !=' '{_ca .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cdbfe );
};return _ge .CharMetrics {},false ;};_fbca ,_fafgb :=_cdbfe .GetCharMetrics (_ebgg );return _fbca ,_fafgb ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_fcbbf *PdfReader )Inspect ()(map[string ]int ,error ){return _fcbbf ._bfef .Inspect ()};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_dgac :=NewPdfAnnotation ();_dbce :=&PdfAnnotationPopup {};_dbce .PdfAnnotation =_dgac ;_dgac .SetContext (_dbce );return _dbce ;};func (_ded *PdfReader )newPdfActionResetFormFromDict (_cfaf *_ebc .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_cfaf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cfaf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func (_cafee *PdfWriter )checkPendingObjects (){for _cdefa ,_ebgba :=range _cafee ._aedab {if !_cafee .hasObject (_cdefa ){_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_cdefa ,_cdefa ,_cdefa );
for _ ,_gaceg :=range _ebgba {for _ ,_abgcde :=range _gaceg .Keys (){_edcgb :=_gaceg .Get (_abgcde );if _edcgb ==_cdefa {_ca .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_gaceg .Set (_abgcde ,_ebc .MakeNull ());break ;};};};};};};func _dabacg ()string {_cacgf .Lock ();defer _cacgf .Unlock ();if len (_ecde )> 0{return _ecde ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fcgbe *PdfWriter )SetDocInfo (info *PdfInfo ){_fcgbe .setDocInfo (info .ToPdfObject ())};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bbccd pdfFontType0 )GetCharMetrics (code _cgf .CharCode )(_ge .CharMetrics ,bool ){if _bbccd .DescendantFont ==nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bbccd );
return _ge .CharMetrics {},false ;};return _bbccd .DescendantFont .GetCharMetrics (code );};

// ToPdfObject implements interface PdfModel.
func (_dgb *PdfAction )ToPdfObject ()_ebc .PdfObject {_gfa :=_dgb ._dc ;_ebcf :=_gfa .PdfObject .(*_ebc .PdfObjectDictionary );_ebcf .Clear ();_ebcf .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ebcf .SetIfNotNil ("\u0053",_dgb .S );
_ebcf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_dgb .Next );return _gfa ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fege *PdfField )GetContainingPdfObject ()_ebc .PdfObject {return _fege ._faga };

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_dgaee *PdfShading )GetContext ()PdfModel {return _dgaee ._fcbcf };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_acg :=NewPdfAnnotation ();_ecb :=&PdfAnnotation3D {};_ecb .PdfAnnotation =_acg ;_acg .SetContext (_ecb );return _ecb ;};func _fcebb (_adgfb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_adgfb }};
func (_gbggg *PdfWriter )optimize ()error {if _gbggg ._gaaga ==nil {return nil ;};var _adcga error ;_gbggg ._gfbe ,_adcga =_gbggg ._gaaga .Optimize (_gbggg ._gfbe );if _adcga !=nil {return _adcga ;};_gcfgd :=make (map[_ebc .PdfObject ]struct{},len (_gbggg ._gfbe ));
for _ ,_bddef :=range _gbggg ._gfbe {_gcfgd [_bddef ]=struct{}{};};_gbggg ._bbfbd =_gcfgd ;return nil ;};func (_aged *PdfReader )newPdfAnnotationStampFromDict (_ccca *_ebc .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_deffd :=PdfAnnotationStamp {};
_faba ,_fgfe :=_aged .newPdfAnnotationMarkupFromDict (_ccca );if _fgfe !=nil {return nil ,_fgfe ;};_deffd .PdfAnnotationMarkup =_faba ;_deffd .Name =_ccca .Get ("\u004e\u0061\u006d\u0065");return &_deffd ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_fbfg *Image )ToGoImage ()(_ecg .Image ,error ){_ca .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fdcbd ,_baacg :=_cfef .NewImage (int (_fbfg .Width ),int (_fbfg .Height ),int (_fbfg .BitsPerComponent ),_fbfg .ColorComponents ,_fbfg .Data ,_fbfg ._afeca ,_fbfg ._facag );
if _baacg !=nil {return nil ,_baacg ;};return _fdcbd ,nil ;};

// Add appends a top level outline item to the outline.
func (_aecfg *Outline )Add (item *OutlineItem ){_aecfg .Entries =append (_aecfg .Entries ,item )};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_edafc :=PdfColorCalRGB {a ,b ,c };return &_edafc ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_afgbb *PdfShadingType5 )ToPdfObject ()_ebc .PdfObject {_afgbb .PdfShading .ToPdfObject ();_ebebd ,_gabeb :=_afgbb .getShadingDict ();if _gabeb !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _afgbb .BitsPerCoordinate !=nil {_ebebd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_afgbb .BitsPerCoordinate );};if _afgbb .BitsPerComponent !=nil {_ebebd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afgbb .BitsPerComponent );
};if _afgbb .VerticesPerRow !=nil {_ebebd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_afgbb .VerticesPerRow );};if _afgbb .Decode !=nil {_ebebd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_afgbb .Decode );};
if _afgbb .Function !=nil {if len (_afgbb .Function )==1{_ebebd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afgbb .Function [0].ToPdfObject ());}else {_ddda :=_ebc .MakeArray ();for _ ,_daeab :=range _afgbb .Function {_ddda .Append (_daeab .ToPdfObject ());
};_ebebd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddda );};};return _afgbb ._abfcbf ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_fedcg *PdfPage )AddExtGState (name _ebc .PdfObjectName ,egs *_ebc .PdfObjectDictionary )error {if _fedcg .Resources ==nil {_fedcg .Resources =NewPdfPageResources ();};if _fedcg .Resources .ExtGState ==nil {_fedcg .Resources .ExtGState =_ebc .MakeDict ();
};_ecagg ,_dggfg :=_ebc .TraceToDirectObject (_fedcg .Resources .ExtGState ).(*_ebc .PdfObjectDictionary );if !_dggfg {_ca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ebc .TraceToDirectObject (_fedcg .Resources .ExtGState ));
return _cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecagg .Set (name ,egs );return nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_ebc .PdfObjectArray ;ExtGState _ebc .PdfObject ;};

// String returns a string that describes `base`.
func (_aefd fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_aefd .coreString ());};func _bdgecc (_fgdf _ebc .PdfObject )(*PdfShading ,error ){_dagd :=&PdfShading {};var _eageb *_ebc .PdfObjectDictionary ;
if _cabfgg ,_aede :=_ebc .GetIndirect (_fgdf );_aede {_dagd ._abfcbf =_cabfgg ;_gbbg ,_ecbcg :=_cabfgg .PdfObject .(*_ebc .PdfObjectDictionary );if !_ecbcg {_ca .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_ebc .ErrTypeError ;};_eageb =_gbbg ;}else if _gfaee ,_ddegb :=_ebc .GetStream (_fgdf );_ddegb {_dagd ._abfcbf =_gfaee ;_eageb =_gfaee .PdfObjectDictionary ;}else if _fabfde ,_ffebb :=_ebc .GetDict (_fgdf );_ffebb {_dagd ._abfcbf =_fabfde ;
_eageb =_fabfde ;}else {_ca .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_fgdf );return nil ,_ebc .ErrTypeError ;};if _eageb ==nil {_ca .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cfe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fgdf =_eageb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fgdf ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgdf =_ebc .TraceToDirectObject (_fgdf );_ffbd ,_fbfec :=_fgdf .(*_ebc .PdfObjectInteger );if !_fbfec {_ca .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fgdf );
return nil ,_ebc .ErrTypeError ;};if *_ffbd < 1||*_ffbd > 7{_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_ffbd );
return nil ,_ebc .ErrTypeError ;};_dagd .ShadingType =_ffbd ;_fgdf =_eageb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _fgdf ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egef ,_ceegb :=NewPdfColorspaceFromPdfObject (_fgdf );if _ceegb !=nil {_ca .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ceegb );
return nil ,_ceegb ;};_dagd .ColorSpace =_egef ;_fgdf =_eageb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _fgdf !=nil {_fgdf =_ebc .TraceToDirectObject (_fgdf );_gbcaf ,_daggd :=_fgdf .(*_ebc .PdfObjectArray );if !_daggd {_ca .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fgdf );
return nil ,_ebc .ErrTypeError ;};_dagd .Background =_gbcaf ;};_fgdf =_eageb .Get ("\u0042\u0042\u006f\u0078");if _fgdf !=nil {_fgdf =_ebc .TraceToDirectObject (_fgdf );_eaffdd ,_bcaga :=_fgdf .(*_ebc .PdfObjectArray );if !_bcaga {_ca .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fgdf );
return nil ,_ebc .ErrTypeError ;};_eafba ,_fbbce :=NewPdfRectangle (*_eaffdd );if _fbbce !=nil {_ca .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fbbce );return nil ,_fbbce ;};_dagd .BBox =_eafba ;};_fgdf =_eageb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _fgdf !=nil {_fgdf =_ebc .TraceToDirectObject (_fgdf );_ggggg ,_fbbba :=_fgdf .(*_ebc .PdfObjectBool );if !_fbbba {_ca .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgdf );
return nil ,_ebc .ErrTypeError ;};_dagd .AntiAlias =_ggggg ;};switch *_ffbd {case 1:_febc ,_dadga :=_fecfc (_eageb );if _dadga !=nil {return nil ,_dadga ;};_febc .PdfShading =_dagd ;_dagd ._fcbcf =_febc ;return _dagd ,nil ;case 2:_abagcg ,_badb :=_babcf (_eageb );
if _badb !=nil {return nil ,_badb ;};_abagcg .PdfShading =_dagd ;_dagd ._fcbcf =_abagcg ;return _dagd ,nil ;case 3:_gegae ,_gbgaa :=_fgcfg (_eageb );if _gbgaa !=nil {return nil ,_gbgaa ;};_gegae .PdfShading =_dagd ;_dagd ._fcbcf =_gegae ;return _dagd ,nil ;
case 4:_dfecc ,_addad :=_bbff (_eageb );if _addad !=nil {return nil ,_addad ;};_dfecc .PdfShading =_dagd ;_dagd ._fcbcf =_dfecc ;return _dagd ,nil ;case 5:_cdddd ,_bgfe :=_efcfe (_eageb );if _bgfe !=nil {return nil ,_bgfe ;};_cdddd .PdfShading =_dagd ;
_dagd ._fcbcf =_cdddd ;return _dagd ,nil ;case 6:_fegge ,_cgcf :=_egbef (_eageb );if _cgcf !=nil {return nil ,_cgcf ;};_fegge .PdfShading =_dagd ;_dagd ._fcbcf =_fegge ;return _dagd ,nil ;case 7:_dccee ,_dbdga :=_becgd (_eageb );if _dbdga !=nil {return nil ,_dbdga ;
};_dccee .PdfShading =_dagd ;_dagd ._fcbcf =_dccee ;return _dagd ,nil ;};return nil ,_cfe .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fgbbd *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cfe .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fgbbd .S =subtype ;return nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ebc .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_ggbf *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ggbf .Base ==nil {return nil ,_cfe .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ggbf .Base .ColorToRGB (color );};func (_aecg *PdfReader )newPdfActionSubmitFormFromDict (_bbb *_ebc .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_deb ,_eagf :=_ece (_bbb .Get ("\u0046"));if _eagf !=nil {return nil ,_eagf ;};return &PdfActionSubmitForm {F :_deb ,Fields :_bbb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bbb .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gdebf *PdfPageResources )HasFontByName (keyName _ebc .PdfObjectName )bool {_ ,_cbafga :=_gdebf .GetFontByName (keyName );return _cbafga ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_agaff *PdfAppender )SetDocInfo (info *PdfInfo ){_agaff ._eed =info };

// ToPdfObject implements interface PdfModel.
func (_da *PdfActionURI )ToPdfObject ()_ebc .PdfObject {_da .PdfAction .ToPdfObject ();_edgb :=_da ._dc ;_daa :=_edgb .PdfObject .(*_ebc .PdfObjectDictionary );_daa .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeURI )));_daa .SetIfNotNil ("\u0055\u0052\u0049",_da .URI );
_daa .SetIfNotNil ("\u0049\u0073\u004da\u0070",_da .IsMap );return _edgb ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_addb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _addb ._cbfg .getFontDescriptor (),nil ;};func (_bfbcf *PdfWriter )writeTrailer (_agdegb int ){_bfbcf .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _edbd :=0;_edbd <=_agdegb ;
{for ;_edbd <=_agdegb ;_edbd ++{_bebgfe ,_bbbcc :=_bfbcf ._bdgf [_edbd ];if _bbbcc &&(!_bfbcf ._ffdcc ||_bfbcf ._ffdcc &&(_bebgfe .Type ==1&&_bebgfe .Offset >=_bfbcf ._fabfae ||_bebgfe .Type ==0)){break ;};};var _edddf int ;for _edddf =_edbd +1;_edddf <=_agdegb ;
_edddf ++{_bacbb ,_afadc :=_bfbcf ._bdgf [_edddf ];if _afadc &&(!_bfbcf ._ffdcc ||_bfbcf ._ffdcc &&(_bacbb .Type ==1&&_bacbb .Offset > _bfbcf ._fabfae )){continue ;};break ;};_cdcdbg :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_edbd ,_edddf -_edbd );
_bfbcf .writeString (_cdcdbg );for _bdbcd :=_edbd ;_bdbcd < _edddf ;_bdbcd ++{_bbgg :=_bfbcf ._bdgf [_bdbcd ];switch _bbgg .Type {case 0:_cdcdbg =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_bfbcf .writeString (_cdcdbg );
case 1:_cdcdbg =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bbgg .Offset ,0);_bfbcf .writeString (_cdcdbg );};};_edbd =_edddf +1;};_befec :=_ebc .MakeDict ();_befec .Set ("\u0049\u006e\u0066\u006f",_bfbcf ._ebgcgg );
_befec .Set ("\u0052\u006f\u006f\u0074",_bfbcf ._acbba );_befec .Set ("\u0053\u0069\u007a\u0065",_ebc .MakeInteger (int64 (_agdegb +1)));if _bfbcf ._ffdcc &&_bfbcf ._eebgb > 0{_befec .Set ("\u0050\u0072\u0065\u0076",_ebc .MakeInteger (_bfbcf ._eebgb ));
};if _bfbcf ._aacgc !=nil {_befec .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bfbcf ._daeff );};if _bfbcf ._fgbaa ==nil &&_bfbcf ._eced !=""&&_bfbcf ._gdegc !=""{_bfbcf ._fgbaa =_ebc .MakeArray (_ebc .MakeHexString (_bfbcf ._eced ),_ebc .MakeHexString (_bfbcf ._gdegc ));
};if _bfbcf ._fgbaa !=nil {_befec .Set ("\u0049\u0044",_bfbcf ._fgbaa );_ca .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bfbcf ._fgbaa );};_bfbcf .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_bfbcf .writeString (_befec .WriteString ());
_bfbcf .writeString ("\u000a");};

// ToPdfObject returns a PDF object representation of the outline item.
func (_aead *OutlineItem )ToPdfObject ()_ebc .PdfObject {_dccgg ,_ :=_aead .ToPdfOutlineItem ();return _dccgg .ToPdfObject ();};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _eag .ReadSeeker )(*PdfReader ,error ){const _bcgcf ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dbad (rs ,&ReaderOpts {LazyLoad :true },false ,_bcgcf );
};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gbdd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_ebc .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gagf []_ebc .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_cfbc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_dbbgd *PdfPageResources )ToPdfObject ()_ebc .PdfObject {_dedg :=_dbbgd ._bgbaf ;_dedg .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dbbgd .ExtGState );if _dbbgd ._geff !=nil {_dbbgd .ColorSpace =_dbbgd ._geff .ToPdfObject ();};_dedg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dbbgd .ColorSpace );
_dedg .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_dbbgd .Pattern );_dedg .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dbbgd .Shading );_dedg .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_dbbgd .XObject );_dedg .SetIfNotNil ("\u0046\u006f\u006e\u0074",_dbbgd .Font );
_dedg .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_dbbgd .ProcSet );_dedg .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_dbbgd .Properties );return _dedg ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dabac *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_ecca :=NewPdfOutlineItem ();_ecca .Title =_ebc .MakeEncodedString (_dabac .Title ,true );_ecca .Dest =_dabac .Dest .ToPdfObject ();var _cbddfb []*PdfOutlineItem ;var _bcfef int64 ;
var _fbfcc *PdfOutlineItem ;for _ ,_fddfd :=range _dabac .Entries {_eaebe ,_cdee :=_fddfd .ToPdfOutlineItem ();_eaebe .Parent =&_ecca .PdfOutlineTreeNode ;if _fbfcc !=nil {_fbfcc .Next =&_eaebe .PdfOutlineTreeNode ;_eaebe .Prev =&_fbfcc .PdfOutlineTreeNode ;
};_cbddfb =append (_cbddfb ,_eaebe );_bcfef +=_cdee ;_fbfcc =_eaebe ;};_dfbge :=len (_cbddfb );_bcfef +=int64 (_dfbge );if _dfbge > 0{_ecca .First =&_cbddfb [0].PdfOutlineTreeNode ;_ecca .Last =&_cbddfb [_dfbge -1].PdfOutlineTreeNode ;_ecca .Count =&_bcfef ;
};return _ecca ,_bcfef ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_cbadc *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _ebc .GetNumberAsFloat (_cbadc .XHeight );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_acac *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ead :=range pages {_ead =_ead .Duplicate ();_edced (_ead );_acac ._dcbg =append (_acac ._dcbg ,_ead );};};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _ebc .PdfObject ;MK _ebc .PdfObject ;A _ebc .PdfObject ;AA _ebc .PdfObject ;BS _ebc .PdfObject ;Parent _ebc .PdfObject ;_cdgb *PdfField ;_adg bool ;};func (_afg *PdfReader )newPdfActionThreadFromDict (_cda *_ebc .PdfObjectDictionary )(*PdfActionThread ,error ){_deg ,_gda :=_ece (_cda .Get ("\u0046"));
if _gda !=nil {return nil ,_gda ;};return &PdfActionThread {D :_cda .Get ("\u0044"),B :_cda .Get ("\u0042"),F :_deg },nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_daeadg *PdfOutline )ToPdfObject ()_ebc .PdfObject {_fdeg :=_daeadg ._defg ;_gfgfc :=_fdeg .PdfObject .(*_ebc .PdfObjectDictionary );_gfgfc .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _daeadg .First !=nil {_gfgfc .Set ("\u0046\u0069\u0072s\u0074",_daeadg .First .ToPdfObject ());
};if _daeadg .Last !=nil {_gfgfc .Set ("\u004c\u0061\u0073\u0074",_daeadg .Last .GetContext ().GetContainingPdfObject ());};if _daeadg .Parent !=nil {_gfgfc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_daeadg .Parent .GetContext ().GetContainingPdfObject ());
};if _daeadg .Count !=nil {_gfgfc .Set ("\u0043\u006f\u0075n\u0074",_ebc .MakeInteger (*_daeadg .Count ));};return _fdeg ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ae :=NewPdfAction ();_ffaf :=&PdfActionGoTo3DView {};_ffaf .PdfAction =_ae ;_ae .SetContext (_ffaf );return _ffaf ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_dcgeg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cfe .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fbcbd ,_cfce :=_cfef .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afeca ,img ._facag );if _cfce !=nil {return img ,_cfce ;};_dgddg ,_cfce :=_cfef .GrayConverter .Convert (_fbcbd );
if _cfce !=nil {return img ,_cfce ;};return _ebeb (_dgddg .Base ()),nil ;};func (_dgdcb *PdfAcroForm )fill (_bgfg FieldValueProvider ,_ggada FieldAppearanceGenerator )error {if _dgdcb ==nil {return nil ;};_aaba ,_cbdeg :=_bgfg .FieldValues ();if _cbdeg !=nil {return _cbdeg ;
};for _ ,_gdeega :=range _dgdcb .AllFields (){_beceg :=_gdeega .PartialName ();_ddgf ,_cgdaa :=_aaba [_beceg ];if !_cgdaa {if _fdaff ,_affe :=_gdeega .FullName ();_affe ==nil {_ddgf ,_cgdaa =_aaba [_fdaff ];};};if !_cgdaa {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_beceg );
continue ;};if _babcg :=_abggg (_gdeega ,_ddgf );_babcg !=nil {return _babcg ;};if _ggada ==nil {continue ;};for _ ,_gbee :=range _gdeega .Annotations {_eaebg ,_eccbg :=_ggada .GenerateAppearanceDict (_dgdcb ,_gdeega ,_gbee );if _eccbg !=nil {return _eccbg ;
};_gbee .AP =_eaebg ;_gbee .ToPdfObject ();};};return nil ;};func _eddbe (_eacd _ebc .PdfObject )(map[_cgf .CharCode ]float64 ,error ){if _eacd ==nil {return nil ,nil ;};_ddae ,_babe :=_ebc .GetArray (_eacd );if !_babe {return nil ,nil ;};_cadfa :=map[_cgf .CharCode ]float64 {};
_gcgee :=_ddae .Len ();for _cbbac :=0;_cbbac < _gcgee -1;_cbbac ++{_gccfe :=_ebc .TraceToDirectObject (_ddae .Get (_cbbac ));_dacdf ,_bgeec :=_ebc .GetIntVal (_gccfe );if !_bgeec {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_cbbac ,_gccfe );
};_cbbac ++;if _cbbac > _gcgee -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ddae );};_fgcae :=_ebc .TraceToDirectObject (_ddae .Get (_cbbac ));
switch _fgcae .(type ){case *_ebc .PdfObjectArray :_gdbf ,_ :=_ebc .GetArray (_fgcae );if _dacfe ,_gddf :=_gdbf .ToFloat64Array ();_gddf ==nil {for _eggff :=0;_eggff < len (_dacfe );_eggff ++{_cadfa [_cgf .CharCode (_dacdf +_eggff )]=_dacfe [_eggff ];};
}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_cbbac ,_fgcae );};case *_ebc .PdfObjectInteger :_aaege ,_fbad :=_ebc .GetIntVal (_fgcae );
if !_fbad {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_cbbac ,_fgcae );};_cbbac ++;if _cbbac > _gcgee -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ddae );
};_ccgef :=_ddae .Get (_cbbac );_cfdeb ,_bgabf :=_ebc .GetNumberAsFloat (_ccgef );if _bgabf !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_cbbac ,_ccgef );
};for _gecaf :=_dacdf ;_gecaf <=_aaege ;_gecaf ++{_cadfa [_cgf .CharCode (_gecaf )]=_cfdeb ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_cbbac ,_fgcae );
};};return _cadfa ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _ebc .PdfObject )(*PdfFilespec ,error ){_dbdf :=&PdfFilespec {};var _gcgg *_ebc .PdfObjectDictionary ;if _cfdb ,_efcg :=_ebc .GetIndirect (obj );_efcg {_dbdf ._dacdc =_cfdb ;_dabc ,_bbgac :=_ebc .GetDict (_cfdb .PdfObject );
if !_bbgac {_ca .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ebc .ErrTypeError ;};_gcgg =_dabc ;}else if _fdgda ,_ddedc :=_ebc .GetDict (obj );
_ddedc {_dbdf ._dacdc =_fdgda ;_gcgg =_fdgda ;}else {_ca .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_ebc .ErrTypeError ;};if _gcgg ==nil {_ca .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cfe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fgfeb :=_gcgg .Get ("\u0054\u0079\u0070\u0065");_fgfeb !=nil {_adegc ,_bgdf :=_fgfeb .(*_ebc .PdfObjectName );if !_bgdf {_ca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fgfeb );
}else {if *_adegc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ca .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_adegc );
};};};if _eeae :=_gcgg .Get ("\u0046\u0053");_eeae !=nil {_dbdf .FS =_eeae ;};if _geca :=_gcgg .Get ("\u0046");_geca !=nil {_dbdf .F =_geca ;};if _gbcf :=_gcgg .Get ("\u0055\u0046");_gbcf !=nil {_dbdf .UF =_gbcf ;};if _cacc :=_gcgg .Get ("\u0044\u004f\u0053");
_cacc !=nil {_dbdf .DOS =_cacc ;};if _bbbdca :=_gcgg .Get ("\u004d\u0061\u0063");_bbbdca !=nil {_dbdf .Mac =_bbbdca ;};if _agbe :=_gcgg .Get ("\u0055\u006e\u0069\u0078");_agbe !=nil {_dbdf .Unix =_agbe ;};if _bgfd :=_gcgg .Get ("\u0049\u0044");_bgfd !=nil {_dbdf .ID =_bgfd ;
};if _fdeae :=_gcgg .Get ("\u0056");_fdeae !=nil {_dbdf .V =_fdeae ;};if _acafb :=_gcgg .Get ("\u0045\u0046");_acafb !=nil {_dbdf .EF =_acafb ;};if _fdabf :=_gcgg .Get ("\u0052\u0046");_fdabf !=nil {_dbdf .RF =_fdabf ;};if _bgccb :=_gcgg .Get ("\u0044\u0065\u0073\u0063");
_bgccb !=nil {_dbdf .Desc =_bgccb ;};if _bcfe :=_gcgg .Get ("\u0043\u0049");_bcfe !=nil {_dbdf .CI =_bcfe ;};return _dbdf ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ebc .PdfObject ;IC _ebc .PdfObject ;BE _ebc .PdfObject ;RD _ebc .PdfObject ;};func _bfba (_adfba _ebc .PdfObject )(*PdfColorspaceLab ,error ){_aegaf :=NewPdfColorspaceLab ();if _acgc ,_fgga :=_adfba .(*_ebc .PdfIndirectObject );
_fgga {_aegaf ._agaa =_acgc ;};_adfba =_ebc .TraceToDirectObject (_adfba );_gfga ,_fccf :=_adfba .(*_ebc .PdfObjectArray );if !_fccf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gfga .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_adfba =_ebc .TraceToDirectObject (_gfga .Get (0));_eagd ,_fccf :=_adfba .(*_ebc .PdfObjectName );if !_fccf {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_eagd !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_adfba =_ebc .TraceToDirectObject (_gfga .Get (1));_geg ,_fccf :=_adfba .(*_ebc .PdfObjectDictionary );
if !_fccf {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_adfba =_geg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_adfba =_ebc .TraceToDirectObject (_adfba );_abfa ,_fccf :=_adfba .(*_ebc .PdfObjectArray );if !_fccf {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _abfa .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_cffac ,_cfgab :=_abfa .GetAsFloat64Slice ();if _cfgab !=nil {return nil ,_cfgab ;};_aegaf .WhitePoint =_cffac ;_adfba =_geg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _adfba !=nil {_adfba =_ebc .TraceToDirectObject (_adfba );
_bcddb ,_deagg :=_adfba .(*_ebc .PdfObjectArray );if !_deagg {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _bcddb .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_dggf ,_ecbd :=_bcddb .GetAsFloat64Slice ();if _ecbd !=nil {return nil ,_ecbd ;};_aegaf .BlackPoint =_dggf ;};_adfba =_geg .Get ("\u0052\u0061\u006eg\u0065");if _adfba !=nil {_adfba =_ebc .TraceToDirectObject (_adfba );_dbaa ,_gec :=_adfba .(*_ebc .PdfObjectArray );
if !_gec {_ca .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbaa .Len ()!=4{_ca .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bbfaf ,_afgc :=_dbaa .GetAsFloat64Slice ();if _afgc !=nil {return nil ,_afgc ;};_aegaf .Range =_bbfaf ;};return _aegaf ,nil ;};func (_edfgc *PdfAppender )updateObjectsDeep (_dgcg _ebc .PdfObject ,_dccg map[_ebc .PdfObject ]struct{}){if _dccg ==nil {_dccg =map[_ebc .PdfObject ]struct{}{};
};if _ ,_gfeb :=_dccg [_dgcg ];_gfeb ||_dgcg ==nil {return ;};_dccg [_dgcg ]=struct{}{};_aaccf :=_ebc .ResolveReferencesDeep (_dgcg ,_edfgc ._debe );if _aaccf !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aaccf );};switch _dabb :=_dgcg .(type ){case *_ebc .PdfIndirectObject :switch {case _dabb .GetParser ()==_edfgc ._ccf ._bfef :return ;
case _dabb .GetParser ()==_edfgc .Reader ._bfef :_agdb ,_ :=_edfgc ._ccf .GetIndirectObjectByNumber (int (_dabb .ObjectNumber ));_ffce ,_fba :=_agdb .(*_ebc .PdfIndirectObject );if _fba &&_ffce !=nil {if _ffce .PdfObject !=_dabb .PdfObject &&_ffce .PdfObject .WriteString ()!=_dabb .PdfObject .WriteString (){_edfgc .addNewObject (_dgcg );
_edfgc ._cce [_dgcg ]=_dabb .ObjectNumber ;};};default:_edfgc .addNewObject (_dgcg );};_edfgc .updateObjectsDeep (_dabb .PdfObject ,_dccg );case *_ebc .PdfObjectArray :for _ ,_dcec :=range _dabb .Elements (){_edfgc .updateObjectsDeep (_dcec ,_dccg );};
case *_ebc .PdfObjectDictionary :for _ ,_acba :=range _dabb .Keys (){_edfgc .updateObjectsDeep (_dabb .Get (_acba ),_dccg );};case *_ebc .PdfObjectStreams :if _dabb .GetParser ()!=_edfgc ._ccf ._bfef {for _ ,_eea :=range _dabb .Elements (){_edfgc .updateObjectsDeep (_eea ,_dccg );
};};case *_ebc .PdfObjectStream :switch {case _dabb .GetParser ()==_edfgc ._ccf ._bfef :return ;case _dabb .GetParser ()==_edfgc .Reader ._bfef :if _dbcb ,_geddd :=_edfgc ._ccf ._bfef .LookupByReference (_dabb .PdfObjectReference );_geddd ==nil {var _fea bool ;
if _fbb ,_aeda :=_ebc .GetStream (_dbcb );_aeda &&_ed .Equal (_fbb .Stream ,_dabb .Stream ){_fea =true ;};if _baede ,_gcdb :=_ebc .GetDict (_dbcb );_fea &&_gcdb {_fea =_baede .WriteString ()==_dabb .PdfObjectDictionary .WriteString ();};if _fea {return ;
};};if _dabb .ObjectNumber !=0{_edfgc ._cce [_dgcg ]=_dabb .ObjectNumber ;};default:if _ ,_aega :=_edfgc ._aacc [_dgcg ];!_aega {_edfgc .addNewObject (_dgcg );};};_edfgc .updateObjectsDeep (_dabb .PdfObjectDictionary ,_dccg );};};func (_fbecd SignatureValidationResult )String ()string {var _ccdcd _ed .Buffer ;
_ccdcd .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_fbecd .Name ));if _fbecd .Date ._acbce > 0{_ccdcd .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_fbecd .Date .ToGoTime ().String ()));}else {_ccdcd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_fbecd .Reason )> 0{_ccdcd .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fbecd .Reason ));}else {_ccdcd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_fbecd .Location )> 0{_ccdcd .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fbecd .Location ));}else {_ccdcd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_fbecd .ContactInfo )> 0{_ccdcd .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_fbecd .ContactInfo ));}else {_ccdcd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_ccdcd .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_fbecd .Fields )));if _fbecd .IsSigned {_ccdcd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_ccdcd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _fbecd .IsVerified {_ccdcd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_ccdcd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _fbecd .IsTrusted {_ccdcd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_ccdcd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_fbecd .GeneralizedTime .IsZero (){_ccdcd .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_fbecd .GeneralizedTime .String ()));
};if _fbecd .DiffResults !=nil {_ccdcd .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_fbecd .DiffResults .IsPermitted ()));if len (_fbecd .DiffResults .Warnings )> 0{_ccdcd .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_acfga :=range _fbecd .DiffResults .Warnings {_ccdcd .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_acfga ));};};if len (_fbecd .DiffResults .Errors )> 0{_ccdcd .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_egeff :=range _fbecd .DiffResults .Errors {_ccdcd .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_egeff ));};};};return _ccdcd .String ();};var _cccfe =_cf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_adgg *PdfReader )newPdfAnnotationSoundFromDict (_gded *_ebc .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_gedg :=PdfAnnotationSound {};
_eeed ,_bbbdc :=_adgg .newPdfAnnotationMarkupFromDict (_gded );if _bbbdc !=nil {return nil ,_bbbdc ;};_gedg .PdfAnnotationMarkup =_eeed ;_gedg .Name =_gded .Get ("\u004e\u0061\u006d\u0065");_gedg .Sound =_gded .Get ("\u0053\u006f\u0075n\u0064");return &_gedg ,nil ;
};

// ToPdfObject returns the PDF representation of the function.
func (_eebfb *PdfFunctionType2 )ToPdfObject ()_ebc .PdfObject {_gbcg :=_ebc .MakeDict ();_gbcg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ebc .MakeInteger (2));_gfgda :=&_ebc .PdfObjectArray {};for _ ,_bgeg :=range _eebfb .Domain {_gfgda .Append (_ebc .MakeFloat (_bgeg ));
};_gbcg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfgda );if _eebfb .Range !=nil {_feca :=&_ebc .PdfObjectArray {};for _ ,_ecaba :=range _eebfb .Range {_feca .Append (_ebc .MakeFloat (_ecaba ));};_gbcg .Set ("\u0052\u0061\u006eg\u0065",_feca );};if _eebfb .C0 !=nil {_cfcee :=&_ebc .PdfObjectArray {};
for _ ,_eecda :=range _eebfb .C0 {_cfcee .Append (_ebc .MakeFloat (_eecda ));};_gbcg .Set ("\u0043\u0030",_cfcee );};if _eebfb .C1 !=nil {_afedcb :=&_ebc .PdfObjectArray {};for _ ,_dadg :=range _eebfb .C1 {_afedcb .Append (_ebc .MakeFloat (_dadg ));};_gbcg .Set ("\u0043\u0031",_afedcb );
};_gbcg .Set ("\u004e",_ebc .MakeFloat (_eebfb .N ));if _eebfb ._gbgc !=nil {_eebfb ._gbgc .PdfObject =_gbcg ;return _eebfb ._gbgc ;};return _gbcg ;};func _fabe (_bgbb *_ebc .PdfObjectDictionary ){_egbc ,_fcddg :=_ebc .GetArray (_bgbb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_aebd ,_cddfe :=_ebc .GetIntVal (_bgbb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_ccaddf ,_eefa :=_ebc .GetIntVal (_bgbb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _fcddg &&_cddfe &&_eefa {_ceee :=_egbc .Len ();if _ceee !=_ccaddf -_aebd +1{_ca .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_ceee ,_ccaddf );
_bbcd :=_ebc .PdfObjectInteger (_aebd +_ceee -1);_bgbb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_bbcd );};};};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_agfd _eag .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_dbcac _ecg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_effa _ecg .Image )(*Image ,error );

// Compress an image.
Compress (_aagb *Image ,_fecgfa int64 )(*Image ,error );};func (_eeeab *XObjectImage )getParamsDict ()*_ebc .PdfObjectDictionary {_bgbdc :=_ebc .MakeDict ();_bgbdc .Set ("\u0057\u0069\u0064t\u0068",_ebc .MakeInteger (*_eeeab .Width ));_bgbdc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ebc .MakeInteger (*_eeeab .Height ));
_bgbdc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ebc .MakeInteger (int64 (_eeeab .ColorSpace .GetNumComponents ())));_bgbdc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebc .MakeInteger (*_eeeab .BitsPerComponent ));
return _bgbdc ;};func _dfdbc ()_a .Time {_cacgf .Lock ();defer _cacgf .Unlock ();return _egecb };

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ebc .PdfObject ;IC _ebc .PdfObject ;RO _ebc .PdfObject ;OverlayText _ebc .PdfObject ;Repeat _ebc .PdfObject ;DA _ebc .PdfObject ;Q _ebc .PdfObject ;};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);func (_cecgg *PdfWriter )addObjects (_fedba _ebc .PdfObject )error {_ca .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _efaf ,_cddcf :=_fedba .(*_ebc .PdfIndirectObject );_cddcf {_ca .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_ca .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fedba ,_efaf );_ca .Log .Trace ("\u002d\u0020\u0025\u0073",_efaf .PdfObject );if _cecgg .addObject (_efaf ){_dfde :=_cecgg .addObjects (_efaf .PdfObject );if _dfde !=nil {return _dfde ;};
};return nil ;};if _agegbd ,_cffca :=_fedba .(*_ebc .PdfObjectStream );_cffca {_ca .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ca .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fedba ,_fedba );if _cecgg .addObject (_agegbd ){_cgadb :=_cecgg .addObjects (_agegbd .PdfObjectDictionary );
if _cgadb !=nil {return _cgadb ;};};return nil ;};if _bdegc ,_febba :=_fedba .(*_ebc .PdfObjectDictionary );_febba {_ca .Log .Trace ("\u0044\u0069\u0063\u0074");_ca .Log .Trace ("\u002d\u0020\u0025\u0073",_fedba );for _ ,_bbcffe :=range _bdegc .Keys (){_addgd :=_bdegc .Get (_bbcffe );
if _fdbcb ,_cadad :=_addgd .(*_ebc .PdfObjectReference );_cadad {_addgd =_fdbcb .Resolve ();_bdegc .Set (_bbcffe ,_addgd );};if _bbcffe !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fece :=_cecgg .addObjects (_addgd );_fece !=nil {return _fece ;};}else {if _ ,_ccfaf :=_addgd .(*_ebc .PdfObjectNull );
_ccfaf {continue ;};if _baeeb :=_cecgg .hasObject (_addgd );!_baeeb {_ca .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_addgd ,_addgd ,_addgd );
_cecgg ._aedab [_addgd ]=append (_cecgg ._aedab [_addgd ],_bdegc );};};};return nil ;};if _ceeae ,_eccfc :=_fedba .(*_ebc .PdfObjectArray );_eccfc {_ca .Log .Trace ("\u0041\u0072\u0072a\u0079");_ca .Log .Trace ("\u002d\u0020\u0025\u0073",_fedba );if _ceeae ==nil {return _cfe .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fcegfd ,_cafbc :=range _ceeae .Elements (){if _ecbea ,_agfbc :=_cafbc .(*_ebc .PdfObjectReference );_agfbc {_cafbc =_ecbea .Resolve ();_ceeae .Set (_fcegfd ,_cafbc );};if _fabce :=_cecgg .addObjects (_cafbc );_fabce !=nil {return _fabce ;};};return nil ;
};if _ ,_fdegb :=_fedba .(*_ebc .PdfObjectReference );_fdegb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fedba );
return _cfe .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func _dbfd (_fbbb *_ebc .PdfObjectDictionary )*VRI {_ecfb ,_ :=_ebc .GetString (_fbbb .Get ("\u0054\u0055"));_edceg ,_ :=_ebc .GetString (_fbbb .Get ("\u0054\u0053"));
return &VRI {Cert :_cgba (_fbbb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_cgba (_fbbb .Get ("\u004f\u0043\u0053\u0050")),CRL :_cgba (_fbbb .Get ("\u0043\u0052\u004c")),TU :_ecfb ,TS :_edceg };};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_efff :=&PdfColorPatternType2 {};return _efff };

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_dega :=PdfColorLab {l ,a ,b };return &_dega };

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _ebc .PdfObject ;B _ebc .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bfda *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if _bfda .Alternate ==nil {if _bfda .N ==1{_dadf :=NewPdfColorspaceDeviceGray ();return _dadf .ColorFromPdfObjects (objects );}else if _bfda .N ==3{_cbgf :=NewPdfColorspaceDeviceRGB ();
return _cbgf .ColorFromPdfObjects (objects );}else if _bfda .N ==4{_dbcea :=NewPdfColorspaceDeviceCMYK ();return _dbcea .ColorFromPdfObjects (objects );}else {return nil ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bfda .Alternate .ColorFromPdfObjects (objects );};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_cbbbd *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _cbbbd ._geff !=nil {return _cbbbd ._geff ,nil ;};if _cbbbd .ColorSpace ==nil {return nil ,nil ;};_fdfge ,_dbed :=_debb (_cbbbd .ColorSpace );if _dbed !=nil {return nil ,_dbed ;
};_cbbbd ._geff =_fdfge ;return _cbbbd ._geff ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cccgd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cafd :=&PdfColorPattern {};_aeae ,_effc :=objects [len (objects )-1].(*_ebc .PdfObjectName );if !_effc {_ca .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cafd .PatternName =*_aeae ;if len (objects )> 1{_adcdb :=objects [0:len (objects )-1];if _cccgd .UnderlyingCS ==nil {_ca .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cfe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_abfdd ,_cabfg :=_cccgd .UnderlyingCS .ColorFromPdfObjects (_adcdb );if _cabfg !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cabfg );
return nil ,_cabfg ;};_cafd .Color =_abfdd ;};return _cafd ,nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_fbge :_ebc .MakeDict (),ColorComponents :colorComponents };
};

// DecodeArray returns the component range values for the Separation colorspace.
func (_afcb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// IsEncrypted returns true if the PDF file is encrypted.
func (_eadf *PdfReader )IsEncrypted ()(bool ,error ){return _eadf ._bfef .IsEncrypted ()};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_egafa *XObjectImage )SetFilter (encoder _ebc .StreamEncoder )error {_fgac :=_egafa .Stream ;_abced ,_gfdbe :=_egafa .Filter .DecodeBytes (_fgac );if _gfdbe !=nil {return _gfdbe ;};_egafa .Filter =encoder ;encoder .UpdateParams (_egafa .getParamsDict ());
_fgac ,_gfdbe =encoder .EncodeBytes (_abced );if _gfdbe !=nil {return _gfdbe ;};_egafa .Stream =_fgac ;return nil ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _ebc .PdfObject ;Mac _ebc .PdfObject ;Unix _ebc .PdfObject ;NewWindow _ebc .PdfObject ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_bbdbbc *PdfWriter )AddPage (page *PdfPage )error {const _eadd ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_edced (page );_gabab :=page .ToPdfObject ();_ca .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ca .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_gabab );_gcffg ,_gggc :=_ebc .GetIndirect (_gabab );if !_gggc {return _cfe .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ca .Log .Trace ("\u0025\u0073",_gcffg );_ca .Log .Trace ("\u0025\u0073",_gcffg .PdfObject );_abebb ,_gggc :=_ebc .GetDict (_gcffg .PdfObject );if !_gggc {return _cfe .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgdec ,_gggc :=_ebc .GetName (_abebb .Get ("\u0054\u0079\u0070\u0065"));if !_gggc {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_abebb .Get ("\u0054\u0079\u0070\u0065"));
};if _bgdec .String ()!="\u0050\u0061\u0067\u0065"{return _cfe .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_edea :=[]_ebc .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ccaeea ,_badc :=_ebc .GetIndirect (_abebb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ca .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_abebb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_badc );
for _badc {_ca .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccaeea );_edaeea ,_bcfea :=_ebc .GetDict (_ccaeea .PdfObject );if !_bcfea {return _cfe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cggf :=range _edea {_ca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cggf );if _abebb .Get (_cggf )!=nil {_ca .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _bcdcd :=_edaeea .Get (_cggf );_bcdcd !=nil {_ca .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cggf );_abebb .Set (_cggf ,_bcdcd );};};_ccaeea ,_badc =_ebc .GetIndirect (_edaeea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ca .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edaeea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ca .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_abebb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbdbbc ._ecbba );_gcffg .PdfObject =_abebb ;_abffe ,_gggc :=_ebc .GetDict (_bbdbbc ._ecbba .PdfObject );if !_gggc {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ceef ,_gggc :=_ebc .GetArray (_abffe .Get ("\u004b\u0069\u0064\u0073"));if !_gggc {return _cfe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ceef .Append (_gcffg );_bbdbbc ._ababf [_abebb ]=struct{}{};_adccg ,_gggc :=_ebc .GetInt (_abffe .Get ("\u0043\u006f\u0075n\u0074"));if !_gggc {return _cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_adccg =*_adccg +1;if page ._fagg ==nil {_bccf :=_aa .Track (_bbdbbc ._ddcgbf ,_eadd );if _bccf !=nil {return _bccf ;};}else {_fbcbc :=_aa .Track (page ._fagg ._dgcgg ,_eadd );if _fbcbc !=nil {return _fbcbc ;};};_bbdbbc .addObject (_gcffg );_adbfd :=_bbdbbc .addObjects (_abebb );
if _adbfd !=nil {return _adbfd ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gddc *PdfAnnotationWatermark )ToPdfObject ()_ebc .PdfObject {_gddc .PdfAnnotation .ToPdfObject ();_dgdd :=_gddc ._daf ;_cfde :=_dgdd .PdfObject .(*_ebc .PdfObjectDictionary );_cfde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_cfde .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gddc .FixedPrint );return _dgdd ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_cbfg pdfFont };

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_acb *PdfAnnotationWidget )Field ()*PdfField {return _acb ._cdgb };

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_degdbf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_aebc *Image )GetParamsDict ()*_ebc .PdfObjectDictionary {_ffeaaa :=_ebc .MakeDict ();_ffeaaa .Set ("\u0057\u0069\u0064t\u0068",_ebc .MakeInteger (_aebc .Width ));_ffeaaa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ebc .MakeInteger (_aebc .Height ));
_ffeaaa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ebc .MakeInteger (int64 (_aebc .ColorComponents )));_ffeaaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebc .MakeInteger (_aebc .BitsPerComponent ));
return _ffeaaa ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dffa *PdfOutlineItem )GetContainingPdfObject ()_ebc .PdfObject {return _dffa ._gaab };

// HasExtGState checks if ExtGState name is available.
func (_ccgcf *PdfPage )HasExtGState (name _ebc .PdfObjectName )bool {if _ccgcf .Resources ==nil {return false ;};if _ccgcf .Resources .ExtGState ==nil {return false ;};_dcce ,_effcc :=_ebc .TraceToDirectObject (_ccgcf .Resources .ExtGState ).(*_ebc .PdfObjectDictionary );
if !_effcc {_ca .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ebc .TraceToDirectObject (_ccgcf .Resources .ExtGState ));
return false ;};_cbbaa :=_dcce .Get (name );_fecgb :=_cbbaa !=nil ;return _fecgb ;};

// GetXObjectByName gets XObject by name.
func (_gggeg *PdfPage )GetXObjectByName (name _ebc .PdfObjectName )(_ebc .PdfObject ,bool ){_gfdcg ,_afbff :=_gggeg .Resources .XObject .(*_ebc .PdfObjectDictionary );if !_afbff {return nil ,false ;};if _cccgc :=_gfdcg .Get (name );_cccgc !=nil {return _cccgc ,true ;
};return nil ,false ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _afced (_ccddc *_ebc .PdfObjectDictionary )bool {for _ ,_dgdg :=range _ccddc .Keys (){if _ ,_ecbefg :=_efgg [_dgdg .String ()];_ecbefg {return true ;};};return false ;};func (_gcfg *pdfFontType3 )baseFields ()*fontCommon {return &_gcfg .fontCommon };
func (_gfega *pdfFontSimple )baseFields ()*fontCommon {return &_gfega .fontCommon };func _acaf (_afdg _ebc .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ceed :=&PdfColorspaceDeviceNAttributes {};var _eaba *_ebc .PdfObjectDictionary ;switch _gcba :=_afdg .(type ){case *_ebc .PdfIndirectObject :_ceed ._cacbg =_gcba ;
var _cffb bool ;_eaba ,_cffb =_gcba .PdfObject .(*_ebc .PdfObjectDictionary );if !_cffb {_ca .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_ebc .PdfObjectDictionary :_eaba =_gcba ;case *_ebc .PdfObjectReference :_febab :=_gcba .Resolve ();return _acaf (_febab );default:_ca .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dabg :=_eaba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dabg !=nil {_febga ,_begfd :=_ebc .TraceToDirectObject (_dabg ).(*_ebc .PdfObjectName );if !_begfd {_ca .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ceed .Subtype =_febga ;};if _effbb :=_eaba .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_effbb !=nil {_ceed .Colorants =_effbb ;};if _gadf :=_eaba .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_gadf !=nil {_ceed .Process =_gadf ;};if _fcfa :=_eaba .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fcfa !=nil {_ceed .MixingHints =_fcfa ;};return _ceed ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_ebc .PdfObjectInteger ;BitsPerComponent *_ebc .PdfObjectInteger ;BitsPerFlag *_ebc .PdfObjectInteger ;Decode *_ebc .PdfObjectArray ;Function []PdfFunction ;};

// SetImage updates XObject Image with new image data.
func (_aegdc *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_aegdc .Filter .UpdateParams (img .GetParamsDict ());_cbdc ,_eabaec :=_aegdc .Filter .EncodeBytes (img .Data );if _eabaec !=nil {return _eabaec ;};_aegdc .Stream =_cbdc ;_fbdcg :=img .Width ;
_aegdc .Width =&_fbdcg ;_ddefef :=img .Height ;_aegdc .Height =&_ddefef ;_cfcga :=img .BitsPerComponent ;_aegdc .BitsPerComponent =&_cfcga ;if cs ==nil {if img .ColorComponents ==1{_aegdc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_aegdc .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_aegdc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cfe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_aegdc .ColorSpace =cs ;};return nil ;
};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_aceeg :_ebc .MakeIndirectObject (_ebc .MakeDict ())};};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_beegf []byte ;_dfgdaf []uint32 ;_cgfff *_ebc .PdfObjectStream ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_bcega *PdfColorspaceDeviceN )GetNumComponents ()int {return _bcega .ColorantNames .Len ()};func _geac (_dbaba _ebc .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ca .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dbaba .String (),_dbaba );
_ffeb :=NewPdfColorspaceSpecialPattern ();if _fbeef ,_agbf :=_dbaba .(*_ebc .PdfIndirectObject );_agbf {_ffeb ._fcgcb =_fbeef ;};_dbaba =_ebc .TraceToDirectObject (_dbaba );if _fbcc ,_adag :=_dbaba .(*_ebc .PdfObjectName );_adag {if *_fbcc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _ffeb ,nil ;};_adec ,_fffba :=_dbaba .(*_ebc .PdfObjectArray );if !_fffba {_ca .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dbaba );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _adec .Len ()!=1&&_adec .Len ()!=2{_ca .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_adec );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dbaba =_adec .Get (0);if _gbgf ,_agbaf :=_dbaba .(*_ebc .PdfObjectName );_agbaf {if *_gbgf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ca .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gbgf );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _adec .Len ()> 1{_dbaba =_adec .Get (1);_dbaba =_ebc .TraceToDirectObject (_dbaba );_cegc ,_aaacb :=NewPdfColorspaceFromPdfObject (_dbaba );if _aaacb !=nil {return nil ,_aaacb ;
};_ffeb .UnderlyingCS =_cegc ;};_ca .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_ffeb .UnderlyingCS );
return _ffeb ,nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_acagc *PdfPageResources )HasPatternByName (keyName _ebc .PdfObjectName )bool {_ ,_fdbfg :=_acagc .GetPatternByName (keyName );return _fdbfg ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_agb :=NewPdfAction ();_bb :=&PdfActionLaunch {};_bb .PdfAction =_agb ;_agb .SetContext (_bb );return _bb ;};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_gdgcf *PdfPageResources )HasShadingByName (keyName _ebc .PdfObjectName )bool {_ ,_fgdb :=_gdgcf .GetShadingByName (keyName );return _fgdb ;};func (_fae *PdfReader )newPdfAnnotationWatermarkFromDict (_bdfg *_ebc .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_gcc :=PdfAnnotationWatermark {};
_gcc .FixedPrint =_bdfg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_gcc ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_febf PdfModel ;_faga *_ebc .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_ebc .PdfObjectName ;T *_ebc .PdfObjectString ;TU *_ebc .PdfObjectString ;TM *_ebc .PdfObjectString ;Ff *_ebc .PdfObjectInteger ;
V _ebc .PdfObject ;DV _ebc .PdfObject ;AA _ebc .PdfObject ;VariableText *VariableText ;};func _geece (_ffada _ebc .PdfObject ){_ca .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ffada ,_ffada .String ());if _abebe ,_efae :=_ffada .(*_ebc .PdfObjectStream );
_efae {_caadf ,_agedg :=_ebc .DecodeStream (_abebe );if _agedg !=nil {_ca .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_agedg );return ;};_ca .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_caadf );}else if _bccef ,_abba :=_ffada .(*_ebc .PdfIndirectObject );
_abba {_ca .Log .Debug ("\u0025\u0054\u0020%\u0076",_bccef .PdfObject ,_bccef .PdfObject );_ca .Log .Debug ("\u0025\u0073",_bccef .PdfObject .String ());};};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ddeb ,_afbeg :=NewStandard14Font (basefont );if _afbeg !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ddeb ;};func _fefeg ()_a .Time {_cacgf .Lock ();defer _cacgf .Unlock ();return _gdeef };func _fgcfg (_ebac *_ebc .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gfddg :=PdfShadingType3 {};_acgab :=_ebac .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _acgab ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_ceecd ,_fdbcc :=_acgab .(*_ebc .PdfObjectArray );if !_fdbcc {_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acgab );return nil ,_ebc .ErrTypeError ;
};if _ceecd .Len ()!=6{_ca .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ceecd .Len ());return nil ,ErrInvalidAttribute ;};_gfddg .Coords =_ceecd ;
if _ebgcfg :=_ebac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ebgcfg !=nil {_ebgcfg =_ebc .TraceToDirectObject (_ebgcfg );_edadb ,_gaabf :=_ebgcfg .(*_ebc .PdfObjectArray );if !_gaabf {_ca .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebgcfg );
return nil ,_ebc .ErrTypeError ;};_gfddg .Domain =_edadb ;};_acgab =_ebac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _acgab ==nil {_ca .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gfddg .Function =[]PdfFunction {};if _cefca ,_gabfe :=_acgab .(*_ebc .PdfObjectArray );_gabfe {for _ ,_bggae :=range _cefca .Elements (){_bgbbe ,_gddde :=_adda (_bggae );if _gddde !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gddde );
return nil ,_gddde ;};_gfddg .Function =append (_gfddg .Function ,_bgbbe );};}else {_ddfgd ,_gebfd :=_adda (_acgab );if _gebfd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gebfd );
return nil ,_gebfd ;};_gfddg .Function =append (_gfddg .Function ,_ddfgd );};if _gggef :=_ebac .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gggef !=nil {_gggef =_ebc .TraceToDirectObject (_gggef );_ebcga ,_dbede :=_gggef .(*_ebc .PdfObjectArray );if !_dbede {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gggef );
return nil ,_ebc .ErrTypeError ;};if _ebcga .Len ()!=2{_ca .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ebcga .Len ());return nil ,ErrInvalidAttribute ;
};_gfddg .Extend =_ebcga ;};return &_gfddg ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_egg :=NewPdfAnnotation ();_gfb :=&PdfAnnotationUnderline {};_gfb .PdfAnnotation =_egg ;_gfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_gfb );return _gfb ;};func (_daba *PdfReader )newPdfAnnotationMarkupFromDict (_bafg *_ebc .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_fbce :=&PdfAnnotationMarkup {};
if _eeb :=_bafg .Get ("\u0054");_eeb !=nil {_fbce .T =_eeb ;};if _gbff :=_bafg .Get ("\u0050\u006f\u0070u\u0070");_gbff !=nil {_cfbf ,_cage :=_gbff .(*_ebc .PdfIndirectObject );if !_cage {if _ ,_cgffc :=_gbff .(*_ebc .PdfObjectNull );!_cgffc {return nil ,_cfe .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_egf ,_bec :=_daba .newPdfAnnotationFromIndirectObject (_cfbf );if _bec !=nil {return nil ,_bec ;};if _egf !=nil {_edfd ,_geb :=_egf ._fddc .(*PdfAnnotationPopup );if !_geb {return nil ,_cfe .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_fbce .Popup =_edfd ;};};};if _aefc :=_bafg .Get ("\u0043\u0041");_aefc !=nil {_fbce .CA =_aefc ;};if _bac :=_bafg .Get ("\u0052\u0043");_bac !=nil {_fbce .RC =_bac ;};if _agd :=_bafg .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_agd !=nil {_fbce .CreationDate =_agd ;};if _bga :=_bafg .Get ("\u0049\u0052\u0054");_bga !=nil {_fbce .IRT =_bga ;};if _afaa :=_bafg .Get ("\u0053\u0075\u0062\u006a");_afaa !=nil {_fbce .Subj =_afaa ;};if _gab :=_bafg .Get ("\u0052\u0054");_gab !=nil {_fbce .RT =_gab ;
};if _cgfe :=_bafg .Get ("\u0049\u0054");_cgfe !=nil {_fbce .IT =_cgfe ;};if _aeff :=_bafg .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_aeff !=nil {_fbce .ExData =_aeff ;};return _fbce ,nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_ccab *PdfColorspaceDeviceNAttributes )ToPdfObject ()_ebc .PdfObject {_fbcga :=_ebc .MakeDict ();if _ccab .Subtype !=nil {_fbcga .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ccab .Subtype );};_fbcga .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_ccab .Colorants );
_fbcga .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_ccab .Process );_fbcga .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_ccab .MixingHints );if _ccab ._cacbg !=nil {_ccab ._cacbg .PdfObject =_fbcga ;return _ccab ._cacbg ;
};return _fbcga ;};

// String returns a human readable description of `fontfile`.
func (_egeb *fontFile )String ()string {_gdgfb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _egeb ._bfccf !=nil {_gdgfb =_egeb ._bfccf .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_egeb ._ffdca ,_gdgfb );
};func (_gge *PdfReader )newPdfAnnotationFreeTextFromDict (_caga *_ebc .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_aaa :=PdfAnnotationFreeText {};_cdfg ,_ecgd :=_gge .newPdfAnnotationMarkupFromDict (_caga );if _ecgd !=nil {return nil ,_ecgd ;
};_aaa .PdfAnnotationMarkup =_cdfg ;_aaa .DA =_caga .Get ("\u0044\u0041");_aaa .Q =_caga .Get ("\u0051");_aaa .RC =_caga .Get ("\u0052\u0043");_aaa .DS =_caga .Get ("\u0044\u0053");_aaa .CL =_caga .Get ("\u0043\u004c");_aaa .IT =_caga .Get ("\u0049\u0054");
_aaa .BE =_caga .Get ("\u0042\u0045");_aaa .RD =_caga .Get ("\u0052\u0044");_aaa .BS =_caga .Get ("\u0042\u0053");_aaa .LE =_caga .Get ("\u004c\u0045");return &_aaa ,nil ;};

// IsColored specifies if the pattern is colored.
func (_cada *PdfTilingPattern )IsColored ()bool {if _cada .PaintType !=nil &&*_cada .PaintType ==1{return true ;};return false ;};

// SetOCProperties sets the optional content properties.
func (_daebc *PdfWriter )SetOCProperties (ocProperties _ebc .PdfObject )error {_dgbdg :=_daebc ._aaefa ;if ocProperties !=nil {_ca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_dgbdg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _daebc .addObjects (ocProperties );};return nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_geacc *PdfReader )GetPageLabels ()(_ebc .PdfObject ,error ){_ceeb :=_ebc .ResolveReference (_geacc ._fcdfa .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ceeb ==nil {return nil ,nil ;};if !_geacc ._gebcd {_addeb :=_geacc .traverseObjectData (_ceeb );
if _addeb !=nil {return nil ,_addeb ;};};return _ceeb ,nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gacdbg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gacdbg ._cdccgg =outlineTree ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_gbeg :=&PdfColorspaceCalGray {};_gbeg .BlackPoint =[]float64 {0.0,0.0,0.0};_gbeg .Gamma =1;return _gbeg ;};

// IsCID returns true if the underlying font is CID.
func (_acafc *PdfFont )IsCID ()bool {return _acafc .baseFields ().isCIDFont ()};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _ggb .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_ebc .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_ebc .MakeInteger (int64 (permission )),V :_ebc .MakeName ("\u0031\u002e\u0032")};
};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_edgbd *PdfPageResources )GetXObjectFormByName (keyName _ebc .PdfObjectName )(*XObjectForm ,error ){_bbgacf ,_fddaf :=_edgbd .GetXObjectByName (keyName );if _bbgacf ==nil {return nil ,nil ;};if _fddaf !=XObjectTypeForm {return nil ,_cfe .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_bdcfb ,_afaga :=NewXObjectFormFromStream (_bbgacf );if _afaga !=nil {return nil ,_afaga ;};return _bdcfb ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_aefcf *PdfWriter )SetRotation (rotate int64 )error {_dcfbcb ,_fgcbe :=_ebc .GetDict (_aefcf ._ecbba );if !_fgcbe {return ErrTypeCheck ;};_dcfbcb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ebc .MakeInteger (rotate ));return nil ;};func _debcc (_ecbgb string )(map[_cgf .CharCode ]_cgf .GlyphName ,error ){_aafcd :=_ea .Split (_ecbgb ,"\u000a");
_fdgf :=make (map[_cgf .CharCode ]_cgf .GlyphName );for _ ,_bece :=range _aafcd {_fcfe :=_fccdd .FindStringSubmatch (_bece );if _fcfe ==nil {continue ;};_cfec ,_bcagc :=_fcfe [1],_fcfe [2];_dbgd ,_bgebg :=_cb .Atoi (_cfec );if _bgebg !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_bece );
return nil ,_ebc .ErrTypeError ;};_fdgf [_cgf .CharCode (_dbgd )]=_cgf .GlyphName (_bcagc );};_ca .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_fdgf );
return _fdgf ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_afeg *PdfFont )BaseFont ()string {return _afeg .baseFields ()._eeda };

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ebba *PdfAcroForm )GetContainingPdfObject ()_ebc .PdfObject {return _ebba ._aceeg };func (_aaaeg *PdfPage )setContainer (_gafd *_ebc .PdfIndirectObject ){_gafd .PdfObject =_aaaeg ._gaefe ;_aaaeg ._beacb =_gafd ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bdad *PdfFont )CharcodesToStrings (charcodes []_cgf .CharCode )([]string ,int ,int ){_adac :=_bdad .baseFields ();_cffge :=make ([]string ,0,len (charcodes ));_abdc :=0;_eceff :=_bdad .Encoder ();_dadd :=_adac ._fcffc !=nil &&_bdad .IsSimple ()&&_bdad .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ea .Contains (_adac ._fcffc .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_dadd &&_eceff !=nil {switch _faeac :=_eceff .(type ){case _cgf .SimpleEncoder :_ccdg :=_faeac .BaseName ();if _ ,_ddfba :=_geaac [_ccdg ];_ddfba {for _ ,_gebe :=range charcodes {if _gebgg ,_dedag :=_eceff .CharcodeToRune (_gebe );_dedag {_cffge =append (_cffge ,string (_gebgg ));
}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gebe ,charcodes ,_adac .isCIDFont (),_bdad ,_eceff );
_abdc ++;_cffge =append (_cffge ,_ag .MissingCodeString );};};return _cffge ,len (_cffge ),_abdc ;};};};for _ ,_bcaeaa :=range charcodes {if _adac ._fcffc !=nil {if _afebf ,_beed :=_adac ._fcffc .CharcodeToUnicode (_ag .CharCode (_bcaeaa ));_beed {_cffge =append (_cffge ,_afebf );
continue ;};};if _eceff !=nil {if _bcfgc ,_bbfaa :=_eceff .CharcodeToRune (_bcaeaa );_bbfaa {_cffge =append (_cffge ,string (_bcfgc ));continue ;};};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bcaeaa ,charcodes ,_adac .isCIDFont (),_bdad ,_eceff );
_abdc ++;_cffge =append (_cffge ,_ag .MissingCodeString );};if _abdc !=0{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_abdc ,_bdad );
};return _cffge ,len (_cffge ),_abdc ;};func (_aeadd *PdfWriter )checkCrossReferenceStream ()bool {_fagee :=_aeadd ._aeafa .Major > 1||(_aeadd ._aeafa .Major ==1&&_aeadd ._aeafa .Minor > 4);if _aeadd ._acgegc !=nil {_fagee =*_aeadd ._acgegc ;};return _fagee ;
};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_dffbf *PdfReader )GetCatalogMarkInfo ()(_ebc .PdfObject ,bool ){if _dffbf ._fcdfa ==nil {return nil ,false ;};_bbbgd :=_dffbf ._fcdfa .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _bbbgd ,_bbbgd !=nil ;};type fontFile struct{_ffdca string ;
_aebb string ;_bfccf _cgf .SimpleEncoder ;};func _fedb (_dbbc _ebc .PdfObject )(*PdfBorderStyle ,error ){_cdc :=&PdfBorderStyle {};_cdc ._abfg =_dbbc ;var _ggd *_ebc .PdfObjectDictionary ;_dbbc =_ebc .TraceToDirectObject (_dbbc );_ggd ,_dcge :=_dbbc .(*_ebc .PdfObjectDictionary );
if !_dcge {return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _caag :=_ggd .Get ("\u0054\u0079\u0070\u0065");_caag !=nil {_abe ,_cfdd :=_caag .(*_ebc .PdfObjectName );if !_cfdd {_ca .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_caag );
}else {if *_abe !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ca .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_abe );};};};if _cbbf :=_ggd .Get ("\u0057");
_cbbf !=nil {_baec ,_edfg :=_ebc .GetNumberAsFloat (_cbbf );if _edfg !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_edfg );return nil ,_edfg ;};_cdc .W =&_baec ;
};if _baa :=_ggd .Get ("\u0053");_baa !=nil {_gdece ,_gabf :=_baa .(*_ebc .PdfObjectName );if !_gabf {return nil ,_cfe .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ggbg BorderStyle ;switch *_gdece {case "\u0053":_ggbg =BorderStyleSolid ;case "\u0044":_ggbg =BorderStyleDashed ;case "\u0042":_ggbg =BorderStyleBeveled ;case "\u0049":_ggbg =BorderStyleInset ;case "\u0055":_ggbg =BorderStyleUnderline ;default:_ca .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gdece );
return nil ,_cfe .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cdc .S =&_ggbg ;};if _eeeg :=_ggd .Get ("\u0044");_eeeg !=nil {_fbef ,_acf :=_eeeg .(*_ebc .PdfObjectArray );
if !_acf {_ca .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_eeeg );return nil ,_cfe .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ddd ,_bdge :=_fbef .ToIntegerArray ();if _bdge !=nil {_ca .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bdge );
return nil ,_bdge ;};_cdc .D =&_ddd ;};return _cdc ,nil ;};func _geccb (_gdda string )map[string ]string {_aaaee :=_cccfe .Split (_gdda ,-1);_cgdb :=map[string ]string {};for _ ,_bgbbb :=range _aaaee {_cbcb :=_ccceg .FindStringSubmatch (_bgbbb );if _cbcb ==nil {continue ;
};_gafcc ,_dgcad :=_cbcb [1],_cbcb [2];_cgdb [_gafcc ]=_dgcad ;};return _cgdb ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_aabag int ,_begc *PdfPage );

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cfaae ,_ebge :=_db .Open (filePath );if _ebge !=nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebge );
return nil ,_ebge ;};defer _cfaae .Close ();return NewCompositePdfFontFromTTF (_cfaae );};

// C returns the value of the C component of the color.
func (_ddeag *PdfColorCalRGB )C ()float64 {return _ddeag [2]};

// AddImageResource adds an image to the XObject resources.
func (_cbef *PdfPage )AddImageResource (name _ebc .PdfObjectName ,ximg *XObjectImage )error {var _bbbdb *_ebc .PdfObjectDictionary ;if _cbef .Resources .XObject ==nil {_bbbdb =_ebc .MakeDict ();_cbef .Resources .XObject =_bbbdb ;}else {var _dedagc bool ;
_bbbdb ,_dedagc =(_cbef .Resources .XObject ).(*_ebc .PdfObjectDictionary );if !_dedagc {return _cfe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bbbdb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_ddbb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _ddbb .baseFields ()._adgc !=nil {return _ddbb .baseFields ()._adgc ;};if _agfa :=_ddbb ._cbfg .getFontDescriptor ();_agfa !=nil {return _agfa ;};_ca .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_ddbb );
return nil ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_ebc .PdfObjectArray ;ExtGState _ebc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_edbc *PdfSignature )ToPdfObject ()_ebc .PdfObject {_adefg :=_edbc ._ffaeb ;var _abcab *_ebc .PdfObjectDictionary ;if _cfdff ,_agdeg :=_adefg .PdfObject .(*pdfSignDictionary );_agdeg {_abcab =_cfdff .PdfObjectDictionary ;}else {_abcab =_adefg .PdfObject .(*_ebc .PdfObjectDictionary );
};_abcab .SetIfNotNil ("\u0054\u0079\u0070\u0065",_edbc .Type );_abcab .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_edbc .Filter );_abcab .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_edbc .SubFilter );_abcab .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_edbc .ByteRange );
_abcab .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_edbc .Contents );_abcab .SetIfNotNil ("\u0043\u0065\u0072\u0074",_edbc .Cert );_abcab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edbc .Name );_abcab .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_edbc .Reason );
_abcab .SetIfNotNil ("\u004d",_edbc .M );_abcab .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_edbc .Reference );_abcab .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_edbc .Changes );_abcab .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_edbc .ContactInfo );
return _adefg ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_dggcde *PdfPage )Size ()(float64 ,float64 ,error ){_fbcgcc ,_bgcdc :=_dggcde .GetMediaBox ();if _bgcdc !=nil {return 0,0,_bgcdc ;};_eabda ,_bgbcc :=_fbcgcc .Width (),_fbcgcc .Height ();_gegabc ,_bgcdc :=_dggcde .GetRotate ();if _bgcdc !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_bgcdc .Error ());
};if _adfc :=_gegabc ;_adfc %360!=0&&_adfc %90==0{if _edcf :=(360+_adfc %360)%360;_edcf ==90||_edcf ==270{_eabda ,_bgbcc =_bgbcc ,_eabda ;};};return _eabda ,_bgbcc ,nil ;};func (_dcgge *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};func (_aceefe *PdfWriter )updateObjectNumbers (){_efbf :=_aceefe .ObjNumOffset ;_ccagc :=0;for _ ,_gcadba :=range _aceefe ._gfbe {_gfce :=int64 (_ccagc +1+_efbf );_edde :=true ;if _aceefe ._ffdcc {if _abaeb ,_cgfgc :=_aceefe ._aeade [_gcadba ];_cgfgc {_gfce =_abaeb ;
_edde =false ;};};switch _bbbeg :=_gcadba .(type ){case *_ebc .PdfIndirectObject :_bbbeg .ObjectNumber =_gfce ;_bbbeg .GenerationNumber =0;case *_ebc .PdfObjectStream :_bbbeg .ObjectNumber =_gfce ;_bbbeg .GenerationNumber =0;case *_ebc .PdfObjectStreams :_bbbeg .ObjectNumber =_gfce ;
_bbbeg .GenerationNumber =0;default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bbbeg );continue ;
};if _edde {_ccagc ++;};};_gbegf :=func (_bcbbf _ebc .PdfObject )int64 {switch _ggggb :=_bcbbf .(type ){case *_ebc .PdfIndirectObject :return _ggggb .ObjectNumber ;case *_ebc .PdfObjectStream :return _ggggb .ObjectNumber ;case *_ebc .PdfObjectStreams :return _ggggb .ObjectNumber ;
};return 0;};_cfa .SliceStable (_aceefe ._gfbe ,func (_gdafg ,_acgad int )bool {return _gbegf (_aceefe ._gfbe [_gdafg ])< _gbegf (_aceefe ._gfbe [_acgad ])});};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _ebc .StreamEncoder ;Intent _ebc .PdfObject ;ImageMask _ebc .PdfObject ;Mask _ebc .PdfObject ;Matte _ebc .PdfObject ;Decode _ebc .PdfObject ;Interpolate _ebc .PdfObject ;
Alternatives _ebc .PdfObject ;SMask _ebc .PdfObject ;SMaskInData _ebc .PdfObject ;Name _ebc .PdfObject ;StructParent _ebc .PdfObject ;ID _ebc .PdfObject ;OPI _ebc .PdfObject ;Metadata _ebc .PdfObject ;OC _ebc .PdfObject ;Stream []byte ;_febcg *_ebc .PdfObjectStream ;
};func _gcbdg ()string {_cacgf .Lock ();defer _cacgf .Unlock ();return _cdffa };func (_ebeee *PdfReader )newPdfPageFromDict (_ggcad *_ebc .PdfObjectDictionary )(*PdfPage ,error ){_cgagc :=NewPdfPage ();_cgagc ._gaefe =_ggcad ;_cgagc ._edgfd =*_ggcad ;_bbeb :=*_ggcad ;
_abdca ,_cbff :=_bbeb .Get ("\u0054\u0079\u0070\u0065").(*_ebc .PdfObjectName );if !_cbff {return nil ,_cfe .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_abdca !="\u0050\u0061\u0067\u0065"{return nil ,_cfe .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _gbdca :=_bbeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_gbdca !=nil {_cgagc .Parent =_gbdca ;};if _ecggd :=_bbeb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ecggd !=nil {_bfdcd ,_abeb :=_ebc .GetString (_ecggd );if !_abeb {return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_affc ,_gegab :=NewPdfDate (_bfdcd .Str ());if _gegab !=nil {return nil ,_gegab ;};_cgagc .LastModified =&_affc ;};if _decaa :=_bbeb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_decaa !=nil &&!_ebc .IsNullObject (_decaa ){_dgbbd ,_ecbec :=_ebc .GetDict (_decaa );
if !_ecbec {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_decaa );};var _efdab error ;_cgagc .Resources ,_efdab =NewPdfPageResourcesFromDict (_dgbbd );
if _efdab !=nil {return nil ,_efdab ;};}else {_gfcde ,_dbbgg :=_cgagc .getParentResources ();if _dbbgg !=nil {return nil ,_dbbgg ;};if _gfcde ==nil {_gfcde =NewPdfPageResources ();};_cgagc .Resources =_gfcde ;};if _ddec :=_bbeb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_ddec !=nil {_aecfgc ,_fdad :=_ebc .GetArray (_ddec );if !_fdad {return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fbbg error ;
_cgagc .MediaBox ,_fbbg =NewPdfRectangle (*_aecfgc );if _fbbg !=nil {return nil ,_fbbg ;};};if _abab :=_bbeb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_abab !=nil {_cddebf ,_edaee :=_ebc .GetArray (_abab );if !_edaee {return nil ,_cfe .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _abaaa error ;_cgagc .CropBox ,_abaaa =NewPdfRectangle (*_cddebf );if _abaaa !=nil {return nil ,_abaaa ;};};if _aagdf :=_bbeb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_aagdf !=nil {_aeab ,_ddfcb :=_ebc .GetArray (_aagdf );if !_ddfcb {return nil ,_cfe .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _agagf error ;_cgagc .BleedBox ,_agagf =NewPdfRectangle (*_aeab );if _agagf !=nil {return nil ,_agagf ;};};if _aecgf :=_bbeb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_aecgf !=nil {_bbea ,_bbcee :=_ebc .GetArray (_aecgf );if !_bbcee {return nil ,_cfe .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bgeegb error ;_cgagc .TrimBox ,_bgeegb =NewPdfRectangle (*_bbea );if _bgeegb !=nil {return nil ,_bgeegb ;};};if _bbda :=_bbeb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bbda !=nil {_abaeg ,_affga :=_ebc .GetArray (_bbda );if !_affga {return nil ,_cfe .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _acedf error ;_cgagc .ArtBox ,_acedf =NewPdfRectangle (*_abaeg );if _acedf !=nil {return nil ,_acedf ;};};if _bfdgd :=_bbeb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_bfdgd !=nil {_cgagc .BoxColorInfo =_bfdgd ;};
if _bfca :=_bbeb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bfca !=nil {_cgagc .Contents =_bfca ;};if _cfbdg :=_bbeb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cfbdg !=nil {_edcdd ,_gcgcgf :=_ebc .GetNumberAsInt64 (_cfbdg );if _gcgcgf !=nil {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cgagc .Rotate =&_edcdd ;};if _gbdcc :=_bbeb .Get ("\u0047\u0072\u006fu\u0070");_gbdcc !=nil {_cgagc .Group =_gbdcc ;};if _dbaff :=_bbeb .Get ("\u0054\u0068\u0075m\u0062");_dbaff !=nil {_cgagc .Thumb =_dbaff ;};if _dggeb :=_bbeb .Get ("\u0042");_dggeb !=nil {_cgagc .B =_dggeb ;
};if _faefe :=_bbeb .Get ("\u0044\u0075\u0072");_faefe !=nil {_cgagc .Dur =_faefe ;};if _acbc :=_bbeb .Get ("\u0054\u0072\u0061n\u0073");_acbc !=nil {_cgagc .Trans =_acbc ;};if _aacgd :=_bbeb .Get ("\u0041\u0041");_aacgd !=nil {_cgagc .AA =_aacgd ;};if _ccaed :=_bbeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_ccaed !=nil {_cgagc .Metadata =_ccaed ;};if _bagf :=_bbeb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bagf !=nil {_cgagc .PieceInfo =_bagf ;};if _cdcgc :=_bbeb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_cdcgc !=nil {_cgagc .StructParents =_cdcgc ;};if _gdaae :=_bbeb .Get ("\u0049\u0044");_gdaae !=nil {_cgagc .ID =_gdaae ;};if _efgcf :=_bbeb .Get ("\u0050\u005a");_efgcf !=nil {_cgagc .PZ =_efgcf ;};if _bccgg :=_bbeb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bccgg !=nil {_cgagc .SeparationInfo =_bccgg ;};if _gbfcc :=_bbeb .Get ("\u0054\u0061\u0062\u0073");_gbfcc !=nil {_cgagc .Tabs =_gbfcc ;};if _egcfe :=_bbeb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_egcfe !=nil {_cgagc .TemplateInstantiated =_egcfe ;};if _bbac :=_bbeb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bbac !=nil {_cgagc .PresSteps =_bbac ;};if _ceead :=_bbeb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ceead !=nil {_cgagc .UserUnit =_ceead ;
};if _gcaed :=_bbeb .Get ("\u0056\u0050");_gcaed !=nil {_cgagc .VP =_gcaed ;};if _gedge :=_bbeb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_gedge !=nil {_cgagc .Annots =_gedge ;};_cgagc ._fagg =_ebeee ;return _cgagc ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fcdg *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_egce :=_ba .NewReader (img .getBase ());_ggba :=_cfef .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cgec :=_ba .NewWriter (_ggba );
_egda :=_bcd .Pow (2,float64 (img .BitsPerComponent ))-1;_bcaf :=make ([]uint32 ,3);var (_fbba error ;_bbced ,_gccf ,_ggcc ,_daadc ,_bfeg ,_gfdc float64 ;);for {_fbba =_egce .ReadSamples (_bcaf );if _fbba ==_eag .EOF {break ;}else if _fbba !=nil {return img ,_fbba ;
};_bbced =float64 (_bcaf [0])/_egda ;_gccf =float64 (_bcaf [1])/_egda ;_ggcc =float64 (_bcaf [2])/_egda ;_daadc =_fcdg .Matrix [0]*_bcd .Pow (_bbced ,_fcdg .Gamma [0])+_fcdg .Matrix [3]*_bcd .Pow (_gccf ,_fcdg .Gamma [1])+_fcdg .Matrix [6]*_bcd .Pow (_ggcc ,_fcdg .Gamma [2]);
_bfeg =_fcdg .Matrix [1]*_bcd .Pow (_bbced ,_fcdg .Gamma [0])+_fcdg .Matrix [4]*_bcd .Pow (_gccf ,_fcdg .Gamma [1])+_fcdg .Matrix [7]*_bcd .Pow (_ggcc ,_fcdg .Gamma [2]);_gfdc =_fcdg .Matrix [2]*_bcd .Pow (_bbced ,_fcdg .Gamma [0])+_fcdg .Matrix [5]*_bcd .Pow (_gccf ,_fcdg .Gamma [1])+_fcdg .Matrix [8]*_bcd .Pow (_ggcc ,_fcdg .Gamma [2]);
_bbced =3.240479*_daadc +-1.537150*_bfeg +-0.498535*_gfdc ;_gccf =-0.969256*_daadc +1.875992*_bfeg +0.041556*_gfdc ;_ggcc =0.055648*_daadc +-0.204043*_bfeg +1.057311*_gfdc ;_bbced =_bcd .Min (_bcd .Max (_bbced ,0),1.0);_gccf =_bcd .Min (_bcd .Max (_gccf ,0),1.0);
_ggcc =_bcd .Min (_bcd .Max (_ggcc ,0),1.0);_bcaf [0]=uint32 (_bbced *_egda );_bcaf [1]=uint32 (_gccf *_egda );_bcaf [2]=uint32 (_ggcc *_egda );if _fbba =_cgec .WriteSamples (_bcaf );_fbba !=nil {return img ,_fbba ;};};return _ebeb (&_ggba ),nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_cffda *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_fadde *PdfReader )loadDSS ()(*DSS ,error ){if _fadde ._bfef .GetCrypter ()!=nil &&!_fadde ._bfef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgfffg :=_fadde ._fcdfa .Get ("\u0044\u0053\u0053");if _cgfffg ==nil {return nil ,nil ;};_dcdfg ,_ :=_ebc .GetIndirect (_cgfffg );_cgfffg =_ebc .TraceToDirectObject (_cgfffg );switch _fceeg :=_cgfffg .(type ){case *_ebc .PdfObjectNull :return nil ,nil ;
case *_ebc .PdfObjectDictionary :return _cgffca (_dcdfg ,_fceeg );};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cgfffg );};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_edcaf *PdfWriter )SetOpenAction (dest _ebc .PdfObject )error {if dest ==nil ||_ebc .IsNullObject (dest ){return nil ;};_edcaf ._aaefa .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _edcaf .addObjects (dest );};
func (_ccgbe *pdfFontType0 )bytesToCharcodes (_ddgd []byte )([]_cgf .CharCode ,bool ){if _ccgbe ._dceae ==nil {return nil ,false ;};_dgdda ,_afgce :=_ccgbe ._dceae .BytesToCharcodes (_ddgd );if !_afgce {return nil ,false ;};_ggddb :=make ([]_cgf .CharCode ,len (_dgdda ));
for _fgggb ,_eacce :=range _dgdda {_ggddb [_fgggb ]=_cgf .CharCode (_eacce );};return _ggddb ,true ;};

// HasXObjectByName checks if has XObject resource by name.
func (_bagff *PdfPage )HasXObjectByName (name _ebc .PdfObjectName )bool {_edfgcd ,_eacff :=_bagff .Resources .XObject .(*_ebc .PdfObjectDictionary );if !_eacff {return false ;};if _gbfeg :=_edfgcd .Get (name );_gbfeg !=nil {return true ;};return false ;
};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fbab *Image )Resample (targetBitsPerComponent int64 ){if _fbab .BitsPerComponent ==targetBitsPerComponent {return ;};_dcece :=_fbab .GetSamples ();if targetBitsPerComponent < _fbab .BitsPerComponent {_geed :=_fbab .BitsPerComponent -targetBitsPerComponent ;
for _daadd :=range _dcece {_dcece [_daadd ]>>=uint (_geed );};}else if targetBitsPerComponent > _fbab .BitsPerComponent {_agec :=targetBitsPerComponent -_fbab .BitsPerComponent ;for _aafd :=range _dcece {_dcece [_aafd ]<<=uint (_agec );};};_fbab .BitsPerComponent =targetBitsPerComponent ;
if _fbab .BitsPerComponent < 8{_fbab .resampleLowBits (_dcece );return ;};_cfgda :=_cfef .BytesPerLine (int (_fbab .Width ),int (_fbab .BitsPerComponent ),_fbab .ColorComponents );_afdca :=make ([]byte ,_cfgda *int (_fbab .Height ));var (_gbged ,_agbeb ,_degdb ,_ggfcb int ;
_abca uint32 ;);for _degdb =0;_degdb < int (_fbab .Height );_degdb ++{_gbged =_degdb *_cfgda ;_agbeb =(_degdb +1)*_cfgda -1;_cadee :=_ba .ResampleUint32 (_dcece [_gbged :_agbeb ],int (targetBitsPerComponent ),8);for _ggfcb ,_abca =range _cadee {_afdca [_ggfcb +_gbged ]=byte (_abca );
};};_fbab .Data =_afdca ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_abfg _ebc .PdfObject ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_egfd *PdfColorspaceICCBased )GetContainingPdfObject ()_ebc .PdfObject {return _egfd ._eaeec };

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_fcda *PdfTilingPattern )ToPdfObject ()_ebc .PdfObject {_fcda .PdfPattern .ToPdfObject ();_gbbab :=_fcda .getDict ();if _fcda .PaintType !=nil {_gbbab .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_fcda .PaintType );};if _fcda .TilingType !=nil {_gbbab .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fcda .TilingType );
};if _fcda .BBox !=nil {_gbbab .Set ("\u0042\u0042\u006f\u0078",_fcda .BBox .ToPdfObject ());};if _fcda .XStep !=nil {_gbbab .Set ("\u0058\u0053\u0074e\u0070",_fcda .XStep );};if _fcda .YStep !=nil {_gbbab .Set ("\u0059\u0053\u0074e\u0070",_fcda .YStep );
};if _fcda .Resources !=nil {_gbbab .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fcda .Resources .ToPdfObject ());};if _fcda .Matrix !=nil {_gbbab .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fcda .Matrix );};return _fcda ._bcgg ;};

// ToPdfObject implements interface PdfModel.
func (_ffab *PdfAnnotationFreeText )ToPdfObject ()_ebc .PdfObject {_ffab .PdfAnnotation .ToPdfObject ();_dbe :=_ffab ._daf ;_acbd :=_dbe .PdfObject .(*_ebc .PdfObjectDictionary );_ffab .PdfAnnotationMarkup .appendToPdfDictionary (_acbd );_acbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_acbd .SetIfNotNil ("\u0044\u0041",_ffab .DA );_acbd .SetIfNotNil ("\u0051",_ffab .Q );_acbd .SetIfNotNil ("\u0052\u0043",_ffab .RC );_acbd .SetIfNotNil ("\u0044\u0053",_ffab .DS );_acbd .SetIfNotNil ("\u0043\u004c",_ffab .CL );_acbd .SetIfNotNil ("\u0049\u0054",_ffab .IT );
_acbd .SetIfNotNil ("\u0042\u0045",_ffab .BE );_acbd .SetIfNotNil ("\u0052\u0044",_ffab .RD );_acbd .SetIfNotNil ("\u0042\u0053",_ffab .BS );_acbd .SetIfNotNil ("\u004c\u0045",_ffab .LE );return _dbe ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bagaf *PdfReader )CheckAccessRights (password []byte )(bool ,_eac .Permissions ,error ){return _bagaf ._bfef .CheckAccessRights (password );};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_abec *PdfPage )AddContentStreamByString (contentStr string )error {_febff ,_gcggf :=_ebc .MakeStream ([]byte (contentStr ),_ebc .NewFlateEncoder ());if _gcggf !=nil {return _gcggf ;};if _abec .Contents ==nil {_abec .Contents =_febff ;}else {_aebce :=_ebc .TraceToDirectObject (_abec .Contents );
_bbdc ,_ggfea :=_aebce .(*_ebc .PdfObjectArray );if !_ggfea {_bbdc =_ebc .MakeArray (_aebce );};_bbdc .Append (_febff );_abec .Contents =_bbdc ;};return nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gee :=NewPdfAction ();_gag :=&PdfActionNamed {};_gag .PdfAction =_gee ;_gee .SetContext (_gag );return _gag ;};func (_cagg *PdfReader )newPdfAnnotationHighlightFromDict (_gfae *_ebc .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_cea :=PdfAnnotationHighlight {};
_fef ,_ecc :=_cagg .newPdfAnnotationMarkupFromDict (_gfae );if _ecc !=nil {return nil ,_ecc ;};_cea .PdfAnnotationMarkup =_fef ;_cea .QuadPoints =_gfae .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cea ,nil ;};type pdfCIDFontType2 struct{fontCommon ;
_acaa *_ebc .PdfIndirectObject ;_dgef _cgf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_ebc .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ebc .PdfObject ;W _ebc .PdfObject ;DW2 _ebc .PdfObject ;W2 _ebc .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _ebc .PdfObject ;_aeef map[_cgf .CharCode ]float64 ;_cfcf float64 ;_dfgda map[rune ]int ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetPdfVersion gets the version of the PDF used within this document.
func (_bfgga *PdfWriter )GetPdfVersion ()string {return _bfgga .getPdfVersion ()};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_daed PdfOutputIntentType )String ()string {switch _daed {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _ebc .StreamEncoder ;FormType _ebc .PdfObject ;BBox _ebc .PdfObject ;Matrix _ebc .PdfObject ;Resources *PdfPageResources ;Group _ebc .PdfObject ;Ref _ebc .PdfObject ;MetaData _ebc .PdfObject ;PieceInfo _ebc .PdfObject ;LastModified _ebc .PdfObject ;
StructParent _ebc .PdfObject ;StructParents _ebc .PdfObject ;OPI _ebc .PdfObject ;OC _ebc .PdfObject ;Name _ebc .PdfObject ;

// Stream data.
Stream []byte ;_eaffe *_ebc .PdfObjectStream ;};

// ToPdfObject returns a stream object.
func (_dfdgb *XObjectForm )ToPdfObject ()_ebc .PdfObject {_cgfdb :=_dfdgb ._eaffe ;_gfede :=_cgfdb .PdfObjectDictionary ;if _dfdgb .Filter !=nil {_gfede =_dfdgb .Filter .MakeStreamDict ();_cgfdb .PdfObjectDictionary =_gfede ;};_gfede .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_gfede .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0046\u006f\u0072\u006d"));_gfede .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dfdgb .FormType );_gfede .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dfdgb .BBox );
_gfede .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfdgb .Matrix );if _dfdgb .Resources !=nil {_gfede .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dfdgb .Resources .ToPdfObject ());};_gfede .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dfdgb .Group );
_gfede .SetIfNotNil ("\u0052\u0065\u0066",_dfdgb .Ref );_gfede .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dfdgb .MetaData );_gfede .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dfdgb .PieceInfo );_gfede .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dfdgb .LastModified );
_gfede .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dfdgb .StructParent );_gfede .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dfdgb .StructParents );_gfede .SetIfNotNil ("\u004f\u0050\u0049",_dfdgb .OPI );
_gfede .SetIfNotNil ("\u004f\u0043",_dfdgb .OC );_gfede .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfdgb .Name );_gfede .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_dfdgb .Stream ))));_cgfdb .Stream =_dfdgb .Stream ;return _cgfdb ;
};func _gefd (_gcfbb *[]*PdfField ,_fegb FieldFilterFunc ,_aaebe bool )[]*PdfField {if _gcfbb ==nil {return nil ;};_dffdc :=*_gcfbb ;if len (*_gcfbb )==0{return nil ;};_dbfg :=_dffdc [:0];if _fegb ==nil {_fegb =func (*PdfField )bool {return true };};var _cdbddb []*PdfField ;
for _ ,_efaa :=range _dffdc {_bafbc :=_fegb (_efaa );if _bafbc {_cdbddb =append (_cdbddb ,_efaa );if len (_efaa .Kids )> 0{_cdbddb =append (_cdbddb ,_gefd (&_efaa .Kids ,_fegb ,_aaebe )...);};};if !_aaebe ||!_bafbc ||len (_efaa .Kids )> 0{_dbfg =append (_dbfg ,_efaa );
};};*_gcfbb =_dbfg ;return _cdbddb ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ebc .PdfObject ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_afbgff *PdfFont )SubsetRegistered ()error {switch _gfcd :=_afbgff ._cbfg .(type ){case *pdfFontType0 :_dacaa :=_gfcd .subsetRegistered ();if _dacaa !=nil {_ca .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dacaa );
return _dacaa ;};if _gfcd ._dfdfb !=nil {if _gfcd ._bbdffb !=nil {_gfcd ._bbdffb .ToPdfObject ();};_gfcd .ToPdfObject ();};default:_ca .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gfcd );
};return nil ;};func (_deddb *PdfWriter )checkLicense ()error {_aebae :=_aa .GetLicenseKey ();if (_aebae ==nil ||!_aebae .IsLicensed ())&&!_edgdf {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cfe .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcdg *PdfAnnotationUnderline )ToPdfObject ()_ebc .PdfObject {_bcdg .PdfAnnotation .ToPdfObject ();_fcg :=_bcdg ._daf ;_efdg :=_fcg .PdfObject .(*_ebc .PdfObjectDictionary );_bcdg .PdfAnnotationMarkup .appendToPdfDictionary (_efdg );_efdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_efdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bcdg .QuadPoints );return _fcg ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_fbge :_ebc .MakeDict ()};
};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _ebc .PdfObject ;Flags _ebc .PdfObject ;};func (_fdcgc *LTV )buildCertChain (_fbfce ,_bffda []*_c .Certificate )([]*_c .Certificate ,map[string ]*_c .Certificate ,error ){_gcgdb :=map[string ]*_c .Certificate {};
for _ ,_dcgaf :=range _fbfce {_gcgdb [_dcgaf .Subject .CommonName ]=_dcgaf ;};_fffcf :=_fbfce ;for _ ,_aaagd :=range _bffda {_gbdcd :=_aaagd .Subject .CommonName ;if _ ,_fbede :=_gcgdb [_gbdcd ];_fbede {continue ;};_gcgdb [_gbdcd ]=_aaagd ;_fffcf =append (_fffcf ,_aaagd );
};if len (_fffcf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _cgge error ;for _fcea :=_fffcf [0];_fcea !=nil &&!_fdcgc .CertClient .IsCA (_fcea );{_effce ,_gdaacf :=_gcgdb [_fcea .Issuer .CommonName ];if !_gdaacf {if _effce ,_cgge =_fdcgc .CertClient .GetIssuer (_fcea );
_cgge !=nil {_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_cgge );
break ;};_gcgdb [_fcea .Issuer .CommonName ]=_effce ;_fffcf =append (_fffcf ,_effce );};_fcea =_effce ;};return _fffcf ,_gcgdb ,nil ;};func _debb (_eaffd _ebc .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gaaad :=&PdfPageResourcesColorspaces {};if _gbgca ,_gbbca :=_eaffd .(*_ebc .PdfIndirectObject );
_gbbca {_gaaad ._ggdfe =_gbgca ;_eaffd =_gbgca .PdfObject ;};_feedc ,_cbagd :=_ebc .GetDict (_eaffd );if !_cbagd {return nil ,_cfe .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gaaad .Names =[]string {};_gaaad .Colorspaces =map[string ]PdfColorspace {};for _ ,_bbcfg :=range _feedc .Keys (){_ffbef :=_feedc .Get (_bbcfg );_gaaad .Names =append (_gaaad .Names ,string (_bbcfg ));_ddfe ,_fgfda :=NewPdfColorspaceFromPdfObject (_ffbef );
if _fgfda !=nil {return nil ,_fgfda ;};_gaaad .Colorspaces [string (_bbcfg )]=_ddfe ;};return _gaaad ,nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_ebc .PdfObjectStream )(*XObjectForm ,error ){_cdedg :=&XObjectForm {};_cdedg ._eaffe =stream ;_cdeecd :=*(stream .PdfObjectDictionary );_ggecf ,_feece :=_ebc .NewEncoderFromStream (stream );if _feece !=nil {return nil ,_feece ;
};_cdedg .Filter =_ggecf ;if _gabbc :=_cdeecd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gabbc !=nil {_cfgdb ,_fcafb :=_gabbc .(*_ebc .PdfObjectName );if !_fcafb {return nil ,_cfe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_cfgdb !="\u0046\u006f\u0072\u006d"{_ca .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _abcd :=_cdeecd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_abcd !=nil {_cdedg .FormType =_abcd ;};if _ggabd :=_cdeecd .Get ("\u0042\u0042\u006f\u0078");_ggabd !=nil {_cdedg .BBox =_ggabd ;};if _addae :=_cdeecd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_addae !=nil {_cdedg .Matrix =_addae ;};if _bccd :=_cdeecd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bccd !=nil {_bccd =_ebc .TraceToDirectObject (_bccd );_ggbdf ,_bgdc :=_bccd .(*_ebc .PdfObjectDictionary );if !_bgdc {_ca .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ebc .ErrTypeError ;};_ebgca ,_dgefe :=NewPdfPageResourcesFromDict (_ggbdf );if _dgefe !=nil {_ca .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dgefe ;};_cdedg .Resources =_ebgca ;_ca .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_cdedg .Resources );};_cdedg .Group =_cdeecd .Get ("\u0047\u0072\u006fu\u0070");
_cdedg .Ref =_cdeecd .Get ("\u0052\u0065\u0066");_cdedg .MetaData =_cdeecd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_cdedg .PieceInfo =_cdeecd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cdedg .LastModified =_cdeecd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_cdedg .StructParent =_cdeecd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cdedg .StructParents =_cdeecd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cdedg .OPI =_cdeecd .Get ("\u004f\u0050\u0049");
_cdedg .OC =_cdeecd .Get ("\u004f\u0043");_cdedg .Name =_cdeecd .Get ("\u004e\u0061\u006d\u0065");_cdedg .Stream =stream .Stream ;return _cdedg ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_ggdad *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_ggdad .HiVal )};};

// ToPdfObject implements interface PdfModel.
func (_facec *Permissions )ToPdfObject ()_ebc .PdfObject {return _facec ._aagddf };

// ToPdfObject implements interface PdfModel.
func (_ccd *PdfActionThread )ToPdfObject ()_ebc .PdfObject {_ccd .PdfAction .ToPdfObject ();_cdf :=_ccd ._dc ;_gff :=_cdf .PdfObject .(*_ebc .PdfObjectDictionary );_gff .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeThread )));if _ccd .F !=nil {_gff .Set ("\u0046",_ccd .F .ToPdfObject ());
};_gff .SetIfNotNil ("\u0044",_ccd .D );_gff .SetIfNotNil ("\u0042",_ccd .B );return _cdf ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_ecfa *LTV )EnableAll (extraCerts []*_c .Certificate )error {_cgbd :=_ecfa ._agfbg ._ccf .AcroForm ;for _ ,_gdafa :=range _cgbd .AllFields (){_egagg ,_ :=_gdafa .GetContext ().(*PdfFieldSignature );if _egagg ==nil {continue ;};_debf :=_egagg .V ;
if _ffca :=_ecfa .validateSig (_debf );_ffca !=nil {_ca .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ffca );
};if _fabfg :=_ecfa .Enable (_debf ,extraCerts );_fabfg !=nil {return _fabfg ;};};return nil ;};type pdfSignDictionary struct{*_ebc .PdfObjectDictionary ;_cagff *SignatureHandler ;_gffg *PdfSignature ;_efaad int64 ;_cdcb int ;_dggeg int ;_edegd int ;_aagaa int ;
};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _ebc .PdfObject ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _ebc .PdfObject ;Popup *PdfAnnotationPopup ;CA _ebc .PdfObject ;RC _ebc .PdfObject ;CreationDate _ebc .PdfObject ;IRT _ebc .PdfObject ;Subj _ebc .PdfObject ;RT _ebc .PdfObject ;IT _ebc .PdfObject ;ExData _ebc .PdfObject ;
};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ebccb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fgaf :=RC4_128bit ;if options !=nil {_fgaf =options .Algorithm ;};_effcb :=_eac .PermOwner ;if options !=nil {_effcb =options .Permissions ;};var _ffcfa _ee .Filter ;
switch _fgaf {case RC4_128bit :_ffcfa =_ee .NewFilterV2 (16);case AES_128bit :_ffcfa =_ee .NewFilterAESV2 ();case AES_256bit :_ffcfa =_ee .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ebgce ,_aaggg ,_eaeac :=_ebc .PdfCryptNewEncrypt (_ffcfa ,userPass ,ownerPass ,_effcb );if _eaeac !=nil {return _eaeac ;};_ebccb ._aacgc =_ebgce ;if _aaggg .Major !=0{_ebccb .SetVersion (_aaggg .Major ,_aaggg .Minor );};_ebccb ._bgcgg =_aaggg .Encrypt ;
_ebccb ._eced ,_ebccb ._gdegc =_aaggg .ID0 ,_aaggg .ID1 ;_bbbba :=_ebc .MakeIndirectObject (_aaggg .Encrypt );_ebccb ._daeff =_bbbba ;_ebccb .addObject (_bbbba );return nil ;};func (_eagge *Image )samplesTrimPadding (_gccab []uint32 )[]uint32 {_ffabg :=_eagge .ColorComponents *int (_eagge .Width )*int (_eagge .Height );
if len (_gccab )==_ffabg {return _gccab ;};_dgad :=make ([]uint32 ,_ffabg );_bbfga :=int (_eagge .Width )*_eagge .ColorComponents ;var _abda ,_aadda ,_bface ,_aeafg int ;_cgafb :=_cfef .BytesPerLine (int (_eagge .Width ),int (_eagge .BitsPerComponent ),_eagge .ColorComponents );
for _abda =0;_abda < int (_eagge .Height );_abda ++{_aadda =_abda *int (_eagge .Width );_bface =_abda *_cgafb ;for _aeafg =0;_aeafg < _bbfga ;_aeafg ++{_dgad [_aadda +_aeafg ]=_gccab [_bface +_aeafg ];};};return _dgad ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _eag .ReadSeeker )(*PdfFont ,error ){_dbbca ,_gcgcg :=_dec .ReadAll (r );if _gcgcg !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gcgcg );
return nil ,_gcgcg ;};_fbfc ,_gcgcg :=_ge .TtfParse (_ed .NewReader (_dbbca ));if _gcgcg !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gcgcg );
return nil ,_gcgcg ;};_dbgf :=&pdfCIDFontType2 {fontCommon :fontCommon {_dccgbc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_ebc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_fbfc .Widths )<=0{return nil ,_cfe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_aecdd :=1000.0/float64 (_fbfc .UnitsPerEm );_baab :=_aecdd *float64 (_fbfc .Widths [0]);_caddb :=make (map[rune ]int );_cgagd :=make (map[_ge .GID ]int );_gecb :=_ge .GID (len (_fbfc .Widths ));for _agag ,_bbbec :=range _fbfc .Chars {if _bbbec > _gecb -1{continue ;
};_dfeg :=int (_aecdd *float64 (_fbfc .Widths [_bbbec ]));_caddb [_agag ]=_dfeg ;_cgagd [_bbbec ]=_dfeg ;};_dbgf ._dfgda =_caddb ;_dbgf .DW =_ebc .MakeInteger (int64 (_baab ));_gcfb :=_dbde (_cgagd ,uint16 (_gecb ));_dbgf .W =_ebc .MakeIndirectObject (_gcfb );
_dfbe :=_ebc .MakeDict ();_dfbe .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_ebc .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dfbe .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_ebc .MakeString ("\u0041\u0064\u006fb\u0065"));
_dfbe .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_ebc .MakeInteger (0));_dbgf .CIDSystemInfo =_dfbe ;_beab :=&PdfFontDescriptor {FontName :_ebc .MakeName (_fbfc .PostScriptName ),Ascent :_ebc .MakeFloat (_aecdd *float64 (_fbfc .TypoAscender )),Descent :_ebc .MakeFloat (_aecdd *float64 (_fbfc .TypoDescender )),CapHeight :_ebc .MakeFloat (_aecdd *float64 (_fbfc .CapHeight )),FontBBox :_ebc .MakeArrayFromFloats ([]float64 {_aecdd *float64 (_fbfc .Xmin ),_aecdd *float64 (_fbfc .Ymin ),_aecdd *float64 (_fbfc .Xmax ),_aecdd *float64 (_fbfc .Ymax )}),ItalicAngle :_ebc .MakeFloat (_fbfc .ItalicAngle ),MissingWidth :_ebc .MakeFloat (_baab )};
_eeeae ,_gcgcg :=_ebc .MakeStream (_dbbca ,_ebc .NewFlateEncoder ());if _gcgcg !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gcgcg );
return nil ,_gcgcg ;};_eeeae .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ebc .MakeInteger (int64 (len (_dbbca ))));_beab .FontFile2 =_eeeae ;if _fbfc .Bold {_beab .StemV =_ebc .MakeInteger (120);}else {_beab .StemV =_ebc .MakeInteger (70);
};_dgafg :=_cabd ;if _fbfc .IsFixedPitch {_dgafg |=_fdfg ;};if _fbfc .ItalicAngle !=0{_dgafg |=_fabfa ;};_beab .Flags =_ebc .MakeInteger (int64 (_dgafg ));_dbgf ._eeda =_fbfc .PostScriptName ;_dbgf ._adgc =_beab ;_ebab :=pdfFontType0 {fontCommon :fontCommon {_dccgbc :"\u0054\u0079\u0070e\u0030",_eeda :_fbfc .PostScriptName },DescendantFont :&PdfFont {_cbfg :_dbgf },Encoding :_ebc .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bbdffb :_fbfc .NewEncoder ()};
if len (_fbfc .Chars )> 0{_feag :=make (map[_ag .CharCode ]rune ,len (_fbfc .Chars ));for _dfba ,_ggdaf :=range _fbfc .Chars {_gefg :=_ag .CharCode (_ggdaf );if _cgcdf ,_ebfc :=_feag [_gefg ];!_ebfc ||(_ebfc &&_cgcdf > _dfba ){_feag [_gefg ]=_dfba ;};};
_ebab ._fcffc =_ag .NewToUnicodeCMap (_feag );};_cagea :=PdfFont {_cbfg :&_ebab };return &_cagea ,nil ;};

// ToInteger convert to an integer format.
func (_dgddc *PdfColorLab )ToInteger (bits int )[3]uint32 {_bccc :=_bcd .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bccc *_dgddc .L ()),uint32 (_bccc *_dgddc .A ()),uint32 (_bccc *_dgddc .B ())};};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_eegbd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eegbd .Alternate ==nil {_ca .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _eegbd .N ==1{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cefg :=NewPdfColorspaceDeviceGray ();return _cefg .ColorToRGB (color );}else if _eegbd .N ==3{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _eegbd .N ==4{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gccc :=NewPdfColorspaceDeviceCMYK ();return _gccc .ColorToRGB (color );}else {return nil ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ca .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_eegbd );
return _eegbd .Alternate .ColorToRGB (color );};func (_efeec *PdfReader )newPdfAcroFormFromDict (_efbcf *_ebc .PdfIndirectObject ,_degdd *_ebc .PdfObjectDictionary )(*PdfAcroForm ,error ){_ecgga :=NewPdfAcroForm ();if _efbcf !=nil {_ecgga ._aceeg =_efbcf ;
_efbcf .PdfObject =_ebc .MakeDict ();};if _cbgb :=_degdd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cbgb !=nil &&!_ebc .IsNullObject (_cbgb ){_eaegb ,_cefc :=_ebc .GetArray (_cbgb );if !_cefc {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cbgb );
};var _egacd []*PdfField ;for _ ,_geddc :=range _eaegb .Elements (){_cdfef ,_ddac :=_ebc .GetIndirect (_geddc );if !_ddac {if _ ,_ggeb :=_geddc .(*_ebc .PdfObjectNull );_ggeb {_ca .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ca .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_geddc );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_edec ,_facaf :=_efeec .newPdfFieldFromIndirectObject (_cdfef ,nil );
if _facaf !=nil {return nil ,_facaf ;};_ca .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_edec );_egacd =append (_egacd ,_edec );};_ecgga .Fields =&_egacd ;};if _gegag :=_degdd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_gegag !=nil {_dggad ,_efeab :=_ebc .GetBool (_gegag );if _efeab {_ecgga .NeedAppearances =_dggad ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gegag );
};};if _ddffb :=_degdd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ddffb !=nil {_ccbe ,_ffgeg :=_ebc .GetInt (_ddffb );if _ffgeg {_ecgga .SigFlags =_ccbe ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddffb );
};};if _ggdeb :=_degdd .Get ("\u0043\u004f");_ggdeb !=nil {_dgaef ,_gcdg :=_ebc .GetArray (_ggdeb );if _gcdg {_ecgga .CO =_dgaef ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ggdeb );
};};if _ggdb :=_degdd .Get ("\u0044\u0052");_ggdb !=nil {if _gfaf ,_bbgfb :=_ebc .GetDict (_ggdb );_bbgfb {_cefd ,_agbfd :=NewPdfPageResourcesFromDict (_gfaf );if _agbfd !=nil {_ca .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_agbfd );
return nil ,_agbfd ;};_ecgga .DR =_cefd ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ggdb );};};if _afge :=_degdd .Get ("\u0044\u0041");
_afge !=nil {_bggc ,_fcaf :=_ebc .GetString (_afge );if _fcaf {_ecgga .DA =_bggc ;}else {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_afge );
};};if _fdag :=_degdd .Get ("\u0051");_fdag !=nil {_agbge ,_gcaa :=_ebc .GetInt (_fdag );if _gcaa {_ecgga .Q =_agbge ;}else {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fdag );
};};if _aaag :=_degdd .Get ("\u0058\u0046\u0041");_aaag !=nil {_ecgga .XFA =_aaag ;};if _gbcbg :=_degdd .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_gbcbg !=nil {_ecgga .ADBEEchoSign =_gbcbg ;};_ecgga .ToPdfObject ();
return _ecgga ,nil ;};type pdfFontType0 struct{fontCommon ;_dfdfb *_ebc .PdfIndirectObject ;_bbdffb _cgf .TextEncoder ;Encoding _ebc .PdfObject ;DescendantFont *PdfFont ;_dceae *_ag .CMap ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_ggb .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _a .Time ;};func (_fdgc *PdfReader )newPdfAnnotationPopupFromDict (_fcbb *_ebc .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bff :=PdfAnnotationPopup {};_bff .Parent =_fcbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bff .Open =_fcbb .Get ("\u004f\u0070\u0065\u006e");
return &_bff ,nil ;};func _dbad (_ebdg _eag .ReadSeeker ,_facafd *ReaderOpts ,_dcfbc bool ,_fggdc string )(*PdfReader ,error ){if _facafd ==nil {_facafd =NewReaderOpts ();};_ccfdd :=*_facafd ;_abega :=&PdfReader {_ecgfa :_ebdg ,_debfg :map[_ebc .PdfObject ]struct{}{},_faaab :_fgadg (),_gebcd :_facafd .LazyLoad ,_efacf :_facafd .ComplianceMode ,_dddc :_dcfbc ,_cegeb :&_ccfdd };
_fcfgg ,_cgfad :=_aadad ("\u0072");if _cgfad !=nil {return nil ,_cgfad ;};_cgfad =_aa .Track (_fcfgg ,_fggdc );if _cgfad !=nil {return nil ,_cgfad ;};_abega ._dgcgg =_fcfgg ;var _dcee *_ebc .PdfParser ;if !_abega ._efacf {_dcee ,_cgfad =_ebc .NewParser (_ebdg );
}else {_dcee ,_cgfad =_ebc .NewCompliancePdfParser (_ebdg );};if _cgfad !=nil {return nil ,_cgfad ;};_abega ._bfef =_dcee ;_cfgbec ,_cgfad :=_abega .IsEncrypted ();if _cgfad !=nil {return nil ,_cgfad ;};if !_cfgbec {_cgfad =_abega .loadStructure ();if _cgfad !=nil {return nil ,_cgfad ;
};}else if _dcfbc {_gdeab ,_ddcgb :=_abega .Decrypt ([]byte (_facafd .Password ));if _ddcgb !=nil {return nil ,_ddcgb ;};if !_gdeab {return nil ,_cfe .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_abega ._dffe =make (map[*PdfReader ]*PdfReader );_abega ._gecba =make ([]*PdfReader ,_dcee .GetRevisionNumber ());return _abega ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_adcc :=&PdfAppender {_fgcb :reader ._ecgfa ,Reader :reader ,_fdac :reader ._bfef ,_debe :reader ._debfg };_bcbc ,_begb :=_adcc ._fgcb .Seek (0,_eag .SeekEnd );if _begb !=nil {return nil ,_begb ;
};_adcc ._ecgf =_bcbc ;if _ ,_begb =_adcc ._fgcb .Seek (0,_eag .SeekStart );_begb !=nil {return nil ,_begb ;};_adcc ._ccf ,_begb =NewPdfReader (_adcc ._fgcb );if _begb !=nil {return nil ,_begb ;};for _ ,_cgbcd :=range _adcc .Reader .GetObjectNums (){if _adcc ._faf < _cgbcd {_adcc ._faf =_cgbcd ;
};};_adcc ._dacd =_adcc ._fdac .GetXrefTable ();_adcc ._deaeb =_adcc ._fdac .GetXrefOffset ();_adcc ._dcbg =append (_adcc ._dcbg ,_adcc ._ccf .PageList ...);_adcc ._aacc =make (map[_ebc .PdfObject ]struct{});_adcc ._cce =make (map[_ebc .PdfObject ]int64 );
_adcc ._bba =make (map[_ebc .PdfObject ]struct{});_adcc ._bebg =_adcc ._ccf .AcroForm ;_adcc ._ggda =_adcc ._ccf .DSS ;return _adcc ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_cbcca *PdfFieldButton )GetFillImage ()*Image {if _cbcca .IsPush (){return _cbcca ._deea ;};return nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_cafge *PdfOutputIntent )ToPdfObject ()_ebc .PdfObject {if _cafge ._fbge ==nil {_cafge ._fbge =_ebc .MakeDict ();};_fefbg :=_cafge ._fbge ;if _cafge .Type !=""{_fefbg .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName (_cafge .Type ));};_fefbg .Set ("\u0053",_ebc .MakeName (_cafge .S .String ()));
if _cafge .OutputCondition !=""{_fefbg .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_ebc .MakeString (_cafge .OutputCondition ));};_fefbg .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_ebc .MakeString (_cafge .OutputConditionIdentifier ));
_fefbg .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_ebc .MakeString (_cafge .RegistryName ));if _cafge .Info !=""{_fefbg .Set ("\u0049\u006e\u0066\u006f",_ebc .MakeString (_cafge .Info ));};if len (_cafge .DestOutputProfile )!=0{_gaede ,_geabf :=_ebc .MakeStream (_cafge .DestOutputProfile ,_ebc .NewFlateEncoder ());
if _geabf !=nil {_ca .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_geabf );
};_gaede .PdfObjectDictionary .Set ("\u004e",_ebc .MakeInteger (int64 (_cafge .ColorComponents )));_becba :=make ([]float64 ,_cafge .ColorComponents *2);for _abaf :=0;_abaf < _cafge .ColorComponents *2;_abaf ++{_cefgb :=0.0;if _abaf %2!=0{_cefgb =1.0;};
_becba [_abaf ]=_cefgb ;};_gaede .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_ebc .MakeArrayFromFloats (_becba ));_fefbg .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_gaede );};return _fefbg ;
};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cgb :=NewPdfAction ();_fg :=&PdfActionImportData {};_fg .PdfAction =_cgb ;_cgb .SetContext (_fg );return _fg ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ge .CharMetrics ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_ddcce *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ca .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_abadd :=[]float64 {0.0};if _ddcce .C0 !=nil {_abadd =_ddcce .C0 ;};_gaag :=[]float64 {1.0};if _ddcce .C1 !=nil {_gaag =_ddcce .C1 ;};var _fgce []float64 ;for _dgaga :=0;_dgaga < len (_abadd );_dgaga ++{_degc :=_abadd [_dgaga ]+_bcd .Pow (x [0],_ddcce .N )*(_gaag [_dgaga ]-_abadd [_dgaga ]);
_fgce =append (_fgce ,_degc );};return _fgce ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_dbcf *PdfPageResources )GetExtGState (keyName _ebc .PdfObjectName )(_ebc .PdfObject ,bool ){if _dbcf .ExtGState ==nil {return nil ,false ;};_cbccea ,_gfed :=_ebc .TraceToDirectObject (_dbcf .ExtGState ).(*_ebc .PdfObjectDictionary );if !_gfed {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbcf .ExtGState );
return nil ,false ;};if _cefb :=_cbccea .Get (keyName );_cefb !=nil {return _cefb ,true ;};return nil ,false ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_acef *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fdceb ,_debc :=_cacdf (basefont );if _debc !=nil {return nil ,_debc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fdceb ._fedce =_cgf .NewWinAnsiEncoder ();};return &PdfFont {_cbfg :&_fdceb },nil ;
};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_cbcag :=&XObjectImage {};_aeffa :=&_ebc .PdfObjectStream {};_aeffa .PdfObjectDictionary =_ebc .MakeDict ();_cbcag ._febcg =_aeffa ;return _cbcag ;};func (_bfa *PdfReader )newPdfAnnotationLineFromDict (_gfff *_ebc .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cfeb :=PdfAnnotationLine {};
_fgfb ,_efe :=_bfa .newPdfAnnotationMarkupFromDict (_gfff );if _efe !=nil {return nil ,_efe ;};_cfeb .PdfAnnotationMarkup =_fgfb ;_cfeb .L =_gfff .Get ("\u004c");_cfeb .BS =_gfff .Get ("\u0042\u0053");_cfeb .LE =_gfff .Get ("\u004c\u0045");_cfeb .IC =_gfff .Get ("\u0049\u0043");
_cfeb .LL =_gfff .Get ("\u004c\u004c");_cfeb .LLE =_gfff .Get ("\u004c\u004c\u0045");_cfeb .Cap =_gfff .Get ("\u0043\u0061\u0070");_cfeb .IT =_gfff .Get ("\u0049\u0054");_cfeb .LLO =_gfff .Get ("\u004c\u004c\u004f");_cfeb .CP =_gfff .Get ("\u0043\u0050");
_cfeb .Measure =_gfff .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cfeb .CO =_gfff .Get ("\u0043\u004f");return &_cfeb ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;
BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject implements interface PdfModel.
func (_adbe *PdfSignatureReference )ToPdfObject ()_ebc .PdfObject {_dfadg :=_ebc .MakeDict ();_dfadg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_adbe .Type );_dfadg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_adbe .TransformMethod );
_dfadg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_adbe .TransformParams );_dfadg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_adbe .Data );_dfadg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_adbe .DigestMethod );
return _dfadg ;};var _ pdfFont =(*pdfFontSimple )(nil );

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _ebc .PdfObject ;FS _ebc .PdfObject ;F _ebc .PdfObject ;UF _ebc .PdfObject ;DOS _ebc .PdfObject ;Mac _ebc .PdfObject ;Unix _ebc .PdfObject ;ID _ebc .PdfObject ;V _ebc .PdfObject ;EF _ebc .PdfObject ;RF _ebc .PdfObject ;Desc _ebc .PdfObject ;
CI _ebc .PdfObject ;_dacdc _ebc .PdfObject ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gebeb *PdfPattern )GetContext ()PdfModel {return _gebeb ._adgca };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_dfdc *PdfPageResources )GetFontByName (keyName _ebc .PdfObjectName )(_ebc .PdfObject ,bool ){if _dfdc .Font ==nil {return nil ,false ;};_eeecag ,_ebegg :=_ebc .TraceToDirectObject (_dfdc .Font ).(*_ebc .PdfObjectDictionary );if !_ebegg {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ebc .TraceToDirectObject (_dfdc .Font ));
return nil ,false ;};if _ebdce :=_eeecag .Get (keyName );_ebdce !=nil {return _ebdce ,true ;};return nil ,false ;};

// GetNumComponents returns the number of color components.
func (_afgb *PdfColorspaceICCBased )GetNumComponents ()int {return _afgb .N };

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _ebc .PdfObject ;H _ebc .PdfObject ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cdbed *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cdbed ._cbcge ==nil {_cdbed ._cbcge =_gf .NewPSExecutor (_cdbed .Program );};var _fffeg []_gf .PSObject ;for _ ,_aagdb :=range xVec {_fffeg =append (_fffeg ,_gf .MakeReal (_aagdb ));
};_cgad ,_ffff :=_cdbed ._cbcge .Execute (_fffeg );if _ffff !=nil {return nil ,_ffff ;};_gdgfa ,_ffff :=_gf .PSObjectArrayToFloat64Array (_cgad );if _ffff !=nil {return nil ,_ffff ;};return _gdgfa ,nil ;};func _fdfab ()string {_cacgf .Lock ();defer _cacgf .Unlock ();
return _aceef };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_ddacf *PdfShading )GetContainingPdfObject ()_ebc .PdfObject {return _ddacf ._abfcbf };

// GetCerts returns the signature certificate chain.
func (_geefb *PdfSignature )GetCerts ()([]*_c .Certificate ,error ){var _gcafd []func ()([]*_c .Certificate ,error );switch _bbccc ,_ :=_ebc .GetNameVal (_geefb .SubFilter );_bbccc {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gcafd =append (_gcafd ,_geefb .extractChainFromPKCS7 ,_geefb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gcafd =append (_gcafd ,_geefb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gcafd =append (_gcafd ,_geefb .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bbccc );};for _ ,_cabfd :=range _gcafd {_eggca ,_cdbc :=_cabfd ();if _cdbc !=nil {return nil ,_cdbc ;
};if len (_eggca )> 0{return _eggca ,nil ;};};return nil ,ErrSignNoCertificates ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_ebc .PdfIndirectObject ;SV *_ebc .PdfIndirectObject ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cdcdb *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_dgbe :=_cdcdb .GetContentStreamObjs ();wrapContents =wrapContents &&len (_dgbe )> 0;_dacg :=_ebc .NewFlateEncoder ();_dcgbg :=_ebc .MakeArray ();if wrapContents {_eefb ,_gddfe :=_ebc .MakeStream ([]byte ("\u0071\u000a"),_dacg );
if _gddfe !=nil {return _gddfe ;};_dcgbg .Append (_eefb );};_dcgbg .Append (_dgbe ...);if wrapContents {_ebbe ,_aggbde :=_ebc .MakeStream ([]byte ("\u000a\u0051\u000a"),_dacg );if _aggbde !=nil {return _aggbde ;};_dcgbg .Append (_ebbe );};_fagcf ,_cfge :=_ebc .MakeStream (cs ,_dacg );
if _cfge !=nil {return _cfge ;};_dcgbg .Append (_fagcf );_cdcdb .Contents =_dcgbg ;return nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fcdde :=PdfColorCalGray (grayVal );return &_fcdde ;};type pdfFontSimple struct{fontCommon ;_aafg *_ebc .PdfIndirectObject ;_bcbfd map[_cgf .CharCode ]float64 ;_fedce _cgf .TextEncoder ;_fdfcb _cgf .TextEncoder ;
_cbfc *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _ebc .PdfObject ;LastChar _ebc .PdfObject ;Widths _ebc .PdfObject ;Encoding _ebc .PdfObject ;_ddaf *_ge .RuneCharSafeMap ;};func _cfcba (_cgbbb *_ebc .PdfObjectDictionary ,_dbea *fontCommon )(*pdfCIDFontType2 ,error ){if _dbea ._dccgbc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dbea );
return nil ,_ebc .ErrRangeError ;};_bbcdf :=_gaed (_dbea );_decbc ,_fffe :=_ebc .GetDict (_cgbbb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fffe {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbea );
return nil ,ErrRequiredAttributeMissing ;};_bbcdf .CIDSystemInfo =_decbc ;_bbcdf .DW =_cgbbb .Get ("\u0044\u0057");_bbcdf .W =_cgbbb .Get ("\u0057");_bbcdf .DW2 =_cgbbb .Get ("\u0044\u0057\u0032");_bbcdf .W2 =_cgbbb .Get ("\u0057\u0032");_bbcdf .CIDToGIDMap =_cgbbb .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_bbcdf ._cfcf =1000.0;if _agge ,_bdggc :=_ebc .GetNumberAsFloat (_bbcdf .DW );_bdggc ==nil {_bbcdf ._cfcf =_agge ;};_cdfbf ,_gbffb :=_eddbe (_bbcdf .W );if _gbffb !=nil {return nil ,_gbffb ;};if _cdfbf ==nil {_cdfbf =map[_cgf .CharCode ]float64 {};};_bbcdf ._aeef =_cdfbf ;
return _bbcdf ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// GetContentStreams returns the content stream as an array of strings.
func (_gedff *PdfPage )GetContentStreams ()([]string ,error ){_fdba :=_gedff .GetContentStreamObjs ();var _cgfef []string ;for _ ,_eefdd :=range _fdba {_bfgeg ,_debgbd :=_ffaga (_eefdd );if _debgbd !=nil {return nil ,_debgbd ;};_cgfef =append (_cgfef ,_bfgeg );
};return _cgfef ,nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_bgaa *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_bgaa .updateObjectsDeep (dss .ToPdfObject (),nil );};_bgaa ._ggda =dss ;};func (_gadac *PdfReader )newPdfFieldSignatureFromDict (_ceeg *_ebc .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cgag :=&PdfFieldSignature {};
_adde ,_acbfa :=_ebc .GetIndirect (_ceeg .Get ("\u0056"));if _acbfa {var _abeac error ;_cgag .V ,_abeac =_gadac .newPdfSignatureFromIndirect (_adde );if _abeac !=nil {return nil ,_abeac ;};};_cgag .Lock ,_ =_ebc .GetIndirect (_ceeg .Get ("\u004c\u006f\u0063\u006b"));
_cgag .SV ,_ =_ebc .GetIndirect (_ceeg .Get ("\u0053\u0056"));return _cgag ,nil ;};func (_egbb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_fbcd *_ebc .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ecgg :=PdfAnnotationPrinterMark {};_ecgg .MN =_fbcd .Get ("\u004d\u004e");
return &_ecgg ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bgdb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgfc ,_bbdf :=color .(*PdfColorCalRGB );if !_bbdf {_ca .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gcad :=_cgfc .A ();_aeaf :=_cgfc .B ();_facc :=_cgfc .C ();X :=_bgdb .Matrix [0]*_bcd .Pow (_gcad ,_bgdb .Gamma [0])+_bgdb .Matrix [3]*_bcd .Pow (_aeaf ,_bgdb .Gamma [1])+_bgdb .Matrix [6]*_bcd .Pow (_facc ,_bgdb .Gamma [2]);
Y :=_bgdb .Matrix [1]*_bcd .Pow (_gcad ,_bgdb .Gamma [0])+_bgdb .Matrix [4]*_bcd .Pow (_aeaf ,_bgdb .Gamma [1])+_bgdb .Matrix [7]*_bcd .Pow (_facc ,_bgdb .Gamma [2]);Z :=_bgdb .Matrix [2]*_bcd .Pow (_gcad ,_bgdb .Gamma [0])+_bgdb .Matrix [5]*_bcd .Pow (_aeaf ,_bgdb .Gamma [1])+_bgdb .Matrix [8]*_bcd .Pow (_facc ,_bgdb .Gamma [2]);
_ebde :=3.240479*X +-1.537150*Y +-0.498535*Z ;_acdf :=-0.969256*X +1.875992*Y +0.041556*Z ;_bgcdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_ebde =_bcd .Min (_bcd .Max (_ebde ,0),1.0);_acdf =_bcd .Min (_bcd .Max (_acdf ,0),1.0);_bgcdb =_bcd .Min (_bcd .Max (_bgcdb ,0),1.0);
return NewPdfColorDeviceRGB (_ebde ,_acdf ,_bgcdb ),nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fafce *PdfShadingType7 )ToPdfObject ()_ebc .PdfObject {_fafce .PdfShading .ToPdfObject ();_dagfb ,_abgefb :=_fafce .getShadingDict ();if _abgefb !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fafce .BitsPerCoordinate !=nil {_dagfb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fafce .BitsPerCoordinate );};if _fafce .BitsPerComponent !=nil {_dagfb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fafce .BitsPerComponent );
};if _fafce .BitsPerFlag !=nil {_dagfb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fafce .BitsPerFlag );};if _fafce .Decode !=nil {_dagfb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fafce .Decode );};if _fafce .Function !=nil {if len (_fafce .Function )==1{_dagfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fafce .Function [0].ToPdfObject ());
}else {_caeaff :=_ebc .MakeArray ();for _ ,_cecce :=range _fafce .Function {_caeaff .Append (_cecce .ToPdfObject ());};_dagfb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_caeaff );};};return _fafce ._abfcbf ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _ebc .PdfObject ;};func (_dfca *PdfWriter )seekByName (_cbfe _ebc .PdfObject ,_fgef []string ,_dgdfg string )([]_ebc .PdfObject ,error ){_ca .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cbfe );
var _bddb []_ebc .PdfObject ;if _bbgdc ,_beaf :=_cbfe .(*_ebc .PdfIndirectObject );_beaf {return _dfca .seekByName (_bbgdc .PdfObject ,_fgef ,_dgdfg );};if _fgcg ,_ddbg :=_cbfe .(*_ebc .PdfObjectStream );_ddbg {return _dfca .seekByName (_fgcg .PdfObjectDictionary ,_fgef ,_dgdfg );
};if _bcagg ,_becbe :=_cbfe .(*_ebc .PdfObjectDictionary );_becbe {_ca .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_dcad :=range _bcagg .Keys (){_befg :=_bcagg .Get (_dcad );if string (_dcad )==_dgdfg {_bddb =append (_bddb ,_befg );};for _ ,_fcgec :=range _fgef {if string (_dcad )==_fcgec {_ca .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_fcgec );
_dgacd ,_bgebc :=_dfca .seekByName (_befg ,_fgef ,_dgdfg );if _bgebc !=nil {return _bddb ,_bgebc ;};_bddb =append (_bddb ,_dgacd ...);break ;};};};return _bddb ,nil ;};return _bddb ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_daadb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _daadb ._bfef .GetCrypter ()!=nil &&!_daadb ._bfef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_daadb ._dfgde )< pageNumber {return nil ,_cfe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_cfdbd :=pageNumber -1;if _cfdbd < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_agbbd :=_daadb .PageList [_cfdbd ];
return _agbbd ,nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_ebc .PdfObjectName ;P *_ebc .PdfObjectInteger ;V *_ebc .PdfObjectName ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_fegd :=&PdfColorPattern {};return _fegd };

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;var _geaac =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ggdfe *_ebc .PdfIndirectObject ;};

// K returns the value of the key component of the color.
func (_gbgg *PdfColorDeviceCMYK )K ()float64 {return _gbgg [3]};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ebad *Image )ToJBIG2Image ()(*_ebc .JBIG2Image ,error ){_geefa ,_gcdf :=_ebad .ToGoImage ();if _gcdf !=nil {return nil ,_gcdf ;};return _ebc .GoImageToJBIG2 (_geefa ,_ebc .JB2ImageAutoThreshold );};var _ pdfFont =(*pdfFontType3 )(nil );func _edced (_deaag *PdfPage ){_geaf :=_aa .GetLicenseKey ();
if _geaf !=nil &&_geaf .IsLicensed (){return ;};_afgf :=_ebc .PdfObjectName ("\u0055\u0046\u0031");if !_deaag .Resources .HasFontByName (_afgf ){_deaag .Resources .SetFontByName (_afgf ,DefaultFont ().ToPdfObject ());};var _feaa []string ;_feaa =append (_feaa ,"\u0071");
_feaa =append (_feaa ,"\u0042\u0054");_feaa =append (_feaa ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_afgf .String ()));_feaa =append (_feaa ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_feaa =append (_feaa ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_afab :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_feaa =append (_feaa ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_afab ));_feaa =append (_feaa ,"\u0045\u0054");_feaa =append (_feaa ,"\u0051");_ebedc :=_ea .Join (_feaa ,"\u000a");_deaag .AddContentStreamByString (_ebedc );_deaag .ToPdfObject ();
};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_fc :=NewPdfAction ();_dga :=&PdfActionHide {};_dga .PdfAction =_fc ;_fc .SetContext (_dga );return _dga ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_ecdcc int ,_geddf *PdfPage )error ;

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_ebc .PdfIndirectObject )*PdfOutlineItem {_fdda :=PdfOutlineItem {};_fdda ._degdbf =&_fdda ;_fdda .Title =_ebc .MakeString (title );_bbdfe :=_ebc .MakeArray ();_bbdfe .Append (page );_bbdfe .Append (_ebc .MakeName ("\u0046\u0069\u0074"));
_fdda .Dest =_bbdfe ;return &_fdda ;};

// String returns a string that describes `font`.
func (_efdgc *PdfFont )String ()string {_acea :="";if _efdgc ._cbfg .Encoder ()!=nil {_acea =_efdgc ._cbfg .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_efdgc ._cbfg ,_efdgc .baseFields ().coreString (),_acea );
};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ggfgb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gbbb []*PdfField ;if _ggfgb .AcroForm !=nil {_gbbb =_ggfgb .AcroForm .AllFields ();};_deeg :=make (map[*PdfField ]struct{},len (_gbbb ));for _ ,_gefca :=range _gbbb {_deeg [_gefca ]=struct{}{};
};for _ ,_efddc :=range _ggfgb .PageList {_abagf ,_bcdgf :=_efddc .GetAnnotations ();if _bcdgf !=nil {return false ,_bcdgf ;};for _ ,_bffgg :=range _abagf {_affag ,_dbdda :=_bffgg .GetContext ().(*PdfAnnotationWidget );if !_dbdda {continue ;};_gccgb :=_affag .Field ();
if _gccgb ==nil {return true ,nil ;};if _ ,_fffec :=_deeg [_gccgb ];!_fffec {return true ,nil ;};};};return false ,nil ;};func (_cbf *PdfReader )newPdfActionGotoFromDict (_cgfg *_ebc .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_cgfg .Get ("\u0044")},nil ;
};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_dcfe *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_dcfe .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_dcfe ._bebg =acroForm ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_eage :=NewPdfAnnotation ();_eef :=&PdfAnnotationStrikeOut {};_eef .PdfAnnotation =_eage ;_eef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eage .SetContext (_eef );return _eef ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcdea pdfCIDFontType2 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){_ffdd ,_bdec :=_gcdea ._dfgda [r ];if !_bdec {_fggaa ,_bebgf :=_ebc .GetInt (_gcdea .DW );if !_bebgf {return _ge .CharMetrics {},false ;};_ffdd =int (*_fggaa );};return _ge .CharMetrics {Wx :float64 (_ffdd )},true ;
};

// ToInteger convert to an integer format.
func (_fdgca *PdfColorDeviceGray )ToInteger (bits int )uint32 {_faef :=_bcd .Pow (2,float64 (bits ))-1;return uint32 (_faef *_fdgca .Val ());};

// A returns the value of the A component of the color.
func (_dfag *PdfColorCalRGB )A ()float64 {return _dfag [0]};

// ToPdfObject implements interface PdfModel.
func (_cab *PdfActionTrans )ToPdfObject ()_ebc .PdfObject {_cab .PdfAction .ToPdfObject ();_bcda :=_cab ._dc ;_gce :=_bcda .PdfObject .(*_ebc .PdfObjectDictionary );_gce .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeTrans )));_gce .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cab .Trans );
return _bcda ;};

// ToPdfObject implements interface PdfModel.
func (_cddb *PdfAnnotationFileAttachment )ToPdfObject ()_ebc .PdfObject {_cddb .PdfAnnotation .ToPdfObject ();_febae :=_cddb ._daf ;_eecc :=_febae .PdfObject .(*_ebc .PdfObjectDictionary );_cddb .PdfAnnotationMarkup .appendToPdfDictionary (_eecc );_eecc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_eecc .SetIfNotNil ("\u0046\u0053",_cddb .FS );_eecc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cddb .Name );return _febae ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fccdag *PdfWriter )SetNamedDestinations (dests _ebc .PdfObject )error {if dests ==nil {return nil ;};_ca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_fccdag ._aaefa .Set ("\u0044\u0065\u0073t\u0073",dests );return _fccdag .addObjects (dests );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_dagfa *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeff :=vals [0];if _eeff < 0.0||_eeff > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eeff );
return nil ,ErrColorOutOfRange ;};_faaf :=vals [1];if _faaf < 0.0||_faaf > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eeff );return nil ,ErrColorOutOfRange ;
};_bfdg :=vals [2];if _bfdg < 0.0||_bfdg > 1.0{_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eeff );return nil ,ErrColorOutOfRange ;};_dfecf :=NewPdfColorDeviceRGB (_eeff ,_faaf ,_bfdg );
return _dfecf ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cgaae *PdfOutline )GetContainingPdfObject ()_ebc .PdfObject {return _cgaae ._defg };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_aeea *PdfPage )AppendContentStream (contentStr string )error {_fbdg ,_dfdag :=_aeea .GetContentStreams ();if _dfdag !=nil {return _dfdag ;};if len (_fbdg )==0{_fbdg =[]string {contentStr };return _aeea .SetContentStreams (_fbdg ,_ebc .NewFlateEncoder ());
};var _ddbccb _ed .Buffer ;_ddbccb .WriteString (_fbdg [len (_fbdg )-1]);_ddbccb .WriteString ("\u000a");_ddbccb .WriteString (contentStr );_fbdg [len (_fbdg )-1]=_ddbccb .String ();return _aeea .SetContentStreams (_fbdg ,_ebc .NewFlateEncoder ());};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dfcb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbad ,_edcc :=_ebc .GetNumbersAsFloat (objects );
if _edcc !=nil {return nil ,_edcc ;};return _dfcb .ColorFromFloats (_gbad );};var (_cacgf _f .Mutex ;_bbceda ="";_egecb _a .Time ;_ecde ="";_aceef ="";_gdeef _a .Time ;_ggcce ="";_cdffa ="";_egccf ="";);

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _ebc .PdfObjectName ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_ebc .PdfObjectInteger ;BitsPerComponent *_ebc .PdfObjectInteger ;BitsPerFlag *_ebc .PdfObjectInteger ;Decode *_ebc .PdfObjectArray ;Function []PdfFunction ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _ebc .PdfObject ;BS _ebc .PdfObject ;};

// G returns the value of the green component of the color.
func (_cgbb *PdfColorDeviceRGB )G ()float64 {return _cgbb [1]};func _dfddc (_bfbdg *_ebc .PdfObjectStream )(*PdfFunctionType4 ,error ){_degbd :=&PdfFunctionType4 {};_degbd ._fbgg =_bfbdg ;_dfaagd :=_bfbdg .PdfObjectDictionary ;_bfdgb ,_bgdg :=_ebc .TraceToDirectObject (_dfaagd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ebc .PdfObjectArray );
if !_bgdg {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bfdgb .Len ()%2!=0{_ca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fgdc ,_adaba :=_bfdgb .ToFloat64Array ();
if _adaba !=nil {return nil ,_adaba ;};_degbd .Domain =_fgdc ;_bfdgb ,_bgdg =_ebc .TraceToDirectObject (_dfaagd .Get ("\u0052\u0061\u006eg\u0065")).(*_ebc .PdfObjectArray );if _bgdg {if _bfdgb .Len ()< 0||_bfdgb .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gabe ,_gaedg :=_bfdgb .ToFloat64Array ();if _gaedg !=nil {return nil ,_gaedg ;};_degbd .Range =_gabe ;};_bfdc ,_adaba :=_ebc .DecodeStream (_bfbdg );if _adaba !=nil {return nil ,_adaba ;};_degbd ._gceb =_bfdc ;_ffgb :=_gf .NewPSParser (_bfdc );_ccac ,_adaba :=_ffgb .Parse ();
if _adaba !=nil {return nil ,_adaba ;};_degbd .Program =_ccac ;return _degbd ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_gdge *Outline )ToPdfOutline ()*PdfOutline {_deggf :=NewPdfOutline ();var _cbaab []*PdfOutlineItem ;var _aedaa int64 ;var _dcbdg *PdfOutlineItem ;for _ ,_eegbg :=range _gdge .Entries {_ggaeb ,_bcce :=_eegbg .ToPdfOutlineItem ();_ggaeb .Parent =&_deggf .PdfOutlineTreeNode ;
if _dcbdg !=nil {_dcbdg .Next =&_ggaeb .PdfOutlineTreeNode ;_ggaeb .Prev =&_dcbdg .PdfOutlineTreeNode ;};_cbaab =append (_cbaab ,_ggaeb );_aedaa +=_bcce ;_dcbdg =_ggaeb ;};_cfgbd :=int64 (len (_cbaab ));_aedaa +=_cfgbd ;if _cfgbd > 0{_deggf .First =&_cbaab [0].PdfOutlineTreeNode ;
_deggf .Last =&_cbaab [_cfgbd -1].PdfOutlineTreeNode ;_deggf .Count =&_aedaa ;};return _deggf ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _ebc .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_ebc .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_cadfd ,_ebbc :=encoder .EncodeBytes (img .Data );
if _ebbc !=nil {_ca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ebbc );return nil ,_ebbc ;};_abdff :=NewXObjectImage ();_aebad :=img .Width ;_ffdgg :=img .Height ;
_abdff .Width =&_aebad ;_abdff .Height =&_ffdgg ;_ggac :=img .BitsPerComponent ;_abdff .BitsPerComponent =&_ggac ;_abdff .Filter =encoder ;_abdff .Stream =_cadfd ;if cs ==nil {if img .ColorComponents ==1{_abdff .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_abdff .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_abdff .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cfe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_abdff .ColorSpace =cs ;};if len (img ._afeca )!=0{_bfedg :=NewXObjectImage ();_bfedg .Filter =encoder ;_fgdbf ,_edbgg :=encoder .EncodeBytes (img ._afeca );if _edbgg !=nil {_ca .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_edbgg );
return nil ,_edbgg ;};_bfedg .Stream =_fgdbf ;_bfedg .BitsPerComponent =_abdff .BitsPerComponent ;_bfedg .Width =&img .Width ;_bfedg .Height =&img .Height ;_bfedg .ColorSpace =NewPdfColorspaceDeviceGray ();_abdff .SMask =_bfedg .ToPdfObject ();}else {_abdff .SMask =xobjIn .SMask ;
_abdff .ImageMask =xobjIn .ImageMask ;if _abdff .ColorSpace .GetNumComponents ()==1{_ggeef (_abdff );};};return _abdff ,nil ;};func (_ffdcd *PdfReader )buildNameNodes (_dfcf *_ebc .PdfIndirectObject ,_gcfggc map[_ebc .PdfObject ]struct{})error {if _dfcf ==nil {return nil ;
};if _ ,_ebfbg :=_gcfggc [_dfcf ];_ebfbg {_ca .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dfcf .ObjectNumber );
return nil ;};_gcfggc [_dfcf ]=struct{}{};_caaf ,_ggdgb :=_dfcf .PdfObject .(*_ebc .PdfObjectDictionary );if !_ggdgb {return _cfe .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _aeefa ,_fgabe :=_ebc .GetDict (_caaf .Get ("\u0044\u0065\u0073t\u0073"));
_fgabe {_cgee ,_aceg :=_ebc .GetArray (_aeefa .Get ("\u004b\u0069\u0064\u0073"));if !_aceg {return _cfe .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_ca .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_cgee );
for _dfccf ,_fecfeg :=range _cgee .Elements (){_dcbdb ,_acce :=_ebc .GetIndirect (_fecfeg );if !_acce {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_dcbdb );
return _cfe .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_cgee .Set (_dfccf ,_dcbdb );_ecda :=_ffdcd .buildNameNodes (_dcbdb ,_gcfggc );if _ecda !=nil {return _ecda ;
};};};if _gfgcb ,_ggfcc :=_ebc .GetDict (_caaf );_ggfcc {if !_ebc .IsNullObject (_gfgcb .Get ("\u004b\u0069\u0064\u0073")){if _gffag ,_gcbdbb :=_ebc .GetArray (_gfgcb .Get ("\u004b\u0069\u0064\u0073"));_gcbdbb {for _bbcff ,_gedede :=range _gffag .Elements (){if _gafdc ,_defef :=_ebc .GetIndirect (_gedede );
_defef {_gffag .Set (_bbcff ,_gafdc );_aagg :=_ffdcd .buildNameNodes (_gafdc ,_gcfggc );if _aagg !=nil {return _aagg ;};};};};};};return nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_bfef *_ebc .PdfParser ;_cbeef _ebc .PdfObject ;_ecbc *_ebc .PdfIndirectObject ;_eeaec *_ebc .PdfObjectDictionary ;_dfgde []*_ebc .PdfIndirectObject ;PageList []*PdfPage ;_cfaaa int ;_fcdfa *_ebc .PdfObjectDictionary ;_dbdfgg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fbabb *Permissions ;_dffe map[*PdfReader ]*PdfReader ;_gecba []*PdfReader ;_faaab *modelManager ;_gebcd bool ;_debfg map[_ebc .PdfObject ]struct{};_ecgfa _eag .ReadSeeker ;_dgcgg string ;_efacf bool ;_cegeb *ReaderOpts ;
_dddc bool ;};func _egbef (_cbbbca *_ebc .PdfObjectDictionary )(*PdfShadingType6 ,error ){_effbe :=PdfShadingType6 {};_aedca :=_cbbbca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aedca ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_abgdc ,_bdggcf :=_aedca .(*_ebc .PdfObjectInteger );if !_bdggcf {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aedca );
return nil ,_ebc .ErrTypeError ;};_effbe .BitsPerCoordinate =_abgdc ;_aedca =_cbbbca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aedca ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_abgdc ,_bdggcf =_aedca .(*_ebc .PdfObjectInteger );if !_bdggcf {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aedca );
return nil ,_ebc .ErrTypeError ;};_effbe .BitsPerComponent =_abgdc ;_aedca =_cbbbca .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aedca ==nil {_ca .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_abgdc ,_bdggcf =_aedca .(*_ebc .PdfObjectInteger );if !_bdggcf {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aedca );
return nil ,_ebc .ErrTypeError ;};_effbe .BitsPerComponent =_abgdc ;_aedca =_cbbbca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aedca ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edaa ,_bdggcf :=_aedca .(*_ebc .PdfObjectArray );if !_bdggcf {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aedca );
return nil ,_ebc .ErrTypeError ;};_effbe .Decode =_edaa ;if _bggbc :=_cbbbca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bggbc !=nil {_effbe .Function =[]PdfFunction {};if _aedbg ,_fcfee :=_bggbc .(*_ebc .PdfObjectArray );_fcfee {for _ ,_eceffg :=range _aedbg .Elements (){_gface ,_cfbff :=_adda (_eceffg );
if _cfbff !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfbff );return nil ,_cfbff ;};_effbe .Function =append (_effbe .Function ,_gface );
};}else {_dgbfa ,_cfaab :=_adda (_bggbc );if _cfaab !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfaab );return nil ,_cfaab ;
};_effbe .Function =append (_effbe .Function ,_dgbfa );};};return &_effbe ,nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _a .Time ){_cacgf .Lock ();defer _cacgf .Unlock ();_gdeef =modifiedDate ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ebc .PdfObject ;};func _cbddb (_ggcbga *_ebc .PdfObjectArray )(float64 ,error ){_gaffa ,_ddeed :=_ggcbga .ToFloat64Array ();if _ddeed !=nil {_ca .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggcbga ,_ddeed );
};switch len (_gaffa ){case 1:return _gaffa [0],nil ;case 3:_cgcfb :=PdfColorspaceDeviceRGB {};_cfbdee ,_fcbed :=_cgcfb .ColorFromFloats (_gaffa );if _fcbed !=nil {return 0.0,_fcbed ;};return _cfbdee .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fedceg :=PdfColorspaceDeviceCMYK {};
_dcdgb ,_ddcf :=_fedceg .ColorFromFloats (_gaffa );if _ddcf !=nil {return 0.0,_ddcf ;};_dbgcb ,_ddcf :=_fedceg .ColorToRGB (_dcdgb .(*PdfColorDeviceCMYK ));if _ddcf !=nil {return 0.0,_ddcf ;};return _dbgcb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};
_ddeed =_cfe .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ca .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggcbga ,_ddeed );
return 0.0,_ddeed ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_ebc .PdfObjectInteger ;BitsPerComponent *_ebc .PdfObjectInteger ;VerticesPerRow *_ebc .PdfObjectInteger ;Decode *_ebc .PdfObjectArray ;Function []PdfFunction ;};

// GetOutlineTree returns the outline tree.
func (_daeg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _daeg ._dbdfgg };func (_cfbd *PdfFont )baseFields ()*fontCommon {if _cfbd ._cbfg ==nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _cfbd ._cbfg .baseFields ();};

// ToPdfObject implements interface PdfModel.
func (_dgcf *PdfAnnotationSquare )ToPdfObject ()_ebc .PdfObject {_dgcf .PdfAnnotation .ToPdfObject ();_eeea :=_dgcf ._daf ;_fda :=_eeea .PdfObject .(*_ebc .PdfObjectDictionary );if _dgcf .PdfAnnotationMarkup !=nil {_dgcf .PdfAnnotationMarkup .appendToPdfDictionary (_fda );
};_fda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_fda .SetIfNotNil ("\u0042\u0053",_dgcf .BS );_fda .SetIfNotNil ("\u0049\u0043",_dgcf .IC );_fda .SetIfNotNil ("\u0042\u0045",_dgcf .BE );
_fda .SetIfNotNil ("\u0052\u0044",_dgcf .RD );return _eeea ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_gcee :=NewPdfAnnotation ();_feba :=&PdfAnnotationSquare {};_feba .PdfAnnotation =_gcee ;_feba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcee .SetContext (_feba );return _feba ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_ebc .PdfObjectString ;Q *_ebc .PdfObjectInteger ;DS *_ebc .PdfObjectString ;RV _ebc .PdfObject ;MaxLen *_ebc .PdfObjectInteger ;};func (_ceea *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};
func (_cbdab *PdfWriter )writeObjectsInStreams (_fbcaa map[_ebc .PdfObject ]bool )error {for _ ,_cgbg :=range _cbdab ._gfbe {if _aeebd :=_fbcaa [_cgbg ];_aeebd {continue ;};_cbgfde :=int64 (0);switch _geeed :=_cgbg .(type ){case *_ebc .PdfIndirectObject :_cbgfde =_geeed .ObjectNumber ;
case *_ebc .PdfObjectStream :_cbgfde =_geeed .ObjectNumber ;case *_ebc .PdfObjectStreams :_cbgfde =_geeed .ObjectNumber ;default:_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_cgbg );
return ErrTypeCheck ;};if _cbdab ._aacgc !=nil &&_cgbg !=_cbdab ._daeff {_abdef :=_cbdab ._aacgc .Encrypt (_cgbg ,_cbgfde ,0);if _abdef !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_abdef );
return _abdef ;};};_cbdab .writeObject (int (_cbgfde ),_cgbg );};return nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fafcb *PdfPageResources )SetXObjectImageByName (keyName _ebc .PdfObjectName ,ximg *XObjectImage )error {_eggcd :=ximg .ToPdfObject ().(*_ebc .PdfObjectStream );_fddfdd :=_fafcb .SetXObjectByName (keyName ,_eggcd );return _fddfdd ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_ebc .PdfObjectString ;Author *_ebc .PdfObjectString ;Subject *_ebc .PdfObjectString ;Keywords *_ebc .PdfObjectString ;Creator *_ebc .PdfObjectString ;Producer *_ebc .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_ebc .PdfObjectName ;_fefbe *_ebc .PdfObjectDictionary ;};

// Add appends an outline item as a child of the current outline item.
func (_dadfg *OutlineItem )Add (item *OutlineItem ){_dadfg .Entries =append (_dadfg .Entries ,item )};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fbd *PdfAnnotation )ToPdfObject ()_ebc .PdfObject {_aga :=_fbd ._daf ;_cfcg :=_aga .PdfObject .(*_ebc .PdfObjectDictionary );_cfcg .Clear ();_cfcg .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0041\u006e\u006eo\u0074"));_cfcg .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fbd .Rect );
_cfcg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fbd .Contents );_cfcg .SetIfNotNil ("\u0050",_fbd .P );_cfcg .SetIfNotNil ("\u004e\u004d",_fbd .NM );_cfcg .SetIfNotNil ("\u004d",_fbd .M );_cfcg .SetIfNotNil ("\u0046",_fbd .F );_cfcg .SetIfNotNil ("\u0041\u0050",_fbd .AP );
_cfcg .SetIfNotNil ("\u0041\u0053",_fbd .AS );_cfcg .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fbd .Border );_cfcg .SetIfNotNil ("\u0043",_fbd .C );_cfcg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fbd .StructParent );
_cfcg .SetIfNotNil ("\u004f\u0043",_fbd .OC );return _aga ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_geae []_ebc .PdfObject )([]_ebc .PdfObject ,error );};func (_dcbda *PdfWriter )copyObject (_ebebg _ebc .PdfObject ,_cebbe map[_ebc .PdfObject ]_ebc .PdfObject ,_edbfa map[_ebc .PdfObject ]struct{},_baced bool )_ebc .PdfObject {_dacdfe :=!_dcbda ._ffdcc &&_edbfa !=nil ;
if _cbddc ,_ebeaa :=_cebbe [_ebebg ];_ebeaa {if _dacdfe &&!_baced {delete (_edbfa ,_ebebg );};return _cbddc ;};if _ebebg ==nil {_ddeea :=_ebc .MakeNull ();return _ddeea ;};_gbdba :=_ebebg ;switch _cebea :=_ebebg .(type ){case *_ebc .PdfObjectArray :_cdea :=_ebc .MakeArray ();
_gbdba =_cdea ;_cebbe [_ebebg ]=_gbdba ;for _ ,_ggfff :=range _cebea .Elements (){_cdea .Append (_dcbda .copyObject (_ggfff ,_cebbe ,_edbfa ,_baced ));};case *_ebc .PdfObjectStreams :_gbadg :=&_ebc .PdfObjectStreams {PdfObjectReference :_cebea .PdfObjectReference };
_gbdba =_gbadg ;_cebbe [_ebebg ]=_gbdba ;for _ ,_ebcgaf :=range _cebea .Elements (){_gbadg .Append (_dcbda .copyObject (_ebcgaf ,_cebbe ,_edbfa ,_baced ));};case *_ebc .PdfObjectStream :_caecb :=&_ebc .PdfObjectStream {Stream :_cebea .Stream ,PdfObjectReference :_cebea .PdfObjectReference };
_gbdba =_caecb ;_cebbe [_ebebg ]=_gbdba ;_caecb .PdfObjectDictionary =_dcbda .copyObject (_cebea .PdfObjectDictionary ,_cebbe ,_edbfa ,_baced ).(*_ebc .PdfObjectDictionary );case *_ebc .PdfObjectDictionary :var _bceaa bool ;if _dacdfe &&!_baced {if _addc ,_ :=_ebc .GetNameVal (_cebea .Get ("\u0054\u0079\u0070\u0065"));
_addc =="\u0050\u0061\u0067\u0065"{_ ,_dbfeg :=_dcbda ._ababf [_cebea ];_baced =!_dbfeg ;_bceaa =_baced ;};};_afagfe :=_ebc .MakeDict ();_gbdba =_afagfe ;_cebbe [_ebebg ]=_gbdba ;for _ ,_ggbcd :=range _cebea .Keys (){_afagfe .Set (_ggbcd ,_dcbda .copyObject (_cebea .Get (_ggbcd ),_cebbe ,_edbfa ,_baced ));
};if _bceaa {_gbdba =_ebc .MakeNull ();_baced =false ;};case *_ebc .PdfIndirectObject :_fbfb :=&_ebc .PdfIndirectObject {PdfObjectReference :_cebea .PdfObjectReference };_gbdba =_fbfb ;_cebbe [_ebebg ]=_gbdba ;_fbfb .PdfObject =_dcbda .copyObject (_cebea .PdfObject ,_cebbe ,_edbfa ,_baced );
case *_ebc .PdfObjectString :_cdege :=*_cebea ;_gbdba =&_cdege ;_cebbe [_ebebg ]=_gbdba ;case *_ebc .PdfObjectName :_egcbf :=*_cebea ;_gbdba =&_egcbf ;_cebbe [_ebebg ]=_gbdba ;case *_ebc .PdfObjectNull :_gbdba =_ebc .MakeNull ();_cebbe [_ebebg ]=_gbdba ;
case *_ebc .PdfObjectInteger :_cggfc :=*_cebea ;_gbdba =&_cggfc ;_cebbe [_ebebg ]=_gbdba ;case *_ebc .PdfObjectReference :_beef :=*_cebea ;_gbdba =&_beef ;_cebbe [_ebebg ]=_gbdba ;case *_ebc .PdfObjectFloat :_eead :=*_cebea ;_gbdba =&_eead ;_cebbe [_ebebg ]=_gbdba ;
case *_ebc .PdfObjectBool :_eceb :=*_cebea ;_gbdba =&_eceb ;_cebbe [_ebebg ]=_gbdba ;case *pdfSignDictionary :_ddgac :=&pdfSignDictionary {PdfObjectDictionary :_ebc .MakeDict (),_cagff :_cebea ._cagff ,_gffg :_cebea ._gffg };_gbdba =_ddgac ;_cebbe [_ebebg ]=_gbdba ;
for _ ,_cdega :=range _cebea .Keys (){_ddgac .Set (_cdega ,_dcbda .copyObject (_cebea .Get (_cdega ),_cebbe ,_edbfa ,_baced ));};default:_ca .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ebebg );
};if _dacdfe &&_baced {_edbfa [_ebebg ]=struct{}{};};return _gbdba ;};

// ToPdfObject implements interface PdfModel.
func (_acgd *PdfAnnotationLink )ToPdfObject ()_ebc .PdfObject {_acgd .PdfAnnotation .ToPdfObject ();_edc :=_acgd ._daf ;_agee :=_edc .PdfObject .(*_ebc .PdfObjectDictionary );_agee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u004c\u0069\u006e\u006b"));
if _acgd ._adaa !=nil &&_acgd ._adaa ._adf !=nil {_agee .Set ("\u0041",_acgd ._adaa ._adf .ToPdfObject ());}else if _acgd .A !=nil {_agee .Set ("\u0041",_acgd .A );};_agee .SetIfNotNil ("\u0044\u0065\u0073\u0074",_acgd .Dest );_agee .SetIfNotNil ("\u0048",_acgd .H );
_agee .SetIfNotNil ("\u0050\u0041",_acgd .PA );_agee .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acgd .QuadPoints );_agee .SetIfNotNil ("\u0042\u0053",_acgd .BS );return _edc ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_defae *Outline )ToPdfObject ()_ebc .PdfObject {return _defae .ToPdfOutline ().ToPdfObject ()};func (_cddc *PdfReader )newPdfAnnotationFromIndirectObject (_gbb *_ebc .PdfIndirectObject )(*PdfAnnotation ,error ){_decf ,_fbee :=_gbb .PdfObject .(*_ebc .PdfObjectDictionary );
if !_fbee {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cddc ._faaab .GetModelFromPrimitive (_decf );model !=nil {_cgfa ,_cac :=model .(*PdfAnnotation );if !_cac {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cgfa ,nil ;};_dbca :=&PdfAnnotation {};_dbca ._daf =_gbb ;_cddc ._faaab .Register (_decf ,_dbca );if _cdbd :=_decf .Get ("\u0054\u0079\u0070\u0065");_cdbd !=nil {_ecf ,_aedc :=_cdbd .(*_ebc .PdfObjectName );if !_aedc {_ca .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cdbd );
}else {if *_ecf !="\u0041\u006e\u006eo\u0074"{_ca .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ecf );};};};if _bfdf :=_decf .Get ("\u0052\u0065\u0063\u0074");
_bfdf !=nil {_dbca .Rect =_bfdf ;};if _cafg :=_decf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cafg !=nil {_dbca .Contents =_cafg ;};if _bfeb :=_decf .Get ("\u0050");_bfeb !=nil {_dbca .P =_bfeb ;};if _ffad :=_decf .Get ("\u004e\u004d");
_ffad !=nil {_dbca .NM =_ffad ;};if _beac :=_decf .Get ("\u004d");_beac !=nil {_dbca .M =_beac ;};if _adc :=_decf .Get ("\u0046");_adc !=nil {_dbca .F =_adc ;};if _bcdd :=_decf .Get ("\u0041\u0050");_bcdd !=nil {_dbca .AP =_bcdd ;};if _fdbf :=_decf .Get ("\u0041\u0053");
_fdbf !=nil {_dbca .AS =_fdbf ;};if _ebeg :=_decf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_ebeg !=nil {_dbca .Border =_ebeg ;};if _baed :=_decf .Get ("\u0043");_baed !=nil {_dbca .C =_baed ;};if _bedg :=_decf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_bedg !=nil {_dbca .StructParent =_bedg ;};if _caba :=_decf .Get ("\u004f\u0043");_caba !=nil {_dbca .OC =_caba ;};_aegf :=_decf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _aegf ==nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_dbca ._fddc =nil ;return _dbca ,nil ;};_edeb ,_bage :=_aegf .(*_ebc .PdfObjectName );if !_bage {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aegf );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_aegf );};switch *_edeb {case "\u0054\u0065\u0078\u0074":_cdde ,_bgf :=_cddc .newPdfAnnotationTextFromDict (_decf );
if _bgf !=nil {return nil ,_bgf ;};_cdde .PdfAnnotation =_dbca ;_dbca ._fddc =_cdde ;return _dbca ,nil ;case "\u004c\u0069\u006e\u006b":_dfda ,_caec :=_cddc .newPdfAnnotationLinkFromDict (_decf );if _caec !=nil {return nil ,_caec ;};_dfda .PdfAnnotation =_dbca ;
_dbca ._fddc =_dfda ;return _dbca ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bda ,_ageb :=_cddc .newPdfAnnotationFreeTextFromDict (_decf );if _ageb !=nil {return nil ,_ageb ;};_bda .PdfAnnotation =_dbca ;_dbca ._fddc =_bda ;return _dbca ,nil ;
case "\u004c\u0069\u006e\u0065":_daea ,_dded :=_cddc .newPdfAnnotationLineFromDict (_decf );if _dded !=nil {return nil ,_dded ;};_daea .PdfAnnotation =_dbca ;_dbca ._fddc =_daea ;_ca .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dbca ,_dbca );
_ca .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_daea ,_daea );_ca .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_daea .PdfAnnotationMarkup ,_daea .PdfAnnotationMarkup );
return _dbca ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dad ,_gdd :=_cddc .newPdfAnnotationSquareFromDict (_decf );if _gdd !=nil {return nil ,_gdd ;};_dad .PdfAnnotation =_dbca ;_dbca ._fddc =_dad ;return _dbca ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_eaac ,_afec :=_cddc .newPdfAnnotationCircleFromDict (_decf );
if _afec !=nil {return nil ,_afec ;};_eaac .PdfAnnotation =_dbca ;_dbca ._fddc =_eaac ;return _dbca ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cfc ,_ddcc :=_cddc .newPdfAnnotationPolygonFromDict (_decf );if _ddcc !=nil {return nil ,_ddcc ;};_cfc .PdfAnnotation =_dbca ;
_dbca ._fddc =_cfc ;return _dbca ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bbca ,_bcg :=_cddc .newPdfAnnotationPolyLineFromDict (_decf );if _bcg !=nil {return nil ,_bcg ;};_bbca .PdfAnnotation =_dbca ;_dbca ._fddc =_bbca ;return _dbca ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_gbf ,_ffe :=_cddc .newPdfAnnotationHighlightFromDict (_decf );if _ffe !=nil {return nil ,_ffe ;};_gbf .PdfAnnotation =_dbca ;_dbca ._fddc =_gbf ;return _dbca ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ccb ,_cgff :=_cddc .newPdfAnnotationUnderlineFromDict (_decf );
if _cgff !=nil {return nil ,_cgff ;};_ccb .PdfAnnotation =_dbca ;_dbca ._fddc =_ccb ;return _dbca ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gae ,_gedb :=_cddc .newPdfAnnotationSquigglyFromDict (_decf );if _gedb !=nil {return nil ,_gedb ;
};_gae .PdfAnnotation =_dbca ;_dbca ._fddc =_gae ;return _dbca ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_gga ,_eeg :=_cddc .newPdfAnnotationStrikeOut (_decf );if _eeg !=nil {return nil ,_eeg ;};_gga .PdfAnnotation =_dbca ;_dbca ._fddc =_gga ;
return _dbca ,nil ;case "\u0043\u0061\u0072e\u0074":_gdb ,_ebg :=_cddc .newPdfAnnotationCaretFromDict (_decf );if _ebg !=nil {return nil ,_ebg ;};_gdb .PdfAnnotation =_dbca ;_dbca ._fddc =_gdb ;return _dbca ,nil ;case "\u0053\u0074\u0061m\u0070":_faca ,_ace :=_cddc .newPdfAnnotationStampFromDict (_decf );
if _ace !=nil {return nil ,_ace ;};_faca .PdfAnnotation =_dbca ;_dbca ._fddc =_faca ;return _dbca ,nil ;case "\u0049\u006e\u006b":_aef ,_ebgc :=_cddc .newPdfAnnotationInkFromDict (_decf );if _ebgc !=nil {return nil ,_ebgc ;};_aef .PdfAnnotation =_dbca ;
_dbca ._fddc =_aef ;return _dbca ,nil ;case "\u0050\u006f\u0070u\u0070":_cfbg ,_cfgd :=_cddc .newPdfAnnotationPopupFromDict (_decf );if _cfgd !=nil {return nil ,_cfgd ;};_cfbg .PdfAnnotation =_dbca ;_dbca ._fddc =_cfbg ;return _dbca ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_fgfa ,_dfdg :=_cddc .newPdfAnnotationFileAttachmentFromDict (_decf );
if _dfdg !=nil {return nil ,_dfdg ;};_fgfa .PdfAnnotation =_dbca ;_dbca ._fddc =_fgfa ;return _dbca ,nil ;case "\u0053\u006f\u0075n\u0064":_ccc ,_eacc :=_cddc .newPdfAnnotationSoundFromDict (_decf );if _eacc !=nil {return nil ,_eacc ;};_ccc .PdfAnnotation =_dbca ;
_dbca ._fddc =_ccc ;return _dbca ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_eecg ,_dbb :=_cddc .newPdfAnnotationRichMediaFromDict (_decf );if _dbb !=nil {return nil ,_dbb ;};_eecg .PdfAnnotation =_dbca ;_dbca ._fddc =_eecg ;return _dbca ,nil ;
case "\u004d\u006f\u0076i\u0065":_ddca ,_defc :=_cddc .newPdfAnnotationMovieFromDict (_decf );if _defc !=nil {return nil ,_defc ;};_ddca .PdfAnnotation =_dbca ;_dbca ._fddc =_ddca ;return _dbca ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_gefa ,_daeae :=_cddc .newPdfAnnotationScreenFromDict (_decf );
if _daeae !=nil {return nil ,_daeae ;};_gefa .PdfAnnotation =_dbca ;_dbca ._fddc =_gefa ;return _dbca ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gfbg ,_fcba :=_cddc .newPdfAnnotationWidgetFromDict (_decf );if _fcba !=nil {return nil ,_fcba ;};_gfbg .PdfAnnotation =_dbca ;
_dbca ._fddc =_gfbg ;return _dbca ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bab ,_adcd :=_cddc .newPdfAnnotationPrinterMarkFromDict (_decf );if _adcd !=nil {return nil ,_adcd ;};_bab .PdfAnnotation =_dbca ;_dbca ._fddc =_bab ;
return _dbca ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cgfac ,_aba :=_cddc .newPdfAnnotationTrapNetFromDict (_decf );if _aba !=nil {return nil ,_aba ;};_cgfac .PdfAnnotation =_dbca ;_dbca ._fddc =_cgfac ;return _dbca ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bddd ,_fad :=_cddc .newPdfAnnotationWatermarkFromDict (_decf );
if _fad !=nil {return nil ,_fad ;};_bddd .PdfAnnotation =_dbca ;_dbca ._fddc =_bddd ;return _dbca ,nil ;case "\u0033\u0044":_bceg ,_bgg :=_cddc .newPdfAnnotation3DFromDict (_decf );if _bgg !=nil {return nil ,_bgg ;};_bceg .PdfAnnotation =_dbca ;_dbca ._fddc =_bceg ;
return _dbca ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_eecd ,_begdd :=_cddc .newPdfAnnotationProjectionFromDict (_decf );if _begdd !=nil {return nil ,_begdd ;};_eecd .PdfAnnotation =_dbca ;_dbca ._fddc =_eecd ;return _dbca ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_cabf ,_agba :=_cddc .newPdfAnnotationRedactFromDict (_decf );if _agba !=nil {return nil ,_agba ;};_cabf .PdfAnnotation =_dbca ;_dbca ._fddc =_cabf ;return _dbca ,nil ;};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_edeb );
return nil ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_edba :=NewPdfOutline ();_edba ._degdbf =&_edba ;return _edba };func (_cgecf *PdfReader )newPdfOutlineItemFromIndirectObject (_geded *_ebc .PdfIndirectObject )(*PdfOutlineItem ,error ){_dfagf ,_fdbg :=_geded .PdfObject .(*_ebc .PdfObjectDictionary );
if !_fdbg {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bgdfg :=NewPdfOutlineItem ();_bdeg :=_dfagf .Get ("\u0054\u0069\u0074l\u0065");
if _bdeg ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_dcdc ,_effca :=_ebc .GetString (_bdeg );if !_effca {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bdeg );};_bgdfg .Title =_dcdc ;if _bcbbg :=_dfagf .Get ("\u0043\u006f\u0075n\u0074");
_bcbbg !=nil {_gbgedb ,_bedgcg :=_bcbbg .(*_ebc .PdfObjectInteger );if !_bedgcg {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bcbbg );};_fbedbg :=int64 (*_gbgedb );
_bgdfg .Count =&_fbedbg ;};if _bbdbb :=_dfagf .Get ("\u0044\u0065\u0073\u0074");_bbdbb !=nil {_bgdfg .Dest =_ebc .ResolveReference (_bbdbb );if !_cgecf ._gebcd {_eaae :=_cgecf .traverseObjectData (_bgdfg .Dest );if _eaae !=nil {return nil ,_eaae ;};};};
if _fdaae :=_dfagf .Get ("\u0041");_fdaae !=nil {_bgdfg .A =_ebc .ResolveReference (_fdaae );if !_cgecf ._gebcd {_dgcbf :=_cgecf .traverseObjectData (_bgdfg .A );if _dgcbf !=nil {return nil ,_dgcbf ;};};};if _degff :=_dfagf .Get ("\u0053\u0045");_degff !=nil {_bgdfg .SE =nil ;
};if _gcgge :=_dfagf .Get ("\u0043");_gcgge !=nil {_bgdfg .C =_ebc .ResolveReference (_gcgge );};if _ecdcf :=_dfagf .Get ("\u0046");_ecdcf !=nil {_bgdfg .F =_ebc .ResolveReference (_ecdcf );};return _bgdfg ,nil ;};func (_cdff *PdfReader )flattenFieldsWithOpts (_fecba bool ,_ffbe FieldAppearanceGenerator ,_bebd *FieldFlattenOpts )error {if _bebd ==nil {_bebd =&FieldFlattenOpts {};
};var _dgca bool ;_beaa :=map[*PdfAnnotation ]bool {};{var _bfgba []*PdfField ;_cdeb :=_cdff .AcroForm ;if _cdeb !=nil {if _bebd .FilterFunc !=nil {_bfgba =_cdeb .filteredFields (_bebd .FilterFunc ,true );_dgca =_cdeb .Fields !=nil &&len (*_cdeb .Fields )> 0;
}else {_bfgba =_cdeb .AllFields ();};};for _ ,_fcdf :=range _bfgba {for _ ,_cfgcb :=range _fcdf .Annotations {_beaa [_cfgcb .PdfAnnotation ]=_fcdf .V !=nil ;if _ffbe !=nil {_afed ,_aaeb :=_ffbe .GenerateAppearanceDict (_cdeb ,_fcdf ,_cfgcb );if _aaeb !=nil {return _aaeb ;
};_cfgcb .AP =_afed ;};};};};if _fecba {for _ ,_dgbg :=range _cdff .PageList {_bcgd ,_gdebd :=_dgbg .GetAnnotations ();if _gdebd !=nil {return _gdebd ;};for _ ,_fgad :=range _bcgd {_beaa [_fgad ]=true ;};};};for _ ,_abgd :=range _cdff .PageList {var _bbbdd []*PdfAnnotation ;
if _ffbe !=nil {if _fdfbg :=_ffbe .WrapContentStream (_abgd );_fdfbg !=nil {return _fdfbg ;};};_efdeg ,_gccgd :=_abgd .GetAnnotations ();if _gccgd !=nil {return _gccgd ;};for _ ,_agdfca :=range _efdeg {_cegfg ,_gdfc :=_beaa [_agdfca ];if !_gdfc &&_bebd .AnnotFilterFunc !=nil {if _ ,_bbfe :=_agdfca .GetContext ().(*PdfAnnotationWidget );
!_bbfe {_gdfc =_bebd .AnnotFilterFunc (_agdfca );};};if !_gdfc {_bbbdd =append (_bbbdd ,_agdfca );continue ;};switch _agdfca .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_afedc ,_fcbgg ,_dccgd :=_badf (_agdfca );if _dccgd !=nil {if !_cegfg {_ca .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_dccgd );
continue ;};if _afedc ==nil {continue ;};_ggdf :=_abgd .Resources .GenerateXObjectName ();_abgd .Resources .SetXObjectFormByName (_ggdf ,_afedc );_gegg ,_dccgd :=_ccfce (_afedc );if _dccgd !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_dccgd );
}else {_dcbdd :=_ad .IdentityMatrix ();_dcbdd =_dcbdd .Translate (-_gegg .Llx ,-_gegg .Lly );_dcbdd =_dcbdd .Scale (_fcbgg .Width ()/_gegg .Width (),_fcbgg .Height ()/_gegg .Height ());_fcbgg .Transform (_dcbdd );};_fbebd :=_bcd .Min (_fcbgg .Llx ,_fcbgg .Urx );
_ddag :=_bcd .Min (_fcbgg .Lly ,_fcbgg .Ury );var _efbc []string ;_efbc =append (_efbc ,"\u0071");_efbc =append (_efbc ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_fbebd ,_ddag ));
_efbc =append (_efbc ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ggdf .String ()));_efbc =append (_efbc ,"\u0051");_afgd :=_ea .Join (_efbc ,"\u000a");_dccgd =_abgd .AppendContentStream (_afgd );if _dccgd !=nil {return _dccgd ;};if _afedc .Resources !=nil {_cddeb ,_eedb :=_ebc .GetDict (_afedc .Resources .Font );
if _eedb {for _ ,_gaee :=range _cddeb .Keys (){if !_abgd .Resources .HasFontByName (_gaee ){_abgd .Resources .SetFontByName (_gaee ,_cddeb .Get (_gaee ));};};};};};if len (_bbbdd )> 0{_abgd ._ebgag =_bbbdd ;}else {_abgd ._ebgag =[]*PdfAnnotation {};};};
if !_dgca {_cdff .AcroForm =nil ;};return nil ;};

// ToGoTime returns the date in time.Time format.
func (_fgcdg PdfDate )ToGoTime ()_a .Time {_dafeg :=int (_fgcdg ._fbaab *60*60+_fgcdg ._afbcf *60);switch _fgcdg ._cbafe {case '-':_dafeg =-_dafeg ;case 'Z':_dafeg =0;};_aecab :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fgcdg ._cbafe ,_fgcdg ._fbaab ,_fgcdg ._afbcf );
_gcaea :=_a .FixedZone (_aecab ,_dafeg );return _a .Date (int (_fgcdg ._acbce ),_a .Month (_fgcdg ._adeba ),int (_fgcdg ._bcfc ),int (_fgcdg ._egafc ),int (_fgcdg ._ggfge ),int (_fgcdg ._gabc ),0,_gcaea );};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_efag ,_dfbbc :=_ge .NewStdFontByName (HelveticaName );if !_dfbbc {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_bcaef :=_cgfde (_efag );return &PdfFont {_cbfg :&_bcaef };};func (_dfe *PdfReader )newPdfActionTransFromDict (_gaac *_ebc .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gaac .Get ("\u0054\u0072\u0061n\u0073")},nil ;};
func _fgcbc (_bdea ,_bfcc string )string {if _ea .Contains (_bdea ,"\u002b"){_ggff :=_ea .Split (_bdea ,"\u002b");if len (_ggff )==2{_bdea =_ggff [1];};};return _bfcc +"\u002b"+_bdea ;};func (_adaae *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_ebc .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_aff *_ebc .PdfIndirectObject ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gced *PdfFont )ToUnicode ()string {if _gced .baseFields ()._fcffc ==nil {return "";};return _gced .baseFields ()._fcffc .Name ();};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dae :=NewPdfAnnotation ();_acad :=&PdfAnnotationScreen {};_acad .PdfAnnotation =_dae ;_dae .SetContext (_acad );return _acad ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_dfcda *PdfReader )GetRevisionNumber ()int {return _dfcda ._bfef .GetRevisionNumber ()};func (_feae *LTV )generateVRIKey (_beadbg *PdfSignature )(string ,error ){_geccg ,_agbb :=_cfedf (_beadbg .Contents .Bytes ());if _agbb !=nil {return "",_agbb ;
};return _ea .ToUpper (_eg .EncodeToString (_geccg )),nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_efc :=NewPdfAction ();_eec :=&PdfActionSetOCGState {};_eec .PdfAction =_efc ;_efc .SetContext (_eec );return _eec ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_ebc .PdfObjectInteger ;TilingType *_ebc .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_ebc .PdfObjectFloat ;YStep *_ebc .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_ebc .PdfObjectArray ;};
func _gfab (_eeccc _ebc .PdfObject )(*PdfColorspaceICCBased ,error ){_fecfg :=&PdfColorspaceICCBased {};if _ffcgb ,_eada :=_eeccc .(*_ebc .PdfIndirectObject );_eada {_fecfg ._cbgg =_ffcgb ;};_eeccc =_ebc .TraceToDirectObject (_eeccc );_bcaea ,_gecd :=_eeccc .(*_ebc .PdfObjectArray );
if !_gecd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcaea .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_eeccc =_ebc .TraceToDirectObject (_bcaea .Get (0));_ddef ,_gecd :=_eeccc .(*_ebc .PdfObjectName );if !_gecd {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ddef !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_eeccc =_bcaea .Get (1);
_bdee ,_gecd :=_ebc .GetStream (_eeccc );if !_gecd {_ca .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_eeccc );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dcdf :=_bdee .PdfObjectDictionary ;_fdfa ,_gecd :=_dcdf .Get ("\u004e").(*_ebc .PdfObjectInteger );
if !_gecd {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fdfa !=1&&*_fdfa !=3&&*_fdfa !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_fecfg .N =int (*_fdfa );if _fffb :=_dcdf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_fffb !=nil {_acdfd ,_daadce :=NewPdfColorspaceFromPdfObject (_fffb );if _daadce !=nil {return nil ,_daadce ;};_fecfg .Alternate =_acdfd ;};if _ccgf :=_dcdf .Get ("\u0052\u0061\u006eg\u0065");
_ccgf !=nil {_ccgf =_ebc .TraceToDirectObject (_ccgf );_cfcc ,_egeg :=_ccgf .(*_ebc .PdfObjectArray );if !_egeg {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cfcc .Len ()!=2*_fecfg .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_egdd ,_bdbea :=_cfcc .GetAsFloat64Slice ();if _bdbea !=nil {return nil ,_bdbea ;};_fecfg .Range =_egdd ;}else {_fecfg .Range =make ([]float64 ,2*_fecfg .N );for _cgaf :=0;_cgaf < _fecfg .N ;_cgaf ++{_fecfg .Range [2*_cgaf ]=0.0;_fecfg .Range [2*_cgaf +1]=1.0;
};};if _fgffe :=_dcdf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fgffe !=nil {_eedf ,_fage :=_fgffe .(*_ebc .PdfObjectStream );if !_fage {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_fecfg .Metadata =_eedf ;};_babda ,_debd :=_ebc .DecodeStream (_bdee );if _debd !=nil {return nil ,_debd ;};_fecfg .Data =_babda ;_fecfg ._eaeec =_bdee ;return _fecfg ,nil ;};

// Encoder returns the font's text encoder.
func (_bcefa *pdfFontSimple )Encoder ()_cgf .TextEncoder {if _bcefa ._fedce !=nil {return _bcefa ._fedce ;};if _bcefa ._fdfcb !=nil {return _bcefa ._fdfcb ;};_acbaa ,_ :=_cgf .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _acbaa ;};

// GetContainingPdfObject implements interface PdfModel.
func (_deeec *PdfSignatureReference )GetContainingPdfObject ()_ebc .PdfObject {return _deeec ._affbd };

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_edd :=NewPdfAction ();_aed :=&PdfActionJavaScript {};_aed .PdfAction =_edd ;_edd .SetContext (_aed );return _aed ;};

// ToPdfObject implements interface PdfModel.
func (_cddf *PdfAnnotationRedact )ToPdfObject ()_ebc .PdfObject {_cddf .PdfAnnotation .ToPdfObject ();_fdea :=_cddf ._daf ;_aeed :=_fdea .PdfObject .(*_ebc .PdfObjectDictionary );_cddf .PdfAnnotationMarkup .appendToPdfDictionary (_aeed );_aeed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_aeed .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cddf .QuadPoints );_aeed .SetIfNotNil ("\u0049\u0043",_cddf .IC );_aeed .SetIfNotNil ("\u0052\u004f",_cddf .RO );_aeed .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_cddf .OverlayText );
_aeed .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cddf .Repeat );_aeed .SetIfNotNil ("\u0044\u0041",_cddf .DA );_aeed .SetIfNotNil ("\u0051",_cddf .Q );return _fdea ;};

// ToPdfObject implements interface PdfModel.
func (_dcdd *PdfBorderStyle )ToPdfObject ()_ebc .PdfObject {_bgb :=_ebc .MakeDict ();if _dcdd ._abfg !=nil {if _dcea ,_acd :=_dcdd ._abfg .(*_ebc .PdfIndirectObject );_acd {_dcea .PdfObject =_bgb ;};};_bgb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dcdd .W !=nil {_bgb .Set ("\u0057",_ebc .MakeFloat (*_dcdd .W ));};if _dcdd .S !=nil {_bgb .Set ("\u0053",_ebc .MakeName (_dcdd .S .GetPdfName ()));};if _dcdd .D !=nil {_bgb .Set ("\u0044",_ebc .MakeArrayFromIntegers (*_dcdd .D ));};if _dcdd ._abfg !=nil {return _dcdd ._abfg ;
};return _bgb ;};

// ToPdfObject implements interface PdfModel.
func (_bfe *PdfActionRendition )ToPdfObject ()_ebc .PdfObject {_bfe .PdfAction .ToPdfObject ();_fdb :=_bfe ._dc ;_abg :=_fdb .PdfObject .(*_ebc .PdfObjectDictionary );_abg .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeRendition )));_abg .SetIfNotNil ("\u0052",_bfe .R );
_abg .SetIfNotNil ("\u0041\u004e",_bfe .AN );_abg .SetIfNotNil ("\u004f\u0050",_bfe .OP );_abg .SetIfNotNil ("\u004a\u0053",_bfe .JS );return _fdb ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);func (_ecgee *PdfReader )buildOutlineTree (_fddebg _ebc .PdfObject ,_fdbfb *PdfOutlineTreeNode ,_geabb *PdfOutlineTreeNode ,_bbdg map[_ebc .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bbdg ==nil {_bbdg =map[_ebc .PdfObject ]struct{}{};
};_bbdg [_fddebg ]=struct{}{};_fgdd ,_gebb :=_fddebg .(*_ebc .PdfIndirectObject );if !_gebb {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fddebg );
};_fbedg ,_acgde :=_fgdd .PdfObject .(*_ebc .PdfObjectDictionary );if !_acgde {return nil ,nil ,_cfe .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ca .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fbedg ,_fgdd ,_fgdd );
if _bcccb :=_fbedg .Get ("\u0054\u0069\u0074l\u0065");_bcccb !=nil {_fcefb ,_ebedf :=_ecgee .newPdfOutlineItemFromIndirectObject (_fgdd );if _ebedf !=nil {return nil ,nil ,_ebedf ;};_fcefb .Parent =_fdbfb ;_fcefb .Prev =_geabb ;_gaae :=_ebc .ResolveReference (_fbedg .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_cdab :=_bbdg [_gaae ];_gaae !=nil &&_gaae !=_fgdd &&!_cdab {if !_ebc .IsNullObject (_gaae ){_aegbf ,_fbff ,_geecf :=_ecgee .buildOutlineTree (_gaae ,&_fcefb .PdfOutlineTreeNode ,nil ,_bbdg );if _geecf !=nil {_ca .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_geecf );
}else {_fcefb .First =_aegbf ;_fcefb .Last =_fbff ;};};};_afcdg :=_ebc .ResolveReference (_fbedg .Get ("\u004e\u0065\u0078\u0074"));if _ ,_acga :=_bbdg [_afcdg ];_afcdg !=nil &&_afcdg !=_fgdd &&!_acga {if !_ebc .IsNullObject (_afcdg ){_dcbddc ,_ebcc ,_facaa :=_ecgee .buildOutlineTree (_afcdg ,_fdbfb ,&_fcefb .PdfOutlineTreeNode ,_bbdg );
if _facaa !=nil {_ca .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_facaa );
}else {_fcefb .Next =_dcbddc ;return &_fcefb .PdfOutlineTreeNode ,_ebcc ,nil ;};};};return &_fcefb .PdfOutlineTreeNode ,&_fcefb .PdfOutlineTreeNode ,nil ;};_gcdgc ,_cecee :=_ceabc (_fgdd );if _cecee !=nil {return nil ,nil ,_cecee ;};_gcdgc .Parent =_fdbfb ;
if _adffe :=_fbedg .Get ("\u0046\u0069\u0072s\u0074");_adffe !=nil {_adffe =_ebc .ResolveReference (_adffe );if _ ,_dfaae :=_bbdg [_adffe ];_adffe !=nil &&_adffe !=_fgdd &&!_dfaae {_fbced :=_ebc .TraceToDirectObject (_adffe );if _ ,_fgdde :=_fbced .(*_ebc .PdfObjectNull );
!_fgdde &&_fbced !=nil {_edebgc ,_abbg ,_bcedg :=_ecgee .buildOutlineTree (_adffe ,&_gcdgc .PdfOutlineTreeNode ,nil ,_bbdg );if _bcedg !=nil {_ca .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bcedg );
}else {_gcdgc .First =_edebgc ;_gcdgc .Last =_abbg ;};};};};return &_gcdgc .PdfOutlineTreeNode ,&_gcdgc .PdfOutlineTreeNode ,nil ;};func (_gaa *PdfReader )newPdfActionLaunchFromDict (_dgf *_ebc .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ecge ,_deag :=_ece (_dgf .Get ("\u0046"));
if _deag !=nil {return nil ,_deag ;};return &PdfActionLaunch {Win :_dgf .Get ("\u0057\u0069\u006e"),Mac :_dgf .Get ("\u004d\u0061\u0063"),Unix :_dgf .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_dgf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ecge },nil ;
};func (_eee *PdfReader )newPdfAnnotationTextFromDict (_dbbg *_ebc .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fgg :=PdfAnnotationText {};_eddf ,_becg :=_eee .newPdfAnnotationMarkupFromDict (_dbbg );if _becg !=nil {return nil ,_becg ;};_fgg .PdfAnnotationMarkup =_eddf ;
_fgg .Open =_dbbg .Get ("\u004f\u0070\u0065\u006e");_fgg .Name =_dbbg .Get ("\u004e\u0061\u006d\u0065");_fgg .State =_dbbg .Get ("\u0053\u0074\u0061t\u0065");_fgg .StateModel =_dbbg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_fgg ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_abbb *PdfPageResources )SetShadingByName (keyName _ebc .PdfObjectName ,shadingObj _ebc .PdfObject )error {if _abbb .Shading ==nil {_abbb .Shading =_ebc .MakeDict ();};_cacef ,_deaad :=_ebc .GetDict (_abbb .Shading );if !_deaad {return _ebc .ErrTypeError ;
};_cacef .Set (keyName ,shadingObj );return nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_ebc .PdfObjectArray ;Matrix *_ebc .PdfObjectArray ;Function []PdfFunction ;};

// L returns the value of the L component of the color.
func (_dcag *PdfColorLab )L ()float64 {return _dcag [0]};

// GetStandardApplier gets currently used StandardApplier..
func (_bacac *PdfWriter )GetStandardApplier ()StandardApplier {return _bacac ._eaagd };

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ggedf *PdfAcroForm )ToPdfObject ()_ebc .PdfObject {_fdfac :=_ggedf ._aceeg ;_fdaag :=_fdfac .PdfObject .(*_ebc .PdfObjectDictionary );if _ggedf .Fields !=nil {_cafgf :=_ebc .PdfObjectArray {};for _ ,_bdfa :=range *_ggedf .Fields {_fggag :=_bdfa .GetContext ();
if _fggag !=nil {_cafgf .Append (_fggag .ToPdfObject ());}else {_cafgf .Append (_bdfa .ToPdfObject ());};};_fdaag .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cafgf );};if _ggedf .NeedAppearances !=nil {_fdaag .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ggedf .NeedAppearances );
};if _ggedf .SigFlags !=nil {_fdaag .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ggedf .SigFlags );};if _ggedf .CO !=nil {_fdaag .Set ("\u0043\u004f",_ggedf .CO );};if _ggedf .DR !=nil {_fdaag .Set ("\u0044\u0052",_ggedf .DR .ToPdfObject ());
};if _ggedf .DA !=nil {_fdaag .Set ("\u0044\u0041",_ggedf .DA );};if _ggedf .Q !=nil {_fdaag .Set ("\u0051",_ggedf .Q );};if _ggedf .XFA !=nil {_fdaag .Set ("\u0058\u0046\u0041",_ggedf .XFA );};if _ggedf .ADBEEchoSign !=nil {_fdaag .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_ggedf .ADBEEchoSign );
};return _fdfac ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bcec *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_afeb ,_bgbc :=color .(*PdfColorCalGray );if !_bgbc {_ca .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_afeb .Val ();X :=_bcec .WhitePoint [0]*_bcd .Pow (ANorm ,_bcec .Gamma );Y :=_bcec .WhitePoint [1]*_bcd .Pow (ANorm ,_bcec .Gamma );
Z :=_bcec .WhitePoint [2]*_bcd .Pow (ANorm ,_bcec .Gamma );_cfddb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cgeda :=-0.969256*X +1.875992*Y +0.041556*Z ;_dfgbg :=0.055648*X +-0.204043*Y +1.057311*Z ;_cfddb =_bcd .Min (_bcd .Max (_cfddb ,0),1.0);_cgeda =_bcd .Min (_bcd .Max (_cgeda ,0),1.0);
_dfgbg =_bcd .Min (_bcd .Max (_dfgbg ,0),1.0);return NewPdfColorDeviceRGB (_cfddb ,_cgeda ,_dfgbg ),nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_fadc *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_adfb ,_ccff :=color .(*PdfColorDeviceGray );if !_ccff {_ca .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_adfb ),float64 (*_adfb ),float64 (*_adfb )),nil ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_fbge *_ebc .PdfObjectDictionary ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_gbacf :=&PdfPageResourcesColorspaces {};_gbacf .Names =[]string {};_gbacf .Colorspaces =map[string ]PdfColorspace {};_gbacf ._ggdfe =&_ebc .PdfIndirectObject {};return _gbacf ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cbfb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cbfb .Range };

// ToPdfObject convert PdfInfo to pdf object.
func (_ccgb *PdfInfo )ToPdfObject ()_ebc .PdfObject {_fdce :=_ebc .MakeDict ();_fdce .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ccgb .Title );_fdce .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ccgb .Author );_fdce .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ccgb .Subject );
_fdce .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ccgb .Keywords );_fdce .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ccgb .Creator );_fdce .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ccgb .Producer );
_fdce .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ccgb .Trapped );if _ccgb .CreationDate !=nil {_fdce .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccgb .CreationDate .ToPdfObject ());};if _ccgb .ModifiedDate !=nil {_fdce .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ccgb .ModifiedDate .ToPdfObject ());
};for _ ,_efce :=range _ccgb ._fefbe .Keys (){_fdce .SetIfNotNil (_efce ,_ccgb ._fefbe .Get (_efce ));};return _fdce ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_ageeb *PdfReader )GetCatalogMetadata ()(_ebc .PdfObject ,bool ){if _ageeb ._fcdfa ==nil {return nil ,false ;};_bafbg :=_ageeb ._fcdfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bafbg ,_bafbg !=nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ffcd *BorderStyle )GetPdfName ()string {switch *_ffcd {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func _cefa (_gega _ebc .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_fgeda :=NewPdfColorspaceSpecialIndexed ();if _dgab ,_fedd :=_gega .(*_ebc .PdfIndirectObject );_fedd {_fgeda ._ffae =_dgab ;};_gega =_ebc .TraceToDirectObject (_gega );
_cbfbc ,_acda :=_gega .(*_ebc .PdfObjectArray );if !_acda {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cbfbc .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gega =_cbfbc .Get (0);_cccag ,_acda :=_gega .(*_ebc .PdfObjectName );if !_acda {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_cccag !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gega =_cbfbc .Get (1);_agef ,_gdeeg :=DetermineColorspaceNameFromPdfObject (_gega );if _gdeeg !=nil {return nil ,_gdeeg ;};if _agef =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_agef =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ca .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_agef );
return nil ,_bfbaa ;};_bafb ,_gdeeg :=NewPdfColorspaceFromPdfObject (_gega );if _gdeeg !=nil {return nil ,_gdeeg ;};_fgeda .Base =_bafb ;_gega =_cbfbc .Get (2);_cbaf ,_gdeeg :=_ebc .GetNumberAsInt64 (_gega );if _gdeeg !=nil {return nil ,_gdeeg ;};if _cbaf > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_fgeda .HiVal =int (_cbaf );_gega =_cbfbc .Get (3);_fgeda .Lookup =_gega ;_gega =_ebc .TraceToDirectObject (_gega );var _cbccd []byte ;if _ccfc ,_cbcdc :=_gega .(*_ebc .PdfObjectString );_cbcdc {_cbccd =_ccfc .Bytes ();_ca .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_cbccd );
}else if _edga ,_face :=_gega .(*_ebc .PdfObjectStream );_face {_ca .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gega .String ());_ca .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_edga .Stream ),_edga .Stream );
_dfedb ,_bggf :=_ebc .DecodeStream (_edga );if _bggf !=nil {return nil ,_bggf ;};_ca .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dfedb ),_dfedb );_cbccd =_dfedb ;}else {_ca .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gega );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_cbccd )< _fgeda .Base .GetNumComponents ()*(_fgeda .HiVal +1){_ca .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ca .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_cbccd ),_fgeda .Base .GetNumComponents (),_fgeda .HiVal );
}else {_cbccd =_cbccd [:_fgeda .Base .GetNumComponents ()*(_fgeda .HiVal +1)];};_fgeda ._cgdc =_cbccd ;return _fgeda ,nil ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_dfaa :=&PdfAppender {_fgcb :reader ._ecgfa ,Reader :reader ,_fdac :reader ._bfef ,_debe :reader ._debfg };_ecgdc ,_afaad :=_dfaa ._fgcb .Seek (0,_eag .SeekEnd );
if _afaad !=nil {return nil ,_afaad ;};_dfaa ._ecgf =_ecgdc ;if _ ,_afaad =_dfaa ._fgcb .Seek (0,_eag .SeekStart );_afaad !=nil {return nil ,_afaad ;};_dfaa ._ccf ,_afaad =NewPdfReaderWithOpts (_dfaa ._fgcb ,opts );if _afaad !=nil {return nil ,_afaad ;
};for _ ,_gcd :=range _dfaa .Reader .GetObjectNums (){if _dfaa ._faf < _gcd {_dfaa ._faf =_gcd ;};};_dfaa ._dacd =_dfaa ._fdac .GetXrefTable ();_dfaa ._deaeb =_dfaa ._fdac .GetXrefOffset ();_dfaa ._dcbg =append (_dfaa ._dcbg ,_dfaa ._ccf .PageList ...);
_dfaa ._aacc =make (map[_ebc .PdfObject ]struct{});_dfaa ._cce =make (map[_ebc .PdfObject ]int64 );_dfaa ._bba =make (map[_ebc .PdfObject ]struct{});_dfaa ._bebg =_dfaa ._ccf .AcroForm ;_dfaa ._ggda =_dfaa ._ccf .DSS ;if opts !=nil {_dfaa ._dff =opts .Password ;
};if encryptOptions !=nil {_dfaa ._dbeb =encryptOptions ;};return _dfaa ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bdfcc *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_bdfcc .NumInputs {_ca .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _bdfcc ._dfgdaf ==nil {_cdbaf :=_bdfcc .processSamples ();if _cdbaf !=nil {return nil ,_cdbaf ;};};_gegef :=_bdfcc .Encode ;
if _gegef ==nil {_gegef =[]float64 {};for _bfcfb :=0;_bfcfb < len (_bdfcc .Size );_bfcfb ++{_gegef =append (_gegef ,0);_gegef =append (_gegef ,float64 (_bdfcc .Size [_bfcfb ]-1));};};_adga :=_bdfcc .Decode ;if _adga ==nil {_adga =_bdfcc .Range ;};_adeb :=make ([]int ,len (x ));
for _afgcg :=0;_afgcg < len (x );_afgcg ++{_cabbc :=x [_afgcg ];_ccaee :=_bcd .Min (_bcd .Max (_cabbc ,_bdfcc .Domain [2*_afgcg ]),_bdfcc .Domain [2*_afgcg +1]);_dccgef :=_cfef .LinearInterpolate (_ccaee ,_bdfcc .Domain [2*_afgcg ],_bdfcc .Domain [2*_afgcg +1],_gegef [2*_afgcg ],_gegef [2*_afgcg +1]);
_cffad :=_bcd .Min (_bcd .Max (_dccgef ,0),float64 (_bdfcc .Size [_afgcg ]-1));_cfgdg :=int (_bcd .Floor (_cffad +0.5));if _cfgdg < 0{_cfgdg =0;}else if _cfgdg > _bdfcc .Size [_afgcg ]{_cfgdg =_bdfcc .Size [_afgcg ]-1;};_adeb [_afgcg ]=_cfgdg ;};_decgc :=_adeb [0];
for _dfdgf :=1;_dfdgf < _bdfcc .NumInputs ;_dfdgf ++{_fdcc :=_adeb [_dfdgf ];for _aabf :=0;_aabf < _dfdgf ;_aabf ++{_fdcc *=_bdfcc .Size [_aabf ];};_decgc +=_fdcc ;};_decgc *=_bdfcc .NumOutputs ;var _gfbf []float64 ;for _edecf :=0;_edecf < _bdfcc .NumOutputs ;
_edecf ++{_egee :=_decgc +_edecf ;if _egee >=len (_bdfcc ._dfgdaf ){_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_cdad :=_bdfcc ._dfgdaf [_egee ];_eeecd :=_cfef .LinearInterpolate (float64 (_cdad ),0,_bcd .Pow (2,float64 (_bdfcc .BitsPerSample )),_adga [2*_edecf ],_adga [2*_edecf +1]);_beadb :=_bcd .Min (_bcd .Max (_eeecd ,_bdfcc .Range [2*_edecf ]),_bdfcc .Range [2*_edecf +1]);
_gfbf =append (_gfbf ,_beadb );};return _gfbf ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_dgfdb *LTV )Enable (sig *PdfSignature ,extraCerts []*_c .Certificate )error {if _cfgca :=_dgfdb .validateSig (sig );_cfgca !=nil {return _cfgca ;};_cbgab ,_efgba :=_dgfdb .generateVRIKey (sig );if _efgba !=nil {return _efgba ;};if _ ,_gaca :=_dgfdb ._dgee .VRI [_cbgab ];
_gaca &&_dgfdb .SkipExisting {return nil ;};_aceae ,_efgba :=sig .GetCerts ();if _efgba !=nil {return _efgba ;};return _dgfdb .enable (_aceae ,extraCerts ,_cbgab );};func (_adgba *PdfWriter )adjustXRefAffectedVersion (_adgaf bool ){if _adgaf &&_adgba ._aeafa .Major ==1&&_adgba ._aeafa .Minor < 5{_adgba ._aeafa .Minor =5;
};};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_cebe *PdfPageResources )HasColorspaceByName (keyName _ebc .PdfObjectName )bool {_cbdea ,_gcadg :=_cebe .GetColorspaces ();if _gcadg !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gcadg );
return false ;};if _cbdea ==nil {return false ;};_ ,_gaddc :=_cbdea .Colorspaces [string (keyName )];return _gaddc ;};func (_bbcbfc *DSS )add (_gddcd *[]*_ebc .PdfObjectStream ,_fbed map[string ]*_ebc .PdfObjectStream ,_gegf [][]byte )([]*_ebc .PdfObjectStream ,error ){_faee :=make ([]*_ebc .PdfObjectStream ,0,len (_gegf ));
for _ ,_fcdc :=range _gegf {_gcbfd ,_fdgd :=_cfedf (_fcdc );if _fdgd !=nil {return nil ,_fdgd ;};_bcf ,_deece :=_fbed [string (_gcbfd )];if !_deece {_bcf ,_fdgd =_ebc .MakeStream (_fcdc ,_ebc .NewRawEncoder ());if _fdgd !=nil {return nil ,_fdgd ;};_fbed [string (_gcbfd )]=_bcf ;
*_gddcd =append (*_gddcd ,_bcf );};_faee =append (_faee ,_bcf );};return _faee ,nil ;};func _abgbe (_caeaf _ebc .PdfObject ,_dcede *PdfReader )(*OutlineDest ,error ){_fcbc ,_febb :=_ebc .GetArray (_caeaf );if !_febb {return nil ,_cfe .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_ddfff :=_fcbc .Len ();if _ddfff < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ddfff );
};_aegab :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_efgc :=_fcbc .Get (0);if _ecffca ,_gbgad :=_ebc .GetIndirect (_efgc );_gbgad {if _ ,_gfacd ,_cegg :=_dcede .PageFromIndirectObject (_ecffca );_cegg ==nil {_aegab .Page =int64 (_gfacd -1);}else {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ecffca );
};_aegab .PageObj =_ecffca ;}else if _egebf ,_cggeg :=_ebc .GetIntVal (_efgc );_cggeg {if _egebf >=0&&_egebf < len (_dcede .PageList ){_aegab .PageObj =_dcede .PageList [_egebf ].GetPageAsIndirectObject ();}else {_ca .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_egebf );
};_aegab .Page =int64 (_egebf );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_efgc );};_fabge ,_febb :=_ebc .GetNameVal (_fcbc .Get (1));
if !_febb {_ca .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fcbc .Get (1));
return _aegab ,nil ;};switch _fabge {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ddfff > 2{_aegab .Y ,_ =_ebc .GetNumberAsFloat (_ebc .TraceToDirectObject (_fcbc .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ddfff > 2{_aegab .X ,_ =_ebc .GetNumberAsFloat (_ebc .TraceToDirectObject (_fcbc .Get (2)));
};case "\u0058\u0059\u005a":if _ddfff > 4{_aegab .X ,_ =_ebc .GetNumberAsFloat (_ebc .TraceToDirectObject (_fcbc .Get (2)));_aegab .Y ,_ =_ebc .GetNumberAsFloat (_ebc .TraceToDirectObject (_fcbc .Get (3)));_aegab .Zoom ,_ =_ebc .GetNumberAsFloat (_ebc .TraceToDirectObject (_fcbc .Get (4)));
};default:_fabge ="\u0046\u0069\u0074";};_aegab .Mode =_fabge ;return _aegab ,nil ;};

// C returns the value of the cyan component of the color.
func (_aced *PdfColorDeviceCMYK )C ()float64 {return _aced [0]};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cgfd :=NewPdfAnnotation ();_fec :=&PdfAnnotationPolyLine {};_fec .PdfAnnotation =_cgfd ;_fec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgfd .SetContext (_fec );return _fec ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_ebc .PdfObjectName ;Colorants _ebc .PdfObject ;Process _ebc .PdfObject ;MixingHints _ebc .PdfObject ;_cacbg *_ebc .PdfIndirectObject ;};func (_gccb *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _eadg :=_gccb ._adgc ;
_eadg !=nil {return _eadg ;};return _gccb ._cbfc ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_gacbbd *PdfSignature ,_geeeb Hasher ,_fbdfe SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_ebc .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_acade *_ebc .PdfIndirectObject ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_bbfg *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbcd :=func (_fged float64 )float64 {if _fged >=6.0/29{return _fged *_fged *_fged ;};return 108.0/841*(_fged -4.0/29.0);};_cgef ,_daec :=color .(*PdfColorLab );if !_daec {_ca .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cgef .L ();AStar :=_cgef .A ();BStar :=_cgef .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_bbfg .WhitePoint [0]*_cbcd (L );Y :=_bbfg .WhitePoint [1]*_cbcd (M );Z :=_bbfg .WhitePoint [2]*_cbcd (N );_dbcbf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gbea :=-0.969256*X +1.875992*Y +0.041556*Z ;_ccddb :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbcbf =_bcd .Min (_bcd .Max (_dbcbf ,0),1.0);
_gbea =_bcd .Min (_bcd .Max (_gbea ,0),1.0);_ccddb =_bcd .Min (_bcd .Max (_ccddb ,0),1.0);return NewPdfColorDeviceRGB (_dbcbf ,_gbea ,_ccddb ),nil ;};func (_dabaad *PdfReader )buildPageList (_ecec *_ebc .PdfIndirectObject ,_ebdf *_ebc .PdfIndirectObject ,_bdac map[_ebc .PdfObject ]struct{})error {if _ecec ==nil {return nil ;
};if _ ,_gcdbc :=_bdac [_ecec ];_gcdbc {_ca .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ecec .ObjectNumber );
return nil ;};_bdac [_ecec ]=struct{}{};_ebae ,_bggd :=_ecec .PdfObject .(*_ebc .PdfObjectDictionary );if !_bggd {return _cfe .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_dfbgc ,_bggd :=(*_ebae ).Get ("\u0054\u0079\u0070\u0065").(*_ebc .PdfObjectName );
if !_bggd {if _ebae .Get ("\u004b\u0069\u0064\u0073")==nil {return _cfe .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ca .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_dfbgc =_ebc .MakeName ("\u0050\u0061\u0067e\u0073");_ebae .Set ("\u0054\u0079\u0070\u0065",_dfbgc );};_ca .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_dfbgc ,_ecec );
if *_dfbgc =="\u0050\u0061\u0067\u0065"{_dfcdc ,_cbbd :=_dabaad .newPdfPageFromDict (_ebae );if _cbbd !=nil {return _cbbd ;};_dfcdc .setContainer (_ecec );if _ebdf !=nil {_ebae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebdf );};_dabaad ._dfgde =append (_dabaad ._dfgde ,_ecec );
_dabaad .PageList =append (_dabaad .PageList ,_dfcdc );return nil ;};if *_dfbgc !="\u0050\u0061\u0067e\u0073"{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_dfbgc );
return _cfe .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _ebdf !=nil {_ebae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebdf );};if !_dabaad ._gebcd {_fggdca :=_dabaad .traverseObjectData (_ecec );if _fggdca !=nil {return _fggdca ;};};_gcff ,_efcgg :=_dabaad ._bfef .Resolve (_ebae .Get ("\u004b\u0069\u0064\u0073"));
if _efcgg !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _efcgg ;};var _fbdc *_ebc .PdfObjectArray ;
_fbdc ,_bggd =_gcff .(*_ebc .PdfObjectArray );if !_bggd {_afbeeg ,_agecd :=_gcff .(*_ebc .PdfIndirectObject );if !_agecd {return _cfe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fbdc ,_bggd =_afbeeg .PdfObject .(*_ebc .PdfObjectArray );
if !_bggd {return _cfe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ca .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_fbdc );
for _cdadf ,_cdbefa :=range _fbdc .Elements (){_dcdcff ,_bcfd :=_ebc .GetIndirect (_cdbefa );if !_bcfd {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dcdcff );
return _cfe .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fbdc .Set (_cdadf ,_dcdcff );_efcgg =_dabaad .buildPageList (_dcdcff ,_ecec ,_bdac );if _efcgg !=nil {return _efcgg ;
};};return nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_baee *LTV )EnableChain (chain []*_c .Certificate )error {return _baee .enable (nil ,chain ,"")};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gedef *PdfPageResources )GetXObjectByName (keyName _ebc .PdfObjectName )(*_ebc .PdfObjectStream ,XObjectType ){if _gedef .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fgcc ,_cddce :=_ebc .TraceToDirectObject (_gedef .XObject ).(*_ebc .PdfObjectDictionary );
if !_cddce {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebc .TraceToDirectObject (_gedef .XObject ));
return nil ,XObjectTypeUndefined ;};if _acdbd :=_fgcc .Get (keyName );_acdbd !=nil {_bfbg ,_gfeee :=_ebc .GetStream (_acdbd );if !_gfeee {_ca .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_acdbd );
return nil ,XObjectTypeUndefined ;};_ebabc :=_bfbg .PdfObjectDictionary ;_accd ,_gfeee :=_ebc .TraceToDirectObject (_ebabc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_ebc .PdfObjectName );if !_gfeee {_ca .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ebabc .String ());
return nil ,XObjectTypeUndefined ;};if *_accd =="\u0049\u006d\u0061g\u0065"{return _bfbg ,XObjectTypeImage ;}else if *_accd =="\u0046\u006f\u0072\u006d"{return _bfbg ,XObjectTypeForm ;}else if *_accd =="\u0050\u0053"{return _bfbg ,XObjectTypePS ;}else {_ca .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_accd );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};func _abggg (_edbg *PdfField ,_egea _ebc .PdfObject )error {switch _edbg .GetContext ().(type ){case *PdfFieldText :switch _gagd :=_egea .(type ){case *_ebc .PdfObjectName :_ebgcf :=_gagd ;
_ca .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ebgcf .String ());
_edbg .V =_ebc .MakeEncodedString (_gagd .String (),true );case *_ebc .PdfObjectString :_edbg .V =_ebc .MakeEncodedString (_gagd .String (),true );default:_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gagd ,_gagd );
};case *PdfFieldButton :switch _egea .(type ){case *_ebc .PdfObjectName :if len (_egea .String ())> 0{_edbg .V =_egea ;_baedb (_edbg ,_egea );};case *_ebc .PdfObjectString :if len (_egea .String ())> 0{_edbg .V =_ebc .MakeName (_egea .String ());_baedb (_edbg ,_edbg .V );
};default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_edbg .PartialName (),_egea );_edbg .V =_egea ;};case *PdfFieldChoice :switch _egea .(type ){case *_ebc .PdfObjectName :if len (_egea .String ())> 0{_edbg .V =_ebc .MakeString (_egea .String ());
_baedb (_edbg ,_egea );};case *_ebc .PdfObjectString :if len (_egea .String ())> 0{_edbg .V =_egea ;_baedb (_edbg ,_ebc .MakeName (_egea .String ()));};default:_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_edbg .PartialName (),_egea );
_edbg .V =_egea ;};case *PdfFieldSignature :_ca .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_edbg .PartialName (),_egea );
};return nil ;};func _dede (_abfc _ebc .PdfObject )(*PdfFontDescriptor ,error ){_dcgc :=&PdfFontDescriptor {};_abfc =_ebc .ResolveReference (_abfc );if _edeec ,_dfbg :=_abfc .(*_ebc .PdfIndirectObject );_dfbg {_dcgc ._afcc =_edeec ;_abfc =_edeec .PdfObject ;
};_aage ,_bbcc :=_ebc .GetDict (_abfc );if !_bbcc {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_abfc );
return nil ,_ebc .ErrTypeError ;};if _fgba :=_aage .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_fgba !=nil {_dcgc .FontName =_fgba ;}else {_ca .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_afaee ,_ :=_ebc .GetName (_dcgc .FontName );if _gade :=_aage .Get ("\u0054\u0079\u0070\u0065");_gade !=nil {_eegbdc ,_dbced :=_gade .(*_ebc .PdfObjectName );if !_dbced ||string (*_eegbdc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ca .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gade ,_afaee ,_dcgc .FontName );
};}else {_ca .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_afaee ,_dcgc .FontName );
};_dcgc .FontFamily =_aage .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_dcgc .FontStretch =_aage .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_dcgc .FontWeight =_aage .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_dcgc .Flags =_aage .Get ("\u0046\u006c\u0061g\u0073");_dcgc .FontBBox =_aage .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_dcgc .ItalicAngle =_aage .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_dcgc .Ascent =_aage .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_dcgc .Descent =_aage .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_dcgc .Leading =_aage .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_dcgc .CapHeight =_aage .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_dcgc .XHeight =_aage .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_dcgc .StemV =_aage .Get ("\u0053\u0074\u0065m\u0056");_dcgc .StemH =_aage .Get ("\u0053\u0074\u0065m\u0048");_dcgc .AvgWidth =_aage .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_dcgc .MaxWidth =_aage .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_dcgc .MissingWidth =_aage .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_dcgc .FontFile =_aage .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_dcgc .FontFile2 =_aage .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_dcgc .FontFile3 =_aage .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_dcgc .CharSet =_aage .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_dcgc .Style =_aage .Get ("\u0053\u0074\u0079l\u0065");_dcgc .Lang =_aage .Get ("\u004c\u0061\u006e\u0067");
_dcgc .FD =_aage .Get ("\u0046\u0044");_dcgc .CIDSet =_aage .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _dcgc .Flags !=nil {if _bcge ,_dgae :=_ebc .GetIntVal (_dcgc .Flags );_dgae {_dcgc ._fcga =_bcge ;};};if _dcgc .MissingWidth !=nil {if _efcc ,_daead :=_ebc .GetNumberAsFloat (_dcgc .MissingWidth );
_daead ==nil {_dcgc ._caed =_efcc ;};};if _dcgc .FontFile !=nil {_aecda ,_bbdb :=_edefa (_dcgc .FontFile );if _bbdb !=nil {return _dcgc ,_bbdb ;};_ca .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_aecda );_dcgc .fontFile =_aecda ;
};if _dcgc .FontFile2 !=nil {_fbbdd ,_dcdab :=_ge .NewFontFile2FromPdfObject (_dcgc .FontFile2 );if _dcdab !=nil {return _dcgc ,_dcdab ;};_ca .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_fbbdd .String ());_dcgc ._feabd =&_fbbdd ;
};return _dcgc ,nil ;};func (_gfgbb *PdfWriter )flushWriter ()error {if _gfgbb ._beage ==nil {_gfgbb ._beage =_gfgbb ._afba .Flush ();};return _gfgbb ._beage ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _eag .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fgfg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dbad (rs ,opts ,true ,_fgfg );
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _a .Time ){_cacgf .Lock ();defer _cacgf .Unlock ();_egecb =creationDate ;};func (_fabeg *PdfReader )loadPerms ()(*Permissions ,error ){if _gbaf :=_fabeg ._fcdfa .Get ("\u0050\u0065\u0072m\u0073");_gbaf !=nil {if _cddff ,_deebf :=_ebc .GetDict (_gbaf );
_deebf {_geabff :=_cddff .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _geabff ==nil {return nil ,nil ;};if _cbeb ,_daebd :=_ebc .GetIndirect (_geabff );_daebd {_gdegd ,_bbgab :=_fabeg .newPdfSignatureFromIndirect (_cbeb );if _bbgab !=nil {return nil ,_bbgab ;
};return NewPermissions (_gdegd ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_befea *PdfPage )GetStructTreeRoot ()(*_ebc .PdfObject ,bool ){_cadfe ,_gdcd :=_befea ._fagg .GetCatalogStructTreeRoot ();return &_cadfe ,_gdcd ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dfeef *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dfeef ._adgca .(*PdfTilingPattern );};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_afbg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_abbdc *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_abbdc .Type ,_abbdc .P ,_abbdc .V );};func _eacda ()string {return _ca .Version };

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ceaa *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ceaa .RunesToCharcodeBytes ([]rune (str ));};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_fecdf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_fecdf ._geff =colorspace ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gddge *PdfShadingPatternType3 )ToPdfObject ()_ebc .PdfObject {_gddge .PdfPattern .ToPdfObject ();_ecfbbd :=_gddge .getDict ();if _gddge .Shading !=nil {_ecfbbd .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gddge .Shading .ToPdfObject ());};if _gddge .Matrix !=nil {_ecfbbd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gddge .Matrix );
};if _gddge .ExtGState !=nil {_ecfbbd .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gddge .ExtGState );};return _gddge ._bcgg ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_edfe *PdfPageResources )HasXObjectByName (keyName _ebc .PdfObjectName )bool {_defbg ,_ :=_edfe .GetXObjectByName (keyName );return _defbg !=nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_ebc .PdfObjectArray ;TI *_ebc .PdfObjectInteger ;I *_ebc .PdfObjectArray ;};func (_fag *PdfReader )newPdfActionNamedFromDict (_bgeb *_ebc .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bgeb .Get ("\u004e")},nil ;
};

// GetPdfInfo returns the PDF info dictionary.
func (_bcagf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cedb ,_ffgba :=_bcagf .GetTrailer ();if _ffgba !=nil {return nil ,_ffgba ;};var _afefb *_ebc .PdfObjectDictionary ;_acbec :=_cedb .Get ("\u0049\u006e\u0066\u006f");switch _dbcef :=_acbec .(type ){case *_ebc .PdfObjectReference :_fadg :=_dbcef ;
_acbec ,_ffgba =_bcagf .GetIndirectObjectByNumber (int (_fadg .ObjectNumber ));_acbec =_ebc .TraceToDirectObject (_acbec );if _ffgba !=nil {return nil ,_ffgba ;};_afefb ,_ =_acbec .(*_ebc .PdfObjectDictionary );case *_ebc .PdfObjectDictionary :_afefb =_dbcef ;
};if _afefb ==nil {return nil ,_cfe .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_bfcaa ,_ffgba :=NewPdfInfoFromObject (_afefb );if _ffgba !=nil {return nil ,_ffgba ;
};return _bfcaa ,nil ;};func (_egcb *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gffb pdfCIDFontType0 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){return _ge .CharMetrics {Wx :_gffb ._fbacg },true ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bcgc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fffce :=vals [0];if _fffce < 0.0||_fffce > 100.0{_ca .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_fffce );
return nil ,ErrColorOutOfRange ;};_adcdg :=vals [1];_dced :=float64 (-100);_effb :=float64 (100);if len (_bcgc .Range )> 1{_dced =_bcgc .Range [0];_effb =_bcgc .Range [1];};if _adcdg < _dced ||_adcdg > _effb {_ca .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_adcdg ,_dced ,_effb );
return nil ,ErrColorOutOfRange ;};_efef :=vals [2];_bdgg :=float64 (-100);_aedb :=float64 (100);if len (_bcgc .Range )> 3{_bdgg =_bcgc .Range [2];_aedb =_bcgc .Range [3];};if _efef < _bdgg ||_efef > _aedb {_ca .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_efef ,_bdgg ,_aedb );
return nil ,ErrColorOutOfRange ;};_bded :=NewPdfColorLab (_fffce ,_adcdg ,_efef );return _bded ,nil ;};func _gbabfd ()string {_cacgf .Lock ();defer _cacgf .Unlock ();return _bbceda };

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_ebc .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_be *PdfActionLaunch )ToPdfObject ()_ebc .PdfObject {_be .PdfAction .ToPdfObject ();_gc :=_be ._dc ;_beb :=_gc .PdfObject .(*_ebc .PdfObjectDictionary );_beb .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeLaunch )));if _be .F !=nil {_beb .Set ("\u0046",_be .F .ToPdfObject ());
};_beb .SetIfNotNil ("\u0057\u0069\u006e",_be .Win );_beb .SetIfNotNil ("\u004d\u0061\u0063",_be .Mac );_beb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_be .Unix );_beb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_be .NewWindow );return _gc ;
};func (_gcdff *PdfWriter )setHashIDs (_dbae _fd .Hash )error {_eedab :=_dbae .Sum (nil );if _gcdff ._eced ==""{_gcdff ._eced =_eg .EncodeToString (_eedab [:8]);};_gcdff .setDocumentIDs (_gcdff ._eced ,_eg .EncodeToString (_eedab [8:]));return nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _ebc .PdfObject ;Name _ebc .PdfObject ;State _ebc .PdfObject ;StateModel _ebc .PdfObject ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_gbcgc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _gbcgc ._ebgag !=nil {return _gbcgc ._ebgag ,nil ;};if _gbcgc .Annots ==nil {_gbcgc ._ebgag =[]*PdfAnnotation {};return nil ,nil ;};if _gbcgc ._fagg ==nil {_gbcgc ._ebgag =[]*PdfAnnotation {};
return nil ,nil ;};_cffecg ,_bfbfg :=_gbcgc ._fagg .loadAnnotations (_gbcgc .Annots );if _bfbfg !=nil {return nil ,_bfbfg ;};if _cffecg ==nil {_gbcgc ._ebgag =[]*PdfAnnotation {};};_gbcgc ._ebgag =_cffecg ;return _gbcgc ._ebgag ,nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_debfg :map[_ebc .PdfObject ]struct{}{},_faaab :_fgadg (),_bfef :_ebc .NewParserFromString (txt )};};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_afeca []byte ;_facag []float64 ;};

// SetAnnotations sets the annotations list.
func (_cdgg *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cdgg ._ebgag =annotations };

// IsTiling specifies if the pattern is a tiling pattern.
func (_dadbe *PdfPattern )IsTiling ()bool {return _dadbe .PatternType ==1};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfAnnotationScreen )ToPdfObject ()_ebc .PdfObject {_ege .PdfAnnotation .ToPdfObject ();_ffc :=_ege ._daf ;_bebe :=_ffc .PdfObject .(*_ebc .PdfObjectDictionary );_bebe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_bebe .SetIfNotNil ("\u0054",_ege .T );_bebe .SetIfNotNil ("\u004d\u004b",_ege .MK );_bebe .SetIfNotNil ("\u0041",_ege .A );_bebe .SetIfNotNil ("\u0041\u0041",_ege .AA );return _ffc ;};func _aadad (_bcbcd string )(string ,error ){var _bdgaf _ed .Buffer ;
_bdgaf .WriteString (_bcbcd );_fdfaca :=make ([]byte ,8+16);_bbad :=_a .Now ().UTC ().UnixNano ();_dg .BigEndian .PutUint64 (_fdfaca ,uint64 (_bbad ));_ ,_caggeg :=_g .Read (_fdfaca [8:]);if _caggeg !=nil {return "",_caggeg ;};_bdgaf .WriteString (_eg .EncodeToString (_fdfaca ));
return _bdgaf .String (),nil ;};func _efcfe (_becbcc *_ebc .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dfdb :=PdfShadingType5 {};_gaff :=_becbcc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gaff ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdegeb ,_eeafb :=_gaff .(*_ebc .PdfObjectInteger );if !_eeafb {_ca .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gaff );
return nil ,_ebc .ErrTypeError ;};_dfdb .BitsPerCoordinate =_bdegeb ;_gaff =_becbcc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gaff ==nil {_ca .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bdegeb ,_eeafb =_gaff .(*_ebc .PdfObjectInteger );if !_eeafb {_ca .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gaff );
return nil ,_ebc .ErrTypeError ;};_dfdb .BitsPerComponent =_bdegeb ;_gaff =_becbcc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gaff ==nil {_ca .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_bdegeb ,_eeafb =_gaff .(*_ebc .PdfObjectInteger );if !_eeafb {_ca .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gaff );
return nil ,_ebc .ErrTypeError ;};_dfdb .VerticesPerRow =_bdegeb ;_gaff =_becbcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gaff ==nil {_ca .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_agbc ,_eeafb :=_gaff .(*_ebc .PdfObjectArray );if !_eeafb {_ca .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaff );
return nil ,_ebc .ErrTypeError ;};_dfdb .Decode =_agbc ;if _aaegbd :=_becbcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aaegbd !=nil {_dfdb .Function =[]PdfFunction {};if _abfgf ,_ccdf :=_aaegbd .(*_ebc .PdfObjectArray );_ccdf {for _ ,_dabbf :=range _abfgf .Elements (){_bdgdb ,_efeed :=_adda (_dabbf );
if _efeed !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efeed );return nil ,_efeed ;};_dfdb .Function =append (_dfdb .Function ,_bdgdb );
};}else {_ggafc ,_cgecfe :=_adda (_aaegbd );if _cgecfe !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgecfe );return nil ,_cgecfe ;
};_dfdb .Function =append (_dfdb .Function ,_ggafc );};};return &_dfdb ,nil ;};

// GetPerms returns the Permissions dictionary
func (_aaebf *PdfReader )GetPerms ()*Permissions {return _aaebf ._fbabb };

// Width returns the width of `rect`.
func (_ggfa *PdfRectangle )Width ()float64 {return _bcd .Abs (_ggfa .Urx -_ggfa .Llx )};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bdg :=NewPdfAnnotation ();_age :=&PdfAnnotationHighlight {};_age .PdfAnnotation =_bdg ;_age .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdg .SetContext (_age );return _age ;};func (_eegg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _eegg ._adgc ==nil &&_eegg .DescendantFont !=nil {return _eegg .DescendantFont .FontDescriptor ();
};return _eegg ._adgc ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fada *PdfField )GetContext ()PdfModel {return _fada ._febf };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dbff *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgdc ,_bgad :=_ebc .GetNumbersAsFloat (objects );
if _bgad !=nil {return nil ,_bgad ;};return _dbff .ColorFromFloats (_dgdc );};func _cgffca (_gbfed *_ebc .PdfIndirectObject ,_bfea *_ebc .PdfObjectDictionary )(*DSS ,error ){if _gbfed ==nil {_gbfed =_ebc .MakeIndirectObject (nil );};_gbfed .PdfObject =_ebc .MakeDict ();
_bead :=map[string ]*VRI {};if _bgda ,_bbbe :=_ebc .GetDict (_bfea .Get ("\u0056\u0052\u0049"));_bbbe {for _ ,_cgga :=range _bgda .Keys (){if _ggdd ,_gfbd :=_ebc .GetDict (_bgda .Get (_cgga ));_gfbd {_bead [_ea .ToUpper (_cgga .String ())]=_dbfd (_ggdd );
};};};return &DSS {Certs :_cgba (_bfea .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_cgba (_bfea .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_cgba (_bfea .Get ("\u0043\u0052\u004c\u0073")),VRI :_bead ,_gbfc :_gbfed },nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgg *PdfAnnotationCaret )ToPdfObject ()_ebc .PdfObject {_dgg .PdfAnnotation .ToPdfObject ();_agdf :=_dgg ._daf ;_becf :=_agdf .PdfObject .(*_ebc .PdfObjectDictionary );_dgg .PdfAnnotationMarkup .appendToPdfDictionary (_becf );_becf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0043\u0061\u0072e\u0074"));
_becf .SetIfNotNil ("\u0052\u0044",_dgg .RD );_becf .SetIfNotNil ("\u0053\u0079",_dgg .Sy );return _agdf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ffcac *PdfSignature )GetContainingPdfObject ()_ebc .PdfObject {return _ffcac ._ffaeb };func _gdaac (_aaedd _ebc .PdfObject )(*_ebc .PdfObjectDictionary ,*fontCommon ,error ){_cecea :=&fontCommon {};if _fffdb ,_aeba :=_aaedd .(*_ebc .PdfIndirectObject );
_aeba {_cecea ._bdadb =_fffdb .ObjectNumber ;};_fgbf ,_egdec :=_ebc .GetDict (_aaedd );if !_egdec {_ca .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aaedd );
return nil ,nil ,ErrFontNotSupported ;};_eddb ,_egdec :=_ebc .GetNameVal (_fgbf .Get ("\u0054\u0079\u0070\u0065"));if !_egdec {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _eddb !="\u0046\u006f\u006e\u0074"{_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_eddb ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_ebc .ErrTypeError ;};_aegd ,_egdec :=_ebc .GetNameVal (_fgbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_egdec {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_cecea ._dccgbc =_aegd ;_bgag ,_egdec :=_ebc .GetNameVal (_fgbf .Get ("\u004e\u0061\u006d\u0065"));if _egdec {_cecea ._ccef =_bgag ;};_caca :=_fgbf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _caca !=nil {_cecea ._gfcc =_ebc .TraceToDirectObject (_caca );
_affb ,_cfba :=_bcddf (_cecea ._gfcc ,_cecea );if _cfba !=nil {return _fgbf ,_cecea ,_cfba ;};_cecea ._fcffc =_affb ;}else if _aegd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_aegd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fbfa ,_gdbgd :=_ag .NewCIDSystemInfo (_fgbf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _gdbgd !=nil {return _fgbf ,_cecea ,_gdbgd ;};_dadbb :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fbfa .Registry ,_fbfa .Ordering );if _ag .IsPredefinedCMap (_dadbb ){_cecea ._fcffc ,_gdbgd =_ag .LoadPredefinedCMap (_dadbb );
if _gdbgd !=nil {_ca .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dadbb ,_gdbgd );
};};};_edbf :=_fgbf .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _edbf !=nil {_gacb ,_ceab :=_dede (_edbf );if _ceab !=nil {_ca .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ceab );
return _fgbf ,_cecea ,_ceab ;};_cecea ._adgc =_gacb ;};if _aegd !="\u0054\u0079\u0070e\u0033"{_bcfbd ,_fefag :=_ebc .GetNameVal (_fgbf .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fefag {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _fgbf ,_cecea ,ErrRequiredAttributeMissing ;};_cecea ._eeda =_bcfbd ;};return _fgbf ,_cecea ,nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ggbbc :=&PdfBorderStyle {};return _ggbbc };

// SetAction sets the PDF action for the annotation link.
func (_dcae *PdfAnnotationLink )SetAction (action *PdfAction ){_dcae ._adaa =action ;if action ==nil {_dcae .A =nil ;};};func _cgede ()string {_gcdd :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _eddd _ed .Buffer ;for _cgfcg :=0;_cgfcg < 6;_cgfcg ++{_eddd .WriteRune (rune (_gcdd [_fa .Intn (len (_gcdd ))]));};return _eddd .String ();};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_fdf :=NewPdfAnnotation ();_afbb :=&PdfAnnotationCaret {};_afbb .PdfAnnotation =_fdf ;_afbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdf .SetContext (_afbb );return _afbb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_adfbe *PdfPageResourcesColorspaces )ToPdfObject ()_ebc .PdfObject {_faag :=_ebc .MakeDict ();for _ ,_fdbdg :=range _adfbe .Names {_faag .Set (_ebc .PdfObjectName (_fdbdg ),_adfbe .Colorspaces [_fdbdg ].ToPdfObject ());};if _adfbe ._ggdfe !=nil {_adfbe ._ggdfe .PdfObject =_faag ;
return _adfbe ._ggdfe ;};return _faag ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_aafb :=NewPdfAnnotation ();_ffb :=&PdfAnnotationRedact {};_ffb .PdfAnnotation =_aafb ;_ffb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aafb .SetContext (_ffb );return _ffb ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_dffc *PdfPageResources )SetPatternByName (keyName _ebc .PdfObjectName ,pattern _ebc .PdfObject )error {if _dffc .Pattern ==nil {_dffc .Pattern =_ebc .MakeDict ();};_eeegf ,_eccfd :=_ebc .GetDict (_dffc .Pattern );if !_eccfd {return _ebc .ErrTypeError ;
};_eeegf .Set (keyName ,pattern );return nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fddc PdfModel ;Rect _ebc .PdfObject ;Contents _ebc .PdfObject ;P _ebc .PdfObject ;NM _ebc .PdfObject ;M _ebc .PdfObject ;F _ebc .PdfObject ;AP _ebc .PdfObject ;AS _ebc .PdfObject ;Border _ebc .PdfObject ;C _ebc .PdfObject ;StructParent _ebc .PdfObject ;
OC _ebc .PdfObject ;_daf *_ebc .PdfIndirectObject ;};func (_baf *PdfReader )newPdfActionGoTo3DViewFromDict (_cdfb *_ebc .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_cdfb .Get ("\u0054\u0041"),V :_cdfb .Get ("\u0056")},nil ;
};

// ToPdfObject converts date to a PDF string object.
func (_ffba *PdfDate )ToPdfObject ()_ebc .PdfObject {_abeda :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ffba ._acbce ,_ffba ._adeba ,_ffba ._bcfc ,_ffba ._egafc ,_ffba ._ggfge ,_ffba ._gabc ,_ffba ._cbafe ,_ffba ._fbaab ,_ffba ._afbcf );
return _ebc .MakeString (_abeda );};func (_aeadc *PdfWriter )writeBytes (_bagdg []byte ){if _aeadc ._beage !=nil {return ;};_eeecg ,_bgebce :=_aeadc ._afba .Write (_bagdg );_aeadc ._facg +=int64 (_eeecg );_aeadc ._beage =_bgebce ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_bgbd *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ParsePdfObject parses input pdf object into given output intent.
func (_gcbcg *PdfOutputIntent )ParsePdfObject (object _ebc .PdfObject )error {_cdeec ,_dcbdc :=_ebc .GetDict (object );if !_dcbdc {_ca .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cfe .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_gcbcg ._fbge =_cdeec ;_gcbcg .Type ,_ =_cdeec .GetString ("\u0054\u0079\u0070\u0065");_agfgf ,_dcbdc :=_cdeec .GetString ("\u0053");if _dcbdc {switch _agfgf {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_gcbcg .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_gcbcg .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_gcbcg .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_gcbcg .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_gcbcg .S =PdfOutputIntentTypeX ;
};};_gcbcg .OutputCondition ,_ =_cdeec .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_gcbcg .OutputConditionIdentifier ,_ =_cdeec .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_gcbcg .RegistryName ,_ =_cdeec .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_gcbcg .Info ,_ =_cdeec .GetString ("\u0049\u006e\u0066\u006f");if _bcfgf ,_ceage :=_ebc .GetStream (_cdeec .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_ceage {_gcbcg .ColorComponents ,_ =_ebc .GetIntVal (_bcfgf .Get ("\u004e"));_cabe ,_edca :=_ebc .DecodeStream (_bcfgf );if _edca !=nil {return _edca ;};_gcbcg .DestOutputProfile =_cabe ;};return nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cbbb :=NewPdfAnnotation ();_aaee :=&PdfAnnotationPolygon {};_aaee .PdfAnnotation =_cbbb ;_aaee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbbb .SetContext (_aaee );return _aaee ;};func (_gdce fontCommon )fontFlags ()int {if _gdce ._adgc ==nil {return 0;
};return _gdce ._adgc ._fcga ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbedd *PdfShadingType4 )ToPdfObject ()_ebc .PdfObject {_fbedd .PdfShading .ToPdfObject ();_gfbdc ,_dacfd :=_fbedd .getShadingDict ();if _dacfd !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fbedd .BitsPerCoordinate !=nil {_gfbdc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fbedd .BitsPerCoordinate );};if _fbedd .BitsPerComponent !=nil {_gfbdc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fbedd .BitsPerComponent );
};if _fbedd .BitsPerFlag !=nil {_gfbdc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fbedd .BitsPerFlag );};if _fbedd .Decode !=nil {_gfbdc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbedd .Decode );};if _fbedd .Function !=nil {if len (_fbedd .Function )==1{_gfbdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbedd .Function [0].ToPdfObject ());
}else {_acagcc :=_ebc .MakeArray ();for _ ,_bggfb :=range _fbedd .Function {_acagcc .Append (_bggfb .ToPdfObject ());};_gfbdc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acagcc );};};return _fbedd ._abfcbf ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _ebc .PdfObject ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_fefa *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _fbbc []float64 ;for _becbf :=0;_becbf < _fefa .GetNumComponents ();_becbf ++{_fbbc =append (_fbbc ,0.0,1.0);};return _fbbc ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bcaeg *PdfOutlineTreeNode )GetContext ()PdfModel {if _baadf ,_affg :=_bcaeg ._degdbf .(*PdfOutline );_affg {return _baadf ;};if _cgefb ,_abdeb :=_bcaeg ._degdbf .(*PdfOutlineItem );_abdeb {return _cgefb ;};_ca .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggcd *PdfAnnotationWidget )ToPdfObject ()_ebc .PdfObject {_ggcd .PdfAnnotation .ToPdfObject ();_ccaf :=_ggcd ._daf ;_gdaa :=_ccaf .PdfObject .(*_ebc .PdfObjectDictionary );if _ggcd ._adg {return _ccaf ;};_ggcd ._adg =true ;_gdaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ebc .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_gdaa .SetIfNotNil ("\u0048",_ggcd .H );_gdaa .SetIfNotNil ("\u004d\u004b",_ggcd .MK );_gdaa .SetIfNotNil ("\u0041",_ggcd .A );_gdaa .SetIfNotNil ("\u0041\u0041",_ggcd .AA );_gdaa .SetIfNotNil ("\u0042\u0053",_ggcd .BS );_adfg :=_ggcd .Parent ;if _ggcd ._cdgb !=nil {if _ggcd ._cdgb ._faga ==_ggcd ._daf {_ggcd ._cdgb .ToPdfObject ();
};_adfg =_ggcd ._cdgb .GetContainingPdfObject ();};if _adfg !=_ccaf {_gdaa .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_adfg );};_ggcd ._adg =false ;return _ccaf ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_ecfbb *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _ecfbb ._ebgag ==nil {_ecfbb .GetAnnotations ();};_ecfbb ._ebgag =append (_ecfbb ._ebgag ,annot );};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dacee *PdfWriter )SetNameDictionary (names _ebc .PdfObject )error {if names ==nil {return nil ;};_ca .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_dacee ._aaefa .Set ("\u004e\u0061\u006de\u0073",names );return _dacee .addObjects (names );};

// GetAscent returns the Ascent of the font `descriptor`.
func (_fegf *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _ebc .GetNumberAsFloat (_fegf .Ascent );};

// SetFontByName sets the font specified by keyName to the given object.
func (_eafgb *PdfPageResources )SetFontByName (keyName _ebc .PdfObjectName ,obj _ebc .PdfObject )error {if _eafgb .Font ==nil {_eafgb .Font =_ebc .MakeDict ();};_ccebc ,_fabef :=_ebc .TraceToDirectObject (_eafgb .Font ).(*_ebc .PdfObjectDictionary );if !_fabef {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ebc .TraceToDirectObject (_eafgb .Font ));
return _ebc .ErrTypeError ;};_ccebc .Set (keyName ,obj );return nil ;};func (_eddg *PdfReader )newPdfAnnotation3DFromDict (_gdee *_ebc .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_cggg :=PdfAnnotation3D {};_cggg .T3DD =_gdee .Get ("\u0033\u0044\u0044");
_cggg .T3DV =_gdee .Get ("\u0033\u0044\u0056");_cggg .T3DA =_gdee .Get ("\u0033\u0044\u0041");_cggg .T3DI =_gdee .Get ("\u0033\u0044\u0049");_cggg .T3DB =_gdee .Get ("\u0033\u0044\u0042");return &_cggg ,nil ;};func (_fddg *PdfReader )newPdfAnnotationScreenFromDict (_fdebc *_ebc .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ebed :=PdfAnnotationScreen {};
_ebed .T =_fdebc .Get ("\u0054");_ebed .MK =_fdebc .Get ("\u004d\u004b");_ebed .A =_fdebc .Get ("\u0041");_ebed .AA =_fdebc .Get ("\u0041\u0041");return &_ebed ,nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_acee :=&PdfColorspaceDeviceN {};return _acee };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _ebc .PdfObject ;NewWindow _ebc .PdfObject ;T _ebc .PdfObject ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _eag .ReadSeeker )(*CompliancePdfReader ,error ){const _aefa ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_ebee ,_ebef :=_dbad (rs ,&ReaderOpts {ComplianceMode :true },false ,_aefa );
if _ebef !=nil {return nil ,_ebef ;};return &CompliancePdfReader {PdfReader :_ebee },nil ;};func (_adaaa *DSS )addCRLs (_eaab [][]byte )([]*_ebc .PdfObjectStream ,error ){return _adaaa .add (&_adaaa .CRLs ,_adaaa ._fced ,_eaab );};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ecgc *PdfRectangle )Normalize (){if _ecgc .Llx > _ecgc .Urx {_ecgc .Llx ,_ecgc .Urx =_ecgc .Urx ,_ecgc .Llx ;};if _ecgc .Lly > _ecgc .Ury {_ecgc .Lly ,_ecgc .Ury =_ecgc .Ury ,_ecgc .Lly ;};};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ecga :=NewPdfAnnotation ();_begd :=&PdfAnnotationWidget {};_begd .PdfAnnotation =_ecga ;_ecga .SetContext (_begd );return _begd ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_dea :=&PdfAction {};_dea ._dc =_ebc .MakeIndirectObject (_ebc .MakeDict ());return _dea ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gfda *PdfPage )GetContentStreamObjs ()[]_ebc .PdfObject {if _gfda .Contents ==nil {return nil ;};_fgfdf :=_ebc .TraceToDirectObject (_gfda .Contents );if _cecab ,_edgd :=_fgfdf .(*_ebc .PdfObjectArray );_edgd {return _cecab .Elements ();};return []_ebc .PdfObject {_fgfdf };
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _ebc .PdfObject )(*PdfFont ,error ){return _deed (fontObj ,true )};

// ValidateSignatures validates digital signatures in the document.
func (_fgfeg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fgfeg .AcroForm ==nil {return nil ,nil ;};if _fgfeg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_acfc *PdfSignature ;
_efga *PdfField ;_febce SignatureHandler ;};var _aegdd []*sigFieldPair ;for _ ,_addadd :=range _fgfeg .AcroForm .AllFields (){if _addadd .V ==nil {continue ;};if _dbadc ,_eaedg :=_ebc .GetDict (_addadd .V );_eaedg {if _dbcd ,_dagfde :=_ebc .GetNameVal (_dbadc .Get ("\u0054\u0079\u0070\u0065"));
_dagfde &&_dbcd =="\u0053\u0069\u0067"{_bdegf ,_bggbca :=_ebc .GetIndirect (_addadd .V );if !_bggbca {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ccefg ,_eceffb :=_fgfeg .newPdfSignatureFromIndirect (_bdegf );if _eceffb !=nil {return nil ,_eceffb ;};var _adaeg SignatureHandler ;for _ ,_afagf :=range handlers {if _afagf .IsApplicable (_ccefg ){_adaeg =_afagf ;break ;};
};_aegdd =append (_aegdd ,&sigFieldPair {_acfc :_ccefg ,_efga :_addadd ,_febce :_adaeg });};};};var _cegeg []SignatureValidationResult ;for _ ,_gfdbf :=range _aegdd {_afgbf :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gfdbf ._efga }};
if _gfdbf ._febce ==nil {_afgbf .Errors =append (_afgbf .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_cegeg =append (_cegeg ,_afgbf );continue ;};_efcbdc ,_fcgdc :=_gfdbf ._febce .NewDigest (_gfdbf ._acfc );
if _fcgdc !=nil {_afgbf .Errors =append (_afgbf .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fcgdc .Error ());_cegeg =append (_cegeg ,_afgbf );continue ;};_ebfbgf :=_gfdbf ._acfc .ByteRange ;if _ebfbgf ==nil {_afgbf .Errors =append (_afgbf .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_cegeg =append (_cegeg ,_afgbf );continue ;};for _eegge :=0;_eegge < _ebfbgf .Len ();_eegge =_eegge +2{_fceff ,_ :=_ebc .GetNumberAsInt64 (_ebfbgf .Get (_eegge ));_gdbdb ,_ :=_ebc .GetIntVal (_ebfbgf .Get (_eegge +1));if _ ,_bbddb :=_fgfeg ._ecgfa .Seek (_fceff ,_eag .SeekStart );
_bbddb !=nil {return nil ,_bbddb ;};_egdgd :=make ([]byte ,_gdbdb );if _ ,_cfea :=_fgfeg ._ecgfa .Read (_egdgd );_cfea !=nil {return nil ,_cfea ;};_efcbdc .Write (_egdgd );};var _acgfe SignatureValidationResult ;if _baba ,_dgeef :=_gfdbf ._febce .(SignatureHandlerDocMDP );
_dgeef {_acgfe ,_fcgdc =_baba .ValidateWithOpts (_gfdbf ._acfc ,_efcbdc ,SignatureHandlerDocMDPParams {Parser :_fgfeg ._bfef });}else {_acgfe ,_fcgdc =_gfdbf ._febce .Validate (_gfdbf ._acfc ,_efcbdc );};if _fcgdc !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_fcgdc ,_gfdbf ._febce );
_acgfe .Errors =append (_acgfe .Errors ,_fcgdc .Error ());};_acgfe .Name =_gfdbf ._acfc .Name .Decoded ();_acgfe .Reason =_gfdbf ._acfc .Reason .Decoded ();if _gfdbf ._acfc .M !=nil {_dcecb ,_ggeda :=NewPdfDate (_gfdbf ._acfc .M .String ());if _ggeda !=nil {_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggeda );
_acgfe .Errors =append (_acgfe .Errors ,_ggeda .Error ());continue ;};_acgfe .Date =_dcecb ;};_acgfe .ContactInfo =_gfdbf ._acfc .ContactInfo .Decoded ();_acgfe .Location =_gfdbf ._acfc .Location .Decoded ();_acgfe .Fields =_afgbf .Fields ;_cegeg =append (_cegeg ,_acgfe );
};return _cegeg ,nil ;};func (_gdcb *DSS )generateHashMap (_gbggc []*_ebc .PdfObjectStream )(map[string ]*_ebc .PdfObjectStream ,error ){_fdcfc :=map[string ]*_ebc .PdfObjectStream {};for _ ,_afdc :=range _gbggc {_dgga ,_bbab :=_ebc .DecodeStream (_afdc );
if _bbab !=nil {return nil ,_bbab ;};_accf ,_bbab :=_cfedf (_dgga );if _bbab !=nil {return nil ,_bbab ;};_fdcfc [string (_accf )]=_afdc ;};return _fdcfc ,nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gbgc *_ebc .PdfIndirectObject ;};func (_dcdbe *PdfAcroForm )filteredFields (_abdf FieldFilterFunc ,_gafa bool )[]*PdfField {if _dcdbe ==nil {return nil ;
};return _gefd (_dcdbe .Fields ,_abdf ,_gafa );};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_eebfd *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_eebfd .ToPdfOutline ().PdfOutlineTreeNode ;};

// ToPdfObject converts the font to a PDF representation.
func (_cbfda *pdfFontType0 )ToPdfObject ()_ebc .PdfObject {if _cbfda ._dfdfb ==nil {_cbfda ._dfdfb =&_ebc .PdfIndirectObject {};};_ccaeb :=_cbfda .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cbfda ._dfdfb .PdfObject =_ccaeb ;if _cbfda .Encoding !=nil {_ccaeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbfda .Encoding );
}else if _cbfda ._bbdffb !=nil {_ccaeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbfda ._bbdffb .ToPdfObject ());};if _cbfda .DescendantFont !=nil {_ccaeb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_ebc .MakeArray (_cbfda .DescendantFont .ToPdfObject ()));
};return _cbfda ._dfdfb ;};type pdfFont interface{_ge .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_ebc .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_gbg :=NewPdfAction ();_gfe :=&PdfActionThread {};_gfe .PdfAction =_gbg ;_gbg .SetContext (_gfe );return _gfe ;};func _deed (_bgaed _ebc .PdfObject ,_cfag bool )(*PdfFont ,error ){_bcdbb ,_ggeg ,_bedbe :=_gdaac (_bgaed );
if _bcdbb !=nil {_fabe (_bcdbb );};if _bedbe !=nil {if _bedbe ==ErrType1CFontNotSupported {_ffdf ,_adecg :=_cgaa (_bcdbb ,_ggeg ,nil );if _adecg !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ggeg ,_adecg );
return nil ,_bedbe ;};return &PdfFont {_cbfg :_ffdf },_bedbe ;};return nil ,_bedbe ;};_cfdce :=&PdfFont {};switch _ggeg ._dccgbc {case "\u0054\u0079\u0070e\u0030":if !_cfag {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ggeg );
return nil ,_cfe .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gcgd ,_cdgcd :=_fceg (_bcdbb ,_ggeg );if _cdgcd !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggeg ,_cdgcd );
return nil ,_cdgcd ;};_cfdce ._cbfg =_gcgd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dgdb *pdfFontSimple ;_eaebc ,_cdbe :=_ge .NewStdFontByName (_ge .StdFontName (_ggeg ._eeda ));
if _cdbe {_bedf :=_cgfde (_eaebc );_cfdce ._cbfg =&_bedf ;_febd :=_ebc .TraceToDirectObject (_bedf .ToPdfObject ());_gdfe ,_cdcf ,_ccag :=_gdaac (_febd );if _ccag !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ggeg ,_bedf );
return nil ,_ccag ;};for _ ,_dece :=range _bcdbb .Keys (){_gdfe .Set (_dece ,_bcdbb .Get (_dece ));};_dgdb ,_ccag =_cgaa (_gdfe ,_cdcf ,_bedf ._fdfcb );if _ccag !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ggeg ,_bedf );
return nil ,_ccag ;};_dgdb ._bcbfd =_bedf ._bcbfd ;_dgdb ._ddaf =_bedf ._ddaf ;if _dgdb ._cbfc ==nil {_dgdb ._cbfc =_bedf ._cbfc ;};}else {_dgdb ,_bedbe =_cgaa (_bcdbb ,_ggeg ,nil );if _bedbe !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ggeg ,_bedbe );
return nil ,_bedbe ;};};_bedbe =_dgdb .addEncoding ();if _bedbe !=nil {return nil ,_bedbe ;};if _cdbe {_dgdb .updateStandard14Font ();};if _cdbe &&_dgdb ._fedce ==nil &&_dgdb ._fdfcb ==nil {_ca .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgdb );
_ca .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_eaebc );};if len (_dgdb ._bcbfd )==0{_ca .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dgdb );};_cfdce ._cbfg =_dgdb ;
case "\u0054\u0079\u0070e\u0033":_babg ,_agbfg :=_caefb (_bcdbb ,_ggeg );if _agbfg !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_agbfg );
return nil ,_agbfg ;};_cfdce ._cbfg =_babg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ggfg ,_bcdaa :=_fbdeg (_bcdbb ,_ggeg );if _bcdaa !=nil {_ca .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bcdaa );
return nil ,_bcdaa ;};_cfdce ._cbfg =_ggfg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_abdde ,_cbfd :=_cfcba (_bcdbb ,_ggeg );if _cbfd !=nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggeg ,_cbfd );
return nil ,_cbfd ;};_cfdce ._cbfg =_abdde ;default:_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ggeg );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ggeg );};return _cfdce ,nil ;};func _ebagf ()string {_cacgf .Lock ();
defer _cacgf .Unlock ();return _egccf };func (_efdd *LTV )getCRLs (_dcbe []*_c .Certificate )([][]byte ,error ){_abfce :=make ([][]byte ,0,len (_dcbe ));for _ ,_aafgg :=range _dcbe {for _ ,_ggab :=range _aafgg .CRLDistributionPoints {if _efdd .CertClient .IsCA (_aafgg ){continue ;
};_ffebf ,_adfdb :=_efdd .CRLClient .MakeRequest (_ggab ,_aafgg );if _adfdb !=nil {_ca .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_adfdb );continue ;
};_abfce =append (_abfce ,_ffebf );};};return _abfce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionSound )ToPdfObject ()_ebc .PdfObject {_bea .PdfAction .ToPdfObject ();_cdfc :=_bea ._dc ;_aee :=_cdfc .PdfObject .(*_ebc .PdfObjectDictionary );_aee .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeSound )));_aee .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bea .Sound );
_aee .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bea .Volume );_aee .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bea .Synchronous );_aee .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bea .Repeat );_aee .SetIfNotNil ("\u004d\u0069\u0078",_bea .Mix );
return _cdfc ;};func _afaf (_cfaac *_ebc .PdfObjectStream )(*PdfFunctionType0 ,error ){_gbggf :=&PdfFunctionType0 {};_gbggf ._cgfff =_cfaac ;_ggbagf :=_cfaac .PdfObjectDictionary ;_eeedb ,_aafe :=_ebc .TraceToDirectObject (_ggbagf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ebc .PdfObjectArray );
if !_aafe {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eeedb .Len ()< 0||_eeedb .Len ()%2!=0{_ca .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_gbggf .NumInputs =_eeedb .Len ()/2;_adegd ,_bcee :=_eeedb .ToFloat64Array ();if _bcee !=nil {return nil ,_bcee ;};_gbggf .Domain =_adegd ;_eeedb ,_aafe =_ebc .TraceToDirectObject (_ggbagf .Get ("\u0052\u0061\u006eg\u0065")).(*_ebc .PdfObjectArray );
if !_aafe {_ca .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eeedb .Len ()< 0||_eeedb .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gbggf .NumOutputs =_eeedb .Len ()/2;_bafdg ,_bcee :=_eeedb .ToFloat64Array ();if _bcee !=nil {return nil ,_bcee ;
};_gbggf .Range =_bafdg ;_eeedb ,_aafe =_ebc .TraceToDirectObject (_ggbagf .Get ("\u0053\u0069\u007a\u0065")).(*_ebc .PdfObjectArray );if !_aafe {_ca .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eegcc ,_bcee :=_eeedb .ToIntegerArray ();
if _bcee !=nil {return nil ,_bcee ;};if len (_eegcc )!=_gbggf .NumInputs {_ca .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbggf .Size =_eegcc ;_dceaa ,_aafe :=_ebc .TraceToDirectObject (_ggbagf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_ebc .PdfObjectInteger );
if !_aafe {_ca .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_dceaa !=1&&*_dceaa !=2&&*_dceaa !=4&&*_dceaa !=8&&*_dceaa !=12&&*_dceaa !=16&&*_dceaa !=24&&*_dceaa !=32{_ca .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_dceaa );
return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbggf .BitsPerSample =int (*_dceaa );_gbggf .Order =1;_afafd ,_aafe :=_ebc .TraceToDirectObject (_ggbagf .Get ("\u004f\u0072\u0064e\u0072")).(*_ebc .PdfObjectInteger );
if _aafe {if *_afafd !=1&&*_afafd !=3{_ca .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_afafd );return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbggf .Order =int (*_afafd );
};_eeedb ,_aafe =_ebc .TraceToDirectObject (_ggbagf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ebc .PdfObjectArray );if _aafe {_facae ,_efgd :=_eeedb .ToFloat64Array ();if _efgd !=nil {return nil ,_efgd ;};_gbggf .Encode =_facae ;};_eeedb ,_aafe =_ebc .TraceToDirectObject (_ggbagf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_ebc .PdfObjectArray );
if _aafe {_bdgec ,_abagc :=_eeedb .ToFloat64Array ();if _abagc !=nil {return nil ,_abagc ;};_gbggf .Decode =_bdgec ;};_gbbf ,_bcee :=_ebc .DecodeStream (_cfaac );if _bcee !=nil {return nil ,_bcee ;};_gbggf ._beegf =_gbbf ;return _gbggf ,nil ;};func (_bbcfb *PdfPattern )getDict ()*_ebc .PdfObjectDictionary {if _cddfd ,_dceaf :=_bbcfb ._bcgg .(*_ebc .PdfIndirectObject );
_dceaf {_cfeba ,_dgbeb :=_cddfd .PdfObject .(*_ebc .PdfObjectDictionary );if !_dgbeb {return nil ;};return _cfeba ;}else if _fcbfc ,_cdggf :=_bbcfb ._bcgg .(*_ebc .PdfObjectStream );_cdggf {return _fcbfc .PdfObjectDictionary ;}else {_ca .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_bbcfb ._bcgg );
return nil ;};};func _ece (_dac _ebc .PdfObject )(*PdfFilespec ,error ){if _dac ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dac );};

// GetNumComponents returns the number of color components (3 for RGB).
func (_gcdbf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_gfdd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _gfdd .Alternate ==nil {_ca .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gfdd .N ==1{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ebcd :=NewPdfColorspaceDeviceGray ();return _ebcd .ImageToRGB (img );}else if _gfdd .N ==3{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _gfdd .N ==4{_ca .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_eeec :=NewPdfColorspaceDeviceCMYK ();return _eeec .ImageToRGB (img );}else {return img ,_cfe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ca .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gfdd );
_cabc ,_deda :=_gfdd .Alternate .ImageToRGB (img );_ca .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ca .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cabc );
return _cabc ,_deda ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_faec *PdfAppender )UpdateObject (obj _ebc .PdfObject ){_faec .replaceObject (obj ,obj );if _ ,_efg :=_faec ._aacc [obj ];!_efg {_faec ._ccbc =append (_faec ._ccbc ,obj );_faec ._aacc [obj ]=struct{}{};};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gfde *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gfde .Base .GetNumComponents ();_facbe :=int (vals [0])*N ;
if _facbe < 0||(_facbe +N -1)>=len (_gfde ._cgdc ){_ca .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_facbe );return nil ,ErrColorOutOfRange ;};_gdgg :=_gfde ._cgdc [_facbe :_facbe +N ];
var _cfgc []float64 ;for _ ,_gcbdd :=range _gdgg {_cfgc =append (_cfgc ,float64 (_gcbdd )/255.0);};_egbbb ,_fcbf :=_gfde .Base .ColorFromFloats (_cfgc );if _fcbf !=nil {return nil ,_fcbf ;};return _egbbb ,nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_ebc .PdfObjectDictionary )(*PdfPageResources ,error ){_adbbg :=NewPdfPageResources ();if _gfdbc :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gfdbc !=nil {_adbbg .ExtGState =_gfdbc ;};if _gddd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gddd !=nil &&!_ebc .IsNullObject (_gddd ){_adbbg .ColorSpace =_gddd ;};if _gaead :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gaead !=nil {_adbbg .Pattern =_gaead ;};if _fgcaee :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fgcaee !=nil {_adbbg .Shading =_fgcaee ;
};if _ceceag :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_ceceag !=nil {_adbbg .XObject =_ceceag ;};if _cabdg :=_ebc .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_cabdg !=nil {_adbbg .Font =_cabdg ;};if _agbd :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_agbd !=nil {_adbbg .ProcSet =_agbd ;};if _gfeff :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gfeff !=nil {_adbbg .Properties =_gfeff ;};return _adbbg ,nil ;};

// Items returns all children outline items.
func (_fcab *OutlineItem )Items ()[]*OutlineItem {return _fcab .Entries };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_eebga *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_efead ,_eebac :=_ebc .GetDict (_eebga ._aaefa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eebac {_efead =_ebc .MakeDict ();_eebga ._aaefa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_efead );
};_cbafa ,_eebac :=_ebc .GetDict (_efead .Get (_ebc .PdfObjectName (extName )));if !_eebac {_cbafa =_ebc .MakeDict ();_efead .Set (_ebc .PdfObjectName (extName ),_cbafa );};if _ddfaf ,_ :=_ebc .GetNameVal (_cbafa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ddfaf !=baseVersion {_cbafa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_ebc .MakeName (baseVersion ));};if _cgfae ,_ :=_ebc .GetIntVal (_cbafa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cgfae !=extLevel {_cbafa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_ebc .MakeInteger (int64 (extLevel )));};};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_ebc .PdfObjectStream )(*XObjectImage ,error ){_agcfb :=&XObjectImage {};_agcfb ._febcg =stream ;_fccg :=*(stream .PdfObjectDictionary );_bagb ,_efeda :=_ebc .NewEncoderFromStream (stream );if _efeda !=nil {return nil ,_efeda ;
};_agcfb .Filter =_bagb ;if _bbfc :=_ebc .TraceToDirectObject (_fccg .Get ("\u0057\u0069\u0064t\u0068"));_bbfc !=nil {_cedc ,_gccff :=_bbfc .(*_ebc .PdfObjectInteger );if !_gccff {return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dgeg :=int64 (*_cedc );_agcfb .Width =&_dgeg ;}else {return nil ,_cfe .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bdgda :=_ebc .TraceToDirectObject (_fccg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_bdgda !=nil {_dffag ,_aaccb :=_bdgda .(*_ebc .PdfObjectInteger );if !_aaccb {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ddgfd :=int64 (*_dffag );
_agcfb .Height =&_ddgfd ;}else {return nil ,_cfe .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _degbg :=_ebc .TraceToDirectObject (_fccg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_degbg !=nil {_dcefd ,_ddacfd :=NewPdfColorspaceFromPdfObject (_degbg );if _ddacfd !=nil {return nil ,_ddacfd ;};_agcfb .ColorSpace =_dcefd ;}else {_ca .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_agcfb .ColorSpace =NewPdfColorspaceDeviceGray ();};if _bagc :=_ebc .TraceToDirectObject (_fccg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_bagc !=nil {_dffbg ,_fcfed :=_bagc .(*_ebc .PdfObjectInteger );
if !_fcfed {return nil ,_cfe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_edbed :=int64 (*_dffbg );_agcfb .BitsPerComponent =&_edbed ;};_agcfb .Intent =_fccg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_agcfb .ImageMask =_fccg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_agcfb .Mask =_fccg .Get ("\u004d\u0061\u0073\u006b");_agcfb .Decode =_fccg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_agcfb .Interpolate =_fccg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_agcfb .Alternatives =_fccg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_agcfb .SMask =_fccg .Get ("\u0053\u004d\u0061s\u006b");_agcfb .SMaskInData =_fccg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_agcfb .Matte =_fccg .Get ("\u004d\u0061\u0074t\u0065");_agcfb .Name =_fccg .Get ("\u004e\u0061\u006d\u0065");_agcfb .StructParent =_fccg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_agcfb .ID =_fccg .Get ("\u0049\u0044");
_agcfb .OPI =_fccg .Get ("\u004f\u0050\u0049");_agcfb .Metadata =_fccg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_agcfb .OC =_fccg .Get ("\u004f\u0043");_agcfb .Stream =stream .Stream ;return _agcfb ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_dcg :=NewPdfAction ();_ff :=&PdfActionSound {};_ff .PdfAction =_dcg ;_dcg .SetContext (_ff );return _ff ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ebcgd *PdfPattern )IsShading ()bool {return _ebcgd .PatternType ==2};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_efed *PdfColorspaceICCBased )ToPdfObject ()_ebc .PdfObject {_efcfa :=&_ebc .PdfObjectArray {};_efcfa .Append (_ebc .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gefc *_ebc .PdfObjectStream ;if _efed ._eaeec !=nil {_gefc =_efed ._eaeec ;
}else {_gefc =&_ebc .PdfObjectStream {};};_cecd :=_ebc .MakeDict ();_cecd .Set ("\u004e",_ebc .MakeInteger (int64 (_efed .N )));if _efed .Alternate !=nil {_cecd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_efed .Alternate .ToPdfObject ());};if _efed .Metadata !=nil {_cecd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_efed .Metadata );
};if _efed .Range !=nil {var _baac []_ebc .PdfObject ;for _ ,_abdd :=range _efed .Range {_baac =append (_baac ,_ebc .MakeFloat (_abdd ));};_cecd .Set ("\u0052\u0061\u006eg\u0065",_ebc .MakeArray (_baac ...));};_cecd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ebc .MakeInteger (int64 (len (_efed .Data ))));
_gefc .Stream =_efed .Data ;_gefc .PdfObjectDictionary =_cecd ;_efcfa .Append (_gefc );if _efed ._cbgg !=nil {_efed ._cbgg .PdfObject =_efcfa ;return _efed ._cbgg ;};return _efcfa ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_agabc *PdfWriter )SetCatalogMetadata (meta _ebc .PdfObject )error {if meta ==nil {_agabc ._aaefa .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bfead ,_gcggfg :=_ebc .GetStream (meta );if !_gcggfg {return _cfe .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_agabc .addObject (_bfead );_agabc ._aaefa .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bfead );return nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_gedbg *_ebc .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fcca *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_bfab *PdfReader )newPdfAnnotationInkFromDict (_befe *_ebc .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cgbc :=PdfAnnotationInk {};_geef ,_eagfg :=_bfab .newPdfAnnotationMarkupFromDict (_befe );
if _eagfg !=nil {return nil ,_eagfg ;};_cgbc .PdfAnnotationMarkup =_geef ;_cgbc .InkList =_befe .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cgbc .BS =_befe .Get ("\u0042\u0053");return &_cgbc ,nil ;};

// SetDecode sets the decode image float slice.
func (_eaafa *Image )SetDecode (decode []float64 ){_eaafa ._facag =decode };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_efdbg *Image )ConvertToBinary ()error {if _efdbg .ColorComponents ==1&&_efdbg .BitsPerComponent ==1{return nil ;};_caaad ,_adea :=_efdbg .ToGoImage ();if _adea !=nil {return _adea ;};_ggadab ,_adea :=_cfef .MonochromeConverter .Convert (_caaad );
if _adea !=nil {return _adea ;};_efdbg .Data =_ggadab .Base ().Data ;_efdbg ._afeca ,_adea =_cfef .ScaleAlphaToMonochrome (_efdbg ._afeca ,int (_efdbg .Width ),int (_efdbg .Height ));if _adea !=nil {return _adea ;};_efdbg .BitsPerComponent =1;_efdbg .ColorComponents =1;
_efdbg ._facag =nil ;return nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _ebc .PdfObject ;PreserveRB _ebc .PdfObject ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dccbg *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dccbg ._eaagd =optimizer };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _ebc .PdfObject )(_ebc .PdfObjectName ,error ){var _fefb *_ebc .PdfObjectName ;var _adff *_ebc .PdfObjectArray ;if _agdc ,_dee :=obj .(*_ebc .PdfIndirectObject );_dee {if _gdbg ,_bbcbf :=_agdc .PdfObject .(*_ebc .PdfObjectArray );
_bbcbf {_adff =_gdbg ;}else if _bacb ,_agfb :=_agdc .PdfObject .(*_ebc .PdfObjectName );_agfb {_fefb =_bacb ;};}else if _ffef ,_eega :=obj .(*_ebc .PdfObjectArray );_eega {_adff =_ffef ;}else if _edebg ,_faaa :=obj .(*_ebc .PdfObjectName );_faaa {_fefb =_edebg ;
};if _fefb !=nil {switch *_fefb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fefb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fefb ,nil ;
};};if _adff !=nil &&_adff .Len ()> 0{if _fbcb ,_deec :=_adff .Get (0).(*_ebc .PdfObjectName );_deec {switch *_fbcb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _adff .Len ()==1{return *_fbcb ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_fbcb ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_fbcb ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_fbcb ,nil ;};};};return "",nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_efbe *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_ebc .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cfe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cace ,_abd :=_ebc .GetNumbersAsFloat (objects );
if _abd !=nil {return nil ,_abd ;};return _efbe .ColorFromFloats (_cace );};func (_dbef *PdfWriter )setDocumentIDs (_caafc ,_gegee string ){_dbef ._fgbaa =_ebc .MakeArray (_ebc .MakeHexString (_caafc ),_ebc .MakeHexString (_gegee ));};func (_cfgg *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cfgg .fontCommon };
func (_fgbg *PdfReader )newPdfAnnotationStrikeOut (_fagd *_ebc .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gdf :=PdfAnnotationStrikeOut {};_ebcg ,_dbd :=_fgbg .newPdfAnnotationMarkupFromDict (_fagd );if _dbd !=nil {return nil ,_dbd ;};_gdf .PdfAnnotationMarkup =_ebcg ;
_gdf .QuadPoints =_fagd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gdf ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bacbe *PdfPageResources )GetPatternByName (keyName _ebc .PdfObjectName )(*PdfPattern ,bool ){if _bacbe .Pattern ==nil {return nil ,false ;};_fdgage ,_ccfed :=_ebc .TraceToDirectObject (_bacbe .Pattern ).(*_ebc .PdfObjectDictionary );if !_ccfed {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bacbe .Pattern );
return nil ,false ;};if _fbgf :=_fdgage .Get (keyName );_fbgf !=nil {_gage ,_cgcb :=_cgdf (_fbgf );if _cgcb !=nil {_ca .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cgcb );
return nil ,false ;};return _gage ,true ;};return nil ,false ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cacgf .Lock ();defer _cacgf .Unlock ();_ggcce =producer };func (_ecbe *PdfReader )newPdfAnnotationPolygonFromDict (_cgg *_ebc .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cdbf :=PdfAnnotationPolygon {};
_bee ,_ecbg :=_ecbe .newPdfAnnotationMarkupFromDict (_cgg );if _ecbg !=nil {return nil ,_ecbg ;};_cdbf .PdfAnnotationMarkup =_bee ;_cdbf .Vertices =_cgg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cdbf .LE =_cgg .Get ("\u004c\u0045");_cdbf .BS =_cgg .Get ("\u0042\u0053");
_cdbf .IC =_cgg .Get ("\u0049\u0043");_cdbf .BE =_cgg .Get ("\u0042\u0045");_cdbf .IT =_cgg .Get ("\u0049\u0054");_cdbf .Measure =_cgg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cdbf ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _ebc .PdfObject ;T3DV _ebc .PdfObject ;T3DA _ebc .PdfObject ;T3DI _ebc .PdfObject ;T3DB _ebc .PdfObject ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_eagfd :=NewPdfAnnotation ();_fbe :=&PdfAnnotationMovie {};_fbe .PdfAnnotation =_eagfd ;_eagfd .SetContext (_fbe );return _fbe ;};func _ade (_baef _ebc .PdfObject )(*PdfColorspaceCalGray ,error ){_dbf :=NewPdfColorspaceCalGray ();
if _eebge ,_bfac :=_baef .(*_ebc .PdfIndirectObject );_bfac {_dbf ._gbge =_eebge ;};_baef =_ebc .TraceToDirectObject (_baef );_bace ,_cegee :=_baef .(*_ebc .PdfObjectArray );if !_cegee {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _bace .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_baef =_ebc .TraceToDirectObject (_bace .Get (0));_agbg ,_cegee :=_baef .(*_ebc .PdfObjectName );
if !_cegee {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_agbg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_baef =_ebc .TraceToDirectObject (_bace .Get (1));_ddgc ,_cegee :=_baef .(*_ebc .PdfObjectDictionary );if !_cegee {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_baef =_ddgc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_baef =_ebc .TraceToDirectObject (_baef );_fdgag ,_cegee :=_baef .(*_ebc .PdfObjectArray );if !_cegee {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _fdgag .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cbe ,_dfeb :=_fdgag .GetAsFloat64Slice ();
if _dfeb !=nil {return nil ,_dfeb ;};_dbf .WhitePoint =_cbe ;_baef =_ddgc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _baef !=nil {_baef =_ebc .TraceToDirectObject (_baef );_gdeg ,_addg :=_baef .(*_ebc .PdfObjectArray );if !_addg {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _gdeg .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gffa ,_bgea :=_gdeg .GetAsFloat64Slice ();
if _bgea !=nil {return nil ,_bgea ;};_dbf .BlackPoint =_gffa ;};_baef =_ddgc .Get ("\u0047\u0061\u006dm\u0061");if _baef !=nil {_baef =_ebc .TraceToDirectObject (_baef );_eaee ,_degb :=_ebc .GetNumberAsFloat (_baef );if _degb !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_dbf .Gamma =_eaee ;};return _dbf ,nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cacgf .Lock ();defer _cacgf .Unlock ();_bbceda =author };

// WriteToFile writes the output PDF to file.
func (_daddg *PdfWriter )WriteToFile (outputFilePath string )error {_befbb ,_babf :=_db .Create (outputFilePath );if _babf !=nil {return _babf ;};defer _befbb .Close ();return _daddg .Write (_befbb );};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_egac :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_egac ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_efde *PdfColorspaceCalGray )ToPdfObject ()_ebc .PdfObject {_fddf :=&_ebc .PdfObjectArray {};_fddf .Append (_ebc .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_egcd :=_ebc .MakeDict ();if _efde .WhitePoint !=nil {_egcd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ebc .MakeArray (_ebc .MakeFloat (_efde .WhitePoint [0]),_ebc .MakeFloat (_efde .WhitePoint [1]),_ebc .MakeFloat (_efde .WhitePoint [2])));
}else {_ca .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _efde .BlackPoint !=nil {_egcd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ebc .MakeArray (_ebc .MakeFloat (_efde .BlackPoint [0]),_ebc .MakeFloat (_efde .BlackPoint [1]),_ebc .MakeFloat (_efde .BlackPoint [2])));
};_egcd .Set ("\u0047\u0061\u006dm\u0061",_ebc .MakeFloat (_efde .Gamma ));_fddf .Append (_egcd );if _efde ._gbge !=nil {_efde ._gbge .PdfObject =_fddf ;return _efde ._gbge ;};return _fddf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_geddb *PdfShadingType2 )ToPdfObject ()_ebc .PdfObject {_geddb .PdfShading .ToPdfObject ();_gdggb ,_ffgfde :=_geddb .getShadingDict ();if _ffgfde !=nil {_ca .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdggb ==nil {_ca .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _geddb .Coords !=nil {_gdggb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_geddb .Coords );
};if _geddb .Domain !=nil {_gdggb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_geddb .Domain );};if _geddb .Function !=nil {if len (_geddb .Function )==1{_gdggb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_geddb .Function [0].ToPdfObject ());
}else {_gcfge :=_ebc .MakeArray ();for _ ,_faggc :=range _geddb .Function {_gcfge .Append (_faggc .ToPdfObject ());};_gdggb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcfge );};};if _geddb .Extend !=nil {_gdggb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_geddb .Extend );
};return _geddb ._abfcbf ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fffa *PdfReader )GetNameDictionary ()(_ebc .PdfObject ,error ){_gefe :=_ebc .ResolveReference (_fffa ._fcdfa .Get ("\u004e\u0061\u006de\u0073"));if _gefe ==nil {return nil ,nil ;};if !_fffa ._gebcd {_fegfd :=_fffa .traverseObjectData (_gefe );if _fegfd !=nil {return nil ,_fegfd ;
};};return _gefe ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_cagf *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_aaabe :=_ba .NewReader (img .getBase ());_gebd :=_cfef .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_cagf .AlternateSpace .GetNumComponents (),nil ,img ._afeca ,nil );
_eaeea :=_ba .NewWriter (_gebd );_fedc :=_bcd .Pow (2,float64 (img .BitsPerComponent ))-1;_ca .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ca .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_cagf .TintTransform );_fdae :=_cagf .AlternateSpace .DecodeArray ();var (_effg uint32 ;_fgffc error ;);for {_effg ,_fgffc =_aaabe .ReadSample ();
if _fgffc ==_eag .EOF {break ;};if _fgffc !=nil {return img ,_fgffc ;};_efcb :=float64 (_effg )/_fedc ;_afga ,_bfgf :=_cagf .TintTransform .Evaluate ([]float64 {_efcb });if _bfgf !=nil {return img ,_bfgf ;};for _eagcc ,_faeca :=range _afga {_daca :=_cfef .LinearInterpolate (_faeca ,_fdae [_eagcc *2],_fdae [_eagcc *2+1],0,1);
if _bfgf =_eaeea .WriteSample (uint32 (_daca *_fedc ));_bfgf !=nil {return img ,_bfgf ;};};};return _cagf .AlternateSpace .ImageToRGB (_ebeb (&_gebd ));};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_abgca *PdfPage )ToPdfObject ()_ebc .PdfObject {_dddbg :=_abgca ._beacb ;_abgca .GetPageDict ();return _dddbg ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_bbaf :=&PdfColorspaceLab {};_bbaf .BlackPoint =[]float64 {0.0,0.0,0.0};_bbaf .Range =[]float64 {-100,100,-100,100};return _bbaf ;};func _cacdf (_bafd StdFontName )(pdfFontSimple ,error ){_gfded ,_agga :=_ge .NewStdFontByName (_bafd );
if !_agga {return pdfFontSimple {},ErrFontNotSupported ;};_dcfd :=_cgfde (_gfded );return _dcfd ,nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dfadd *PdfColorCalGray )GetNumComponents ()int {return 1};func (_gdbeaf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gdbeaf ._adgc };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dcbf :=NewPdfAnnotation ();_fcb :=&PdfAnnotationStamp {};_fcb .PdfAnnotation =_dcbf ;_fcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcbf .SetContext (_fcb );return _fcb ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _ebc .PdfObject ;RichMediaContent _ebc .PdfObject ;};

// String returns a string representation of what flags are set.
func (_aafa FieldFlag )String ()string {_gbaac :="";if _aafa ==FieldFlagClear {_gbaac ="\u0043\u006c\u0065a\u0072";return _gbaac ;};if _aafa &FieldFlagReadOnly > 0{_gbaac +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _aafa &FieldFlagRequired > 0{_gbaac +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _aafa &FieldFlagNoExport > 0{_gbaac +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _aafa &FieldFlagNoToggleToOff > 0{_gbaac +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _aafa &FieldFlagRadio > 0{_gbaac +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _aafa &FieldFlagPushbutton > 0{_gbaac +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _aafa &FieldFlagRadiosInUnision > 0{_gbaac +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _aafa &FieldFlagMultiline > 0{_gbaac +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _aafa &FieldFlagPassword > 0{_gbaac +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _aafa &FieldFlagFileSelect > 0{_gbaac +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _aafa &FieldFlagDoNotScroll > 0{_gbaac +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _aafa &FieldFlagComb > 0{_gbaac +="\u007c\u0043\u006fm\u0062";};if _aafa &FieldFlagRichText > 0{_gbaac +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _aafa &FieldFlagDoNotSpellCheck > 0{_gbaac +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _aafa &FieldFlagCombo > 0{_gbaac +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _aafa &FieldFlagEdit > 0{_gbaac +="\u007c\u0045\u0064i\u0074";};if _aafa &FieldFlagSort > 0{_gbaac +="\u007c\u0053\u006fr\u0074";};if _aafa &FieldFlagMultiSelect > 0{_gbaac +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _aafa &FieldFlagCommitOnSelChange > 0{_gbaac +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ea .Trim (_gbaac ,"\u007c");};func (_bgga *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bgga ._adgc };


// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_ebga *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cgf .CharCode )(_ggag []rune ,_bbgf ,_decgf int ){_eccd ,_bbgf ,_decgf :=_ebga .CharcodesToStrings (charcodes );return []rune (_ea .Join (_eccd ,"")),_bbgf ,_decgf ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _ebc .PdfObject ;T _ebc .PdfObject ;Operation _ebc .PdfObject ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_edg *PdfAction )GetContext ()PdfModel {if _edg ==nil {return nil ;};return _edg ._adf ;};

// ToPdfObject implements interface PdfModel.
func (_bbc *PdfActionHide )ToPdfObject ()_ebc .PdfObject {_bbc .PdfAction .ToPdfObject ();_bcbb :=_bbc ._dc ;_egb :=_bcbb .PdfObject .(*_ebc .PdfObjectDictionary );_egb .SetIfNotNil ("\u0053",_ebc .MakeName (string (ActionTypeHide )));_egb .SetIfNotNil ("\u0054",_bbc .T );
_egb .SetIfNotNil ("\u0048",_bbc .H );return _bcbb ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_gcbea _ebc .ParserMetadata ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gece *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_abag ,_cacf :=color .(*PdfColorPattern );if !_cacf {_ca .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _abag .Color ==nil {return color ,nil ;};if _gece .UnderlyingCS ==nil {return nil ,_cfe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gece .UnderlyingCS .ColorToRGB (_abag .Color );
};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_aace :=map[rune ]int {};for _ ,_ecbf :=range text {_aace [_ecbf ]++;};return _aace ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fffbd *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fffbd .UnderlyingCS ==nil {return nil ,_cfe .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fffbd .UnderlyingCS .ColorFromFloats (vals );};

// SetContext sets the sub action (context).
func (_dba *PdfAction )SetContext (ctx PdfModel ){_dba ._adf =ctx };

// ToPdfObject returns the PDF representation of the pattern.
func (_faac *PdfPattern )ToPdfObject ()_ebc .PdfObject {_gefde :=_faac .getDict ();_gefde .Set ("\u0054\u0079\u0070\u0065",_ebc .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gefde .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_ebc .MakeInteger (_faac .PatternType ));
return _faac ._bcgg ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_egegc *PdfPage )GetContainingPdfObject ()_ebc .PdfObject {return _egegc ._beacb };

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func (_caceff *PdfWriter )setDocInfo (_eageba _ebc .PdfObject ){if _caceff .hasObject (_caceff ._ebgcgg ){delete (_caceff ._bbfbd ,_caceff ._ebgcgg );
delete (_caceff ._cebef ,_caceff ._ebgcgg );for _gfaff ,_bbbfe :=range _caceff ._gfbe {if _bbbfe ==_caceff ._ebgcgg {copy (_caceff ._gfbe [_gfaff :],_caceff ._gfbe [_gfaff +1:]);_caceff ._gfbe [len (_caceff ._gfbe )-1]=nil ;_caceff ._gfbe =_caceff ._gfbe [:len (_caceff ._gfbe )-1];
break ;};};};_agecc :=_ebc .PdfIndirectObject {};_agecc .PdfObject =_eageba ;_caceff ._ebgcgg =&_agecc ;_caceff .addObject (&_agecc );};func _acc (_dcdfa _ebc .PdfObject )(*PdfColorspaceDeviceN ,error ){_gdggf :=NewPdfColorspaceDeviceN ();if _fgge ,_afae :=_dcdfa .(*_ebc .PdfIndirectObject );
_afae {_gdggf ._acade =_fgge ;};_dcdfa =_ebc .TraceToDirectObject (_dcdfa );_bbbc ,_ddfcc :=_dcdfa .(*_ebc .PdfObjectArray );if !_ddfcc {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bbbc .Len ()!=4&&_bbbc .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_dcdfa =_bbbc .Get (0);
_cgfab ,_ddfcc :=_dcdfa .(*_ebc .PdfObjectName );if !_ddfcc {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cgfab !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_dcdfa =_bbbc .Get (1);
_dcdfa =_ebc .TraceToDirectObject (_dcdfa );_ebcb ,_ddfcc :=_dcdfa .(*_ebc .PdfObjectArray );if !_ddfcc {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_gdggf .ColorantNames =_ebcb ;_dcdfa =_bbbc .Get (2);_ecag ,_cbdbc :=NewPdfColorspaceFromPdfObject (_dcdfa );if _cbdbc !=nil {return nil ,_cbdbc ;};_gdggf .AlternateSpace =_ecag ;_ceae ,_cbdbc :=_adda (_bbbc .Get (3));if _cbdbc !=nil {return nil ,_cbdbc ;
};_gdggf .TintTransform =_ceae ;if _bbbc .Len ()==5{_cccf ,_ffdc :=_acaf (_bbbc .Get (4));if _ffdc !=nil {return nil ,_ffdc ;};_gdggf .Attributes =_cccf ;};return _gdggf ,nil ;};func _ggeef (_gfbc *XObjectImage )error {if _gfbc .SMask ==nil {return nil ;
};_aebbd ,_aafgb :=_gfbc .SMask .(*_ebc .PdfObjectStream );if !_aafgb {_ca .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _ebc .ErrTypeError ;
};_afaeg :=_aebbd .PdfObjectDictionary ;_eacfe :=_afaeg .Get ("\u004d\u0061\u0074t\u0065");if _eacfe ==nil {return nil ;};_cabac ,_cbgad :=_cbddb (_eacfe .(*_ebc .PdfObjectArray ));if _cbgad !=nil {return _cbgad ;};_fdgaaa :=_ebc .MakeArrayFromFloats ([]float64 {_cabac });
_afaeg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fdgaaa );return nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_gfgbc :=&XObjectForm {};_cefgbb :=&_ebc .PdfObjectStream {};_cefgbb .PdfObjectDictionary =_ebc .MakeDict ();_gfgbc ._eaffe =_cefgbb ;return _gfgbc ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_bca :=NewPdfAction ();_bdf :=&PdfActionURI {};_bdf .PdfAction =_bca ;_bca .SetContext (_bdf );return _bdf ;};const (_fdfg =0x00001;_eaca =0x00002;_cabd =0x00004;_egfaa =0x00008;_cfbde =0x00020;_fabfa =0x00040;_egdaf =0x10000;
_cfcbe =0x20000;_bbgb =0x40000;);

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_befdc *XObjectImage )ToImage ()(*Image ,error ){_dbcefe :=&Image {};if _befdc .Height ==nil {return nil ,_cfe .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_dbcefe .Height =*_befdc .Height ;if _befdc .Width ==nil {return nil ,_cfe .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dbcefe .Width =*_befdc .Width ;if _befdc .BitsPerComponent ==nil {switch _befdc .Filter .(type ){case *_ebc .CCITTFaxEncoder ,*_ebc .JBIG2Encoder :_dbcefe .BitsPerComponent =1;
case *_ebc .LZWEncoder ,*_ebc .RunLengthEncoder :_dbcefe .BitsPerComponent =8;default:return nil ,_cfe .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_dbcefe .BitsPerComponent =*_befdc .BitsPerComponent ;};_dbcefe .ColorComponents =_befdc .ColorSpace .GetNumComponents ();_befdc ._febcg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ebc .MakeInteger (int64 (_dbcefe .ColorComponents )));
_gddb ,_cedd :=_ebc .DecodeStream (_befdc ._febcg );if _cedd !=nil {return nil ,_cedd ;};_dbcefe .Data =_gddb ;if _befdc .Decode !=nil {_gbeee ,_afefga :=_befdc .Decode .(*_ebc .PdfObjectArray );if !_afefga {_ca .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cfe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_aagec ,_ddfceg :=_gbeee .ToFloat64Array ();if _ddfceg !=nil {return nil ,_ddfceg ;};_dbcefe ._facag =_aagec ;};return _dbcefe ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ccdd *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ffgd *PdfColorspaceLab )ToPdfObject ()_ebc .PdfObject {_gbec :=_ebc .MakeArray ();_gbec .Append (_ebc .MakeName ("\u004c\u0061\u0062"));_fgda :=_ebc .MakeDict ();if _ffgd .WhitePoint !=nil {_fggc :=_ebc .MakeArray (_ebc .MakeFloat (_ffgd .WhitePoint [0]),_ebc .MakeFloat (_ffgd .WhitePoint [1]),_ebc .MakeFloat (_ffgd .WhitePoint [2]));
_fgda .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fggc );}else {_ca .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _ffgd .BlackPoint !=nil {_egfg :=_ebc .MakeArray (_ebc .MakeFloat (_ffgd .BlackPoint [0]),_ebc .MakeFloat (_ffgd .BlackPoint [1]),_ebc .MakeFloat (_ffgd .BlackPoint [2]));_fgda .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_egfg );
};if _ffgd .Range !=nil {_bcdc :=_ebc .MakeArray (_ebc .MakeFloat (_ffgd .Range [0]),_ebc .MakeFloat (_ffgd .Range [1]),_ebc .MakeFloat (_ffgd .Range [2]),_ebc .MakeFloat (_ffgd .Range [3]));_fgda .Set ("\u0052\u0061\u006eg\u0065",_bcdc );};_gbec .Append (_fgda );
if _ffgd ._agaa !=nil {_ffgd ._agaa .PdfObject =_gbec ;return _ffgd ._agaa ;};return _gbec ;};func _bbdbbg (_adega *_ebc .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cfcgf :=&PdfTilingPattern {};_afac :=_adega .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _afac ==nil {_ca .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cafc ,_cdfcc :=_afac .(*_ebc .PdfObjectInteger );if !_cdfcc {_ca .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_afac );
return nil ,_ebc .ErrTypeError ;};_cfcgf .PaintType =_cafc ;_afac =_adega .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _afac ==nil {_ca .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbed ,_cdfcc :=_afac .(*_ebc .PdfObjectInteger );if !_cdfcc {_ca .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afac );
return nil ,_ebc .ErrTypeError ;};_cfcgf .TilingType =_cbed ;_afac =_adega .Get ("\u0042\u0042\u006f\u0078");if _afac ==nil {_ca .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_afac =_ebc .TraceToDirectObject (_afac );_bbee ,_cdfcc :=_afac .(*_ebc .PdfObjectArray );if !_cdfcc {_ca .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afac );
return nil ,_ebc .ErrTypeError ;};_bdbcc ,_ecgb :=NewPdfRectangle (*_bbee );if _ecgb !=nil {_ca .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ecgb );return nil ,_ecgb ;};_cfcgf .BBox =_bdbcc ;_afac =_adega .Get ("\u0058\u0053\u0074e\u0070");
if _afac ==nil {_ca .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_affa ,_ecgb :=_ebc .GetNumberAsFloat (_afac );if _ecgb !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_affa );
return nil ,_ecgb ;};_cfcgf .XStep =_ebc .MakeFloat (_affa );_afac =_adega .Get ("\u0059\u0053\u0074e\u0070");if _afac ==nil {_ca .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_facfg ,_ecgb :=_ebc .GetNumberAsFloat (_afac );if _ecgb !=nil {_ca .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_facfg );
return nil ,_ecgb ;};_cfcgf .YStep =_ebc .MakeFloat (_facfg );_afac =_adega .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _afac ==nil {_ca .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_adega ,_cdfcc =_ebc .TraceToDirectObject (_afac ).(*_ebc .PdfObjectDictionary );if !_cdfcc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_afac );
};_ccbg ,_ecgb :=NewPdfPageResourcesFromDict (_adega );if _ecgb !=nil {return nil ,_ecgb ;};_cfcgf .Resources =_ccbg ;if _acgeg :=_adega .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_acgeg !=nil {_ecad ,_gacc :=_acgeg .(*_ebc .PdfObjectArray );if !_gacc {_ca .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acgeg );
return nil ,_ebc .ErrTypeError ;};_cfcgf .Matrix =_ecad ;};return _cfcgf ,nil ;};func (_cbbe *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cbbe ._bfef .GetCrypter ()!=nil &&!_cbbe ._bfef .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bddfd :=_cbbe ._fcdfa ;_gbegdf :=_bddfd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gbegdf ==nil {return nil ,nil ;};_aggae ,_aafdd :=_ebc .GetIndirect (_gbegdf );_gbegdf =_ebc .TraceToDirectObject (_gbegdf );if _ebc .IsNullObject (_gbegdf ){_ca .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_fdebcc ,_gegdf :=_ebc .GetDict (_gbegdf );if !_gegdf {_ca .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gbegdf );_ca .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gbegdf );};_ca .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ca .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cbbe ._gebcd {_eafcf :=_cbbe .traverseObjectData (_fdebcc );
if _eafcf !=nil {_ca .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_eafcf );
return nil ,_eafcf ;};};_fegg ,_fdafc :=_cbbe .newPdfAcroFormFromDict (_aggae ,_fdebcc );if _fdafc !=nil {return nil ,_fdafc ;};_fegg ._efeff =!_aafdd ;return _fegg ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_ddeba *pdfSignDictionary )GetSubFilter ()string {_begfg :=_ddeba .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _begfg ==nil {return "";};if _effga ,_bede :=_ebc .GetNameVal (_begfg );_bede {return _effga ;};return "";};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _ebc .PdfObject ;Volume _ebc .PdfObject ;Synchronous _ebc .PdfObject ;Repeat _ebc .PdfObject ;Mix _ebc .PdfObject ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _ebc .StreamEncoder )(*XObjectImage ,error ){_fcfc :=NewXObjectImage ();return UpdateXObjectImageFromImage (_fcfc ,img ,cs ,encoder );};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gcea *PdfOutlineItem )ToPdfObject ()_ebc .PdfObject {_eecgf :=_gcea ._gaab ;_fdaec :=_eecgf .PdfObject .(*_ebc .PdfObjectDictionary );_fdaec .Set ("\u0054\u0069\u0074l\u0065",_gcea .Title );if _gcea .A !=nil {_fdaec .Set ("\u0041",_gcea .A );};if _gadd :=_fdaec .Get ("\u0053\u0045");
_gadd !=nil {_fdaec .Remove ("\u0053\u0045");};if _gcea .C !=nil {_fdaec .Set ("\u0043",_gcea .C );};if _gcea .Dest !=nil {_fdaec .Set ("\u0044\u0065\u0073\u0074",_gcea .Dest );};if _gcea .F !=nil {_fdaec .Set ("\u0046",_gcea .F );};if _gcea .Count !=nil {_fdaec .Set ("\u0043\u006f\u0075n\u0074",_ebc .MakeInteger (*_gcea .Count ));
};if _gcea .Next !=nil {_fdaec .Set ("\u004e\u0065\u0078\u0074",_gcea .Next .ToPdfObject ());};if _gcea .First !=nil {_fdaec .Set ("\u0046\u0069\u0072s\u0074",_gcea .First .ToPdfObject ());};if _gcea .Prev !=nil {_fdaec .Set ("\u0050\u0072\u0065\u0076",_gcea .Prev .GetContext ().GetContainingPdfObject ());
};if _gcea .Last !=nil {_fdaec .Set ("\u004c\u0061\u0073\u0074",_gcea .Last .GetContext ().GetContainingPdfObject ());};if _gcea .Parent !=nil {_fdaec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcea .Parent .GetContext ().GetContainingPdfObject ());
};return _eecgf ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_egfga *PdfFont )ToPdfObject ()_ebc .PdfObject {if _egfga ._cbfg ==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _ebc .MakeNull ();
};return _egfga ._cbfg .ToPdfObject ();};

// String returns a string describing the font descriptor.
func (_eaded *PdfFontDescriptor )String ()string {var _cbda []string ;if _eaded .FontName !=nil {_cbda =append (_cbda ,_eaded .FontName .String ());};if _eaded .FontFamily !=nil {_cbda =append (_cbda ,_eaded .FontFamily .String ());};if _eaded .fontFile !=nil {_cbda =append (_cbda ,_eaded .fontFile .String ());
};if _eaded ._feabd !=nil {_cbda =append (_cbda ,_eaded ._feabd .String ());};_cbda =append (_cbda ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_eaded .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ea .Join (_cbda ,"\u002c\u0020"));
};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_ebc .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_ebc .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};func (_fcaa *PdfReader )newPdfAnnotationProjectionFromDict (_gcef *_ebc .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_facb :=&PdfAnnotationProjection {};_gcbe ,_cadf :=_fcaa .newPdfAnnotationMarkupFromDict (_gcef );if _cadf !=nil {return nil ,_cadf ;
};_facb .PdfAnnotationMarkup =_gcbe ;return _facb ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _ebc .PdfObject ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_ebc .PdfObjectArray ;Domain *_ebc .PdfObjectArray ;Function []PdfFunction ;Extend *_ebc .PdfObjectArray ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gggb *PdfColorspaceSpecialIndexed )ToPdfObject ()_ebc .PdfObject {_afdd :=_ebc .MakeArray (_ebc .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_afdd .Append (_gggb .Base .ToPdfObject ());_afdd .Append (_ebc .MakeInteger (int64 (_gggb .HiVal )));
_afdd .Append (_gggb .Lookup );if _gggb ._ffae !=nil {_gggb ._ffae .PdfObject =_afdd ;return _gggb ._ffae ;};return _afdd ;};func _aecdc (_dadff _ebc .PdfObject )(*PdfFunctionType2 ,error ){_dcbge :=&PdfFunctionType2 {};var _ddeaf *_ebc .PdfObjectDictionary ;
if _cdag ,_dfgg :=_dadff .(*_ebc .PdfIndirectObject );_dfgg {_agdba ,_acacg :=_cdag .PdfObject .(*_ebc .PdfObjectDictionary );if !_acacg {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};
_dcbge ._gbgc =_cdag ;_ddeaf =_agdba ;}else if _acbdbg ,_egcdf :=_dadff .(*_ebc .PdfObjectDictionary );_egcdf {_ddeaf =_acbdbg ;}else {return nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ca .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_ddeaf .String ());
_ebdd ,_dafda :=_ebc .TraceToDirectObject (_ddeaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ebc .PdfObjectArray );if !_dafda {_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cfe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ebdd .Len ()< 0||_ebdd .Len ()%2!=0{_ca .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cfe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_aeaa ,_fbadg :=_ebdd .ToFloat64Array ();if _fbadg !=nil {return nil ,_fbadg ;};_dcbge .Domain =_aeaa ;_ebdd ,_dafda =_ebc .TraceToDirectObject (_ddeaf .Get ("\u0052\u0061\u006eg\u0065")).(*_ebc .PdfObjectArray );if _dafda {if _ebdd .Len ()< 0||_ebdd .Len ()%2!=0{return nil ,_cfe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_egfc ,_ceecgf :=_ebdd .ToFloat64Array ();if _ceecgf !=nil {return nil ,_ceecgf ;};_dcbge .Range =_egfc ;};_ebdd ,_dafda =_ebc .TraceToDirectObject (_ddeaf .Get ("\u0043\u0030")).(*_ebc .PdfObjectArray );if _dafda {_acdb ,_fdbe :=_ebdd .ToFloat64Array ();
if _fdbe !=nil {return nil ,_fdbe ;};_dcbge .C0 =_acdb ;};_ebdd ,_dafda =_ebc .TraceToDirectObject (_ddeaf .Get ("\u0043\u0031")).(*_ebc .PdfObjectArray );if _dafda {_egdg ,_efcaf :=_ebdd .ToFloat64Array ();if _efcaf !=nil {return nil ,_efcaf ;};_dcbge .C1 =_egdg ;
};if len (_dcbge .C0 )!=len (_dcbge .C1 ){_ca .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_ebc .ErrRangeError ;};N ,_fbadg :=_ebc .GetNumberAsFloat (_ebc .TraceToDirectObject (_ddeaf .Get ("\u004e")));
if _fbadg !=nil {_ca .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_ddeaf .String ());return nil ,_fbadg ;};_dcbge .N =N ;
return _dcbge ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gagfa *PdfShadingPatternType2 )ToPdfObject ()_ebc .PdfObject {_gagfa .PdfPattern .ToPdfObject ();_gbecd :=_gagfa .getDict ();if _gagfa .Shading !=nil {_gbecd .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gagfa .Shading .ToPdfObject ());};if _gagfa .Matrix !=nil {_gbecd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gagfa .Matrix );
};if _gagfa .ExtGState !=nil {_gbecd .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gagfa .ExtGState );};return _gagfa ._bcgg ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_dccgb *PdfFieldButton )IsRadio ()bool {return _dccgb .GetType ()==ButtonTypeRadio };func _badf (_aabb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_eadec ,_dgff :=_ebc .GetDict (_aabb .AP );if !_dgff {return nil ,nil ,_cfe .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _eadec ==nil {return nil ,nil ,nil ;};_bgfa ,_dgff :=_ebc .GetArray (_aabb .Rect );if !_dgff ||_bgfa .Len ()!=4{return nil ,nil ,_cfe .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_defe ,_gdfb :=NewPdfRectangle (*_bgfa );
if _gdfb !=nil {return nil ,nil ,_gdfb ;};_ccega :=_ebc .TraceToDirectObject (_eadec .Get ("\u004e"));switch _ddcd :=_ccega .(type ){case *_ebc .PdfObjectStream :_cafdf :=_ddcd ;_fbcdg ,_egbe :=NewXObjectFormFromStream (_cafdf );return _fbcdg ,_defe ,_egbe ;
case *_ebc .PdfObjectDictionary :_fcbfd :=_ddcd ;_efcfc ,_cebdb :=_ebc .GetName (_aabb .AS );if !_cebdb {return nil ,nil ,nil ;};if _fcbfd .Get (*_efcfc )==nil {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_aaaec ,_cebdb :=_ebc .GetStream (_fcbfd .Get (*_efcfc ));if !_cebdb {_ca .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_efcfc );
return nil ,nil ,_cfe .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fabf ,_gacdb :=NewXObjectFormFromStream (_aaaec );return _fabf ,_defe ,_gacdb ;};_ca .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ccega );
return nil ,nil ,_cfe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;