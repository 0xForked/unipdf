//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_a "bufio";_baf "bytes";_bb "encoding/binary";_dbf "errors";_bd "fmt";_bdd "github.com/unidoc/unipdf/v3/common";_be "github.com/unidoc/unipdf/v3/common/license";_da "github.com/unidoc/unipdf/v3/core";_ae "github.com/unidoc/unipdf/v3/core/security";_fc "github.com/unidoc/unipdf/v3/core/security/crypt";_ga "github.com/unidoc/unipdf/v3/internal/cmap";_agc "github.com/unidoc/unipdf/v3/internal/imageutil";_ee "github.com/unidoc/unipdf/v3/internal/sampling";_ceb "github.com/unidoc/unipdf/v3/internal/textencoding";_bgb "github.com/unidoc/unipdf/v3/model/internal/fonts";_ac "github.com/unidoc/unipdf/v3/ps";_bg "github.com/unidoc/unitype";_eg "golang.org/x/xerrors";_g "image";_d "image/color";_ "image/gif";_ "image/png";_af "io";_df "io/ioutil";_ec "math";_cf "math/rand";_ag "os";_gd "regexp";_ce "sort";_db "strconv";_dg "strings";_c "time";_bc "unicode";_f "unicode/utf8";);

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_da .PdfObjectArray ;TI *_da .PdfObjectInteger ;I *_da .PdfObjectArray ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gfa :=NewPdfAction ();_dfc :=&PdfActionTrans {};_dfc .PdfAction =_gfa ;_gfa .SetContext (_dfc );return _dfc ;};func (_afdegc *PdfWriter )copyObjects (){_bgca :=make (map[_da .PdfObject ]_da .PdfObject );_dbgce :=make ([]_da .PdfObject ,0,len (_afdegc ._bafa ));_cgef :=make (map[_da .PdfObject ]struct{},len (_afdegc ._bafa ));_eadgc :=make (map[_da .PdfObject ]struct{});for _ ,_eceef :=range _afdegc ._bafa {_ddaee :=_afdegc .copyObject (_eceef ,_bgca ,_eadgc ,false );if _ ,_gaec :=_eadgc [_eceef ];_gaec {continue ;};_dbgce =append (_dbgce ,_ddaee );_cgef [_ddaee ]=struct{}{};};_afdegc ._bafa =_dbgce ;_afdegc ._fcabg =_cgef ;_afdegc ._dgdec =_afdegc .copyObject (_afdegc ._dgdec ,_bgca ,nil ,false ).(*_da .PdfIndirectObject );_afdegc ._gcbe =_afdegc .copyObject (_afdegc ._gcbe ,_bgca ,nil ,false ).(*_da .PdfIndirectObject );if _afdegc ._ddgdc !=nil {_afdegc ._ddgdc =_afdegc .copyObject (_afdegc ._ddgdc ,_bgca ,nil ,false ).(*_da .PdfIndirectObject );};if _afdegc ._adfe {_cafdff :=make (map[_da .PdfObject ]int64 );for _dadad ,_ebdba :=range _afdegc ._cede {if _fecb ,_aafbb :=_bgca [_dadad ];_aafbb {_cafdff [_fecb ]=_ebdba ;}else {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_afdegc ._cede =_cafdff ;};};

// ToPdfObject implements interface PdfModel.
func (_begg *PdfFilespec )ToPdfObject ()_da .PdfObject {_bgdeb :=_begg .getDict ();_bgdeb .Clear ();_bgdeb .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_bgdeb .SetIfNotNil ("\u0046\u0053",_begg .FS );_bgdeb .SetIfNotNil ("\u0046",_begg .F );_bgdeb .SetIfNotNil ("\u0055\u0046",_begg .UF );_bgdeb .SetIfNotNil ("\u0044\u004f\u0053",_begg .DOS );_bgdeb .SetIfNotNil ("\u004d\u0061\u0063",_begg .Mac );_bgdeb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_begg .Unix );_bgdeb .SetIfNotNil ("\u0049\u0044",_begg .ID );_bgdeb .SetIfNotNil ("\u0056",_begg .V );_bgdeb .SetIfNotNil ("\u0045\u0046",_begg .EF );_bgdeb .SetIfNotNil ("\u0052\u0046",_begg .RF );_bgdeb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_begg .Desc );_bgdeb .SetIfNotNil ("\u0043\u0049",_begg .CI );return _begg ._ecaf ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_aebdc :=PdfColorDeviceRGB {r ,g ,b };return &_aebdc ;};func _beaf (_gcebc _da .PdfObject )(*PdfShading ,error ){_gbeebe :=&PdfShading {};var _fegcfc *_da .PdfObjectDictionary ;if _cdbec ,_cefcd :=_da .GetIndirect (_gcebc );_cefcd {_gbeebe ._ggcdb =_cdbec ;_fdfcf ,_aebaea :=_cdbec .PdfObject .(*_da .PdfObjectDictionary );if !_aebaea {_bdd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_da .ErrTypeError ;};_fegcfc =_fdfcf ;}else if _aaega ,_cgdde :=_da .GetStream (_gcebc );_cgdde {_gbeebe ._ggcdb =_aaega ;_fegcfc =_aaega .PdfObjectDictionary ;}else if _ebgd ,_dbffc :=_da .GetDict (_gcebc );_dbffc {_gbeebe ._ggcdb =_ebgd ;_fegcfc =_ebgd ;}else {_bdd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gcebc );return nil ,_da .ErrTypeError ;};if _fegcfc ==nil {_bdd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_dbf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gcebc =_fegcfc .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gcebc ==nil {_bdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gcebc =_da .TraceToDirectObject (_gcebc );_efdad ,_gfbgc :=_gcebc .(*_da .PdfObjectInteger );if !_gfbgc {_bdd .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gcebc );return nil ,_da .ErrTypeError ;};if *_efdad < 1||*_efdad > 7{_bdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_efdad );return nil ,_da .ErrTypeError ;};_gbeebe .ShadingType =_efdad ;_gcebc =_fegcfc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gcebc ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_faccgg ,_gabdb :=NewPdfColorspaceFromPdfObject (_gcebc );if _gabdb !=nil {_bdd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_gabdb );return nil ,_gabdb ;};_gbeebe .ColorSpace =_faccgg ;_gcebc =_fegcfc .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gcebc !=nil {_gcebc =_da .TraceToDirectObject (_gcebc );_eadag ,_gfaff :=_gcebc .(*_da .PdfObjectArray );if !_gfaff {_bdd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gcebc );return nil ,_da .ErrTypeError ;};_gbeebe .Background =_eadag ;};_gcebc =_fegcfc .Get ("\u0042\u0042\u006f\u0078");if _gcebc !=nil {_gcebc =_da .TraceToDirectObject (_gcebc );_fcbbc ,_dabg :=_gcebc .(*_da .PdfObjectArray );if !_dabg {_bdd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gcebc );return nil ,_da .ErrTypeError ;};_adce ,_dgegf :=NewPdfRectangle (*_fcbbc );if _dgegf !=nil {_bdd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dgegf );return nil ,_dgegf ;};_gbeebe .BBox =_adce ;};_gcebc =_fegcfc .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _gcebc !=nil {_gcebc =_da .TraceToDirectObject (_gcebc );_gagee ,_bgbeg :=_gcebc .(*_da .PdfObjectBool );if !_bgbeg {_bdd .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcebc );return nil ,_da .ErrTypeError ;};_gbeebe .AntiAlias =_gagee ;};switch *_efdad {case 1:_feace ,_edcbg :=_fbfgf (_fegcfc );if _edcbg !=nil {return nil ,_edcbg ;};_feace .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_feace ;return _gbeebe ,nil ;case 2:_fgece ,_bgeee :=_gcdgb (_fegcfc );if _bgeee !=nil {return nil ,_bgeee ;};_fgece .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_fgece ;return _gbeebe ,nil ;case 3:_cdcae ,_bgbfa :=_ecfa (_fegcfc );if _bgbfa !=nil {return nil ,_bgbfa ;};_cdcae .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_cdcae ;return _gbeebe ,nil ;case 4:_effeb ,_gcgaf :=_ecbecb (_fegcfc );if _gcgaf !=nil {return nil ,_gcgaf ;};_effeb .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_effeb ;return _gbeebe ,nil ;case 5:_effaa ,_dbde :=_befg (_fegcfc );if _dbde !=nil {return nil ,_dbde ;};_effaa .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_effaa ;return _gbeebe ,nil ;case 6:_cegdcc ,_gfdaa :=_gbgbg (_fegcfc );if _gfdaa !=nil {return nil ,_gfdaa ;};_cegdcc .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_cegdcc ;return _gbeebe ,nil ;case 7:_cabb ,_bggfea :=_ccda (_fegcfc );if _bggfea !=nil {return nil ,_bggfea ;};_cabb .PdfShading =_gbeebe ;_gbeebe ._gaaeed =_cabb ;return _gbeebe ,nil ;};return nil ,_dbf .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_adabf *PdfField )GetContainingPdfObject ()_da .PdfObject {return _adabf ._dade };func _fcde (_aade _da .PdfObject )(*_da .PdfObjectDictionary ,*fontCommon ,error ){_cgag :=&fontCommon {};if _gadd ,_dfdb :=_aade .(*_da .PdfIndirectObject );_dfdb {_cgag ._fefaf =_gadd .ObjectNumber ;};_efgbb ,_ebea :=_da .GetDict (_aade );if !_ebea {_bdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aade );return nil ,nil ,ErrFontNotSupported ;};_ceccbf ,_ebea :=_da .GetNameVal (_efgbb .Get ("\u0054\u0079\u0070\u0065"));if !_ebea {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _ceccbf !="\u0046\u006f\u006e\u0074"{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_ceccbf ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_da .ErrTypeError ;};_becc ,_ebea :=_da .GetNameVal (_efgbb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ebea {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_cgag ._bcga =_becc ;_edfb ,_ebea :=_da .GetNameVal (_efgbb .Get ("\u004e\u0061\u006d\u0065"));if _ebea {_cgag ._ebdg =_edfb ;};if _becc =="\u0054\u0079\u0070e\u0033"{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_efgbb );return _efgbb ,_cgag ,ErrType3FontNotSupported ;};_ddabb ,_ebea :=_da .GetNameVal (_efgbb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ebea {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _efgbb ,_cgag ,ErrRequiredAttributeMissing ;};_cgag ._eeacc =_ddabb ;_fcacf :=_efgbb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fcacf !=nil {_eaeb ,_bddd :=_cbdf (_fcacf );if _bddd !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bddd );return _efgbb ,_cgag ,_bddd ;};_cgag ._daeea =_eaeb ;};_cbebg :=_efgbb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cbebg !=nil {_cgag ._ecgdf =_da .TraceToDirectObject (_cbebg );_gffdb ,_effg :=_bggfe (_cgag ._ecgdf ,_cgag );if _effg !=nil {return _efgbb ,_cgag ,_effg ;};_cgag ._ecda =_gffdb ;}else if _becc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_becc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cagc ,_bgdc :=_ga .NewCIDSystemInfo (_efgbb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _bgdc !=nil {return _efgbb ,_cgag ,_bgdc ;};_gebfd :=_bd .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cagc .Registry ,_cagc .Ordering );if _ga .IsPredefinedCMap (_gebfd ){_cgag ._ecda ,_bgdc =_ga .LoadPredefinedCMap (_gebfd );if _bgdc !=nil {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gebfd ,_bgdc );};};};return _efgbb ,_cgag ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cbdag *PdfReader )IsEncrypted ()(bool ,error ){return _cbdag ._baeg .IsEncrypted ()};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_da .PdfObject ,error );};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gccec *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gccec .flattenFieldsWithOpts (allannots ,appgen ,nil );};type pdfFontSimple struct{fontCommon ;_gecfe *_da .PdfIndirectObject ;_acfc map[_ceb .CharCode ]float64 ;_defgd _ceb .TextEncoder ;_ecacg _ceb .TextEncoder ;_dcdg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _da .PdfObject ;LastChar _da .PdfObject ;Widths _da .PdfObject ;Encoding _da .PdfObject ;_aegbb map[rune ]_bgb .CharMetrics ;};func (_gfggd *Image )samplesTrimPadding (_bcfcf []uint32 )[]uint32 {_dbabg :=_gfggd .ColorComponents *int (_gfggd .Width )*int (_gfggd .Height );if len (_bcfcf )==_dbabg {return _bcfcf ;};_bdde :=make ([]uint32 ,_dbabg );_gggcd :=int (_gfggd .Width )*_gfggd .ColorComponents ;var _gcgb ,_bdbba ,_fgeda ,_cceg int ;_cfcdb :=_agc .BytesPerLine (int (_gfggd .Width ),int (_gfggd .BitsPerComponent ),_gfggd .ColorComponents );for _gcgb =0;_gcgb < int (_gfggd .Height );_gcgb ++{_bdbba =_gcgb *int (_gfggd .Width );_fgeda =_gcgb *_cfcdb ;for _cceg =0;_cceg < _gggcd ;_cceg ++{_bdde [_bdbba +_cceg ]=_bcfcf [_fgeda +_cceg ];};};return _bdde ;};func _aacda (_eefcd _da .PdfObject )(*PdfFunctionType3 ,error ){_aecfc :=&PdfFunctionType3 {};var _faeg *_da .PdfObjectDictionary ;if _begce ,_edbdf :=_eefcd .(*_da .PdfIndirectObject );_edbdf {_fcce ,_bbfg :=_begce .PdfObject .(*_da .PdfObjectDictionary );if !_bbfg {return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aecfc ._gfgbf =_begce ;_faeg =_fcce ;}else if _eeabe ,_daagf :=_eefcd .(*_da .PdfObjectDictionary );_daagf {_faeg =_eeabe ;}else {return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eaeba ,_aeeac :=_da .TraceToDirectObject (_faeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_aeeac {_bdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eaeba .Len ()!=2{_bdd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dbf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dddb ,_facac :=_eaeba .ToFloat64Array ();if _facac !=nil {return nil ,_facac ;};_aecfc .Domain =_dddb ;_eaeba ,_aeeac =_da .TraceToDirectObject (_faeg .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if _aeeac {if _eaeba .Len ()< 0||_eaeba .Len ()%2!=0{return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aebg ,_fbefb :=_eaeba .ToFloat64Array ();if _fbefb !=nil {return nil ,_fbefb ;};_aecfc .Range =_aebg ;};_eaeba ,_aeeac =_da .TraceToDirectObject (_faeg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_da .PdfObjectArray );if !_aeeac {_bdd .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aecfc .Functions =[]PdfFunction {};for _ ,_dbab :=range _eaeba .Elements (){_agecd ,_fdcgf :=_ffdgg (_dbab );if _fdcgf !=nil {return nil ,_fdcgf ;};_aecfc .Functions =append (_aecfc .Functions ,_agecd );};_eaeba ,_aeeac =_da .TraceToDirectObject (_faeg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_da .PdfObjectArray );if !_aeeac {_bdd .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aecfd ,_facac :=_eaeba .ToFloat64Array ();if _facac !=nil {return nil ,_facac ;};_aecfc .Bounds =_aecfd ;if len (_aecfc .Bounds )!=len (_aecfc .Functions )-1{_bdd .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_aecfc .Bounds ),len (_aecfc .Functions ));return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaeba ,_aeeac =_da .TraceToDirectObject (_faeg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_da .PdfObjectArray );if !_aeeac {_bdd .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fegcf ,_facac :=_eaeba .ToFloat64Array ();if _facac !=nil {return nil ,_facac ;};_aecfc .Encode =_fegcf ;if len (_aecfc .Encode )!=2*len (_aecfc .Functions ){_bdd .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_aecfc .Encode ),len (_aecfc .Functions ));return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _aecfc ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_gcag *PdfColorspaceDeviceN )GetNumComponents ()int {return _gcag .ColorantNames .Len ()};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;BitsPerFlag *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};func (_bee *PdfReader )newPdfActionGoTo3DViewFromDict (_bbec *_da .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bbec .Get ("\u0054\u0041"),V :_bbec .Get ("\u0056")},nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_aebec *PdfAcroForm ,_ggba *PdfField ,_eced *PdfAnnotationWidget )(*_da .PdfObjectDictionary ,error );};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_ecff *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _ecff ._dgaec ==nil {_ecff ._dgaec =_ac .NewPSExecutor (_ecff .Program );};var _edbbc []_ac .PSObject ;for _ ,_agfc :=range xVec {_edbbc =append (_edbbc ,_ac .MakeReal (_agfc ));};_bedbf ,_dafbe :=_ecff ._dgaec .Execute (_edbbc );if _dafbe !=nil {return nil ,_dafbe ;};_ggdg ,_dafbe :=_ac .PSObjectArrayToFloat64Array (_bedbf );if _dafbe !=nil {return nil ,_dafbe ;};return _ggdg ,nil ;};func (_afca *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// ToPdfObject implements interface PdfModel.
func (_cffg *PdfAnnotationPolygon )ToPdfObject ()_da .PdfObject {_cffg .PdfAnnotation .ToPdfObject ();_gbcb :=_cffg ._dda ;_gfad :=_gbcb .PdfObject .(*_da .PdfObjectDictionary );_cffg .PdfAnnotationMarkup .appendToPdfDictionary (_gfad );_gfad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_gfad .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cffg .Vertices );_gfad .SetIfNotNil ("\u004c\u0045",_cffg .LE );_gfad .SetIfNotNil ("\u0042\u0053",_cffg .BS );_gfad .SetIfNotNil ("\u0049\u0043",_cffg .IC );_gfad .SetIfNotNil ("\u0042\u0045",_cffg .BE );_gfad .SetIfNotNil ("\u0049\u0054",_cffg .IT );_gfad .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cffg .Measure );return _gbcb ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_dcdb :=NewPdfAnnotation ();_bbed :=&PdfAnnotation3D {};_bbed .PdfAnnotation =_dcdb ;_dcdb .SetContext (_bbed );return _bbed ;};func _bdedc ()string {if len (_aafbg )> 0{return _aafbg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_da .PdfObject ;};func (_dff *PdfReader )newPdfAnnotationScreenFromDict (_ddb *_da .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_deba :=PdfAnnotationScreen {};_deba .T =_ddb .Get ("\u0054");_deba .MK =_ddb .Get ("\u004d\u004b");_deba .A =_ddb .Get ("\u0041");_deba .AA =_ddb .Get ("\u0041\u0041");return &_deba ,nil ;};func (_fgf *PdfReader )newPdfActionSetOCGStateFromDict (_aacc *_da .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_aacc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_aacc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_gad :=NewPdfAnnotation ();_bcfg :=&PdfAnnotationSquiggly {};_bcfg .PdfAnnotation =_gad ;_bcfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gad .SetContext (_bcfg );return _bcfg ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _da .StreamEncoder ;Intent _da .PdfObject ;ImageMask _da .PdfObject ;Mask _da .PdfObject ;Matte _da .PdfObject ;Decode _da .PdfObject ;Interpolate _da .PdfObject ;Alternatives _da .PdfObject ;SMask _da .PdfObject ;SMaskInData _da .PdfObject ;Name _da .PdfObject ;StructParent _da .PdfObject ;ID _da .PdfObject ;OPI _da .PdfObject ;Metadata _da .PdfObject ;OC _da .PdfObject ;Stream []byte ;_edcgf *_da .PdfObjectStream ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_abbg *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bdd .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bdd .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_bdd .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bdd .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_egdac ,_aege :=_agc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afefc ,img ._eafbb );if _aege !=nil {return Image {},_aege ;};_gagcd ,_aege :=_agc .NRGBAConverter .Convert (_egdac );if _aege !=nil {return Image {},_aege ;};return _bcfdb (_gagcd .Base ()),nil ;};

// Encoder returns the font's text encoder.
func (_aadae *pdfFontSimple )Encoder ()_ceb .TextEncoder {if _aadae ._defgd !=nil {return _aadae ._defgd ;};if _aadae ._ecacg !=nil {return _aadae ._ecacg ;};_aebdf ,_ :=_ceb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _aebdf ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gfcb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gfcb .Alternate ==nil {_bdd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _gfcb .N ==1{_bdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_fddc :=NewPdfColorspaceDeviceGray ();return _fddc .ColorToRGB (color );}else if _gfcb .N ==3{_bdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _gfcb .N ==4{_bdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_bfdb :=NewPdfColorspaceDeviceCMYK ();return _bfdb .ColorToRGB (color );}else {return nil ,_dbf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_bdd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gfcb );return _gfcb .Alternate .ColorToRGB (color );};

// Encoder returns the font's text encoder.
func (_bcef pdfCIDFontType0 )Encoder ()_ceb .TextEncoder {return _bcef ._addbb };

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _da .PdfObject ;T3DV _da .PdfObject ;T3DA _da .PdfObject ;T3DI _da .PdfObject ;T3DB _da .PdfObject ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_egace *Image )ToGoImage ()(_g .Image ,error ){_bdd .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gfaa ,_acgf :=_agc .NewImage (int (_egace .Width ),int (_egace .Height ),int (_egace .BitsPerComponent ),_egace .ColorComponents ,_egace .Data ,_egace ._afefc ,_egace ._eafbb );if _acgf !=nil {return nil ,_acgf ;};return _gfaa ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_adbc *_da .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_geggg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if _geggg .Alternate ==nil {if _geggg .N ==1{_dcfd :=NewPdfColorspaceDeviceGray ();return _dcfd .ColorFromPdfObjects (objects );}else if _geggg .N ==3{_eadg :=NewPdfColorspaceDeviceRGB ();return _eadg .ColorFromPdfObjects (objects );}else if _geggg .N ==4{_acfd :=NewPdfColorspaceDeviceCMYK ();return _acfd .ColorFromPdfObjects (objects );}else {return nil ,_dbf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _geggg .Alternate .ColorFromPdfObjects (objects );};func (_dfa *PdfReader )newPdfAnnotationPrinterMarkFromDict (_gbb *_da .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dac :=PdfAnnotationPrinterMark {};_dac .MN =_gbb .Get ("\u004d\u004e");return &_dac ,nil ;};

// Val returns the color value.
func (_edce *PdfColorDeviceGray )Val ()float64 {return float64 (*_edce )};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ddba *PdfOutline )ToPdfObject ()_da .PdfObject {_gddf :=_ddba ._cdab ;_gdbfg :=_gddf .PdfObject .(*_da .PdfObjectDictionary );_gdbfg .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ddba .First !=nil {_gdbfg .Set ("\u0046\u0069\u0072s\u0074",_ddba .First .ToPdfObject ());};if _ddba .Last !=nil {_gdbfg .Set ("\u004c\u0061\u0073\u0074",_ddba .Last .GetContext ().GetContainingPdfObject ());};if _ddba .Parent !=nil {_gdbfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddba .Parent .GetContext ().GetContainingPdfObject ());};if _ddba .Count !=nil {_gdbfg .Set ("\u0043\u006f\u0075n\u0074",_da .MakeInteger (*_ddba .Count ));};return _gddf ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_aba *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// GetContentStreams returns the content stream as an array of strings.
func (_cfdc *PdfPage )GetContentStreams ()([]string ,error ){_cddeac :=_cfdc .GetContentStreamObjs ();var _gccac []string ;for _ ,_aecab :=range _cddeac {_dcbac ,_aeece :=_efcg (_aecab );if _aeece !=nil {return nil ,_aeece ;};_gccac =append (_gccac ,_dcbac );};return _gccac ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_fbgfd *PdfFont )CharcodesToUnicode (charcodes []_ceb .CharCode )[]rune {_bfbff ,_ ,_ :=_fbgfd .CharcodesToUnicodeWithStats (charcodes );return _bfbff ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_fcgdc *PdfPage )GetAllContentStreams ()(string ,error ){_dfcda ,_gcbceb :=_fcgdc .GetContentStreams ();if _gcbceb !=nil {return "",_gcbceb ;};return _dg .Join (_dfcda ,"\u0020"),nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_bdgcd *PdfColorspaceDeviceN )ToPdfObject ()_da .PdfObject {_eebf :=_da .MakeArray (_da .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_eebf .Append (_bdgcd .ColorantNames );_eebf .Append (_bdgcd .AlternateSpace .ToPdfObject ());_eebf .Append (_bdgcd .TintTransform .ToPdfObject ());if _bdgcd .Attributes !=nil {_eebf .Append (_bdgcd .Attributes .ToPdfObject ());};if _bdgcd ._agggb !=nil {_bdgcd ._agggb .PdfObject =_eebf ;return _bdgcd ._agggb ;};return _eebf ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_gfgbf *_da .PdfIndirectObject ;};func (_gab *PdfReader )newPdfActionGotoFromDict (_fegd *_da .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fegd .Get ("\u0044")},nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_facgc *pdfSignDictionary )GetSubFilter ()string {_badag :=_facgc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _badag ==nil {return "";};if _dcbf ,_bbdfd :=_da .GetNameVal (_badag );_bbdfd {return _dcbf ;};return "";};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_dcaea *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gecab []*PdfField ;if _dcaea .AcroForm !=nil {_gecab =_dcaea .AcroForm .AllFields ();};_effbf :=make (map[*PdfField ]struct{},len (_gecab ));for _ ,_edfd :=range _gecab {_effbf [_edfd ]=struct{}{};};for _ ,_fgeag :=range _dcaea .PageList {_dgebf ,_daaag :=_fgeag .GetAnnotations ();if _daaag !=nil {return false ,_daaag ;};for _ ,_eaada :=range _dgebf {_aedbb ,_eecgdb :=_eaada .GetContext ().(*PdfAnnotationWidget );if !_eecgdb {continue ;};_fcffc :=_aedbb .Field ();if _fcffc ==nil {return true ,nil ;};if _ ,_edgb :=_effbf [_fcffc ];!_edgb {return true ,nil ;};};};return false ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bddf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_aece ,_ebacc :=color .(*PdfColorCalRGB );if !_ebacc {_bdd .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaec :=_aece .A ();_gadg :=_aece .B ();_ddef :=_aece .C ();X :=_bddf .Matrix [0]*_ec .Pow (_aaec ,_bddf .Gamma [0])+_bddf .Matrix [3]*_ec .Pow (_gadg ,_bddf .Gamma [1])+_bddf .Matrix [6]*_ec .Pow (_ddef ,_bddf .Gamma [2]);Y :=_bddf .Matrix [1]*_ec .Pow (_aaec ,_bddf .Gamma [0])+_bddf .Matrix [4]*_ec .Pow (_gadg ,_bddf .Gamma [1])+_bddf .Matrix [7]*_ec .Pow (_ddef ,_bddf .Gamma [2]);Z :=_bddf .Matrix [2]*_ec .Pow (_aaec ,_bddf .Gamma [0])+_bddf .Matrix [5]*_ec .Pow (_gadg ,_bddf .Gamma [1])+_bddf .Matrix [8]*_ec .Pow (_ddef ,_bddf .Gamma [2]);_accb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fbbac :=-0.969256*X +1.875992*Y +0.041556*Z ;_eedg :=0.055648*X +-0.204043*Y +1.057311*Z ;_accb =_ec .Min (_ec .Max (_accb ,0),1.0);_fbbac =_ec .Min (_ec .Max (_fbbac ,0),1.0);_eedg =_ec .Min (_ec .Max (_eedg ,0),1.0);return NewPdfColorDeviceRGB (_accb ,_fbbac ,_eedg ),nil ;};

// HasFontByName checks if has font resource by name.
func (_dadce *PdfPage )HasFontByName (name _da .PdfObjectName )bool {_bbcdc ,_fddb :=_dadce .Resources .Font .(*_da .PdfObjectDictionary );if !_fddb {return false ;};if _bafeb :=_bbcdc .Get (name );_bafeb !=nil {return true ;};return false ;};func (_aedg *PdfReader )newPdfActionURIFromDict (_acbd *_da .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_acbd .Get ("\u0055\u0052\u0049"),IsMap :_acbd .Get ("\u0049\u0073\u004da\u0070")},nil ;};func _eebfa (_beda []byte )bool {if len (_beda )< 4{return true ;};for _gagd :=range _beda [:4]{_daebb :=rune (_gagd );if !_bc .Is (_bc .ASCII_Hex_Digit ,_daebb )&&!_bc .IsSpace (_daebb ){return true ;};};return false ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_cdgg :=&PdfColorspaceCalRGB {};_cdgg .BlackPoint =[]float64 {0.0,0.0,0.0};_cdgg .Gamma =[]float64 {1.0,1.0,1.0};_cdgg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _cdgg ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_fegf *PdfAnnotation )ToPdfObject ()_da .PdfObject {_cgdf :=_fegf ._dda ;_acda :=_cgdf .PdfObject .(*_da .PdfObjectDictionary );_acda .Clear ();_acda .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0041\u006e\u006eo\u0074"));_acda .SetIfNotNil ("\u0052\u0065\u0063\u0074",_fegf .Rect );_acda .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fegf .Contents );_acda .SetIfNotNil ("\u0050",_fegf .P );_acda .SetIfNotNil ("\u004e\u004d",_fegf .NM );_acda .SetIfNotNil ("\u004d",_fegf .M );_acda .SetIfNotNil ("\u0046",_fegf .F );_acda .SetIfNotNil ("\u0041\u0050",_fegf .AP );_acda .SetIfNotNil ("\u0041\u0053",_fegf .AS );_acda .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_fegf .Border );_acda .SetIfNotNil ("\u0043",_fegf .C );_acda .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fegf .StructParent );_acda .SetIfNotNil ("\u004f\u0043",_fegf .OC );return _cgdf ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _da .PdfObject ;T _da .PdfObject ;Operation _da .PdfObject ;};

// Subtype returns the font's "Subtype" field.
func (_febd *PdfFont )Subtype ()string {_aacbc :=_febd .baseFields ()._bcga ;if _cddda ,_bcagb :=_febd ._fdbf .(*pdfFontType0 );_bcagb {_aacbc =_aacbc +"\u003a"+_cddda .DescendantFont .Subtype ();};return _aacbc ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _da .PdfObject ;Dest _da .PdfObject ;H _da .PdfObject ;PA _da .PdfObject ;QuadPoints _da .PdfObject ;BS _da .PdfObject ;_eba *PdfAction ;_afde *PdfReader ;};func (_dfd *PdfReader )newPdfAnnotation3DFromDict (_aacb *_da .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ffc :=PdfAnnotation3D {};_ffc .T3DD =_aacb .Get ("\u0033\u0044\u0044");_ffc .T3DV =_aacb .Get ("\u0033\u0044\u0056");_ffc .T3DA =_aacb .Get ("\u0033\u0044\u0041");_ffc .T3DI =_aacb .Get ("\u0033\u0044\u0049");_ffc .T3DB =_aacb .Get ("\u0033\u0044\u0042");return &_ffc ,nil ;};func (_gcgca fontCommon )isCIDFont ()bool {if _gcgca ._bcga ==""{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gcgca );};_bfabc :=false ;switch _gcgca ._bcga {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bfabc =true ;};_bdd .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bfabc ,_gcgca );return _bfabc ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;RD _da .PdfObject ;};func (_bbea *PdfReader )newPdfActionGotoEFromDict (_eag *_da .PdfObjectDictionary )(*PdfActionGoToE ,error ){_aee ,_gdc :=_ade (_eag .Get ("\u0046"));if _gdc !=nil {return nil ,_gdc ;};return &PdfActionGoToE {D :_eag .Get ("\u0044"),NewWindow :_eag .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_eag .Get ("\u0054"),F :_aee },nil ;};

// String returns a human readable description of `fontfile`.
func (_daadeb *fontFile )String ()string {_bbfdd :="\u005b\u004e\u006f\u006e\u0065\u005d";if _daadeb ._cfac !=nil {_bbfdd =_daadeb ._cfac .String ();};return _bd .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_daadeb ._gabeg ,_bbfdd );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fbagg ,_abcgf :=NewStandard14Font (basefont );if _abcgf !=nil {panic (_bd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _fbagg ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_bgbcb *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_dbf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_beffg :=&PdfColorPattern {};_cbgf ,_fbbb :=objects [len (objects )-1].(*_da .PdfObjectName );if !_fbbb {_bdd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_beffg .PatternName =*_cbgf ;if len (objects )> 1{_cccf :=objects [0:len (objects )-1];if _bgbcb .UnderlyingCS ==nil {_bdd .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_dbf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_begb ,_ccgd :=_bgbcb .UnderlyingCS .ColorFromPdfObjects (_cccf );if _ccgd !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_ccgd );return nil ,_ccgd ;};_beffg .Color =_begb ;};return _beffg ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_da .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject returns a stream object.
func (_dddfc *XObjectImage )ToPdfObject ()_da .PdfObject {_edacbd :=_dddfc ._edcgf ;_bageg :=_edacbd .PdfObjectDictionary ;if _dddfc .Filter !=nil {_bageg =_dddfc .Filter .MakeStreamDict ();_edacbd .PdfObjectDictionary =_bageg ;};_bageg .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bageg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0049\u006d\u0061g\u0065"));_bageg .Set ("\u0057\u0069\u0064t\u0068",_da .MakeInteger (*(_dddfc .Width )));_bageg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_da .MakeInteger (*(_dddfc .Height )));if _dddfc .BitsPerComponent !=nil {_bageg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_da .MakeInteger (*(_dddfc .BitsPerComponent )));};if _dddfc .ColorSpace !=nil {_bageg .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dddfc .ColorSpace .ToPdfObject ());};_bageg .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_dddfc .Intent );_bageg .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_dddfc .ImageMask );_bageg .SetIfNotNil ("\u004d\u0061\u0073\u006b",_dddfc .Mask );_bageg .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_dddfc .Decode );_bageg .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_dddfc .Interpolate );_bageg .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_dddfc .Alternatives );_bageg .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_dddfc .SMask );_bageg .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_dddfc .SMaskInData );_bageg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dddfc .Matte );_bageg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dddfc .Name );_bageg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dddfc .StructParent );_bageg .SetIfNotNil ("\u0049\u0044",_dddfc .ID );_bageg .SetIfNotNil ("\u004f\u0050\u0049",_dddfc .OPI );_bageg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dddfc .Metadata );_bageg .SetIfNotNil ("\u004f\u0043",_dddfc .OC );_bageg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_dddfc .Stream ))));_edacbd .Stream =_dddfc .Stream ;return _edacbd ;};

// String returns a string that describes `font`.
func (_ffff *PdfFont )String ()string {_faf :="";if _ffff ._fdbf .Encoder ()!=nil {_faf =_ffff ._fdbf .Encoder ().String ();};return _bd .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ffff ._fdbf ,_ffff .baseFields ().coreString (),_faf );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbce *PdfColorspaceDeviceGray )ToPdfObject ()_da .PdfObject {return _da .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_gefgdc *pdfFontSimple )addEncoding ()error {var (_edeae string ;_dadg map[_ceb .CharCode ]_ceb .GlyphName ;_cbed _ceb .SimpleEncoder ;);if _gefgdc .Encoder ()!=nil {_edcb ,_accba :=_gefgdc .Encoder ().(_ceb .SimpleEncoder );if _accba &&_edcb !=nil {_edeae =_edcb .BaseName ();};};if _gefgdc .Encoding !=nil {_agcdg ,_cbggg ,_ccbb :=_gefgdc .getFontEncoding ();if _ccbb !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gefgdc ._eeacc ,_gefgdc ._bcga ,_gefgdc .Encoding ,_gefgdc .Encoding ,_ccbb );return _ccbb ;};if _agcdg !=""{_edeae =_agcdg ;};_cbed ,_ccbb =_ceb .NewSimpleTextEncoder (_edeae ,_cbggg );if _ccbb !=nil {return _ccbb ;};};if _cbed ==nil {_adde :=_gefgdc ._daeea ;if _adde !=nil {switch _gefgdc ._bcga {case "\u0054\u0079\u0070e\u0031":if _adde .fontFile !=nil &&_adde .fontFile ._cfac !=nil {_bdd .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_cbed =_adde .fontFile ._cfac ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _adde ._eecgd !=nil {_bdd .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_edga ,_cdfed :=_adde ._eecgd .MakeEncoder ();if _cdfed ==nil {_cbed =_edga ;};};};};};if _cbed !=nil {if _dadg !=nil {_bdd .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dadg ,_gefgdc .baseFields ());_cbed =_ceb .ApplyDifferences (_cbed ,_dadg );};_gefgdc .SetEncoder (_cbed );};return nil ;};var _fedfg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _af .ReadSeeker )(*PdfReader ,error ){_baaf :=&PdfReader {_aaccg :rs ,_gebbg :map[_da .PdfObject ]struct{}{},_ccfcg :_cebdcb (),_cdffd :true };_bdfad ,_cegdc :=_da .NewParser (rs );if _cegdc !=nil {return nil ,_cegdc ;};_baaf ._baeg =_bdfad ;_eadaf ,_cegdc :=_baaf .IsEncrypted ();if _cegdc !=nil {return nil ,_cegdc ;};if !_eadaf {_cegdc =_baaf .loadStructure ();if _cegdc !=nil {return nil ,_cegdc ;};};return _baaf ,nil ;};func _afdg (_dddd _da .PdfObject )(*PdfPattern ,error ){_gedda :=&PdfPattern {};var _facacg *_da .PdfObjectDictionary ;if _cbcb ,_eaadc :=_da .GetIndirect (_dddd );_eaadc {_gedda ._febc =_cbcb ;_cacgd ,_ddeed :=_cbcb .PdfObject .(*_da .PdfObjectDictionary );if !_ddeed {_bdd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cbcb .PdfObject );return nil ,_da .ErrTypeError ;};_facacg =_cacgd ;}else if _deed ,_dcff :=_da .GetStream (_dddd );_dcff {_gedda ._febc =_deed ;_facacg =_deed .PdfObjectDictionary ;}else {_bdd .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dddd );return nil ,_da .ErrTypeError ;};_eeacg :=_facacg .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _eeacg ==nil {_bdd .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_fcee ,_fafa :=_eeacg .(*_da .PdfObjectInteger );if !_fafa {_bdd .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eeacg );return nil ,_da .ErrTypeError ;};if *_fcee !=1&&*_fcee !=2{_bdd .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fcee );return nil ,_da .ErrRangeError ;};_gedda .PatternType =int64 (*_fcee );switch *_fcee {case 1:_fdeb ,_ccabc :=_geca (_facacg );if _ccabc !=nil {return nil ,_ccabc ;};_fdeb .PdfPattern =_gedda ;_gedda ._bece =_fdeb ;return _gedda ,nil ;case 2:_defab ,_fegef :=_fedgf (_facacg );if _fegef !=nil {return nil ,_fegef ;};_defab .PdfPattern =_gedda ;_gedda ._bece =_defab ;return _gedda ,nil ;};return nil ,_dbf .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// SetOCProperties sets the optional content properties.
func (_cgbde *PdfWriter )SetOCProperties (ocProperties _da .PdfObject )error {_ggac :=_cgbde ._dgbe ;if ocProperties !=nil {_bdd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_ggac .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cgbde .addObjects (ocProperties );};return nil ;};const (_cbbca =0x00001;_fgcfc =0x00002;_ffffa =0x00004;_dcecg =0x00008;_abaeg =0x00020;_daaa =0x00040;_fdag =0x10000;_fafb =0x20000;_gfda =0x40000;);

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _da .PdfObject ;Movie _da .PdfObject ;A _da .PdfObject ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_dedfc *PdfReader )GetNamedDestinations ()(_da .PdfObject ,error ){_ccegc :=_da .ResolveReference (_dedfc ._edcc .Get ("\u004e\u0061\u006de\u0073"));if _ccegc ==nil {return nil ,nil ;};if !_dedfc ._cdffd {_ccace :=_dedfc .traverseObjectData (_ccegc );if _ccace !=nil {return nil ,_ccace ;};};return _ccegc ,nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_da .PdfObject ;GetContainingPdfObject ()_da .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cggd *PdfAnnotationCircle )ToPdfObject ()_da .PdfObject {_cggd .PdfAnnotation .ToPdfObject ();_ffgb :=_cggd ._dda ;_fba :=_ffgb .PdfObject .(*_da .PdfObjectDictionary );_cggd .PdfAnnotationMarkup .appendToPdfDictionary (_fba );_fba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_fba .SetIfNotNil ("\u0042\u0053",_cggd .BS );_fba .SetIfNotNil ("\u0049\u0043",_cggd .IC );_fba .SetIfNotNil ("\u0042\u0045",_cggd .BE );_fba .SetIfNotNil ("\u0052\u0044",_cggd .RD );return _ffgb ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_dc :=NewPdfAction ();_ca :=&PdfActionLaunch {};_ca .PdfAction =_dc ;_dc .SetContext (_ca );return _ca ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fggd *PdfFieldButton )GetType ()ButtonType {_dgdc :=ButtonTypeCheckbox ;if _fggd .Ff !=nil {if (uint32 (*_fggd .Ff )&FieldFlagPushbutton .Mask ())> 0{_dgdc =ButtonTypePush ;}else if (uint32 (*_fggd .Ff )&FieldFlagRadio .Mask ())> 0{_dgdc =ButtonTypeRadio ;};};return _dgdc ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gebfe *PdfReader )PageFromIndirectObject (ind *_da .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gebfe .PageList )!=len (_gebfe ._fgcfe ){return nil ,0,_dbf .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _ffad ,_cedd :=range _gebfe ._fgcfe {if _cedd ==ind {return _gebfe .PageList [_ffad ],_ffad +1,nil ;};};return nil ,0,_dbf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_fggaf *PdfRectangle )Normalize (){if _fggaf .Llx > _fggaf .Urx {_fggaf .Llx ,_fggaf .Urx =_fggaf .Urx ,_fggaf .Llx ;};if _fggaf .Lly > _fggaf .Ury {_fggaf .Lly ,_fggaf .Ury =_fggaf .Ury ,_fggaf .Lly ;};};

// GetBorderWidth returns the border style's width.
func (_abb *PdfBorderStyle )GetBorderWidth ()float64 {if _abb .W ==nil {return 1;};return *_abb .W ;};func (_eecf *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_cgee *PdfReader )newPdfAnnotationInkFromDict (_bgf *_da .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ggf :=PdfAnnotationInk {};_dggf ,_dcb :=_cgee .newPdfAnnotationMarkupFromDict (_bgf );if _dcb !=nil {return nil ,_dcb ;};_ggf .PdfAnnotationMarkup =_dggf ;_ggf .InkList =_bgf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ggf .BS =_bgf .Get ("\u0042\u0053");return &_ggf ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ffbeb *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ffbeb ._bece .(*PdfTilingPattern );};func _fgedb (_dgcee _da .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dfaab :=&PdfPageResourcesColorspaces {};if _gcefd ,_ggdag :=_dgcee .(*_da .PdfIndirectObject );_ggdag {_dfaab ._eged =_gcefd ;_dgcee =_gcefd .PdfObject ;};_gbffa ,_bdaeag :=_da .GetDict (_dgcee );if !_bdaeag {return nil ,_dbf .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dfaab .Names =[]string {};_dfaab .Colorspaces =map[string ]PdfColorspace {};for _ ,_bacaf :=range _gbffa .Keys (){_gabcd :=_gbffa .Get (_bacaf );_dfaab .Names =append (_dfaab .Names ,string (_bacaf ));_geaed ,_gabac :=NewPdfColorspaceFromPdfObject (_gabcd );if _gabac !=nil {return nil ,_gabac ;};_dfaab .Colorspaces [string (_bacaf )]=_geaed ;};return _dfaab ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_defd *Outline )ToPdfOutline ()*PdfOutline {_ccbce :=NewPdfOutline ();var _caege []*PdfOutlineItem ;var _efbc int64 ;var _bfffc *PdfOutlineItem ;for _ ,_ddde :=range _defd .Entries {_bgee ,_acecg :=_ddde .ToPdfOutlineItem ();_bgee .Parent =&_ccbce .PdfOutlineTreeNode ;if _bfffc !=nil {_bfffc .Next =&_bgee .PdfOutlineTreeNode ;_bgee .Prev =&_bfffc .PdfOutlineTreeNode ;};_caege =append (_caege ,_bgee );_efbc +=_acecg ;_bfffc =_bgee ;};_abdb :=int64 (len (_caege ));_efbc +=int64 (_abdb );if _abdb > 0{_ccbce .First =&_caege [0].PdfOutlineTreeNode ;_ccbce .Last =&_caege [_abdb -1].PdfOutlineTreeNode ;_ccbce .Count =&_efbc ;};return _ccbce ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_da .PdfObjectStream )(*XObjectForm ,error ){_cfeab :=&XObjectForm {};_cfeab ._efcga =stream ;_bcbgf :=*(stream .PdfObjectDictionary );_aebea ,_gegc :=_da .NewEncoderFromStream (stream );if _gegc !=nil {return nil ,_gegc ;};_cfeab .Filter =_aebea ;if _baab :=_bcbgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_baab !=nil {_afaee ,_gdecb :=_baab .(*_da .PdfObjectName );if !_gdecb {return nil ,_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_afaee !="\u0046\u006f\u0072\u006d"{_bdd .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_dbf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _ecgeb :=_bcbgf .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_ecgeb !=nil {_cfeab .FormType =_ecgeb ;};if _dcaf :=_bcbgf .Get ("\u0042\u0042\u006f\u0078");_dcaf !=nil {_cfeab .BBox =_dcaf ;};if _fdgdd :=_bcbgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fdgdd !=nil {_cfeab .Matrix =_fdgdd ;};if _afede :=_bcbgf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_afede !=nil {_afede =_da .TraceToDirectObject (_afede );_dfafg ,_bgdab :=_afede .(*_da .PdfObjectDictionary );if !_bgdab {_bdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_da .ErrTypeError ;};_cadgg ,_cgcgb :=NewPdfPageResourcesFromDict (_dfafg );if _cgcgb !=nil {_bdd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_cgcgb ;};_cfeab .Resources =_cadgg ;_bdd .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_cfeab .Resources );};_cfeab .Group =_bcbgf .Get ("\u0047\u0072\u006fu\u0070");_cfeab .Ref =_bcbgf .Get ("\u0052\u0065\u0066");_cfeab .MetaData =_bcbgf .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_cfeab .PieceInfo =_bcbgf .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cfeab .LastModified =_bcbgf .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cfeab .StructParent =_bcbgf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cfeab .StructParents =_bcbgf .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cfeab .OPI =_bcbgf .Get ("\u004f\u0050\u0049");_cfeab .OC =_bcbgf .Get ("\u004f\u0043");_cfeab .Name =_bcbgf .Get ("\u004e\u0061\u006d\u0065");_cfeab .Stream =stream .Stream ;return _cfeab ,nil ;};

// GetOutlineTree returns the outline tree.
func (_eafeb *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _eafeb ._dcggc };

// ColorToRGB converts an Indexed color to an RGB color.
func (_fgaa *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fgaa .Base ==nil {return nil ,_dbf .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _fgaa .Base .ColorToRGB (color );};func (_bbdbde *Image )samplesAddPadding (_bdcaae []uint32 )[]uint32 {_fgdg :=_agc .BytesPerLine (int (_bbdbde .Width ),int (_bbdbde .BitsPerComponent ),_bbdbde .ColorComponents )*(8/int (_bbdbde .BitsPerComponent ));_ddacc :=_fgdg *int (_bbdbde .Height );if len (_bdcaae )==_ddacc {return _bdcaae ;};_ccdde :=make ([]uint32 ,_ddacc );_ggecf :=int (_bbdbde .Width )*_bbdbde .ColorComponents ;for _gfce :=0;_gfce < int (_bbdbde .Height );_gfce ++{_aabf :=_gfce *int (_bbdbde .Width );_aegdc :=_gfce *_fgdg ;for _ffed :=0;_ffed < _ggecf ;_ffed ++{_ccdde [_aegdc +_ffed ]=_bdcaae [_aabf +_ffed ];};};return _ccdde ;};

// Add appends a top level outline item to the outline.
func (_dbfe *Outline )Add (item *OutlineItem ){_dbfe .Entries =append (_dbfe .Entries ,item )};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_bceeb *XObjectImage )ToImage ()(*Image ,error ){_ccfg :=&Image {};if _bceeb .Height ==nil {return nil ,_dbf .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ccfg .Height =*_bceeb .Height ;if _bceeb .Width ==nil {return nil ,_dbf .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ccfg .Width =*_bceeb .Width ;if _bceeb .BitsPerComponent ==nil {return nil ,_dbf .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_ccfg .BitsPerComponent =*_bceeb .BitsPerComponent ;_ccfg .ColorComponents =_bceeb .ColorSpace .GetNumComponents ();_bceeb ._edcgf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_da .MakeInteger (int64 (_ccfg .ColorComponents )));_dbcgd ,_edae :=_da .DecodeStream (_bceeb ._edcgf );if _edae !=nil {return nil ,_edae ;};_ccfg .Data =_dbcgd ;if _bceeb .Decode !=nil {_cfefg ,_fgdb :=_bceeb .Decode .(*_da .PdfObjectArray );if !_fgdb {_bdd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_dbf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_efgcf ,_bfae :=_cfefg .ToFloat64Array ();if _bfae !=nil {return nil ,_bfae ;};_ccfg ._eafbb =_efgcf ;};return _ccfg ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aeebb *_da .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ecgc *PdfAnnotationFreeText )ToPdfObject ()_da .PdfObject {_ecgc .PdfAnnotation .ToPdfObject ();_cbeb :=_ecgc ._dda ;_caeg :=_cbeb .PdfObject .(*_da .PdfObjectDictionary );_ecgc .PdfAnnotationMarkup .appendToPdfDictionary (_caeg );_caeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_caeg .SetIfNotNil ("\u0044\u0041",_ecgc .DA );_caeg .SetIfNotNil ("\u0051",_ecgc .Q );_caeg .SetIfNotNil ("\u0052\u0043",_ecgc .RC );_caeg .SetIfNotNil ("\u0044\u0053",_ecgc .DS );_caeg .SetIfNotNil ("\u0043\u004c",_ecgc .CL );_caeg .SetIfNotNil ("\u0049\u0054",_ecgc .IT );_caeg .SetIfNotNil ("\u0042\u0045",_ecgc .BE );_caeg .SetIfNotNil ("\u0052\u0044",_ecgc .RD );_caeg .SetIfNotNil ("\u0042\u0053",_ecgc .BS );_caeg .SetIfNotNil ("\u004c\u0045",_ecgc .LE );return _cbeb ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ecfce *PdfOutlineTreeNode )GetContext ()PdfModel {if _fega ,_bgffc :=_ecfce ._cfbge .(*PdfOutline );_bgffc {return _fega ;};if _degbc ,_cdcc :=_ecfce ._cfbge .(*PdfOutlineItem );_cdcc {return _degbc ;};_bdd .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_aeeg *BorderStyle )GetPdfName ()string {switch *_aeeg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dcag *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bdd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbcae :=[]float64 {0.0};if _dcag .C0 !=nil {_bbcae =_dcag .C0 ;};_fcbbd :=[]float64 {1.0};if _dcag .C1 !=nil {_fcbbd =_dcag .C1 ;};var _bcbfe []float64 ;for _faage :=0;_faage < len (_bbcae );_faage ++{_decgd :=_bbcae [_faage ]+_ec .Pow (x [0],_dcag .N )*(_fcbbd [_faage ]-_bbcae [_faage ]);_bcbfe =append (_bcbfe ,_decgd );};return _bcbfe ,nil ;};func (_edge *PdfReader )newPdfAnnotationFromIndirectObject (_bcdc *_da .PdfIndirectObject )(*PdfAnnotation ,error ){_eaga ,_bfc :=_bcdc .PdfObject .(*_da .PdfObjectDictionary );if !_bfc {return nil ,_bd .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_edge ._ccfcg .GetModelFromPrimitive (_eaga );model !=nil {_facd ,_cdf :=model .(*PdfAnnotation );if !_cdf {return nil ,_bd .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _facd ,nil ;};_dfcf :=&PdfAnnotation {};_dfcf ._dda =_bcdc ;_edge ._ccfcg .Register (_eaga ,_dfcf );if _fegc :=_eaga .Get ("\u0054\u0079\u0070\u0065");_fegc !=nil {_cbga ,_dfg :=_fegc .(*_da .PdfObjectName );if !_dfg {_bdd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fegc );}else {if *_cbga !="\u0041\u006e\u006eo\u0074"{_bdd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_cbga );};};};if _cde :=_eaga .Get ("\u0052\u0065\u0063\u0074");_cde !=nil {_dfcf .Rect =_cde ;};if _bbee :=_eaga .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bbee !=nil {_dfcf .Contents =_bbee ;};if _cebc :=_eaga .Get ("\u0050");_cebc !=nil {_dfcf .P =_cebc ;};if _fbb :=_eaga .Get ("\u004e\u004d");_fbb !=nil {_dfcf .NM =_fbb ;};if _fae :=_eaga .Get ("\u004d");_fae !=nil {_dfcf .M =_fae ;};if _bdad :=_eaga .Get ("\u0046");_bdad !=nil {_dfcf .F =_bdad ;};if _cfcb :=_eaga .Get ("\u0041\u0050");_cfcb !=nil {_dfcf .AP =_cfcb ;};if _dede :=_eaga .Get ("\u0041\u0053");_dede !=nil {_dfcf .AS =_dede ;};if _bbag :=_eaga .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bbag !=nil {_dfcf .Border =_bbag ;};if _ccc :=_eaga .Get ("\u0043");_ccc !=nil {_dfcf .C =_ccc ;};if _daba :=_eaga .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_daba !=nil {_dfcf .StructParent =_daba ;};if _cbc :=_eaga .Get ("\u004f\u0043");_cbc !=nil {_dfcf .OC =_cbc ;};_fag :=_eaga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fag ==nil {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_dfcf ._cae =nil ;return _dfcf ,nil ;};_agab ,_cbff :=_fag .(*_da .PdfObjectName );if !_cbff {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fag );return nil ,_bd .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fag );};switch *_agab {case "\u0054\u0065\u0078\u0074":_bfcg ,_daff :=_edge .newPdfAnnotationTextFromDict (_eaga );if _daff !=nil {return nil ,_daff ;};_bfcg .PdfAnnotation =_dfcf ;_dfcf ._cae =_bfcg ;return _dfcf ,nil ;case "\u004c\u0069\u006e\u006b":_adc ,_cddc :=_edge .newPdfAnnotationLinkFromDict (_eaga );if _cddc !=nil {return nil ,_cddc ;};_adc .PdfAnnotation =_dfcf ;_dfcf ._cae =_adc ;return _dfcf ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gadb ,_agfd :=_edge .newPdfAnnotationFreeTextFromDict (_eaga );if _agfd !=nil {return nil ,_agfd ;};_gadb .PdfAnnotation =_dfcf ;_dfcf ._cae =_gadb ;return _dfcf ,nil ;case "\u004c\u0069\u006e\u0065":_cce ,_egdaf :=_edge .newPdfAnnotationLineFromDict (_eaga );if _egdaf !=nil {return nil ,_egdaf ;};_cce .PdfAnnotation =_dfcf ;_dfcf ._cae =_cce ;_bdd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dfcf ,_dfcf );_bdd .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_cce ,_cce );_bdd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_cce .PdfAnnotationMarkup ,_cce .PdfAnnotationMarkup );return _dfcf ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_afa ,_cbb :=_edge .newPdfAnnotationSquareFromDict (_eaga );if _cbb !=nil {return nil ,_cbb ;};_afa .PdfAnnotation =_dfcf ;_dfcf ._cae =_afa ;return _dfcf ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_gge ,_egc :=_edge .newPdfAnnotationCircleFromDict (_eaga );if _egc !=nil {return nil ,_egc ;};_gge .PdfAnnotation =_dfcf ;_dfcf ._cae =_gge ;return _dfcf ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cca ,_eff :=_edge .newPdfAnnotationPolygonFromDict (_eaga );if _eff !=nil {return nil ,_eff ;};_cca .PdfAnnotation =_dfcf ;_dfcf ._cae =_cca ;return _dfcf ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_dbg ,_bbaa :=_edge .newPdfAnnotationPolyLineFromDict (_eaga );if _bbaa !=nil {return nil ,_bbaa ;};_dbg .PdfAnnotation =_dfcf ;_dfcf ._cae =_dbg ;return _dfcf ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_faeb ,_ada :=_edge .newPdfAnnotationHighlightFromDict (_eaga );if _ada !=nil {return nil ,_ada ;};_faeb .PdfAnnotation =_dfcf ;_dfcf ._cae =_faeb ;return _dfcf ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ccf ,_edeg :=_edge .newPdfAnnotationUnderlineFromDict (_eaga );if _edeg !=nil {return nil ,_edeg ;};_ccf .PdfAnnotation =_dfcf ;_dfcf ._cae =_ccf ;return _dfcf ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cfa ,_efe :=_edge .newPdfAnnotationSquigglyFromDict (_eaga );if _efe !=nil {return nil ,_efe ;};_cfa .PdfAnnotation =_dfcf ;_dfcf ._cae =_cfa ;return _dfcf ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fdg ,_gdba :=_edge .newPdfAnnotationStrikeOut (_eaga );if _gdba !=nil {return nil ,_gdba ;};_fdg .PdfAnnotation =_dfcf ;_dfcf ._cae =_fdg ;return _dfcf ,nil ;case "\u0043\u0061\u0072e\u0074":_gagb ,_bfa :=_edge .newPdfAnnotationCaretFromDict (_eaga );if _bfa !=nil {return nil ,_bfa ;};_gagb .PdfAnnotation =_dfcf ;_dfcf ._cae =_gagb ;return _dfcf ,nil ;case "\u0053\u0074\u0061m\u0070":_dbb ,_aag :=_edge .newPdfAnnotationStampFromDict (_eaga );if _aag !=nil {return nil ,_aag ;};_dbb .PdfAnnotation =_dfcf ;_dfcf ._cae =_dbb ;return _dfcf ,nil ;case "\u0049\u006e\u006b":_dgga ,_cff :=_edge .newPdfAnnotationInkFromDict (_eaga );if _cff !=nil {return nil ,_cff ;};_dgga .PdfAnnotation =_dfcf ;_dfcf ._cae =_dgga ;return _dfcf ,nil ;case "\u0050\u006f\u0070u\u0070":_geaa ,_baca :=_edge .newPdfAnnotationPopupFromDict (_eaga );if _baca !=nil {return nil ,_baca ;};_geaa .PdfAnnotation =_dfcf ;_dfcf ._cae =_geaa ;return _dfcf ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_fee ,_eggfd :=_edge .newPdfAnnotationFileAttachmentFromDict (_eaga );if _eggfd !=nil {return nil ,_eggfd ;};_fee .PdfAnnotation =_dfcf ;_dfcf ._cae =_fee ;return _dfcf ,nil ;case "\u0053\u006f\u0075n\u0064":_bgba ,_efaf :=_edge .newPdfAnnotationSoundFromDict (_eaga );if _efaf !=nil {return nil ,_efaf ;};_bgba .PdfAnnotation =_dfcf ;_dfcf ._cae =_bgba ;return _dfcf ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_beeb ,_gaga :=_edge .newPdfAnnotationRichMediaFromDict (_eaga );if _gaga !=nil {return nil ,_gaga ;};_beeb .PdfAnnotation =_dfcf ;_dfcf ._cae =_beeb ;return _dfcf ,nil ;case "\u004d\u006f\u0076i\u0065":_fcca ,_cee :=_edge .newPdfAnnotationMovieFromDict (_eaga );if _cee !=nil {return nil ,_cee ;};_fcca .PdfAnnotation =_dfcf ;_dfcf ._cae =_fcca ;return _dfcf ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_babc ,_ece :=_edge .newPdfAnnotationScreenFromDict (_eaga );if _ece !=nil {return nil ,_ece ;};_babc .PdfAnnotation =_dfcf ;_dfcf ._cae =_babc ;return _dfcf ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_acga ,_ccb :=_edge .newPdfAnnotationWidgetFromDict (_eaga );if _ccb !=nil {return nil ,_ccb ;};_acga .PdfAnnotation =_dfcf ;_dfcf ._cae =_acga ;return _dfcf ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bcc ,_deeg :=_edge .newPdfAnnotationPrinterMarkFromDict (_eaga );if _deeg !=nil {return nil ,_deeg ;};_bcc .PdfAnnotation =_dfcf ;_dfcf ._cae =_bcc ;return _dfcf ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_egba ,_cfca :=_edge .newPdfAnnotationTrapNetFromDict (_eaga );if _cfca !=nil {return nil ,_cfca ;};_egba .PdfAnnotation =_dfcf ;_dfcf ._cae =_egba ;return _dfcf ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bgde ,_cgc :=_edge .newPdfAnnotationWatermarkFromDict (_eaga );if _cgc !=nil {return nil ,_cgc ;};_bgde .PdfAnnotation =_dfcf ;_dfcf ._cae =_bgde ;return _dfcf ,nil ;case "\u0033\u0044":_bge ,_aca :=_edge .newPdfAnnotation3DFromDict (_eaga );if _aca !=nil {return nil ,_aca ;};_bge .PdfAnnotation =_dfcf ;_dfcf ._cae =_bge ;return _dfcf ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_gadf ,_acd :=_edge .newPdfAnnotationProjectionFromDict (_eaga );if _acd !=nil {return nil ,_acd ;};_gadf .PdfAnnotation =_dfcf ;_dfcf ._cae =_gadf ;return _dfcf ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_abe ,_fced :=_edge .newPdfAnnotationRedactFromDict (_eaga );if _fced !=nil {return nil ,_fced ;};_abe .PdfAnnotation =_dfcf ;_dfcf ._cae =_abe ;return _dfcf ,nil ;};_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_agab );return nil ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_aceg *PdfPage )AddExtGState (name _da .PdfObjectName ,egs *_da .PdfObjectDictionary )error {if _aceg .Resources ==nil {_aceg .Resources =NewPdfPageResources ();};if _aceg .Resources .ExtGState ==nil {_aceg .Resources .ExtGState =_da .MakeDict ();};_cbdg ,_bdeaa :=_da .TraceToDirectObject (_aceg .Resources .ExtGState ).(*_da .PdfObjectDictionary );if !_bdeaa {_bdd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_da .TraceToDirectObject (_aceg .Resources .ExtGState ));return _dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbdg .Set (name ,egs );return nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_egdb :=NewPdfAnnotation ();_cdda :=&PdfAnnotationLink {};_cdda .PdfAnnotation =_egdb ;_egdb .SetContext (_cdda );return _cdda ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_agdd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_fgea :=&PdfColorspaceCalGray {};_fgea .BlackPoint =[]float64 {0.0,0.0,0.0};_fgea .Gamma =1;return _fgea ;};func (_gecg *PdfReader )newPdfAnnotationPolygonFromDict (_bdcf *_da .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_acf :=PdfAnnotationPolygon {};_ddd ,_dcgg :=_gecg .newPdfAnnotationMarkupFromDict (_bdcf );if _dcgg !=nil {return nil ,_dcgg ;};_acf .PdfAnnotationMarkup =_ddd ;_acf .Vertices =_bdcf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_acf .LE =_bdcf .Get ("\u004c\u0045");_acf .BS =_bdcf .Get ("\u0042\u0053");_acf .IC =_bdcf .Get ("\u0049\u0043");_acf .BE =_bdcf .Get ("\u0042\u0045");_acf .IT =_bdcf .Get ("\u0049\u0054");_acf .Measure =_bdcf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_acf ,nil ;};func _gdebc (_eedf StdFontName )(pdfFontSimple ,error ){_gcfd ,_bgfa :=_bgb .NewStdFontByName (_eedf );if !_bgfa {return pdfFontSimple {},ErrFontNotSupported ;};_fcad :=_fbbba (_gcfd );return _fcad ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _da .PdfObject ;Flags _da .PdfObject ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_cgae *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gfefb *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gfefb .Base .GetNumComponents ();_dbbcc :=int (vals [0])*N ;if _dbbcc < 0||(_dbbcc +N -1)>=len (_gfefb ._bfceg ){return nil ,_dbf .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_efec :=_gfefb ._bfceg [_dbbcc :_dbbcc +N ];var _fcfb []float64 ;for _ ,_becgcd :=range _efec {_fcfb =append (_fcfb ,float64 (_becgcd )/255.0);};_ffcb ,_bfde :=_gfefb .Base .ColorFromFloats (_fcfb );if _bfde !=nil {return nil ,_bfde ;};return _ffcb ,nil ;};

// Encoder returns the font's text encoder.
func (_cece pdfFontType0 )Encoder ()_ceb .TextEncoder {return _cece ._gacd };

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_dfcdg *PdfPageResources )GetXObjectImageByName (keyName _da .PdfObjectName )(*XObjectImage ,error ){_abge ,_fdcdc :=_dfcdg .GetXObjectByName (keyName );if _abge ==nil {return nil ,nil ;};if _fdcdc !=XObjectTypeImage {return nil ,_dbf .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_cbcff ,_aafbd :=NewXObjectImageFromStream (_abge );if _aafbd !=nil {return nil ,_aafbd ;};return _cbcff ,nil ;};func (_ffg *PdfAnnotationMarkup )appendToPdfDictionary (_bce *_da .PdfObjectDictionary ){_bce .SetIfNotNil ("\u0054",_ffg .T );if _ffg .Popup !=nil {_bce .Set ("\u0050\u006f\u0070u\u0070",_ffg .Popup .ToPdfObject ());};_bce .SetIfNotNil ("\u0043\u0041",_ffg .CA );_bce .SetIfNotNil ("\u0052\u0043",_ffg .RC );_bce .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffg .CreationDate );_bce .SetIfNotNil ("\u0049\u0052\u0054",_ffg .IRT );_bce .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ffg .Subj );_bce .SetIfNotNil ("\u0052\u0054",_ffg .RT );_bce .SetIfNotNil ("\u0049\u0054",_ffg .IT );_bce .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ffg .ExData );};func (_cfd *PdfAppender )addNewObject (_fcebb _da .PdfObject ){if _ ,_gebdb :=_cfd ._bgbc [_fcebb ];!_gebdb {_cfd ._dbcb =append (_cfd ._dbcb ,_fcebb );_cfd ._bgbc [_fcebb ]=struct{}{};};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ceffa *PdfShadingType7 )ToPdfObject ()_da .PdfObject {_ceffa .PdfShading .ToPdfObject ();_dcfae ,_beecg :=_ceffa .getShadingDict ();if _beecg !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ceffa .BitsPerCoordinate !=nil {_dcfae .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ceffa .BitsPerCoordinate );};if _ceffa .BitsPerComponent !=nil {_dcfae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ceffa .BitsPerComponent );};if _ceffa .BitsPerFlag !=nil {_dcfae .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ceffa .BitsPerFlag );};if _ceffa .Decode !=nil {_dcfae .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ceffa .Decode );};if _ceffa .Function !=nil {if len (_ceffa .Function )==1{_dcfae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ceffa .Function [0].ToPdfObject ());}else {_agceb :=_da .MakeArray ();for _ ,_cegf :=range _ceffa .Function {_agceb .Append (_cegf .ToPdfObject ());};_dcfae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agceb );};};return _ceffa ._ggcdb ;};

// ToPdfObject implements interface PdfModel.
func (_geb *PdfActionGoTo )ToPdfObject ()_da .PdfObject {_geb .PdfAction .ToPdfObject ();_gec :=_geb ._fca ;_gcd :=_gec .PdfObject .(*_da .PdfObjectDictionary );_gcd .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoTo )));_gcd .SetIfNotNil ("\u0044",_geb .D );return _gec ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_egg :=NewPdfAction ();_bdb :=&PdfActionNamed {};_bdb .PdfAction =_egg ;_egg .SetContext (_bdb );return _bdb ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_da .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _da .PdfObject ;A _da .PdfObject ;SE _da .PdfObject ;C _da .PdfObject ;F _da .PdfObject ;_aaece *_da .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ffga *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_ebba *PdfReader )newPdfAnnotationSquareFromDict (_bcgc *_da .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dbc :=PdfAnnotationSquare {};_gccd ,_ceag :=_ebba .newPdfAnnotationMarkupFromDict (_bcgc );if _ceag !=nil {return nil ,_ceag ;};_dbc .PdfAnnotationMarkup =_gccd ;_dbc .BS =_bcgc .Get ("\u0042\u0053");_dbc .IC =_bcgc .Get ("\u0049\u0043");_dbc .BE =_bcgc .Get ("\u0042\u0045");_dbc .RD =_bcgc .Get ("\u0052\u0044");return &_dbc ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_eadf :=&XObjectImage {};_gabadg :=&_da .PdfObjectStream {};_gabadg .PdfObjectDictionary =_da .MakeDict ();_eadf ._edcgf =_gabadg ;return _eadf ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ecgd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgecb ,_eeea :=color .(*PdfColorDeviceRGB );if !_eeea {_bdd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cgecb ,nil ;};func _befa (_gfga _da .PdfObject ,_fedfc *PdfReader )(*OutlineDest ,error ){_aage ,_gfbd :=_da .GetArray (_gfga );if !_gfbd {return nil ,_dbf .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_cegge :=_aage .Len ();if _cegge < 2{return nil ,_bd .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_cegge );};_ebcfe :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_dfcd :=_aage .Get (0);if _acgee ,_gcbdcc :=_da .GetIndirect (_dfcd );_gcbdcc {if _ ,_agacd ,_ddbd :=_fedfc .PageFromIndirectObject (_acgee );_ddbd ==nil {_ebcfe .Page =int64 (_agacd -1);}else {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_acgee );};_ebcfe .PageObj =_acgee ;}else if _eddf ,_addg :=_da .GetIntVal (_dfcd );_addg {if _eddf >=0&&_eddf < len (_fedfc .PageList ){_ebcfe .PageObj =_fedfc .PageList [_eddf ].GetPageAsIndirectObject ();}else {_bdd .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_eddf );};_ebcfe .Page =int64 (_eddf );}else {return nil ,_bd .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_dfcd );};_aaae ,_gfbd :=_da .GetNameVal (_aage .Get (1));if !_gfbd {_bdd .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aage .Get (1));return _ebcfe ,nil ;};switch _aaae {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _cegge > 2{_ebcfe .Y ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_aage .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _cegge > 2{_ebcfe .X ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_aage .Get (2)));};case "\u0058\u0059\u005a":if _cegge > 4{_ebcfe .X ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_aage .Get (2)));_ebcfe .Y ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_aage .Get (3)));_ebcfe .Zoom ,_ =_da .GetNumberAsFloat (_da .TraceToDirectObject (_aage .Get (4)));};default:_aaae ="\u0046\u0069\u0074";};_ebcfe .Mode =_aaae ;return _ebcfe ,nil ;};func _ffdgg (_cdgc _da .PdfObject )(PdfFunction ,error ){_cdgc =_da .ResolveReference (_cdgc );if _dfeeb ,_fafc :=_cdgc .(*_da .PdfObjectStream );_fafc {_bgcd :=_dfeeb .PdfObjectDictionary ;_efgg ,_aefg :=_bgcd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_da .PdfObjectInteger );if !_aefg {_bdd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_dbf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_efgg ==0{return _gffce (_dfeeb );}else if *_efgg ==4{return _baga (_dfeeb );}else {return nil ,_dbf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gfggf ,_cgcg :=_cdgc .(*_da .PdfIndirectObject );_cgcg {_deaeb ,_ccga :=_gfggf .PdfObject .(*_da .PdfObjectDictionary );if !_ccga {_bdd .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_dbf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_adca ,_ccga :=_deaeb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_da .PdfObjectInteger );if !_ccga {_bdd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_dbf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_adca ==2{return _fedc (_gfggf );}else if *_adca ==3{return _aacda (_gfggf );}else {return nil ,_dbf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cabcc ,_bgddc :=_cdgc .(*_da .PdfObjectDictionary );_bgddc {_gggcb ,_gbedf :=_cabcc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_da .PdfObjectInteger );if !_gbedf {_bdd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_dbf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gggcb ==2{return _fedc (_cabcc );}else if *_gggcb ==3{return _aacda (_cabcc );}else {return nil ,_dbf .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bdd .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cdgc );return nil ,_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _da .PdfObject ;PreserveRB _da .PdfObject ;};func (_efgeb *PdfAcroForm )fill (_efaaf FieldValueProvider ,_eebda FieldAppearanceGenerator )error {if _efgeb ==nil {return nil ;};_cedfg ,_dedea :=_efaaf .FieldValues ();if _dedea !=nil {return _dedea ;};for _ ,_dbad :=range _efgeb .AllFields (){_bfdf :=_dbad .PartialName ();_adfcf ,_gdae :=_cedfg [_bfdf ];if !_gdae {if _fbcce ,_acee :=_dbad .FullName ();_acee ==nil {_adfcf ,_gdae =_cedfg [_fbcce ];};};if !_gdae {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bfdf );continue ;};if _ffbe :=_fabfb (_dbad ,_adfcf );_ffbe !=nil {return _ffbe ;};if _eebda ==nil {continue ;};for _ ,_gdcgb :=range _dbad .Annotations {_bcdca ,_bbfdb :=_eebda .GenerateAppearanceDict (_efgeb ,_dbad ,_gdcgb );if _bbfdb !=nil {return _bbfdb ;};_gdcgb .AP =_bcdca ;_gdcgb .ToPdfObject ();};};return nil ;};

// B returns the value of the blue component of the color.
func (_caafd *PdfColorDeviceRGB )B ()float64 {return float64 (_caafd [2])};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cdfg *_da .PdfIndirectObject ;};func (_gdff *PdfReader )buildOutlineTree (_eaee _da .PdfObject ,_bced *PdfOutlineTreeNode ,_eefda *PdfOutlineTreeNode ,_acedc map[_da .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _acedc ==nil {_acedc =map[_da .PdfObject ]struct{}{};};_acedc [_eaee ]=struct{}{};_ggbc ,_ggaag :=_eaee .(*_da .PdfIndirectObject );if !_ggaag {return nil ,nil ,_bd .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_eaee );};_ggcgg ,_cbba :=_ggbc .PdfObject .(*_da .PdfObjectDictionary );if !_cbba {return nil ,nil ,_dbf .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bdd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_ggcgg ,_ggbc ,_ggbc );if _cdcfa :=_ggcgg .Get ("\u0054\u0069\u0074l\u0065");_cdcfa !=nil {_bcbe ,_ddfbg :=_gdff .newPdfOutlineItemFromIndirectObject (_ggbc );if _ddfbg !=nil {return nil ,nil ,_ddfbg ;};_bcbe .Parent =_bced ;_bcbe .Prev =_eefda ;_ggeec :=_da .ResolveReference (_ggcgg .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_ddgef :=_acedc [_ggeec ];_ggeec !=nil &&_ggeec !=_ggbc &&!_ddgef {if !_da .IsNullObject (_ggeec ){_efabd ,_bbfac ,_bggfbb :=_gdff .buildOutlineTree (_ggeec ,&_bcbe .PdfOutlineTreeNode ,nil ,_acedc );if _bggfbb !=nil {_bdd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_bggfbb );}else {_bcbe .First =_efabd ;_bcbe .Last =_bbfac ;};};};_dabed :=_da .ResolveReference (_ggcgg .Get ("\u004e\u0065\u0078\u0074"));if _ ,_efdca :=_acedc [_dabed ];_dabed !=nil &&_dabed !=_ggbc &&!_efdca {if !_da .IsNullObject (_dabed ){_faaadg ,_bdggf ,_beec :=_gdff .buildOutlineTree (_dabed ,_bced ,&_bcbe .PdfOutlineTreeNode ,_acedc );if _beec !=nil {_bdd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_beec );}else {_bcbe .Next =_faaadg ;return &_bcbe .PdfOutlineTreeNode ,_bdggf ,nil ;};};};return &_bcbe .PdfOutlineTreeNode ,&_bcbe .PdfOutlineTreeNode ,nil ;};_bebec ,_abfc :=_eafea (_ggbc );if _abfc !=nil {return nil ,nil ,_abfc ;};_bebec .Parent =_bced ;if _geadfe :=_ggcgg .Get ("\u0046\u0069\u0072s\u0074");_geadfe !=nil {_geadfe =_da .ResolveReference (_geadfe );_beae :=_da .TraceToDirectObject (_geadfe );if _ ,_dgca :=_beae .(*_da .PdfObjectNull );!_dgca &&_beae !=nil {_bagb ,_bbfaf ,_dcfbdf :=_gdff .buildOutlineTree (_geadfe ,&_bebec .PdfOutlineTreeNode ,nil ,_acedc );if _dcfbdf !=nil {_bdd .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_dcfbdf );}else {_bebec .First =_bagb ;_bebec .Last =_bbfaf ;};};};return &_bebec .PdfOutlineTreeNode ,&_bebec .PdfOutlineTreeNode ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _da .PdfObject ;V _da .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_babed OutlineDest )ToPdfObject ()_da .PdfObject {if (_babed .PageObj ==nil &&_babed .Page < 0)||_babed .Mode ==""{return _da .MakeNull ();};_fbfg :=_da .MakeArray ();if _babed .PageObj !=nil {_fbfg .Append (_babed .PageObj );}else {_fbfg .Append (_da .MakeInteger (_babed .Page ));};_fbfg .Append (_da .MakeName (_babed .Mode ));switch _babed .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_fbfg .Append (_da .MakeFloat (_babed .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_fbfg .Append (_da .MakeFloat (_babed .X ));case "\u0058\u0059\u005a":_fbfg .Append (_da .MakeFloat (_babed .X ));_fbfg .Append (_da .MakeFloat (_babed .Y ));_fbfg .Append (_da .MakeFloat (_babed .Zoom ));default:_fbfg .Set (1,_da .MakeName ("\u0046\u0069\u0074"));};return _fbfg ;};func (_fddg *PdfReader )newPdfAnnotationWatermarkFromDict (_ccd *_da .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cfaa :=PdfAnnotationWatermark {};_cfaa .FixedPrint =_ccd .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_cfaa ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_da .PdfIndirectObject )*PdfOutlineItem {_accbb :=PdfOutlineItem {};_accbb ._cfbge =&_accbb ;_accbb .Title =_da .MakeString (title );_ebda :=_da .MakeArray ();_ebda .Append (page );_ebda .Append (_da .MakeName ("\u0046\u0069\u0074"));_accbb .Dest =_ebda ;return &_accbb ;};

// ToPdfObject implements interface PdfModel.
func (_afbe *PdfAnnotationTrapNet )ToPdfObject ()_da .PdfObject {_afbe .PdfAnnotation .ToPdfObject ();_fbc :=_afbe ._dda ;_adga :=_fbc .PdfObject .(*_da .PdfObjectDictionary );_adga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _fbc ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_cecae *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_ddcg :=NewPdfAnnotation ();_gac :=&PdfAnnotationFreeText {};_gac .PdfAnnotation =_ddcg ;_gac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddcg .SetContext (_gac );return _gac ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_abgd *PdfPageResources )GetFontByName (keyName _da .PdfObjectName )(_da .PdfObject ,bool ){if _abgd .Font ==nil {return nil ,false ;};_gdeec ,_afbae :=_da .TraceToDirectObject (_abgd .Font ).(*_da .PdfObjectDictionary );if !_afbae {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_da .TraceToDirectObject (_abgd .Font ));return nil ,false ;};if _ggecd :=_gdeec .Get (keyName );_ggecd !=nil {return _ggecd ,true ;};return nil ,false ;};func (_eagde *PdfReader )newPdfSignatureFromIndirect (_cdfd *_da .PdfIndirectObject )(*PdfSignature ,error ){_ffdad ,_bgdaf :=_cdfd .PdfObject .(*_da .PdfObjectDictionary );if !_bgdaf {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _bdadg ,_daadg :=_eagde ._ccfcg .GetModelFromPrimitive (_cdfd ).(*PdfSignature );_daadg {return _bdadg ,nil ;};_ebfea :=&PdfSignature {};_ebfea ._caadf =_cdfd ;_ebfea .Type ,_ =_da .GetName (_ffdad .Get ("\u0054\u0079\u0070\u0065"));_ebfea .Filter ,_bgdaf =_da .GetName (_ffdad .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bgdaf {_bdd .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_ebfea .SubFilter ,_ =_da .GetName (_ffdad .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ebfea .Contents ,_bgdaf =_da .GetString (_ffdad .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bgdaf {_bdd .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_ebfea .Cert =_ffdad .Get ("\u0043\u0065\u0072\u0074");_ebfea .ByteRange ,_ =_da .GetArray (_ffdad .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_ebfea .Reference ,_ =_da .GetArray (_ffdad .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ebfea .Changes ,_ =_da .GetArray (_ffdad .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ebfea .Name ,_ =_da .GetString (_ffdad .Get ("\u004e\u0061\u006d\u0065"));_ebfea .M ,_ =_da .GetString (_ffdad .Get ("\u004d"));_ebfea .Location ,_ =_da .GetString (_ffdad .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_ebfea .Reason ,_ =_da .GetString (_ffdad .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ebfea .ContactInfo ,_ =_da .GetString (_ffdad .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ebfea .R ,_ =_da .GetInt (_ffdad .Get ("\u0052"));_ebfea .V ,_ =_da .GetInt (_ffdad .Get ("\u0056"));_ebfea .PropBuild ,_ =_da .GetDict (_ffdad .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ebfea .PropAuthTime ,_ =_da .GetInt (_ffdad .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_ebfea .PropAuthType ,_ =_da .GetName (_ffdad .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _ebfea ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_da .PdfObjectArray ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ceeb *PdfOutlineItem )ToPdfObject ()_da .PdfObject {_ceagb :=_ceeb ._aaece ;_baed :=_ceagb .PdfObject .(*_da .PdfObjectDictionary );_baed .Set ("\u0054\u0069\u0074l\u0065",_ceeb .Title );if _ceeb .A !=nil {_baed .Set ("\u0041",_ceeb .A );};if _aagff :=_baed .Get ("\u0053\u0045");_aagff !=nil {_baed .Remove ("\u0053\u0045");};if _ceeb .C !=nil {_baed .Set ("\u0043",_ceeb .C );};if _ceeb .Dest !=nil {_baed .Set ("\u0044\u0065\u0073\u0074",_ceeb .Dest );};if _ceeb .F !=nil {_baed .Set ("\u0046",_ceeb .F );};if _ceeb .Count !=nil {_baed .Set ("\u0043\u006f\u0075n\u0074",_da .MakeInteger (*_ceeb .Count ));};if _ceeb .Next !=nil {_baed .Set ("\u004e\u0065\u0078\u0074",_ceeb .Next .ToPdfObject ());};if _ceeb .First !=nil {_baed .Set ("\u0046\u0069\u0072s\u0074",_ceeb .First .ToPdfObject ());};if _ceeb .Prev !=nil {_baed .Set ("\u0050\u0072\u0065\u0076",_ceeb .Prev .GetContext ().GetContainingPdfObject ());};if _ceeb .Last !=nil {_baed .Set ("\u004c\u0061\u0073\u0074",_ceeb .Last .GetContext ().GetContainingPdfObject ());};if _ceeb .Parent !=nil {_baed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ceeb .Parent .GetContext ().GetContainingPdfObject ());};return _ceagb ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_aacba *PdfFont )ToUnicode ()string {if _aacba .baseFields ()._ecda ==nil {return "";};return _aacba .baseFields ()._ecda .Name ();};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dggg *OutlineItem )ToPdfObject ()_da .PdfObject {_gbgbf ,_ :=_dggg .ToPdfOutlineItem ();return _gbgbf .ToPdfObject ();};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fadb *PdfPageResources )SetXObjectImageByName (keyName _da .PdfObjectName ,ximg *XObjectImage )error {_bccbc :=ximg .ToPdfObject ().(*_da .PdfObjectStream );_aafca :=_fadb .SetXObjectByName (keyName ,_bccbc );return _aafca ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ccfb *PdfColorspaceSpecialIndexed )ToPdfObject ()_da .PdfObject {_gffd :=_da .MakeArray (_da .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_gffd .Append (_ccfb .Base .ToPdfObject ());_gffd .Append (_da .MakeInteger (int64 (_ccfb .HiVal )));_gffd .Append (_ccfb .Lookup );if _ccfb ._aefc !=nil {_ccfb ._aefc .PdfObject =_gffd ;return _ccfb ._aefc ;};return _gffd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_edbb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcad ,_fgac :=_da .GetNumbersAsFloat (objects );if _fgac !=nil {return nil ,_fgac ;};return _edbb .ColorFromFloats (_gcad );};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_edcee *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_edcee .ToPdfOutline ().PdfOutlineTreeNode ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eceee *PdfColorspaceDeviceRGB )ToPdfObject ()_da .PdfObject {return _da .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};var ImageHandling ImageHandler =DefaultImageHandler {};

// XObjectType represents the type of an XObject.
type XObjectType int ;func (_debg *PdfReader )newPdfAnnotationRichMediaFromDict (_bgbe *_da .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_gcb :=&PdfAnnotationRichMedia {};_gcb .RichMediaSettings =_bgbe .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_gcb .RichMediaContent =_bgbe .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _gcb ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_bbdee *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _da .GetNumberAsFloat (_bbdee .Ascent );};func _edced (_cdbe ,_dcdd string )string {if _dg .Contains (_cdbe ,"\u002b"){_cfdea :=_dg .Split (_cdbe ,"\u002b");if len (_cfdea )==2{_cdbe =_cfdea [1];};};return _dcdd +"\u002b"+_cdbe ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gdbag *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _da .PdfObject ;Sy _da .PdfObject ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_adcf *PdfPageResources )GetXObjectFormByName (keyName _da .PdfObjectName )(*XObjectForm ,error ){_egffc ,_fbbbag :=_adcf .GetXObjectByName (keyName );if _egffc ==nil {return nil ,nil ;};if _fbbbag !=XObjectTypeForm {return nil ,_dbf .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_adfb ,_cdfeg :=NewXObjectFormFromStream (_egffc );if _cdfeg !=nil {return nil ,_cdfeg ;};return _adfb ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ebbe :=NewPdfAnnotation ();_edg :=&PdfAnnotationFileAttachment {};_edg .PdfAnnotation =_ebbe ;_edg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebbe .SetContext (_edg );return _edg ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_bdaga *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gade :=_ee .NewReader (img .getBase ());_eece :=_agc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_bdaga .AlternateSpace .GetNumComponents (),nil ,img ._afefc ,nil );_facgg :=_ee .NewWriter (_eece );_efed :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_bdd .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_bdd .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_bdaga .TintTransform );_cabga :=_bdaga .AlternateSpace .DecodeArray ();var (_gdeb uint32 ;_degb error ;);for {_gdeb ,_degb =_gade .ReadSample ();if _degb ==_af .EOF {break ;};if _degb !=nil {return img ,_degb ;};_beebg :=float64 (_gdeb )/_efed ;_fdcg ,_bdfbf :=_bdaga .TintTransform .Evaluate ([]float64 {_beebg });if _bdfbf !=nil {return img ,_bdfbf ;};for _fdfcc ,_dfec :=range _fdcg {_cbgfe :=_agc .LinearInterpolate (_dfec ,_cabga [_fdfcc *2],_cabga [_fdfcc *2+1],0,1);if _bdfbf =_facgg .WriteSample (uint32 (_cbgfe *_efed ));_bdfbf !=nil {return img ,_bdfbf ;};};};return _bdaga .AlternateSpace .ImageToRGB (_bcfdb (&_eece ));};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_ccge *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_aebad :=_ccge .actualFont ();if _aebad ==nil {_bdd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_ccge ._fdbf );return _bgb .CharMetrics {},false ;};if _gagaf ,_ecag :=_aebad .GetRuneMetrics (r );_ecag {return _gagaf ,true ;};if _daef ,_cbee :=_ccge .GetFontDescriptor ();_cbee ==nil &&_daef !=nil {return _bgb .CharMetrics {Wx :_daef ._dadb },true ;};_bdd .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccge );return _bgb .CharMetrics {},false ;};func (_bbbcg fontCommon )coreString ()string {_fgfcf :="";if _bbbcg ._daeea !=nil {_fgfcf =_bbbcg ._daeea .String ();};return _bd .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bbbcg ._bcga ,_bbbcg ._eeacc ,_bbbcg ._ebdg ,_bbbcg ._fefaf ,_bbbcg ._ecgdf !=nil ,_bbbcg .fontFlags (),_fgfcf );};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_dgbb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_dbf .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_ggbd ,_fccae :=_agc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afefc ,img ._eafbb );if _fccae !=nil {return img ,_fccae ;};_egec ,_fccae :=_agc .GrayConverter .Convert (_ggbd );if _fccae !=nil {return img ,_fccae ;};return _bcfdb (_egec .Base ()),nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ac .PSProgram ;_dgaec *_ac .PSExecutor ;_fcded []byte ;_cdac *_da .PdfObjectStream ;};func _egfcb ()string {_bfdef :=_be .GetLicenseKey ();if len (_bgce )> 0&&(_bfdef .IsLicensed ()||_egffa ){return _bgce ;};return _bd .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eddg (),_bfdef .TypeToString ());};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_afe :=NewPdfAction ();_gdd :=&PdfActionSubmitForm {};_gdd .PdfAction =_afe ;_afe .SetContext (_gdd );return _gdd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aaabe *PdfShadingType5 )ToPdfObject ()_da .PdfObject {_aaabe .PdfShading .ToPdfObject ();_dgbce ,_ccgfa :=_aaabe .getShadingDict ();if _ccgfa !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _aaabe .BitsPerCoordinate !=nil {_dgbce .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aaabe .BitsPerCoordinate );};if _aaabe .BitsPerComponent !=nil {_dgbce .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aaabe .BitsPerComponent );};if _aaabe .VerticesPerRow !=nil {_dgbce .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_aaabe .VerticesPerRow );};if _aaabe .Decode !=nil {_dgbce .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aaabe .Decode );};if _aaabe .Function !=nil {if len (_aaabe .Function )==1{_dgbce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aaabe .Function [0].ToPdfObject ());}else {_edfef :=_da .MakeArray ();for _ ,_dbcc :=range _aaabe .Function {_edfef .Append (_dbcc .ToPdfObject ());};_dgbce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edfef );};};return _aaabe ._ggcdb ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_aeff *PdfColorCalGray )GetNumComponents ()int {return 1};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_ceea _af .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fgee _g .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_gacef _g .Image )(*Image ,error );

// Compress an image.
Compress (_eddbg *Image ,_ecddb int64 )(*Image ,error );};var _egffa =false ;

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ggg :=NewPdfAction ();_geg :=&PdfActionThread {};_geg .PdfAction =_ggg ;_ggg .SetContext (_geg );return _geg ;};

// AddFont adds a font dictionary to the Font resources.
func (_agfga *PdfPage )AddFont (name _da .PdfObjectName ,font _da .PdfObject )error {if _agfga .Resources ==nil {_agfga .Resources =NewPdfPageResources ();};if _agfga .Resources .Font ==nil {_agfga .Resources .Font =_da .MakeDict ();};_ceffb ,_gdbc :=_da .TraceToDirectObject (_agfga .Resources .Font ).(*_da .PdfObjectDictionary );if !_gdbc {_bdd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_da .TraceToDirectObject (_agfga .Resources .Font ));return _dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ceffb .Set (name ,font );return nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_adab *_da .PdfObjectDictionary ;_faca *_da .PdfIndirectObject ;};

// C returns the value of the cyan component of the color.
func (_deab *PdfColorDeviceCMYK )C ()float64 {return float64 (_deab [0])};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_aaaa *XObjectForm )SetContentStream (content []byte ,encoder _da .StreamEncoder )error {_dcaae :=content ;if encoder ==nil {if _aaaa .Filter !=nil {encoder =_aaaa .Filter ;}else {encoder =_da .NewRawEncoder ();};};_edaba ,_adfcc :=encoder .EncodeBytes (_dcaae );if _adfcc !=nil {return _adfcc ;};_dcaae =_edaba ;_aaaa .Stream =_dcaae ;_aaaa .Filter =encoder ;return nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bgb .CharMetrics ;

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _da .PdfObject ;};var _ffaf ="";

// ToGoTime returns the date in time.Time format.
func (_gebbbe PdfDate )ToGoTime ()_c .Time {_ddcgg :=int (_gebbbe ._caggc *60*60+_gebbbe ._abcb *60);switch _gebbbe ._dafbc {case '-':_ddcgg =-_ddcgg ;case 'Z':_ddcgg =0;};_fgegd :=_bd .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_gebbbe ._dafbc ,_gebbbe ._caggc ,_gebbbe ._abcb );_cbgcc :=_c .FixedZone (_fgegd ,_ddcgg );return _c .Date (int (_gebbbe ._faege ),_c .Month (_gebbbe ._egbdc ),int (_gebbbe ._edffb ),int (_gebbbe ._agceg ),int (_gebbbe ._gfdbd ),int (_gebbbe ._dcbef ),0,_cbgcc );};

// ToInteger convert to an integer format.
func (_bdeg *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gbdg :=_ec .Pow (2,float64 (bits ))-1;return uint32 (_gbdg *_bdeg .Val ());};func (_gcf *PdfReader )newPdfActionGotoRFromDict (_gbe *_da .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bed ,_bae :=_ade (_gbe .Get ("\u0046"));if _bae !=nil {return nil ,_bae ;};return &PdfActionGoToR {D :_gbe .Get ("\u0044"),NewWindow :_gbe .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bed },nil ;};func (_adbfg *PdfReader )newPdfOutlineItemFromIndirectObject (_fbdfe *_da .PdfIndirectObject )(*PdfOutlineItem ,error ){_bedged ,_acabg :=_fbdfe .PdfObject .(*_da .PdfObjectDictionary );if !_acabg {return nil ,_bd .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dgefg :=NewPdfOutlineItem ();_cgafe :=_bedged .Get ("\u0054\u0069\u0074l\u0065");if _cgafe ==nil {return nil ,_bd .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_bbbgd ,_aebafa :=_da .GetString (_cgafe );if !_aebafa {return nil ,_bd .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cgafe );};_dgefg .Title =_bbbgd ;if _gefgf :=_bedged .Get ("\u0043\u006f\u0075n\u0074");_gefgf !=nil {_ffbc ,_dfad :=_gefgf .(*_da .PdfObjectInteger );if !_dfad {return nil ,_bd .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_gefgf );};_bfdba :=int64 (*_ffbc );_dgefg .Count =&_bfdba ;};if _ffdag :=_bedged .Get ("\u0044\u0065\u0073\u0074");_ffdag !=nil {_dgefg .Dest =_da .ResolveReference (_ffdag );if !_adbfg ._cdffd {_cgfga :=_adbfg .traverseObjectData (_dgefg .Dest );if _cgfga !=nil {return nil ,_cgfga ;};};};if _ggfcdc :=_bedged .Get ("\u0041");_ggfcdc !=nil {_dgefg .A =_da .ResolveReference (_ggfcdc );if !_adbfg ._cdffd {_fdcbee :=_adbfg .traverseObjectData (_dgefg .A );if _fdcbee !=nil {return nil ,_fdcbee ;};};};if _cgdd :=_bedged .Get ("\u0053\u0045");_cgdd !=nil {_dgefg .SE =nil ;};if _ggbgd :=_bedged .Get ("\u0043");_ggbgd !=nil {_dgefg .C =_da .ResolveReference (_ggbgd );};if _bgdgf :=_bedged .Get ("\u0046");_bgdgf !=nil {_dgefg .F =_da .ResolveReference (_bgdgf );};return _dgefg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gefe *PdfAnnotationRedact )ToPdfObject ()_da .PdfObject {_gefe .PdfAnnotation .ToPdfObject ();_fage :=_gefe ._dda ;_eafa :=_fage .PdfObject .(*_da .PdfObjectDictionary );_gefe .PdfAnnotationMarkup .appendToPdfDictionary (_eafa );_eafa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_eafa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gefe .QuadPoints );_eafa .SetIfNotNil ("\u0049\u0043",_gefe .IC );_eafa .SetIfNotNil ("\u0052\u004f",_gefe .RO );_eafa .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gefe .OverlayText );_eafa .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gefe .Repeat );_eafa .SetIfNotNil ("\u0044\u0041",_gefe .DA );_eafa .SetIfNotNil ("\u0051",_gefe .Q );return _fage ;};

// ToPdfObject implements interface PdfModel.
func (_cdad *PdfAnnotationUnderline )ToPdfObject ()_da .PdfObject {_cdad .PdfAnnotation .ToPdfObject ();_cdga :=_cdad ._dda ;_debb :=_cdga .PdfObject .(*_da .PdfObjectDictionary );_cdad .PdfAnnotationMarkup .appendToPdfDictionary (_debb );_debb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_debb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdad .QuadPoints );return _cdga ;};

// ToPdfObject implements interface PdfModel.
func (_fec *PdfActionHide )ToPdfObject ()_da .PdfObject {_fec .PdfAction .ToPdfObject ();_dfb :=_fec ._fca ;_cfge :=_dfb .PdfObject .(*_da .PdfObjectDictionary );_cfge .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeHide )));_cfge .SetIfNotNil ("\u0054",_fec .T );_cfge .SetIfNotNil ("\u0048",_fec .H );return _dfb ;};

// ToPdfObject implements interface PdfModel.
func (_dfdc *PdfAnnotationWatermark )ToPdfObject ()_da .PdfObject {_dfdc .PdfAnnotation .ToPdfObject ();_gcdg :=_dfdc ._dda ;_dafb :=_gcdg .PdfObject .(*_da .PdfObjectDictionary );_dafb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_dafb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dfdc .FixedPrint );return _gcdg ;};

// ToPdfObject implements interface PdfModel.
func (_gbef *PdfAnnotationScreen )ToPdfObject ()_da .PdfObject {_gbef .PdfAnnotation .ToPdfObject ();_bggb :=_gbef ._dda ;_cfce :=_bggb .PdfObject .(*_da .PdfObjectDictionary );_cfce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_cfce .SetIfNotNil ("\u0054",_gbef .T );_cfce .SetIfNotNil ("\u004d\u004b",_gbef .MK );_cfce .SetIfNotNil ("\u0041",_gbef .A );_cfce .SetIfNotNil ("\u0041\u0041",_gbef .AA );return _bggb ;};

// ToPdfObject returns the PDF representation of the function.
func (_geefa *PdfFunctionType2 )ToPdfObject ()_da .PdfObject {_cdcf :=_da .MakeDict ();_cdcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (2));_bbbf :=&_da .PdfObjectArray {};for _ ,_dccga :=range _geefa .Domain {_bbbf .Append (_da .MakeFloat (_dccga ));};_cdcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbbf );if _geefa .Range !=nil {_gega :=&_da .PdfObjectArray {};for _ ,_dbcgg :=range _geefa .Range {_gega .Append (_da .MakeFloat (_dbcgg ));};_cdcf .Set ("\u0052\u0061\u006eg\u0065",_gega );};if _geefa .C0 !=nil {_fadcc :=&_da .PdfObjectArray {};for _ ,_ccae :=range _geefa .C0 {_fadcc .Append (_da .MakeFloat (_ccae ));};_cdcf .Set ("\u0043\u0030",_fadcc );};if _geefa .C1 !=nil {_acdbf :=&_da .PdfObjectArray {};for _ ,_eaebf :=range _geefa .C1 {_acdbf .Append (_da .MakeFloat (_eaebf ));};_cdcf .Set ("\u0043\u0031",_acdbf );};_cdcf .Set ("\u004e",_da .MakeFloat (_geefa .N ));if _geefa ._cdfg !=nil {_geefa ._cdfg .PdfObject =_cdcf ;return _geefa ._cdfg ;};return _cdcf ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bgaf *PdfFont )SubsetRegistered ()error {switch _eeabd :=_bgaf ._fdbf .(type ){case *pdfFontType0 :_cdffe :=_eeabd .subsetRegistered ();if _cdffe !=nil {_bdd .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cdffe );return _cdffe ;};if _eeabd ._ggbfd !=nil {if _eeabd ._gacd !=nil {_eeabd ._gacd .ToPdfObject ();};_eeabd .ToPdfObject ();};default:_bdd .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_eeabd );};return nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _da .PdfObject ;MK _da .PdfObject ;A _da .PdfObject ;AA _da .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bcb *PdfActionGoToR )ToPdfObject ()_da .PdfObject {_bcb .PdfAction .ToPdfObject ();_aggb :=_bcb ._fca ;_gdb :=_aggb .PdfObject .(*_da .PdfObjectDictionary );_gdb .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoToR )));if _bcb .F !=nil {_gdb .Set ("\u0046",_bcb .F .ToPdfObject ());};_gdb .SetIfNotNil ("\u0044",_bcb .D );_gdb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bcb .NewWindow );return _aggb ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_dbfcf *PdfFieldButton )SetType (btype ButtonType ){_cfab :=uint32 (0);if _dbfcf .Ff !=nil {_cfab =uint32 (*_dbfcf .Ff );};switch btype {case ButtonTypePush :_cfab |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cfab |=FieldFlagRadio .Mask ();};_dbfcf .Ff =_da .MakeInteger (int64 (_cfab ));};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cabe *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cabe ._bece .(*PdfShadingPattern );};func (_cdd *PdfReader )newPdfActionMovieFromDict (_dab *_da .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dab .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dab .Get ("\u0054"),Operation :_dab .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};func (_eedb SignatureValidationResult )String ()string {var _gabad _baf .Buffer ;_gabad .WriteString (_bd .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_eedb .Name ));if _eedb .Date ._faege > 0{_gabad .WriteString (_bd .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_eedb .Date .ToGoTime ().String ()));}else {_gabad .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_eedb .Reason )> 0{_gabad .WriteString (_bd .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_eedb .Reason ));}else {_gabad .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_eedb .Location )> 0{_gabad .WriteString (_bd .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_eedb .Location ));}else {_gabad .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_eedb .ContactInfo )> 0{_gabad .WriteString (_bd .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_eedb .ContactInfo ));}else {_gabad .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_gabad .WriteString (_bd .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_eedb .Fields )));if _eedb .IsSigned {_gabad .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_gabad .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _eedb .IsVerified {_gabad .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_gabad .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _eedb .IsTrusted {_gabad .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_gabad .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_eedb .GeneralizedTime .IsZero (){_gabad .WriteString (_bd .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_eedb .GeneralizedTime .String ()));};return _gabad .String ();};func (_cbage *fontFile )loadFromSegments (_gdecd ,_eacga []byte )error {_bdd .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gdecd ),len (_eacga ));_beab :=_cbage .parseASCIIPart (_gdecd );if _beab !=nil {return _beab ;};_bdd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cbage );if len (_eacga )==0{return nil ;};_bdd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cbage );return nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_ddeg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=_ddeg .GetNumComponents (){return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecdda ,_agce :=_da .GetNumbersAsFloat (objects );if _agce !=nil {return nil ,_agce ;};return _ddeg .ColorFromFloats (_ecdda );};

// ToPdfObject implements interface PdfModel.
func (_ebgf *PdfAnnotationPopup )ToPdfObject ()_da .PdfObject {_ebgf .PdfAnnotation .ToPdfObject ();_gfg :=_ebgf ._dda ;_aae :=_gfg .PdfObject .(*_da .PdfObjectDictionary );_aae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0050\u006f\u0070u\u0070"));_aae .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebgf .Parent );_aae .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ebgf .Open );return _gfg ;};

// ToInteger convert to an integer format.
func (_efeg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_fdggf :=_ec .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fdggf *_efeg .R ()),uint32 (_fdggf *_efeg .G ()),uint32 (_fdggf *_efeg .B ())};};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_faaa *pdfFontSimple )SetEncoder (encoder _ceb .TextEncoder ){_faaa ._defgd =encoder };

// HasExtGState checks if ExtGState name is available.
func (_ebfb *PdfPage )HasExtGState (name _da .PdfObjectName )bool {if _ebfb .Resources ==nil {return false ;};if _ebfb .Resources .ExtGState ==nil {return false ;};_effd ,_cgeda :=_da .TraceToDirectObject (_ebfb .Resources .ExtGState ).(*_da .PdfObjectDictionary );if !_cgeda {_bdd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_da .TraceToDirectObject (_ebfb .Resources .ExtGState ));return false ;};_fgbda :=_effd .Get (name );_abdgg :=_fgbda !=nil ;return _abdgg ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_caadf *_da .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_da .PdfObjectName ;Filter *_da .PdfObjectName ;SubFilter *_da .PdfObjectName ;Contents *_da .PdfObjectString ;Cert _da .PdfObject ;ByteRange *_da .PdfObjectArray ;Reference *_da .PdfObjectArray ;Changes *_da .PdfObjectArray ;Name *_da .PdfObjectString ;M *_da .PdfObjectString ;Location *_da .PdfObjectString ;Reason *_da .PdfObjectString ;ContactInfo *_da .PdfObjectString ;R *_da .PdfObjectInteger ;V *_da .PdfObjectInteger ;PropBuild *_da .PdfObjectDictionary ;PropAuthTime *_da .PdfObjectInteger ;PropAuthType *_da .PdfObjectName ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bfcee *PdfFieldText )ToPdfObject ()_da .PdfObject {_bfcee .PdfField .ToPdfObject ();_gbed :=_bfcee ._dade ;_fdda :=_gbed .PdfObject .(*_da .PdfObjectDictionary );_fdda .Set ("\u0046\u0054",_da .MakeName ("\u0054\u0078"));if _bfcee .DA !=nil {_fdda .Set ("\u0044\u0041",_bfcee .DA );};if _bfcee .Q !=nil {_fdda .Set ("\u0051",_bfcee .Q );};if _bfcee .DS !=nil {_fdda .Set ("\u0044\u0053",_bfcee .DS );};if _bfcee .RV !=nil {_fdda .Set ("\u0052\u0056",_bfcee .RV );};if _bfcee .MaxLen !=nil {_fdda .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bfcee .MaxLen );};return _gbed ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_bacec *PdfFieldButton )IsPush ()bool {return _bacec .GetType ()==ButtonTypePush };func _dcab (_febg *_da .PdfObjectDictionary )(*PdfFieldText ,error ){_dgge :=&PdfFieldText {};_dgge .DA ,_ =_da .GetString (_febg .Get ("\u0044\u0041"));_dgge .Q ,_ =_da .GetInt (_febg .Get ("\u0051"));_dgge .DS ,_ =_da .GetString (_febg .Get ("\u0044\u0053"));_dgge .RV =_febg .Get ("\u0052\u0056");_dgge .MaxLen ,_ =_da .GetInt (_febg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _dgge ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_da .PdfIndirectObject ;SV *_da .PdfIndirectObject ;};func (_febe *PdfReader )newPdfFieldFromIndirectObject (_acge *_da .PdfIndirectObject ,_aebda *PdfField )(*PdfField ,error ){if _afdea ,_adfce :=_febe ._ccfcg .GetModelFromPrimitive (_acge ).(*PdfField );_adfce {return _afdea ,nil ;};_gacb ,_fged :=_da .GetDict (_acge );if !_fged {return nil ,_bd .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bafd :=NewPdfField ();_bafd ._dade =_acge ;_bafd ._dade .PdfObject =_gacb ;if _fgaaf ,_efag :=_da .GetName (_gacb .Get ("\u0046\u0054"));_efag {_bafd .FT =_fgaaf ;};if _aebda !=nil {_bafd .Parent =_aebda ;};_bafd .T ,_ =_gacb .Get ("\u0054").(*_da .PdfObjectString );_bafd .TU ,_ =_gacb .Get ("\u0054\u0055").(*_da .PdfObjectString );_bafd .TM ,_ =_gacb .Get ("\u0054\u004d").(*_da .PdfObjectString );_bafd .Ff ,_ =_gacb .Get ("\u0046\u0066").(*_da .PdfObjectInteger );_bafd .V =_gacb .Get ("\u0056");_bafd .DV =_gacb .Get ("\u0044\u0056");_bafd .AA =_gacb .Get ("\u0041\u0041");_dedag :=_bafd .FT ;if _dedag ==nil &&_aebda !=nil {_dedag =_aebda .FT ;};if _dedag !=nil {switch *_dedag {case "\u0054\u0078":_aafb ,_bceg :=_dcab (_gacb );if _bceg !=nil {return nil ,_bceg ;};_aafb .PdfField =_bafd ;_bafd ._bdga =_aafb ;case "\u0043\u0068":_decc ,_cceb :=_cgdb (_gacb );if _cceb !=nil {return nil ,_cceb ;};_decc .PdfField =_bafd ;_bafd ._bdga =_decc ;case "\u0042\u0074\u006e":_ddfbc ,_ddac :=_agdbd (_gacb );if _ddac !=nil {return nil ,_ddac ;};_ddfbc .PdfField =_bafd ;_bafd ._bdga =_ddfbc ;case "\u0053\u0069\u0067":_dddfa ,_ceaf :=_febe .newPdfFieldSignatureFromDict (_gacb );if _ceaf !=nil {return nil ,_ceaf ;};_dddfa .PdfField =_bafd ;_bafd ._bdga =_dddfa ;default:_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_bafd .FT );return nil ,_dbf .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _ddee ,_gbce :=_da .GetName (_gacb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gbce {if *_ddee =="\u0057\u0069\u0064\u0067\u0065\u0074"{_aggcf ,_abda :=_febe .newPdfAnnotationFromIndirectObject (_acge );if _abda !=nil {return nil ,_abda ;};_agdb ,_fdac :=_aggcf .GetContext ().(*PdfAnnotationWidget );if !_fdac {return nil ,_dbf .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_agdb ._gbec =_bafd ;_agdb .Parent =_bafd ._dade ;_bafd .Annotations =append (_bafd .Annotations ,_agdb );return _bafd ,nil ;};};_eaaa :=true ;if _ggfg ,_ebcbd :=_da .GetArray (_gacb .Get ("\u004b\u0069\u0064\u0073"));_ebcbd {_acfeeg :=make ([]*_da .PdfIndirectObject ,0,_ggfg .Len ());for _ ,_deac :=range _ggfg .Elements (){_bfcecf ,_aabc :=_da .GetIndirect (_deac );if !_aabc {_gaaeec ,_gbbe :=_da .GetStream (_deac );if _gbbe &&_gaaeec .PdfObjectDictionary !=nil {_cgcdb ,_dgccb :=_da .GetNameVal (_gaaeec .Get ("\u0054\u0079\u0070\u0065"));if _dgccb &&_cgcdb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bdd .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_dbf .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_eega ,_gdgga :=_da .GetDict (_bfcecf );if !_gdgga {return nil ,ErrTypeCheck ;};if _eaaa {_eaaa =!_dffg (_eega );};_acfeeg =append (_acfeeg ,_bfcecf );};for _ ,_edgfb :=range _acfeeg {if _eaaa {_fggb ,_geac :=_febe .newPdfAnnotationFromIndirectObject (_edgfb );if _geac !=nil {_bdd .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_geac );return nil ,_geac ;};_bbdb ,_adabb :=_fggb ._cae .(*PdfAnnotationWidget );if !_adabb {return nil ,ErrTypeCheck ;};_bbdb ._gbec =_bafd ;_bafd .Annotations =append (_bafd .Annotations ,_bbdb );}else {_fffgd ,_aede :=_febe .newPdfFieldFromIndirectObject (_edgfb ,_bafd );if _aede !=nil {_bdd .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_aede );return nil ,_aede ;};_bafd .Kids =append (_bafd .Kids ,_fffgd );};};};return _bafd ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_aeffd *PdfColorspaceICCBased )ToPdfObject ()_da .PdfObject {_dbd :=&_da .PdfObjectArray {};_dbd .Append (_da .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _fbgf *_da .PdfObjectStream ;if _aeffd ._ecdce !=nil {_fbgf =_aeffd ._ecdce ;}else {_fbgf =&_da .PdfObjectStream {};};_gggg :=_da .MakeDict ();_gggg .Set ("\u004e",_da .MakeInteger (int64 (_aeffd .N )));if _aeffd .Alternate !=nil {_gggg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_aeffd .Alternate .ToPdfObject ());};if _aeffd .Metadata !=nil {_gggg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aeffd .Metadata );};if _aeffd .Range !=nil {var _dbgg []_da .PdfObject ;for _ ,_cfbf :=range _aeffd .Range {_dbgg =append (_dbgg ,_da .MakeFloat (_cfbf ));};_gggg .Set ("\u0052\u0061\u006eg\u0065",_da .MakeArray (_dbgg ...));};_gggg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_aeffd .Data ))));_fbgf .Stream =_aeffd .Data ;_fbgf .PdfObjectDictionary =_gggg ;_dbd .Append (_fbgf );if _aeffd ._caebe !=nil {_aeffd ._caebe .PdfObject =_dbd ;return _aeffd ._caebe ;};return _dbd ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func _ceccg (_ecca string )(map[_ceb .CharCode ]_ceb .GlyphName ,error ){_fgge :=_dg .Split (_ecca ,"\u000a");_aceb :=make (map[_ceb .CharCode ]_ceb .GlyphName );for _ ,_ebeb :=range _fgge {_edbfa :=_degc .FindStringSubmatch (_ebeb );if _edbfa ==nil {continue ;};_dgagf ,_bcafc :=_edbfa [1],_edbfa [2];_bcfc ,_eebg :=_db .Atoi (_dgagf );if _eebg !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ebeb );return nil ,_da .ErrTypeError ;};_aceb [_ceb .CharCode (_bcfc )]=_ceb .GlyphName (_bcafc );};_bdd .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_aceb );return _aceb ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gaeb *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_acfef :=_ee .NewReader (img .getBase ());_geba :=_agc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._afefc ,img ._eafbb );_dbcg :=_ee .NewWriter (_geba );_gbfe :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_gggfc :=_gaeb .GetNumComponents ();_dfed :=make ([]uint32 ,_gggfc );_ebggd :=make ([]float64 ,_gggfc );for {_acdcf :=_acfef .ReadSamples (_dfed );if _acdcf ==_af .EOF {break ;}else if _acdcf !=nil {return img ,_acdcf ;};for _dgfg :=0;_dgfg < _gggfc ;_dgfg ++{_aeea :=float64 (_dfed [_dgfg ])/_gbfe ;_ebggd [_dgfg ]=_aeea ;};_baaa ,_acdcf :=_gaeb .TintTransform .Evaluate (_ebggd );if _acdcf !=nil {return img ,_acdcf ;};for _ ,_fcfag :=range _baaa {_fcfag =_ec .Min (_ec .Max (0,_fcfag ),1.0);if _acdcf =_dbcg .WriteSample (uint32 (_fcfag *_gbfe ));_acdcf !=nil {return img ,_acdcf ;};};};return _gaeb .AlternateSpace .ImageToRGB (_bcfdb (&_geba ));};func (_fcbf *pdfFontSimple )baseFields ()*fontCommon {return &_fcbf .fontCommon };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_bde :=NewPdfAction ();_aeb :=&PdfActionURI {};_aeb .PdfAction =_bde ;_bde .SetContext (_aeb );return _aeb ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aebf *PdfPageResources )GetColorspaceByName (keyName _da .PdfObjectName )(PdfColorspace ,bool ){_daffd ,_afagb :=_aebf .GetColorspaces ();if _afagb !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_afagb );return nil ,false ;};if _daffd ==nil {return nil ,false ;};_ebca ,_ffgaf :=_daffd .Colorspaces [string (keyName )];if !_ffgaf {return nil ,false ;};return _ebca ,true ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dabeg *PdfColorspaceLab )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcbg ,_egag :=_da .GetNumbersAsFloat (objects );if _egag !=nil {return nil ,_egag ;};return _dabeg .ColorFromFloats (_gcbg );};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bdbeg *Image )ToJBIG2Image ()(*_da .JBIG2Image ,error ){_dgace ,_fbcd :=_bdbeg .ToGoImage ();if _fbcd !=nil {return nil ,_fbcd ;};return _da .GoImageToJBIG2 (_dgace ,_da .JB2ImageAutoThreshold );};var (CourierName =_bgb .CourierName ;CourierBoldName =_bgb .CourierBoldName ;CourierObliqueName =_bgb .CourierObliqueName ;CourierBoldObliqueName =_bgb .CourierBoldObliqueName ;HelveticaName =_bgb .HelveticaName ;HelveticaBoldName =_bgb .HelveticaBoldName ;HelveticaObliqueName =_bgb .HelveticaObliqueName ;HelveticaBoldObliqueName =_bgb .HelveticaBoldObliqueName ;SymbolName =_bgb .SymbolName ;ZapfDingbatsName =_bgb .ZapfDingbatsName ;TimesRomanName =_bgb .TimesRomanName ;TimesBoldName =_bgb .TimesBoldName ;TimesItalicName =_bgb .TimesItalicName ;TimesBoldItalicName =_bgb .TimesBoldItalicName ;);

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbacd *PdfColorspaceDeviceCMYK )ToPdfObject ()_da .PdfObject {return _da .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_fgecd *PdfWriter )writeString (_dcbce string ){if _fgecd ._ggef !=nil {return ;};_dccaa ,_cgcac :=_fgecd ._deffg .WriteString (_dcbce );_fgecd ._efddg +=int64 (_dccaa );_fgecd ._ggef =_cgcac ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ceac *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_cecad :=RC4_128bit ;if options !=nil {_cecad =options .Algorithm ;};_bfbda :=_ae .PermOwner ;if options !=nil {_bfbda =options .Permissions ;};var _dbacff _fc .Filter ;switch _cecad {case RC4_128bit :_dbacff =_fc .NewFilterV2 (16);case AES_128bit :_dbacff =_fc .NewFilterAESV2 ();case AES_256bit :_dbacff =_fc .NewFilterAESV3 ();default:return _bd .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_ggdca ,_eebec ,_gbde :=_da .PdfCryptNewEncrypt (_dbacff ,userPass ,ownerPass ,_bfbda );if _gbde !=nil {return _gbde ;};_ceac ._fbeda =_ggdca ;if _eebec .Major !=0{_ceac .SetVersion (_eebec .Major ,_eebec .Minor );};_ceac ._dedga =_eebec .Encrypt ;_ceac ._cgbf =_da .MakeArray (_da .MakeHexString (_eebec .ID0 ),_da .MakeHexString (_eebec .ID1 ));_bdgb :=_da .MakeIndirectObject (_eebec .Encrypt );_ceac ._ddgdc =_bdgb ;_ceac .addObject (_bdgb );return nil ;};func (_aced *PdfAppender )replaceObject (_dagfg ,_ecdc _da .PdfObject ){switch _gbae :=_dagfg .(type ){case *_da .PdfIndirectObject :_aced ._ebdd [_ecdc ]=_gbae .ObjectNumber ;case *_da .PdfObjectStream :_aced ._ebdd [_ecdc ]=_gbae .ObjectNumber ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gdfa *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbecd :=vals [0];_gbg :=[]float64 {_bbecd };_feeff ,_eccd :=_gdfa .TintTransform .Evaluate (_gbg );if _eccd !=nil {_bdd .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_eccd );_bdd .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gdfa .TintTransform );return nil ,_eccd ;};_bdd .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_feeff ,_gdfa .AlternateSpace );_edbf ,_eccd :=_gdfa .AlternateSpace .ColorFromFloats (_feeff );if _eccd !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_eccd );return nil ,_eccd ;};return _edbf ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _da .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_gceg *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddgaa :=vals [0];if _ddgaa < 0.0||_ddgaa > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agbd :=vals [1];if _agbd < 0.0||_agbd > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gafdf :=vals [2];if _gafdf < 0.0||_gafdf > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgag :=NewPdfColorDeviceRGB (_ddgaa ,_agbd ,_gafdf );return _bgag ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _da .PdfObject )(PdfColorspace ,error ){var _efda *_da .PdfIndirectObject ;var _bfec *_da .PdfObjectName ;var _adeg *_da .PdfObjectArray ;if _cdadb ,_gdabd :=obj .(*_da .PdfIndirectObject );_gdabd {_efda =_cdadb ;};obj =_da .TraceToDirectObject (obj );switch _cbffd :=obj .(type ){case *_da .PdfObjectArray :_adeg =_cbffd ;case *_da .PdfObjectName :_bfec =_cbffd ;};if _bfec !=nil {switch *_bfec {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_bdd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bfec );return nil ,_abbae ;};};if _adeg !=nil &&_adeg .Len ()> 0{var _egca _da .PdfObject =_efda ;if _efda ==nil {_egca =_adeg ;};if _edbd ,_fda :=_da .GetName (_adeg .Get (0));_fda {switch _edbd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _adeg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _adeg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _adeg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _cbd (_egca );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _eecb (_egca );case "\u004c\u0061\u0062":return _adae (_egca );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cefa (_egca );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bfdbe (_egca );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _decgb (_egca );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _gdaa (_egca );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _agda (_egca );default:_bdd .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_edbd );};};};_bdd .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};type pdfSignDictionary struct{*_da .PdfObjectDictionary ;_bega *SignatureHandler ;_aefa *PdfSignature ;_gdccc int64 ;_ggagf int ;_cecdd int ;_cceef int ;_gfec int ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ddbb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// String implements interface PdfObject.
func (_eb *PdfAction )String ()string {_de ,_cgg :=_eb .ToPdfObject ().(*_da .PdfIndirectObject );if _cgg {return _bd .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eb ._cg ,_de .PdfObject .String ());};return "";};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_bagd *PdfField )IsTerminal ()bool {return len (_bagd .Kids )==0};type pdfFont interface{_bgb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_da .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_fbbde *PdfPageResources )GenerateXObjectName ()_da .PdfObjectName {_dfecc :=1;for {_adfcb :=_da .MakeName (_bd .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dfecc ));if !_fbbde .HasXObjectByName (*_adfcb ){return *_adfcb ;};_dfecc ++;};};func _fabfb (_ffdba *PdfField ,_ebcf _da .PdfObject )error {switch _ffdba .GetContext ().(type ){case *PdfFieldText :switch _abfd :=_ebcf .(type ){case *_da .PdfObjectName :_cfaagc :=_abfd ;_bdd .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cfaagc .String ());_ffdba .V =_da .MakeEncodedString (_abfd .String (),true );case *_da .PdfObjectString :_ffdba .V =_da .MakeEncodedString (_abfd .String (),true );default:_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_abfd ,_abfd );};case *PdfFieldButton :switch _ebcf .(type ){case *_da .PdfObjectName :if len (_ebcf .String ())> 0{_ffdba .V =_ebcf ;_fcfc (_ffdba ,_ebcf );};case *_da .PdfObjectString :if len (_ebcf .String ())> 0{_ffdba .V =_da .MakeName (_ebcf .String ());_fcfc (_ffdba ,_ffdba .V );};default:_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ffdba .PartialName (),_ebcf );_ffdba .V =_ebcf ;};case *PdfFieldChoice :switch _ebcf .(type ){case *_da .PdfObjectName :if len (_ebcf .String ())> 0{_ffdba .V =_da .MakeString (_ebcf .String ());_fcfc (_ffdba ,_ebcf );};case *_da .PdfObjectString :if len (_ebcf .String ())> 0{_ffdba .V =_ebcf ;_fcfc (_ffdba ,_da .MakeName (_ebcf .String ()));};default:_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ffdba .PartialName (),_ebcf );_ffdba .V =_ebcf ;};case *PdfFieldSignature :_bdd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ffdba .PartialName (),_ebcf );};return nil ;};func (_dafd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetTrailer returns the PDF's trailer dictionary.
func (_bccgd *PdfReader )GetTrailer ()(*_da .PdfObjectDictionary ,error ){_acgb :=_bccgd ._baeg .GetTrailer ();if _acgb ==nil {return nil ,_dbf .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _acgb ,nil ;};func _cefda (_ecedb *_da .PdfObjectDictionary ,_fbdf *fontCommon )(*pdfFontType0 ,error ){_bbga ,_dfcff :=_da .GetArray (_ecedb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_dfcff {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fbdf );return nil ,_da .ErrRangeError ;};if _bbga .Len ()!=1{_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bbga .Len ());return nil ,_da .ErrRangeError ;};_daabe ,_ecge :=_cdeee (_bbga .Get (0),false );if _ecge !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_ecge ,_fbdf );return nil ,_ecge ;};_ggec :=_fagbc (_fbdf );_ggec .DescendantFont =_daabe ;_begf ,_dfcff :=_da .GetNameVal (_ecedb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dfcff {if _begf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_begf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_ggec ._gacd =_ceb .NewIdentityTextEncoder (_begf );}else if _ga .IsPredefinedCMap (_begf ){_ggec ._acbdf ,_ecge =_ga .LoadPredefinedCMap (_begf );if _ecge !=nil {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_begf ,_ecge );};}else {_bdd .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_begf );};};if _fgefc :=_daabe .baseFields ()._ecda ;_fgefc !=nil {if _agfggf :=_fgefc .Name ();_agfggf =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_agfggf =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_agfggf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_agfggf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_ggec ._gacd =_ceb .NewCMapEncoder (_begf ,_ggec ._acbdf ,_fgefc );};};return _ggec ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ffab *PdfReader )GetPageLabels ()(_da .PdfObject ,error ){_bfag :=_da .ResolveReference (_ffab ._edcc .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bfag ==nil {return nil ,nil ;};if !_ffab ._cdffd {_bfacfd :=_ffab .traverseObjectData (_bfag );if _bfacfd !=nil {return nil ,_bfacfd ;};};return _bfag ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bdbb pdfCIDFontType2 )GetCharMetrics (code _ceb .CharCode )(_bgb .CharMetrics ,bool ){if _gfefbb ,_caecf :=_bdbb ._ecagc [code ];_caecf {return _bgb .CharMetrics {Wx :float64 (_gfefbb )},true ;};_bfff :=rune (code );_ffdf ,_gaaaf :=_bdbb ._fcege [_bfff ];if !_gaaaf {_ffdf =int (_bdbb ._cgbbf );};return _bgb .CharMetrics {Wx :float64 (_ffdf )},true ;};func _dccbf ()string {_bbca :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _bdgcf _baf .Buffer ;for _addfa :=0;_addfa < 6;_addfa ++{_bdgcf .WriteRune (rune (_bbca [_cf .Intn (len (_bbca ))]));};return _bdgcf .String ();};

// GetAction returns the PDF action for the annotation link.
func (_facb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _facb ._eba !=nil {return _facb ._eba ,nil ;};if _facb .A ==nil {return nil ,nil ;};if _facb ._afde ==nil {return nil ,nil ;};_dee ,_cab :=_facb ._afde .loadAction (_facb .A );if _cab !=nil {return nil ,_cab ;};_facb ._eba =_dee ;return _facb ._eba ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_efbe *fontFile )parseASCIIPart (_efaee []byte )error {if len (_efaee )< 2||string (_efaee [:2])!="\u0025\u0021"{return _dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_bcgcbd ,_ceae ,_bbcf :=_gabf (_efaee );if _bbcf !=nil {return _bbcf ;};_acaeb :=_ddeeb (_bcgcbd );_efbe ._gabeg =_acaeb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _efbe ._gabeg ==""{_bdd .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _ceae !=""{_eccgf ,_dage :=_ceccg (_ceae );if _dage !=nil {return _dage ;};_bfgac ,_dage :=_ceb .NewCustomSimpleTextEncoder (_eccgf ,nil );if _dage !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_dage );return nil ;};_efbe ._cfac =_bfgac ;};return nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_gggff *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gggff .HiVal )};};func (_fef *PdfReader )newPdfActionTransFromDict (_bcag *_da .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_bcag .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_aecf *PdfAnnotationSound )ToPdfObject ()_da .PdfObject {_aecf .PdfAnnotation .ToPdfObject ();_fab :=_aecf ._dda ;_dgba :=_fab .PdfObject .(*_da .PdfObjectDictionary );_aecf .PdfAnnotationMarkup .appendToPdfDictionary (_dgba );_dgba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u006f\u0075n\u0064"));_dgba .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_aecf .Sound );_dgba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aecf .Name );return _fab ;};func _fbga ()_c .Time {return _cgafed };

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bcgcc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_eaaac *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _eaaac .baseFields ()._daeea !=nil {return _eaaac .baseFields ()._daeea ;};if _ebbg :=_eaaac ._fdbf .getFontDescriptor ();_ebbg !=nil {return _ebbg ;};_bdd .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_eaaac );return nil ;};

// ToInteger convert to an integer format.
func (_daaf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ddfb :=_ec .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ddfb *_daaf .A ()),uint32 (_ddfb *_daaf .B ()),uint32 (_ddfb *_daaf .C ())};};

// ToPdfObject returns the PDF representation of the pattern.
func (_cgbgd *PdfPattern )ToPdfObject ()_da .PdfObject {_adefc :=_cgbgd .getDict ();_adefc .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_adefc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (_cgbgd .PatternType ));return _cgbgd ._febc ;};func (_bcfde *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_cffeg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _da .PdfObject ;Popup *PdfAnnotationPopup ;CA _da .PdfObject ;RC _da .PdfObject ;CreationDate _da .PdfObject ;IRT _da .PdfObject ;Subj _da .PdfObject ;RT _da .PdfObject ;IT _da .PdfObject ;ExData _da .PdfObject ;};func (_dbagd *PdfAcroForm )filteredFields (_eded FieldFilterFunc ,_fgbce bool )[]*PdfField {if _dbagd ==nil {return nil ;};return _dfdgb (_dbagd .Fields ,_eded ,_fgbce );};func _gcdgb (_bbeg *_da .PdfObjectDictionary )(*PdfShadingType2 ,error ){_eadeb :=PdfShadingType2 {};_fbgbf :=_bbeg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fbgbf ==nil {_bdd .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_daadee ,_aaege :=_fbgbf .(*_da .PdfObjectArray );if !_aaege {_bdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbgbf );return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _daadee .Len ()!=4{_bdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_daadee .Len ());return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_eadeb .Coords =_daadee ;if _ebdgf :=_bbeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ebdgf !=nil {_ebdgf =_da .TraceToDirectObject (_ebdgf );_gfee ,_dfggb :=_ebdgf .(*_da .PdfObjectArray );if !_dfggb {_bdd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebdgf );return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eadeb .Domain =_gfee ;};_fbgbf =_bbeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbgbf ==nil {_bdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_eadeb .Function =[]PdfFunction {};if _cdgcb ,_bceege :=_fbgbf .(*_da .PdfObjectArray );_bceege {for _ ,_ccgfd :=range _cdgcb .Elements (){_bada ,_eege :=_ffdgg (_ccgfd );if _eege !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eege );return nil ,_eege ;};_eadeb .Function =append (_eadeb .Function ,_bada );};}else {_bacc ,_fabg :=_ffdgg (_fbgbf );if _fabg !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fabg );return nil ,_fabg ;};_eadeb .Function =append (_eadeb .Function ,_bacc );};if _bedae :=_bbeg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bedae !=nil {_bedae =_da .TraceToDirectObject (_bedae );_gbgca ,_bfcbg :=_bedae .(*_da .PdfObjectArray );if !_bfcbg {_bdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bedae );return nil ,_da .ErrTypeError ;};if _gbgca .Len ()!=2{_bdd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbgca .Len ());return nil ,ErrInvalidAttribute ;};_eadeb .Extend =_gbgca ;};return &_eadeb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egcg *PdfShadingType2 )ToPdfObject ()_da .PdfObject {_egcg .PdfShading .ToPdfObject ();_ddgad ,_dbfef :=_egcg .getShadingDict ();if _dbfef !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ddgad ==nil {_bdd .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _egcg .Coords !=nil {_ddgad .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_egcg .Coords );};if _egcg .Domain !=nil {_ddgad .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egcg .Domain );};if _egcg .Function !=nil {if len (_egcg .Function )==1{_ddgad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egcg .Function [0].ToPdfObject ());}else {_fgdd :=_da .MakeArray ();for _ ,_fbbcg :=range _egcg .Function {_fgdd .Append (_fbbcg .ToPdfObject ());};_ddgad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgdd );};};if _egcg .Extend !=nil {_ddgad .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_egcg .Extend );};return _egcg ._ggcdb ;};func (_bdfag *PdfWriter )addObjects (_eebeb _da .PdfObject )error {_bdd .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _ebfc ,_ebaea :=_eebeb .(*_da .PdfIndirectObject );_ebaea {_bdd .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bdd .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_eebeb ,_ebfc );_bdd .Log .Trace ("\u002d\u0020\u0025\u0073",_ebfc .PdfObject );if _bdfag .addObject (_ebfc ){_gbdgc :=_bdfag .addObjects (_ebfc .PdfObject );if _gbdgc !=nil {return _gbdgc ;};};return nil ;};if _afbcd ,_daffc :=_eebeb .(*_da .PdfObjectStream );_daffc {_bdd .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_bdd .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_eebeb ,_eebeb );if _bdfag .addObject (_afbcd ){_aefbg :=_bdfag .addObjects (_afbcd .PdfObjectDictionary );if _aefbg !=nil {return _aefbg ;};};return nil ;};if _ffdeb ,_edde :=_eebeb .(*_da .PdfObjectDictionary );_edde {_bdd .Log .Trace ("\u0044\u0069\u0063\u0074");_bdd .Log .Trace ("\u002d\u0020\u0025\u0073",_eebeb );for _ ,_ebadc :=range _ffdeb .Keys (){_agcgg :=_ffdeb .Get (_ebadc );if _dbee ,_ccde :=_agcgg .(*_da .PdfObjectReference );_ccde {_agcgg =_dbee .Resolve ();_ffdeb .Set (_ebadc ,_agcgg );};if _ebadc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _aggga :=_bdfag .addObjects (_agcgg );_aggga !=nil {return _aggga ;};}else {if _ ,_ddgefb :=_agcgg .(*_da .PdfObjectNull );_ddgefb {continue ;};if _bcbab :=_bdfag .hasObject (_agcgg );!_bcbab {_bdd .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_agcgg ,_agcgg ,_agcgg );_bdfag ._bggga [_agcgg ]=append (_bdfag ._bggga [_agcgg ],_ffdeb );};};};return nil ;};if _dgcad ,_ffegg :=_eebeb .(*_da .PdfObjectArray );_ffegg {_bdd .Log .Trace ("\u0041\u0072\u0072a\u0079");_bdd .Log .Trace ("\u002d\u0020\u0025\u0073",_eebeb );if _dgcad ==nil {return _dbf .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _abab ,_ebfd :=range _dgcad .Elements (){if _agge ,_ecafe :=_ebfd .(*_da .PdfObjectReference );_ecafe {_ebfd =_agge .Resolve ();_dgcad .Set (_abab ,_ebfd );};if _bbdgf :=_bdfag .addObjects (_ebfd );_bbdgf !=nil {return _bbdgf ;};};return nil ;};if _ ,_ceddf :=_eebeb .(*_da .PdfObjectReference );_ceddf {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_eebeb );return _dbf .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_gebbb *PdfColorspaceCalGray )ToPdfObject ()_da .PdfObject {_ddf :=&_da .PdfObjectArray {};_ddf .Append (_da .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_bfcc :=_da .MakeDict ();if _gebbb .WhitePoint !=nil {_bfcc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_da .MakeArray (_da .MakeFloat (_gebbb .WhitePoint [0]),_da .MakeFloat (_gebbb .WhitePoint [1]),_da .MakeFloat (_gebbb .WhitePoint [2])));}else {_bdd .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gebbb .BlackPoint !=nil {_bfcc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_da .MakeArray (_da .MakeFloat (_gebbb .BlackPoint [0]),_da .MakeFloat (_gebbb .BlackPoint [1]),_da .MakeFloat (_gebbb .BlackPoint [2])));};_bfcc .Set ("\u0047\u0061\u006dm\u0061",_da .MakeFloat (_gebbb .Gamma ));_ddf .Append (_bfcc );if _gebbb ._adbc !=nil {_gebbb ._adbc .PdfObject =_ddf ;return _gebbb ._adbc ;};return _ddf ;};

// ToPdfObject implements interface PdfModel.
func (_gce *PdfActionGoTo3DView )ToPdfObject ()_da .PdfObject {_gce .PdfAction .ToPdfObject ();_eeg :=_gce ._fca ;_ea :=_eeg .PdfObject .(*_da .PdfObjectDictionary );_ea .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoTo3DView )));_ea .SetIfNotNil ("\u0054\u0041",_gce .TA );_ea .SetIfNotNil ("\u0056",_gce .V );return _eeg ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_edccg *PdfPageResources )SetXObjectByName (keyName _da .PdfObjectName ,stream *_da .PdfObjectStream )error {if _edccg .XObject ==nil {_edccg .XObject =_da .MakeDict ();};_gabd :=_da .TraceToDirectObject (_edccg .XObject );_fgde ,_cfffg :=_gabd .(*_da .PdfObjectDictionary );if !_cfffg {_bdd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_edccg .XObject ,_gabd );return _dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgde .Set (keyName ,stream );return nil ;};

// G returns the value of the green component of the color.
func (_gfage *PdfColorDeviceRGB )G ()float64 {return float64 (_gfage [1])};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_eeag byte )byte ;

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _da .StreamEncoder )(*XObjectImage ,error ){_gafcf :=NewXObjectImage ();return UpdateXObjectImageFromImage (_gafcf ,img ,cs ,encoder );};

// ToPdfObject returns the PDF representation of the function.
func (_dbacf *PdfFunctionType4 )ToPdfObject ()_da .PdfObject {_edag :=_dbacf ._cdac ;if _edag ==nil {_dbacf ._cdac =&_da .PdfObjectStream {};_edag =_dbacf ._cdac ;};_bggfb :=_da .MakeDict ();_bggfb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (4));_cgbgf :=&_da .PdfObjectArray {};for _ ,_deeb :=range _dbacf .Domain {_cgbgf .Append (_da .MakeFloat (_deeb ));};_bggfb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgbgf );_eeebd :=&_da .PdfObjectArray {};for _ ,_ggbgg :=range _dbacf .Range {_eeebd .Append (_da .MakeFloat (_ggbgg ));};_bggfb .Set ("\u0052\u0061\u006eg\u0065",_eeebd );if _dbacf ._fcded ==nil &&_dbacf .Program !=nil {_dbacf ._fcded =[]byte (_dbacf .Program .String ());};_bggfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_dbacf ._fcded ))));_edag .Stream =_dbacf ._fcded ;_edag .PdfObjectDictionary =_bggfb ;return _edag ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_da .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_agggb *_da .PdfIndirectObject ;};type pdfCIDFontType2 struct{fontCommon ;_gfca *_da .PdfIndirectObject ;_dgfbb _ceb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_da .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _da .PdfObject ;W _da .PdfObject ;DW2 _da .PdfObject ;W2 _da .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _da .PdfObject ;_ecagc map[_ceb .CharCode ]float64 ;_cgbbf float64 ;_fcege map[rune ]int ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_aegef *PdfReader )Inspect ()(map[string ]int ,error ){return _aegef ._baeg .Inspect ()};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ecedg *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bdd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_dbf .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ToPdfObject implements interface PdfModel.
func (_bdcad *PdfAnnotationPolyLine )ToPdfObject ()_da .PdfObject {_bdcad .PdfAnnotation .ToPdfObject ();_cffa :=_bdcad ._dda ;_fgfg :=_cffa .PdfObject .(*_da .PdfObjectDictionary );_bdcad .PdfAnnotationMarkup .appendToPdfDictionary (_fgfg );_fgfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_fgfg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bdcad .Vertices );_fgfg .SetIfNotNil ("\u004c\u0045",_bdcad .LE );_fgfg .SetIfNotNil ("\u0042\u0053",_bdcad .BS );_fgfg .SetIfNotNil ("\u0049\u0043",_bdcad .IC );_fgfg .SetIfNotNil ("\u0042\u0045",_bdcad .BE );_fgfg .SetIfNotNil ("\u0049\u0054",_bdcad .IT );_fgfg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bdcad .Measure );return _cffa ;};

// K returns the value of the key component of the color.
func (_gfefd *PdfColorDeviceCMYK )K ()float64 {return float64 (_gfefd [3])};func (_bgedg *pdfFontSimple )getFontEncoding ()(_gdgcf string ,_cabf map[_ceb .CharCode ]_ceb .GlyphName ,_ecgg error ){_gdgcf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _adeb ,_cagcb :=_ddacd [_bgedg ._eeacc ];_cagcb {_gdgcf =_adeb ;}else if _bgedg .fontFlags ()&_ffffa !=0{for _adbf ,_gbbf :=range _ddacd {if _dg .Contains (_bgedg ._eeacc ,_adbf ){_gdgcf =_gbbf ;break ;};};};if _bgedg .Encoding ==nil {return _gdgcf ,nil ,nil ;};switch _eggfe :=_bgedg .Encoding .(type ){case *_da .PdfObjectName :return string (*_eggfe ),nil ,nil ;case *_da .PdfObjectDictionary :_bgfc ,_bcda :=_da .GetName (_eggfe .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bcda {_gdgcf =_bgfc .String ();};if _dfcab :=_eggfe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_dfcab !=nil {_dfeeg ,_gbffb :=_da .GetArray (_dfcab );if !_gbffb {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_eggfe ,_eggfe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_da .ErrTypeError ;};_cabf ,_ecgg =_ceb .FromFontDifferences (_dfeeg );};return _gdgcf ,_cabf ,_ecgg ;default:_bdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bgedg .Encoding ,_bgedg .Encoding );return "",nil ,_da .ErrTypeError ;};};func _dffg (_cfgad *_da .PdfObjectDictionary )bool {for _ ,_gbfa :=range _cfgad .Keys (){if _ ,_eaegg :=_fedfg [_gbfa .String ()];_eaegg {return true ;};};return false ;};func _geca (_effc *_da .PdfObjectDictionary )(*PdfTilingPattern ,error ){_eabf :=&PdfTilingPattern {};_bddeg :=_effc .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _bddeg ==nil {_bdd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbcbb ,_babfd :=_bddeg .(*_da .PdfObjectInteger );if !_babfd {_bdd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bddeg );return nil ,_da .ErrTypeError ;};_eabf .PaintType =_cbcbb ;_bddeg =_effc .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bddeg ==nil {_bdd .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfgbb ,_babfd :=_bddeg .(*_da .PdfObjectInteger );if !_babfd {_bdd .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bddeg );return nil ,_da .ErrTypeError ;};_eabf .TilingType =_cfgbb ;_bddeg =_effc .Get ("\u0042\u0042\u006f\u0078");if _bddeg ==nil {_bdd .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bddeg =_da .TraceToDirectObject (_bddeg );_adafe ,_babfd :=_bddeg .(*_da .PdfObjectArray );if !_babfd {_bdd .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bddeg );return nil ,_da .ErrTypeError ;};_abdac ,_aebed :=NewPdfRectangle (*_adafe );if _aebed !=nil {_bdd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_aebed );return nil ,_aebed ;};_eabf .BBox =_abdac ;_bddeg =_effc .Get ("\u0058\u0053\u0074e\u0070");if _bddeg ==nil {_bdd .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_debd ,_aebed :=_da .GetNumberAsFloat (_bddeg );if _aebed !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_debd );return nil ,_aebed ;};_eabf .XStep =_da .MakeFloat (_debd );_bddeg =_effc .Get ("\u0059\u0053\u0074e\u0070");if _bddeg ==nil {_bdd .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_deedg ,_aebed :=_da .GetNumberAsFloat (_bddeg );if _aebed !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_deedg );return nil ,_aebed ;};_eabf .YStep =_da .MakeFloat (_deedg );_bddeg =_effc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bddeg ==nil {_bdd .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_effc ,_babfd =_da .TraceToDirectObject (_bddeg ).(*_da .PdfObjectDictionary );if !_babfd {return nil ,_bd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bddeg );};_aadf ,_aebed :=NewPdfPageResourcesFromDict (_effc );if _aebed !=nil {return nil ,_aebed ;};_eabf .Resources =_aadf ;if _eeddb :=_effc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eeddb !=nil {_gbbg ,_fdfdg :=_eeddb .(*_da .PdfObjectArray );if !_fdfdg {_bdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeddb );return nil ,_da .ErrTypeError ;};_eabf .Matrix =_gbbg ;};return _eabf ,nil ;};func _fbbba (_gfaba _bgb .StdFont )pdfFontSimple {_gbgf :=_gfaba .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_bcga :"\u0054\u0079\u0070e\u0031",_eeacc :_gfaba .Name ()},_aegbb :_gfaba .GetMetricsTable (),_dcdg :&PdfFontDescriptor {FontName :_da .MakeName (string (_gbgf .Name )),FontFamily :_da .MakeName (_gbgf .Family ),FontWeight :_da .MakeFloat (float64 (_gbgf .Weight )),Flags :_da .MakeInteger (int64 (_gbgf .Flags )),FontBBox :_da .MakeArrayFromFloats (_gbgf .BBox [:]),ItalicAngle :_da .MakeFloat (_gbgf .ItalicAngle ),Ascent :_da .MakeFloat (_gbgf .Ascent ),Descent :_da .MakeFloat (_gbgf .Descent ),CapHeight :_da .MakeFloat (_gbgf .CapHeight ),XHeight :_da .MakeFloat (_gbgf .XHeight ),StemV :_da .MakeFloat (_gbgf .StemV ),StemH :_da .MakeFloat (_gbgf .StemH )},_ecacg :_gfaba .Encoder ()};};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dgac :=NewPdfAnnotation ();_bcgde :=&PdfAnnotationWidget {};_bcgde .PdfAnnotation =_dgac ;_dgac .SetContext (_bcgde );return _bcgde ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_eac :=NewPdfAnnotation ();_bcbb :=&PdfAnnotationStrikeOut {};_bcbb .PdfAnnotation =_eac ;_bcbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eac .SetContext (_bcbb );return _bcbb ;};

// SetDecode sets the decode image float slice.
func (_ggbae *Image )SetDecode (decode []float64 ){_ggbae ._eafbb =decode };

// M returns the value of the magenta component of the color.
func (_ffda *PdfColorDeviceCMYK )M ()float64 {return float64 (_ffda [1])};func (_efdc *PdfFont )baseFields ()*fontCommon {if _efdc ._fdbf ==nil {_bdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _efdc ._fdbf .baseFields ();};func (_eddd *pdfFontSimple )updateStandard14Font (){_cgfb ,_fcff :=_eddd .Encoder ().(_ceb .SimpleEncoder );if !_fcff {_bdd .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eddd .Encoder (),_eddd );return ;};_agaf :=_cgfb .Charcodes ();_eddd ._acfc =make (map[_ceb .CharCode ]float64 ,len (_agaf ));for _ ,_ddfg :=range _agaf {_cagg ,_ :=_cgfb .CharcodeToRune (_ddfg );_eddd ._acfc [_ddfg ]=_eddd ._aegbb [_cagg ].Wx ;};};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_fcebe =keywords };func (_gbfde *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gbfde ._daeea ==nil &&_gbfde .DescendantFont !=nil {return _gbfde .DescendantFont .FontDescriptor ();};return _gbfde ._daeea ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _da .PdfObjectName ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_edegaf *PdfFont )CharcodesToStrings (charcodes []_ceb .CharCode )([]string ,int ,int ){_aaabf :=_edegaf .baseFields ();_dced :=make ([]string ,0,len (charcodes ));_edaa :=0;for _ ,_eddc :=range charcodes {if _aaabf ._ecda !=nil {if _cgbgb ,_eddbc :=_aaabf ._ecda .CharcodeToUnicode (_ga .CharCode (_eddc ));_eddbc {_dced =append (_dced ,_cgbgb );continue ;};};_gbag :=_edegaf .Encoder ();if _gbag !=nil {if _dgce ,_cfde :=_gbag .CharcodeToRune (_eddc );_cfde {_dced =append (_dced ,string (_dgce ));continue ;};};_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_eddc ,charcodes ,_aaabf .isCIDFont (),_edegaf ,_gbag );_edaa ++;_dced =append (_dced ,_ga .MissingCodeString );};if _edaa !=0{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_edaa ,_edegaf );};return _dced ,len (_dced ),_edaa ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_cacf *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _agae []_ceb .TextEncoder ;if _fgbbc :=_cacf .baseFields ()._ecda ;_fgbbc !=nil {_agae =append (_agae ,_ceb .NewCMapEncoder ("",nil ,_fgbbc ));};if _fcef :=_cacf .Encoder ();_fcef !=nil {_agae =append (_agae ,_fcef );};var _eecg _baf .Buffer ;var _ccdfb int ;for _ ,_gdec :=range data {var _aaabd bool ;for _ ,_aecef :=range _agae {if _cdbg :=_aecef .Encode (string (_gdec ));len (_cdbg )> 0{_eecg .Write (_cdbg );_aaabd =true ;break ;};};if !_aaabd {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_gdec );_ccdfb ++;};};if _ccdfb !=0{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_ccdfb ,_cacf ,_agae );};return _eecg .Bytes (),_ccdfb ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_cae PdfModel ;Rect _da .PdfObject ;Contents _da .PdfObject ;P _da .PdfObject ;NM _da .PdfObject ;M _da .PdfObject ;F _da .PdfObject ;AP _da .PdfObject ;AS _da .PdfObject ;Border _da .PdfObject ;C _da .PdfObject ;StructParent _da .PdfObject ;OC _da .PdfObject ;_dda *_da .PdfIndirectObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aegdg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_aegdg .NumInputs {_bdd .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_dbf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _aegdg ._ddfa ==nil {_deec :=_aegdg .processSamples ();if _deec !=nil {return nil ,_deec ;};};_aadg :=_aegdg .Encode ;if _aadg ==nil {_aadg =[]float64 {};for _cbedg :=0;_cbedg < len (_aegdg .Size );_cbedg ++{_aadg =append (_aadg ,0);_aadg =append (_aadg ,float64 (_aegdg .Size [_cbedg ]-1));};};_edbe :=_aegdg .Decode ;if _edbe ==nil {_edbe =_aegdg .Range ;};_dbfg :=make ([]int ,len (x ));for _cbfd :=0;_cbfd < len (x );_cbfd ++{_dbagb :=x [_cbfd ];_faae :=_ec .Min (_ec .Max (_dbagb ,_aegdg .Domain [2*_cbfd ]),_aegdg .Domain [2*_cbfd +1]);_bgcg :=_agc .LinearInterpolate (_faae ,_aegdg .Domain [2*_cbfd ],_aegdg .Domain [2*_cbfd +1],_aadg [2*_cbfd ],_aadg [2*_cbfd +1]);_gfed :=_ec .Min (_ec .Max (_bgcg ,0),float64 (_aegdg .Size [_cbfd ]-1));_ccce :=int (_ec .Floor (_gfed +0.5));if _ccce < 0{_ccce =0;}else if _ccce > _aegdg .Size [_cbfd ]{_ccce =_aegdg .Size [_cbfd ]-1;};_dbfg [_cbfd ]=_ccce ;};_gggffc :=_dbfg [0];for _bbfda :=1;_bbfda < _aegdg .NumInputs ;_bbfda ++{_ggcc :=_dbfg [_bbfda ];for _egdc :=0;_egdc < _bbfda ;_egdc ++{_ggcc *=_aegdg .Size [_egdc ];};_gggffc +=_ggcc ;};_gggffc *=_aegdg .NumOutputs ;var _cadd []float64 ;for _aafag :=0;_aafag < _aegdg .NumOutputs ;_aafag ++{_egbae :=_gggffc +_aafag ;if _egbae >=len (_aegdg ._ddfa ){_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_bgggb :=_aegdg ._ddfa [_egbae ];_cega :=_agc .LinearInterpolate (float64 (_bgggb ),0,_ec .Pow (2,float64 (_aegdg .BitsPerSample )),_edbe [2*_aafag ],_edbe [2*_aafag +1]);_ccgdg :=_ec .Min (_ec .Max (_cega ,_aegdg .Range [2*_aafag ]),_aegdg .Range [2*_aafag +1]);_cadd =append (_cadd ,_ccgdg );};return _cadd ,nil ;};func _bcfdb (_cdaed *_agc .ImageBase )(_egcfe Image ){_egcfe .Width =int64 (_cdaed .Width );_egcfe .Height =int64 (_cdaed .Height );_egcfe .BitsPerComponent =int64 (_cdaed .BitsPerComponent );_egcfe .ColorComponents =_cdaed .ColorComponents ;_egcfe .Data =_cdaed .Data ;_egcfe ._eafbb =_cdaed .Decode ;_egcfe ._afefc =_cdaed .Alpha ;return _egcfe ;};func _ecbecb (_gfagb *_da .PdfObjectDictionary )(*PdfShadingType4 ,error ){_geea :=PdfShadingType4 {};_defgdd :=_gfagb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _defgdd ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ffbfb ,_aaff :=_defgdd .(*_da .PdfObjectInteger );if !_aaff {_bdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_defgdd );return nil ,_da .ErrTypeError ;};_geea .BitsPerCoordinate =_ffbfb ;_defgdd =_gfagb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _defgdd ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ffbfb ,_aaff =_defgdd .(*_da .PdfObjectInteger );if !_aaff {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_defgdd );return nil ,_da .ErrTypeError ;};_geea .BitsPerComponent =_ffbfb ;_defgdd =_gfagb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _defgdd ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_ffbfb ,_aaff =_defgdd .(*_da .PdfObjectInteger );if !_aaff {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_defgdd );return nil ,_da .ErrTypeError ;};_geea .BitsPerComponent =_ffbfb ;_defgdd =_gfagb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _defgdd ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_gacg ,_aaff :=_defgdd .(*_da .PdfObjectArray );if !_aaff {_bdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_defgdd );return nil ,_da .ErrTypeError ;};_geea .Decode =_gacg ;_defgdd =_gfagb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _defgdd ==nil {_bdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_geea .Function =[]PdfFunction {};if _caggb ,_aface :=_defgdd .(*_da .PdfObjectArray );_aface {for _ ,_agfde :=range _caggb .Elements (){_fcbba ,_accfd :=_ffdgg (_agfde );if _accfd !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_accfd );return nil ,_accfd ;};_geea .Function =append (_geea .Function ,_fcbba );};}else {_bfdfe ,_eeged :=_ffdgg (_defgdd );if _eeged !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeged );return nil ,_eeged ;};_geea .Function =append (_geea .Function ,_bfdfe );};return &_geea ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_deea *PdfShadingType3 )ToPdfObject ()_da .PdfObject {_deea .PdfShading .ToPdfObject ();_fded ,_ggae :=_deea .getShadingDict ();if _ggae !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _deea .Coords !=nil {_fded .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_deea .Coords );};if _deea .Domain !=nil {_fded .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_deea .Domain );};if _deea .Function !=nil {if len (_deea .Function )==1{_fded .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deea .Function [0].ToPdfObject ());}else {_fgebg :=_da .MakeArray ();for _ ,_cggag :=range _deea .Function {_fgebg .Append (_cggag .ToPdfObject ());};_fded .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgebg );};};if _deea .Extend !=nil {_fded .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_deea .Extend );};return _deea ._ggcdb ;};func _gdaa (_fgcdc _da .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_addfe :=NewPdfColorspaceSpecialSeparation ();if _fgabe ,_ddgf :=_fgcdc .(*_da .PdfIndirectObject );_ddgf {_addfe ._dbed =_fgabe ;};_fgcdc =_da .TraceToDirectObject (_fgcdc );_dfee ,_gebf :=_fgcdc .(*_da .PdfObjectArray );if !_gebf {return nil ,_bd .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _dfee .Len ()!=4{return nil ,_bd .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fgcdc =_dfee .Get (0);_feag ,_gebf :=_fgcdc .(*_da .PdfObjectName );if !_gebf {return nil ,_bd .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_feag !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_bd .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_fgcdc =_dfee .Get (1);_feag ,_gebf =_fgcdc .(*_da .PdfObjectName );if !_gebf {return nil ,_bd .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_addfe .ColorantName =_feag ;_fgcdc =_dfee .Get (2);_fgabb ,_cfceb :=NewPdfColorspaceFromPdfObject (_fgcdc );if _cfceb !=nil {return nil ,_cfceb ;};_addfe .AlternateSpace =_fgabb ;_cggcf ,_cfceb :=_ffdgg (_dfee .Get (3));if _cfceb !=nil {return nil ,_cfceb ;};_addfe .TintTransform =_cggcf ;return _addfe ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fbfce *PdfReader )GetEncryptionMethod ()string {_cfec :=_fbfce ._baeg .GetCrypter ();return _cfec .String ();};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _c .Time ;};func _fcfc (_eeca *PdfField ,_agca _da .PdfObject ){for _ ,_cfff :=range _eeca .Annotations {_cfff .AS =_agca ;_cfff .ToPdfObject ();};};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_eegg :=&XObjectForm {};_cadfa :=&_da .PdfObjectStream {};_cadfa .PdfObjectDictionary =_da .MakeDict ();_eegg ._efcga =_cadfa ;return _eegg ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_dfaf *Image )Resample (targetBitsPerComponent int64 ){if _dfaf .BitsPerComponent ==targetBitsPerComponent {return ;};_efdb :=_dfaf .GetSamples ();if targetBitsPerComponent < _dfaf .BitsPerComponent {_gcga :=_dfaf .BitsPerComponent -targetBitsPerComponent ;for _effgb :=range _efdb {_efdb [_effgb ]>>=uint (_gcga );};}else if targetBitsPerComponent > _dfaf .BitsPerComponent {_ecddc :=targetBitsPerComponent -_dfaf .BitsPerComponent ;for _dbaf :=range _efdb {_efdb [_dbaf ]<<=uint (_ecddc );};};_dfaf .BitsPerComponent =targetBitsPerComponent ;if _dfaf .BitsPerComponent < 8{_dfaf .resampleLowBits (_efdb );return ;};_cffef :=_agc .BytesPerLine (int (_dfaf .Width ),int (_dfaf .BitsPerComponent ),_dfaf .ColorComponents );_fbfc :=make ([]byte ,_cffef *int (_dfaf .Height ));var (_acdbc ,_adaf ,_gaagb ,_aadaf int ;_abfb uint32 ;);for _gaagb =0;_gaagb < int (_dfaf .Height );_gaagb ++{_acdbc =_gaagb *_cffef ;_adaf =(_gaagb +1)*_cffef -1;_gafeb :=_ee .ResampleUint32 (_efdb [_acdbc :_adaf ],int (targetBitsPerComponent ),8);for _aadaf ,_abfb =range _gafeb {_fbfc [_aadaf +_acdbc ]=byte (_abfb );};};_dfaf .Data =_fbfc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bfcec *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cegg :=vals [0];if _cegg < 0.0||_cegg > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abce :=vals [1];if _abce < 0.0||_abce > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddec :=vals [2];if _ddec < 0.0||_ddec > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegf :=NewPdfColorCalRGB (_cegg ,_abce ,_ddec );return _gegf ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_bfcge *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgcbe :=func (_bedde float64 )float64 {if _bedde >=6.0/29{return _bedde *_bedde *_bedde ;};return 108.0/841*(_bedde -4/29);};_dbbe ,_fccd :=color .(*PdfColorLab );if !_fccd {_bdd .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dbbe .L ();AStar :=_dbbe .A ();BStar :=_dbbe .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_bfcge .WhitePoint [0]*_dgcbe (L );Y :=_bfcge .WhitePoint [1]*_dgcbe (M );Z :=_bfcge .WhitePoint [2]*_dgcbe (N );_gebe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_feaa :=-0.969256*X +1.875992*Y +0.041556*Z ;_ceee :=0.055648*X +-0.204043*Y +1.057311*Z ;_gebe =_ec .Min (_ec .Max (_gebe ,0),1.0);_feaa =_ec .Min (_ec .Max (_feaa ,0),1.0);_ceee =_ec .Min (_ec .Max (_ceee ,0),1.0);return NewPdfColorDeviceRGB (_gebe ,_feaa ,_ceee ),nil ;};func _bagea (_efgfd *_da .PdfObjectDictionary ,_eagef *fontCommon )(*pdfCIDFontType0 ,error ){if _eagef ._bcga !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_eagef );return nil ,_da .ErrRangeError ;};_gcadg :=_bcgef (_eagef );_ffdg ,_gccaf :=_da .GetDict (_efgfd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gccaf {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eagef );return nil ,ErrRequiredAttributeMissing ;};_gcadg .CIDSystemInfo =_ffdg ;_gcadg .DW =_efgfd .Get ("\u0044\u0057");_gcadg .W =_efgfd .Get ("\u0057");_gcadg .DW2 =_efgfd .Get ("\u0044\u0057\u0032");_gcadg .W2 =_efgfd .Get ("\u0057\u0032");_gcadg ._bddad =1000.0;if _gbba ,_dggb :=_da .GetNumberAsFloat (_gcadg .DW );_dggb ==nil {_gcadg ._bddad =_gbba ;};_daade ,_dccc :=_faddg (_gcadg .W );if _dccc !=nil {return nil ,_dccc ;};if _daade ==nil {_daade =map[_ceb .CharCode ]float64 {};};_gcadg ._beeg =_daade ;return _gcadg ,nil ;};func (_fgbdf *PdfReader )lookupPageByObject (_dfgda _da .PdfObject )(*PdfPage ,error ){return nil ,_dbf .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_bfgee :=PdfDate {};_fecf :=_afdac .FindAllStringSubmatch (dateStr ,1);if len (_fecf )< 1{return _bfgee ,_bd .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_fecf [0])!=10{return _bfgee ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_bfgee ._faege ,_ =_db .ParseInt (_fecf [0][1],10,32);_bfgee ._egbdc ,_ =_db .ParseInt (_fecf [0][2],10,32);_bfgee ._edffb ,_ =_db .ParseInt (_fecf [0][3],10,32);_bfgee ._agceg ,_ =_db .ParseInt (_fecf [0][4],10,32);_bfgee ._gfdbd ,_ =_db .ParseInt (_fecf [0][5],10,32);_bfgee ._dcbef ,_ =_db .ParseInt (_fecf [0][6],10,32);if len (_fecf [0][7])> 0{_bfgee ._dafbc =_fecf [0][7][0];}else {_bfgee ._dafbc ='+';};if len (_fecf [0][8])> 0{_bfgee ._caggc ,_ =_db .ParseInt (_fecf [0][8],10,32);}else {_bfgee ._caggc =0;};if len (_fecf [0][9])> 0{_bfgee ._abcb ,_ =_db .ParseInt (_fecf [0][9],10,32);}else {_bfgee ._abcb =0;};return _bfgee ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_defe pdfCIDFontType0 )GetRuneMetrics (r rune )(_bgb .CharMetrics ,bool ){return _bgb .CharMetrics {Wx :_defe ._bddad },true ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_acgaf *PdfField )SetContext (ctx PdfModel ){_acgaf ._bdga =ctx };

// WriteString outputs the object as it is to be written to file.
func (_fcbc *pdfSignDictionary )WriteString ()string {_fcbc ._ggagf =0;_fcbc ._cecdd =0;_fcbc ._cceef =0;_fcbc ._gfec =0;_bbdbe :=_baf .NewBuffer (nil );_bbdbe .WriteString ("\u003c\u003c");for _ ,_ecec :=range _fcbc .Keys (){_eegcg :=_fcbc .Get (_ecec );switch _ecec {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_bbdbe .WriteString (_ecec .WriteString ());_bbdbe .WriteString ("\u0020");_fcbc ._cceef =_bbdbe .Len ();_bbdbe .WriteString (_eegcg .WriteString ());_bbdbe .WriteString ("\u0020");_fcbc ._gfec =_bbdbe .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_bbdbe .WriteString (_ecec .WriteString ());_bbdbe .WriteString ("\u0020");_fcbc ._ggagf =_bbdbe .Len ();_bbdbe .WriteString (_eegcg .WriteString ());_bbdbe .WriteString ("\u0020");_fcbc ._cecdd =_bbdbe .Len ()-1;default:_bbdbe .WriteString (_ecec .WriteString ());_bbdbe .WriteString ("\u0020");_bbdbe .WriteString (_eegcg .WriteString ());};};_bbdbe .WriteString ("\u003e\u003e");return _bbdbe .String ();};func _cbdf (_acbg _da .PdfObject )(*PdfFontDescriptor ,error ){_agfb :=&PdfFontDescriptor {};_acbg =_da .ResolveReference (_acbg );if _eacg ,_bcgbg :=_acbg .(*_da .PdfIndirectObject );_bcgbg {_agfb ._ggfc =_eacg ;_acbg =_eacg .PdfObject ;};_cgdg ,_debgab :=_da .GetDict (_acbg );if !_debgab {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_acbg );return nil ,_da .ErrTypeError ;};if _bbfb :=_cgdg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_bbfb !=nil {_agfb .FontName =_bbfb ;}else {_bdd .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_abegf ,_ :=_da .GetName (_agfb .FontName );if _bbbg :=_cgdg .Get ("\u0054\u0079\u0070\u0065");_bbbg !=nil {_cbag ,_ccdd :=_bbbg .(*_da .PdfObjectName );if !_ccdd ||string (*_cbag )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bdd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bbbg ,_abegf ,_agfb .FontName );};}else {_bdd .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_abegf ,_agfb .FontName );};_agfb .FontFamily =_cgdg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_agfb .FontStretch =_cgdg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_agfb .FontWeight =_cgdg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_agfb .Flags =_cgdg .Get ("\u0046\u006c\u0061g\u0073");_agfb .FontBBox =_cgdg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_agfb .ItalicAngle =_cgdg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_agfb .Ascent =_cgdg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_agfb .Descent =_cgdg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_agfb .Leading =_cgdg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_agfb .CapHeight =_cgdg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_agfb .XHeight =_cgdg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_agfb .StemV =_cgdg .Get ("\u0053\u0074\u0065m\u0056");_agfb .StemH =_cgdg .Get ("\u0053\u0074\u0065m\u0048");_agfb .AvgWidth =_cgdg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_agfb .MaxWidth =_cgdg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_agfb .MissingWidth =_cgdg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_agfb .FontFile =_cgdg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_agfb .FontFile2 =_cgdg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_agfb .FontFile3 =_cgdg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_agfb .CharSet =_cgdg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_agfb .Style =_cgdg .Get ("\u0053\u0074\u0079l\u0065");_agfb .Lang =_cgdg .Get ("\u004c\u0061\u006e\u0067");_agfb .FD =_cgdg .Get ("\u0046\u0044");_agfb .CIDSet =_cgdg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _agfb .Flags !=nil {if _agfgge ,_caegc :=_da .GetIntVal (_agfb .Flags );_caegc {_agfb ._fadg =_agfgge ;};};if _agfb .MissingWidth !=nil {if _beebb ,_ccfbc :=_da .GetNumberAsFloat (_agfb .MissingWidth );_ccfbc ==nil {_agfb ._dadb =_beebb ;};};if _agfb .FontFile !=nil {_eadad ,_dfgc :=_fcdfgb (_agfb .FontFile );if _dfgc !=nil {return _agfb ,_dfgc ;};_bdd .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_eadad );_agfb .fontFile =_eadad ;};if _agfb .FontFile2 !=nil {_eebea ,_abee :=_bgb .NewFontFile2FromPdfObject (_agfb .FontFile2 );if _abee !=nil {return _agfb ,_abee ;};_bdd .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_eebea .String ());_agfb ._eecgd =&_eebea ;};return _agfb ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_adcd *PdfField )GetContext ()PdfModel {return _adcd ._bdga };func _eggfda (_egcfa *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_egcfa }};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cgcd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fdgfb *PdfPageResources )GetPatternByName (keyName _da .PdfObjectName )(*PdfPattern ,bool ){if _fdgfb .Pattern ==nil {return nil ,false ;};_agfff ,_cced :=_da .TraceToDirectObject (_fdgfb .Pattern ).(*_da .PdfObjectDictionary );if !_cced {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdgfb .Pattern );return nil ,false ;};if _befae :=_agfff .Get (keyName );_befae !=nil {_aceba ,_bgbga :=_afdg (_befae );if _bgbga !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bgbga );return nil ,false ;};return _aceba ,true ;};return nil ,false ;};func (_eef *PdfReader )loadAction (_abf _da .PdfObject )(*PdfAction ,error ){if _eca ,_bdff :=_da .GetIndirect (_abf );_bdff {_fccb ,_cabc :=_eef .newPdfActionFromIndirectObject (_eca );if _cabc !=nil {return nil ,_cabc ;};return _fccb ,nil ;}else if !_da .IsNullObject (_abf ){return nil ,_dbf .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _da .PdfObject ;Name _da .PdfObject ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_da .PdfObjectBool ;SigFlags *_da .PdfObjectInteger ;CO *_da .PdfObjectArray ;DR *PdfPageResources ;DA *_da .PdfObjectString ;Q *_da .PdfObjectInteger ;XFA _da .PdfObject ;_eedd *_da .PdfIndirectObject ;};func _cefa (_abedb _da .PdfObject )(*PdfColorspaceICCBased ,error ){_fcdf :=&PdfColorspaceICCBased {};if _acae ,_gefeg :=_abedb .(*_da .PdfIndirectObject );_gefeg {_fcdf ._caebe =_acae ;};_abedb =_da .TraceToDirectObject (_abedb );_abbeg ,_ddeb :=_abedb .(*_da .PdfObjectArray );if !_ddeb {return nil ,_bd .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abbeg .Len ()!=2{return nil ,_bd .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_abedb =_da .TraceToDirectObject (_abbeg .Get (0));_acab ,_ddeb :=_abedb .(*_da .PdfObjectName );if !_ddeb {return nil ,_bd .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_acab !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_bd .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_abedb =_abbeg .Get (1);_fgcd ,_ddeb :=_da .GetStream (_abedb );if !_ddeb {_bdd .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_abedb );return nil ,_bd .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_befd :=_fgcd .PdfObjectDictionary ;_dbfcd ,_ddeb :=_befd .Get ("\u004e").(*_da .PdfObjectInteger );if !_ddeb {return nil ,_bd .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_dbfcd !=1&&*_dbfcd !=3&&*_dbfcd !=4{return nil ,_bd .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_fcdf .N =int (*_dbfcd );if _cbac :=_befd .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_cbac !=nil {_abbf ,_gcgg :=NewPdfColorspaceFromPdfObject (_cbac );if _gcgg !=nil {return nil ,_gcgg ;};_fcdf .Alternate =_abbf ;};if _gfaf :=_befd .Get ("\u0052\u0061\u006eg\u0065");_gfaf !=nil {_gfaf =_da .TraceToDirectObject (_gfaf );_egcb ,_ddabc :=_gfaf .(*_da .PdfObjectArray );if !_ddabc {return nil ,_bd .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _egcb .Len ()!=2*_fcdf .N {return nil ,_bd .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_daabg ,_ffeg :=_egcb .GetAsFloat64Slice ();if _ffeg !=nil {return nil ,_ffeg ;};_fcdf .Range =_daabg ;}else {_fcdf .Range =make ([]float64 ,2*_fcdf .N );for _gggabc :=0;_gggabc < _fcdf .N ;_gggabc ++{_fcdf .Range [2*_gggabc ]=0.0;_fcdf .Range [2*_gggabc +1]=1.0;};};if _daee :=_befd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_daee !=nil {_fdec ,_ddca :=_daee .(*_da .PdfObjectStream );if !_ddca {return nil ,_bd .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_fcdf .Metadata =_fdec ;};_cgcf ,_gfge :=_da .DecodeStream (_fgcd );if _gfge !=nil {return nil ,_gfge ;};_fcdf .Data =_cgcf ;_fcdf ._ecdce =_fgcd ;return _fcdf ,nil ;};

// PdfVersion returns version of the PDF file.
func (_bbfeg *PdfReader )PdfVersion ()_da .Version {return _bbfeg ._baeg .PdfVersion ()};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_da .PdfObjectName ;Colorants _da .PdfObject ;Process _da .PdfObject ;MixingHints _da .PdfObject ;_edbg *_da .PdfIndirectObject ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// PartialName returns the partial name of the field.
func (_dabc *PdfField )PartialName ()string {_bacfc :="";if _dabc .T !=nil {_bacfc =_dabc .T .Decoded ();}else {_bdd .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _bacfc ;};func (_daffe Image )getBase ()_agc .ImageBase {return _agc .NewImageBase (int (_daffe .Width ),int (_daffe .Height ),int (_daffe .BitsPerComponent ),_daffe .ColorComponents ,_daffe .Data ,_daffe ._afefc ,_daffe ._eafbb );};

// ToPdfObject implements interface PdfModel.
func (_fcb *PdfActionJavaScript )ToPdfObject ()_da .PdfObject {_fcb .PdfAction .ToPdfObject ();_aeca :=_fcb ._fca ;_bcfd :=_aeca .PdfObject .(*_da .PdfObjectDictionary );_bcfd .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeJavaScript )));_bcfd .SetIfNotNil ("\u004a\u0053",_fcb .JS );return _aeca ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_faddb *PdfColorspaceSpecialSeparation )ToPdfObject ()_da .PdfObject {_dfaa :=_da .MakeArray (_da .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dfaa .Append (_faddb .ColorantName );_dfaa .Append (_faddb .AlternateSpace .ToPdfObject ());_dfaa .Append (_faddb .TintTransform .ToPdfObject ());if _faddb ._dbed !=nil {_faddb ._dbed .PdfObject =_dfaa ;return _faddb ._dbed ;};return _dfaa ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bebge *PdfPage )GetContentStreamObjs ()[]_da .PdfObject {if _bebge .Contents ==nil {return nil ;};_bcad :=_da .TraceToDirectObject (_bebge .Contents );if _cgbdd ,_cecaa :=_bcad .(*_da .PdfObjectArray );_cecaa {return _cgbdd .Elements ();};return []_da .PdfObject {_bcad };};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_egaga *PdfAcroForm )GetContainingPdfObject ()_da .PdfObject {return _egaga ._eedd };

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ae .Permissions ;Algorithm EncryptionAlgorithm ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_dcdcg *Outline )Insert (index uint ,item *OutlineItem ){_efaae :=uint (len (_dcdcg .Entries ));if index > _efaae {index =_efaae ;};_dcdcg .Entries =append (_dcdcg .Entries [:index ],append ([]*OutlineItem {item },_dcdcg .Entries [index :]...)...);};

// GetNumComponents returns the number of color components (3 for RGB).
func (_afcf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};type modelManager struct{_bcbbdg map[PdfModel ]_da .PdfObject ;_gdge map[_da .PdfObject ]PdfModel ;};var _fcebe ="";func _eaea (_dcdfbf _da .PdfObject ){_bdd .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_dcdfbf ,_dcdfbf .String ());if _abga ,_dccbff :=_dcdfbf .(*_da .PdfObjectStream );_dccbff {_fffc ,_gfgf :=_da .DecodeStream (_abga );if _gfgf !=nil {_bdd .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_gfgf );return ;};_bdd .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_fffc );}else if _dcface ,_befgg :=_dcdfbf .(*_da .PdfIndirectObject );_befgg {_bdd .Log .Debug ("\u0025\u0054\u0020%\u0076",_dcface .PdfObject ,_dcface .PdfObject );_bdd .Log .Debug ("\u0025\u0073",_dcface .PdfObject .String ());};};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_cge :=NewPdfAnnotation ();_fcbb :=&PdfAnnotationHighlight {};_fcbb .PdfAnnotation =_cge ;_fcbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cge .SetContext (_fcbb );return _fcbb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gaaef *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _da .PdfObject ;FS _da .PdfObject ;F _da .PdfObject ;UF _da .PdfObject ;DOS _da .PdfObject ;Mac _da .PdfObject ;Unix _da .PdfObject ;ID _da .PdfObject ;V _da .PdfObject ;EF _da .PdfObject ;RF _da .PdfObject ;Desc _da .PdfObject ;CI _da .PdfObject ;_ecaf _da .PdfObject ;};

// B returns the value of the B component of the color.
func (_bcccfb *PdfColorCalRGB )B ()float64 {return float64 (_bcccfb [1])};func _acgg ()string {return _fcebe };

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bdebc :=&PdfColorspaceDeviceN {};return _bdebc ;};func (_beg *PdfReader )newPdfAnnotationProjectionFromDict (_eggfc *_da .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_feca :=&PdfAnnotationProjection {};_cdaf ,_acbf :=_beg .newPdfAnnotationMarkupFromDict (_eggfc );if _acbf !=nil {return nil ,_acbf ;};_feca .PdfAnnotationMarkup =_cdaf ;return _feca ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _da .PdfObject ;AN _da .PdfObject ;OP _da .PdfObject ;JS _da .PdfObject ;};func _cdeee (_ebefd _da .PdfObject ,_cgcc bool )(*PdfFont ,error ){_bgc ,_bgbg ,_acffb :=_fcde (_ebefd );if _acffb !=nil {if _acffb ==ErrType3FontNotSupported ||_acffb ==ErrType1CFontNotSupported {_fccg ,_agec :=_fcbac (_bgc ,_bgbg ,nil );if _agec !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bgbg ,_agec );return nil ,_acffb ;};return &PdfFont {_fdbf :_fccg },_acffb ;};return nil ,_acffb ;};_agaa :=&PdfFont {};switch _bgbg ._bcga {case "\u0054\u0079\u0070e\u0030":if !_cgcc {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bgbg );return nil ,_dbf .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fbdge ,_ggag :=_cefda (_bgc ,_bgbg );if _ggag !=nil {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bgbg ,_ggag );return nil ,_ggag ;};_agaa ._fdbf =_fbdge ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _efge *pdfFontSimple ;_abfgg ,_ddegf :=_bgb .NewStdFontByName (_bgb .StdFontName (_bgbg ._eeacc ));if _ddegf {_cecgf :=_fbbba (_abfgg );_agaa ._fdbf =&_cecgf ;_gfff :=_da .TraceToDirectObject (_cecgf .ToPdfObject ());_bbbb ,_bbdbd ,_acec :=_fcde (_gfff );if _acec !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bgbg ,_cecgf );return nil ,_acec ;};for _ ,_dgag :=range _bgc .Keys (){_bbbb .Set (_dgag ,_bgc .Get (_dgag ));};_efge ,_acec =_fcbac (_bbbb ,_bbdbd ,_cecgf ._ecacg );if _acec !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bgbg ,_cecgf );return nil ,_acec ;};_efge ._acfc =_cecgf ._acfc ;_efge ._aegbb =_cecgf ._aegbb ;}else {_efge ,_acffb =_fcbac (_bgc ,_bgbg ,nil );if _acffb !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bgbg ,_acffb );return nil ,_acffb ;};};_acffb =_efge .addEncoding ();if _acffb !=nil {return nil ,_acffb ;};if _ddegf {_efge .updateStandard14Font ();};if _ddegf &&_efge ._defgd ==nil &&_efge ._ecacg ==nil {_bdd .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_efge );_bdd .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_abfgg );};if len (_efge ._acfc )==0{_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_efge );};_agaa ._fdbf =_efge ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_efde ,_ggbb :=_bagea (_bgc ,_bgbg );if _ggbb !=nil {_bdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ggbb );return nil ,_ggbb ;};_agaa ._fdbf =_efde ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_deaeg ,_gfbc :=_aacg (_bgc ,_bgbg );if _gfbc !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bgbg ,_gfbc );return nil ,_gfbc ;};_agaa ._fdbf =_deaeg ;default:_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bgbg );return nil ,_bd .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bgbg );};return _agaa ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_gdfdf *PdfFieldChoice )ToPdfObject ()_da .PdfObject {_gdfdf .PdfField .ToPdfObject ();_bbaef :=_gdfdf ._dade ;_abag :=_bbaef .PdfObject .(*_da .PdfObjectDictionary );_abag .Set ("\u0046\u0054",_da .MakeName ("\u0043\u0068"));if _gdfdf .Opt !=nil {_abag .Set ("\u004f\u0070\u0074",_gdfdf .Opt );};if _gdfdf .TI !=nil {_abag .Set ("\u0054\u0049",_gdfdf .TI );};if _gdfdf .I !=nil {_abag .Set ("\u0049",_gdfdf .I );};return _bbaef ;};

// ToPdfObject implements interface PdfModel.
func (_dcf *PdfAnnotationText )ToPdfObject ()_da .PdfObject {_dcf .PdfAnnotation .ToPdfObject ();_gbd :=_dcf ._dda ;_ebeg :=_gbd .PdfObject .(*_da .PdfObjectDictionary );if _dcf .PdfAnnotationMarkup !=nil {_dcf .PdfAnnotationMarkup .appendToPdfDictionary (_ebeg );};_ebeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0054\u0065\u0078\u0074"));_ebeg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dcf .Open );_ebeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dcf .Name );_ebeg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dcf .State );_ebeg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_dcf .StateModel );return _gbd ;};func (_ggde *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_cbca *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_abae :=func (_gegb float64 )float64 {if _gegb >=6.0/29{return _gegb *_gegb *_gegb ;};return 108.0/841*(_gegb -4/29);};_ebgc :=img ._eafbb ;if len (_ebgc )!=6{_bdd .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_ebgc =_cbca .DecodeArray ();};_acgad :=_ee .NewReader (img .getBase ());_eage :=_agc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._afefc ,img ._eafbb );_gaba :=_ee .NewWriter (_eage );_dfbd :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_gdcc :=make ([]uint32 ,3);var (_bdbc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fbdg ,_dbgb ,_fgad float64 ;);for {_bdbc =_acgad .ReadSamples (_gdcc );if _bdbc ==_af .EOF {break ;}else if _bdbc !=nil {return img ,_bdbc ;};Ls =float64 (_gdcc [0])/_dfbd ;As =float64 (_gdcc [1])/_dfbd ;Bs =float64 (_gdcc [2])/_dfbd ;Ls =_agc .LinearInterpolate (Ls ,0.0,1.0,_ebgc [0],_ebgc [1]);As =_agc .LinearInterpolate (As ,0.0,1.0,_ebgc [2],_ebgc [3]);Bs =_agc .LinearInterpolate (Bs ,0.0,1.0,_ebgc [4],_ebgc [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_cbca .WhitePoint [0]*_abae (L );Y =_cbca .WhitePoint [1]*_abae (M );Z =_cbca .WhitePoint [2]*_abae (N );_fbdg =3.240479*X +-1.537150*Y +-0.498535*Z ;_dbgb =-0.969256*X +1.875992*Y +0.041556*Z ;_fgad =0.055648*X +-0.204043*Y +1.057311*Z ;_fbdg =_ec .Min (_ec .Max (_fbdg ,0),1.0);_dbgb =_ec .Min (_ec .Max (_dbgb ,0),1.0);_fgad =_ec .Min (_ec .Max (_fgad ,0),1.0);_gdcc [0]=uint32 (_fbdg *_dfbd );_gdcc [1]=uint32 (_dbgb *_dfbd );_gdcc [2]=uint32 (_fgad *_dfbd );if _bdbc =_gaba .WriteSamples (_gdcc );_bdbc !=nil {return img ,_bdbc ;};};return _bcfdb (&_eage ),nil ;};func (_gfgg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _eede :=_gfgg ._daeea ;_eede !=nil {return _eede ;};return _gfgg ._dcdg ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _da .PdfObject ;};func (_edea *PdfReader )newPdfAnnotationMarkupFromDict (_adcg *_da .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cdaa :=&PdfAnnotationMarkup {};if _bfd :=_adcg .Get ("\u0054");_bfd !=nil {_cdaa .T =_bfd ;};if _abed :=_adcg .Get ("\u0050\u006f\u0070u\u0070");_abed !=nil {_ffb ,_bdag :=_abed .(*_da .PdfIndirectObject );if !_bdag {if _ ,_gace :=_abed .(*_da .PdfObjectNull );!_gace {return nil ,_dbf .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_cbcd ,_ggd :=_edea .newPdfAnnotationFromIndirectObject (_ffb );if _ggd !=nil {return nil ,_ggd ;};if _cbcd !=nil {_ccbe ,_beebd :=_cbcd ._cae .(*PdfAnnotationPopup );if !_beebd {return nil ,_dbf .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_cdaa .Popup =_ccbe ;};};};if _gbfd :=_adcg .Get ("\u0043\u0041");_gbfd !=nil {_cdaa .CA =_gbfd ;};if _ebac :=_adcg .Get ("\u0052\u0043");_ebac !=nil {_cdaa .RC =_ebac ;};if _bef :=_adcg .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_bef !=nil {_cdaa .CreationDate =_bef ;};if _fcdga :=_adcg .Get ("\u0049\u0052\u0054");_fcdga !=nil {_cdaa .IRT =_fcdga ;};if _adbe :=_adcg .Get ("\u0053\u0075\u0062\u006a");_adbe !=nil {_cdaa .Subj =_adbe ;};if _ccba :=_adcg .Get ("\u0052\u0054");_ccba !=nil {_cdaa .RT =_ccba ;};if _caaf :=_adcg .Get ("\u0049\u0054");_caaf !=nil {_cdaa .IT =_caaf ;};if _ebe :=_adcg .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ebe !=nil {_cdaa .ExData =_ebe ;};return _cdaa ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_egbag *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _egbag .AlternateSpace ==nil {return nil ,_dbf .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _egbag .AlternateSpace .ColorToRGB (color );};

// SetReason sets the `Reason` field of the signature.
func (_bbcdg *PdfSignature )SetReason (reason string ){_bbcdg .Reason =_da .MakeString (reason )};func (_fgdge *PdfPattern )getDict ()*_da .PdfObjectDictionary {if _bgbgb ,_dggbb :=_fgdge ._febc .(*_da .PdfIndirectObject );_dggbb {_gabff ,_ecbea :=_bgbgb .PdfObject .(*_da .PdfObjectDictionary );if !_ecbea {return nil ;};return _gabff ;}else if _gccdc ,_aadc :=_fgdge ._febc .(*_da .PdfObjectStream );_aadc {return _gccdc .PdfObjectDictionary ;}else {_bdd .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fgdge ._febc );return nil ;};};func _fagbc (_ddcf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_ddcf }};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fgaff *PdfWriter )AddPage (page *PdfPage )error {_bbddf (page );_ffbgc :=page .ToPdfObject ();_bdd .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_bdd .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_ffbgc );_bdedcf ,_bdeed :=_da .GetIndirect (_ffbgc );if !_bdeed {return _dbf .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_bdd .Log .Trace ("\u0025\u0073",_bdedcf );_bdd .Log .Trace ("\u0025\u0073",_bdedcf .PdfObject );_ccaeb ,_bdeed :=_da .GetDict (_bdedcf .PdfObject );if !_bdeed {return _dbf .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fafbg ,_bdeed :=_da .GetName (_ccaeb .Get ("\u0054\u0079\u0070\u0065"));if !_bdeed {return _bd .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_ccaeb .Get ("\u0054\u0079\u0070\u0065"));};if _fafbg .String ()!="\u0050\u0061\u0067\u0065"{return _dbf .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_bgcc :=[]_da .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_agfa ,_dbgbd :=_da .GetIndirect (_ccaeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bdd .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_ccaeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_dbgbd );for _dbgbd {_bdd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agfa );_aged ,_gcdda :=_da .GetDict (_agfa .PdfObject );if !_gcdda {return _dbf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_ggbea :=range _bgcc {_bdd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ggbea );if _ccaeb .Get (_ggbea )!=nil {_bdd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _fcedc :=_aged .Get (_ggbea );_fcedc !=nil {_bdd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ggbea );_ccaeb .Set (_ggbea ,_fcedc );};};_agfa ,_dbgbd =_da .GetIndirect (_aged .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bdd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aged .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bdd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_ccaeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgaff ._gdag );_bdedcf .PdfObject =_ccaeb ;_acdfg ,_bdeed :=_da .GetDict (_fgaff ._gdag .PdfObject );if !_bdeed {return _dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_afga ,_bdeed :=_da .GetArray (_acdfg .Get ("\u004b\u0069\u0064\u0073"));if !_bdeed {return _dbf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_afga .Append (_bdedcf );_fgaff ._aecdcf [_ccaeb ]=struct{}{};_fddba ,_bdeed :=_da .GetInt (_acdfg .Get ("\u0043\u006f\u0075n\u0074"));if !_bdeed {return _dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_fddba =*_fddba +1;_fgaff .addObject (_bdedcf );_agafcg :=_fgaff .addObjects (_ccaeb );if _agafcg !=nil {return _agafcg ;};return nil ;};func (_fcc *PdfReader )newPdfActionImportDataFromDict (_cfb *_da .PdfObjectDictionary )(*PdfActionImportData ,error ){_gbc ,_fff :=_ade (_cfb .Get ("\u0046"));if _fff !=nil {return nil ,_fff ;};return &PdfActionImportData {F :_gbc },nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_cadf *modelManager )Register (primitive _da .PdfObject ,model PdfModel ){_cadf ._bcbbdg [model ]=primitive ;_cadf ._gdge [primitive ]=model ;};

// AddOutlineTree adds outlines to a PDF file.
func (_agadf *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_agadf ._decgf =outlineTree };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_eed :=NewPdfAnnotation ();_dea :=&PdfAnnotationPolygon {};_dea .PdfAnnotation =_eed ;_dea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eed .SetContext (_dea );return _dea ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;BitsPerFlag *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};var (ErrRequiredAttributeMissing =_dbf .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_abbae =_dbf .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_dbf .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_dbf .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_eg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_da .ErrNotSupported );ErrType1CFontNotSupported =_eg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_da .ErrNotSupported );ErrType3FontNotSupported =_eg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_da .ErrNotSupported );ErrTTCmapNotSupported =_eg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_da .ErrNotSupported );ErrSignNotEnoughSpace =_eg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073"););

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_agafa DefaultImageHandler )Read (reader _af .Reader )(*Image ,error ){_bddcb ,_ ,_fbad :=_g .Decode (reader );if _fbad !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_fbad );return nil ,_fbad ;};return _agafa .NewImageFromGoImage (_bddcb );};

// ToPdfObject implements interface PdfModel.
func (_dca *PdfActionThread )ToPdfObject ()_da .PdfObject {_dca .PdfAction .ToPdfObject ();_fea :=_dca ._fca ;_egb :=_fea .PdfObject .(*_da .PdfObjectDictionary );_egb .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeThread )));if _dca .F !=nil {_egb .Set ("\u0046",_dca .F .ToPdfObject ());};_egb .SetIfNotNil ("\u0044",_dca .D );_egb .SetIfNotNil ("\u0042",_dca .B );return _fea ;};func (_eeaf *pdfFontType0 )bytesToCharcodes (_gggd []byte )([]_ceb .CharCode ,bool ){if _eeaf ._acbdf ==nil {return nil ,false ;};_fbaggc ,_egdda :=_eeaf ._acbdf .BytesToCharcodes (_gggd );if !_egdda {return nil ,false ;};_ecfb :=make ([]_ceb .CharCode ,len (_fbaggc ));for _gbbc ,_gebc :=range _fbaggc {_ecfb [_gbbc ]=_ceb .CharCode (_gebc );};return _ecfb ,true ;};

// Items returns all children outline items.
func (_aagb *OutlineItem )Items ()[]*OutlineItem {return _aagb .Entries };

// ToPdfObject implements interface PdfModel.
func (_gba *PdfAnnotationLink )ToPdfObject ()_da .PdfObject {_gba .PdfAnnotation .ToPdfObject ();_egfe :=_gba ._dda ;_ecc :=_egfe .PdfObject .(*_da .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u004c\u0069\u006e\u006b"));if _gba ._eba !=nil &&_gba ._eba ._cg !=nil {_ecc .Set ("\u0041",_gba ._eba ._cg .ToPdfObject ());}else if _gba .A !=nil {_ecc .Set ("\u0041",_gba .A );};_ecc .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gba .Dest );_ecc .SetIfNotNil ("\u0048",_gba .H );_ecc .SetIfNotNil ("\u0050\u0041",_gba .PA );_ecc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gba .QuadPoints );_ecc .SetIfNotNil ("\u0042\u0053",_gba .BS );return _egfe ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cbdd :=&PdfColorspaceSpecialSeparation {};return _cbdd ;};

// ToInteger convert to an integer format.
func (_aagge *PdfColorCalGray )ToInteger (bits int )uint32 {_gead :=_ec .Pow (2,float64 (bits ))-1;return uint32 (_gead *_aagge .Val ());};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dgaad *Image )AlphaMap (mapFunc AlphaMapFunc ){for _aecfg ,_dagec :=range _dgaad ._afefc {_dgaad ._afefc [_aecfg ]=mapFunc (_dagec );};};

// MergePageWith appends page content to source Pdf file page content.
func (_bebg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fdfa :=pageNum -1;var _gbee *PdfPage ;for _ffgd ,_fbg :=range _bebg ._gca {if _ffgd ==_fdfa {_gbee =_fbg ;};};if _gbee ==nil {return _bd .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _gbee ._bcce !=nil &&_gbee ._bcce .GetParser ()==_bebg ._bceb ._baeg {_gbee =_gbee .Duplicate ();_bebg ._gca [_fdfa ]=_gbee ;};page =page .Duplicate ();_bbddf (page );_abc :=_dcfa (_gbee );_bbg :=_dcfa (page );_caegg :=make (map[_da .PdfObjectName ]_da .PdfObjectName );for _fffg :=range _bbg {if _ ,_bafef :=_abc [_fffg ];_bafef {for _ccca :=1;true ;_ccca ++{_dec :=_da .PdfObjectName (string (_fffg )+_db .Itoa (_ccca ));if _ ,_bdg :=_abc [_dec ];!_bdg {_caegg [_fffg ]=_dec ;break ;};};};};_daad ,_afbeb :=page .GetContentStreams ();if _afbeb !=nil {return _afbeb ;};_bfbd ,_afbeb :=_gbee .GetContentStreams ();if _afbeb !=nil {return _afbeb ;};for _dggd ,_fcebd :=range _daad {for _egdd ,_bedbg :=range _caegg {_fcebd =_dg .Replace (_fcebd ,"\u002f"+string (_egdd ),"\u002f"+string (_bedbg ),-1);};_daad [_dggd ]=_fcebd ;};_bfbd =append (_bfbd ,_daad ...);if _gdde :=_gbee .SetContentStreams (_bfbd ,_da .NewFlateEncoder ());_gdde !=nil {return _gdde ;};for _ ,_ffbf :=range page ._fcgd {_gbee ._fcgd =append (_gbee ._fcgd ,_ffbf );};if _gbee .Resources ==nil {_gbee .Resources =NewPdfPageResources ();};if page .Resources !=nil {_gbee .Resources .Font =_bebg .mergeResources (_gbee .Resources .Font ,page .Resources .Font ,_caegg );_gbee .Resources .XObject =_bebg .mergeResources (_gbee .Resources .XObject ,page .Resources .XObject ,_caegg );_gbee .Resources .Properties =_bebg .mergeResources (_gbee .Resources .Properties ,page .Resources .Properties ,_caegg );if _gbee .Resources .ProcSet ==nil {_gbee .Resources .ProcSet =page .Resources .ProcSet ;};_gbee .Resources .Shading =_bebg .mergeResources (_gbee .Resources .Shading ,page .Resources .Shading ,_caegg );_gbee .Resources .ExtGState =_bebg .mergeResources (_gbee .Resources .ExtGState ,page .Resources .ExtGState ,_caegg );};_agbf ,_afbeb :=_gbee .GetMediaBox ();if _afbeb !=nil {return _afbeb ;};_aggc ,_afbeb :=page .GetMediaBox ();if _afbeb !=nil {return _afbeb ;};var _accc bool ;if _agbf .Llx > _aggc .Llx {_agbf .Llx =_aggc .Llx ;_accc =true ;};if _agbf .Lly > _aggc .Lly {_agbf .Lly =_aggc .Lly ;_accc =true ;};if _agbf .Urx < _aggc .Urx {_agbf .Urx =_aggc .Urx ;_accc =true ;};if _agbf .Ury < _aggc .Ury {_agbf .Ury =_aggc .Ury ;_accc =true ;};if _accc {_gbee .MediaBox =_agbf ;};return nil ;};func (_bacaa *PdfReader )newPdfAnnotationLinkFromDict (_eaae *_da .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_caeb :=PdfAnnotationLink {};_caeb .A =_eaae .Get ("\u0041");_caeb .Dest =_eaae .Get ("\u0044\u0065\u0073\u0074");_caeb .H =_eaae .Get ("\u0048");_caeb .PA =_eaae .Get ("\u0050\u0041");_caeb .QuadPoints =_eaae .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_caeb .BS =_eaae .Get ("\u0042\u0053");return &_caeb ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_eafe *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_fcdg *PdfActionSubmitForm )ToPdfObject ()_da .PdfObject {_fcdg .PdfAction .ToPdfObject ();_agd :=_fcdg ._fca ;_dfe :=_agd .PdfObject .(*_da .PdfObjectDictionary );_dfe .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeSubmitForm )));if _fcdg .F !=nil {_dfe .Set ("\u0046",_fcdg .F .ToPdfObject ());};_dfe .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fcdg .Fields );_dfe .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fcdg .Flags );return _agd ;};

// Encoder returns the font's text encoder.
func (_ccgb *PdfFont )Encoder ()_ceb .TextEncoder {_bgbfg :=_ccgb .actualFont ();if _bgbfg ==nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ccgb ._fdbf );return nil ;};return _bgbfg .Encoder ();};

// ToPdfObject converts date to a PDF string object.
func (_gbeg *PdfDate )ToPdfObject ()_da .PdfObject {_gbdgd :=_bd .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_gbeg ._faege ,_gbeg ._egbdc ,_gbeg ._edffb ,_gbeg ._agceg ,_gbeg ._gfdbd ,_gbeg ._dcbef ,_gbeg ._dafbc ,_gbeg ._caggc ,_gbeg ._abcb );return _da .MakeString (_gbdgd );};func (_deda *PdfReader )newPdfAnnotationPopupFromDict (_eceba *_da .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_gebd :=PdfAnnotationPopup {};_gebd .Parent =_eceba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gebd .Open =_eceba .Get ("\u004f\u0070\u0065\u006e");return &_gebd ,nil ;};

// Width returns the width of `rect`.
func (_acbfe *PdfRectangle )Width ()float64 {return _ec .Abs (_acbfe .Urx -_acbfe .Llx )};func (_baecb *PdfReader )newPdfAnnotationHighlightFromDict (_cfed *_da .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_fdgb :=PdfAnnotationHighlight {};_bcgcb ,_gabe :=_baecb .newPdfAnnotationMarkupFromDict (_cfed );if _gabe !=nil {return nil ,_gabe ;};_fdgb .PdfAnnotationMarkup =_bcgcb ;_fdgb .QuadPoints =_cfed .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdgb ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_fcefb *PdfPage )GetPageAsIndirectObject ()*_da .PdfIndirectObject {return _fcefb ._bcce };

// Flags returns the field flags for the field accounting for any inherited flags.
func (_abaa *PdfField )Flags ()FieldFlag {var _egddc FieldFlag ;_agef ,_dgbcc :=_abaa .inherit (func (_dcbd *PdfField )bool {if _dcbd .Ff !=nil {_egddc =FieldFlag (*_abaa .Ff );return true ;};return false ;});if _dgbcc !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dgbcc );};if !_agef {_bdd .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _egddc ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _da .PdfObject ;Name _da .PdfObject ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dfcc :=PdfColorCalRGB {a ,b ,c };return &_dfcc ;};

// Write writes out the PDF.
func (_fdacd *PdfWriter )Write (writer _af .Writer )error {_bdd .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bbgdc :=_be .GetLicenseKey ();if (_bbgdc ==nil ||!_bbgdc .IsLicensed ())&&!_egffa {_bd .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_bd .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _dbf .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _fdacd ._decgf !=nil {_bdd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_fdacd ._decgf );_ecafg :=_fdacd ._decgf .ToPdfObject ();_bdd .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ecafg ,_ecafg ,_ecafg );_fdacd ._dgbe .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ecafg );_eaadd :=_fdacd .addObjects (_ecafg );if _eaadd !=nil {return _eaadd ;};};if _fdacd ._cgaeg !=nil {_bdd .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_egbgd :=_fdacd ._cgaeg .ToPdfObject ();_bdd .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_egbgd );_fdacd ._dgbe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_egbgd );_ggecfg :=_fdacd .addObjects (_egbgd );if _ggecfg !=nil {return _ggecfg ;};};for _aegag ,_edcd :=range _fdacd ._bggga {if !_fdacd .hasObject (_aegag ){_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_aegag ,_aegag ,_aegag );for _ ,_daga :=range _edcd {for _ ,_cegb :=range _daga .Keys (){_fgadd :=_daga .Get (_cegb );if _fgadd ==_aegag {_bdd .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_daga .Set (_cegb ,_da .MakeNull ());break ;};};};};};_fdacd ._dgbe .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_da .MakeName (_bd .Sprintf ("\u0025\u0064\u002e%\u0064",_fdacd ._egdae ,_fdacd ._gfeec )));_fdacd .copyObjects ();if _fdacd ._agabb !=nil {var _dcee error ;_fdacd ._bafa ,_dcee =_fdacd ._agabb .Optimize (_fdacd ._bafa );if _dcee !=nil {return _dcee ;};_bedaa :=make (map[_da .PdfObject ]struct{},len (_fdacd ._bafa ));for _ ,_agecf :=range _fdacd ._bafa {_bedaa [_agecf ]=struct{}{};};_fdacd ._fcabg =_bedaa ;};_fdacd ._efddg =_fdacd ._eagga ;_fdacd ._deffg =_a .NewWriter (writer );_cdaba :=_fdacd ._egdae > 1||(_fdacd ._egdae ==1&&_fdacd ._gfeec > 4);if _fdacd ._abad !=nil {_cdaba =*_fdacd ._abad ;};_acaec :=make (map[_da .PdfObject ]bool );for _ ,_fbfga :=range _fdacd ._bafa {if _eaafe ,_gebgf :=_fbfga .(*_da .PdfObjectStreams );_gebgf {_cdaba =true ;for _ ,_dfdbg :=range _eaafe .Elements (){_acaec [_dfdbg ]=true ;if _abaae ,_cfgg :=_dfdbg .(*_da .PdfIndirectObject );_cfgg {_acaec [_abaae .PdfObject ]=true ;};};};};if _cdaba &&_fdacd ._egdae ==1&&_fdacd ._gfeec < 5{_fdacd ._gfeec =5;};if _fdacd ._adfe {_fdacd .writeString ("\u000a");}else {_fdacd .writeString (_bd .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_fdacd ._egdae ,_fdacd ._gfeec ));_fdacd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_fdacd .updateObjectNumbers ();_bdd .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_fdacd ._bafa ));_fdacd ._cdaffd =make (map[int ]crossReference );_fdacd ._cdaffd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _fdacd ._efce .ObjectMap !=nil {for _fgaad ,_ecgcc :=range _fdacd ._efce .ObjectMap {if _fgaad ==0{continue ;};if _ecgcc .XType ==_da .XrefTypeObjectStream {_beee :=crossReference {Type :2,ObjectNumber :_ecgcc .OsObjNumber ,Index :_ecgcc .OsObjIndex };_fdacd ._cdaffd [_fgaad ]=_beee ;};if _ecgcc .XType ==_da .XrefTypeTableEntry {_fcbaf :=crossReference {Type :1,ObjectNumber :_ecgcc .ObjectNumber ,Offset :_ecgcc .Offset };_fdacd ._cdaffd [_fgaad ]=_fcbaf ;};};};for _ ,_dfega :=range _fdacd ._bafa {if _bafaf :=_acaec [_dfega ];_bafaf {continue ;};_deeca :=int64 (0);switch _ggbfab :=_dfega .(type ){case *_da .PdfIndirectObject :_deeca =_ggbfab .ObjectNumber ;case *_da .PdfObjectStream :_deeca =_ggbfab .ObjectNumber ;case *_da .PdfObjectStreams :_deeca =_ggbfab .ObjectNumber ;default:_bdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_dfega );return ErrTypeCheck ;};if _fdacd ._fbeda !=nil &&_dfega !=_fdacd ._ddgdc {_ccgbd :=_fdacd ._fbeda .Encrypt (_dfega ,int64 (_deeca ),0);if _ccgbd !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ccgbd );return _ccgbd ;};};_fdacd .writeObject (int (_deeca ),_dfega );};_agadb :=_fdacd ._efddg ;var _aacee int ;for _cfdgg :=range _fdacd ._cdaffd {if _cfdgg > _aacee {_aacee =_cfdgg ;};};if _cdaba {_fabe :=_aacee +1;_fdacd ._cdaffd [_fabe ]=crossReference {Type :1,ObjectNumber :_fabe ,Offset :_agadb };_gagba :=_baf .NewBuffer (nil );_cfef :=_da .MakeArray ();for _bdaef :=0;_bdaef <=_aacee ;{for ;_bdaef <=_aacee ;_bdaef ++{_ecdea ,_ggaee :=_fdacd ._cdaffd [_bdaef ];if _ggaee &&(!_fdacd ._adfe ||_fdacd ._adfe &&(_ecdea .Type ==1&&_ecdea .Offset >=_fdacd ._badf ||_ecdea .Type ==0)){break ;};};var _decd int ;for _decd =_bdaef +1;_decd <=_aacee ;_decd ++{_defga ,_caga :=_fdacd ._cdaffd [_decd ];if _caga &&(!_fdacd ._adfe ||_fdacd ._adfe &&(_defga .Type ==1&&_defga .Offset > _fdacd ._badf )){continue ;};break ;};_cfef .Append (_da .MakeInteger (int64 (_bdaef )),_da .MakeInteger (int64 (_decd -_bdaef )));for _bffc :=_bdaef ;_bffc < _decd ;_bffc ++{_gadfa :=_fdacd ._cdaffd [_bffc ];switch _gadfa .Type {case 0:_bb .Write (_gagba ,_bb .BigEndian ,byte (0));_bb .Write (_gagba ,_bb .BigEndian ,uint32 (0));_bb .Write (_gagba ,_bb .BigEndian ,uint16 (0xFFFF));case 1:_bb .Write (_gagba ,_bb .BigEndian ,byte (1));_bb .Write (_gagba ,_bb .BigEndian ,uint32 (_gadfa .Offset ));_bb .Write (_gagba ,_bb .BigEndian ,uint16 (_gadfa .Generation ));case 2:_bb .Write (_gagba ,_bb .BigEndian ,byte (2));_bb .Write (_gagba ,_bb .BigEndian ,uint32 (_gadfa .ObjectNumber ));_bb .Write (_gagba ,_bb .BigEndian ,uint16 (_gadfa .Index ));};};_bdaef =_decd +1;};_gddee ,_caafde :=_da .MakeStream (_gagba .Bytes (),_da .NewFlateEncoder ());if _caafde !=nil {return _caafde ;};_gddee .ObjectNumber =int64 (_fabe );_gddee .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0058\u0052\u0065\u0066"));_gddee .PdfObjectDictionary .Set ("\u0057",_da .MakeArray (_da .MakeInteger (1),_da .MakeInteger (4),_da .MakeInteger (2)));_gddee .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_cfef );_gddee .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_da .MakeInteger (int64 (_fabe +1)));_gddee .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_fdacd ._dgdec );_gddee .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_fdacd ._gcbe );if _fdacd ._adfe &&_fdacd ._cbfe > 0{_gddee .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_da .MakeInteger (_fdacd ._cbfe ));};if _fdacd ._fbeda !=nil {_gddee .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fdacd ._ddgdc );_gddee .Set ("\u0049\u0044",_fdacd ._cgbf );_bdd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fdacd ._cgbf );};_fdacd .writeObject (int (_gddee .ObjectNumber ),_gddee );}else {_fdacd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _aaffd :=0;_aaffd <=_aacee ;{for ;_aaffd <=_aacee ;_aaffd ++{_agfac ,_fbaf :=_fdacd ._cdaffd [_aaffd ];if _fbaf &&(!_fdacd ._adfe ||_fdacd ._adfe &&(_agfac .Type ==1&&_agfac .Offset >=_fdacd ._badf ||_agfac .Type ==0)){break ;};};var _cdeea int ;for _cdeea =_aaffd +1;_cdeea <=_aacee ;_cdeea ++{_bgeeb ,_agdbc :=_fdacd ._cdaffd [_cdeea ];if _agdbc &&(!_fdacd ._adfe ||_fdacd ._adfe &&(_bgeeb .Type ==1&&_bgeeb .Offset > _fdacd ._badf )){continue ;};break ;};_bbgac :=_bd .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_aaffd ,_cdeea -_aaffd );_fdacd .writeString (_bbgac );for _fcgdcg :=_aaffd ;_fcgdcg < _cdeea ;_fcgdcg ++{_fdbde :=_fdacd ._cdaffd [_fcgdcg ];switch _fdbde .Type {case 0:_bbgac =_bd .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_fdacd .writeString (_bbgac );case 1:_bbgac =_bd .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_fdbde .Offset ,0);_fdacd .writeString (_bbgac );};};_aaffd =_cdeea +1;};_bcgec :=_da .MakeDict ();_bcgec .Set ("\u0049\u006e\u0066\u006f",_fdacd ._dgdec );_bcgec .Set ("\u0052\u006f\u006f\u0074",_fdacd ._gcbe );_bcgec .Set ("\u0053\u0069\u007a\u0065",_da .MakeInteger (int64 (_aacee +1)));if _fdacd ._adfe &&_fdacd ._cbfe > 0{_bcgec .Set ("\u0050\u0072\u0065\u0076",_da .MakeInteger (_fdacd ._cbfe ));};if _fdacd ._fbeda !=nil {_bcgec .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fdacd ._ddgdc );_bcgec .Set ("\u0049\u0044",_fdacd ._cgbf );_bdd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fdacd ._cgbf );};_fdacd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_fdacd .writeString (_bcgec .WriteString ());_fdacd .writeString ("\u000a");};_gbda :=_bd .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_agadb );_fdacd .writeString (_gbda );_fdacd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _fdacd ._ggef ==nil {_fdacd ._ggef =_fdacd ._deffg .Flush ();};return _fdacd ._ggef ;};func (_bdc *PdfReader )newPdfAnnotationTextFromDict (_bacag *_da .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cfe :=PdfAnnotationText {};_cebcg ,_beb :=_bdc .newPdfAnnotationMarkupFromDict (_bacag );if _beb !=nil {return nil ,_beb ;};_cfe .PdfAnnotationMarkup =_cebcg ;_cfe .Open =_bacag .Get ("\u004f\u0070\u0065\u006e");_cfe .Name =_bacag .Get ("\u004e\u0061\u006d\u0065");_cfe .State =_bacag .Get ("\u0053\u0074\u0061t\u0065");_cfe .StateModel =_bacag .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_cfe ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_dade :_da .MakeIndirectObject (_da .MakeDict ())}};func (_fdd *PdfReader )newPdfAnnotationUnderlineFromDict (_ege *_da .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_dcc :=PdfAnnotationUnderline {};_bfba ,_gcdd :=_fdd .newPdfAnnotationMarkupFromDict (_ege );if _gcdd !=nil {return nil ,_gcdd ;};_dcc .PdfAnnotationMarkup =_bfba ;_dcc .QuadPoints =_ege .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dcc ,nil ;};func _cgdb (_efg *_da .PdfObjectDictionary )(*PdfFieldChoice ,error ){_fggde :=&PdfFieldChoice {};_fggde .Opt ,_ =_da .GetArray (_efg .Get ("\u004f\u0070\u0074"));_fggde .TI ,_ =_da .GetInt (_efg .Get ("\u0054\u0049"));_fggde .I ,_ =_da .GetArray (_efg .Get ("\u0049"));return _fggde ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_eafbg *PdfPage )AddContentStreamByString (contentStr string )error {_effeg ,_gfcga :=_da .MakeStream ([]byte (contentStr ),_da .NewFlateEncoder ());if _gfcga !=nil {return _gfcga ;};if _eafbg .Contents ==nil {_eafbg .Contents =_effeg ;}else {_dcdda :=_da .TraceToDirectObject (_eafbg .Contents );_eecdf ,_cfdgb :=_dcdda .(*_da .PdfObjectArray );if !_cfdgb {_eecdf =_da .MakeArray (_dcdda );};_eecdf .Append (_effeg );_eafbg .Contents =_eecdf ;};return nil ;};func _gffce (_faff *_da .PdfObjectStream )(*PdfFunctionType0 ,error ){_eeadb :=&PdfFunctionType0 {};_eeadb ._eefeb =_faff ;_ecbf :=_faff .PdfObjectDictionary ;_ccbd ,_dgccg :=_da .TraceToDirectObject (_ecbf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_dgccg {_bdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ccbd .Len ()< 0||_ccbd .Len ()%2!=0{_bdd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dbf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eeadb .NumInputs =_ccbd .Len ()/2;_cbcfc ,_dbdg :=_ccbd .ToFloat64Array ();if _dbdg !=nil {return nil ,_dbdg ;};_eeadb .Domain =_cbcfc ;_ccbd ,_dgccg =_da .TraceToDirectObject (_ecbf .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if !_dgccg {_bdd .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ccbd .Len ()< 0||_ccbd .Len ()%2!=0{return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eeadb .NumOutputs =_ccbd .Len ()/2;_agaca ,_dbdg :=_ccbd .ToFloat64Array ();if _dbdg !=nil {return nil ,_dbdg ;};_eeadb .Range =_agaca ;_ccbd ,_dgccg =_da .TraceToDirectObject (_ecbf .Get ("\u0053\u0069\u007a\u0065")).(*_da .PdfObjectArray );if !_dgccg {_bdd .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gbge ,_dbdg :=_ccbd .ToIntegerArray ();if _dbdg !=nil {return nil ,_dbdg ;};if len (_gbge )!=_eeadb .NumInputs {_bdd .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeadb .Size =_gbge ;_fcag ,_dgccg :=_da .TraceToDirectObject (_ecbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_da .PdfObjectInteger );if !_dgccg {_bdd .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_fcag !=1&&*_fcag !=2&&*_fcag !=4&&*_fcag !=8&&*_fcag !=12&&*_fcag !=16&&*_fcag !=24&&*_fcag !=32{_bdd .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fcag );return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeadb .BitsPerSample =int (*_fcag );_eeadb .Order =1;_bgdgg ,_dgccg :=_da .TraceToDirectObject (_ecbf .Get ("\u004f\u0072\u0064e\u0072")).(*_da .PdfObjectInteger );if _dgccg {if *_bgdgg !=1&&*_bgdgg !=3{_bdd .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bgdgg );return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeadb .Order =int (*_bgdgg );};_ccbd ,_dgccg =_da .TraceToDirectObject (_ecbf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_da .PdfObjectArray );if _dgccg {_cfeg ,_ggffg :=_ccbd .ToFloat64Array ();if _ggffg !=nil {return nil ,_ggffg ;};_eeadb .Encode =_cfeg ;};_ccbd ,_dgccg =_da .TraceToDirectObject (_ecbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_da .PdfObjectArray );if _dgccg {_eddba ,_dfcfe :=_ccbd .ToFloat64Array ();if _dfcfe !=nil {return nil ,_dfcfe ;};_eeadb .Decode =_eddba ;};_edfag ,_dbdg :=_da .DecodeStream (_faff );if _dbdg !=nil {return nil ,_dbdg ;};_eeadb ._bdaf =_edfag ;return _eeadb ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_dbbd *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _da .GetNumberAsFloat (_dbbd .CapHeight );};func (_ged *PdfReader )newPdfAnnotationStampFromDict (_bfg *_da .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ccaa :=PdfAnnotationStamp {};_dgec ,_ega :=_ged .newPdfAnnotationMarkupFromDict (_bfg );if _ega !=nil {return nil ,_ega ;};_ccaa .PdfAnnotationMarkup =_dgec ;_ccaa .Name =_bfg .Get ("\u004e\u0061\u006d\u0065");return &_ccaa ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_gfag :=&PdfAnnotation {};_gfag ._dda =_da .MakeIndirectObject (_da .MakeDict ());return _gfag ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cadc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_bd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_cadc .N =N ;return _cadc ,nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fcdag *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fcdag .Range };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_edaf _da .PdfObject ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gafbe *PdfReader )GetIndirectObjectByNumber (number int )(_da .PdfObject ,error ){_dgafd ,_cceee :=_gafbe ._baeg .LookupByNumber (number );return _dgafd ,_cceee ;};func (_edcf *PdfReader )newPdfAnnotationSoundFromDict (_dgae *_da .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bfcgf :=PdfAnnotationSound {};_cddca ,_fcab :=_edcf .newPdfAnnotationMarkupFromDict (_dgae );if _fcab !=nil {return nil ,_fcab ;};_bfcgf .PdfAnnotationMarkup =_cddca ;_bfcgf .Name =_dgae .Get ("\u004e\u0061\u006d\u0065");_bfcgf .Sound =_dgae .Get ("\u0053\u006f\u0075n\u0064");return &_bfcgf ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gcdff *PdfFunctionType3 )ToPdfObject ()_da .PdfObject {_dfae :=_da .MakeDict ();_dfae .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (3));_egeb :=&_da .PdfObjectArray {};for _ ,_bgcdc :=range _gcdff .Domain {_egeb .Append (_da .MakeFloat (_bgcdc ));};_dfae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egeb );if _gcdff .Range !=nil {_dgea :=&_da .PdfObjectArray {};for _ ,_effb :=range _gcdff .Range {_dgea .Append (_da .MakeFloat (_effb ));};_dfae .Set ("\u0052\u0061\u006eg\u0065",_dgea );};if _gcdff .Functions !=nil {_fafca :=&_da .PdfObjectArray {};for _ ,_caeag :=range _gcdff .Functions {_fafca .Append (_caeag .ToPdfObject ());};_dfae .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_fafca );};if _gcdff .Bounds !=nil {_afbbe :=&_da .PdfObjectArray {};for _ ,_cffgd :=range _gcdff .Bounds {_afbbe .Append (_da .MakeFloat (_cffgd ));};_dfae .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_afbbe );};if _gcdff .Encode !=nil {_eccae :=&_da .PdfObjectArray {};for _ ,_faab :=range _gcdff .Encode {_eccae .Append (_da .MakeFloat (_faab ));};_dfae .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_eccae );};if _gcdff ._gfgbf !=nil {_gcdff ._gfgbf .PdfObject =_dfae ;return _gcdff ._gfgbf ;};return _dfae ;};func _aacg (_gaddf *_da .PdfObjectDictionary ,_bdfcg *fontCommon )(*pdfCIDFontType2 ,error ){if _bdfcg ._bcga !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bdfcg );return nil ,_da .ErrRangeError ;};_bacb :=_acfb (_bdfcg );_acece ,_aaee :=_da .GetDict (_gaddf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aaee {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bdfcg );return nil ,ErrRequiredAttributeMissing ;};_bacb .CIDSystemInfo =_acece ;_bacb .DW =_gaddf .Get ("\u0044\u0057");_bacb .W =_gaddf .Get ("\u0057");_bacb .DW2 =_gaddf .Get ("\u0044\u0057\u0032");_bacb .W2 =_gaddf .Get ("\u0057\u0032");_bacb .CIDToGIDMap =_gaddf .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_bacb ._cgbbf =1000.0;if _ddgdg ,_ebfe :=_da .GetNumberAsFloat (_bacb .DW );_ebfe ==nil {_bacb ._cgbbf =_ddgdg ;};_dcef ,_aabda :=_faddg (_bacb .W );if _aabda !=nil {return nil ,_aabda ;};if _dcef ==nil {_dcef =map[_ceb .CharCode ]float64 {};};_bacb ._ecagc =_dcef ;return _bacb ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cdeb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cdeb .Alternate ==nil {if _cdeb .N ==1{_dgbc :=NewPdfColorspaceDeviceGray ();return _dgbc .ColorFromFloats (vals );}else if _cdeb .N ==3{_dcaee :=NewPdfColorspaceDeviceRGB ();return _dcaee .ColorFromFloats (vals );}else if _cdeb .N ==4{_dgfe :=NewPdfColorspaceDeviceCMYK ();return _dgfe .ColorFromFloats (vals );}else {return nil ,_dbf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _cdeb .Alternate .ColorFromFloats (vals );};func (_bbce *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _eefd []*PdfFieldSignature ;for _ ,_eaag :=range _bbce .AllFields (){switch _cbcf :=_eaag .GetContext ().(type ){case *PdfFieldSignature :_gabfd :=_cbcf ;_eefd =append (_eefd ,_gabfd );};};return _eefd ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_da .PdfObjectStream )(*XObjectImage ,error ){_febf :=&XObjectImage {};_febf ._edcgf =stream ;_efeed :=*(stream .PdfObjectDictionary );_adccc ,_dceb :=_da .NewEncoderFromStream (stream );if _dceb !=nil {return nil ,_dceb ;};_febf .Filter =_adccc ;if _gdcgd :=_da .TraceToDirectObject (_efeed .Get ("\u0057\u0069\u0064t\u0068"));_gdcgd !=nil {_defb ,_afaca :=_gdcgd .(*_da .PdfObjectInteger );if !_afaca {return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_cabba :=int64 (*_defb );_febf .Width =&_cabba ;}else {return nil ,_dbf .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _dbfag :=_da .TraceToDirectObject (_efeed .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_dbfag !=nil {_gagaa ,_aggcfe :=_dbfag .(*_da .PdfObjectInteger );if !_aggcfe {return nil ,_dbf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_baddb :=int64 (*_gagaa );_febf .Height =&_baddb ;}else {return nil ,_dbf .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cdgbd :=_da .TraceToDirectObject (_efeed .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_cdgbd !=nil {_dfafa ,_beadgc :=NewPdfColorspaceFromPdfObject (_cdgbd );if _beadgc !=nil {return nil ,_beadgc ;};_febf .ColorSpace =_dfafa ;}else {_bdd .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_febf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _eabg :=_da .TraceToDirectObject (_efeed .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_eabg !=nil {_aegbdc ,_bfcfgg :=_eabg .(*_da .PdfObjectInteger );if !_bfcfgg {return nil ,_dbf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_efccf :=int64 (*_aegbdc );_febf .BitsPerComponent =&_efccf ;};_febf .Intent =_efeed .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_febf .ImageMask =_efeed .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_febf .Mask =_efeed .Get ("\u004d\u0061\u0073\u006b");_febf .Decode =_efeed .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_febf .Interpolate =_efeed .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_febf .Alternatives =_efeed .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_febf .SMask =_efeed .Get ("\u0053\u004d\u0061s\u006b");_febf .SMaskInData =_efeed .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_febf .Matte =_efeed .Get ("\u004d\u0061\u0074t\u0065");_febf .Name =_efeed .Get ("\u004e\u0061\u006d\u0065");_febf .StructParent =_efeed .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_febf .ID =_efeed .Get ("\u0049\u0044");_febf .OPI =_efeed .Get ("\u004f\u0050\u0049");_febf .Metadata =_efeed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_febf .OC =_efeed .Get ("\u004f\u0043");_febf .Stream =stream .Stream ;return _febf ,nil ;};func _gccc (_aegd _da .PdfObject )(*PdfBorderStyle ,error ){_egcf :=&PdfBorderStyle {};_egcf ._edaf =_aegd ;var _cgde *_da .PdfObjectDictionary ;_aegd =_da .TraceToDirectObject (_aegd );_cgde ,_dcgd :=_aegd .(*_da .PdfObjectDictionary );if !_dcgd {return nil ,_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _aaea :=_cgde .Get ("\u0054\u0079\u0070\u0065");_aaea !=nil {_gbff ,_cdc :=_aaea .(*_da .PdfObjectName );if !_cdc {_bdd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aaea );}else {if *_gbff !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bdd .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gbff );};};};if _ebed :=_cgde .Get ("\u0057");_ebed !=nil {_efc ,_fgeg :=_da .GetNumberAsFloat (_ebed );if _fgeg !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fgeg );return nil ,_fgeg ;};_egcf .W =&_efc ;};if _aefd :=_cgde .Get ("\u0053");_aefd !=nil {_bfga ,_ddcd :=_aefd .(*_da .PdfObjectName );if !_ddcd {return nil ,_dbf .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _gdfd BorderStyle ;switch *_bfga {case "\u0053":_gdfd =BorderStyleSolid ;case "\u0044":_gdfd =BorderStyleDashed ;case "\u0042":_gdfd =BorderStyleBeveled ;case "\u0049":_gdfd =BorderStyleInset ;case "\u0055":_gdfd =BorderStyleUnderline ;default:_bdd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bfga );return nil ,_dbf .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_egcf .S =&_gdfd ;};if _cad :=_cgde .Get ("\u0044");_cad !=nil {_eeda ,_acfe :=_cad .(*_da .PdfObjectArray );if !_acfe {_bdd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cad );return nil ,_dbf .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_fceb ,_fgfe :=_eeda .ToIntegerArray ();if _fgfe !=nil {_bdd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_fgfe );return nil ,_fgfe ;};_egcf .D =&_fceb ;};return _egcf ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_cfgf *PdfPage )HasXObjectByName (name _da .PdfObjectName )bool {_bcbd ,_dfcfg :=_cfgf .Resources .XObject .(*_da .PdfObjectDictionary );if !_dfcfg {return false ;};if _gbdde :=_bcbd .Get (name );_gbdde !=nil {return true ;};return false ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;IC _da .PdfObject ;RO _da .PdfObject ;OverlayText _da .PdfObject ;Repeat _da .PdfObject ;DA _da .PdfObject ;Q _da .PdfObject ;};func _fgfc (_bdda _da .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_aafa :=&PdfColorspaceDeviceNAttributes {};var _bbdf *_da .PdfObjectDictionary ;if _cccg ,_gcbge :=_bdda .(*_da .PdfIndirectObject );_gcbge {_aafa ._edbg =_cccg ;var _dbgc bool ;_bbdf ,_dbgc =_cccg .PdfObject .(*_da .PdfObjectDictionary );if !_dbgc {_bdd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _dacf ,_ggffa :=_bdda .(*_da .PdfObjectDictionary );_ggffa {_bbdf =_dacf ;}else {_bdd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _edgg :=_bbdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_edgg !=nil {_daeg ,_ecbgf :=_da .TraceToDirectObject (_edgg ).(*_da .PdfObjectName );if !_ecbgf {_bdd .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_dbf .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_aafa .Subtype =_daeg ;};if _abbgg :=_bbdf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_abbgg !=nil {_aafa .Colorants =_abbgg ;};if _facbc :=_bbdf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_facbc !=nil {_aafa .Process =_facbc ;};if _dgde :=_bbdf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dgde !=nil {_aafa .MixingHints =_dgde ;};return _aafa ,nil ;};

// Height returns the height of `rect`.
func (_bdfg *PdfRectangle )Height ()float64 {return _ec .Abs (_bdfg .Ury -_bdfg .Lly )};func (_ggdc *PdfReader )newPdfAnnotationWidgetFromDict (_cgeb *_da .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_cdde :=PdfAnnotationWidget {};_cdde .H =_cgeb .Get ("\u0048");_cdde .MK =_cgeb .Get ("\u004d\u004b");_cdde .A =_cgeb .Get ("\u0041");_cdde .AA =_cgeb .Get ("\u0041\u0041");_cdde .BS =_cgeb .Get ("\u0042\u0053");_cdde .Parent =_cgeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_cdde ,nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_eged *_da .PdfIndirectObject ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _da .PdfObject ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bdbge *_da .PdfIndirectObject ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gcdbb ,_caad :=_ag .Open (filePath );if _caad !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_caad );return nil ,_caad ;};defer _gcdbb .Close ();return NewCompositePdfFontFromTTF (_gcdbb );};func _baga (_ebdc *_da .PdfObjectStream )(*PdfFunctionType4 ,error ){_gccda :=&PdfFunctionType4 {};_gccda ._cdac =_ebdc ;_bdcg :=_ebdc .PdfObjectDictionary ;_aefeg ,_afea :=_da .TraceToDirectObject (_bdcg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_afea {_bdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aefeg .Len ()%2!=0{_bdd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_dbf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gfafg ,_gbdc :=_aefeg .ToFloat64Array ();if _gbdc !=nil {return nil ,_gbdc ;};_gccda .Domain =_gfafg ;_aefeg ,_afea =_da .TraceToDirectObject (_bdcg .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if _afea {if _aefeg .Len ()< 0||_aefeg .Len ()%2!=0{return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dbge ,_gbcbb :=_aefeg .ToFloat64Array ();if _gbcbb !=nil {return nil ,_gbcbb ;};_gccda .Range =_dbge ;};_ebecf ,_gbdc :=_da .DecodeStream (_ebdc );if _gbdc !=nil {return nil ,_gbdc ;};_gccda ._fcded =_ebecf ;_gcfga :=_ac .NewPSParser ([]byte (_ebecf ));_eeece ,_gbdc :=_gcfga .Parse ();if _gbdc !=nil {return nil ,_gbdc ;};_gccda .Program =_eeece ;return _gccda ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;RD _da .PdfObject ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bfcdb *Image )GetSamples ()[]uint32 {_egdgd :=_ee .ResampleBytes (_bfcdb .Data ,int (_bfcdb .BitsPerComponent ));if _bfcdb .BitsPerComponent < 8{_egdgd =_bfcdb .samplesTrimPadding (_egdgd );};_dfabd :=int (_bfcdb .Width )*int (_bfcdb .Height )*_bfcdb .ColorComponents ;if len (_egdgd )< _dfabd {_bdd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_egdgd ),_dfabd );return _egdgd ;}else if len (_egdgd )> _dfabd {_bdd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_egdgd ),_dfabd );_egdgd =_egdgd [:_dfabd ];};return _egdgd ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gbea *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgcc ,_fbde :=color .(*PdfColorPattern );if !_fbde {_bdd .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _dgcc .Color ==nil {return color ,nil ;};if _gbea .UnderlyingCS ==nil {return nil ,_dbf .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gbea .UnderlyingCS .ColorToRGB (_dgcc .Color );};

// ToPdfObject implements interface PdfModel.
func (_bebfe *PdfAnnotationPrinterMark )ToPdfObject ()_da .PdfObject {_bebfe .PdfAnnotation .ToPdfObject ();_ebd :=_bebfe ._dda ;_afba :=_ebd .PdfObject .(*_da .PdfObjectDictionary );_afba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_afba .SetIfNotNil ("\u004d\u004e",_bebfe .MN );return _ebd ;};func (_ebbf *PdfReader )loadStructure ()error {if _ebbf ._baeg .GetCrypter ()!=nil &&!_ebbf ._baeg .IsAuthenticated (){return _bd .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_beag :=_ebbf ._baeg .GetTrailer ();if _beag ==nil {return _bd .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bfee ,_begcd :=_beag .Get ("\u0052\u006f\u006f\u0074").(*_da .PdfObjectReference );if !_begcd {return _bd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_beag );};_dcfac ,_dacea :=_ebbf ._baeg .LookupByReference (*_bfee );if _dacea !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dacea );return _dacea ;};_acdf ,_begcd :=_dcfac .(*_da .PdfIndirectObject );if !_begcd {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dcfac ,*_beag );return _dbf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gccfa ,_begcd :=(*_acdf ).PdfObject .(*_da .PdfObjectDictionary );if !_begcd {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_acdf .PdfObject );return _dbf .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bdd .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gccfa );_bgdbe ,_begcd :=_gccfa .Get ("\u0050\u0061\u0067e\u0073").(*_da .PdfObjectReference );if !_begcd {return _dbf .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fdece ,_dacea :=_ebbf ._baeg .LookupByReference (*_bgdbe );if _dacea !=nil {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dacea ;};_fefe ,_begcd :=_fdece .(*_da .PdfIndirectObject );if !_begcd {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_bdd .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fefe );return _dbf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dadcd ,_begcd :=_fefe .PdfObject .(*_da .PdfObjectDictionary );if !_begcd {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fefe );return _dbf .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_afge ,_begcd :=_da .GetInt (_dadcd .Get ("\u0043\u006f\u0075n\u0074"));if !_begcd {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _dbf .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_begcd =_da .GetName (_dadcd .Get ("\u0054\u0079\u0070\u0065"));!_begcd {_bdd .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_dadcd .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050\u0061\u0067e\u0073"));};_ebbf ._egbc =_bfee ;_ebbf ._edcc =_gccfa ;_ebbf ._fbed =_dadcd ;_ebbf ._cgbdb =_fefe ;_ebbf ._adabe =int (*_afge );_ebbf ._fgcfe =[]*_da .PdfIndirectObject {};_gfbg :=map[_da .PdfObject ]struct{}{};_dacea =_ebbf .buildPageList (_fefe ,nil ,_gfbg );if _dacea !=nil {return _dacea ;};_bdd .Log .Trace ("\u002d\u002d\u002d");_bdd .Log .Trace ("\u0054\u004f\u0043");_bdd .Log .Trace ("\u0050\u0061\u0067e\u0073");_bdd .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ebbf ._fgcfe ),_ebbf ._fgcfe );_ebbf ._dcggc ,_dacea =_ebbf .loadOutlines ();if _dacea !=nil {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dacea );return _dacea ;};_ebbf .AcroForm ,_dacea =_ebbf .loadForms ();if _dacea !=nil {return _dacea ;};return nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_da .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_da .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_da .PdfObjectBool ;_gaaeed PdfModel ;_ggcdb _da .PdfObject ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cef :=NewPdfAction ();_daf :=&PdfActionMovie {};_daf .PdfAction =_cef ;_cef .SetContext (_daf );return _daf ;};func (_deega *PdfShading )getShadingDict ()(*_da .PdfObjectDictionary ,error ){_fbda :=_deega ._ggcdb ;if _cggde ,_bfgd :=_fbda .(*_da .PdfIndirectObject );_bfgd {_dgaaa ,_ebdddd :=_cggde .PdfObject .(*_da .PdfObjectDictionary );if !_ebdddd {return nil ,_da .ErrTypeError ;};return _dgaaa ,nil ;}else if _ggea ,_faecf :=_fbda .(*_da .PdfObjectStream );_faecf {return _ggea .PdfObjectDictionary ,nil ;}else if _fadaa ,_afbg :=_fbda .(*_da .PdfObjectDictionary );_afbg {return _fadaa ,nil ;}else {_bdd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_da .ErrTypeError ;};};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_gcbe *_da .PdfIndirectObject ;_gdag *_da .PdfIndirectObject ;_aecdcf map[_da .PdfObject ]struct{};_bafa []_da .PdfObject ;_fcabg map[_da .PdfObject ]struct{};_cdeae []*_da .PdfIndirectObject ;_decgf *PdfOutlineTreeNode ;_dgbe *_da .PdfObjectDictionary ;_bfgdc []_da .PdfObject ;_dgdec *_da .PdfIndirectObject ;_deffg *_a .Writer ;_efddg int64 ;_ggef error ;_fbeda *_da .PdfCrypt ;_dedga *_da .PdfObjectDictionary ;_ddgdc *_da .PdfIndirectObject ;_cgbf *_da .PdfObjectArray ;_egdae int ;_gfeec int ;_abad *bool ;_bggga map[_da .PdfObject ][]*_da .PdfObjectDictionary ;_cgaeg *PdfAcroForm ;_agabb Optimizer ;_cdaffd map[int ]crossReference ;_eagga int64 ;ObjNumOffset int ;_adfe bool ;_efce _da .XrefTable ;_cbfe int64 ;_badf int64 ;_cede map[_da .PdfObject ]int64 ;_eacb map[_da .PdfObject ]struct{};};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_abbaea *modelManager )GetPrimitiveFromModel (model PdfModel )_da .PdfObject {_bccb ,_fgbd :=_abbaea ._bcbbdg [model ];if !_fgbd {return nil ;};return _bccb ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dgeb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dgeb .GetNumComponents (){return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdfff ,_dgef :=_dgeb .TintTransform .Evaluate (vals );if _dgef !=nil {return nil ,_dgef ;};_dbae ,_dgef :=_dgeb .AlternateSpace .ColorFromFloats (_bdfff );if _dgef !=nil {return nil ,_dgef ;};return _dbae ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eedd :_da .MakeIndirectObject (_da .MakeDict ())};};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bcfab *PdfAppender )Write (w _af .Writer )error {if _bcfab ._gcef {return _dbf .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_agee :=NewPdfWriter ();_bgecf ,_fgabg :=_da .GetDict (_agee ._gdag );if !_fgabg {return _dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_bgae ,_fgabg :=_bgecf .Get ("\u004b\u0069\u0064\u0073").(*_da .PdfObjectArray );if !_fgabg {return _dbf .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_edb ,_fgabg :=_bgecf .Get ("\u0043\u006f\u0075n\u0074").(*_da .PdfObjectInteger );if !_fgabg {return _dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_cdfe :=_bcfab ._bceb ._baeg ;_efab :=_cdfe .GetTrailer ();if _efab ==nil {return _dbf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_adfc ,_fgabg :=_da .GetIndirect (_efab .Get ("\u0052\u006f\u006f\u0074"));if !_fgabg {return _dbf .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_cgec ,_fgabg :=_da .GetDict (_adfc );if !_fgabg {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_adfc ,*_efab );return _dbf .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_cgfg :=range _cgec .Keys (){if _agee ._dgbe .Get (_cgfg )==nil {_bgda :=_cgec .Get (_cgfg );_agee ._dgbe .Set (_cgfg ,_bgda );};};if _bcfab ._abbe !=nil {_agee ._dgbe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bcfab ._abbe .ToPdfObject ());_bcfab .updateObjectsDeep (_bcfab ._abbe .ToPdfObject (),nil );};_bcfab .addNewObject (_agee ._dgdec );_bcfab .addNewObject (_agee ._gcbe );_cggc :=false ;if len (_bcfab ._bceb .PageList )!=len (_bcfab ._gca ){_cggc =true ;}else {for _ffcd :=range _bcfab ._bceb .PageList {switch {case _bcfab ._gca [_ffcd ]==_bcfab ._bceb .PageList [_ffcd ]:case _bcfab ._gca [_ffcd ]==_bcfab .Reader .PageList [_ffcd ]:default:_cggc =true ;};if _cggc {break ;};};};if _cggc {_bcfab .updateObjectsDeep (_agee ._gdag ,nil );}else {_bcfab ._abeg [_agee ._gdag ]=struct{}{};};_agee ._gdag .ObjectNumber =_bcfab .Reader ._cgbdb .ObjectNumber ;_bcfab ._ebdd [_agee ._gdag ]=_bcfab .Reader ._cgbdb .ObjectNumber ;_edgf :=[]_da .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ecf :=range _bcfab ._gca {_bbbc :=_ecf .ToPdfObject ();*_edb =*_edb +1;if _aecae ,_bdbdb :=_bbbc .(*_da .PdfIndirectObject );_bdbdb &&_aecae .GetParser ()==_bcfab ._bceb ._baeg {_bgae .Append (&_aecae .PdfObjectReference );continue ;};if _ecdd ,_gabea :=_da .GetDict (_bbbc );_gabea {_ddga ,_dfea :=_ecdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_da .PdfIndirectObject );for _dfea {_bdd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ddga );_dcec ,_gfea :=_ddga .PdfObject .(*_da .PdfObjectDictionary );if !_gfea {return _dbf .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bcgb :=range _edgf {_bdd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bcgb );if _ecdd .Get (_bcgb )!=nil {_bdd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _debga :=_dcec .Get (_bcgb );_debga !=nil {_bdd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bcgb );_ecdd .Set (_bcgb ,_debga );};};_ddga ,_dfea =_dcec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_da .PdfIndirectObject );_bdd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dcec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ecdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agee ._gdag );};_bcfab .updateObjectsDeep (_bbbc ,nil );_bgae .Append (_bbbc );};if _ ,_dgfb :=_bcfab ._afag .Seek (0,_af .SeekStart );_dgfb !=nil {return _dgfb ;};_fdfc :=make (map[SignatureHandler ]_af .Writer );_bgge :=_da .MakeArray ();for _ ,_gcfg :=range _bcfab ._dbcb {if _cddd ,_bbbe :=_da .GetIndirect (_gcfg );_bbbe {if _aedb ,_bace :=_cddd .PdfObject .(*pdfSignDictionary );_bace {_gggf :=*_aedb ._bega ;var _ageg error ;_fdfc [_gggf ],_ageg =_gggf .NewDigest (_aedb ._aefa );if _ageg !=nil {return _ageg ;};_bgge .Append (_da .MakeInteger (0xfffff),_da .MakeInteger (0xfffff));};};};if _bgge .Len ()> 0{_bgge .Append (_da .MakeInteger (0xfffff),_da .MakeInteger (0xfffff));};for _ ,_gabc :=range _bcfab ._dbcb {if _agbb ,_facg :=_da .GetIndirect (_gabc );_facg {if _cgecg ,_acdc :=_agbb .PdfObject .(*pdfSignDictionary );_acdc {_cgecg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bgge );};};};_bfce :=len (_fdfc )> 0;var _ebc _af .Reader =_bcfab ._afag ;if _bfce {_dedf :=make ([]_af .Writer ,0,len (_fdfc ));for _ ,_bdfb :=range _fdfc {_dedf =append (_dedf ,_bdfb );};_ebc =_af .TeeReader (_bcfab ._afag ,_af .MultiWriter (_dedf ...));};_ccee ,_cagb :=_af .Copy (w ,_ebc );if _cagb !=nil {return _cagb ;};if len (_bcfab ._dbcb )==0{return nil ;};_agee ._eagga =_ccee ;_agee .ObjNumOffset =_bcfab ._egcd ;_agee ._adfe =true ;_agee ._efce =_bcfab ._bage ;_agee ._cbfe =_bcfab ._ggga ;_agee ._badf =_bcfab ._cegd ;_agee ._gfeec =_bcfab ._bceb .PdfVersion ().Minor ;_agee ._cede =_bcfab ._ebdd ;_gefgd :=_bcfab ._dce .GetXrefType ();if _gefgd !=nil {_gdab :=*_gefgd ==_da .XrefTypeObjectStream ;_agee ._abad =&_gdab ;};_agee ._fcabg =map[_da .PdfObject ]struct{}{};_agee ._bafa =[]_da .PdfObject {};for _ ,_gdaba :=range _bcfab ._dbcb {if _ ,_faec :=_bcfab ._abeg [_gdaba ];_faec {continue ;};_agee .addObject (_gdaba );};_agfg :=w ;if _bfce {_agfg =_baf .NewBuffer (nil );};if _bbbef :=_agee .Write (_agfg );_bbbef !=nil {return _bbbef ;};if _bfce {_cafea :=_agfg .(*_baf .Buffer ).Bytes ();_dfdg :=_da .MakeArray ();var _cbbg []*pdfSignDictionary ;var _begc int64 ;for _ ,_ffcdc :=range _agee ._bafa {if _gede ,_cfbg :=_da .GetIndirect (_ffcdc );_cfbg {if _gdcb ,_dabe :=_gede .PdfObject .(*pdfSignDictionary );_dabe {_cbbg =append (_cbbg ,_gdcb );_cafd :=_gdcb ._gdccc +int64 (_gdcb ._ggagf );_dfdg .Append (_da .MakeInteger (_begc ),_da .MakeInteger (_cafd -_begc ));_begc =_gdcb ._gdccc +int64 (_gdcb ._cecdd );};};};_dfdg .Append (_da .MakeInteger (_begc ),_da .MakeInteger (_ccee +int64 (len (_cafea ))-_begc ));_bfbf :=[]byte (_dfdg .WriteString ());for _ ,_gaad :=range _cbbg {_dgdb :=int (_gaad ._gdccc -_ccee );for _bcee :=_gaad ._cceef ;_bcee < _gaad ._gfec ;_bcee ++{_cafea [_dgdb +_bcee ]=' ';};_ffbb :=_cafea [_dgdb +_gaad ._cceef :_dgdb +_gaad ._gfec ];copy (_ffbb ,_bfbf );};var _bffa int ;for _ ,_dbbc :=range _cbbg {_aabd :=int (_dbbc ._gdccc -_ccee );_dccb :=_cafea [_bffa :_aabd +_dbbc ._ggagf ];_gecgc :=*_dbbc ._bega ;_fdfc [_gecgc ].Write (_dccb );_bffa =_aabd +_dbbc ._cecdd ;};for _ ,_bgdac :=range _cbbg {_fgec :=_cafea [_bffa :];_aagf :=*_bgdac ._bega ;_fdfc [_aagf ].Write (_fgec );};for _ ,_dafa :=range _cbbg {_afab :=int (_dafa ._gdccc -_ccee );_aggf :=*_dafa ._bega ;_deag :=_fdfc [_aggf ];if _aefe :=_aggf .Sign (_dafa ._aefa ,_deag );_aefe !=nil {return _aefe ;};_dafa ._aefa .ByteRange =_dfdg ;_becg :=[]byte (_dafa ._aefa .Contents .WriteString ());for _gcce :=_dafa ._cceef ;_gcce < _dafa ._gfec ;_gcce ++{_cafea [_afab +_gcce ]=' ';};for _eab :=_dafa ._ggagf ;_eab < _dafa ._cecdd ;_eab ++{_cafea [_afab +_eab ]=' ';};_afbb :=_cafea [_afab +_dafa ._cceef :_afab +_dafa ._gfec ];copy (_afbb ,_bfbf );_afbb =_cafea [_afab +_dafa ._ggagf :_afab +_dafa ._cecdd ];copy (_afbb ,_becg );};_bgeg :=_baf .NewBuffer (_cafea );_ ,_cagb =_af .Copy (w ,_bgeg );if _cagb !=nil {return _cagb ;};};_bcfab ._gcef =true ;return nil ;};func (_bffba *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bffba ._baeg .GetCrypter ()!=nil &&!_bffba ._baeg .IsAuthenticated (){return nil ,_bd .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_dbgfd :=_bffba ._edcc ;_bcac :=_dbgfd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bcac ==nil {return nil ,nil ;};_agbdg ,_ :=_da .GetIndirect (_bcac );_bcac =_da .TraceToDirectObject (_bcac );if _da .IsNullObject (_bcac ){_bdd .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_fcgc ,_dafg :=_da .GetDict (_bcac );if !_dafg {_bdd .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bcac );_bdd .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_bd .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bcac );};_bdd .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_bdd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bffba ._cdffd {_ggcdd :=_bffba .traverseObjectData (_fcgc );if _ggcdd !=nil {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_ggcdd );return nil ,_ggcdd ;};};_cege ,_dfedg :=_bffba .newPdfAcroFormFromDict (_agbdg ,_fcgc );if _dfedg !=nil {return nil ,_dfedg ;};return _cege ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;BitsPerFlag *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bgdgd *PdfColorspaceLab )DecodeArray ()[]float64 {_bebe :=[]float64 {0,100};if _bgdgd .Range !=nil &&len (_bgdgd .Range )==4{_bebe =append (_bebe ,_bgdgd .Range ...);}else {_bebe =append (_bebe ,-100,100,-100,100);};return _bebe ;};func _acfb (_cafdg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_cafdg }};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_egbea *PdfPage )GetContainingPdfObject ()_da .PdfObject {return _egbea ._bcce };func _bbddf (_bbdfe *PdfPage ){_dfebg :=_be .GetLicenseKey ();if _dfebg !=nil &&_dfebg .IsLicensed (){return ;};_ffbfd :=_da .PdfObjectName ("\u0055\u0046\u0031");if !_bbdfe .Resources .HasFontByName (_ffbfd ){_bbdfe .Resources .SetFontByName (_ffbfd ,DefaultFont ().ToPdfObject ());};var _gfaga []string ;_gfaga =append (_gfaga ,"\u0071");_gfaga =append (_gfaga ,"\u0042\u0054");_gfaga =append (_gfaga ,_bd .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ffbfd .String ()));_gfaga =append (_gfaga ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_gfaga =append (_gfaga ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_ffag :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_gfaga =append (_gfaga ,_bd .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_ffag ));_gfaga =append (_gfaga ,"\u0045\u0054");_gfaga =append (_gfaga ,"\u0051");_dedab :=_dg .Join (_gfaga ,"\u000a");_bbdfe .AddContentStreamByString (_dedab );_bbdfe .ToPdfObject ();};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_aabe *PdfShadingPattern )ToPdfObject ()_da .PdfObject {_aabe .PdfPattern .ToPdfObject ();_cgffg :=_aabe .getDict ();if _aabe .Shading !=nil {_cgffg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_aabe .Shading .ToPdfObject ());};if _aabe .Matrix !=nil {_cgffg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aabe .Matrix );};if _aabe .ExtGState !=nil {_cgffg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_aabe .ExtGState );};return _aabe ._febc ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _da .PdfObjectArray )(*PdfRectangle ,error ){_efcab :=PdfRectangle {};if arr .Len ()!=4{return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _gbcgf error ;_efcab .Llx ,_gbcgf =_da .GetNumberAsFloat (arr .Get (0));if _gbcgf !=nil {return nil ,_gbcgf ;};_efcab .Lly ,_gbcgf =_da .GetNumberAsFloat (arr .Get (1));if _gbcgf !=nil {return nil ,_gbcgf ;};_efcab .Urx ,_gbcgf =_da .GetNumberAsFloat (arr .Get (2));if _gbcgf !=nil {return nil ,_gbcgf ;};_efcab .Ury ,_gbcgf =_da .GetNumberAsFloat (arr .Get (3));if _gbcgf !=nil {return nil ,_gbcgf ;};return &_efcab ,nil ;};

// Val returns the value of the color.
func (_ageb *PdfColorCalGray )Val ()float64 {return float64 (*_ageb )};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ffac *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ffac .MediaBox !=nil {return _ffac .MediaBox ,nil ;};_ccgaf :=_ffac .Parent ;for _ccgaf !=nil {_cceea ,_eacfc :=_da .GetDict (_ccgaf );if !_eacfc {return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _ddbaa :=_cceea .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ddbaa !=nil {_feaad ,_dgbg :=_da .GetArray (_ddbaa );if !_dgbg {return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cbfa ,_dffb :=NewPdfRectangle (*_feaad );if _dffb !=nil {return nil ,_dffb ;};return _cbfa ,nil ;};_ccgaf =_cceea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_dbf .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bdgf *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_eebge :=NewPdfOutlineItem ();_eebge .Title =_da .MakeEncodedString (_bdgf .Title ,true );_eebge .Dest =_bdgf .Dest .ToPdfObject ();var _aageb []*PdfOutlineItem ;var _bdgef int64 ;var _cccb *PdfOutlineItem ;for _ ,_fedea :=range _bdgf .Entries {_fbcge ,_dcgb :=_fedea .ToPdfOutlineItem ();_fbcge .Parent =&_eebge .PdfOutlineTreeNode ;if _cccb !=nil {_cccb .Next =&_fbcge .PdfOutlineTreeNode ;_fbcge .Prev =&_cccb .PdfOutlineTreeNode ;};_aageb =append (_aageb ,_fbcge );_bdgef +=_dcgb ;_cccb =_fbcge ;};_gcgge :=len (_aageb );_bdgef +=int64 (_gcgge );if _gcgge > 0{_eebge .First =&_aageb [0].PdfOutlineTreeNode ;_eebge .Last =&_aageb [_gcgge -1].PdfOutlineTreeNode ;_eebge .Count =&_bdgef ;};return _eebge ,_bdgef ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_bbgd FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_bbgd .Mask ()|fl .Mask ())};

// ToPdfObject implements interface PdfModel.
func (_eea *PdfActionRendition )ToPdfObject ()_da .PdfObject {_eea .PdfAction .ToPdfObject ();_eggg :=_eea ._fca ;_eggf :=_eggg .PdfObject .(*_da .PdfObjectDictionary );_eggf .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeRendition )));_eggf .SetIfNotNil ("\u0052",_eea .R );_eggf .SetIfNotNil ("\u0041\u004e",_eea .AN );_eggf .SetIfNotNil ("\u004f\u0050",_eea .OP );_eggf .SetIfNotNil ("\u004a\u0053",_eea .JS );return _eggg ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ffcf ,_dgbf :=_bgb .NewStdFontByName (HelveticaName );if !_dgbf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_fefac :=_fbbba (_ffcf );return &PdfFont {_fdbf :&_fefac };};

// GetOCProperties returns the optional content properties PdfObject.
func (_ggdec *PdfReader )GetOCProperties ()(_da .PdfObject ,error ){_dccae :=_ggdec ._edcc ;_gbbaa :=_dccae .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gbbaa =_da .ResolveReference (_gbbaa );if !_ggdec ._cdffd {_bgbd :=_ggdec .traverseObjectData (_gbbaa );if _bgbd !=nil {return nil ,_bgbd ;};};return _gbbaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbe *PdfActionSound )ToPdfObject ()_da .PdfObject {_bbe .PdfAction .ToPdfObject ();_egd :=_bbe ._fca ;_gee :=_egd .PdfObject .(*_da .PdfObjectDictionary );_gee .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeSound )));_gee .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bbe .Sound );_gee .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bbe .Volume );_gee .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bbe .Synchronous );_gee .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bbe .Repeat );_gee .SetIfNotNil ("\u004d\u0069\u0078",_bbe .Mix );return _egd ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ffd :=NewPdfAnnotation ();_gfe :=&PdfAnnotationCaret {};_gfe .PdfAnnotation =_ffd ;_gfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffd .SetContext (_gfe );return _gfe ;};func _ddeeb (_bfdgc string )map[string ]string {_fcbbeb :=_eecfa .Split (_bfdgc ,-1);_eeeage :=map[string ]string {};for _ ,_dcabc :=range _fcbbeb {_gcdbg :=_cefaf .FindStringSubmatch (_dcabc );if _gcdbg ==nil {continue ;};_ccdfd ,_gfgcc :=_gcdbg [1],_gcdbg [2];_eeeage [_ccdfd ]=_gfgcc ;};return _eeeage ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cdbf *PdfColorCalRGB )GetNumComponents ()int {return 3};func _cbd (_aefb _da .PdfObject )(*PdfColorspaceCalGray ,error ){_fgc :=NewPdfColorspaceCalGray ();if _fbe ,_babe :=_aefb .(*_da .PdfIndirectObject );_babe {_fgc ._adbc =_fbe ;};_aefb =_da .TraceToDirectObject (_aefb );_cgfd ,_fadd :=_aefb .(*_da .PdfObjectArray );if !_fadd {return nil ,_bd .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cgfd .Len ()!=2{return nil ,_bd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_aefb =_da .TraceToDirectObject (_cgfd .Get (0));_cadg ,_fadd :=_aefb .(*_da .PdfObjectName );if !_fadd {return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_cadg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_bd .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aefb =_da .TraceToDirectObject (_cgfd .Get (1));_fedg ,_fadd :=_aefb .(*_da .PdfObjectDictionary );if !_fadd {return nil ,_bd .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_aefb =_fedg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aefb =_da .TraceToDirectObject (_aefb );_ebf ,_fadd :=_aefb .(*_da .PdfObjectArray );if !_fadd {return nil ,_bd .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _ebf .Len ()!=3{return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dad ,_gfdb :=_ebf .GetAsFloat64Slice ();if _gfdb !=nil {return nil ,_gfdb ;};_fgc .WhitePoint =_dad ;_aefb =_fedg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aefb !=nil {_aefb =_da .TraceToDirectObject (_aefb );_edfc ,_aedgc :=_aefb .(*_da .PdfObjectArray );if !_aedgc {return nil ,_bd .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _edfc .Len ()!=3{return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dcca ,_acgd :=_edfc .GetAsFloat64Slice ();if _acgd !=nil {return nil ,_acgd ;};_fgc .BlackPoint =_dcca ;};_aefb =_fedg .Get ("\u0047\u0061\u006dm\u0061");if _aefb !=nil {_aefb =_da .TraceToDirectObject (_aefb );_fgcf ,_fgff :=_da .GetNumberAsFloat (_aefb );if _fgff !=nil {return nil ,_bd .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fgc .Gamma =_fgcf ;};return _fgc ,nil ;};func (_cec *PdfReader )newPdfActionFromIndirectObject (_adgc *_da .PdfIndirectObject )(*PdfAction ,error ){_eee ,_fgbc :=_adgc .PdfObject .(*_da .PdfObjectDictionary );if !_fgbc {return nil ,_bd .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_cec ._ccfcg .GetModelFromPrimitive (_eee );model !=nil {_bbb ,_bbeb :=model .(*PdfAction );if !_bbeb {return nil ,_bd .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _bbb ,nil ;};_aff :=&PdfAction {};_aff ._fca =_adgc ;_cec ._ccfcg .Register (_eee ,_aff );if _dcg :=_eee .Get ("\u0054\u0079\u0070\u0065");_dcg !=nil {_bea ,_ab :=_dcg .(*_da .PdfObjectName );if !_ab {_bdd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dcg );}else {if *_bea !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bdd .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bea );};_aff .Type =_bea ;};};if _egda :=_eee .Get ("\u004e\u0065\u0078\u0074");_egda !=nil {_aff .Next =_egda ;};if _afgf :=_eee .Get ("\u0053");_afgf !=nil {_aff .S =_afgf ;};_bcd ,_gag :=_aff .S .(*_da .PdfObjectName );if !_gag {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aff .S );return nil ,_bd .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aff .S );};_aeba :=PdfActionType (_bcd .String ());switch _aeba {case ActionTypeGoTo :_cd ,_fge :=_cec .newPdfActionGotoFromDict (_eee );if _fge !=nil {return nil ,_fge ;};_cd .PdfAction =_aff ;_aff ._cg =_cd ;return _aff ,nil ;case ActionTypeGoToR :_fd ,_gea :=_cec .newPdfActionGotoRFromDict (_eee );if _gea !=nil {return nil ,_gea ;};_fd .PdfAction =_aff ;_aff ._cg =_fd ;return _aff ,nil ;case ActionTypeGoToE :_bgg ,_caa :=_cec .newPdfActionGotoEFromDict (_eee );if _caa !=nil {return nil ,_caa ;};_bgg .PdfAction =_aff ;_aff ._cg =_bgg ;return _aff ,nil ;case ActionTypeLaunch :_cbe ,_gece :=_cec .newPdfActionLaunchFromDict (_eee );if _gece !=nil {return nil ,_gece ;};_cbe .PdfAction =_aff ;_aff ._cg =_cbe ;return _aff ,nil ;case ActionTypeThread :_edd ,_fdf :=_cec .newPdfActionThreadFromDict (_eee );if _fdf !=nil {return nil ,_fdf ;};_edd .PdfAction =_aff ;_aff ._cg =_edd ;return _aff ,nil ;case ActionTypeURI :_bcgg ,_abd :=_cec .newPdfActionURIFromDict (_eee );if _abd !=nil {return nil ,_abd ;};_bcgg .PdfAction =_aff ;_aff ._cg =_bcgg ;return _aff ,nil ;case ActionTypeSound :_bdbg ,_aebaf :=_cec .newPdfActionSoundFromDict (_eee );if _aebaf !=nil {return nil ,_aebaf ;};_bdbg .PdfAction =_aff ;_aff ._cg =_bdbg ;return _aff ,nil ;case ActionTypeMovie :_bdf ,_agb :=_cec .newPdfActionMovieFromDict (_eee );if _agb !=nil {return nil ,_agb ;};_bdf .PdfAction =_aff ;_aff ._cg =_bdf ;return _aff ,nil ;case ActionTypeHide :_gda ,_cgd :=_cec .newPdfActionHideFromDict (_eee );if _cgd !=nil {return nil ,_cgd ;};_gda .PdfAction =_aff ;_aff ._cg =_gda ;return _aff ,nil ;case ActionTypeNamed :_efa ,_ceg :=_cec .newPdfActionNamedFromDict (_eee );if _ceg !=nil {return nil ,_ceg ;};_efa .PdfAction =_aff ;_aff ._cg =_efa ;return _aff ,nil ;case ActionTypeSubmitForm :_fac ,_dgb :=_cec .newPdfActionSubmitFormFromDict (_eee );if _dgb !=nil {return nil ,_dgb ;};_fac .PdfAction =_aff ;_aff ._cg =_fac ;return _aff ,nil ;case ActionTypeResetForm :_aeg ,_bcge :=_cec .newPdfActionResetFormFromDict (_eee );if _bcge !=nil {return nil ,_bcge ;};_aeg .PdfAction =_aff ;_aff ._cg =_aeg ;return _aff ,nil ;case ActionTypeImportData :_adb ,_ffe :=_cec .newPdfActionImportDataFromDict (_eee );if _ffe !=nil {return nil ,_ffe ;};_adb .PdfAction =_aff ;_aff ._cg =_adb ;return _aff ,nil ;case ActionTypeSetOCGState :_dge ,_acb :=_cec .newPdfActionSetOCGStateFromDict (_eee );if _acb !=nil {return nil ,_acb ;};_dge .PdfAction =_aff ;_aff ._cg =_dge ;return _aff ,nil ;case ActionTypeRendition :_add ,_ffa :=_cec .newPdfActionRenditionFromDict (_eee );if _ffa !=nil {return nil ,_ffa ;};_add .PdfAction =_aff ;_aff ._cg =_add ;return _aff ,nil ;case ActionTypeTrans :_aed ,_bf :=_cec .newPdfActionTransFromDict (_eee );if _bf !=nil {return nil ,_bf ;};_aed .PdfAction =_aff ;_aff ._cg =_aed ;return _aff ,nil ;case ActionTypeGoTo3DView :_gcc ,_cfc :=_cec .newPdfActionGoTo3DViewFromDict (_eee );if _cfc !=nil {return nil ,_cfc ;};_gcc .PdfAction =_aff ;_aff ._cg =_gcc ;return _aff ,nil ;case ActionTypeJavaScript :_dafc ,_gaf :=_cec .newPdfActionJavaScriptFromDict (_eee );if _gaf !=nil {return nil ,_gaf ;};_dafc .PdfAction =_aff ;_aff ._cg =_dafc ;return _aff ,nil ;};_bdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_aeba );return nil ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dccg :=&PdfAppender {_afag :reader ._aaccg ,Reader :reader ,_dce :reader ._baeg ,_fdc :reader ._gebbg };_afdeg ,_afef :=_dccg ._afag .Seek (0,_af .SeekEnd );if _afef !=nil {return nil ,_afef ;};_dccg ._cegd =_afdeg ;if _ ,_afef =_dccg ._afag .Seek (0,_af .SeekStart );_afef !=nil {return nil ,_afef ;};_dccg ._bceb ,_afef =NewPdfReader (_dccg ._afag );if _afef !=nil {return nil ,_afef ;};for _ ,_afc :=range _dccg .Reader .GetObjectNums (){if _dccg ._egcd < _afc {_dccg ._egcd =_afc ;};};_dccg ._bage =_dccg ._dce .GetXrefTable ();_dccg ._ggga =_dccg ._dce .GetXrefOffset ();_dccg ._bgbc =make (map[_da .PdfObject ]struct{});for _ ,_dfbg :=range _dccg ._bceb .PageList {_dccg ._gca =append (_dccg ._gca ,_dfbg );};_dccg ._ebdd =make (map[_da .PdfObject ]int64 );_dccg ._abeg =make (map[_da .PdfObject ]struct{});_dccg ._abbe =_dccg ._bceb .AcroForm ;return _dccg ,nil ;};

// R returns the value of the red component of the color.
func (_abec *PdfColorDeviceRGB )R ()float64 {return float64 (_abec [0])};

// ToPdfObject implements interface PdfModel.
func (_fbae *PdfAnnotationHighlight )ToPdfObject ()_da .PdfObject {_fbae .PdfAnnotation .ToPdfObject ();_bcged :=_fbae ._dda ;_gfc :=_bcged .PdfObject .(*_da .PdfObjectDictionary );_fbae .PdfAnnotationMarkup .appendToPdfDictionary (_gfc );_gfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_gfc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fbae .QuadPoints );return _bcged ;};func (_gdgcg *PdfReader )loadAnnotations (_daadd _da .PdfObject )([]*PdfAnnotation ,error ){_gfdbe ,_egcfee :=_da .GetArray (_daadd );if !_egcfee {return nil ,_bd .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _bdeag []*PdfAnnotation ;for _ ,_efdbb :=range _gfdbe .Elements (){_efdbb =_da .ResolveReference (_efdbb );if _ ,_bdbf :=_efdbb .(*_da .PdfObjectNull );_bdbf {continue ;};_fece ,_gfba :=_efdbb .(*_da .PdfObjectDictionary );_gbadb ,_fbca :=_efdbb .(*_da .PdfIndirectObject );if _gfba {_gbadb =&_da .PdfIndirectObject {};_gbadb .PdfObject =_fece ;}else {if !_fbca {return nil ,_bd .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_gcda ,_abgca :=_gdgcg .newPdfAnnotationFromIndirectObject (_gbadb );if _abgca !=nil {return nil ,_abgca ;};switch _bgbge :=_gcda .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_fgadb :=range _gdgcg .AcroForm .AllFields (){if _fgadb ._dade ==_bgbge .Parent {_bgbge ._gbec =_fgadb ;break ;};};};if _gcda !=nil {_bdeag =append (_bdeag ,_gcda );};};return _bdeag ,nil ;};

// ToInteger convert to an integer format.
func (_agdda *PdfColorLab )ToInteger (bits int )[3]uint32 {_bcgba :=_ec .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bcgba *_agdda .L ()),uint32 (_bcgba *_agdda .A ()),uint32 (_bcgba *_agdda .B ())};};

// String returns a string describing the font descriptor.
func (_gedd *PdfFontDescriptor )String ()string {var _eeef []string ;if _gedd .FontName !=nil {_eeef =append (_eeef ,_gedd .FontName .String ());};if _gedd .FontFamily !=nil {_eeef =append (_eeef ,_gedd .FontFamily .String ());};if _gedd .fontFile !=nil {_eeef =append (_eeef ,_gedd .fontFile .String ());};if _gedd ._eecgd !=nil {_eeef =append (_eeef ,_gedd ._eecgd .String ());};_eeef =append (_eeef ,_bd .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gedd .FontFile3 !=nil ));return _bd .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_dg .Join (_eeef ,"\u002c\u0020"));};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _da .PdfObject )(*PdfFilespec ,error ){_dcba :=&PdfFilespec {};var _gbeb *_da .PdfObjectDictionary ;if _aedc ,_dgdf :=_da .GetIndirect (obj );_dgdf {_dcba ._ecaf =_aedc ;_ceff ,_ecac :=_da .GetDict (_aedc .PdfObject );if !_ecac {_bdd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_da .ErrTypeError ;};_gbeb =_ceff ;}else if _bgfe ,_addd :=_da .GetDict (obj );_addd {_dcba ._ecaf =_bgfe ;_gbeb =_bgfe ;}else {_bdd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_da .ErrTypeError ;};if _gbeb ==nil {_bdd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_dbf .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fgbgb :=_gbeb .Get ("\u0054\u0079\u0070\u0065");_fgbgb !=nil {_bbde ,_baffc :=_fgbgb .(*_da .PdfObjectName );if !_baffc {_bdd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fgbgb );}else {if *_bbde !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bdd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bbde );};};};if _bdbdg :=_gbeb .Get ("\u0046\u0053");_bdbdg !=nil {_dcba .FS =_bdbdg ;};if _ggcg :=_gbeb .Get ("\u0046");_ggcg !=nil {_dcba .F =_ggcg ;};if _abde :=_gbeb .Get ("\u0055\u0046");_abde !=nil {_dcba .UF =_abde ;};if _ddgc :=_gbeb .Get ("\u0044\u004f\u0053");_ddgc !=nil {_dcba .DOS =_ddgc ;};if _geadg :=_gbeb .Get ("\u004d\u0061\u0063");_geadg !=nil {_dcba .Mac =_geadg ;};if _dggab :=_gbeb .Get ("\u0055\u006e\u0069\u0078");_dggab !=nil {_dcba .Unix =_dggab ;};if _gbeff :=_gbeb .Get ("\u0049\u0044");_gbeff !=nil {_dcba .ID =_gbeff ;};if _gedc :=_gbeb .Get ("\u0056");_gedc !=nil {_dcba .V =_gedc ;};if _ddaba :=_gbeb .Get ("\u0045\u0046");_ddaba !=nil {_dcba .EF =_ddaba ;};if _gbdd :=_gbeb .Get ("\u0052\u0046");_gbdd !=nil {_dcba .RF =_gbdd ;};if _dbagf :=_gbeb .Get ("\u0044\u0065\u0073\u0063");_dbagf !=nil {_dcba .Desc =_dbagf ;};if _defc :=_gbeb .Get ("\u0043\u0049");_defc !=nil {_dcba .CI =_defc ;};return _dcba ,nil ;};func (_decgg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_ebada *PdfPageResources )HasXObjectByName (keyName _da .PdfObjectName )bool {_cgba ,_ :=_ebada .GetXObjectByName (keyName );return _cgba !=nil ;};

// SetBorderWidth sets the style's border width.
func (_cfgb *PdfBorderStyle )SetBorderWidth (width float64 ){_cfgb .W =&width };func _befg (_dgff *_da .PdfObjectDictionary )(*PdfShadingType5 ,error ){_gaac :=PdfShadingType5 {};_aefga :=_dgff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aefga ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_deaf ,_bebb :=_aefga .(*_da .PdfObjectInteger );if !_bebb {_bdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aefga );return nil ,_da .ErrTypeError ;};_gaac .BitsPerCoordinate =_deaf ;_aefga =_dgff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aefga ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_deaf ,_bebb =_aefga .(*_da .PdfObjectInteger );if !_bebb {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aefga );return nil ,_da .ErrTypeError ;};_gaac .BitsPerComponent =_deaf ;_aefga =_dgff .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _aefga ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_deaf ,_bebb =_aefga .(*_da .PdfObjectInteger );if !_bebb {_bdd .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aefga );return nil ,_da .ErrTypeError ;};_gaac .VerticesPerRow =_deaf ;_aefga =_dgff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aefga ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ecccd ,_bebb :=_aefga .(*_da .PdfObjectArray );if !_bebb {_bdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aefga );return nil ,_da .ErrTypeError ;};_gaac .Decode =_ecccd ;if _edgbg :=_dgff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_edgbg !=nil {_gaac .Function =[]PdfFunction {};if _abbc ,_efeee :=_edgbg .(*_da .PdfObjectArray );_efeee {for _ ,_bfbba :=range _abbc .Elements (){_fgefd ,_bfgbag :=_ffdgg (_bfbba );if _bfgbag !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfgbag );return nil ,_bfgbag ;};_gaac .Function =append (_gaac .Function ,_fgefd );};}else {_abac ,_dggfa :=_ffdgg (_edgbg );if _dggfa !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dggfa );return nil ,_dggfa ;};_gaac .Function =append (_gaac .Function ,_abac );};};return &_gaac ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ccfea pdfFontType0 )GetCharMetrics (code _ceb .CharCode )(_bgb .CharMetrics ,bool ){if _ccfea .DescendantFont ==nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ccfea );return _bgb .CharMetrics {},false ;};return _ccfea .DescendantFont .GetCharMetrics (code );};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_da .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_dbed *_da .PdfIndirectObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gdbfd *OutlineItem )Insert (index uint ,item *OutlineItem ){_debbe :=uint (len (_gdbfd .Entries ));if index > _debbe {index =_debbe ;};_gdbfd .Entries =append (_gdbfd .Entries [:index ],append ([]*OutlineItem {item },_gdbfd .Entries [index :]...)...);};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_aea *PdfFieldButton )ToPdfObject ()_da .PdfObject {_aea .PdfField .ToPdfObject ();_deabe :=_aea ._dade ;_bgaed :=_deabe .PdfObject .(*_da .PdfObjectDictionary );_bgaed .Set ("\u0046\u0054",_da .MakeName ("\u0042\u0074\u006e"));if _aea .Opt !=nil {_bgaed .Set ("\u004f\u0070\u0074",_aea .Opt );};return _deabe ;};func _fcdfgb (_bgfec _da .PdfObject )(*fontFile ,error ){_bdd .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bgfec );_efdcb :=&fontFile {};_bgfec =_da .TraceToDirectObject (_bgfec );_bggge ,_cfeda :=_bgfec .(*_da .PdfObjectStream );if !_cfeda {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bgfec );return nil ,_da .ErrTypeError ;};_fcbbe :=_bggge .PdfObjectDictionary ;_cfedg ,_defa :=_da .DecodeStream (_bggge );if _defa !=nil {return nil ,_defa ;};_bbfe ,_cfeda :=_da .GetNameVal (_fcbbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cfeda {_efdcb ._dcdee =_bbfe ;if _bbfe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bdd .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_ggda ,_ :=_da .GetIntVal (_fcbbe .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fgaeb ,_ :=_da .GetIntVal (_fcbbe .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ggda > len (_cfedg ){_ggda =len (_cfedg );};if _ggda +_fgaeb > len (_cfedg ){_fgaeb =len (_cfedg )-_ggda ;};_ddge :=_cfedg [:_ggda ];var _fdeec []byte ;if _fgaeb > 0{_fdeec =_cfedg [_ggda :_ggda +_fgaeb ];};if _ggda > 0&&_fgaeb > 0{_gbbd :=_efdcb .loadFromSegments (_ddge ,_fdeec );if _gbbd !=nil {return nil ,_gbbd ;};};return _efdcb ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_bggg :=NewPdfAnnotation ();_gdg :=&PdfAnnotationLine {};_gdg .PdfAnnotation =_bggg ;_gdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bggg .SetContext (_gdg );return _gdg ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _da .PdfObject ;FontFamily _da .PdfObject ;FontStretch _da .PdfObject ;FontWeight _da .PdfObject ;Flags _da .PdfObject ;FontBBox _da .PdfObject ;ItalicAngle _da .PdfObject ;Ascent _da .PdfObject ;Descent _da .PdfObject ;Leading _da .PdfObject ;CapHeight _da .PdfObject ;XHeight _da .PdfObject ;StemV _da .PdfObject ;StemH _da .PdfObject ;AvgWidth _da .PdfObject ;MaxWidth _da .PdfObject ;MissingWidth _da .PdfObject ;FontFile _da .PdfObject ;FontFile2 _da .PdfObject ;FontFile3 _da .PdfObject ;CharSet _da .PdfObject ;_fadg int ;_dadb float64 ;*fontFile ;_eecgd *_bgb .TtfType ;

// Additional entries for CIDFonts
Style _da .PdfObject ;Lang _da .PdfObject ;FD _da .PdfObject ;CIDSet _da .PdfObject ;_ggfc *_da .PdfIndirectObject ;};

// AddWatermarkImage adds a watermark to the page.
func (_adcc *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_adddb ,_caaa :=_adcc .GetMediaBox ();if _caaa !=nil {return _caaa ;};_ceeee :=_adddb .Urx -_adddb .Llx ;_bbdc :=_adddb .Ury -_adddb .Lly ;_afdec :=float64 (*ximg .Width );_daebc :=(float64 (_ceeee )-float64 (_afdec ))/2;if opt .FitToWidth {_afdec =_ceeee ;_daebc =0;};_dfcfb :=_bbdc ;_eaaf :=float64 (0);if opt .PreserveAspectRatio {_dfcfb =_afdec *float64 (*ximg .Height )/float64 (*ximg .Width );_eaaf =(_bbdc -_dfcfb )/2;};if _adcc .Resources ==nil {_adcc .Resources =NewPdfPageResources ();};_aeee :=0;_cdcb :=_da .PdfObjectName (_bd .Sprintf ("\u0049\u006d\u0077%\u0064",_aeee ));for _adcc .Resources .HasXObjectByName (_cdcb ){_aeee ++;_cdcb =_da .PdfObjectName (_bd .Sprintf ("\u0049\u006d\u0077%\u0064",_aeee ));};_caaa =_adcc .AddImageResource (_cdcb ,ximg );if _caaa !=nil {return _caaa ;};_aeee =0;_ebcbe :=_da .PdfObjectName (_bd .Sprintf ("\u0047\u0053\u0025\u0064",_aeee ));for _adcc .HasExtGState (_ebcbe ){_aeee ++;_ebcbe =_da .PdfObjectName (_bd .Sprintf ("\u0047\u0053\u0025\u0064",_aeee ));};_gebac :=_da .MakeDict ();_gebac .Set ("\u0042\u004d",_da .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gebac .Set ("\u0043\u0041",_da .MakeFloat (opt .Alpha ));_gebac .Set ("\u0063\u0061",_da .MakeFloat (opt .Alpha ));_caaa =_adcc .AddExtGState (_ebcbe ,_gebac );if _caaa !=nil {return _caaa ;};_acbe :=_bd .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ebcbe ,_afdec ,_dfcfb ,_daebc ,_eaaf ,_cdcb );_adcc .AddContentStreamByString (_acbe );return nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fbf :=NewPdfAction ();_fa :=&PdfActionGoTo3DView {};_fa .PdfAction =_fbf ;_fbf .SetContext (_fa );return _fa ;};func _bggfe (_cbbcf _da .PdfObject ,_ebggb *fontCommon )(*_ga .CMap ,error ){_gcge ,_dggc :=_da .GetStream (_cbbcf );if !_dggc {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_cbbcf );return nil ,_da .ErrTypeError ;};_fceg ,_agac :=_da .DecodeStream (_gcge );if _agac !=nil {return nil ,_agac ;};_abded ,_agac :=_ga .LoadCmapFromData (_fceg ,!_ebggb .isCIDFont ());if _agac !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_gcge .ObjectNumber ,_agac );};return _abded ,_agac ;};func _fdbg (_defgc []byte )[]byte {const _ddfbcd =52845;const _feagb =22719;_ecfdc :=55665;for _ ,_bffeg :=range _defgc [:4]{_ecfdc =(int (_bffeg )+_ecfdc )*_ddfbcd +_feagb ;};_affa :=make ([]byte ,len (_defgc )-4);for _dcfcb ,_gcfge :=range _defgc [4:]{_affa [_dcfcb ]=byte (int (_gcfge )^_ecfdc >>8);_ecfdc =(int (_gcfge )+_ecfdc )*_ddfbcd +_feagb ;};return _affa ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bceeg *PdfFilespec )GetContainingPdfObject ()_da .PdfObject {return _bceeg ._ecaf };

// SetForms sets the Acroform for a PDF file.
func (_eaaaf *PdfWriter )SetForms (form *PdfAcroForm )error {_eaaaf ._cgaeg =form ;return nil };

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_cfbge interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_faccd *PdfWriter )SetNamedDestinations (names _da .PdfObject )error {if names ==nil {return nil ;};_bdd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_faccd ._dgbe .Set ("\u004e\u0061\u006de\u0073",names );return _faccd .addObjects (names );};

// SetAction sets the PDF action for the annotation link.
func (_efaa *PdfAnnotationLink )SetAction (action *PdfAction ){_efaa ._eba =action ;if action ==nil {_efaa .A =nil ;};};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_daag :=map[rune ]int {};for _ ,_efb :=range text {_daag [_efb ]++;};return _daag ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ddefb :=PdfPage {};_ddefb ._decgdc =_da .MakeDict ();_ddefb .Resources =NewPdfPageResources ();_ebdcd :=_da .PdfIndirectObject {};_ebdcd .PdfObject =_ddefb ._decgdc ;_ddefb ._bcce =&_ebdcd ;return &_ddefb ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_abeca *PdfWriter )SetPageLabels (pageLabels _da .PdfObject )error {if pageLabels ==nil {return nil ;};_bdd .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_abeca ._dgbe .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _abeca .addObjects (pageLabels );};func _efcg (_acgfb _da .PdfObject )(string ,error ){_acgfb =_da .TraceToDirectObject (_acgfb );switch _fbdfd :=_acgfb .(type ){case *_da .PdfObjectString :return _fbdfd .Str (),nil ;case *_da .PdfObjectStream :_bege ,_accf :=_da .DecodeStream (_fbdfd );if _accf !=nil {return "",_accf ;};return string (_bege ),nil ;};return "",_bd .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_acgfb );};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_eaegf *PdfReader )Decrypt (password []byte )(bool ,error ){_cefad ,_dfgfd :=_eaegf ._baeg .Decrypt (password );if _dfgfd !=nil {return false ,_dfgfd ;};if !_cefad {return false ,nil ;};_dfgfd =_eaegf .loadStructure ();if _dfgfd !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_dfgfd );return false ,_dfgfd ;};return true ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_caca *PdfPageResources )HasExtGState (keyName _da .PdfObjectName )bool {_ ,_dgfeb :=_caca .GetFontByName (keyName );return _dgfeb ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_abgf *PdfFontDescriptor )ToPdfObject ()_da .PdfObject {_cgff :=_da .MakeDict ();if _abgf ._ggfc ==nil {_abgf ._ggfc =&_da .PdfIndirectObject {};};_abgf ._ggfc .PdfObject =_cgff ;_cgff .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _abgf .FontName !=nil {_cgff .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_abgf .FontName );};if _abgf .FontFamily !=nil {_cgff .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_abgf .FontFamily );};if _abgf .FontStretch !=nil {_cgff .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_abgf .FontStretch );};if _abgf .FontWeight !=nil {_cgff .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_abgf .FontWeight );};if _abgf .Flags !=nil {_cgff .Set ("\u0046\u006c\u0061g\u0073",_abgf .Flags );};if _abgf .FontBBox !=nil {_cgff .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_abgf .FontBBox );};if _abgf .ItalicAngle !=nil {_cgff .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_abgf .ItalicAngle );};if _abgf .Ascent !=nil {_cgff .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_abgf .Ascent );};if _abgf .Descent !=nil {_cgff .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_abgf .Descent );};if _abgf .Leading !=nil {_cgff .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_abgf .Leading );};if _abgf .CapHeight !=nil {_cgff .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_abgf .CapHeight );};if _abgf .XHeight !=nil {_cgff .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_abgf .XHeight );};if _abgf .StemV !=nil {_cgff .Set ("\u0053\u0074\u0065m\u0056",_abgf .StemV );};if _abgf .StemH !=nil {_cgff .Set ("\u0053\u0074\u0065m\u0048",_abgf .StemH );};if _abgf .AvgWidth !=nil {_cgff .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_abgf .AvgWidth );};if _abgf .MaxWidth !=nil {_cgff .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_abgf .MaxWidth );};if _abgf .MissingWidth !=nil {_cgff .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_abgf .MissingWidth );};if _abgf .FontFile !=nil {_cgff .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_abgf .FontFile );};if _abgf .FontFile2 !=nil {_cgff .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_abgf .FontFile2 );};if _abgf .FontFile3 !=nil {_cgff .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_abgf .FontFile3 );};if _abgf .CharSet !=nil {_cgff .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_abgf .CharSet );};if _abgf .Style !=nil {_cgff .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_abgf .FontName );};if _abgf .Lang !=nil {_cgff .Set ("\u004c\u0061\u006e\u0067",_abgf .Lang );};if _abgf .FD !=nil {_cgff .Set ("\u0046\u0044",_abgf .FD );};if _abgf .CIDSet !=nil {_cgff .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_abgf .CIDSet );};return _abgf ._ggfc ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_fb *PdfAction )GetContext ()PdfModel {if _fb ==nil {return nil ;};return _fb ._cg ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};func (_ebgg *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_gcbd *PdfFont )ToPdfObject ()_da .PdfObject {if _gcbd ._fdbf ==nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _da .MakeNull ();};return _gcbd ._fdbf .ToPdfObject ();};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_ed *PdfActionLaunch )ToPdfObject ()_da .PdfObject {_ed .PdfAction .ToPdfObject ();_ggge :=_ed ._fca ;_fgb :=_ggge .PdfObject .(*_da .PdfObjectDictionary );_fgb .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeLaunch )));if _ed .F !=nil {_fgb .Set ("\u0046",_ed .F .ToPdfObject ());};_fgb .SetIfNotNil ("\u0057\u0069\u006e",_ed .Win );_fgb .SetIfNotNil ("\u004d\u0061\u0063",_ed .Mac );_fgb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ed .Unix );_fgb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ed .NewWindow );return _ggge ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_addb *PdfReader )newPdfActionSubmitFormFromDict (_cbf *_da .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_edf ,_gabg :=_ade (_cbf .Get ("\u0046"));if _gabg !=nil {return nil ,_gabg ;};return &PdfActionSubmitForm {F :_edf ,Fields :_cbf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cbf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// String returns the name of the colorspace (DeviceN).
func (_agfgg *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_da .PdfObjectInteger ;BitsPerComponent *_da .PdfObjectInteger ;VerticesPerRow *_da .PdfObjectInteger ;Decode *_da .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dace *PdfColorspaceSpecialPattern )ToPdfObject ()_da .PdfObject {if _dace .UnderlyingCS ==nil {return _da .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_cgga :=_da .MakeArray (_da .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_cgga .Append (_dace .UnderlyingCS .ToPdfObject ());if _dace ._aeebb !=nil {_dace ._aeebb .PdfObject =_cgga ;return _dace ._aeebb ;};return _cgga ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _da .PdfObject ;};

// SetName sets the `Name` field of the signature.
func (_edbcf *PdfSignature )SetName (name string ){_edbcf .Name =_da .MakeString (name )};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_afefc []byte ;_eafbb []float64 ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gagf *PdfPage )error ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_dgcbc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_fcdgf :=_dgcbc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_fcdgf )> 0;_dada :=_da .NewFlateEncoder ();_fdbfb :=_da .MakeArray ();if wrapContents {_gffb ,_gcgcg :=_da .MakeStream ([]byte ("\u0071\u000a"),_dada );if _gcgcg !=nil {return _gcgcg ;};_fdbfb .Append (_gffb );};_fdbfb .Append (_fcdgf ...);if wrapContents {_faccg ,_bagdg :=_da .MakeStream ([]byte ("\u000a\u0051\u000a"),_dada );if _bagdg !=nil {return _bagdg ;};_fdbfb .Append (_faccg );};_facdf ,_fdbfc :=_da .MakeStream (cs ,_dada );if _fdbfc !=nil {return _fdbfc ;};_fdbfb .Append (_facdf );_dgcbc .Contents =_fdbfb ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgf *PdfActionNamed )ToPdfObject ()_da .PdfObject {_cgf .PdfAction .ToPdfObject ();_cb :=_cgf ._fca ;_cbg :=_cb .PdfObject .(*_da .PdfObjectDictionary );_cbg .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeNamed )));_cbg .SetIfNotNil ("\u004e",_cgf .N );return _cb ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_aeffe *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cdea []*PdfOutlineTreeNode ;var _gggfa []string ;var _aeaf func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_aeaf =func (_ccbdd *PdfOutlineTreeNode ,_fgcfcb *[]*PdfOutlineTreeNode ,_cfee *[]string ,_ggca int ){if _ccbdd ==nil {return ;};if _ccbdd ._cfbge ==nil {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ebaf ,_egff :=_ccbdd ._cfbge .(*PdfOutlineItem );if _egff {*_fgcfcb =append (*_fgcfcb ,&_ebaf .PdfOutlineTreeNode );_gdcd :=_dg .Repeat ("\u0020",_ggca *2)+_ebaf .Title .Decoded ();*_cfee =append (*_cfee ,_gdcd );};if _ccbdd .First !=nil {_aagfc :=_dg .Repeat ("\u0020",_ggca *2)+"\u002b";*_cfee =append (*_cfee ,_aagfc );_aeaf (_ccbdd .First ,_fgcfcb ,_cfee ,_ggca +1);};if _egff &&_ebaf .Next !=nil {_aeaf (_ebaf .Next ,_fgcfcb ,_cfee ,_ggca );};};_aeaf (_aeffe ._dcggc ,&_cdea ,&_gggfa ,0);return _cdea ,_gggfa ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _da .PdfObject ;Q _da .PdfObject ;RC _da .PdfObject ;DS _da .PdfObject ;CL _da .PdfObject ;IT _da .PdfObject ;BE _da .PdfObject ;RD _da .PdfObject ;BS _da .PdfObject ;LE _da .PdfObject ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_deae *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bgebf []float64 ;for _eegc :=0;_eegc < _deae .GetNumComponents ();_eegc ++{_bgebf =append (_bgebf ,0.0,1.0);};return _bgebf ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_ecfe *PdfFont )BytesToCharcodes (data []byte )[]_ceb .CharCode {_bdd .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _gdee ,_gebg :=_ecfe ._fdbf .(*pdfFontType0 );_gebg &&_gdee ._acbdf !=nil {if _dbcfg ,_bfda :=_gdee .bytesToCharcodes (data );_bfda {return _dbcfg ;};};_cdaef :=make ([]_ceb .CharCode ,0,len (data )+len (data )%2);if _ecfe .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _dbcga :=0;_dbcga < len (data );_dbcga +=2{_gbddd :=uint16 (data [_dbcga ])<<8|uint16 (data [_dbcga +1]);_cdaef =append (_cdaef ,_ceb .CharCode (_gbddd ));};}else {for _ ,_gccde :=range data {_cdaef =append (_cdaef ,_ceb .CharCode (_gccde ));};};return _cdaef ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _da .PdfObject ;BS _da .PdfObject ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _da .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_deg *PdfActionImportData )ToPdfObject ()_da .PdfObject {_deg .PdfAction .ToPdfObject ();_gfd :=_deg ._fca ;_dbag :=_gfd .PdfObject .(*_da .PdfObjectDictionary );_dbag .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeImportData )));if _deg .F !=nil {_dbag .Set ("\u0046",_deg .F .ToPdfObject ());};return _gfd ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_cg PdfModel ;Type _da .PdfObject ;S _da .PdfObject ;Next _da .PdfObject ;_fca *_da .PdfIndirectObject ;};

// Initialize initializes the PdfSignature.
func (_gfadc *PdfSignature )Initialize ()error {if _gfadc .Handler ==nil {return _dbf .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _gfadc .Handler .InitSignature (_gfadc );};

// ToPdfObject returns a stream object.
func (_ccddg *XObjectForm )ToPdfObject ()_da .PdfObject {_afgee :=_ccddg ._efcga ;_gcefg :=_afgee .PdfObjectDictionary ;if _ccddg .Filter !=nil {_gcefg =_ccddg .Filter .MakeStreamDict ();_afgee .PdfObjectDictionary =_gcefg ;};_gcefg .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gcefg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0046\u006f\u0072\u006d"));_gcefg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_ccddg .FormType );_gcefg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_ccddg .BBox );_gcefg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_ccddg .Matrix );if _ccddg .Resources !=nil {_gcefg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ccddg .Resources .ToPdfObject ());};_gcefg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ccddg .Group );_gcefg .SetIfNotNil ("\u0052\u0065\u0066",_ccddg .Ref );_gcefg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_ccddg .MetaData );_gcefg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ccddg .PieceInfo );_gcefg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ccddg .LastModified );_gcefg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ccddg .StructParent );_gcefg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ccddg .StructParents );_gcefg .SetIfNotNil ("\u004f\u0050\u0049",_ccddg .OPI );_gcefg .SetIfNotNil ("\u004f\u0043",_ccddg .OC );_gcefg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ccddg .Name );_gcefg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_ccddg .Stream ))));_afgee .Stream =_ccddg .Stream ;return _afgee ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bded :=PdfColorDeviceGray (grayVal );return &_bded ;};

// IsCID returns true if the underlying font is CID.
func (_gggac *PdfFont )IsCID ()bool {return _gggac .baseFields ().isCIDFont ()};func _gcac ()string {return _bccgda };

// ToPdfObject implements interface PdfModel.
func (_ddad *PdfAnnotationFileAttachment )ToPdfObject ()_da .PdfObject {_ddad .PdfAnnotation .ToPdfObject ();_caag :=_ddad ._dda ;_aebe :=_caag .PdfObject .(*_da .PdfObjectDictionary );_ddad .PdfAnnotationMarkup .appendToPdfDictionary (_aebe );_aebe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_aebe .SetIfNotNil ("\u0046\u0053",_ddad .FS );_aebe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ddad .Name );return _caag ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_badb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _badb .Alternate ==nil {_bdd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _badb .N ==1{_bdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_aeeb :=NewPdfColorspaceDeviceGray ();return _aeeb .ImageToRGB (img );}else if _badb .N ==3{_bdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _badb .N ==4{_bdd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_faecc :=NewPdfColorspaceDeviceCMYK ();return _faecc .ImageToRGB (img );}else {return img ,_dbf .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_bdd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_badb );_fbagc ,_edfe :=_badb .Alternate .ImageToRGB (img );_bdd .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bdd .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_fbagc );return _fbagc ,_edfe ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_afb :=NewPdfAction ();_afg :=&PdfActionRendition {};_afg .PdfAction =_afb ;_afb .SetContext (_afg );return _afg ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _af .ReadSeeker )(*PdfFont ,error ){const _eagg =_ceb .CharCode (32);const _cbfb =_ceb .CharCode (255);_gdebd ,_cgfe :=_df .ReadAll (r );if _cgfe !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cgfe );return nil ,_cgfe ;};_eead ,_cgfe :=_bgb .TtfParse (_baf .NewReader (_gdebd ));if _cgfe !=nil {_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cgfe );return nil ,_cgfe ;};_fabb :=&pdfFontSimple {_acfc :make (map[_ceb .CharCode ]float64 ),fontCommon :fontCommon {_bcga :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fabb ._defgd =_ceb .NewWinAnsiEncoder ();_fabb ._eeacc =_eead .PostScriptName ;_fabb .FirstChar =_da .MakeInteger (int64 (_eagg ));_fabb .LastChar =_da .MakeInteger (int64 (_cbfb ));_efgc :=1000.0/float64 (_eead .UnitsPerEm );if len (_eead .Widths )<=0{return nil ,_dbf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_efage :=_efgc *float64 (_eead .Widths [0]);_ecebae :=make ([]float64 ,0,_cbfb -_eagg +1);for _egbg :=_eagg ;_egbg <=_cbfb ;_egbg ++{_fccbb ,_dccgf :=_fabb .Encoder ().CharcodeToRune (_egbg );if !_dccgf {_bdd .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_egbg );_ecebae =append (_ecebae ,_efage );continue ;};_aaef ,_bcbc :=_eead .Chars [_fccbb ];if !_bcbc {_bdd .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_ecebae =append (_ecebae ,_efage );continue ;};_dbea :=_efgc *float64 (_eead .Widths [_aaef ]);_ecebae =append (_ecebae ,_dbea );};_fabb .Widths =_da .MakeIndirectObject (_da .MakeArrayFromFloats (_ecebae ));if len (_ecebae )< int (_cbfb -_eagg +1){_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_ecebae ),255-32+1);return nil ,_da .ErrRangeError ;};for _adgf :=_ceb .CharCode (_eagg );_adgf <=_cbfb ;_adgf ++{_fabb ._acfc [_adgf ]=_ecebae [_adgf -_eagg ];};_fabb .Encoding =_da .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bfgb :=&PdfFontDescriptor {};_bfgb .FontName =_da .MakeName (_eead .PostScriptName );_bfgb .Ascent =_da .MakeFloat (_efgc *float64 (_eead .TypoAscender ));_bfgb .Descent =_da .MakeFloat (_efgc *float64 (_eead .TypoDescender ));_bfgb .CapHeight =_da .MakeFloat (_efgc *float64 (_eead .CapHeight ));_bfgb .FontBBox =_da .MakeArrayFromFloats ([]float64 {_efgc *float64 (_eead .Xmin ),_efgc *float64 (_eead .Ymin ),_efgc *float64 (_eead .Xmax ),_efgc *float64 (_eead .Ymax )});_bfgb .ItalicAngle =_da .MakeFloat (float64 (_eead .ItalicAngle ));_bfgb .MissingWidth =_da .MakeFloat (_efgc *float64 (_eead .Widths [0]));_adfa ,_cgfe :=_da .MakeStream (_gdebd ,_da .NewFlateEncoder ());if _cgfe !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cgfe );return nil ,_cgfe ;};_adfa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_da .MakeInteger (int64 (len (_gdebd ))));_bfgb .FontFile2 =_adfa ;if _eead .Bold {_bfgb .StemV =_da .MakeInteger (120);}else {_bfgb .StemV =_da .MakeInteger (70);};_ccbc :=_abaeg ;if _eead .IsFixedPitch {_ccbc |=_cbbca ;};if _eead .ItalicAngle !=0{_ccbc |=_daaa ;};_bfgb .Flags =_da .MakeInteger (int64 (_ccbc ));_fabb ._daeea =_bfgb ;_fagg :=&PdfFont {_fdbf :_fabb };return _fagg ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_da .PdfObjectArray ;Domain *_da .PdfObjectArray ;Function []PdfFunction ;Extend *_da .PdfObjectArray ;};func _gebff (_fbff *XObjectImage )error {if _fbff .SMask ==nil {return nil ;};_ebcfb ,_eefb :=_fbff .SMask .(*_da .PdfObjectStream );if !_eefb {_bdd .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _da .ErrTypeError ;};_cfgcd :=_ebcfb .PdfObjectDictionary ;_fgffe :=_cfgcd .Get ("\u004d\u0061\u0074t\u0065");if _fgffe ==nil {return nil ;};_agdfg ,_fbge :=_ggefe (_fgffe .(*_da .PdfObjectArray ));if _fbge !=nil {return _fbge ;};_bbeca :=_da .MakeArrayFromFloats ([]float64 {_agdfg });_cfgcd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bbeca );return nil ;};func _dcfg (_fccgd *PdfField )[]*PdfField {_aegg :=[]*PdfField {_fccgd };for _ ,_eccga :=range _fccgd .Kids {_aegg =append (_aegg ,_dcfg (_eccga )...);};return _aegg ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_aecg *PdfAcroForm )ToPdfObject ()_da .PdfObject {_aggge :=_aecg ._eedd ;_baged :=_aggge .PdfObject .(*_da .PdfObjectDictionary );if _aecg .Fields !=nil {_fcec :=_da .PdfObjectArray {};for _ ,_fabf :=range *_aecg .Fields {_bgdcb :=_fabf .GetContext ();if _bgdcb !=nil {_fcec .Append (_bgdcb .ToPdfObject ());}else {_fcec .Append (_fabf .ToPdfObject ());};};_baged .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_fcec );};if _aecg .NeedAppearances !=nil {_baged .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_aecg .NeedAppearances );};if _aecg .SigFlags !=nil {_baged .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_aecg .SigFlags );};if _aecg .CO !=nil {_baged .Set ("\u0043\u004f",_aecg .CO );};if _aecg .DR !=nil {_baged .Set ("\u0044\u0052",_aecg .DR .ToPdfObject ());};if _aecg .DA !=nil {_baged .Set ("\u0044\u0041",_aecg .DA );};if _aecg .Q !=nil {_baged .Set ("\u0051",_aecg .Q );};if _aecg .XFA !=nil {_baged .Set ("\u0058\u0046\u0041",_aecg .XFA );};return _aggge ;};func _adae (_adac _da .PdfObject )(*PdfColorspaceLab ,error ){_ffcab :=NewPdfColorspaceLab ();if _gdaf ,_edega :=_adac .(*_da .PdfIndirectObject );_edega {_ffcab ._bdbge =_gdaf ;};_adac =_da .TraceToDirectObject (_adac );_dgaa ,_aedbc :=_adac .(*_da .PdfObjectArray );if !_aedbc {return nil ,_bd .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgaa .Len ()!=2{return nil ,_bd .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_adac =_da .TraceToDirectObject (_dgaa .Get (0));_bdegc ,_aedbc :=_adac .(*_da .PdfObjectName );if !_aedbc {return nil ,_bd .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_bdegc !="\u004c\u0061\u0062"{return nil ,_bd .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_adac =_da .TraceToDirectObject (_dgaa .Get (1));_agff ,_aedbc :=_adac .(*_da .PdfObjectDictionary );if !_aedbc {return nil ,_bd .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_adac =_agff .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_adac =_da .TraceToDirectObject (_adac );_gdgd ,_aedbc :=_adac .(*_da .PdfObjectArray );if !_aedbc {return nil ,_bd .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _gdgd .Len ()!=3{return nil ,_bd .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_abcg ,_gfgc :=_gdgd .GetAsFloat64Slice ();if _gfgc !=nil {return nil ,_gfgc ;};_ffcab .WhitePoint =_abcg ;_adac =_agff .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _adac !=nil {_adac =_da .TraceToDirectObject (_adac );_ecae ,_fedf :=_adac .(*_da .PdfObjectArray );if !_fedf {return nil ,_bd .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _ecae .Len ()!=3{return nil ,_bd .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fbd ,_acca :=_ecae .GetAsFloat64Slice ();if _acca !=nil {return nil ,_acca ;};_ffcab .BlackPoint =_fbd ;};_adac =_agff .Get ("\u0052\u0061\u006eg\u0065");if _adac !=nil {_adac =_da .TraceToDirectObject (_adac );_bfef ,_cabg :=_adac .(*_da .PdfObjectArray );if !_cabg {_bdd .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_bd .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfef .Len ()!=4{_bdd .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_bd .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cdbfa ,_cddb :=_bfef .GetAsFloat64Slice ();if _cddb !=nil {return nil ,_cddb ;};_ffcab .Range =_cdbfa ;};return _ffcab ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcdfe *PdfShadingType1 )ToPdfObject ()_da .PdfObject {_bcdfe .PdfShading .ToPdfObject ();_caece ,_fcaga :=_bcdfe .getShadingDict ();if _fcaga !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bcdfe .Domain !=nil {_caece .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bcdfe .Domain );};if _bcdfe .Matrix !=nil {_caece .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcdfe .Matrix );};if _bcdfe .Function !=nil {if len (_bcdfe .Function )==1{_caece .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcdfe .Function [0].ToPdfObject ());}else {_ebafa :=_da .MakeArray ();for _ ,_cbcfg :=range _bcdfe .Function {_ebafa .Append (_cbcfg .ToPdfObject ());};_caece .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebafa );};};return _bcdfe ._ggcdb ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_dfba pdfFontSimple )GetCharMetrics (code _ceb .CharCode )(_bgb .CharMetrics ,bool ){if _cedcd ,_efae :=_dfba ._acfc [code ];_efae {return _bgb .CharMetrics {Wx :_cedcd },true ;};if _bgb .IsStdFont (_bgb .StdFontName (_dfba ._eeacc )){return _bgb .CharMetrics {Wx :250},true ;};return _bgb .CharMetrics {},false ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_dged :=PdfWriter {};_dged ._fcabg =map[_da .PdfObject ]struct{}{};_dged ._bafa =[]_da .PdfObject {};_dged ._bggga =map[_da .PdfObject ][]*_da .PdfObjectDictionary {};_dged ._eacb =map[_da .PdfObject ]struct{}{};_dged ._egdae =1;_dged ._gfeec =3;_cbafa :=_da .MakeDict ();_ggfb :=[]struct{_geeae _da .PdfObjectName ;_caebdg string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_egfcb ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bdedc ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_ebbadc ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_egdfa ()},{"\u0054\u0069\u0074l\u0065",_gcac ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_acgg ()}};for _ ,_ffbcc :=range _ggfb {if _ffbcc ._caebdg !=""{_cbafa .Set (_ffbcc ._geeae ,_da .MakeString (_ffbcc ._caebdg ));};};if _adfdb :=_bcbba ();!_adfdb .IsZero (){if _dedc ,_egffac :=NewPdfDateFromTime (_adfdb );_egffac ==nil {_cbafa .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dedc .ToPdfObject ());};};if _cbgfg :=_fbga ();!_cbgfg .IsZero (){if _ebbfd ,_ebffc :=NewPdfDateFromTime (_cbgfg );_ebffc ==nil {_cbafa .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ebbfd .ToPdfObject ());};};_faecg :=_da .PdfIndirectObject {};_faecg .PdfObject =_cbafa ;_dged ._dgdec =&_faecg ;_dged .addObject (&_faecg );_ddbgd :=_da .PdfIndirectObject {};_agded :=_da .MakeDict ();_agded .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ddbgd .PdfObject =_agded ;_dged ._gcbe =&_ddbgd ;_dged .addObject (_dged ._gcbe );_fgbgc :=_da .PdfIndirectObject {};_defge :=_da .MakeDict ();_defge .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050\u0061\u0067e\u0073"));_bdbcc :=_da .PdfObjectArray {};_defge .Set ("\u004b\u0069\u0064\u0073",&_bdbcc );_defge .Set ("\u0043\u006f\u0075n\u0074",_da .MakeInteger (0));_fgbgc .PdfObject =_defge ;_dged ._gdag =&_fgbgc ;_dged ._aecdcf =map[_da .PdfObject ]struct{}{};_dged .addObject (_dged ._gdag );_agded .Set ("\u0050\u0061\u0067e\u0073",&_fgbgc );_dged ._dgbe =_agded ;_bdd .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ddbgd );return _dged ;};

// Y returns the value of the yellow component of the color.
func (_fdcf *PdfColorDeviceCMYK )Y ()float64 {return float64 (_fdcf [2])};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_ddgde *modelManager )GetModelFromPrimitive (primitive _da .PdfObject )PdfModel {model ,_eagc :=_ddgde ._gdge [primitive ];if !_eagc {return nil ;};return model ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _da .PdfObject ;Flags _da .PdfObject ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dedbe *PdfPageResources )SetColorspaceByName (keyName _da .PdfObjectName ,cs PdfColorspace )error {_ddddg ,_agaba :=_dedbe .GetColorspaces ();if _agaba !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_agaba );return _agaba ;};if _ddddg ==nil {_ddddg =NewPdfPageResourcesColorspaces ();_dedbe .SetColorSpace (_ddddg );};_ddddg .Set (keyName ,cs );return nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_eaad :=&PdfOutlineItem {_aaece :_da .MakeIndirectObject (_da .MakeDict ())};_eaad ._cfbge =_eaad ;return _eaad ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_cegc *Image )SetSamples (samples []uint32 ){if _cegc .BitsPerComponent < 8{samples =_cegc .samplesAddPadding (samples );};_dadc :=_ee .ResampleUint32 (samples ,int (_cegc .BitsPerComponent ),8);_gddea :=make ([]byte ,len (_dadc ));for _cafb ,_gfde :=range _dadc {_gddea [_cafb ]=byte (_gfde );};_cegc .Data =_gddea ;};func (_dcae *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _da .PdfObject ;MK _da .PdfObject ;A _da .PdfObject ;AA _da .PdfObject ;BS _da .PdfObject ;Parent _da .PdfObject ;_gbec *PdfField ;_bedb bool ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _c .Time ){_gaaf =modifiedDate };func (_bagec *PdfAppender )mergeResources (_ceccb ,_feeg _da .PdfObject ,_dbca map[_da .PdfObjectName ]_da .PdfObjectName )_da .PdfObject {if _feeg ==nil &&_ceccb ==nil {return nil ;};if _feeg ==nil {return _ceccb ;};_ccbg ,_dege :=_da .GetDict (_feeg );if !_dege {return _ceccb ;};if _ceccb ==nil {_afeb :=_da .MakeDict ();_afeb .Merge (_ccbg );return _feeg ;};_cadb ,_dege :=_da .GetDict (_ceccb );if !_dege {_bdd .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_cadb =_da .MakeDict ();};for _ ,_fed :=range _ccbg .Keys (){if _fdfg ,_bggbd :=_dbca [_fed ];_bggbd {_cadb .Set (_fdfg ,_ccbg .Get (_fed ));}else {_cadb .Set (_fed ,_ccbg .Get (_fed ));};};return _cadb ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_da .PdfObjectArray ;Domain *_da .PdfObjectArray ;Function []PdfFunction ;Extend *_da .PdfObjectArray ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _da .PdfObject ;B _da .PdfObject ;};func (_geddf *PdfWriter )hasObject (_egce _da .PdfObject )bool {_ ,_agafc :=_geddf ._fcabg [_egce ];return _agafc ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fgfcfa *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _fgfcfa .fill (provider ,appGen );};type fontFile struct{_gabeg string ;_dcdee string ;_cfac _ceb .SimpleEncoder ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_afgfc pdfCIDFontType0 )GetCharMetrics (code _ceb .CharCode )(_bgb .CharMetrics ,bool ){_cccaa :=_afgfc ._bddad ;if _fbgfg ,_bfdgb :=_afgfc ._beeg [code ];_bfdgb {_cccaa =_fbgfg ;};return _bgb .CharMetrics {Wx :_cccaa },true ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_fgffb *PdfPage )GetPageDict ()*_da .PdfObjectDictionary {_adgfb :=_fgffb ._decgdc ;_adgfb .Clear ();_adgfb .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0050\u0061\u0067\u0065"));_adgfb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fgffb .Parent );if _fgffb .LastModified !=nil {_adgfb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fgffb .LastModified .ToPdfObject ());};if _fgffb .Resources !=nil {_adgfb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fgffb .Resources .ToPdfObject ());};if _fgffb .CropBox !=nil {_adgfb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_fgffb .CropBox .ToPdfObject ());};if _fgffb .MediaBox !=nil {_adgfb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_fgffb .MediaBox .ToPdfObject ());};if _fgffb .BleedBox !=nil {_adgfb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_fgffb .BleedBox .ToPdfObject ());};if _fgffb .TrimBox !=nil {_adgfb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_fgffb .TrimBox .ToPdfObject ());};if _fgffb .ArtBox !=nil {_adgfb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_fgffb .ArtBox .ToPdfObject ());};_adgfb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_fgffb .BoxColorInfo );_adgfb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fgffb .Contents );if _fgffb .Rotate !=nil {_adgfb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_da .MakeInteger (*_fgffb .Rotate ));};_adgfb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fgffb .Group );_adgfb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_fgffb .Thumb );_adgfb .SetIfNotNil ("\u0042",_fgffb .B );_adgfb .SetIfNotNil ("\u0044\u0075\u0072",_fgffb .Dur );_adgfb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fgffb .Trans );_adgfb .SetIfNotNil ("\u0041\u0041",_fgffb .AA );_adgfb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fgffb .Metadata );_adgfb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fgffb .PieceInfo );_adgfb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fgffb .StructParents );_adgfb .SetIfNotNil ("\u0049\u0044",_fgffb .ID );_adgfb .SetIfNotNil ("\u0050\u005a",_fgffb .PZ );_adgfb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_fgffb .SeparationInfo );_adgfb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_fgffb .Tabs );_adgfb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_fgffb .TemplateInstantiated );_adgfb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_fgffb .PresSteps );_adgfb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_fgffb .UserUnit );_adgfb .SetIfNotNil ("\u0056\u0050",_fgffb .VP );if _fgffb ._fcgd !=nil {_gbeaa :=_da .MakeArray ();for _ ,_ebfae :=range _fgffb ._fcgd {if _ebgga :=_ebfae .GetContext ();_ebgga !=nil {_gbeaa .Append (_ebgga .ToPdfObject ());}else {_gbeaa .Append (_ebfae .ToPdfObject ());};};if _gbeaa .Len ()> 0{_adgfb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gbeaa );};}else if _fgffb .Annots !=nil {_adgfb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_fgffb .Annots );};return _adgfb ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _da .StreamEncoder ;FormType _da .PdfObject ;BBox _da .PdfObject ;Matrix _da .PdfObject ;Resources *PdfPageResources ;Group _da .PdfObject ;Ref _da .PdfObject ;MetaData _da .PdfObject ;PieceInfo _da .PdfObject ;LastModified _da .PdfObject ;StructParent _da .PdfObject ;StructParents _da .PdfObject ;OPI _da .PdfObject ;OC _da .PdfObject ;Name _da .PdfObject ;

// Stream data.
Stream []byte ;_efcga *_da .PdfObjectStream ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_daaac *PdfShadingType6 )ToPdfObject ()_da .PdfObject {_daaac .PdfShading .ToPdfObject ();_adbfa ,_bgffe :=_daaac .getShadingDict ();if _bgffe !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _daaac .BitsPerCoordinate !=nil {_adbfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_daaac .BitsPerCoordinate );};if _daaac .BitsPerComponent !=nil {_adbfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daaac .BitsPerComponent );};if _daaac .BitsPerFlag !=nil {_adbfa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_daaac .BitsPerFlag );};if _daaac .Decode !=nil {_adbfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_daaac .Decode );};if _daaac .Function !=nil {if len (_daaac .Function )==1{_adbfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daaac .Function [0].ToPdfObject ());}else {_egbcf :=_da .MakeArray ();for _ ,_acgcb :=range _daaac .Function {_egbcf .Append (_acgcb .ToPdfObject ());};_adbfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egbcf );};};return _daaac ._ggcdb ;};var _cgafed _c .Time ;

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_cbea :=&PdfFilespec {};_cbea ._ecaf =_da .MakeIndirectObject (_da .MakeDict ());return _cbea ;};func _agdbd (_efca *_da .PdfObjectDictionary )(*PdfFieldButton ,error ){_cbec :=&PdfFieldButton {};_cbec .Opt ,_ =_da .GetArray (_efca .Get ("\u004f\u0070\u0074"));return _cbec ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_aegbd *PdfOutlineTreeNode )ToPdfObject ()_da .PdfObject {return _aegbd .GetContext ().ToPdfObject ();};func _fedgf (_bfaf *_da .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cagcc :=&PdfShadingPattern {};_cbdfc :=_bfaf .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _cbdfc ==nil {_bdd .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fgcfd ,_dffbg :=_beaf (_cbdfc );if _dffbg !=nil {_bdd .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dffbg );return nil ,_dffbg ;};_cagcc .Shading =_fgcfd ;if _dgbcaf :=_bfaf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dgbcaf !=nil {_edcg ,_ebcbf :=_dgbcaf .(*_da .PdfObjectArray );if !_ebcbf {_bdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgbcaf );return nil ,_da .ErrTypeError ;};_cagcc .Matrix =_edcg ;};if _bgedf :=_bfaf .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bgedf !=nil {_cagcc .ExtGState =_bgedf ;};return _cagcc ,nil ;};func (_aebd *PdfReader )newPdfActionThreadFromDict (_gdbf *_da .PdfObjectDictionary )(*PdfActionThread ,error ){_fgbg ,_bead :=_ade (_gdbf .Get ("\u0046"));if _bead !=nil {return nil ,_bead ;};return &PdfActionThread {D :_gdbf .Get ("\u0044"),B :_gdbf .Get ("\u0042"),F :_fgbg },nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_geadf :=NewPdfOutline ();_geadf ._cfbge =&_geadf ;return _geadf ;};func (_dgg *PdfReader )newPdfActionNamedFromDict (_fgab *_da .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_fgab .Get ("\u004e")},nil ;};func (_fffcf *PdfWriter )addObject (_cecea _da .PdfObject )bool {_bcdcf :=_fffcf .hasObject (_cecea );if !_bcdcf {_fbdfg :=_da .ResolveReferencesDeep (_cecea ,_fffcf ._eacb );if _fbdfg !=nil {_bdd .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_fbdfg );};_fffcf ._bafa =append (_fffcf ._bafa ,_cecea );_fffcf ._fcabg [_cecea ]=struct{}{};return true ;};return false ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _da .PdfObject ;Mac _da .PdfObject ;Unix _da .PdfObject ;NewWindow _da .PdfObject ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// HasFontByName checks whether a font is defined by the specified keyName.
func (_egdde *PdfPageResources )HasFontByName (keyName _da .PdfObjectName )bool {_ ,_dcedc :=_egdde .GetFontByName (keyName );return _dcedc ;};

// GetPage returns the PdfPage model for the specified page number.
func (_deagf *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _deagf ._baeg .GetCrypter ()!=nil &&!_deagf ._baeg .IsAuthenticated (){return nil ,_bd .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_deagf ._fgcfe )< pageNumber {return nil ,_dbf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_fgbad :=pageNumber -1;if _fgbad < 0{return nil ,_bd .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_bfgba :=_deagf .PageList [_fgbad ];return _bfgba ,nil ;};func (_bbcd *PdfReader )newPdfAnnotationMovieFromDict (_geeb *_da .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cgce :=PdfAnnotationMovie {};_cgce .T =_geeb .Get ("\u0054");_cgce .Movie =_geeb .Get ("\u004d\u006f\u0076i\u0065");_cgce .A =_geeb .Get ("\u0041");return &_cgce ,nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cedbf *PdfPage )ToPdfObject ()_da .PdfObject {_eacad :=_cedbf ._bcce ;_cedbf .GetPageDict ();return _eacad ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dbcbe :=&PdfFieldSignature {};_dbcbe .PdfField =NewPdfField ();_dbcbe .PdfField .SetContext (_dbcbe );_dbcbe .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dbcbe .PdfAnnotationWidget .SetContext (_dbcbe );_dbcbe .PdfAnnotationWidget ._dda =_dbcbe .PdfField ._dade ;_dbcbe .T =_da .MakeString ("");_dbcbe .F =_da .MakeInteger (132);_dbcbe .V =signature ;return _dbcbe ;};

// ToPdfObject returns the PDF representation of the function.
func (_gfcg *PdfFunctionType0 )ToPdfObject ()_da .PdfObject {if _gfcg ._eefeb ==nil {_gfcg ._eefeb =&_da .PdfObjectStream {};};_bgecea :=_da .MakeDict ();_bgecea .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_da .MakeInteger (0));_fbdb :=&_da .PdfObjectArray {};for _ ,_bfcd :=range _gfcg .Domain {_fbdb .Append (_da .MakeFloat (_bfcd ));};_bgecea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbdb );_eedfd :=&_da .PdfObjectArray {};for _ ,_ffdabd :=range _gfcg .Range {_eedfd .Append (_da .MakeFloat (_ffdabd ));};_bgecea .Set ("\u0052\u0061\u006eg\u0065",_eedfd );_ccec :=&_da .PdfObjectArray {};for _ ,_ebga :=range _gfcg .Size {_ccec .Append (_da .MakeInteger (int64 (_ebga )));};_bgecea .Set ("\u0053\u0069\u007a\u0065",_ccec );_bgecea .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_da .MakeInteger (int64 (_gfcg .BitsPerSample )));if _gfcg .Order !=1{_bgecea .Set ("\u004f\u0072\u0064e\u0072",_da .MakeInteger (int64 (_gfcg .Order )));};_bgecea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_gfcg ._bdaf ))));_gfcg ._eefeb .Stream =_gfcg ._bdaf ;_gfcg ._eefeb .PdfObjectDictionary =_bgecea ;return _gfcg ._eefeb ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetXObjectByName gets XObject by name.
func (_gggcde *PdfPage )GetXObjectByName (name _da .PdfObjectName )(_da .PdfObject ,bool ){_ecddbf ,_bggd :=_gggcde .Resources .XObject .(*_da .PdfObjectDictionary );if !_bggd {return nil ,false ;};if _dcdbd :=_ecddbf .Get (name );_dcdbd !=nil {return _dcdbd ,true ;};return nil ,false ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _da .PdfObject ;Open _da .PdfObject ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_bccde *PdfSignature )bool ;Validate (_ddeeda *PdfSignature ,_fdebf Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_cccaaf *PdfSignature )(Hasher ,error );Sign (_edccf *PdfSignature ,_gbecd Hasher )error ;};func _faddg (_afbcb _da .PdfObject )(map[_ceb .CharCode ]float64 ,error ){if _afbcb ==nil {return nil ,nil ;};_eccbd ,_bacab :=_da .GetArray (_afbcb );if !_bacab {return nil ,nil ;};_ccaae :=map[_ceb .CharCode ]float64 {};_edggg :=_eccbd .Len ();for _dbeb :=0;_dbeb < _edggg -1;_dbeb ++{_bdac :=_da .TraceToDirectObject (_eccbd .Get (_dbeb ));_eageb ,_gfab :=_da .GetIntVal (_bdac );if !_gfab {return nil ,_bd .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dbeb ,_bdac );};_dbeb ++;if _dbeb > _edggg -1{return nil ,_bd .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_eccbd );};_ageec :=_da .TraceToDirectObject (_eccbd .Get (_dbeb ));switch _ageec .(type ){case *_da .PdfObjectArray :_bbeda ,_ :=_da .GetArray (_ageec );if _beadb ,_daegb :=_bbeda .ToFloat64Array ();_daegb ==nil {for _ggee :=0;_ggee < len (_beadb );_ggee ++{_ccaae [_ceb .CharCode (_eageb +_ggee )]=_beadb [_ggee ];};}else {return nil ,_bd .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dbeb ,_ageec );};case *_da .PdfObjectInteger :_gacbg ,_abbec :=_da .GetIntVal (_ageec );if !_abbec {return nil ,_bd .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dbeb ,_ageec );};_dbeb ++;if _dbeb > _edggg -1{return nil ,_bd .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_eccbd );};_ccbfg :=_eccbd .Get (_dbeb );_eadegb ,_gfcae :=_da .GetNumberAsFloat (_ccbfg );if _gfcae !=nil {return nil ,_bd .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dbeb ,_ccbfg );};for _dbfa :=_eageb ;_dbfa <=_gacbg ;_dbfa ++{_ccaae [_ceb .CharCode (_dbfa )]=_eadegb ;};default:return nil ,_bd .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dbeb ,_ageec );};};return _ccaae ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_fbec *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fbec .AlternateSpace ==nil {return nil ,_dbf .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _fbec .AlternateSpace .ColorToRGB (color );};func (_fceea *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _fceea ._baeg .GetCrypter ()!=nil &&!_fceea ._baeg .IsAuthenticated (){return nil ,_bd .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_daffa :=_fceea ._edcc ;_dgfa :=_daffa .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dgfa ==nil {return nil ,nil ;};_bdd .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fdfaa :=_da .ResolveReference (_dgfa );_bdd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fdfaa );if _ddgcd :=_da .IsNullObject (_fdfaa );_ddgcd {_bdd .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_ddcae ,_cecga :=_fdfaa .(*_da .PdfIndirectObject );if !_cecga {if _ ,_bcba :=_da .GetDict (_fdfaa );!_bcba {_bdd .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_bdd .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_ddcae =_da .MakeIndirectObject (_fdfaa );};_dgad ,_cecga :=_ddcae .PdfObject .(*_da .PdfObjectDictionary );if !_cecga {return nil ,_dbf .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_bdd .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dgad );_gbdbed ,_ ,_ffdd :=_fceea .buildOutlineTree (_ddcae ,nil ,nil ,nil );if _ffdd !=nil {return nil ,_ffdd ;};_bdd .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gbdbed );return _gbdbed ,nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_bgce =producer };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_acfee *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecde :=vals [0];if _ecde < 0.0||_ecde > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccgg :=vals [1];if _ccgg < 0.0||_ccgg > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddbg :=vals [2];if _ddbg < 0.0||_ddbg > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcga :=vals [3];if _dcga < 0.0||_dcga > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfga :=NewPdfColorDeviceCMYK (_ecde ,_ccgg ,_ddbg ,_dcga );return _abfga ,nil ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fgfca DefaultImageHandler )NewGrayImageFromGoImage (goimg _g .Image )(*Image ,error ){_egbd :=goimg .Bounds ();_cfcf :=&Image {Width :int64 (_egbd .Dx ()),Height :int64 (_egbd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gbfda :=goimg .(type ){case *_g .Gray :if len (_gbfda .Pix )!=_egbd .Dx ()*_egbd .Dy (){_dbfd ,_aadec :=_agc .GrayConverter .Convert (goimg );if _aadec !=nil {return nil ,_aadec ;};_cfcf .Data =_dbfd .Pix ();}else {_cfcf .Data =_gbfda .Pix ;};case *_g .Gray16 :_cfcf .BitsPerComponent =16;if len (_gbfda .Pix )!=_egbd .Dx ()*_egbd .Dy ()*2{_dgefb ,_adef :=_agc .Gray16Converter .Convert (goimg );if _adef !=nil {return nil ,_adef ;};_cfcf .Data =_dgefb .Pix ();}else {_cfcf .Data =_gbfda .Pix ;};default:_aggcff ,_ecace :=_agc .GrayConverter .Convert (goimg );if _ecace !=nil {return nil ,_ecace ;};_cfcf .Data =_aggcff .Pix ();};return _cfcf ,nil ;};var _afdac =_gd .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");func (_dgegff *XObjectImage )getParamsDict ()*_da .PdfObjectDictionary {_bbdcg :=_da .MakeDict ();_bbdcg .Set ("\u0057\u0069\u0064t\u0068",_da .MakeInteger (*_dgegff .Width ));_bbdcg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_da .MakeInteger (*_dgegff .Height ));_bbdcg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_da .MakeInteger (int64 (_dgegff .ColorSpace .GetNumComponents ())));_bbdcg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_da .MakeInteger (*_dgegff .BitsPerComponent ));return _bbdcg ;};var _ _da .PdfObject =&pdfSignDictionary {};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_daed *PdfPattern )GetContainingPdfObject ()_da .PdfObject {return _daed ._febc };

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_afag _af .ReadSeeker ;_dce *_da .PdfParser ;_bceb *PdfReader ;Reader *PdfReader ;_gca []*PdfPage ;_abbe *PdfAcroForm ;_bage _da .XrefTable ;_ggga int64 ;_egcd int ;_dbcb []_da .PdfObject ;_bgbc map[_da .PdfObject ]struct{};_ebdd map[_da .PdfObject ]int64 ;_abeg map[_da .PdfObject ]struct{};_fdc map[_da .PdfObject ]struct{};_cegd int64 ;_gcef bool ;};

// String returns a string that describes `base`.
func (_feae fontCommon )String ()string {return _bd .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_feae .coreString ());};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ebge DefaultImageHandler )NewImageFromGoImage (goimg _g .Image )(*Image ,error ){_daabc ,_abgg :=_agc .FromGoImage (goimg );if _abgg !=nil {return nil ,_abgg ;};_bdgce :=_bcfdb (_daabc .Base ());return &_bdgce ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_bfe :=NewPdfAnnotation ();_eeb :=&PdfAnnotationMovie {};_eeb .PdfAnnotation =_bfe ;_bfe .SetContext (_eeb );return _eeb ;};

// GetContentStream returns the pattern cell's content stream
func (_fdead *PdfTilingPattern )GetContentStream ()([]byte ,error ){_dgcfb ,_ ,_bfacf :=_fdead .GetContentStreamWithEncoder ();return _dgcfb ,_bfacf ;};func _fbfgf (_aaegd *_da .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fecd :=PdfShadingType1 {};if _eeeea :=_aaegd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eeeea !=nil {_eeeea =_da .TraceToDirectObject (_eeeea );_bfbb ,_eebef :=_eeeea .(*_da .PdfObjectArray );if !_eebef {_bdd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeeea );return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fecd .Domain =_bfbb ;};if _bccd :=_aaegd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bccd !=nil {_bccd =_da .TraceToDirectObject (_bccd );_bgbef ,_cbaf :=_bccd .(*_da .PdfObjectArray );if !_cbaf {_bdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bccd );return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fecd .Matrix =_bgbef ;};_ebbad :=_aaegd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebbad ==nil {_bdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_fecd .Function =[]PdfFunction {};if _dgcdf ,_fgbaa :=_ebbad .(*_da .PdfObjectArray );_fgbaa {for _ ,_ccdb :=range _dgcdf .Elements (){_aegbf ,_gbga :=_ffdgg (_ccdb );if _gbga !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbga );return nil ,_gbga ;};_fecd .Function =append (_fecd .Function ,_aegbf );};}else {_dfeb ,_daedd :=_ffdgg (_ebbad );if _daedd !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daedd );return nil ,_daedd ;};_fecd .Function =append (_fecd .Function ,_dfeb );};return &_fecd ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_gffdd *PdfTilingPattern )SetContentStream (content []byte ,encoder _da .StreamEncoder )error {_dggfc ,_ccdc :=_gffdd ._febc .(*_da .PdfObjectStream );if !_ccdc {_bdd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gffdd ._febc );return _da .ErrTypeError ;};if encoder ==nil {encoder =_da .NewRawEncoder ();};_dfgfa :=_dggfc .PdfObjectDictionary ;_gbaba :=encoder .MakeStreamDict ();_dfgfa .Merge (_gbaba );_ebag ,_ceaa :=encoder .EncodeBytes (content );if _ceaa !=nil {return _ceaa ;};_dfgfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_ebag ))));_dggfc .Stream =[]byte (_ebag );return nil ;};

// SetFlag sets the flag for the field.
func (_ddgd *PdfField )SetFlag (flag FieldFlag ){_ddgd .Ff =_da .MakeInteger (int64 (flag ))};

// GetDescent returns the Descent of the font `descriptor`.
func (_cbbd *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _da .GetNumberAsFloat (_cbbd .Descent );};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_gagcf *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_geda *XObjectImage )SetFilter (encoder _da .StreamEncoder )error {_gfagf :=_geda .Stream ;_bgcf ,_dfeaa :=_geda .Filter .DecodeBytes (_gfagf );if _dfeaa !=nil {return _dfeaa ;};_geda .Filter =encoder ;encoder .UpdateParams (_geda .getParamsDict ());_gfagf ,_dfeaa =encoder .EncodeBytes (_bgcf );if _dfeaa !=nil {return _dfeaa ;};_geda .Stream =_gfagf ;return nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ceb .SimpleEncoder ,error ){_gabb ,_ffcac :=_gdebc (basefont );if _ffcac !=nil {return nil ,nil ,_ffcac ;};_bcgdf ,_decf :=_gabb .Encoder ().(_ceb .SimpleEncoder );if !_decf {return nil ,nil ,_bd .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_gabb .Encoder ());};_afdeb :=make (map[rune ]_ceb .GlyphName );for _fede :=range alphabet {if _ ,_dafdc :=_bcgdf .RuneToCharcode (_fede );!_dafdc {_ ,_aaeca :=_gabb ._aegbb [_fede ];if !_aaeca {_bdd .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_fede ,_fede );continue ;};_edff ,_aaeca :=_ceb .RuneToGlyph (_fede );if !_aaeca {_bdd .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_fede ,_fede );continue ;};if len (_afdeb )>=255{return nil ,nil ,_dbf .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_afdeb [_fede ]=_edff ;};};var (_agffdg []_ceb .CharCode ;_bcgf []_ceb .CharCode ;);for _eeeee :=_ceb .CharCode (1);_eeeee <=0xff;_eeeee ++{_edgd ,_faaf :=_bcgdf .CharcodeToRune (_eeeee );if !_faaf {_agffdg =append (_agffdg ,_eeeee );continue ;};if _ ,_faaf =alphabet [_edgd ];!_faaf {_bcgf =append (_bcgf ,_eeeee );};};_babf :=append (_agffdg ,_bcgf ...);if len (_babf )< len (_afdeb ){return nil ,nil ,_bd .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_afdeb ),len (_babf ));};_fbbc :=make ([]rune ,0,len (_afdeb ));for _cged :=range _afdeb {_fbbc =append (_fbbc ,_cged );};_ce .Slice (_fbbc ,func (_bgga ,_fcdc int )bool {return _fbbc [_bgga ]< _fbbc [_fcdc ]});_gdebaf :=make (map[_ceb .CharCode ]_ceb .GlyphName ,len (_fbbc ));for _ ,_bagg :=range _fbbc {_fdccc :=_babf [0];_babf =_babf [1:];_gdebaf [_fdccc ]=_afdeb [_bagg ];};_bcgdf =_ceb .ApplyDifferences (_bcgdf ,_gdebaf );_gabb .SetEncoder (_bcgdf );return &PdfFont {_fdbf :&_gabb },_bcgdf ,nil ;};

// SetDate sets the `M` field of the signature.
func (_ecffc *PdfSignature )SetDate (date _c .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ecffc .M =_da .MakeString (date .Format (format ));};

// ToPdfObject converts the font to a PDF representation.
func (_dbbee *pdfFontType0 )ToPdfObject ()_da .PdfObject {if _dbbee ._ggbfd ==nil {_dbbee ._ggbfd =&_da .PdfIndirectObject {};};_fbfd :=_dbbee .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_dbbee ._ggbfd .PdfObject =_fbfd ;if _dbbee .Encoding !=nil {_fbfd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbbee .Encoding );}else if _dbbee ._gacd !=nil {_fbfd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbbee ._gacd .ToPdfObject ());};if _dbbee .DescendantFont !=nil {_fbfd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_da .MakeArray (_dbbee .DescendantFont .ToPdfObject ()));};return _dbbee ._ggbfd ;};

// ToPdfObject implements interface PdfModel.
func (_gaag *PdfAnnotationStrikeOut )ToPdfObject ()_da .PdfObject {_gaag .PdfAnnotation .ToPdfObject ();_bgec :=_gaag ._dda ;_dbfc :=_bgec .PdfObject .(*_da .PdfObjectDictionary );_gaag .PdfAnnotationMarkup .appendToPdfDictionary (_dbfc );_dbfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_dbfc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gaag .QuadPoints );return _bgec ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bdadd *PdfFieldButton )IsRadio ()bool {return _bdadd .GetType ()==ButtonTypeRadio };

// IsTiling specifies if the pattern is a tiling pattern.
func (_acadf *PdfPattern )IsTiling ()bool {return _acadf .PatternType ==1};

// GetContainingPdfObject implements interface PdfModel.
func (_ceaad *PdfSignature )GetContainingPdfObject ()_da .PdfObject {return _ceaad ._caadf };

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _da .PdfObject ;Name _da .PdfObject ;State _da .PdfObject ;StateModel _da .PdfObject ;};func _eafea (_gadaf *_da .PdfIndirectObject )(*PdfOutline ,error ){_bgbag ,_fgecc :=_gadaf .PdfObject .(*_da .PdfObjectDictionary );if !_fgecc {return nil ,_bd .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cggbg :=NewPdfOutline ();if _gfdgb :=_bgbag .Get ("\u0054\u0079\u0070\u0065");_gfdgb !=nil {_gfdbg ,_feea :=_gfdgb .(*_da .PdfObjectName );if _feea {if *_gfdbg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bdd .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gfdbg );};};};if _aacbb :=_bgbag .Get ("\u0043\u006f\u0075n\u0074");_aacbb !=nil {_dggee ,_fcedg :=_da .GetNumberAsInt64 (_aacbb );if _fcedg !=nil {return nil ,_fcedg ;};_cggbg .Count =&_dggee ;};return _cggbg ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_fbgc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _fbgc ._fcgd !=nil {return _fbgc ._fcgd ,nil ;};if _fbgc .Annots ==nil {_fbgc ._fcgd =[]*PdfAnnotation {};return nil ,nil ;};if _fbgc ._acba ==nil {_fbgc ._fcgd =[]*PdfAnnotation {};return nil ,nil ;};_fdcda ,_dabaf :=_fbgc ._acba .loadAnnotations (_fbgc .Annots );if _dabaf !=nil {return nil ,_dabaf ;};if _fdcda ==nil {_fbgc ._fcgd =[]*PdfAnnotation {};};_fbgc ._fcgd =_fdcda ;return _fbgc ._fcgd ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cfg :=&PdfAction {};_cfg ._fca =_da .MakeIndirectObject (_da .MakeDict ());return _cfg ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_da .PdfObjectArray ;ExtGState _da .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_ebfa *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _ebfa .flattenFieldsWithOpts (false ,appgen ,opts );};func (_bdec *PdfReader )buildPageList (_fcada *_da .PdfIndirectObject ,_efcc *_da .PdfIndirectObject ,_gdfdd map[_da .PdfObject ]struct{})error {if _fcada ==nil {return nil ;};if _ ,_gdbgg :=_gdfdd [_fcada ];_gdbgg {_bdd .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fcada .ObjectNumber );return nil ;};_gdfdd [_fcada ]=struct{}{};_dadf ,_cafc :=_fcada .PdfObject .(*_da .PdfObjectDictionary );if !_cafc {return _dbf .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gbeef ,_cafc :=(*_dadf ).Get ("\u0054\u0079\u0070\u0065").(*_da .PdfObjectName );if !_cafc {if _dadf .Get ("\u004b\u0069\u0064\u0073")==nil {return _dbf .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bdd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_gbeef =_da .MakeName ("\u0050\u0061\u0067e\u0073");_dadf .Set ("\u0054\u0079\u0070\u0065",_gbeef );};_bdd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gbeef ,_fcada );if *_gbeef =="\u0050\u0061\u0067\u0065"{_eeade ,_eeagb :=_bdec .newPdfPageFromDict (_dadf );if _eeagb !=nil {return _eeagb ;};_eeade .setContainer (_fcada );if _efcc !=nil {_dadf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efcc );};_bdec ._fgcfe =append (_bdec ._fgcfe ,_fcada );_bdec .PageList =append (_bdec .PageList ,_eeade );return nil ;};if *_gbeef !="\u0050\u0061\u0067e\u0073"{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gbeef );return _dbf .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _efcc !=nil {_dadf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efcc );};if !_bdec ._cdffd {_effcd :=_bdec .traverseObjectData (_fcada );if _effcd !=nil {return _effcd ;};};_gdfae ,_fadega :=_bdec ._baeg .Resolve (_dadf .Get ("\u004b\u0069\u0064\u0073"));if _fadega !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fadega ;};var _efdf *_da .PdfObjectArray ;_efdf ,_cafc =_gdfae .(*_da .PdfObjectArray );if !_cafc {_cbbac ,_edbda :=_gdfae .(*_da .PdfIndirectObject );if !_edbda {return _dbf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_efdf ,_cafc =_cbbac .PdfObject .(*_da .PdfObjectArray );if !_cafc {return _dbf .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bdd .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_efdf );for _acaab ,_cfacc :=range _efdf .Elements (){_gbeec ,_dcfaa :=_da .GetIndirect (_cfacc );if !_dcfaa {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gbeec );return _dbf .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_efdf .Set (_acaab ,_gbeec );_fadega =_bdec .buildPageList (_gbeec ,_fcada ,_gdfdd );if _fadega !=nil {return _fadega ;};};return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ggcf :=&PdfPageResourcesColorspaces {};_ggcf .Names =[]string {};_ggcf .Colorspaces =map[string ]PdfColorspace {};_ggcf ._eged =&_da .PdfIndirectObject {};return _ggcf ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gdef *PdfTilingPattern )ToPdfObject ()_da .PdfObject {_gdef .PdfPattern .ToPdfObject ();_badd :=_gdef .getDict ();if _gdef .PaintType !=nil {_badd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gdef .PaintType );};if _gdef .TilingType !=nil {_badd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gdef .TilingType );};if _gdef .BBox !=nil {_badd .Set ("\u0042\u0042\u006f\u0078",_gdef .BBox .ToPdfObject ());};if _gdef .XStep !=nil {_badd .Set ("\u0058\u0053\u0074e\u0070",_gdef .XStep );};if _gdef .YStep !=nil {_badd .Set ("\u0059\u0053\u0074e\u0070",_gdef .YStep );};if _gdef .Resources !=nil {_badd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gdef .Resources .ToPdfObject ());};if _gdef .Matrix !=nil {_badd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gdef .Matrix );};return _gdef ._febc ;};

// GetNumComponents returns the number of color components.
func (_ffeb *PdfColorspaceICCBased )GetNumComponents ()int {return _ffeb .N };func _gaadb (_abdf *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_eccg ,_ecaff :=_da .GetDict (_abdf .AP );if !_ecaff {return nil ,nil ,_dbf .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _eccg ==nil {return nil ,nil ,nil ;};_cffb ,_ecaff :=_da .GetArray (_abdf .Rect );if !_ecaff ||_cffb .Len ()!=4{return nil ,nil ,_dbf .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dbga ,_edged :=NewPdfRectangle (*_cffb );if _edged !=nil {return nil ,nil ,_edged ;};_cbggf :=_da .TraceToDirectObject (_eccg .Get ("\u004e"));switch _dbcab :=_cbggf .(type ){case *_da .PdfObjectStream :_ggbf :=_dbcab ;_debba ,_aedce :=NewXObjectFormFromStream (_ggbf );return _debba ,_dbga ,_aedce ;case *_da .PdfObjectDictionary :_ebcc :=_dbcab ;_cbda ,_ebae :=_da .GetName (_abdf .AS );if !_ebae {return nil ,nil ,nil ;};if _ebcc .Get (*_cbda )==nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_feeb ,_ebae :=_da .GetStream (_ebcc .Get (*_cbda ));if !_ebae {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cbda );return nil ,nil ,_dbf .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_gfcd ,_gagg :=NewXObjectFormFromStream (_feeb );return _gfcd ,_dbga ,_gagg ;};_bdd .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cbggf );return nil ,nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdgbc *PdfShading )ToPdfObject ()_da .PdfObject {_affaf :=_cdgbc ._ggcdb ;_ggbce ,_ccdda :=_cdgbc .getShadingDict ();if _ccdda !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cdgbc .ShadingType !=nil {_ggbce .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cdgbc .ShadingType );};if _cdgbc .ColorSpace !=nil {_ggbce .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cdgbc .ColorSpace .ToPdfObject ());};if _cdgbc .Background !=nil {_ggbce .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cdgbc .Background );};if _cdgbc .BBox !=nil {_ggbce .Set ("\u0042\u0042\u006f\u0078",_cdgbc .BBox .ToPdfObject ());};if _cdgbc .AntiAlias !=nil {_ggbce .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cdgbc .AntiAlias );};return _affaf ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_edab *PdfWriter )SetOptimizer (optimizer Optimizer ){_edab ._agabb =optimizer };func (_eaa *PdfReader )newPdfActionHideFromDict (_gebb *_da .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gebb .Get ("\u0054"),H :_gebb .Get ("\u0048")},nil ;};func (_gbgd *PdfFunctionType0 )processSamples ()error {_acbc :=_ee .ResampleBytes (_gbgd ._bdaf ,_gbgd .BitsPerSample );_gbgd ._ddfa =_acbc ;return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bcbdf *PdfReader )CheckAccessRights (password []byte )(bool ,_ae .Permissions ,error ){return _bcbdf ._baeg .CheckAccessRights (password );};func (_bgbf *PdfReader )newPdfAnnotationCaretFromDict (_dbe *_da .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gae :=PdfAnnotationCaret {};_afaf ,_fade :=_bgbf .newPdfAnnotationMarkupFromDict (_dbe );if _fade !=nil {return nil ,_fade ;};_gae .PdfAnnotationMarkup =_afaf ;_gae .RD =_dbe .Get ("\u0052\u0044");_gae .Sy =_dbe .Get ("\u0053\u0079");return &_gae ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func _decgb (_ggfd _da .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_eccb :=NewPdfColorspaceSpecialIndexed ();if _bdcaa ,_ebde :=_ggfd .(*_da .PdfIndirectObject );_ebde {_eccb ._aefc =_bdcaa ;};_ggfd =_da .TraceToDirectObject (_ggfd );_dggdb ,_eggb :=_ggfd .(*_da .PdfObjectArray );if !_eggb {return nil ,_bd .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dggdb .Len ()!=4{return nil ,_bd .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ggfd =_dggdb .Get (0);_geef ,_eggb :=_ggfd .(*_da .PdfObjectName );if !_eggb {return nil ,_bd .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_geef !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_bd .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_ggfd =_dggdb .Get (1);_cgbc ,_ebcb :=DetermineColorspaceNameFromPdfObject (_ggfd );if _cgbc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_cgbc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bdd .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_cgbc );return nil ,_abbae ;};_ebcbb ,_ebcb :=NewPdfColorspaceFromPdfObject (_ggfd );if _ebcb !=nil {return nil ,_ebcb ;};_eccb .Base =_ebcbb ;_ggfd =_dggdb .Get (2);_bcaa ,_ebcb :=_da .GetNumberAsInt64 (_ggfd );if _ebcb !=nil {return nil ,_ebcb ;};if _bcaa > 255{return nil ,_bd .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_eccb .HiVal =int (_bcaa );_ggfd =_dggdb .Get (3);_eccb .Lookup =_ggfd ;_ggfd =_da .TraceToDirectObject (_ggfd );var _defg []byte ;if _bgeb ,_adad :=_ggfd .(*_da .PdfObjectString );_adad {_defg =_bgeb .Bytes ();_bdd .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_defg );}else if _dfgd ,_ecbg :=_ggfd .(*_da .PdfObjectStream );_ecbg {_bdd .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_ggfd .String ());_bdd .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dfgd .Stream ),_dfgd .Stream );_dddf ,_gcbc :=_da .DecodeStream (_dfgd );if _gcbc !=nil {return nil ,_gcbc ;};_bdd .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dddf ),_dddf );_defg =_dddf ;}else {_bdd .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ggfd );return nil ,_bd .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_defg )< _eccb .Base .GetNumComponents ()*(_eccb .HiVal +1){_bdd .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_bdd .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_defg ),_eccb .Base .GetNumComponents (),_eccb .HiVal );}else {_defg =_defg [:_eccb .Base .GetNumComponents ()*(_eccb .HiVal +1)];};_eccb ._bfceg =_defg ;return _eccb ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_fffd :=&PdfSignature {Type :_da .MakeName ("\u0053\u0069\u0067"),Handler :handler };_baef :=&pdfSignDictionary {PdfObjectDictionary :_da .MakeDict (),_bega :&handler ,_aefa :_fffd };_fffd ._caadf =_da .MakeIndirectObject (_baef );return _fffd ;};

// ToPdfObject implements interface PdfModel.
func (_efac *PdfBorderStyle )ToPdfObject ()_da .PdfObject {_bbf :=_da .MakeDict ();if _efac ._edaf !=nil {if _bbebb ,_bag :=_efac ._edaf .(*_da .PdfIndirectObject );_bag {_bbebb .PdfObject =_bbf ;};};_bbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _efac .W !=nil {_bbf .Set ("\u0057",_da .MakeFloat (*_efac .W ));};if _efac .S !=nil {_bbf .Set ("\u0053",_da .MakeName (_efac .S .GetPdfName ()));};if _efac .D !=nil {_bbf .Set ("\u0044",_da .MakeArrayFromIntegers (*_efac .D ));};if _efac ._edaf !=nil {return _efac ._edaf ;};return _bbf ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_bdedg *PdfPageResourcesColorspaces )Set (key _da .PdfObjectName ,val PdfColorspace ){if _ ,_dfbe :=_bdedg .Colorspaces [string (key )];!_dfbe {_bdedg .Names =append (_bdedg .Names ,string (key ));};_bdedg .Colorspaces [string (key )]=val ;};

// StdFontName represents name of a standard font.
type StdFontName =_bgb .StdFontName ;

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gaa *PdfAnnotation )GetContext ()PdfModel {if _gaa ==nil {return nil ;};return _gaa ._cae ;};func (_gafd *PdfReader )newPdfActionResetFormFromDict (_aac *_da .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_aac .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_aac .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// L returns the value of the L component of the color.
func (_bgaeg *PdfColorLab )L ()float64 {return float64 (_bgaeg [0])};func (_ebb *PdfAnnotation )String ()string {_eda :="";_caf ,_bafe :=_ebb .ToPdfObject ().(*_da .PdfIndirectObject );if _bafe {_eda =_bd .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ebb ._cae ,_caf .PdfObject .String ());};return _eda ;};func (_cefd *PdfReader )newPdfAnnotationRedactFromDict (_dag *_da .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_acc :=PdfAnnotationRedact {};_gefg ,_ccfe :=_cefd .newPdfAnnotationMarkupFromDict (_dag );if _ccfe !=nil {return nil ,_ccfe ;};_acc .PdfAnnotationMarkup =_gefg ;_acc .QuadPoints =_dag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_acc .IC =_dag .Get ("\u0049\u0043");_acc .RO =_dag .Get ("\u0052\u004f");_acc .OverlayText =_dag .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_acc .Repeat =_dag .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_acc .DA =_dag .Get ("\u0044\u0041");_acc .Q =_dag .Get ("\u0051");return &_acc ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_aecaf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gddag ,_eddb :=_da .GetNumbersAsFloat (objects );if _eddb !=nil {return nil ,_eddb ;};return _aecaf .ColorFromFloats (_gddag );};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ggcd *PdfOutlineTreeNode )GetContainingPdfObject ()_da .PdfObject {return _ggcd .GetContext ().GetContainingPdfObject ();};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ceef *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_abea :=_ee .NewReader (img .getBase ());_afeg :=_agc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_geagf :=_ee .NewWriter (_afeg );_bdfa :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_gegd :=make ([]uint32 ,3);var (_fgcb error ;_dfbc ,_gbeeb ,_ccaf ,_gefb ,_ecaa ,_dgfbe float64 ;);for {_fgcb =_abea .ReadSamples (_gegd );if _fgcb ==_af .EOF {break ;}else if _fgcb !=nil {return img ,_fgcb ;};_dfbc =float64 (_gegd [0])/_bdfa ;_gbeeb =float64 (_gegd [1])/_bdfa ;_ccaf =float64 (_gegd [2])/_bdfa ;_gefb =_ceef .Matrix [0]*_ec .Pow (_dfbc ,_ceef .Gamma [0])+_ceef .Matrix [3]*_ec .Pow (_gbeeb ,_ceef .Gamma [1])+_ceef .Matrix [6]*_ec .Pow (_ccaf ,_ceef .Gamma [2]);_ecaa =_ceef .Matrix [1]*_ec .Pow (_dfbc ,_ceef .Gamma [0])+_ceef .Matrix [4]*_ec .Pow (_gbeeb ,_ceef .Gamma [1])+_ceef .Matrix [7]*_ec .Pow (_ccaf ,_ceef .Gamma [2]);_dgfbe =_ceef .Matrix [2]*_ec .Pow (_dfbc ,_ceef .Gamma [0])+_ceef .Matrix [5]*_ec .Pow (_gbeeb ,_ceef .Gamma [1])+_ceef .Matrix [8]*_ec .Pow (_ccaf ,_ceef .Gamma [2]);_dfbc =3.240479*_gefb +-1.537150*_ecaa +-0.498535*_dgfbe ;_gbeeb =-0.969256*_gefb +1.875992*_ecaa +0.041556*_dgfbe ;_ccaf =0.055648*_gefb +-0.204043*_ecaa +1.057311*_dgfbe ;_dfbc =_ec .Min (_ec .Max (_dfbc ,0),1.0);_gbeeb =_ec .Min (_ec .Max (_gbeeb ,0),1.0);_ccaf =_ec .Min (_ec .Max (_ccaf ,0),1.0);_gegd [0]=uint32 (_dfbc *_bdfa );_gegd [1]=uint32 (_gbeeb *_bdfa );_gegd [2]=uint32 (_ccaf *_bdfa );if _fgcb =_geagf .WriteSamples (_gegd );_fgcb !=nil {return img ,_fgcb ;};};return _bcfdb (&_afeg ),nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_ccbf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_baff ,_baa :=color .(*PdfColorDeviceCMYK );if !_baa {_bdd .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffca :=_baff .C ();_becgc :=_baff .M ();_ccadg :=_baff .Y ();_ggff :=_baff .K ();_ffca =_ffca *(1-_ggff )+_ggff ;_becgc =_becgc *(1-_ggff )+_ggff ;_ccadg =_ccadg *(1-_ggff )+_ggff ;_cddcg :=1-_ffca ;_gada :=1-_becgc ;_cfea :=1-_ccadg ;return NewPdfColorDeviceRGB (_cddcg ,_gada ,_cfea ),nil ;};func (_bgdb *PdfReader )newPdfAnnotationPolyLineFromDict (_gagc *_da .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bbc :=PdfAnnotationPolyLine {};_faed ,_aegb :=_bgdb .newPdfAnnotationMarkupFromDict (_gagc );if _aegb !=nil {return nil ,_aegb ;};_bbc .PdfAnnotationMarkup =_faed ;_bbc .Vertices =_gagc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bbc .LE =_gagc .Get ("\u004c\u0045");_bbc .BS =_gagc .Get ("\u0042\u0053");_bbc .IC =_gagc .Get ("\u0049\u0043");_bbc .BE =_gagc .Get ("\u0042\u0045");_bbc .IT =_gagc .Get ("\u0049\u0054");_bbc .Measure =_gagc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bbc ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cdadf *PdfPageResources )GetShadingByName (keyName _da .PdfObjectName )(*PdfShading ,bool ){if _cdadf .Shading ==nil {return nil ,false ;};_gefd ,_aeeceb :=_da .TraceToDirectObject (_cdadf .Shading ).(*_da .PdfObjectDictionary );if !_aeeceb {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdadf .Shading );return nil ,false ;};if _fbcf :=_gefd .Get (keyName );_fbcf !=nil {_gbfed ,_fbcgf :=_beaf (_fbcf );if _fbcgf !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fbcgf );return nil ,false ;};return _gbfed ,true ;};return nil ,false ;};

// GetOptimizer returns current PDF optimizer.
func (_bcdec *PdfWriter )GetOptimizer ()Optimizer {return _bcdec ._agabb };

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_fe :=NewPdfAction ();_adg :=&PdfActionImportData {};_adg .PdfAction =_fe ;_fe .SetContext (_adg );return _adg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gbcca *PdfAnnotation )GetContainingPdfObject ()_da .PdfObject {return _gbcca ._dda };

// ToPdfObject implements interface PdfModel.
func (_gbaa *PdfAnnotationSquare )ToPdfObject ()_da .PdfObject {_gbaa .PdfAnnotation .ToPdfObject ();_fdgd :=_gbaa ._dda ;_bebf :=_fdgd .PdfObject .(*_da .PdfObjectDictionary );if _gbaa .PdfAnnotationMarkup !=nil {_gbaa .PdfAnnotationMarkup .appendToPdfDictionary (_bebf );};_bebf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bebf .SetIfNotNil ("\u0042\u0053",_gbaa .BS );_bebf .SetIfNotNil ("\u0049\u0043",_gbaa .IC );_bebf .SetIfNotNil ("\u0042\u0045",_gbaa .BE );_bebf .SetIfNotNil ("\u0052\u0044",_gbaa .RD );return _fdgd ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_ceba *XObjectImage )GetContainingPdfObject ()_da .PdfObject {return _ceba ._edcgf };

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _da .PdfObject ;_bfceg []byte ;_aefc *_da .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_gfgd *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgagc ,_befc :=_da .GetNumbersAsFloat (objects );if _befc !=nil {return nil ,_befc ;};return _gfgd .ColorFromFloats (_bgagc );};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_da .PdfObjectArray ;Matrix *_da .PdfObjectArray ;Function []PdfFunction ;};func _dfdgb (_cgfee *[]*PdfField ,_fdeg FieldFilterFunc ,_fbfde bool )[]*PdfField {if _cgfee ==nil {return nil ;};_acaad :=*_cgfee ;if len (*_cgfee )==0{return nil ;};_dfeg :=_acaad [:0];if _fdeg ==nil {_fdeg =func (*PdfField )bool {return true };};var _feac []*PdfField ;for _ ,_dfaae :=range _acaad {_bbeea :=_fdeg (_dfaae );if _bbeea {_feac =append (_feac ,_dfaae );if len (_dfaae .Kids )> 0{_feac =append (_feac ,_dfdgb (&_dfaae .Kids ,_fdeg ,_fbfde )...);};};if !_fbfde ||!_bbeea ||len (_dfaae .Kids )> 0{_dfeg =append (_dfeg ,_dfaae );};};*_cgfee =_dfeg ;return _feac ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_edac *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afabb ,_feef :=_da .GetNumbersAsFloat (objects );if _feef !=nil {return nil ,_feef ;};return _edac .ColorFromFloats (_afabb );};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cfba :=NewPdfAnnotation ();_deb :=&PdfAnnotationRedact {};_deb .PdfAnnotation =_cfba ;_deb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfba .SetContext (_deb );return _deb ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_beggf pdfFontSimple )GetRuneMetrics (r rune )(_bgb .CharMetrics ,bool ){if _beggf ._aegbb !=nil {_gbddg ,_ggfcd :=_beggf ._aegbb [r ];if _ggfcd {return _gbddg ,true ;};};_bfbg :=_beggf .Encoder ();if _bfbg ==nil {_bdd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_beggf );return _bgb .CharMetrics {},false ;};_fdfad ,_edcfa :=_bfbg .RuneToCharcode (r );if !_edcfa {if r !=' '{_bdd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_beggf );};return _bgb .CharMetrics {},false ;};_eadec ,_eacd :=_beggf .GetCharMetrics (_fdfad );return _eadec ,_eacd ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_dbebb *PdfPageResources )GetXObjectByName (keyName _da .PdfObjectName )(*_da .PdfObjectStream ,XObjectType ){if _dbebb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_eddaf ,_gcfag :=_da .TraceToDirectObject (_dbebb .XObject ).(*_da .PdfObjectDictionary );if !_gcfag {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_da .TraceToDirectObject (_dbebb .XObject ));return nil ,XObjectTypeUndefined ;};if _cddddc :=_eddaf .Get (keyName );_cddddc !=nil {_cefac ,_befda :=_da .GetStream (_cddddc );if !_befda {_bdd .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_cddddc );return nil ,XObjectTypeUndefined ;};_fbcgea :=_cefac .PdfObjectDictionary ;_aeaa ,_befda :=_da .TraceToDirectObject (_fbcgea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_da .PdfObjectName );if !_befda {_bdd .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fbcgea .String ());return nil ,XObjectTypeUndefined ;};if *_aeaa =="\u0049\u006d\u0061g\u0065"{return _cefac ,XObjectTypeImage ;}else if *_aeaa =="\u0046\u006f\u0072\u006d"{return _cefac ,XObjectTypeForm ;}else if *_aeaa =="\u0050\u0053"{return _cefac ,XObjectTypePS ;}else {_bdd .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_aeaa );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};var _accbbe ="";

// AddImageResource adds an image to the XObject resources.
func (_dddff *PdfPage )AddImageResource (name _da .PdfObjectName ,ximg *XObjectImage )error {var _feec *_da .PdfObjectDictionary ;if _dddff .Resources .XObject ==nil {_feec =_da .MakeDict ();_dddff .Resources .XObject =_feec ;}else {var _dcgga bool ;_feec ,_dcgga =(_dddff .Resources .XObject ).(*_da .PdfObjectDictionary );if !_dcgga {return _dbf .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_feec .Set (name ,ximg .ToPdfObject ());return nil ;};func (_ffdbag *PdfReader )newPdfPageFromDict (_bfcba *_da .PdfObjectDictionary )(*PdfPage ,error ){_gefc :=NewPdfPage ();_gefc ._decgdc =_bfcba ;_ggfa :=*_bfcba ;_ebgb ,_abgc :=_ggfa .Get ("\u0054\u0079\u0070\u0065").(*_da .PdfObjectName );if !_abgc {return nil ,_dbf .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_ebgb !="\u0050\u0061\u0067\u0065"{return nil ,_dbf .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _cbfbb :=_ggfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cbfbb !=nil {_gefc .Parent =_cbfbb ;};if _bdgab :=_ggfa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bdgab !=nil {_gdfe ,_egcce :=_da .GetString (_bdgab );if !_egcce {return nil ,_dbf .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_ecdcg ,_fbbd :=NewPdfDate (_gdfe .Str ());if _fbbd !=nil {return nil ,_fbbd ;};_gefc .LastModified =&_ecdcg ;};if _dgebd :=_ggfa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dgebd !=nil &&!_da .IsNullObject (_dgebd ){_dffa ,_dgbca :=_da .GetDict (_dgebd );if !_dgbca {return nil ,_bd .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dgebd );};var _agba error ;_gefc .Resources ,_agba =NewPdfPageResourcesFromDict (_dffa );if _agba !=nil {return nil ,_agba ;};}else {_bffdb ,_cbge :=_gefc .getParentResources ();if _cbge !=nil {return nil ,_cbge ;};if _bffdb ==nil {_bffdb =NewPdfPageResources ();};_gefc .Resources =_bffdb ;};if _aecag :=_ggfa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_aecag !=nil {_ceeba ,_gcdbbe :=_da .GetArray (_aecag );if !_gcdbbe {return nil ,_dbf .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dddfg error ;_gefc .MediaBox ,_dddfg =NewPdfRectangle (*_ceeba );if _dddfg !=nil {return nil ,_dddfg ;};};if _bccg :=_ggfa .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bccg !=nil {_cbecd ,_bbdef :=_da .GetArray (_bccg );if !_bbdef {return nil ,_dbf .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gfagc error ;_gefc .CropBox ,_gfagc =NewPdfRectangle (*_cbecd );if _gfagc !=nil {return nil ,_gfagc ;};};if _fggg :=_ggfa .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fggg !=nil {_adeff ,_ddgbd :=_da .GetArray (_fggg );if !_ddgbd {return nil ,_dbf .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _egbde error ;_gefc .BleedBox ,_egbde =NewPdfRectangle (*_adeff );if _egbde !=nil {return nil ,_egbde ;};};if _effbe :=_ggfa .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_effbe !=nil {_cfbeg ,_cbbf :=_da .GetArray (_effbe );if !_cbbf {return nil ,_dbf .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gaaad error ;_gefc .TrimBox ,_gaaad =NewPdfRectangle (*_cfbeg );if _gaaad !=nil {return nil ,_gaaad ;};};if _dfdd :=_ggfa .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dfdd !=nil {_cdcg ,_gafc :=_da .GetArray (_dfdd );if !_gafc {return nil ,_dbf .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _deff error ;_gefc .ArtBox ,_deff =NewPdfRectangle (*_cdcg );if _deff !=nil {return nil ,_deff ;};};if _gage :=_ggfa .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gage !=nil {_gefc .BoxColorInfo =_gage ;};if _dfgf :=_ggfa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dfgf !=nil {_gefc .Contents =_dfgf ;};if _cggg :=_ggfa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_cggg !=nil {_gdgb ,_ffee :=_da .GetInt (_cggg );if !_ffee {return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_efgcc :=int64 (*_gdgb );_gefc .Rotate =&_efgcc ;};if _acbgb :=_ggfa .Get ("\u0047\u0072\u006fu\u0070");_acbgb !=nil {_gefc .Group =_acbgb ;};if _febee :=_ggfa .Get ("\u0054\u0068\u0075m\u0062");_febee !=nil {_gefc .Thumb =_febee ;};if _eegb :=_ggfa .Get ("\u0042");_eegb !=nil {_gefc .B =_eegb ;};if _cgdfb :=_ggfa .Get ("\u0044\u0075\u0072");_cgdfb !=nil {_gefc .Dur =_cgdfb ;};if _edbdb :=_ggfa .Get ("\u0054\u0072\u0061n\u0073");_edbdb !=nil {_gefc .Trans =_edbdb ;};if _ecddf :=_ggfa .Get ("\u0041\u0041");_ecddf !=nil {_gefc .AA =_ecddf ;};if _cafdgc :=_ggfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cafdgc !=nil {_gefc .Metadata =_cafdgc ;};if _dgaf :=_ggfa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dgaf !=nil {_gefc .PieceInfo =_dgaf ;};if _edacb :=_ggfa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_edacb !=nil {_gefc .StructParents =_edacb ;};if _gacdd :=_ggfa .Get ("\u0049\u0044");_gacdd !=nil {_gefc .ID =_gacdd ;};if _edbc :=_ggfa .Get ("\u0050\u005a");_edbc !=nil {_gefc .PZ =_edbc ;};if _fdca :=_ggfa .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_fdca !=nil {_gefc .SeparationInfo =_fdca ;};if _bgfcg :=_ggfa .Get ("\u0054\u0061\u0062\u0073");_bgfcg !=nil {_gefc .Tabs =_bgfcg ;};if _cfddc :=_ggfa .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_cfddc !=nil {_gefc .TemplateInstantiated =_cfddc ;};if _geced :=_ggfa .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_geced !=nil {_gefc .PresSteps =_geced ;};if _edfca :=_ggfa .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_edfca !=nil {_gefc .UserUnit =_edfca ;};if _ccab :=_ggfa .Get ("\u0056\u0050");_ccab !=nil {_gefc .VP =_ccab ;};if _bgcdd :=_ggfa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_bgcdd !=nil {_gefc .Annots =_bgcdd ;};_gefc ._acba =_ffdbag ;return _gefc ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _da .PdfObject ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _da .PdfObject ;NewWindow _da .PdfObject ;T _da .PdfObject ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cdab *_da .PdfIndirectObject ;};var _bgce ="";

// BaseFont returns the font's "BaseFont" field.
func (_efgf *PdfFont )BaseFont ()string {return _efgf .baseFields ()._eeacc };

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gfafc *PdfPageResources )HasColorspaceByName (keyName _da .PdfObjectName )bool {_dcgba ,_ggcbg :=_gfafc .GetColorspaces ();if _ggcbg !=nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggcbg );return false ;};if _dcgba ==nil {return false ;};_ ,_caeac :=_dcgba .Colorspaces [string (keyName )];return _caeac ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};type pdfCIDFontType0 struct{fontCommon ;_gffdf *_da .PdfIndirectObject ;_addbb _ceb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_da .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _da .PdfObject ;W _da .PdfObject ;DW2 _da .PdfObject ;W2 _da .PdfObject ;_beeg map[_ceb .CharCode ]float64 ;_bddad float64 ;};

// ToPdfObject converts rectangle to a PDF object.
func (_agggef *PdfRectangle )ToPdfObject ()_da .PdfObject {return _da .MakeArray (_da .MakeFloat (_agggef .Llx ),_da .MakeFloat (_agggef .Lly ),_da .MakeFloat (_agggef .Urx ),_da .MakeFloat (_agggef .Ury ));};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _da .PdfObject )(*PdfFont ,error ){return _cdeee (fontObj ,true )};func (_egf *PdfReader )newPdfActionLaunchFromDict (_bab *_da .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ceca ,_aga :=_ade (_bab .Get ("\u0046"));if _aga !=nil {return nil ,_aga ;};return &PdfActionLaunch {Win :_bab .Get ("\u0057\u0069\u006e"),Mac :_bab .Get ("\u004d\u0061\u0063"),Unix :_bab .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bab .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ceca },nil ;};

// String returns a string representation of the field.
func (_fdeee *PdfField )String ()string {if _aegfg ,_fbac :=_fdeee .ToPdfObject ().(*_da .PdfIndirectObject );_fbac {return _bd .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fdeee ._bdga ,_aegfg .PdfObject .String ());};return "";};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_dfgce []byte )(_ebcd int ,_fedfb error );};func _bcbba ()_c .Time {return _gaaf };

// A returns the value of the A component of the color.
func (_effa *PdfColorCalRGB )A ()float64 {return float64 (_effa [0])};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_cebdd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _da .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _da .PdfObject ;Contents _da .PdfObject ;Rotate *int64 ;Group _da .PdfObject ;Thumb _da .PdfObject ;B _da .PdfObject ;Dur _da .PdfObject ;Trans _da .PdfObject ;AA _da .PdfObject ;Metadata _da .PdfObject ;PieceInfo _da .PdfObject ;StructParents _da .PdfObject ;ID _da .PdfObject ;PZ _da .PdfObject ;SeparationInfo _da .PdfObject ;Tabs _da .PdfObject ;TemplateInstantiated _da .PdfObject ;PresSteps _da .PdfObject ;UserUnit _da .PdfObject ;VP _da .PdfObject ;Annots _da .PdfObject ;_fcgd []*PdfAnnotation ;_decgdc *_da .PdfObjectDictionary ;_bcce *_da .PdfIndirectObject ;_acba *PdfReader ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ggbfb *PdfPage )Duplicate ()*PdfPage {var _dbgbf PdfPage ;_dbgbf =*_ggbfb ;_dbgbf ._decgdc =_da .MakeDict ();_dbgbf ._bcce =_da .MakeIndirectObject (_dbgbf ._decgdc );return &_dbgbf ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_aggfb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gcaf :=_ee .NewReader (img .getBase ());_acdg :=_agc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_acbb :=_ee .NewWriter (_acdg );_fdee :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_bddg :=make ([]uint32 ,3);var (_faad uint32 ;ANorm ,X ,Y ,Z ,_cgbg ,_beff ,_gff float64 ;_aedae error ;);for {_faad ,_aedae =_gcaf .ReadSample ();if _aedae ==_af .EOF {break ;}else if _aedae !=nil {return img ,_aedae ;};ANorm =float64 (_faad )/_fdee ;X =_aggfb .WhitePoint [0]*_ec .Pow (ANorm ,_aggfb .Gamma );Y =_aggfb .WhitePoint [1]*_ec .Pow (ANorm ,_aggfb .Gamma );Z =_aggfb .WhitePoint [2]*_ec .Pow (ANorm ,_aggfb .Gamma );_cgbg =3.240479*X +-1.537150*Y +-0.498535*Z ;_beff =-0.969256*X +1.875992*Y +0.041556*Z ;_gff =0.055648*X +-0.204043*Y +1.057311*Z ;_cgbg =_ec .Min (_ec .Max (_cgbg ,0),1.0);_beff =_ec .Min (_ec .Max (_beff ,0),1.0);_gff =_ec .Min (_ec .Max (_gff ,0),1.0);_bddg [0]=uint32 (_cgbg *_fdee );_bddg [1]=uint32 (_beff *_fdee );_bddg [2]=uint32 (_gff *_fdee );if _aedae =_acbb .WriteSamples (_bddg );_aedae !=nil {return img ,_aedae ;};};return _bcfdb (&_acdg ),nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_aeffb *PdfPattern )GetContext ()PdfModel {return _aeffb ._bece };

// SetContext set the sub annotation (context).
func (_fedcd *PdfShading )SetContext (ctx PdfModel ){_fedcd ._gaaeed =ctx };func _ccda (_acgdg *_da .PdfObjectDictionary )(*PdfShadingType7 ,error ){_cgcde :=PdfShadingType7 {};_eeceb :=_acgdg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eeceb ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_aefda ,_dafcb :=_eeceb .(*_da .PdfObjectInteger );if !_dafcb {_bdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eeceb );return nil ,_da .ErrTypeError ;};_cgcde .BitsPerCoordinate =_aefda ;_eeceb =_acgdg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eeceb ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_aefda ,_dafcb =_eeceb .(*_da .PdfObjectInteger );if !_dafcb {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eeceb );return nil ,_da .ErrTypeError ;};_cgcde .BitsPerComponent =_aefda ;_eeceb =_acgdg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eeceb ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_aefda ,_dafcb =_eeceb .(*_da .PdfObjectInteger );if !_dafcb {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eeceb );return nil ,_da .ErrTypeError ;};_cgcde .BitsPerComponent =_aefda ;_eeceb =_acgdg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eeceb ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dbcd ,_dafcb :=_eeceb .(*_da .PdfObjectArray );if !_dafcb {_bdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeceb );return nil ,_da .ErrTypeError ;};_cgcde .Decode =_dbcd ;if _aafcf :=_acgdg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aafcf !=nil {_cgcde .Function =[]PdfFunction {};if _egccc ,_cgccf :=_aafcf .(*_da .PdfObjectArray );_cgccf {for _ ,_ecfcg :=range _egccc .Elements (){_baece ,_cccfc :=_ffdgg (_ecfcg );if _cccfc !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cccfc );return nil ,_cccfc ;};_cgcde .Function =append (_cgcde .Function ,_baece );};}else {_acedf ,_bgddd :=_ffdgg (_aafcf );if _bgddd !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgddd );return nil ,_bgddd ;};_cgcde .Function =append (_cgcde .Function ,_acedf );};};return &_cgcde ,nil ;};func (_ggcb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ggcb ._daeea };func (_gcfa *PdfAppender )updateObjectsDeep (_bcfa _da .PdfObject ,_bgfd map[_da .PdfObject ]struct{}){if _bgfd ==nil {_bgfd =map[_da .PdfObject ]struct{}{};};if _ ,_cecac :=_bgfd [_bcfa ];_cecac ||_bcfa ==nil {return ;};_bgfd [_bcfa ]=struct{}{};_affc :=_da .ResolveReferencesDeep (_bcfa ,_gcfa ._fdc );if _affc !=nil {_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_affc );};switch _fbcc :=_bcfa .(type ){case *_da .PdfIndirectObject :switch {case _fbcc .GetParser ()==_gcfa ._bceb ._baeg :return ;case _fbcc .GetParser ()==_gcfa .Reader ._baeg :_feb ,_ :=_gcfa ._bceb .GetIndirectObjectByNumber (int (_fbcc .ObjectNumber ));_geaf ,_bgddf :=_feb .(*_da .PdfIndirectObject );if _bgddf &&_geaf !=nil {if _geaf .PdfObject !=_fbcc .PdfObject &&_geaf .PdfObject .WriteString ()!=_fbcc .PdfObject .WriteString (){_gcfa .addNewObject (_bcfa );_gcfa ._ebdd [_bcfa ]=_fbcc .ObjectNumber ;};};default:_gcfa .addNewObject (_bcfa );};_gcfa .updateObjectsDeep (_fbcc .PdfObject ,_bgfd );case *_da .PdfObjectArray :for _ ,_cddf :=range _fbcc .Elements (){_gcfa .updateObjectsDeep (_cddf ,_bgfd );};case *_da .PdfObjectDictionary :for _ ,_gbdb :=range _fbcc .Keys (){_gcfa .updateObjectsDeep (_fbcc .Get (_gbdb ),_bgfd );};case *_da .PdfObjectStreams :if _fbcc .GetParser ()!=_gcfa ._bceb ._baeg {for _ ,_abgb :=range _fbcc .Elements (){_gcfa .updateObjectsDeep (_abgb ,_bgfd );};};case *_da .PdfObjectStream :switch {case _fbcc .GetParser ()==_gcfa ._bceb ._baeg :return ;case _fbcc .GetParser ()==_gcfa .Reader ._baeg :if _geafb ,_dbba :=_gcfa ._bceb ._baeg .LookupByReference (_fbcc .PdfObjectReference );_dbba ==nil {var _agcd bool ;if _gfgb ,_dbef :=_da .GetStream (_geafb );_dbef &&_baf .Equal (_gfgb .Stream ,_fbcc .Stream ){_agcd =true ;};if _def ,_cead :=_da .GetDict (_geafb );_agcd &&_cead {_agcd =_def .WriteString ()==_fbcc .PdfObjectDictionary .WriteString ();};if _agcd {return ;};};if _fbcc .ObjectNumber !=0{_gcfa ._ebdd [_bcfa ]=_fbcc .ObjectNumber ;};default:if _ ,_cefc :=_gcfa ._bgbc [_bcfa ];!_cefc {_gcfa .addNewObject (_bcfa );};};_gcfa .updateObjectsDeep (_fbcc .PdfObjectDictionary ,_bgfd );};};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ded :=NewPdfAnnotation ();_ace :=&PdfAnnotationCircle {};_ace .PdfAnnotation =_ded ;_ace .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ded .SetContext (_ace );return _ace ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_eeee *PdfAppender )UpdatePage (page *PdfPage ){_eeee .updateObjectsDeep (page .ToPdfObject (),nil )};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gedb *PdfShading )GetContext ()PdfModel {return _gedb ._gaaeed };

// GetFontDescriptor returns the font descriptor for `font`.
func (_cdaff PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _cdaff ._fdbf .getFontDescriptor (),nil ;};func _gabf (_ddff []byte )(_gbcg ,_afcb string ,_bcgaa error ){_bdd .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_ddff ));_ecfdb :=_cgdbb .FindIndex (_ddff );if _ecfdb ==nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_da .ErrTypeError ;};_eecc :=_ecfdb [1];_aacdd :=_dg .Index (string (_ddff [_eecc :]),_cacg );if _aacdd < 0{_gbcg =string (_ddff [_eecc :]);return _gbcg ,"",nil ;};_cgfc :=_eecc +_aacdd ;_gbcg =string (_ddff [_eecc :_cgfc ]);_bbdea :=_cgfc ;_aacdd =_dg .Index (string (_ddff [_bbdea :]),_ccff );if _aacdd < 0{_bdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcgaa );return "","",_da .ErrTypeError ;};_bffg :=_bbdea +_aacdd ;_afcb =string (_ddff [_bbdea :_bffg ]);return _gbcg ,_afcb ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_ccfc []_da .PdfObject )([]_da .PdfObject ,error );};

// SetContext sets the sub action (context).
func (_agf *PdfAction )SetContext (ctx PdfModel ){_agf ._cg =ctx };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_gdbgd *Image )ConvertToBinary ()error {if _gdbgd .ColorComponents ==1&&_gdbgd .BitsPerComponent ==1{return nil ;};_ccafd ,_cgaf :=_gdbgd .ToGoImage ();if _cgaf !=nil {return _cgaf ;};_dacde ,_cgaf :=_agc .MonochromeConverter .Convert (_ccafd );if _cgaf !=nil {return _cgaf ;};_gdbgd .BitsPerComponent =1;_gdbgd .ColorComponents =1;_gdbgd .Data =_dacde .Base ().Data ;return nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _da .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_da .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_cfbgd ,_gbfc :=encoder .EncodeBytes (img .Data );if _gbfc !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gbfc );return nil ,_gbfc ;};_acegc :=NewXObjectImage ();_dbdf :=img .Width ;_gbdda :=img .Height ;_acegc .Width =&_dbdf ;_acegc .Height =&_gbdda ;_dgdcd :=img .BitsPerComponent ;_acegc .BitsPerComponent =&_dgdcd ;_acegc .Filter =encoder ;_acegc .Stream =_cfbgd ;if cs ==nil {if img .ColorComponents ==1{_acegc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_acegc .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_acegc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_dbf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_acegc .ColorSpace =cs ;};if len (img ._afefc )!=0{_fgcab :=NewXObjectImage ();_fgcab .Filter =encoder ;_fefacg ,_bfcfg :=encoder .EncodeBytes (img ._afefc );if _bfcfg !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bfcfg );return nil ,_bfcfg ;};_fgcab .Stream =_fefacg ;_fgcab .BitsPerComponent =_acegc .BitsPerComponent ;_fgcab .Width =&img .Width ;_fgcab .Height =&img .Height ;_fgcab .ColorSpace =NewPdfColorspaceDeviceGray ();_acegc .SMask =_fgcab .ToPdfObject ();}else {_acegc .SMask =xobjIn .SMask ;_acegc .ImageMask =xobjIn .ImageMask ;if _acegc .ColorSpace .GetNumComponents ()==1{_gebff (_acegc );};};return _acegc ,nil ;};func (_dgggc *PdfWriter )updateObjectNumbers (){_agbfa :=_dgggc .ObjNumOffset ;_dabf :=0;for _ ,_ggcaf :=range _dgggc ._bafa {_aadgf :=int64 (_dabf +1+_agbfa );_cdebd :=true ;if _dgggc ._adfe {if _cdaaf ,_abeb :=_dgggc ._cede [_ggcaf ];_abeb {_aadgf =_cdaaf ;_cdebd =false ;};};switch _debae :=_ggcaf .(type ){case *_da .PdfIndirectObject :_debae .ObjectNumber =_aadgf ;_debae .GenerationNumber =0;case *_da .PdfObjectStream :_debae .ObjectNumber =_aadgf ;_debae .GenerationNumber =0;case *_da .PdfObjectStreams :_debae .ObjectNumber =_aadgf ;_debae .GenerationNumber =0;default:_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_debae );continue ;};if _cdebd {_dabf ++;};};_ebbbg :=func (_fcegf _da .PdfObject )int64 {switch _fcfff :=_fcegf .(type ){case *_da .PdfIndirectObject :return _fcfff .ObjectNumber ;case *_da .PdfObjectStream :return _fcfff .ObjectNumber ;case *_da .PdfObjectStreams :return _fcfff .ObjectNumber ;};return 0;};_ce .SliceStable (_dgggc ._bafa ,func (_ebgfb ,_afbag int )bool {return _ebbbg (_dgggc ._bafa [_ebgfb ])< _ebbbg (_dgggc ._bafa [_afbag ])});};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dfca :=NewPdfAnnotation ();_cdb :=&PdfAnnotationInk {};_cdb .PdfAnnotation =_dfca ;_cdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfca .SetContext (_cdb );return _cdb ;};func (_feab *PdfReader )newPdfAcroFormFromDict (_fdfba *_da .PdfIndirectObject ,_bfecd *_da .PdfObjectDictionary )(*PdfAcroForm ,error ){_edfea :=NewPdfAcroForm ();if _fdfba !=nil {_edfea ._eedd =_fdfba ;_fdfba .PdfObject =_da .MakeDict ();};if _gceb :=_bfecd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gceb !=nil {_eeff ,_agcf :=_da .GetArray (_gceb );if !_agcf {return nil ,_bd .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gceb );};var _bgfea []*PdfField ;for _ ,_gcbdc :=range _eeff .Elements (){_dacd ,_gfdf :=_da .GetIndirect (_gcbdc );if !_gfdf {if _ ,_fddce :=_gcbdc .(*_da .PdfObjectNull );_fddce {_bdd .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_bdd .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gcbdc );return nil ,_bd .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_adadf ,_gcbce :=_feab .newPdfFieldFromIndirectObject (_dacd ,nil );if _gcbce !=nil {return nil ,_gcbce ;};_bdd .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_adadf );_bgfea =append (_bgfea ,_adadf );};_edfea .Fields =&_bgfea ;};if _baaaf :=_bfecd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_baaaf !=nil {_daea ,_cgac :=_da .GetBool (_baaaf );if _cgac {_edfea .NeedAppearances =_daea ;}else {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_baaaf );};};if _fdfbb :=_bfecd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_fdfbb !=nil {_dffgf ,_bgede :=_da .GetInt (_fdfbb );if _bgede {_edfea .SigFlags =_dffgf ;}else {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdfbb );};};if _daadc :=_bfecd .Get ("\u0043\u004f");_daadc !=nil {_fcdgd ,_ebeag :=_da .GetArray (_daadc );if _ebeag {_edfea .CO =_fcdgd ;}else {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_daadc );};};if _ddbf :=_bfecd .Get ("\u0044\u0052");_ddbf !=nil {if _dffec ,_edgab :=_da .GetDict (_ddbf );_edgab {_beebe ,_egef :=NewPdfPageResourcesFromDict (_dffec );if _egef !=nil {_bdd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_egef );return nil ,_egef ;};_edfea .DR =_beebe ;}else {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ddbf );};};if _bdgcfg :=_bfecd .Get ("\u0044\u0041");_bdgcfg !=nil {_cegdb ,_ecea :=_da .GetString (_bdgcfg );if _ecea {_edfea .DA =_cegdb ;}else {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bdgcfg );};};if _edbbe :=_bfecd .Get ("\u0051");_edbbe !=nil {_cgcfb ,_dbgcd :=_da .GetInt (_edbbe );if _dbgcd {_edfea .Q =_cgcfb ;}else {_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_edbbe );};};if _ecaec :=_bfecd .Get ("\u0058\u0046\u0041");_ecaec !=nil {_edfea .XFA =_ecaec ;};return _edfea ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_fgdf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_fgdf ._fcdbg =colorspace ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fcfa :=&PdfBorderStyle {};return _fcfa };

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gbdge *PdfOutline )GetContainingPdfObject ()_da .PdfObject {return _gbdge ._cdab };

// ValidateSignatures validates digital signatures in the document.
func (_cafdf *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _cafdf .AcroForm ==nil {return nil ,nil ;};if _cafdf .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_fbdea *PdfSignature ;_aabed *PdfField ;_ageecf SignatureHandler ;};var _egad []*sigFieldPair ;for _ ,_ddbc :=range _cafdf .AcroForm .AllFields (){if _ddbc .V ==nil {continue ;};if _ecbfg ,_geacg :=_da .GetDict (_ddbc .V );_geacg {if _facfc ,_dbecc :=_da .GetNameVal (_ecbfg .Get ("\u0054\u0079\u0070\u0065"));_dbecc &&_facfc =="\u0053\u0069\u0067"{_eeeeb ,_agfffb :=_da .GetIndirect (_ddbc .V );if !_agfffb {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_fgacf ,_gecgb :=_cafdf .newPdfSignatureFromIndirect (_eeeeb );if _gecgb !=nil {return nil ,_gecgb ;};var _dddde SignatureHandler ;for _ ,_bbaad :=range handlers {if _bbaad .IsApplicable (_fgacf ){_dddde =_bbaad ;break ;};};_egad =append (_egad ,&sigFieldPair {_fbdea :_fgacf ,_aabed :_ddbc ,_ageecf :_dddde });};};};var _gdabaa []SignatureValidationResult ;for _ ,_cbbfg :=range _egad {_aefcg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_cbbfg ._aabed }};if _cbbfg ._ageecf ==nil {_aefcg .Errors =append (_aefcg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_gdabaa =append (_gdabaa ,_aefcg );continue ;};_fegfc ,_bdebd :=_cbbfg ._ageecf .NewDigest (_cbbfg ._fbdea );if _bdebd !=nil {_aefcg .Errors =append (_aefcg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_bdebd .Error ());_gdabaa =append (_gdabaa ,_aefcg );continue ;};_aecdc :=_cbbfg ._fbdea .ByteRange ;if _aecdc ==nil {_aefcg .Errors =append (_aefcg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_gdabaa =append (_gdabaa ,_aefcg );continue ;};for _egdfe :=0;_egdfe < _aecdc .Len ();_egdfe =_egdfe +2{_fbcbc ,_ :=_da .GetNumberAsInt64 (_aecdc .Get (_egdfe ));_ggcbf ,_ :=_da .GetIntVal (_aecdc .Get (_egdfe +1));if _ ,_fdagg :=_cafdf ._aaccg .Seek (_fbcbc ,_af .SeekStart );_fdagg !=nil {return nil ,_fdagg ;};_fedba :=make ([]byte ,_ggcbf );if _ ,_agdbdg :=_cafdf ._aaccg .Read (_fedba );_agdbdg !=nil {return nil ,_agdbdg ;};_fegfc .Write (_fedba );};_eceeb ,_bdebd :=_cbbfg ._ageecf .Validate (_cbbfg ._fbdea ,_fegfc );if _bdebd !=nil {return nil ,_bdebd ;};_eceeb .Name =_cbbfg ._fbdea .Name .Decoded ();_eceeb .Reason =_cbbfg ._fbdea .Reason .Decoded ();if _cbbfg ._fbdea .M !=nil {_afgg ,_fgcg :=NewPdfDate (_cbbfg ._fbdea .M .String ());if _fgcg !=nil {_eceeb .Errors =append (_eceeb .Errors ,_fgcg .Error ());continue ;};_eceeb .Date =_afgg ;};_eceeb .ContactInfo =_cbbfg ._fbdea .ContactInfo .Decoded ();_eceeb .Location =_cbbfg ._fbdea .Location .Decoded ();_eceeb .Fields =_aefcg .Fields ;_gdabaa =append (_gdabaa ,_eceeb );};return _gdabaa ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _da .PdfObject ;IsMap _da .PdfObject ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fg :=NewPdfAction ();_fga :=&PdfActionGoTo {};_fga .PdfAction =_fg ;_fg .SetContext (_fga );return _fga ;};

// ImageToRGB convert an indexed image to RGB.
func (_caccb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_caccb .Base .GetNumComponents ();if N < 1{return Image {},_bd .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_acgaa :=_agc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._afefc ,img ._eafbb );_eebdc :=_ee .NewReader (img .getBase ());_dcdc :=_ee .NewWriter (_acgaa );var (_gga uint32 ;_dacga int ;_cbab error ;);for {_gga ,_cbab =_eebdc .ReadSample ();if _cbab ==_af .EOF {break ;}else if _cbab !=nil {return img ,_cbab ;};_dacga =int (_gga );_bdd .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dacga ,N ,len (_caccb ._bfceg ));if (_dacga +1)*N > len (_caccb ._bfceg ){_dacga =len (_caccb ._bfceg )/N -1;_bdd .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dacga );if _dacga < 0{_bdd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _bcfgg :=_dacga *N ;_bcfgg < (_dacga +1)*N ;_bcfgg ++{if _cbab =_dcdc .WriteSample (uint32 (_caccb ._bfceg [_bcfgg ]));_cbab !=nil {return img ,_cbab ;};};};return _caccb .Base .ImageToRGB (_bcfdb (&_acgaa ));};

// ToPdfObject implements interface PdfModel.
func (_dae *PdfAnnotationSquiggly )ToPdfObject ()_da .PdfObject {_dae .PdfAnnotation .ToPdfObject ();_aebae :=_dae ._dda ;_bff :=_aebae .PdfObject .(*_da .PdfObjectDictionary );_dae .PdfAnnotationMarkup .appendToPdfDictionary (_bff );_bff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_bff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dae .QuadPoints );return _aebae ;};

// C returns the value of the C component of the color.
func (_eeab *PdfColorCalRGB )C ()float64 {return float64 (_eeab [2])};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _c .Time ){_gaaf =creationDate };

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _da .PdfObject ;H _da .PdfObject ;};var (_cgdbb =_gd .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_cefaf =_gd .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_degc =_gd .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_cacg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ccff ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gaeg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);func (_ebbae *PdfReader )traverseObjectData (_bbdaa _da .PdfObject )error {return _da .ResolveReferencesDeep (_bbdaa ,_ebbae ._gebbg );};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gcdfa *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gcdfa ._fcdbg !=nil {return _gcdfa ._fcdbg ,nil ;};if _gcdfa .ColorSpace ==nil {return nil ,nil ;};_ffde ,_efccc :=_fgedb (_gcdfa .ColorSpace );if _efccc !=nil {return nil ,_efccc ;};_gcdfa ._fcdbg =_ffde ;return _gcdfa ._fcdbg ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gafg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _dbf .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_baee :=field .V ;if _baee ==nil {return _dbf .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cfae :=pageNum -1;if _cfae < 0||_cfae > len (_gafg ._gca )-1{return _bd .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_fdcc :=_gafg .Reader .PageList [_cfae ];field .P =_fdcc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_da .MakeString (_bd .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_fdcc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gafg ._abbe ==_gafg ._bceb .AcroForm {_gafg ._abbe =_gafg .Reader .AcroForm ;};_acgc :=_gafg ._abbe ;if _acgc ==nil {_acgc =NewPdfAcroForm ();};_acgc .SigFlags =_da .MakeInteger (3);_fbag :=append (_acgc .AllFields (),field .PdfField );_acgc .Fields =&_fbag ;_gafg .ReplaceAcroForm (_acgc );_gafg .UpdatePage (_fdcc );_gafg ._gca [_cfae ]=_fdcc ;return nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_baeg *_da .PdfParser ;_egbc _da .PdfObject ;_cgbdb *_da .PdfIndirectObject ;_fbed *_da .PdfObjectDictionary ;_fgcfe []*_da .PdfIndirectObject ;PageList []*PdfPage ;_adabe int ;_edcc *_da .PdfObjectDictionary ;_dcggc *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_ccfcg *modelManager ;_cdffd bool ;_gebbg map[_da .PdfObject ]struct{};_aaccg _af .ReadSeeker ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_beebf *PdfPage )SetContentStreams (cStreams []string ,encoder _da .StreamEncoder )error {if len (cStreams )==0{_beebf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_da .NewRawEncoder ();};var _deee []*_da .PdfObjectStream ;for _ ,_gfdc :=range cStreams {_cgfa :=&_da .PdfObjectStream {};_aceed :=encoder .MakeStreamDict ();_dbfad ,_eagce :=encoder .EncodeBytes ([]byte (_gfdc ));if _eagce !=nil {return _eagce ;};_aceed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_da .MakeInteger (int64 (len (_dbfad ))));_cgfa .PdfObjectDictionary =_aceed ;_cgfa .Stream =[]byte (_dbfad );_deee =append (_deee ,_cgfa );};if len (_deee )==1{_beebf .Contents =_deee [0];}else {_aegbdg :=_da .MakeArray ();for _ ,_caagb :=range _deee {_aegbdg .Append (_caagb );};_beebf .Contents =_aegbdg ;};return nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_eebb *pdfFontSimple )ToPdfObject ()_da .PdfObject {if _eebb ._gecfe ==nil {_eebb ._gecfe =&_da .PdfIndirectObject {};};_gbad :=_eebb .baseFields ().asPdfObjectDictionary ("");_eebb ._gecfe .PdfObject =_gbad ;if _eebb .FirstChar !=nil {_gbad .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eebb .FirstChar );};if _eebb .LastChar !=nil {_gbad .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eebb .LastChar );};if _eebb .Widths !=nil {_gbad .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eebb .Widths );};if _eebb .Encoding !=nil {_gbad .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eebb .Encoding );}else if _eebb ._defgd !=nil {_efabf :=_eebb ._defgd .ToPdfObject ();if _efabf !=nil {_gbad .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efabf );};};return _eebb ._gecfe ;};func _bfdbe (_cggb _da .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bdd .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cggb .String (),_cggb );_bbac :=NewPdfColorspaceSpecialPattern ();if _baeb ,_aegc :=_cggb .(*_da .PdfIndirectObject );_aegc {_bbac ._aeebb =_baeb ;};_cggb =_da .TraceToDirectObject (_cggb );if _dagd ,_dabee :=_cggb .(*_da .PdfObjectName );_dabee {if *_dagd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_bd .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _bbac ,nil ;};_bgad ,_aaeg :=_cggb .(*_da .PdfObjectArray );if !_aaeg {_bdd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cggb );return nil ,_bd .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bgad .Len ()!=1&&_bgad .Len ()!=2{_bdd .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bgad );return nil ,_bd .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cggb =_bgad .Get (0);if _cac ,_cdae :=_cggb .(*_da .PdfObjectName );_cdae {if *_cac !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bdd .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_cac );return nil ,_bd .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bgad .Len ()> 1{_cggb =_bgad .Get (1);_cggb =_da .TraceToDirectObject (_cggb );_cecg ,_caec :=NewPdfColorspaceFromPdfObject (_cggb );if _caec !=nil {return nil ,_caec ;};_bbac .UnderlyingCS =_cecg ;};_bdd .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_bbac .UnderlyingCS );return _bbac ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_eadeg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _eddg ()string {return _bdd .Version };func _eecb (_ddag _da .PdfObject )(*PdfColorspaceCalRGB ,error ){_bbfdg :=NewPdfColorspaceCalRGB ();if _bedg ,_cagbb :=_ddag .(*_da .PdfIndirectObject );_cagbb {_bbfdg ._faca =_bedg ;};_ddag =_da .TraceToDirectObject (_ddag );_bcbbd ,_fdcb :=_ddag .(*_da .PdfObjectArray );if !_fdcb {return nil ,_bd .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcbbd .Len ()!=2{return nil ,_bd .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_ddag =_da .TraceToDirectObject (_bcbbd .Get (0));_bgdae ,_fdcb :=_ddag .(*_da .PdfObjectName );if !_fdcb {return nil ,_bd .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_bgdae !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_bd .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_ddag =_da .TraceToDirectObject (_bcbbd .Get (1));_fbee ,_fdcb :=_ddag .(*_da .PdfObjectDictionary );if !_fdcb {return nil ,_bd .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_ddag =_fbee .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ddag =_da .TraceToDirectObject (_ddag );_dedeg ,_fdcb :=_ddag .(*_da .PdfObjectArray );if !_fdcb {return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _dedeg .Len ()!=3{return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_efdag ,_cagd :=_dedeg .GetAsFloat64Slice ();if _cagd !=nil {return nil ,_cagd ;};_bbfdg .WhitePoint =_efdag ;_ddag =_fbee .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ddag !=nil {_ddag =_da .TraceToDirectObject (_ddag );_cdbb ,_gcgc :=_ddag .(*_da .PdfObjectArray );if !_gcgc {return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _cdbb .Len ()!=3{return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bfcb ,_dbec :=_cdbb .GetAsFloat64Slice ();if _dbec !=nil {return nil ,_dbec ;};_bbfdg .BlackPoint =_bfcb ;};_ddag =_fbee .Get ("\u0047\u0061\u006dm\u0061");if _ddag !=nil {_ddag =_da .TraceToDirectObject (_ddag );_cefdd ,_ceec :=_ddag .(*_da .PdfObjectArray );if !_ceec {return nil ,_bd .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _cefdd .Len ()!=3{return nil ,_bd .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_gcea ,_dacg :=_cefdd .GetAsFloat64Slice ();if _dacg !=nil {return nil ,_dacg ;};_bbfdg .Gamma =_gcea ;};_ddag =_fbee .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _ddag !=nil {_ddag =_da .TraceToDirectObject (_ddag );_bbdg ,_geeda :=_ddag .(*_da .PdfObjectArray );if !_geeda {return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _bbdg .Len ()!=9{_bdd .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bbdg .String ());return nil ,_bd .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_cgbb ,_adea :=_bbdg .GetAsFloat64Slice ();if _adea !=nil {return nil ,_adea ;};_bbfdg .Matrix =_cgbb ;};return _bbfdg ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_dffba *PdfReader )GetNumPages ()(int ,error ){if _dffba ._baeg .GetCrypter ()!=nil &&!_dffba ._baeg .IsAuthenticated (){return 0,_bd .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_dffba ._fgcfe ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gb *PdfActionURI )ToPdfObject ()_da .PdfObject {_gb .PdfAction .ToPdfObject ();_ecg :=_gb ._fca ;_gef :=_ecg .PdfObject .(*_da .PdfObjectDictionary );_gef .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeURI )));_gef .SetIfNotNil ("\u0055\u0052\u0049",_gb .URI );_gef .SetIfNotNil ("\u0049\u0073\u004da\u0070",_gb .IsMap );return _ecg ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bfcf *PdfReader )GetOutlines ()(*Outline ,error ){if _bfcf ==nil {return nil ,_dbf .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_cdfb :=_bfcf .GetOutlineTree ();if _cdfb ==nil {return nil ,_dbf .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _acgdc func (_fegea *PdfOutlineTreeNode ,_cbcga *[]*OutlineItem );_acgdc =func (_agdaf *PdfOutlineTreeNode ,_fgfba *[]*OutlineItem ){if _agdaf ==nil {return ;};if _agdaf ._cfbge ==nil {_bdd .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _dagdg *OutlineItem ;if _cgaad ,_eagab :=_agdaf ._cfbge .(*PdfOutlineItem );_eagab {_caebed :=_cgaad .Dest ;if (_caebed ==nil ||_da .IsNullObject (_caebed ))&&_cgaad .A !=nil {if _dbgf ,_daggg :=_da .GetDict (_cgaad .A );_daggg {_caebed ,_ =_da .GetArray (_dbgf .Get ("\u0044"));};};var _aadgc OutlineDest ;if _caebed !=nil &&!_da .IsNullObject (_caebed ){if _bggbb ,_edddc :=_befa (_caebed ,_bfcf );_edddc ==nil {_aadgc =*_bggbb ;}else {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_caebed ,_edddc );};};_dagdg =NewOutlineItem (_cgaad .Title .Decoded (),_aadgc );*_fgfba =append (*_fgfba ,_dagdg );if _cgaad .Next !=nil {_acgdc (_cgaad .Next ,_fgfba );};};if _agdaf .First !=nil {if _dagdg !=nil {_fgfba =&_dagdg .Entries ;};_acgdc (_agdaf .First ,_fgfba );};};_dgegg :=NewOutline ();_acgdc (_cdfb ,&_dgegg .Entries );return _dgegg ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_edad *PdfFilespec )getDict ()*_da .PdfObjectDictionary {if _dabab ,_bddc :=_edad ._ecaf .(*_da .PdfIndirectObject );_bddc {_cffd ,_cfdd :=_dabab .PdfObject .(*_da .PdfObjectDictionary );if !_cfdd {return nil ;};return _cffd ;}else if _cbdeb ,_dceg :=_edad ._ecaf .(*_da .PdfObjectDictionary );_dceg {return _cbdeb ;}else {_bdd .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_edad ._ecaf );return nil ;};};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dcgdf *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_dbf .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_cbgc ,_eeeb :=_agc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afefc ,img ._eafbb );if _eeeb !=nil {return img ,_eeeb ;};_bcccf ,_eeeb :=_agc .NRGBAConverter .Convert (_cbgc );if _eeeb !=nil {return img ,_eeeb ;};_dgcf :=_bcfdb (_bcccf .Base ());_bdd .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bdd .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_bdd .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_dgcf .Data );_bdd .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_dgcf );return _dgcf ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_cfad *PdfField )ToPdfObject ()_da .PdfObject {_aggbc :=_cfad ._dade ;_dcbe :=_aggbc .PdfObject .(*_da .PdfObjectDictionary );_fbgb :=_da .MakeArray ();for _ ,_geae :=range _cfad .Kids {_fbgb .Append (_geae .ToPdfObject ());};for _ ,_cdff :=range _cfad .Annotations {if _cdff ._dda !=_cfad ._dade {_fbgb .Append (_cdff .GetContext ().ToPdfObject ());};};if _cfad .Parent !=nil {_dcbe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfad .Parent .GetContainingPdfObject ());};if _fbgb .Len ()> 0{_dcbe .Set ("\u004b\u0069\u0064\u0073",_fbgb );};_dcbe .SetIfNotNil ("\u0046\u0054",_cfad .FT );_dcbe .SetIfNotNil ("\u0054",_cfad .T );_dcbe .SetIfNotNil ("\u0054\u0055",_cfad .TU );_dcbe .SetIfNotNil ("\u0054\u004d",_cfad .TM );_dcbe .SetIfNotNil ("\u0046\u0066",_cfad .Ff );_dcbe .SetIfNotNil ("\u0056",_cfad .V );_dcbe .SetIfNotNil ("\u0044\u0056",_cfad .DV );_dcbe .SetIfNotNil ("\u0041\u0041",_cfad .AA );return _aggbc ;};

// ToPdfObject implements interface PdfModel.
func (_ge *PdfAction )ToPdfObject ()_da .PdfObject {_ad :=_ge ._fca ;_gc :=_ad .PdfObject .(*_da .PdfObjectDictionary );_gc .Clear ();_gc .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gc .SetIfNotNil ("\u0053",_ge .S );_gc .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ge .Next );return _ad ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_fedd *PdfPageResources )AddExtGState (gsName _da .PdfObjectName ,gsDict _da .PdfObject )error {if _fedd .ExtGState ==nil {_fedd .ExtGState =_da .MakeDict ();};_gbaea :=_fedd .ExtGState ;_ggad ,_ageeb :=_da .TraceToDirectObject (_gbaea ).(*_da .PdfObjectDictionary );if !_ageeb {_bdd .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gbaea ,_da .TraceToDirectObject (_gbaea ));return _da .ErrTypeError ;};_ggad .Set (gsName ,gsDict );return nil ;};func (_gafdc *PdfReader )newPdfAnnotationLineFromDict (_ecb *_da .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_eebe :=PdfAnnotationLine {};_bafg ,_cfcd :=_gafdc .newPdfAnnotationMarkupFromDict (_ecb );if _cfcd !=nil {return nil ,_cfcd ;};_eebe .PdfAnnotationMarkup =_bafg ;_eebe .L =_ecb .Get ("\u004c");_eebe .BS =_ecb .Get ("\u0042\u0053");_eebe .LE =_ecb .Get ("\u004c\u0045");_eebe .IC =_ecb .Get ("\u0049\u0043");_eebe .LL =_ecb .Get ("\u004c\u004c");_eebe .LLE =_ecb .Get ("\u004c\u004c\u0045");_eebe .Cap =_ecb .Get ("\u0043\u0061\u0070");_eebe .IT =_ecb .Get ("\u0049\u0054");_eebe .LLO =_ecb .Get ("\u004c\u004c\u004f");_eebe .CP =_ecb .Get ("\u0043\u0050");_eebe .Measure =_ecb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_eebe .CO =_ecb .Get ("\u0043\u004f");return &_eebe ,nil ;};func (_bdgd *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bdgd .fontCommon };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_dgcd *PdfShading )GetContainingPdfObject ()_da .PdfObject {return _dgcd ._ggcdb };

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ccadb *Image )ColorAt (x ,y int )(_d .Color ,error ){_aaggg :=_agc .BytesPerLine (int (_ccadb .Width ),int (_ccadb .BitsPerComponent ),_ccadb .ColorComponents );switch _ccadb .ColorComponents {case 1:return _agc .ColorAtGrayscale (x ,y ,int (_ccadb .BitsPerComponent ),_aaggg ,_ccadb .Data ,_ccadb ._eafbb );case 3:return _agc .ColorAtNRGBA (x ,y ,int (_ccadb .Width ),_aaggg ,int (_ccadb .BitsPerComponent ),_ccadb .Data ,_ccadb ._afefc ,_ccadb ._eafbb );case 4:return _agc .ColorAtCMYK (x ,y ,int (_ccadb .Width ),_ccadb .Data ,_ccadb ._eafbb );};_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ccadb .ColorComponents ,_ccadb .BitsPerComponent );return nil ,_dbf .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ToPdfObject implements interface PdfModel.
func (_eeac *PdfAnnotationStamp )ToPdfObject ()_da .PdfObject {_eeac .PdfAnnotation .ToPdfObject ();_fagb :=_eeac ._dda ;_gggc :=_fagb .PdfObject .(*_da .PdfObjectDictionary );_eeac .PdfAnnotationMarkup .appendToPdfDictionary (_gggc );_gggc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0053\u0074\u0061m\u0070"));_gggc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eeac .Name );return _fagb ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_edc :=NewPdfAnnotation ();_bcdf :=&PdfAnnotationSound {};_bcdf .PdfAnnotation =_edc ;_bcdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edc .SetContext (_bcdf );return _bcdf ;};func _cebdcb ()*modelManager {_fgebe :=modelManager {};_fgebe ._bcbbdg =map[PdfModel ]_da .PdfObject {};_fgebe ._gdge =map[_da .PdfObject ]PdfModel {};return &_fgebe ;};func (_ccea *pdfFontType0 )baseFields ()*fontCommon {return &_ccea .fontCommon };

// Items returns all children outline items.
func (_dcedg *Outline )Items ()[]*OutlineItem {return _dcedg .Entries };

// B returns the value of the B component of the color.
func (_egdgf *PdfColorLab )B ()float64 {return float64 (_egdgf [2])};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bgddb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedb :=vals [0];if _dedb < 0.0||_dedb > 100.0{_bdd .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dedb );return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcbg :=vals [1];_ecbe :=float64 (-100);_bbdgc :=float64 (100);if len (_bgddb .Range )> 1{_ecbe =_bgddb .Range [0];_bbdgc =_bgddb .Range [1];};if _dcbg < _ecbe ||_dcbg > _bbdgc {_bdd .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dcbg ,_ecbe ,_bbdgc );return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cefe :=vals [2];_ffgc :=float64 (-100);_aace :=float64 (100);if len (_bgddb .Range )> 3{_ffgc =_bgddb .Range [2];_aace =_bgddb .Range [3];};if _cefe < _ffgc ||_cefe > _aace {_bdd .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cefe ,_ffgc ,_aace );return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffbg :=NewPdfColorLab (_dedb ,_dcbg ,_cefe );return _ffbg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggeg *PdfAnnotationProjection )ToPdfObject ()_da .PdfObject {_ggeg .PdfAnnotation .ToPdfObject ();_eeaca :=_ggeg ._dda ;_beba :=_eeaca .PdfObject .(*_da .PdfObjectDictionary );_ggeg .PdfAnnotationMarkup .appendToPdfDictionary (_beba );return _eeaca ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_agdcd *PdfPageResources )SetShadingByName (keyName _da .PdfObjectName ,shadingObj _da .PdfObject )error {if _agdcd .Shading ==nil {_agdcd .Shading =_da .MakeDict ();};_gbade ,_eacaa :=_agdcd .Shading .(*_da .PdfObjectDictionary );if !_eacaa {return _da .ErrTypeError ;};_gbade .Set (keyName ,shadingObj );return nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_baec :=NewPdfAnnotation ();_aebb :=&PdfAnnotationSquare {};_aebb .PdfAnnotation =_baec ;_aebb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_baec .SetContext (_aebb );return _aebb ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_cebe *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ceadc []*PdfField ;_dddbb :=map[*_da .PdfIndirectObject ]struct{}{};for _ ,_accg :=range _cebe .PageList {_fcefg ,_fgade :=_accg .GetAnnotations ();if _fgade !=nil {return _fgade ;};for _ ,_dbdge :=range _fcefg {var _agdc *PdfField ;switch _bcccfc :=_dbdge .GetContext ().(type ){case *PdfAnnotationWidget :if _bcccfc ._gbec !=nil {_agdc =_bcccfc ._gbec ;break ;};if _cffag ,_fdcdg :=_da .GetIndirect (_bcccfc .Parent );_fdcdg {_agdc ,_fgade =_cebe .newPdfFieldFromIndirectObject (_cffag ,nil );if _fgade ==nil {break ;};_bdd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cffag ,_fgade );};if _bcccfc ._dda !=nil {_agdc ,_fgade =_cebe .newPdfFieldFromIndirectObject (_bcccfc ._dda ,nil );if _fgade ==nil {break ;};_bdd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bcccfc ._dda ,_fgade );};};if _agdc ==nil {continue ;};if _ ,_bfbae :=_dddbb [_agdc ._dade ];_bfbae {continue ;};_dddbb [_agdc ._dade ]=struct{}{};_ceadc =append (_ceadc ,_agdc );};};if len (_ceadc )==0{return nil ;};if _cebe .AcroForm ==nil {_cebe .AcroForm =NewPdfAcroForm ();};_cebe .AcroForm .Fields =&_ceadc ;return nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fdbf pdfFont };

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _da .PdfObject ;NewWindow _da .PdfObject ;};func _dcfa (_fbcg *PdfPage )map[_da .PdfObjectName ]_da .PdfObject {_geag :=make (map[_da .PdfObjectName ]_da .PdfObject );if _fbcg .Resources ==nil {return _geag ;};if _fbcg .Resources .Font !=nil {if _beca ,_fcea :=_da .GetDict (_fbcg .Resources .Font );_fcea {for _ ,_fgegg :=range _beca .Keys (){_geag [_fgegg ]=_beca .Get (_fgegg );};};};if _fbcg .Resources .ExtGState !=nil {if _ffdb ,_bbfd :=_da .GetDict (_fbcg .Resources .ExtGState );_bbfd {for _ ,_abfg :=range _ffdb .Keys (){_geag [_abfg ]=_ffdb .Get (_abfg );};};};if _fbcg .Resources .XObject !=nil {if _cgca ,_gegg :=_da .GetDict (_fbcg .Resources .XObject );_gegg {for _ ,_eebd :=range _cgca .Keys (){_geag [_eebd ]=_cgca .Get (_eebd );};};};if _fbcg .Resources .Pattern !=nil {if _adaa ,_bggba :=_da .GetDict (_fbcg .Resources .Pattern );_bggba {for _ ,_aegf :=range _adaa .Keys (){_geag [_aegf ]=_adaa .Get (_aegf );};};};if _fbcg .Resources .Shading !=nil {if _gege ,_cga :=_da .GetDict (_fbcg .Resources .Shading );_cga {for _ ,_cgb :=range _gege .Keys (){_geag [_cgb ]=_gege .Get (_cgb );};};};if _fbcg .Resources .ProcSet !=nil {if _fdgf ,_abg :=_da .GetDict (_fbcg .Resources .ProcSet );_abg {for _ ,_gfeb :=range _fdgf .Keys (){_geag [_gfeb ]=_fdgf .Get (_gfeb );};};};if _fbcg .Resources .Properties !=nil {if _cagf ,_egdg :=_da .GetDict (_fbcg .Resources .Properties );_egdg {for _ ,_cba :=range _cagf .Keys (){_geag [_cba ]=_cagf .Get (_cba );};};};return _geag ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fada *PdfColorspaceCalGray )GetNumComponents ()int {return 1};var _gaaf _c .Time ;

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fad :=NewPdfAnnotation ();_baea :=&PdfAnnotationPolyLine {};_baea .PdfAnnotation =_fad ;_baea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fad .SetContext (_baea );return _baea ;};func (_gbf *PdfReader )newPdfActionJavaScriptFromDict (_bcgd *_da .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bcgd .Get ("\u004a\u0053")},nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _af .ReadSeeker )(*PdfFont ,error ){_gdgfb ,_bdaed :=_df .ReadAll (r );if _bdaed !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bdaed );return nil ,_bdaed ;};_aeag ,_bdaed :=_bgb .TtfParse (_baf .NewReader (_gdgfb ));if _bdaed !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bdaed );return nil ,_bdaed ;};_fgabf :=&pdfCIDFontType2 {fontCommon :fontCommon {_bcga :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_da .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_cfaag :=make ([]rune ,0,len (_aeag .Chars ));for _bdbca :=range _aeag .Chars {_cfaag =append (_cfaag ,rune (_bdbca ));};_ce .Slice (_cfaag ,func (_eeabf ,_fdgad int )bool {return _cfaag [_eeabf ]< _cfaag [_fdgad ]});_agefb :=1000.0/float64 (_aeag .UnitsPerEm );if len (_aeag .Widths )<=0{return nil ,_dbf .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_decb :=_agefb *float64 (_aeag .Widths [0]);_dddg :=make (map[rune ]int );for _ ,_ecebb :=range _cfaag {_aefba :=_aeag .Chars [_ecebb ];_ffegb :=_agefb *float64 (_aeag .Widths [_aefba ]);_dddg [_ecebb ]=int (_ffegb );};_fgabf ._fcege =_dddg ;_fgabf .DW =_da .MakeInteger (int64 (_decb ));_caea :=_dggec (_cfaag ,_dddg ,_aeag .Chars );_fgabf .W =_da .MakeIndirectObject (_caea );_cdbd :=_da .MakeDict ();_cdbd .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_da .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cdbd .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_da .MakeString ("\u0041\u0064\u006fb\u0065"));_cdbd .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_da .MakeInteger (0));_fgabf .CIDSystemInfo =_cdbd ;_bddfe :=&PdfFontDescriptor {FontName :_da .MakeName (_aeag .PostScriptName ),Ascent :_da .MakeFloat (_agefb *float64 (_aeag .TypoAscender )),Descent :_da .MakeFloat (_agefb *float64 (_aeag .TypoDescender )),CapHeight :_da .MakeFloat (_agefb *float64 (_aeag .CapHeight )),FontBBox :_da .MakeArrayFromFloats ([]float64 {_agefb *float64 (_aeag .Xmin ),_agefb *float64 (_aeag .Ymin ),_agefb *float64 (_aeag .Xmax ),_agefb *float64 (_aeag .Ymax )}),ItalicAngle :_da .MakeFloat (float64 (_aeag .ItalicAngle )),MissingWidth :_da .MakeFloat (_agefb *float64 (_aeag .Widths [0]))};_dcfc ,_bdaed :=_da .MakeStream (_gdgfb ,_da .NewFlateEncoder ());if _bdaed !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bdaed );return nil ,_bdaed ;};_dcfc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_da .MakeInteger (int64 (len (_gdgfb ))));_bddfe .FontFile2 =_dcfc ;if _aeag .Bold {_bddfe .StemV =_da .MakeInteger (120);}else {_bddfe .StemV =_da .MakeInteger (70);};_ggeea :=_ffffa ;if _aeag .IsFixedPitch {_ggeea |=_cbbca ;};if _aeag .ItalicAngle !=0{_ggeea |=_daaa ;};_bddfe .Flags =_da .MakeInteger (int64 (_ggeea ));_fgabf ._eeacc =_aeag .PostScriptName ;_fgabf ._daeea =_bddfe ;_agbe :=pdfFontType0 {fontCommon :fontCommon {_bcga :"\u0054\u0079\u0070e\u0030",_eeacc :_aeag .PostScriptName },DescendantFont :&PdfFont {_fdbf :_fgabf },Encoding :_da .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_gacd :_aeag .NewEncoder ()};if len (_aeag .Chars )> 0{_cdddd :=make (map[_ga .CharCode ]rune ,len (_aeag .Chars ));for _aeeaf ,_daaab :=range _aeag .Chars {_fcacc :=_ga .CharCode (_daaab );if _aacf ,_bged :=_cdddd [_fcacc ];!_bged ||(_bged &&_aacf > _aeeaf ){_cdddd [_fcacc ]=_aeeaf ;};};_agbe ._ecda =_ga .NewToUnicodeCMap (_cdddd );};_gcee :=PdfFont {_fdbf :&_agbe };return &_gcee ,nil ;};func (_acaa *pdfCIDFontType0 )baseFields ()*fontCommon {return &_acaa .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_fgef *PdfAnnotationLine )ToPdfObject ()_da .PdfObject {_fgef .PdfAnnotation .ToPdfObject ();_eaf :=_fgef ._dda ;_afda :=_eaf .PdfObject .(*_da .PdfObjectDictionary );_fgef .PdfAnnotationMarkup .appendToPdfDictionary (_afda );_afda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u004c\u0069\u006e\u0065"));_afda .SetIfNotNil ("\u004c",_fgef .L );_afda .SetIfNotNil ("\u0042\u0053",_fgef .BS );_afda .SetIfNotNil ("\u004c\u0045",_fgef .LE );_afda .SetIfNotNil ("\u0049\u0043",_fgef .IC );_afda .SetIfNotNil ("\u004c\u004c",_fgef .LL );_afda .SetIfNotNil ("\u004c\u004c\u0045",_fgef .LLE );_afda .SetIfNotNil ("\u0043\u0061\u0070",_fgef .Cap );_afda .SetIfNotNil ("\u0049\u0054",_fgef .IT );_afda .SetIfNotNil ("\u004c\u004c\u004f",_fgef .LLO );_afda .SetIfNotNil ("\u0043\u0050",_fgef .CP );_afda .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fgef .Measure );_afda .SetIfNotNil ("\u0043\u004f",_fgef .CO );return _eaf ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dba :=NewPdfAction ();_gf :=&PdfActionGoToE {};_gf .PdfAction =_dba ;_dba .SetContext (_gf );return _gf ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_dgeg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_da .PdfObject {_adge :=_da .MakeDict ();if _dgeg .Subtype !=nil {_adge .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dgeg .Subtype );};_adge .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_dgeg .Colorants );_adge .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_dgeg .Process );_adge .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_dgeg .MixingHints );if _dgeg ._edbg !=nil {_dgeg ._edbg .PdfObject =_adge ;return _dgeg ._edbg ;};return _adge ;};

// AllFields returns a flattened list of all fields in the form.
func (_ffcff *PdfAcroForm )AllFields ()[]*PdfField {if _ffcff ==nil {return nil ;};var _bgaa []*PdfField ;if _ffcff .Fields !=nil {for _ ,_gbgfb :=range *_ffcff .Fields {_bgaa =append (_bgaa ,_dcfg (_gbgfb )...);};};return _bgaa ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject implements interface PdfModel.
func (_afac *PdfAnnotationCaret )ToPdfObject ()_da .PdfObject {_afac .PdfAnnotation .ToPdfObject ();_aab :=_afac ._dda ;_bggf :=_aab .PdfObject .(*_da .PdfObjectDictionary );_afac .PdfAnnotationMarkup .appendToPdfDictionary (_bggf );_bggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0043\u0061\u0072e\u0074"));_bggf .SetIfNotNil ("\u0052\u0044",_afac .RD );_bggf .SetIfNotNil ("\u0053\u0079",_afac .Sy );return _aab ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gebbg :map[_da .PdfObject ]struct{}{},_ccfcg :_cebdcb (),_baeg :_da .NewParserFromString (txt )};};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bdaf []byte ;_ddfa []uint32 ;_eefeb *_da .PdfObjectStream ;};func (_cebdc PdfFont )actualFont ()pdfFont {if _cebdc ._fdbf ==nil {_bdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cebdc );};return _cebdc ._fdbf ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_geee FieldFlag )Has (fl FieldFlag )bool {return (_geee .Mask ()&fl .Mask ())> 0};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_efdd FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_efdd .Mask ()&^fl .Mask ())};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_cfbe *PdfFont )GetCharMetrics (code _ceb .CharCode )(CharMetrics ,bool ){var _egac _bgb .CharMetrics ;switch _eadgb :=_cfbe ._fdbf .(type ){case *pdfFontSimple :if _gccf ,_befcc :=_eadgb .GetCharMetrics (code );_befcc {return _gccf ,_befcc ;};case *pdfFontType0 :if _ebddd ,_addcg :=_eadgb .GetCharMetrics (code );_addcg {return _ebddd ,_addcg ;};case *pdfCIDFontType0 :if _bebgb ,_fggf :=_eadgb .GetCharMetrics (code );_fggf {return _bebgb ,_fggf ;};case *pdfCIDFontType2 :if _bdfbg ,_bgbad :=_eadgb .GetCharMetrics (code );_bgbad {return _bdfbg ,_bgbad ;};default:_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_cfbe ._fdbf );return _egac ,false ;};if _ebdb ,_ecbc :=_cfbe .GetFontDescriptor ();_ecbc ==nil &&_ebdb !=nil {return _bgb .CharMetrics {Wx :_ebdb ._dadb },true ;};_bdd .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_cfbe );return _egac ,false ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_accbbe =subject };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cedc pdfCIDFontType2 )GetRuneMetrics (r rune )(_bgb .CharMetrics ,bool ){_cdec ,_fadec :=_cedc ._fcege [r ];if !_fadec {_gcafc ,_cgegd :=_da .GetInt (_cedc .DW );if !_cgegd {return _bgb .CharMetrics {},false ;};_cdec =int (*_gcafc );};return _bgb .CharMetrics {Wx :float64 (_cdec )},true ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_eccf *PdfReader )flattenFieldsWithOpts (_feed bool ,_bgece FieldAppearanceGenerator ,_caagf *FieldFlattenOpts )error {if _caagf ==nil {_caagf =&FieldFlattenOpts {};};var _abeaa bool ;_afad :=map[*PdfAnnotation ]bool {};{var _gcage []*PdfField ;_cagbg :=_eccf .AcroForm ;if _cagbg !=nil {if _caagf .FilterFunc !=nil {_gcage =_cagbg .filteredFields (_caagf .FilterFunc ,true );_abeaa =_cagbg .Fields !=nil &&len (*_cagbg .Fields )> 0;}else {_gcage =_cagbg .AllFields ();};};for _ ,_gafda :=range _gcage {for _ ,_dbdb :=range _gafda .Annotations {_afad [_dbdb .PdfAnnotation ]=_gafda .V !=nil ;if _bgece !=nil {_ccdf ,_cgbd :=_bgece .GenerateAppearanceDict (_cagbg ,_gafda ,_dbdb );if _cgbd !=nil {return _cgbd ;};_dbdb .AP =_ccdf ;};};};};if _feed {for _ ,_bedge :=range _eccf .PageList {_ggdeg ,_efgb :=_bedge .GetAnnotations ();if _efgb !=nil {return _efgb ;};for _ ,_acag :=range _ggdeg {_afad [_acag ]=true ;};};};for _ ,_gbddf :=range _eccf .PageList {var _cgded []*PdfAnnotation ;if _bgece !=nil {if _ecbec :=_bgece .WrapContentStream (_gbddf );_ecbec !=nil {return _ecbec ;};};_fagabd ,_ebece :=_gbddf .GetAnnotations ();if _ebece !=nil {return _ebece ;};for _ ,_acff :=range _fagabd {_bbff ,_bade :=_afad [_acff ];if !_bade {_cgded =append (_cgded ,_acff );continue ;};switch _acff .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_dcea ,_gdcg ,_fdbdg :=_gaadb (_acff );if _fdbdg !=nil {if !_bbff {_bdd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fdbdg );continue ;};if _dcea ==nil {continue ;};_cggeg :=_gbddf .Resources .GenerateXObjectName ();_gbddf .Resources .SetXObjectFormByName (_cggeg ,_dcea );_acgaag :=_ec .Min (_gdcg .Llx ,_gdcg .Urx );_eeeag :=_ec .Min (_gdcg .Lly ,_gdcg .Ury );var _eaba []string ;_eaba =append (_eaba ,"\u0071");_eaba =append (_eaba ,_bd .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_acgaag ,_eeeag ));_eaba =append (_eaba ,_bd .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cggeg .String ()));_eaba =append (_eaba ,"\u0051");_abdg :=_dg .Join (_eaba ,"\u000a");_fdbdg =_gbddf .AppendContentStream (_abdg );if _fdbdg !=nil {return _fdbdg ;};if _dcea .Resources !=nil {_bfbc ,_dcce :=_da .GetDict (_dcea .Resources .Font );if _dcce {for _ ,_ecfd :=range _bfbc .Keys (){if !_gbddf .Resources .HasFontByName (_ecfd ){_gbddf .Resources .SetFontByName (_ecfd ,_bfbc .Get (_ecfd ));};};};};};if len (_cgded )> 0{_gbddf ._fcgd =_cgded ;}else {_gbddf ._fcgd =[]*PdfAnnotation {};};};if !_abeaa {_eccf .AcroForm =nil ;};return nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dagg FieldFlag )Mask ()uint32 {return uint32 (_dagg )};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fgeb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fgeb .UnderlyingCS .GetNumComponents ();};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_agcg *PdfColorspaceCalRGB )ToPdfObject ()_da .PdfObject {_eeba :=&_da .PdfObjectArray {};_eeba .Append (_da .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cafg :=_da .MakeDict ();if _agcg .WhitePoint !=nil {_gdgc :=_da .MakeArray (_da .MakeFloat (_agcg .WhitePoint [0]),_da .MakeFloat (_agcg .WhitePoint [1]),_da .MakeFloat (_agcg .WhitePoint [2]));_cafg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gdgc );}else {_bdd .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _agcg .BlackPoint !=nil {_egcc :=_da .MakeArray (_da .MakeFloat (_agcg .BlackPoint [0]),_da .MakeFloat (_agcg .BlackPoint [1]),_da .MakeFloat (_agcg .BlackPoint [2]));_cafg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_egcc );};if _agcg .Gamma !=nil {_ebad :=_da .MakeArray (_da .MakeFloat (_agcg .Gamma [0]),_da .MakeFloat (_agcg .Gamma [1]),_da .MakeFloat (_agcg .Gamma [2]));_cafg .Set ("\u0047\u0061\u006dm\u0061",_ebad );};if _agcg .Matrix !=nil {_eaeg :=_da .MakeArray (_da .MakeFloat (_agcg .Matrix [0]),_da .MakeFloat (_agcg .Matrix [1]),_da .MakeFloat (_agcg .Matrix [2]),_da .MakeFloat (_agcg .Matrix [3]),_da .MakeFloat (_agcg .Matrix [4]),_da .MakeFloat (_agcg .Matrix [5]),_da .MakeFloat (_agcg .Matrix [6]),_da .MakeFloat (_agcg .Matrix [7]),_da .MakeFloat (_agcg .Matrix [8]));_cafg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eaeg );};_eeba .Append (_cafg );if _agcg ._faca !=nil {_agcg ._faca .PdfObject =_eeba ;return _agcg ._faca ;};return _eeba ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_bcbf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_aagg :=0.3*_bcbf .R ()+0.59*_bcbf .G ()+0.11*_bcbf .B ();_aagg =_ec .Min (_ec .Max (_aagg ,0.0),1.0);return NewPdfColorDeviceGray (_aagg );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gaaa pdfFontType0 )GetRuneMetrics (r rune )(_bgb .CharMetrics ,bool ){if _gaaa .DescendantFont ==nil {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gaaa );return _bgb .CharMetrics {},false ;};return _gaaa .DescendantFont .GetRuneMetrics (r );};func (_bcbfba *PdfWriter )copyObject (_dcaa _da .PdfObject ,_aaabdf map[_da .PdfObject ]_da .PdfObject ,_fagfg map[_da .PdfObject ]struct{},_dafcbd bool )_da .PdfObject {_fbccac :=!_bcbfba ._adfe &&_fagfg !=nil ;if _bgade ,_cgdfd :=_aaabdf [_dcaa ];_cgdfd {if _fbccac &&!_dafcbd {delete (_fagfg ,_dcaa );};return _bgade ;};_efddgg :=_dcaa ;switch _egefa :=_dcaa .(type ){case *_da .PdfObjectArray :_dgbgf :=_da .MakeArray ();_efddgg =_dgbgf ;_aaabdf [_dcaa ]=_efddgg ;for _ ,_egae :=range _egefa .Elements (){_dgbgf .Append (_bcbfba .copyObject (_egae ,_aaabdf ,_fagfg ,_dafcbd ));};case *_da .PdfObjectStreams :_ggaf :=&_da .PdfObjectStreams {PdfObjectReference :_egefa .PdfObjectReference };_efddgg =_ggaf ;_aaabdf [_dcaa ]=_efddgg ;for _ ,_fbedc :=range _egefa .Elements (){_ggaf .Append (_bcbfba .copyObject (_fbedc ,_aaabdf ,_fagfg ,_dafcbd ));};case *_da .PdfObjectStream :_fcadc :=&_da .PdfObjectStream {Stream :_egefa .Stream ,PdfObjectReference :_egefa .PdfObjectReference };_efddgg =_fcadc ;_aaabdf [_dcaa ]=_efddgg ;_fcadc .PdfObjectDictionary =_bcbfba .copyObject (_egefa .PdfObjectDictionary ,_aaabdf ,_fagfg ,_dafcbd ).(*_da .PdfObjectDictionary );case *_da .PdfObjectDictionary :var _gcccf bool ;if _fbccac &&!_dafcbd {if _cgcge ,_ :=_da .GetNameVal (_egefa .Get ("\u0054\u0079\u0070\u0065"));_cgcge =="\u0050\u0061\u0067\u0065"{_ ,_debdd :=_bcbfba ._aecdcf [_egefa ];_dafcbd =!_debdd ;_gcccf =_dafcbd ;};};_efdeb :=_da .MakeDict ();_efddgg =_efdeb ;_aaabdf [_dcaa ]=_efddgg ;for _ ,_fffe :=range _egefa .Keys (){_efdeb .Set (_fffe ,_bcbfba .copyObject (_egefa .Get (_fffe ),_aaabdf ,_fagfg ,_dafcbd ));};if _gcccf {_efddgg =_da .MakeNull ();_dafcbd =false ;};case *_da .PdfIndirectObject :_cdeba :=&_da .PdfIndirectObject {PdfObjectReference :_egefa .PdfObjectReference };_efddgg =_cdeba ;_aaabdf [_dcaa ]=_efddgg ;_cdeba .PdfObject =_bcbfba .copyObject (_egefa .PdfObject ,_aaabdf ,_fagfg ,_dafcbd );case *_da .PdfObjectString :_gbebf :=*_egefa ;_efddgg =&_gbebf ;_aaabdf [_dcaa ]=_efddgg ;case *_da .PdfObjectName :_aedcf :=_da .PdfObjectName (*_egefa );_efddgg =&_aedcf ;_aaabdf [_dcaa ]=_efddgg ;case *_da .PdfObjectNull :_efddgg =_da .MakeNull ();_aaabdf [_dcaa ]=_efddgg ;case *_da .PdfObjectInteger :_efdbbc :=_da .PdfObjectInteger (*_egefa );_efddgg =&_efdbbc ;_aaabdf [_dcaa ]=_efddgg ;case *_da .PdfObjectReference :_dafca :=_da .PdfObjectReference (*_egefa );_efddgg =&_dafca ;_aaabdf [_dcaa ]=_efddgg ;case *_da .PdfObjectFloat :_acbff :=_da .PdfObjectFloat (*_egefa );_efddgg =&_acbff ;_aaabdf [_dcaa ]=_efddgg ;case *_da .PdfObjectBool :_addbf :=_da .PdfObjectBool (*_egefa );_efddgg =&_addbf ;_aaabdf [_dcaa ]=_efddgg ;case *pdfSignDictionary :_bcca :=&pdfSignDictionary {PdfObjectDictionary :_da .MakeDict (),_bega :_egefa ._bega ,_aefa :_egefa ._aefa };_efddgg =_bcca ;_aaabdf [_dcaa ]=_efddgg ;for _ ,_gecabc :=range _egefa .Keys (){_bcca .Set (_gecabc ,_bcbfba .copyObject (_egefa .Get (_gecabc ),_aaabdf ,_fagfg ,_dafcbd ));};default:_bdd .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_dcaa );};if _fbccac &&_dafcbd {_fagfg [_dcaa ]=struct{}{};};return _efddgg ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_edgbf *PdfPageResources )SetPatternByName (keyName _da .PdfObjectName ,pattern _da .PdfObject )error {if _edgbf .Pattern ==nil {_edgbf .Pattern =_da .MakeDict ();};_dgab ,_bgdad :=_edgbf .Pattern .(*_da .PdfObjectDictionary );if !_bgdad {return _da .ErrTypeError ;};_dgab .Set (keyName ,pattern );return nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_bddgfa *PdfPattern )SetContext (ctx PdfModel ){_bddgfa ._bece =ctx };

// ToPdfObject implements interface PdfModel.
func (_gdda *PdfActionGoToE )ToPdfObject ()_da .PdfObject {_gdda .PdfAction .ToPdfObject ();_gdbg :=_gdda ._fca ;_aec :=_gdbg .PdfObject .(*_da .PdfObjectDictionary );_aec .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeGoToE )));if _gdda .F !=nil {_aec .Set ("\u0046",_gdda .F .ToPdfObject ());};_aec .SetIfNotNil ("\u0044",_gdda .D );_aec .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gdda .NewWindow );_aec .SetIfNotNil ("\u0054",_gdda .T );return _gdbg ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bcg :=NewPdfAction ();_bba :=&PdfActionResetForm {};_bba .PdfAction =_bcg ;_bcg .SetContext (_bba );return _bba ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_dgd :=NewPdfAnnotation ();_fdfb :=&PdfAnnotationUnderline {};_fdfb .PdfAnnotation =_dgd ;_fdfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgd .SetContext (_fdfb );return _fdfb ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gfac *Outline )ToPdfObject ()_da .PdfObject {return _gfac .ToPdfOutline ().ToPdfObject ()};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _af .ReadSeeker )(*PdfReader ,error ){_aaeb :=&PdfReader {_aaccg :rs ,_gebbg :map[_da .PdfObject ]struct{}{},_ccfcg :_cebdcb (),_cdffd :false };_adaab ,_febgd :=_da .NewParser (rs );if _febgd !=nil {return nil ,_febgd ;};_aaeb ._baeg =_adaab ;_gabfe ,_febgd :=_aaeb .IsEncrypted ();if _febgd !=nil {return nil ,_febgd ;};if !_gabfe {_febgd =_aaeb .loadStructure ();if _febgd !=nil {return nil ,_febgd ;};};return _aaeb ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dbgd *PdfReader )GetObjectNums ()[]int {return _dbgd ._baeg .GetObjectNums ()};func (_ecgcb fontCommon )asPdfObjectDictionary (_bggef string )*_da .PdfObjectDictionary {if _bggef !=""&&_ecgcb ._bcga !=""&&_bggef !=_ecgcb ._bcga {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bggef ,_ecgcb );}else if _bggef ==""&&_ecgcb ._bcga ==""{_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ecgcb );}else if _ecgcb ._bcga ==""{_ecgcb ._bcga =_bggef ;};_cabd :=_da .MakeDict ();_cabd .Set ("\u0054\u0079\u0070\u0065",_da .MakeName ("\u0046\u006f\u006e\u0074"));_cabd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_da .MakeName (_ecgcb ._eeacc ));_cabd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName (_ecgcb ._bcga ));if _ecgcb ._daeea !=nil {_cabd .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_ecgcb ._daeea .ToPdfObject ());};if _ecgcb ._ecgdf !=nil {_cabd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ecgcb ._ecgdf );}else if _ecgcb ._ecda !=nil {_fgae ,_becb :=_ecgcb ._ecda .Stream ();if _becb !=nil {_bdd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_becb );}else {_cabd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgae );};};return _cabd ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bece PdfModel ;_febc _da .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_aacd *pdfCIDFontType0 )ToPdfObject ()_da .PdfObject {return _da .MakeNull ()};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_agbba *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ceb .CharCode )(_dded []rune ,_fcac ,_bcdfg int ){_eada ,_fcac ,_bcdfg :=_agbba .CharcodesToStrings (charcodes );return []rune (_dg .Join (_eada ,"")),_fcac ,_bcdfg ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_efdae *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _efdae .RunesToCharcodeBytes ([]rune (str ));};func _agda (_agad _da .PdfObject )(*PdfColorspaceDeviceN ,error ){_gcfe :=NewPdfColorspaceDeviceN ();if _eafee ,_fegfb :=_agad .(*_da .PdfIndirectObject );_fegfb {_gcfe ._agggb =_eafee ;};_agad =_da .TraceToDirectObject (_agad );_eegf ,_fcge :=_agad .(*_da .PdfObjectArray );if !_fcge {return nil ,_bd .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _eegf .Len ()!=4&&_eegf .Len ()!=5{return nil ,_bd .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_agad =_eegf .Get (0);_facc ,_fcge :=_agad .(*_da .PdfObjectName );if !_fcge {return nil ,_bd .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_facc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_bd .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_agad =_eegf .Get (1);_agad =_da .TraceToDirectObject (_agad );_bcdfb ,_fcge :=_agad .(*_da .PdfObjectArray );if !_fcge {return nil ,_bd .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_gcfe .ColorantNames =_bcdfb ;_agad =_eegf .Get (2);_gdeba ,_gaaee :=NewPdfColorspaceFromPdfObject (_agad );if _gaaee !=nil {return nil ,_gaaee ;};_gcfe .AlternateSpace =_gdeba ;_affe ,_gaaee :=_ffdgg (_eegf .Get (3));if _gaaee !=nil {return nil ,_gaaee ;};_gcfe .TintTransform =_affe ;if _eegf .Len ()==5{_bddgf ,_dbgbe :=_fgfc (_eegf .Get (4));if _dbgbe !=nil {return nil ,_dbgbe ;};_gcfe .Attributes =_bddgf ;};return _gcfe ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bdga PdfModel ;_dade *_da .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_da .PdfObjectName ;T *_da .PdfObjectString ;TU *_da .PdfObjectString ;TM *_da .PdfObjectString ;Ff *_da .PdfObjectInteger ;V _da .PdfObject ;DV _da .PdfObject ;AA _da .PdfObject ;};

// Add appends an outline item as a child of the current outline item.
func (_cdffed *OutlineItem )Add (item *OutlineItem ){_cdffed .Entries =append (_cdffed .Entries ,item )};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _da .PdfObject ;LE _da .PdfObject ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;IT _da .PdfObject ;Measure _da .PdfObject ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_faege int64 ;_egbdc int64 ;_edffb int64 ;_agceg int64 ;_gfdbd int64 ;_dcbef int64 ;_dafbc byte ;_caggc int64 ;_abcb int64 ;};func (_bbfdbd *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bacg :=_bbfdbd .Parent ;for _bacg !=nil {_ebdbg ,_bagad :=_da .GetDict (_bacg );if !_bagad {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_dbf .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _dddeg :=_ebdbg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dddeg !=nil {_cffaa ,_faba :=_da .GetDict (_dddeg );if !_faba {return nil ,_dbf .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bgada ,_fagd :=NewPdfPageResourcesFromDict (_cffaa );if _fagd !=nil {return nil ,_fagd ;};return _bgada ,nil ;};_bacg =_ebdbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gcg *PdfAppender )UpdateObject (obj _da .PdfObject ){_gcg .replaceObject (obj ,obj );if _ ,_fdbd :=_gcg ._bgbc [obj ];!_fdbd {_gcg ._dbcb =append (_gcg ._dbcb ,obj );_gcg ._bgbc [obj ]=struct{}{};};};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _da .PdfObject ;RichMediaContent _da .PdfObject ;};func (_bda *PdfReader )newPdfActionSoundFromDict (_bga *_da .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_bga .Get ("\u0053\u006f\u0075n\u0064"),Volume :_bga .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_bga .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_bga .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_bga .Get ("\u004d\u0069\u0078")},nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bffb *PdfPage )AppendContentStream (contentStr string )error {_fgfb ,_eedac :=_bffb .GetContentStreams ();if _eedac !=nil {return _eedac ;};if len (_fgfb )==0{_fgfb =[]string {contentStr };return _bffb .SetContentStreams (_fgfb ,_da .NewFlateEncoder ());};var _fgbbe _baf .Buffer ;_fgbbe .WriteString (_fgfb [len (_fgfb )-1]);_fgbbe .WriteString ("\u000a");_fgbbe .WriteString (contentStr );_fgfb [len (_fgfb )-1]=_fgbbe .String ();return _bffb .SetContentStreams (_fgfb ,_da .NewFlateEncoder ());};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fefa :=PdfColorCalGray (grayVal );return &_fefa ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ccdg *PdfFieldSignature )ToPdfObject ()_da .PdfObject {if _ccdg .PdfAnnotationWidget !=nil {_ccdg .PdfAnnotationWidget .ToPdfObject ();};_ccdg .PdfField .ToPdfObject ();_bbda :=_ccdg ._dade ;_dacc :=_bbda .PdfObject .(*_da .PdfObjectDictionary );_dacc .SetIfNotNil ("\u0046\u0054",_da .MakeName ("\u0053\u0069\u0067"));_dacc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ccdg .Lock );_dacc .SetIfNotNil ("\u0053\u0056",_ccdg .SV );if _ccdg .V !=nil {_dacc .SetIfNotNil ("\u0056",_ccdg .V .ToPdfObject ());};return _bbda ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_bcf *PdfActionSetOCGState )ToPdfObject ()_da .PdfObject {_bcf .PdfAction .ToPdfObject ();_aaa :=_bcf ._fca ;_dafe :=_aaa .PdfObject .(*_da .PdfObjectDictionary );_dafe .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeSetOCGState )));_dafe .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bcf .State );_dafe .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bcf .PreserveRB );return _aaa ;};

// GetContentStream returns the XObject Form's content stream.
func (_badea *XObjectForm )GetContentStream ()([]byte ,error ){_ebgba ,_cfffa :=_da .DecodeStream (_badea ._efcga );if _cfffa !=nil {return nil ,_cfffa ;};return _ebgba ,nil ;};

// ToInteger convert to an integer format.
func (_dcfb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_dgfd :=_ec .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_dgfd *_dcfb .C ()),uint32 (_dgfd *_dcfb .M ()),uint32 (_dgfd *_dcfb .Y ()),uint32 (_dgfd *_dcfb .K ())};};

// ToPdfObject implements interface PdfModel.
func (_caebd *PdfAnnotationMovie )ToPdfObject ()_da .PdfObject {_caebd .PdfAnnotation .ToPdfObject ();_dead :=_caebd ._dda ;_age :=_dead .PdfObject .(*_da .PdfObjectDictionary );_age .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u004d\u006f\u0076i\u0065"));_age .SetIfNotNil ("\u0054",_caebd .T );_age .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_caebd .Movie );_age .SetIfNotNil ("\u0041",_caebd .A );return _dead ;};

// IsShading specifies if the pattern is a shading pattern.
func (_gfdgbc *PdfPattern )IsShading ()bool {return _gfdgbc .PatternType ==2};var _ddacd =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// ReplacePage replaces the original page to a new page.
func (_cbbc *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ggb :=pageNum -1;for _ead :=range _cbbc ._gca {if _ead ==_ggb {_eaca :=page .Duplicate ();_bbddf (_eaca );_cbbc ._gca [_ead ]=_eaca ;};};};

// ToPdfObject implements interface PdfModel.
func (_bccc *PdfAnnotationRichMedia )ToPdfObject ()_da .PdfObject {_bccc .PdfAnnotation .ToPdfObject ();_bec :=_bccc ._dda ;_dgf :=_bec .PdfObject .(*_da .PdfObjectDictionary );_dgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_dgf .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bccc .RichMediaSettings );_dgf .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bccc .RichMediaContent );return _bec ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dgcfe *PdfFieldButton )IsCheckbox ()bool {return _dgcfe .GetType ()==ButtonTypeCheckbox };

// ToPdfObject implements interface PdfModel.
func (_bagf *PdfSignature )ToPdfObject ()_da .PdfObject {_ggce :=_bagf ._caadf ;var _aegda *_da .PdfObjectDictionary ;if _aebba ,_fbgba :=_ggce .PdfObject .(*pdfSignDictionary );_fbgba {_aegda =_aebba .PdfObjectDictionary ;}else {_aegda =_ggce .PdfObject .(*_da .PdfObjectDictionary );};_aegda .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bagf .Type );_aegda .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bagf .Filter );_aegda .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bagf .SubFilter );_aegda .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bagf .ByteRange );_aegda .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bagf .Contents );_aegda .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bagf .Cert );_aegda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bagf .Name );_aegda .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bagf .Reason );_aegda .SetIfNotNil ("\u004d",_bagf .M );_aegda .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bagf .Reference );_aegda .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bagf .Changes );_aegda .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bagf .ContactInfo );return _ggce ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ccg :=NewPdfAnnotation ();_cgge :=&PdfAnnotationTrapNet {};_cgge .PdfAnnotation =_ccg ;_ccg .SetContext (_cgge );return _cgge ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_eafb ,_faag :=_gdebc (basefont );if _faag !=nil {return nil ,_faag ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_eafb ._defgd =_ceb .NewWinAnsiEncoder ();};return &PdfFont {_fdbf :&_eafb },nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddaf *PdfAnnotationInk )ToPdfObject ()_da .PdfObject {_ddaf .PdfAnnotation .ToPdfObject ();_dfgg :=_ddaf ._dda ;_gfef :=_dfgg .PdfObject .(*_da .PdfObjectDictionary );_ddaf .PdfAnnotationMarkup .appendToPdfDictionary (_gfef );_gfef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0049\u006e\u006b"));_gfef .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ddaf .InkList );_gfef .SetIfNotNil ("\u0042\u0053",_ddaf .BS );return _dfgg ;};func (_ddab *PdfReader )newPdfAnnotationFreeTextFromDict (_eec *_da .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_cdge :=PdfAnnotationFreeText {};_eceb ,_aef :=_ddab .newPdfAnnotationMarkupFromDict (_eec );if _aef !=nil {return nil ,_aef ;};_cdge .PdfAnnotationMarkup =_eceb ;_cdge .DA =_eec .Get ("\u0044\u0041");_cdge .Q =_eec .Get ("\u0051");_cdge .RC =_eec .Get ("\u0052\u0043");_cdge .DS =_eec .Get ("\u0044\u0053");_cdge .CL =_eec .Get ("\u0043\u004c");_cdge .IT =_eec .Get ("\u0049\u0054");_cdge .BE =_eec .Get ("\u0042\u0045");_cdge .RD =_eec .Get ("\u0052\u0044");_cdge .BS =_eec .Get ("\u0042\u0053");_cdge .LE =_eec .Get ("\u004c\u0045");return &_cdge ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fdb *PdfAnnotationWidget )Field ()*PdfField {return _fdb ._gbec };var _bccgda ="";

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ef :=NewPdfAction ();_feg :=&PdfActionJavaScript {};_feg .PdfAction =_ef ;_ef .SetContext (_feg );return _feg ;};func _ade (_cag _da .PdfObject )(*PdfFilespec ,error ){if _cag ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_cag );};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gcafb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};func (_dcdfb *PdfPage )setContainer (_cacd *_da .PdfIndirectObject ){_cacd .PdfObject =_dcdfb ._decgdc ;_dcdfb ._bcce =_cacd ;};func (_gadfe *PdfReader )newPdfAnnotationFileAttachmentFromDict (_fcba *_da .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gcec :=PdfAnnotationFileAttachment {};_daab ,_bcggc :=_gadfe .newPdfAnnotationMarkupFromDict (_fcba );if _bcggc !=nil {return nil ,_bcggc ;};_gcec .PdfAnnotationMarkup =_daab ;_gcec .FS =_fcba .Get ("\u0046\u0053");_gcec .Name =_fcba .Get ("\u004e\u0061\u006d\u0065");return &_gcec ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bdffc *PdfPageResources )GetContainingPdfObject ()_da .PdfObject {return _bdffc ._bacae };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_afed :=NewPdfAnnotation ();_gbcf :=&PdfAnnotationRichMedia {};_gbcf .PdfAnnotation =_afed ;_afed .SetContext (_gbcf );return _gbcf ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_acabf ,_fceda :=_ag .Open (filePath );if _fceda !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fceda );return nil ,_fceda ;};defer _acabf .Close ();return NewPdfFontFromTTF (_acabf );};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cccce :=&PdfPageResources {};_cccce ._bacae =_da .MakeDict ();return _cccce ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_aecc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deged :=vals [0];if _deged < 0.0||_deged > 1.0{_bdd .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _deged < 0.0{_deged =0.0;}else if _deged > 1.0{_deged =1.0;};return NewPdfColorDeviceGray (_deged ),nil ;};func (_cgeg *PdfReader )newPdfAnnotationSquigglyFromDict (_ccad *_da .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bdca :=PdfAnnotationSquiggly {};_cdgb ,_eae :=_cgeg .newPdfAnnotationMarkupFromDict (_ccad );if _eae !=nil {return nil ,_eae ;};_bdca .PdfAnnotationMarkup =_cdgb ;_bdca .QuadPoints =_ccad .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bdca ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dgcb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eade ,_ddfe :=_da .GetNumbersAsFloat (objects );if _ddfe !=nil {return nil ,_ddfe ;};return _dgcb .ColorFromFloats (_eade );};

// ToPdfObject implements interface PdfModel.
func (_acg *PdfActionTrans )ToPdfObject ()_da .PdfObject {_acg .PdfAction .ToPdfObject ();_dd :=_acg ._fca ;_ddc :=_dd .PdfObject .(*_da .PdfObjectDictionary );_ddc .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeTrans )));_ddc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_acg .Trans );return _dd ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ddbbc *Image )GetParamsDict ()*_da .PdfObjectDictionary {_fdcd :=_da .MakeDict ();_fdcd .Set ("\u0057\u0069\u0064t\u0068",_da .MakeInteger (_ddbbc .Width ));_fdcd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_da .MakeInteger (_ddbbc .Height ));_fdcd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_da .MakeInteger (int64 (_ddbbc .ColorComponents )));_fdcd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_da .MakeInteger (_ddbbc .BitsPerComponent ));return _fdcd ;};func (_bdea *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _bdea ._daeea };func (_gbecb *pdfFontType0 )subsetRegistered ()error {_dfab ,_gbebg :=_gbecb .DescendantFont ._fdbf .(*pdfCIDFontType2 );if !_gbebg {_bdd .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gbecb .DescendantFont );return nil ;};if _dfab ==nil {return nil ;};if _dfab ._daeea ==nil {_bdd .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gbecb ._gacd ==nil {_bdd .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_ebbaa ,_gbebg :=_da .GetStream (_dfab ._daeea .FontFile2 );if !_gbebg {_bdd .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _dbf .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bgef ,_cccc :=_da .DecodeStream (_ebbaa );if _cccc !=nil {_bdd .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cccc );return _cccc ;};_bdaea ,_cccc :=_bg .Parse (_baf .NewReader (_bgef ));if _cccc !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_ebbaa .Stream ));return _cccc ;};var _fegde []rune ;var _bcde *_bg .Font ;switch _ggfe :=_gbecb ._gacd .(type ){case *_ceb .TrueTypeFontEncoder :_fegde =_ggfe .RegisteredRunes ();_bcde ,_cccc =_bdaea .SubsetKeepRunes (_fegde );if _cccc !=nil {_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccc );return _cccc ;};_ggfe .SubsetRegistered ();case *_ceb .IdentityEncoder :_fegde =_ggfe .RegisteredRunes ();_dcgaa :=make ([]_bg .GlyphIndex ,len (_fegde ));for _gcfc ,_gcade :=range _fegde {_dcgaa [_gcfc ]=_bg .GlyphIndex (_gcade );};_bcde ,_cccc =_bdaea .SubsetKeepIndices (_dcgaa );if _cccc !=nil {_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccc );return _cccc ;};case _ceb .SimpleEncoder :_bgdbc :=_ggfe .Charcodes ();for _ ,_fdcbe :=range _bgdbc {_abaf ,_eccfa :=_ggfe .CharcodeToRune (_fdcbe );if !_eccfa {_bdd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fdcbe );continue ;};_fegde =append (_fegde ,_abaf );};default:return _bd .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gbecb ._gacd );};var _gdgf _baf .Buffer ;_cccc =_bcde .Write (&_gdgf );if _cccc !=nil {_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccc );return _cccc ;};if _gbecb ._ecda !=nil {_dbgaa :=make (map[_ga .CharCode ]rune ,len (_fegde ));for _ ,_eefc :=range _fegde {_cgcaf ,_fdea :=_gbecb ._gacd .RuneToCharcode (_eefc );if !_fdea {continue ;};_dbgaa [_ga .CharCode (_cgcaf )]=_eefc ;};_gbecb ._ecda =_ga .NewToUnicodeCMap (_dbgaa );};_ebbaa ,_cccc =_da .MakeStream (_gdgf .Bytes (),_da .NewFlateEncoder ());if _cccc !=nil {_bdd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccc );return _cccc ;};_ebbaa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_da .MakeInteger (int64 (_gdgf .Len ())));if _gcbdd ,_gaed :=_da .GetStream (_dfab ._daeea .FontFile2 );_gaed {*_gcbdd =*_ebbaa ;}else {_dfab ._daeea .FontFile2 =_ebbaa ;};_fgga :=_dccbf ();if len (_gbecb ._eeacc )> 0{_gbecb ._eeacc =_edced (_gbecb ._eeacc ,_fgga );};if len (_dfab ._eeacc )> 0{_dfab ._eeacc =_edced (_dfab ._eeacc ,_fgga );};if len (_gbecb ._ebdg )> 0{_gbecb ._ebdg =_edced (_gbecb ._ebdg ,_fgga );};if _dfab ._daeea !=nil {_bccf ,_dcfbd :=_da .GetName (_dfab ._daeea .FontName );if _dcfbd &&len (_bccf .String ())> 0{_bfgf :=_edced (_bccf .String (),_fgga );_dfab ._daeea .FontName =_da .MakeName (_bfgf );};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcd *PdfActionMovie )ToPdfObject ()_da .PdfObject {_fcd .PdfAction .ToPdfObject ();_cea :=_fcd ._fca ;_ff :=_cea .PdfObject .(*_da .PdfObjectDictionary );_ff .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeMovie )));_ff .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fcd .Annotation );_ff .SetIfNotNil ("\u0054",_fcd .T );_ff .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fcd .Operation );return _cea ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bfdg *PdfField )FullName ()(string ,error ){var _gagcb _baf .Buffer ;_caee :=[]string {};if _bfdg .T !=nil {_caee =append (_caee ,_bfdg .T .Decoded ());};_bbeed :=map[*PdfField ]bool {};_bbeed [_bfdg ]=true ;_bgab :=_bfdg .Parent ;for _bgab !=nil {if _ ,_gebdbc :=_bbeed [_bgab ];_gebdbc {return _gagcb .String (),_dbf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bgab .T ==nil {return _gagcb .String (),_dbf .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_caee =append (_caee ,_bgab .T .Decoded ());_bbeed [_bgab ]=true ;_bgab =_bgab .Parent ;};for _fgca :=len (_caee )-1;_fgca >=0;_fgca --{_gagcb .WriteString (_caee [_fgca ]);if _fgca > 0{_gagcb .WriteString ("\u002e");};};return _gagcb .String (),nil ;};

// SetVersion sets the PDF version of the output file.
func (_ceeea *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ceeea ._egdae =majorVersion ;_ceeea ._gfeec =minorVersion ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ede :=NewPdfAnnotation ();_cedf :=&PdfAnnotationProjection {};_cedf .PdfAnnotation =_ede ;_cedf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ede .SetContext (_cedf );return _cedf ;};func (_faga *PdfField )inherit (_fcdb func (*PdfField )bool )(bool ,error ){_fegb :=map[*PdfField ]bool {};_fcfe :=false ;_cedfd :=_faga ;for _cedfd !=nil {if _ ,_bcab :=_fegb [_cedfd ];_bcab {return false ,_dbf .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_facdc :=_fcdb (_cedfd );if _facdc {_fcfe =true ;break ;};_fegb [_cedfd ]=true ;_cedfd =_cedfd .Parent ;};return _fcfe ,nil ;};func _ecfa (_fcdfc *_da .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fgcdd :=PdfShadingType3 {};_bdbeb :=_fcdfc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bdbeb ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_gdgbg ,_fcefgd :=_bdbeb .(*_da .PdfObjectArray );if !_fcefgd {_bdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdbeb );return nil ,_da .ErrTypeError ;};if _gdgbg .Len ()!=6{_bdd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gdgbg .Len ());return nil ,ErrInvalidAttribute ;};_fgcdd .Coords =_gdgbg ;if _gbeba :=_fcdfc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gbeba !=nil {_gbeba =_da .TraceToDirectObject (_gbeba );_cgdc ,_eface :=_gbeba .(*_da .PdfObjectArray );if !_eface {_bdd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbeba );return nil ,_da .ErrTypeError ;};_fgcdd .Domain =_cgdc ;};_bdbeb =_fcdfc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bdbeb ==nil {_bdd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_fgcdd .Function =[]PdfFunction {};if _cdgea ,_cgea :=_bdbeb .(*_da .PdfObjectArray );_cgea {for _ ,_accfc :=range _cdgea .Elements (){_gbdf ,_fcegg :=_ffdgg (_accfc );if _fcegg !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcegg );return nil ,_fcegg ;};_fgcdd .Function =append (_fgcdd .Function ,_gbdf );};}else {_gded ,_cbebc :=_ffdgg (_bdbeb );if _cbebc !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbebc );return nil ,_cbebc ;};_fgcdd .Function =append (_fgcdd .Function ,_gded );};if _cbefe :=_fcdfc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cbefe !=nil {_cbefe =_da .TraceToDirectObject (_cbefe );_eebae ,_ageea :=_cbefe .(*_da .PdfObjectArray );if !_ageea {_bdd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbefe );return nil ,_da .ErrTypeError ;};if _eebae .Len ()!=2{_bdd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eebae .Len ());return nil ,ErrInvalidAttribute ;};_fgcdd .Extend =_eebae ;};return &_fgcdd ,nil ;};func (_ebec *PdfReader )newPdfAnnotationStrikeOut (_dbcf *_da .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fdga :=PdfAnnotationStrikeOut {};_ebg ,_agfe :=_ebec .newPdfAnnotationMarkupFromDict (_dbcf );if _agfe !=nil {return nil ,_agfe ;};_fdga .PdfAnnotationMarkup =_ebg ;_fdga .QuadPoints =_dbcf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fdga ,nil ;};func _egdfa ()string {return _accbbe };func (_bgdg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ffaf =author };type pdfFontType0 struct{fontCommon ;_ggbfd *_da .PdfIndirectObject ;_gacd _ceb .TextEncoder ;Encoding _da .PdfObject ;DescendantFont *PdfFont ;_acbdf *_ga .CMap ;};func (_gaca fontCommon )fontFlags ()int {if _gaca ._daeea ==nil {return 0;};return _gaca ._daeea ._fadg ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_bdffd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_acad ,_ ,_cgaa :=_bdffd .CharcodesToUnicodeWithStats (_bdffd .BytesToCharcodes (data ));_acdb :=_ceb .ExpandLigatures (_acad );return _acdb ,_f .RuneCountInString (_acdb ),_cgaa ;};func (_agafg *PdfWriter )writeBytes (_ffgaa []byte ){if _agafg ._ggef !=nil {return ;};_dcffd ,_becf :=_agafg ._deffg .Write (_ffgaa );_agafg ._efddg +=int64 (_dcffd );_agafg ._ggef =_becf ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_ddgb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_effe :=range pages {_effe =_effe .Duplicate ();_bbddf (_effe );_ddgb ._gca =append (_ddgb ._gca ,_effe );};return ;};var _aafbg ="";

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dcecd *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_da .StreamEncoder ,error ){_bfceef ,_fdfd :=_dcecd ._febc .(*_da .PdfObjectStream );if !_fdfd {_bdd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcecd ._febc );return nil ,nil ,_da .ErrTypeError ;};_facf ,_cbcg :=_da .DecodeStream (_bfceef );if _cbcg !=nil {_bdd .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_cbcg );return nil ,nil ,_cbcg ;};_bbfa ,_cbcg :=_da .NewEncoderFromStream (_bfceef );if _cbcg !=nil {_bdd .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cbcg );return nil ,nil ,_cbcg ;};return _facf ,_bbfa ,nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_ddae :=NewPdfAnnotation ();_cc :=&PdfAnnotationText {};_cc .PdfAnnotation =_ddae ;_cc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddae .SetContext (_cc );return _cc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dcbc *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcfaf :=vals [0];if _bcfaf < 0.0||_bcfaf > 1.0{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbae :=NewPdfColorCalGray (_bcfaf );return _bbae ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_bccgda =title };

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_da .PdfObjectInteger ;TilingType *_da .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_da .PdfObjectFloat ;YStep *_da .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_da .PdfObjectArray ;};func _dggec (_ddbga []rune ,_afbbf map[rune ]int ,_dbaed map[rune ]_bgb .GID )*_da .PdfObjectArray {_adbd :=&_da .PdfObjectArray {};for _cbeg :=0;_cbeg < len (_ddbga );{_gbgb :=_afbbf [_ddbga [_cbeg ]];_ffdab :=_cbeg ;for _cefcg :=_cbeg +1;_cefcg < len (_ddbga );_cefcg ++{_bffd :=_afbbf [_ddbga [_cefcg ]];if _gbgb ==_bffd {_ffdab =_cefcg ;}else {break ;};};_cbdc :=_dbaed [_ddbga [_cbeg ]];_dfga :=_dbaed [_ddbga [_ffdab ]];_adbd .Append (_da .MakeInteger (int64 (_cbdc )));_adbd .Append (_da .MakeInteger (int64 (_dfga )));_adbd .Append (_da .MakeInteger (int64 (_gbgb )));_cbeg =_ffdab +1;};return _adbd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdbfd *PdfPageResourcesColorspaces )ToPdfObject ()_da .PdfObject {_dbff :=_da .MakeDict ();for _ ,_gdbfeb :=range _fdbfd .Names {_dbff .Set (_da .PdfObjectName (_gdbfeb ),_fdbfd .Colorspaces [_gdbfeb ].ToPdfObject ());};if _fdbfd ._eged !=nil {_fdbfd ._eged .PdfObject =_dbff ;return _fdbfd ._eged ;};return _dbff ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bfbfa *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cegdg ,_fbef :=color .(*PdfColorCalGray );if !_fbef {_bdd .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cegdg .Val ();X :=_bfbfa .WhitePoint [0]*_ec .Pow (ANorm ,_bfbfa .Gamma );Y :=_bfbfa .WhitePoint [1]*_ec .Pow (ANorm ,_bfbfa .Gamma );Z :=_bfbfa .WhitePoint [2]*_ec .Pow (ANorm ,_bfbfa .Gamma );_ffef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cbbb :=-0.969256*X +1.875992*Y +0.041556*Z ;_dde :=0.055648*X +-0.204043*Y +1.057311*Z ;_ffef =_ec .Min (_ec .Max (_ffef ,0),1.0);_cbbb =_ec .Min (_ec .Max (_cbbb ,0),1.0);_dde =_ec .Min (_ec .Max (_dde ,0),1.0);return NewPdfColorDeviceRGB (_ffef ,_cbbb ,_dde ),nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_bfb :=NewPdfAnnotation ();_cda :=&PdfAnnotationStamp {};_cda .PdfAnnotation =_bfb ;_cda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfb .SetContext (_cda );return _cda ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _da .PdfObject ;BS _da .PdfObject ;LE _da .PdfObject ;IC _da .PdfObject ;LL _da .PdfObject ;LLE _da .PdfObject ;Cap _da .PdfObject ;IT _da .PdfObject ;LLO _da .PdfObject ;CP _da .PdfObject ;Measure _da .PdfObject ;CO _da .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bffe *PdfAnnotation3D )ToPdfObject ()_da .PdfObject {_bffe .PdfAnnotation .ToPdfObject ();_efd :=_bffe ._dda ;_bgdd :=_efd .PdfObject .(*_da .PdfObjectDictionary );_bgdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0033\u0044"));_bgdd .SetIfNotNil ("\u0033\u0044\u0044",_bffe .T3DD );_bgdd .SetIfNotNil ("\u0033\u0044\u0056",_bffe .T3DV );_bgdd .SetIfNotNil ("\u0033\u0044\u0041",_bffe .T3DA );_bgdd .SetIfNotNil ("\u0033\u0044\u0049",_bffe .T3DI );_bgdd .SetIfNotNil ("\u0033\u0044\u0042",_bffe .T3DB );return _efd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ddage *PdfColorspaceLab )GetNumComponents ()int {return 3};func _ebbadc ()string {return _ffaf };

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_edeb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_da .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_eeec []_da .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gcdf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_aaf *PdfReader )newPdfAnnotationCircleFromDict (_bbd *_da .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fagf :=PdfAnnotationCircle {};_fcg ,_aeda :=_aaf .newPdfAnnotationMarkupFromDict (_bbd );if _aeda !=nil {return nil ,_aeda ;};_fagf .PdfAnnotationMarkup =_fcg ;_fagf .BS =_bbd .Get ("\u0042\u0053");_fagf .IC =_bbd .Get ("\u0049\u0043");_fagf .BE =_bbd .Get ("\u0042\u0045");_fagf .RD =_bbd .Get ("\u0052\u0044");return &_fagf ,nil ;};func (_ggefc *PdfWriter )seekByName (_gcgf _da .PdfObject ,_aacga []string ,_aabb string )([]_da .PdfObject ,error ){_bdd .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gcgf );var _becd []_da .PdfObject ;if _degcf ,_daefb :=_gcgf .(*_da .PdfIndirectObject );_daefb {return _ggefc .seekByName (_degcf .PdfObject ,_aacga ,_aabb );};if _bggaa ,_dgcef :=_gcgf .(*_da .PdfObjectStream );_dgcef {return _ggefc .seekByName (_bggaa .PdfObjectDictionary ,_aacga ,_aabb );};if _eeebdc ,_gccgg :=_gcgf .(*_da .PdfObjectDictionary );_gccgg {_bdd .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bgcef :=range _eeebdc .Keys (){_gbfae :=_eeebdc .Get (_bgcef );if string (_bgcef )==_aabb {_becd =append (_becd ,_gbfae );};for _ ,_cfbec :=range _aacga {if string (_bgcef )==_cfbec {_bdd .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cfbec );_afafc ,_agfgf :=_ggefc .seekByName (_gbfae ,_aacga ,_aabb );if _agfgf !=nil {return _becd ,_agfgf ;};for _ ,_ebbeb :=range _afafc {_becd =append (_becd ,_ebbeb );};break ;};};};return _becd ,nil ;};return _becd ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _da .PdfObject )(_da .PdfObjectName ,error ){var _ebef *_da .PdfObjectName ;var _deaa *_da .PdfObjectArray ;if _adgaa ,_ggbe :=obj .(*_da .PdfIndirectObject );_ggbe {if _cecd ,_gggab :=_adgaa .PdfObject .(*_da .PdfObjectArray );_gggab {_deaa =_cecd ;}else if _adbec ,_fgd :=_adgaa .PdfObject .(*_da .PdfObjectName );_fgd {_ebef =_adbec ;};}else if _bcgcd ,_bfcgfd :=obj .(*_da .PdfObjectArray );_bfcgfd {_deaa =_bcgcd ;}else if _cdca ,_gefgg :=obj .(*_da .PdfObjectName );_gefgg {_ebef =_cdca ;};if _ebef !=nil {switch *_ebef {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_ebef ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_ebef ,nil ;};};if _deaa !=nil &&_deaa .Len ()> 0{if _afae ,_afcd :=_deaa .Get (0).(*_da .PdfObjectName );_afcd {switch *_afae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _deaa .Len ()==1{return *_afae ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_afae ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_afae ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_afae ,nil ;};};};return "",nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bdeb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cebd ,_bacf :=_da .GetNumbersAsFloat (objects );if _bacf !=nil {return nil ,_bacf ;};return _bdeb .ColorFromFloats (_cebd );};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fege *PdfColorspaceLab )ToPdfObject ()_da .PdfObject {_fefag :=_da .MakeArray ();_fefag .Append (_da .MakeName ("\u004c\u0061\u0062"));_agffd :=_da .MakeDict ();if _fege .WhitePoint !=nil {_adbb :=_da .MakeArray (_da .MakeFloat (_fege .WhitePoint [0]),_da .MakeFloat (_fege .WhitePoint [1]),_da .MakeFloat (_fege .WhitePoint [2]));_agffd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_adbb );}else {_bdd .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _fege .BlackPoint !=nil {_gffa :=_da .MakeArray (_da .MakeFloat (_fege .BlackPoint [0]),_da .MakeFloat (_fege .BlackPoint [1]),_da .MakeFloat (_fege .BlackPoint [2]));_agffd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gffa );};if _fege .Range !=nil {_bafb :=_da .MakeArray (_da .MakeFloat (_fege .Range [0]),_da .MakeFloat (_fege .Range [1]),_da .MakeFloat (_fege .Range [2]),_da .MakeFloat (_fege .Range [3]));_agffd .Set ("\u0052\u0061\u006eg\u0065",_bafb );};_fefag .Append (_agffd );if _fege ._bdbge !=nil {_fege ._bdbge .PdfObject =_fefag ;return _fege ._bdbge ;};return _fefag ;};

// SetContext sets the sub annotation (context).
func (_afd *PdfAnnotation )SetContext (ctx PdfModel ){_afd ._cae =ctx };

// ToPdfObject implements interface PdfModel.
func (_beaa *PdfAnnotationWidget )ToPdfObject ()_da .PdfObject {_beaa .PdfAnnotation .ToPdfObject ();_gaae :=_beaa ._dda ;_bbdd :=_gaae .PdfObject .(*_da .PdfObjectDictionary );if _beaa ._bedb {return _gaae ;};_beaa ._bedb =true ;_bbdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_da .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_bbdd .SetIfNotNil ("\u0048",_beaa .H );_bbdd .SetIfNotNil ("\u004d\u004b",_beaa .MK );_bbdd .SetIfNotNil ("\u0041",_beaa .A );_bbdd .SetIfNotNil ("\u0041\u0041",_beaa .AA );_bbdd .SetIfNotNil ("\u0042\u0053",_beaa .BS );_gccdg :=_beaa .Parent ;if _beaa ._gbec !=nil {if _beaa ._gbec ._dade ==_beaa ._dda {_beaa ._gbec .ToPdfObject ();};_gccdg =_beaa ._gbec .GetContainingPdfObject ();};if _gccdg !=_gaae {_bbdd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gccdg );};_beaa ._bedb =false ;return _gaae ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dfecd *PdfShadingType4 )ToPdfObject ()_da .PdfObject {_dfecd .PdfShading .ToPdfObject ();_ebbb ,_eeffc :=_dfecd .getShadingDict ();if _eeffc !=nil {_bdd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dfecd .BitsPerCoordinate !=nil {_ebbb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dfecd .BitsPerCoordinate );};if _dfecd .BitsPerComponent !=nil {_ebbb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dfecd .BitsPerComponent );};if _dfecd .BitsPerFlag !=nil {_ebbb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dfecd .BitsPerFlag );};if _dfecd .Decode !=nil {_ebbb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dfecd .Decode );};if _dfecd .Function !=nil {if len (_dfecd .Function )==1{_ebbb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dfecd .Function [0].ToPdfObject ());}else {_beaga :=_da .MakeArray ();for _ ,_feacd :=range _dfecd .Function {_beaga .Append (_feacd .ToPdfObject ());};_ebbb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beaga );};};return _dfecd ._ggcdb ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_eedc :=NewPdfAnnotation ();_cdg :=&PdfAnnotationScreen {};_cdg .PdfAnnotation =_eedc ;_eedc .SetContext (_cdg );return _cdg ;};func _fedc (_afbbb _da .PdfObject )(*PdfFunctionType2 ,error ){_aefbc :=&PdfFunctionType2 {};var _caddf *_da .PdfObjectDictionary ;if _bdeab ,_eeabc :=_afbbb .(*_da .PdfIndirectObject );_eeabc {_ebecc ,_defaa :=_bdeab .PdfObject .(*_da .PdfObjectDictionary );if !_defaa {return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aefbc ._cdfg =_bdeab ;_caddf =_ebecc ;}else if _dagdf ,_gedf :=_afbbb .(*_da .PdfObjectDictionary );_gedf {_caddf =_dagdf ;}else {return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdd .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_caddf .String ());_degbe ,_cfcg :=_da .TraceToDirectObject (_caddf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_da .PdfObjectArray );if !_cfcg {_bdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_dbf .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _degbe .Len ()< 0||_degbe .Len ()%2!=0{_bdd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_dbf .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ddfd ,_beaab :=_degbe .ToFloat64Array ();if _beaab !=nil {return nil ,_beaab ;};_aefbc .Domain =_ddfd ;_degbe ,_cfcg =_da .TraceToDirectObject (_caddf .Get ("\u0052\u0061\u006eg\u0065")).(*_da .PdfObjectArray );if _cfcg {if _degbe .Len ()< 0||_degbe .Len ()%2!=0{return nil ,_dbf .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_adba ,_fbcca :=_degbe .ToFloat64Array ();if _fbcca !=nil {return nil ,_fbcca ;};_aefbc .Range =_adba ;};_degbe ,_cfcg =_da .TraceToDirectObject (_caddf .Get ("\u0043\u0030")).(*_da .PdfObjectArray );if _cfcg {_bdgg ,_ggbg :=_degbe .ToFloat64Array ();if _ggbg !=nil {return nil ,_ggbg ;};_aefbc .C0 =_bdgg ;};_degbe ,_cfcg =_da .TraceToDirectObject (_caddf .Get ("\u0043\u0031")).(*_da .PdfObjectArray );if _cfcg {_bdcfd ,_cacb :=_degbe .ToFloat64Array ();if _cacb !=nil {return nil ,_cacb ;};_aefbc .C1 =_bdcfd ;};if len (_aefbc .C0 )!=len (_aefbc .C1 ){_bdd .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_da .ErrRangeError ;};N ,_beaab :=_da .GetNumberAsFloat (_da .TraceToDirectObject (_caddf .Get ("\u004e")));if _beaab !=nil {_bdd .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_caddf .String ());return nil ,_beaab ;};_aefbc .N =N ;return _aefbc ,nil ;};

// String returns a string representation of what flags are set.
func (_cddac FieldFlag )String ()string {_gcca :="";if _cddac ==FieldFlagClear {_gcca ="\u0043\u006c\u0065a\u0072";return _gcca ;};if _cddac &FieldFlagReadOnly > 0{_gcca +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cddac &FieldFlagRequired > 0{_gcca +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cddac &FieldFlagNoExport > 0{_gcca +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cddac &FieldFlagNoToggleToOff > 0{_gcca +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cddac &FieldFlagRadio > 0{_gcca +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _cddac &FieldFlagPushbutton > 0{_gcca +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cddac &FieldFlagRadiosInUnision > 0{_gcca +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cddac &FieldFlagMultiline > 0{_gcca +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _cddac &FieldFlagPassword > 0{_gcca +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cddac &FieldFlagFileSelect > 0{_gcca +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cddac &FieldFlagDoNotScroll > 0{_gcca +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _cddac &FieldFlagComb > 0{_gcca +="\u007c\u0043\u006fm\u0062";};if _cddac &FieldFlagRichText > 0{_gcca +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cddac &FieldFlagDoNotSpellCheck > 0{_gcca +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _cddac &FieldFlagCombo > 0{_gcca +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cddac &FieldFlagEdit > 0{_gcca +="\u007c\u0045\u0064i\u0074";};if _cddac &FieldFlagSort > 0{_gcca +="\u007c\u0053\u006fr\u0074";};if _cddac &FieldFlagMultiSelect > 0{_gcca +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _cddac &FieldFlagCommitOnSelChange > 0{_gcca +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _dg .Trim (_gcca ,"\u007c");};

// RemovePage removes a page by number.
func (_edfa *PdfAppender )RemovePage (pageNum int ){_ddce :=pageNum -1;_edfa ._gca =append (_edfa ._gca [0:_ddce ],_edfa ._gca [pageNum :]...);};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_daa :=NewPdfAction ();_ced :=&PdfActionHide {};_ced .PdfAction =_daa ;_daa .SetContext (_ced );return _ced ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bdbe *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bdbe .UnderlyingCS ==nil {return nil ,_dbf .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _bdbe .UnderlyingCS .ColorFromFloats (vals );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_cbae *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_fdcfe *PdfWriter )writeObject (_efbf int ,_fdce _da .PdfObject ){_bdd .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_efbf );if _caecb ,_ddgdd :=_fdce .(*_da .PdfIndirectObject );_ddgdd {_fdcfe ._cdaffd [_efbf ]=crossReference {Type :1,Offset :_fdcfe ._efddg ,Generation :_caecb .GenerationNumber };_fcgdg :=_bd .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_efbf );if _gcebcd ,_begff :=_caecb .PdfObject .(*pdfSignDictionary );_begff {_gcebcd ._gdccc =_fdcfe ._efddg +int64 (len (_fcgdg ));};if _caecb .PdfObject ==nil {_bdd .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_caecb .PdfObject =_da .MakeNull ();};_fcgdg +=_caecb .PdfObject .WriteString ();_fcgdg +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_fdcfe .writeString (_fcgdg );return ;};if _fafad ,_eefdd :=_fdce .(*_da .PdfObjectStream );_eefdd {_fdcfe ._cdaffd [_efbf ]=crossReference {Type :1,Offset :_fdcfe ._efddg ,Generation :_fafad .GenerationNumber };_cadba :=_bd .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_efbf );_cadba +=_fafad .PdfObjectDictionary .WriteString ();_cadba +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fdcfe .writeString (_cadba );_fdcfe .writeBytes (_fafad .Stream );_fdcfe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _aedca ,_fedbb :=_fdce .(*_da .PdfObjectStreams );_fedbb {_fdcfe ._cdaffd [_efbf ]=crossReference {Type :1,Offset :_fdcfe ._efddg ,Generation :_aedca .GenerationNumber };_gfefa :=_bd .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_efbf );var _cfbac []string ;var _fdfdc string ;var _addbg int64 ;for _egadd ,_gdcce :=range _aedca .Elements (){_bcfac ,_egced :=_gdcce .(*_da .PdfIndirectObject );if !_egced {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_efbf ,_gdcce );continue ;};_dccec :=_bcfac .PdfObject .WriteString ()+"\u0020";_fdfdc =_fdfdc +_dccec ;_cfbac =append (_cfbac ,_bd .Sprintf ("\u0025\u0064\u0020%\u0064",_bcfac .ObjectNumber ,_addbg ));_fdcfe ._cdaffd [int (_bcfac .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_efbf ,Index :_egadd };_addbg =_addbg +int64 (len ([]byte (_dccec )));};_eddbce :=_dg .Join (_cfbac ,"\u0020")+"\u0020";_dbfac :=_da .NewFlateEncoder ();_fefacd :=_dbfac .MakeStreamDict ();_fefacd .Set (_da .PdfObjectName ("\u0054\u0079\u0070\u0065"),_da .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_egab :=int64 (_aedca .Len ());_fefacd .Set (_da .PdfObjectName ("\u004e"),_da .MakeInteger (_egab ));_dcfe :=int64 (len (_eddbce ));_fefacd .Set (_da .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_da .MakeInteger (_dcfe ));_fadf ,_ :=_dbfac .EncodeBytes ([]byte (_eddbce +_fdfdc ));_cefab :=int64 (len (_fadf ));_fefacd .Set (_da .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_da .MakeInteger (_cefab ));_gfefa +=_fefacd .WriteString ();_gfefa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fdcfe .writeString (_gfefa );_fdcfe .writeBytes (_fadf );_fdcfe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_fdcfe .writeString (_fdce .WriteString ());};func (_cedb *PdfReader )newPdfActionRenditionFromDict (_dga *_da .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dga .Get ("\u0052"),AN :_dga .Get ("\u0041\u004e"),OP :_dga .Get ("\u004f\u0050"),JS :_dga .Get ("\u004a\u0053")},nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bgd :=NewPdfAction ();_agg :=&PdfActionSound {};_agg .PdfAction =_bgd ;_bgd .SetContext (_agg );return _agg ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _c .Time )(PdfDate ,error ){_fdcbb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_acgeeb ,_ :=_db .ParseInt (_fdcbb [1:3],10,32);_ccgab ,_ :=_db .ParseInt (_fdcbb [4:6],10,32);return PdfDate {_faege :int64 (timeObj .Year ()),_egbdc :int64 (timeObj .Month ()),_edffb :int64 (timeObj .Day ()),_agceg :int64 (timeObj .Hour ()),_gfdbd :int64 (timeObj .Minute ()),_dcbef :int64 (timeObj .Second ()),_dafbc :_fdcbb [0],_caggc :_acgeeb ,_abcb :_ccgab },nil ;};

// SetImage updates XObject Image with new image data.
func (_gaaadd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gaaadd .Filter .UpdateParams (img .GetParamsDict ());_cceefe ,_efaed :=_gaaadd .Filter .EncodeBytes (img .Data );if _efaed !=nil {return _efaed ;};_gaaadd .Stream =_cceefe ;_aefae :=img .Width ;_gaaadd .Width =&_aefae ;_cgedad :=img .Height ;_gaaadd .Height =&_cgedad ;_decgc :=img .BitsPerComponent ;_gaaadd .BitsPerComponent =&_decgc ;if cs ==nil {if img .ColorComponents ==1{_gaaadd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gaaadd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gaaadd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _dbf .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gaaadd .ColorSpace =cs ;};return nil ;};

// SetAnnotations sets the annotations list.
func (_gageg *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gageg ._fcgd =annotations };

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bac :=NewPdfAnnotation ();_cafe :=&PdfAnnotationPrinterMark {};_cafe .PdfAnnotation =_bac ;_bac .SetContext (_cafe );return _cafe ;};func (_dcdea *Image )resampleLowBits (_babb []uint32 ){_gabba :=_agc .BytesPerLine (int (_dcdea .Width ),int (_dcdea .BitsPerComponent ),_dcdea .ColorComponents );_gaef :=make ([]byte ,_dcdea .ColorComponents *_gabba *int (_dcdea .Height ));_dccbg :=int (_dcdea .BitsPerComponent )*_dcdea .ColorComponents *int (_dcdea .Width );_bdfaf :=uint8 (8);var (_abdgb ,_edda int ;_ffffc uint32 ;);for _ffbfc :=0;_ffbfc < int (_dcdea .Height );_ffbfc ++{_edda =_ffbfc *_gabba ;for _cafed :=0;_cafed < _dccbg ;_cafed ++{_ffffc =_babb [_abdgb ];_bdfaf -=uint8 (_dcdea .BitsPerComponent );_gaef [_edda ]|=byte (_ffffc )<<_bdfaf ;if _bdfaf ==0{_bdfaf =8;_edda ++;};_abdgb ++;};};_dcdea .Data =_gaef ;};var _eecfa =_gd .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _bcgef (_ccccf *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_ccccf }};

// A returns the value of the A component of the color.
func (_bad *PdfColorLab )A ()float64 {return float64 (_bad [1])};

// ColorToRGB converts gray -> rgb for a single color component.
func (_babg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_adgd ,_afcg :=color .(*PdfColorDeviceGray );if !_afcg {_bdd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_dbf .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_adgd ),float64 (*_adgd ),float64 (*_adgd )),nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bcaf :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bcaf ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _da .PdfObject ;ColorSpace _da .PdfObject ;Pattern _da .PdfObject ;Shading _da .PdfObject ;XObject _da .PdfObject ;Font _da .PdfObject ;ProcSet _da .PdfObject ;Properties _da .PdfObject ;_bacae *_da .PdfObjectDictionary ;_fcdbg *PdfPageResourcesColorspaces ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cgebd :=PdfColorLab {l ,a ,b };return &_cgebd };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _da .PdfObject ;Volume _da .PdfObject ;Synchronous _da .PdfObject ;Repeat _da .PdfObject ;Mix _da .PdfObject ;};

// Encoder returns the font's text encoder.
func (_cddfe pdfCIDFontType2 )Encoder ()_ceb .TextEncoder {return _cddfe ._dgfbb };func (_cbgg *PdfReader )newPdfAnnotationTrapNetFromDict (_gbcc *_da .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_addf :=PdfAnnotationTrapNet {};return &_addf ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gfb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_agde *PdfOutlineItem )GetContainingPdfObject ()_da .PdfObject {return _agde ._aaece };

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cfga :=NewPdfAnnotation ();_fcf :=&PdfAnnotationWatermark {};_fcf .PdfAnnotation =_cfga ;_cfga .SetContext (_fcf );return _fcf ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _da .PdfObject ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_da .PdfObjectString ;Q *_da .PdfObjectInteger ;DS *_da .PdfObjectString ;RV _da .PdfObject ;MaxLen *_da .PdfObjectInteger ;};type fontCommon struct{_eeacc string ;_bcga string ;_ebdg string ;_ecgdf _da .PdfObject ;_ecda *_ga .CMap ;_daeea *PdfFontDescriptor ;_fefaf int64 ;};func _fcbac (_gbbed *_da .PdfObjectDictionary ,_ecbb *fontCommon ,_eddca _ceb .TextEncoder )(*pdfFontSimple ,error ){_cebcc :=_eggfda (_ecbb );_cebcc ._ecacg =_eddca ;if _eddca ==nil {_bdcb :=_gbbed .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bdcb ==nil {_bdcb =_da .MakeInteger (0);};_cebcc .FirstChar =_bdcb ;_eagd ,_egbe :=_da .GetIntVal (_bdcb );if !_egbe {_bdd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bdcb );return nil ,_da .ErrTypeError ;};_bbbd :=_ceb .CharCode (_eagd );_bdcb =_gbbed .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bdcb ==nil {_bdcb =_da .MakeInteger (255);};_cebcc .LastChar =_bdcb ;_eagd ,_egbe =_da .GetIntVal (_bdcb );if !_egbe {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bdcb );return nil ,_da .ErrTypeError ;};_fcdfg :=_ceb .CharCode (_eagd );_cebcc ._acfc =make (map[_ceb .CharCode ]float64 );_bdcb =_gbbed .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bdcb !=nil {_cebcc .Widths =_bdcb ;_gafb ,_efee :=_da .GetArray (_bdcb );if !_efee {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bdcb );return nil ,_da .ErrTypeError ;};_aacdb ,_addca :=_gafb .ToFloat64Array ();if _addca !=nil {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_addca ;};if len (_aacdb )!=int (_fcdfg -_bbbd +1){_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fcdfg -_bbbd +1,len (_aacdb ));return nil ,_da .ErrRangeError ;};for _aafc ,_cebg :=range _aacdb {_cebcc ._acfc [_bbbd +_ceb .CharCode (_aafc )]=_cebg ;};};};_cebcc .Encoding =_da .TraceToDirectObject (_gbbed .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cebcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_geed *PdfActionResetForm )ToPdfObject ()_da .PdfObject {_geed .PdfAction .ToPdfObject ();_bca :=_geed ._fca ;_gdf :=_bca .PdfObject .(*_da .PdfObjectDictionary );_gdf .SetIfNotNil ("\u0053",_da .MakeName (string (ActionTypeResetForm )));_gdf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_geed .Fields );_gdf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_geed .Flags );return _bca ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ccac *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_da .PdfObjectStream ;Data []byte ;_caebe *_da .PdfIndirectObject ;_ecdce *_da .PdfObjectStream ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_beef *XObjectForm )GetContainingPdfObject ()_da .PdfObject {return _beef ._efcga };

// WriteToFile writes the Appender output to file specified by path.
func (_bbgf *PdfAppender )WriteToFile (outputPath string )error {_bdgc ,_aad :=_ag .Create (outputPath );if _aad !=nil {return _aad ;};defer _bdgc .Close ();return _bbgf .Write (_bdgc );};

// GetContainingPdfObject implements interface PdfModel.
func (_gde *PdfAction )GetContainingPdfObject ()_da .PdfObject {return _gde ._fca };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_abba *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_da .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_dbf .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacc ,_bfdc :=_da .GetNumbersAsFloat (objects );if _bfdc !=nil {return nil ,_bfdc ;};return _abba .ColorFromFloats (_cacc );};func (_edgeb *PdfReader )resolveReference (_gfcdc *_da .PdfObjectReference )(_da .PdfObject ,bool ,error ){_ecdbc ,_ecef :=_edgeb ._baeg .ObjCache [int (_gfcdc .ObjectNumber )];if !_ecef {_bdd .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gfcdc );_ddadg ,_gebcc :=_edgeb ._baeg .LookupByReference (*_gfcdc );if _gebcc !=nil {return nil ,false ,_gebcc ;};_edgeb ._baeg .ObjCache [int (_gfcdc .ObjectNumber )]=_ddadg ;return _ddadg ,false ,nil ;};return _ecdbc ,true ,nil ;};

// IsColored specifies if the pattern is colored.
func (_dcgf *PdfTilingPattern )IsColored ()bool {if _dcgf .PaintType !=nil &&*_dcgf .PaintType ==1{return true ;};return false ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_egeg *PdfPageResources )GetExtGState (keyName _da .PdfObjectName )(_da .PdfObject ,bool ){if _egeg .ExtGState ==nil {return nil ,false ;};_cddeab ,_bcdg :=_da .TraceToDirectObject (_egeg .ExtGState ).(*_da .PdfObjectDictionary );if !_bcdg {_bdd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egeg .ExtGState );return nil ,false ;};if _bbfga :=_cddeab .Get (keyName );_bbfga !=nil {return _bbfga ,true ;};return nil ,false ;};func (_edef *PdfReader )newPdfFieldSignatureFromDict (_afbc *_da .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gbdbe :=&PdfFieldSignature {};_dcdf ,_bacfe :=_da .GetIndirect (_afbc .Get ("\u0056"));if _bacfe {var _fdggb error ;_gbdbe .V ,_fdggb =_edef .newPdfSignatureFromIndirect (_dcdf );if _fdggb !=nil {return nil ,_fdggb ;};};_gbdbe .Lock ,_ =_da .GetIndirect (_afbc .Get ("\u004c\u006f\u0063\u006b"));_gbdbe .SV ,_ =_da .GetIndirect (_afbc .Get ("\u0053\u0056"));return _gbdbe ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_deedf *PdfPageResources )SetXObjectFormByName (keyName _da .PdfObjectName ,xform *XObjectForm )error {_ggecdf :=xform .ToPdfObject ().(*_da .PdfObjectStream );_eaafg :=_deedf .SetXObjectByName (keyName ,_ggecdf );return _eaafg ;};func _gbgbg (_ceceb *_da .PdfObjectDictionary )(*PdfShadingType6 ,error ){_afec :=PdfShadingType6 {};_cafgc :=_ceceb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cafgc ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ccbfc ,_cedg :=_cafgc .(*_da .PdfObjectInteger );if !_cedg {_bdd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cafgc );return nil ,_da .ErrTypeError ;};_afec .BitsPerCoordinate =_ccbfc ;_cafgc =_ceceb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cafgc ==nil {_bdd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ccbfc ,_cedg =_cafgc .(*_da .PdfObjectInteger );if !_cedg {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cafgc );return nil ,_da .ErrTypeError ;};_afec .BitsPerComponent =_ccbfc ;_cafgc =_ceceb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cafgc ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccbfc ,_cedg =_cafgc .(*_da .PdfObjectInteger );if !_cedg {_bdd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cafgc );return nil ,_da .ErrTypeError ;};_afec .BitsPerComponent =_ccbfc ;_cafgc =_ceceb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cafgc ==nil {_bdd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cbdb ,_cedg :=_cafgc .(*_da .PdfObjectArray );if !_cedg {_bdd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cafgc );return nil ,_da .ErrTypeError ;};_afec .Decode =_cbdb ;if _cfgc :=_ceceb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cfgc !=nil {_afec .Function =[]PdfFunction {};if _daae ,_aecfa :=_cfgc .(*_da .PdfObjectArray );_aecfa {for _ ,_dbce :=range _daae .Elements (){_fbcb ,_ebbc :=_ffdgg (_dbce );if _ebbc !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebbc );return nil ,_ebbc ;};_afec .Function =append (_afec .Function ,_fbcb );};}else {_afee ,_dcefe :=_ffdgg (_cfgc );if _dcefe !=nil {_bdd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcefe );return nil ,_dcefe ;};_afec .Function =append (_afec .Function ,_afee );};};return &_afec ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fdbb :=NewPdfAnnotation ();_dcd :=&PdfAnnotationPopup {};_dcd .PdfAnnotation =_fdbb ;_fdbb .SetContext (_dcd );return _dcd ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_fgaf :=&PdfOutline {_cdab :_da .MakeIndirectObject (_da .MakeDict ())};_fgaf ._cfbge =_fgaf ;return _fgaf ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_ggfcdg *PdfPageResources )SetFontByName (keyName _da .PdfObjectName ,obj _da .PdfObject )error {if _ggfcdg .Font ==nil {_ggfcdg .Font =_da .MakeDict ();};_egcdc ,_bcadf :=_da .TraceToDirectObject (_ggfcdg .Font ).(*_da .PdfObjectDictionary );if !_bcadf {_bdd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_da .TraceToDirectObject (_ggfcdg .Font ));return _da .ErrTypeError ;};_egcdc .Set (keyName ,obj );return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_fgbb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_da .PdfObjectDictionary )(*PdfPageResources ,error ){_ccgdf :=NewPdfPageResources ();if _bcfcff :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bcfcff !=nil {_ccgdf .ExtGState =_bcfcff ;};if _bafee :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bafee !=nil &&!_da .IsNullObject (_bafee ){_ccgdf .ColorSpace =_bafee ;};if _fdcab :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_fdcab !=nil {_ccgdf .Pattern =_fdcab ;};if _baaab :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_baaab !=nil {_ccgdf .Shading =_baaab ;};if _fgdgc :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fgdgc !=nil {_ccgdf .XObject =_fgdgc ;};if _fadcg :=_da .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fadcg !=nil {_ccgdf .Font =_fadcg ;};if _dbebg :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_dbebg !=nil {_ccgdf .ProcSet =_dbebg ;};if _ggeb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ggeb !=nil {_ccgdf .Properties =_ggeb ;};return _ccgdf ,nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_fgg :=&PdfColorspaceLab {};_fgg .BlackPoint =[]float64 {0.0,0.0,0.0};_fgg .Range =[]float64 {-100,100,-100,100};return _fgg ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func _ggefe (_dbebbd *_da .PdfObjectArray )(float64 ,error ){_dcdead ,_ffbec :=_dbebbd .ToFloat64Array ();if _ffbec !=nil {_bdd .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbebbd ,_ffbec );};switch len (_dcdead ){case 1:return _dcdead [0],nil ;case 3:_cfgd :=PdfColorspaceDeviceRGB {};_bggdf ,_ecfcf :=_cfgd .ColorFromFloats (_dcdead );if _ecfcf !=nil {return 0.0,_ecfcf ;};return _bggdf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fbfcf :=PdfColorspaceDeviceCMYK {};_accfg ,_gfbf :=_fbfcf .ColorFromFloats (_dcdead );if _gfbf !=nil {return 0.0,_gfbf ;};_cdfbc ,_gfbf :=_fbfcf .ColorToRGB (_accfg .(*PdfColorDeviceCMYK ));if _gfbf !=nil {return 0.0,_gfbf ;};return _cdfbc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ffbec =_dbf .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_bdd .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbebbd ,_ffbec );return 0.0,_ffbec ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_afaa *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _afaa ._fcgd ==nil {_afaa .GetAnnotations ();};_afaa ._fcgd =append (_afaa ._fcgd ,annot );};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_fce :=NewPdfAction ();_aa :=&PdfActionSetOCGState {};_aa .PdfAction =_fce ;_fce .SetContext (_aa );return _aa ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bfac *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bfac .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bfac ._abbe =acroForm ;};

// SetLocation sets the `Location` field of the signature.
func (_cabfg *PdfSignature )SetLocation (location string ){_cabfg .Location =_da .MakeString (location )};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aafbg =creator };

// ToPdfObject returns the PDF representation of the page resources.
func (_baddf *PdfPageResources )ToPdfObject ()_da .PdfObject {_cacdb :=_baddf ._bacae ;_cacdb .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_baddf .ExtGState );if _baddf ._fcdbg !=nil {_baddf .ColorSpace =_baddf ._fcdbg .ToPdfObject ();};_cacdb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_baddf .ColorSpace );_cacdb .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_baddf .Pattern );_cacdb .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_baddf .Shading );_cacdb .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_baddf .XObject );_cacdb .SetIfNotNil ("\u0046\u006f\u006e\u0074",_baddf .Font );_cacdb .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_baddf .ProcSet );_cacdb .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_baddf .Properties );return _cacdb ;};

// Fill populates `form` with values provided by `provider`.
func (_fcffe *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fcffe .fill (provider ,nil )};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_adf :=NewPdfAction ();_gg :=&PdfActionGoToR {};_gg .PdfAction =_adf ;_adf .SetContext (_gg );return _gg ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _da .PdfObject ;LE _da .PdfObject ;BS _da .PdfObject ;IC _da .PdfObject ;BE _da .PdfObject ;IT _da .PdfObject ;Measure _da .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_edbfe *pdfCIDFontType2 )ToPdfObject ()_da .PdfObject {if _edbfe ._gfca ==nil {_edbfe ._gfca =&_da .PdfIndirectObject {};};_fgead :=_edbfe .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_edbfe ._gfca .PdfObject =_fgead ;if _edbfe .CIDSystemInfo !=nil {_fgead .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_edbfe .CIDSystemInfo );};if _edbfe .DW !=nil {_fgead .Set ("\u0044\u0057",_edbfe .DW );};if _edbfe .DW2 !=nil {_fgead .Set ("\u0044\u0057\u0032",_edbfe .DW2 );};if _edbfe .W !=nil {_fgead .Set ("\u0057",_edbfe .W );};if _edbfe .W2 !=nil {_fgead .Set ("\u0057\u0032",_edbfe .W2 );};if _edbfe .CIDToGIDMap !=nil {_fgead .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_edbfe .CIDToGIDMap );};return _edbfe ._gfca ;};