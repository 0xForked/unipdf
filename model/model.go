//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ga "bufio";_gag "bytes";_ge "crypto/md5";_dc "crypto/rand";_gb "crypto/sha1";_fc "crypto/x509";_eg "encoding/binary";_ed "encoding/hex";_fd "errors";_d "fmt";_cc "github.com/unidoc/pkcs7";_bb "github.com/unidoc/unipdf/v3/common";
_bbgb "github.com/unidoc/unipdf/v3/core";_fa "github.com/unidoc/unipdf/v3/core/security";_ef "github.com/unidoc/unipdf/v3/core/security/crypt";_afg "github.com/unidoc/unipdf/v3/internal/cmap";_ae "github.com/unidoc/unipdf/v3/internal/imageutil";_gd "github.com/unidoc/unipdf/v3/internal/license";
_bbg "github.com/unidoc/unipdf/v3/internal/sampling";_gcc "github.com/unidoc/unipdf/v3/internal/textencoding";_aa "github.com/unidoc/unipdf/v3/internal/timeutils";_fga "github.com/unidoc/unipdf/v3/internal/transform";_ccg "github.com/unidoc/unipdf/v3/model/internal/docutil";
_add "github.com/unidoc/unipdf/v3/model/internal/fonts";_ac "github.com/unidoc/unipdf/v3/model/sigutil";_adc "github.com/unidoc/unipdf/v3/ps";_egg "github.com/unidoc/unitype";_ag "golang.org/x/xerrors";_e "hash";_fb "image";_fg "image/color";_ "image/gif";
_ "image/png";_bf "io";_ad "io/ioutil";_ec "math";_b "math/rand";_gaa "os";_edc "regexp";_egc "sort";_c "strconv";_df "strings";_f "sync";_a "time";_af "unicode";_gbg "unicode/utf8";);

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bbgb .PdfObjectArray ;_agda *Image ;};

// Encoder returns the font's text encoder.
func (_eecbde *PdfFont )Encoder ()_gcc .TextEncoder {_cdfa :=_eecbde .actualFont ();if _cdfa ==nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_eecbde ._efcd );
return nil ;};return _cdfa .Encoder ();};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject implements interface PdfModel.
func (_dd *PdfActionJavaScript )ToPdfObject ()_bbgb .PdfObject {_dd .PdfAction .ToPdfObject ();_cgde :=_dd ._dce ;_afcd :=_cgde .PdfObject .(*_bbgb .PdfObjectDictionary );_afcd .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeJavaScript )));_afcd .SetIfNotNil ("\u004a\u0053",_dd .JS );
return _cgde ;};func (_bbeff *LTV )getCerts (_dabc []*_fc .Certificate )([][]byte ,error ){_dgebge :=make ([][]byte ,0,len (_dabc ));for _ ,_cffba :=range _dabc {_dgebge =append (_dgebge ,_cffba .Raw );};return _dgebge ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cadg *XObjectForm )SetContentStream (content []byte ,encoder _bbgb .StreamEncoder )error {_ecefg :=content ;if encoder ==nil {if _cadg .Filter !=nil {encoder =_cadg .Filter ;}else {encoder =_bbgb .NewRawEncoder ();};};_eegbf ,_cgbcd :=encoder .EncodeBytes (_ecefg );
if _cgbcd !=nil {return _cgbcd ;};_ecefg =_eegbf ;_cadg .Stream =_ecefg ;_cadg .Filter =encoder ;return nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_gfgea DefaultImageHandler )Read (reader _bf .Reader )(*Image ,error ){_dgcee ,_ ,_aegf :=_fb .Decode (reader );if _aegf !=nil {_bb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_aegf );
return nil ,_aegf ;};return _gfgea .NewImageFromGoImage (_dgcee );};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bbgb .PdfObjectStream )(*XObjectForm ,error ){_gbfef :=&XObjectForm {};_gbfef ._ddad =stream ;_bcafd :=*(stream .PdfObjectDictionary );_ebdc ,_afabee :=_bbgb .NewEncoderFromStream (stream );if _afabee !=nil {return nil ,_afabee ;
};_gbfef .Filter =_ebdc ;if _fbgeg :=_bcafd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fbgeg !=nil {_acdfb ,_ccdbgf :=_fbgeg .(*_bbgb .PdfObjectName );if !_ccdbgf {return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_acdfb !="\u0046\u006f\u0072\u006d"{_bb .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _cbbfa :=_bcafd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_cbbfa !=nil {_gbfef .FormType =_cbbfa ;};if _bffgbg :=_bcafd .Get ("\u0042\u0042\u006f\u0078");_bffgbg !=nil {_gbfef .BBox =_bffgbg ;};if _ccdbgb :=_bcafd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ccdbgb !=nil {_gbfef .Matrix =_ccdbgb ;};if _dfdgg :=_bcafd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dfdgg !=nil {_dfdgg =_bbgb .TraceToDirectObject (_dfdgg );_bcfdb ,_aeeba :=_dfdgg .(*_bbgb .PdfObjectDictionary );if !_aeeba {_bb .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bbgb .ErrTypeError ;};_efead ,_eaeag :=NewPdfPageResourcesFromDict (_bcfdb );if _eaeag !=nil {_bb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_eaeag ;};_gbfef .Resources =_efead ;_bb .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gbfef .Resources );};_gbfef .Group =_bcafd .Get ("\u0047\u0072\u006fu\u0070");
_gbfef .Ref =_bcafd .Get ("\u0052\u0065\u0066");_gbfef .MetaData =_bcafd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gbfef .PieceInfo =_bcafd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gbfef .LastModified =_bcafd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_gbfef .StructParent =_bcafd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gbfef .StructParents =_bcafd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gbfef .OPI =_bcafd .Get ("\u004f\u0050\u0049");
_gbfef .OC =_bcafd .Get ("\u004f\u0043");_gbfef .Name =_bcafd .Get ("\u004e\u0061\u006d\u0065");_gbfef .Stream =stream .Stream ;return _gbfef ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fdc :=&PdfAction {};_fdc ._dce =_bbgb .MakeIndirectObject (_bbgb .MakeDict ());return _fdc ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dgbac *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fbgac :=[]float64 {0.0};if _dgbac .C0 !=nil {_fbgac =_dgbac .C0 ;};_dceaf :=[]float64 {1.0};if _dgbac .C1 !=nil {_dceaf =_dgbac .C1 ;};var _dcacdd []float64 ;for _aabge :=0;_aabge < len (_fbgac );_aabge ++{_cddae :=_fbgac [_aabge ]+_ec .Pow (x [0],_dgbac .N )*(_dceaf [_aabge ]-_fbgac [_aabge ]);
_dcacdd =append (_dcacdd ,_cddae );};return _dcacdd ,nil ;};

// GetOutlineTree returns the outline tree.
func (_faacd *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _faacd ._cgcac };

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cdcca *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_abcgb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_bdbbb ,_egcbc :=_cdcca .GetNumPages ();if _egcbc !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egcbc );
return nil ,_egcbc ;};for _babcfe :=1;_babcfe <=_bdbbb ;_babcfe ++{_ebgdd ,_deegg :=_cdcca .GetPage (_babcfe );if _deegg !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deegg );return nil ,_deegg ;};if opts .PageProcessCallback !=nil {_deegg =opts .PageProcessCallback (_babcfe ,_ebgdd );
if _deegg !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deegg );return nil ,_deegg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_babcfe ,_ebgdd );};_deegg =_abcgb .AddPage (_ebgdd );if _deegg !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deegg );
return nil ,_deegg ;};};_abcgb ._faabe =_cdcca .PdfVersion ();if !opts .SkipInfo {_fbaca ,_bgdd :=_cdcca .GetPdfInfo ();if _bgdd !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgdd );}else {_abcgb ._bgfbb .PdfObject =_fbaca .ToPdfObject ();
};};if !opts .SkipAcroForm {_fcfg :=_abcgb .SetForms (_cdcca .AcroForm );if _fcfg !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcfg );return nil ,_fcfg ;};};if !opts .SkipOutlines {_abcgb .AddOutlineTree (_cdcca .GetOutlineTree ());
};if !opts .SkipOCProperties {_ebbfc ,_gdfbc :=_cdcca .GetOCProperties ();if _gdfbc !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdfbc );}else {_gdfbc =_abcgb .SetOCProperties (_ebbfc );if _gdfbc !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdfbc );
};};};if !opts .SkipPageLabels {_efgg ,_cefeec :=_cdcca .GetPageLabels ();if _cefeec !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefeec );}else {_cefeec =_abcgb .SetPageLabels (_efgg );if _cefeec !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cefeec );
};};};if !opts .SkipNamedDests {_eebb ,_fbgbf :=_cdcca .GetNamedDestinations ();if _fbgbf !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgbf );}else {_fbgbf =_abcgb .SetNamedDestinations (_eebb );if _fbgbf !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgbf );
};};};if !opts .SkipNameDictionary {_caafd ,_ffgab :=_cdcca .GetNameDictionary ();if _ffgab !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffgab );}else {_ffgab =_abcgb .SetNameDictionary (_caafd );if _ffgab !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffgab );
};};};if !opts .SkipRotation &&_cdcca .Rotate !=nil {if _cdgb :=_abcgb .SetRotation (*_cdcca .Rotate );_cdgb !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdgb );};};return &_abcgb ,nil ;};func (_ecgg *PdfReader )newPdfActionSoundFromDict (_cgdf *_bbgb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_cgdf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_cgdf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_cgdf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_cgdf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_cgdf .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bbgb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bbgb .PdfObject ;A _bbgb .PdfObject ;SE _bbgb .PdfObject ;C _bbgb .PdfObject ;
F _bbgb .PdfObject ;_dacfc *_bbgb .PdfIndirectObject ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_afc :=NewPdfAction ();_fdd :=&PdfActionGoToE {};_fdd .PdfAction =_afc ;_afc .SetContext (_fdd );return _fdd ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_ebbcg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bgcf :=func (_badd float64 )float64 {if _badd >=6.0/29{return _badd *_badd *_badd ;};return 108.0/841*(_badd -4/29);};_dfae :=img ._baegcb ;if len (_dfae )!=6{_bb .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_dfae =_ebbcg .DecodeArray ();};_fdeb :=_bbg .NewReader (img .getBase ());_dcea :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bcbg ,img ._baegcb );_gdece :=_bbg .NewWriter (_dcea );_cfcgg :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;
_caeg :=make ([]uint32 ,3);var (_gfbf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_adda ,_dafc ,_cbfg float64 ;);for {_gfbf =_fdeb .ReadSamples (_caeg );if _gfbf ==_bf .EOF {break ;}else if _gfbf !=nil {return img ,_gfbf ;};Ls =float64 (_caeg [0])/_cfcgg ;As =float64 (_caeg [1])/_cfcgg ;
Bs =float64 (_caeg [2])/_cfcgg ;Ls =_ae .LinearInterpolate (Ls ,0.0,1.0,_dfae [0],_dfae [1]);As =_ae .LinearInterpolate (As ,0.0,1.0,_dfae [2],_dfae [3]);Bs =_ae .LinearInterpolate (Bs ,0.0,1.0,_dfae [4],_dfae [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_ebbcg .WhitePoint [0]*_bgcf (L );Y =_ebbcg .WhitePoint [1]*_bgcf (M );Z =_ebbcg .WhitePoint [2]*_bgcf (N );_adda =3.240479*X +-1.537150*Y +-0.498535*Z ;_dafc =-0.969256*X +1.875992*Y +0.041556*Z ;_cbfg =0.055648*X +-0.204043*Y +1.057311*Z ;
_adda =_ec .Min (_ec .Max (_adda ,0),1.0);_dafc =_ec .Min (_ec .Max (_dafc ,0),1.0);_cbfg =_ec .Min (_ec .Max (_cbfg ,0),1.0);_caeg [0]=uint32 (_adda *_cfcgg );_caeg [1]=uint32 (_dafc *_cfcgg );_caeg [2]=uint32 (_cbfg *_cfcgg );if _gfbf =_gdece .WriteSamples (_caeg );
_gfbf !=nil {return img ,_gfbf ;};};return _cfegb (&_dcea ),nil ;};

// SetFlag sets the flag for the field.
func (_bgfgd *PdfField )SetFlag (flag FieldFlag ){_bgfgd .Ff =_bbgb .MakeInteger (int64 (flag ))};

// ToPdfObject implements interface PdfModel.
func (_fea *PdfActionGoTo3DView )ToPdfObject ()_bbgb .PdfObject {_fea .PdfAction .ToPdfObject ();_ada :=_fea ._dce ;_gefe :=_ada .PdfObject .(*_bbgb .PdfObjectDictionary );_gefe .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeGoTo3DView )));_gefe .SetIfNotNil ("\u0054\u0041",_fea .TA );
_gefe .SetIfNotNil ("\u0056",_fea .V );return _ada ;};func (_ccdf fontCommon )isCIDFont ()bool {if _ccdf ._fagd ==""{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccdf );
};_fdagf :=false ;switch _ccdf ._fagd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fdagf =true ;};_bb .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fdagf ,_ccdf );
return _fdagf ;};func _bdef (_cfeed string )map[string ]string {_aafbe :=_ccgfg .Split (_cfeed ,-1);_agbgef :=map[string ]string {};for _ ,_dbgcg :=range _aafbe {_dgdba :=_agdea .FindStringSubmatch (_dbgcg );if _dgdba ==nil {continue ;};_ffdce ,_fefe :=_dgdba [1],_dgdba [2];
_agbgef [_ffdce ]=_fefe ;};return _agbgef ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_decee *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=_decee .GetNumComponents (){return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeaf ,_cbea :=_bbgb .GetNumbersAsFloat (objects );
if _cbea !=nil {return nil ,_cbea ;};return _decee .ColorFromFloats (_aeaf );};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbgb .PdfObject ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_caca *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fd .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_gdef ,_cebag :=_ae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bcbg ,img ._baegcb );if _cebag !=nil {return img ,_cebag ;};_daab ,_cebag :=_ae .NRGBAConverter .Convert (_gdef );
if _cebag !=nil {return img ,_cebag ;};_fbfg :=_cfegb (_daab .Base ());_bb .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bb .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_bb .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fbfg .Data );_bb .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fbfg );return _fbfg ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bbfg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cagca :=vals [0];_aagf :=[]float64 {_cagca };_dgab ,_eabf :=_bbfg .TintTransform .Evaluate (_aagf );
if _eabf !=nil {_bb .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_eabf );_bb .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bbfg .TintTransform );
return nil ,_eabf ;};_bb .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_dgab ,_bbfg .AlternateSpace );
_bfbd ,_eabf :=_bbfg .AlternateSpace .ColorFromFloats (_dgab );if _eabf !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_eabf );
return nil ,_eabf ;};return _bfbd ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gad :=NewPdfAnnotation ();_gfg :=&PdfAnnotationWatermark {};_gfg .PdfAnnotation =_gad ;_gad .SetContext (_gfg );return _gfg ;};func (_aaa *PdfReader )newPdfActionResetFormFromDict (_acaf *_bbgb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_acaf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_acaf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_cfab *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ceeg ,_gggd :=color .(*PdfColorPattern );if !_gggd {_bb .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ceeg .Color ==nil {return color ,nil ;};if _cfab .UnderlyingCS ==nil {return nil ,_fd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _cfab .UnderlyingCS .ColorToRGB (_ceeg .Color );
};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bgdg :=NewPdfAnnotation ();_dfb :=&PdfAnnotationSquare {};_dfb .PdfAnnotation =_bgdg ;_dfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgdg .SetContext (_dfb );return _dfb ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cfdb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggdc ,_fcceg :=color .(*PdfColorDeviceCMYK );if !_fcceg {_bb .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edga :=_ggdc .C ();_geaa :=_ggdc .M ();_ffcd :=_ggdc .Y ();_cdcg :=_ggdc .K ();_edga =_edga *(1-_cdcg )+_cdcg ;_geaa =_geaa *(1-_cdcg )+_cdcg ;
_ffcd =_ffcd *(1-_cdcg )+_cdcg ;_baad :=1-_edga ;_ffda :=1-_geaa ;_fcgb :=1-_ffcd ;return NewPdfColorDeviceRGB (_baad ,_ffda ,_fcgb ),nil ;};func (_gabda *PdfReader )lookupPageByObject (_cefac _bbgb .PdfObject )(*PdfPage ,error ){return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func _cfcd (_efdc *_bbgb .PdfObjectDictionary )*VRI {_baggf ,_ :=_bbgb .GetString (_efdc .Get ("\u0054\u0055"));_bdec ,_ :=_bbgb .GetString (_efdc .Get ("\u0054\u0053"));return &VRI {Cert :_ecfge (_efdc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_ecfge (_efdc .Get ("\u004f\u0043\u0053\u0050")),CRL :_ecfge (_efdc .Get ("\u0043\u0052\u004c")),TU :_baggf ,TS :_bdec };
};func (_fce *PdfReader )newPdfAnnotationWidgetFromDict (_cada *_bbgb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fgef :=PdfAnnotationWidget {};_fgef .H =_cada .Get ("\u0048");_fgef .MK =_cada .Get ("\u004d\u004b");_fgef .A =_cada .Get ("\u0041");
_fgef .AA =_cada .Get ("\u0041\u0041");_fgef .BS =_cada .Get ("\u0042\u0053");_fgef .Parent =_cada .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fgef ,nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gbe :=NewPdfAction ();_aeg :=&PdfActionResetForm {};_aeg .PdfAction =_gbe ;_gbe .SetContext (_aeg );return _aeg ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);func (_fbfc *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _bf .ReadSeeker )(*PdfFont ,error ){const _gfbe =_gcc .CharCode (32);const _fgaee =_gcc .CharCode (255);_ccefe ,_gbaae :=_ad .ReadAll (r );if _gbaae !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gbaae );
return nil ,_gbaae ;};_dgcga ,_gbaae :=_add .TtfParse (_gag .NewReader (_ccefe ));if _gbaae !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_gbaae );
return nil ,_gbaae ;};_accf :=&pdfFontSimple {_ceec :make (map[_gcc .CharCode ]float64 ),fontCommon :fontCommon {_fagd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_accf ._fddbf =_gcc .NewWinAnsiEncoder ();_accf ._debfe =_dgcga .PostScriptName ;
_accf .FirstChar =_bbgb .MakeInteger (int64 (_gfbe ));_accf .LastChar =_bbgb .MakeInteger (int64 (_fgaee ));_gfabe :=1000.0/float64 (_dgcga .UnitsPerEm );if len (_dgcga .Widths )<=0{return nil ,_fd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bdea :=_gfabe *float64 (_dgcga .Widths [0]);_fabab :=make ([]float64 ,0,_fgaee -_gfbe +1);for _bdebc :=_gfbe ;_bdebc <=_fgaee ;_bdebc ++{_cdaa ,_ebfc :=_accf .Encoder ().CharcodeToRune (_bdebc );if !_ebfc {_bb .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_bdebc );
_fabab =append (_fabab ,_bdea );continue ;};_eefe ,_bcfg :=_dgcga .Chars [_cdaa ];if !_bcfg {_bb .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_fabab =append (_fabab ,_bdea );continue ;
};_fagdb :=_gfabe *float64 (_dgcga .Widths [_eefe ]);_fabab =append (_fabab ,_fagdb );};_accf .Widths =_bbgb .MakeIndirectObject (_bbgb .MakeArrayFromFloats (_fabab ));if len (_fabab )< int (_fgaee -_gfbe +1){_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_fabab ),255-32+1);
return nil ,_bbgb .ErrRangeError ;};for _eceg :=_gfbe ;_eceg <=_fgaee ;_eceg ++{_accf ._ceec [_eceg ]=_fabab [_eceg -_gfbe ];};_accf .Encoding =_bbgb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gcfdfe :=&PdfFontDescriptor {};
_gcfdfe .FontName =_bbgb .MakeName (_dgcga .PostScriptName );_gcfdfe .Ascent =_bbgb .MakeFloat (_gfabe *float64 (_dgcga .TypoAscender ));_gcfdfe .Descent =_bbgb .MakeFloat (_gfabe *float64 (_dgcga .TypoDescender ));_gcfdfe .CapHeight =_bbgb .MakeFloat (_gfabe *float64 (_dgcga .CapHeight ));
_gcfdfe .FontBBox =_bbgb .MakeArrayFromFloats ([]float64 {_gfabe *float64 (_dgcga .Xmin ),_gfabe *float64 (_dgcga .Ymin ),_gfabe *float64 (_dgcga .Xmax ),_gfabe *float64 (_dgcga .Ymax )});_gcfdfe .ItalicAngle =_bbgb .MakeFloat (_dgcga .ItalicAngle );_gcfdfe .MissingWidth =_bbgb .MakeFloat (_gfabe *float64 (_dgcga .Widths [0]));
_abee ,_gbaae :=_bbgb .MakeStream (_ccefe ,_bbgb .NewFlateEncoder ());if _gbaae !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gbaae );
return nil ,_gbaae ;};_abee .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbgb .MakeInteger (int64 (len (_ccefe ))));_gcfdfe .FontFile2 =_abee ;if _dgcga .Bold {_gcfdfe .StemV =_bbgb .MakeInteger (120);}else {_gcfdfe .StemV =_bbgb .MakeInteger (70);
};_acef :=_fead ;if _dgcga .IsFixedPitch {_acef |=_gadba ;};if _dgcga .ItalicAngle !=0{_acef |=_aeceb ;};_gcfdfe .Flags =_bbgb .MakeInteger (int64 (_acef ));_accf ._eaega =_gcfdfe ;_bbdga :=&PdfFont {_efcd :_accf };return _bbdga ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_aeee :=NewPdfAnnotation ();_dff :=&PdfAnnotationRichMedia {};_dff .PdfAnnotation =_aeee ;_aeee .SetContext (_dff );return _dff ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bgbc :_bbgb .MakeIndirectObject (_bbgb .MakeDict ())}};func (_afcf *PdfReader )newPdfAnnotationRichMediaFromDict (_fcaf *_bbgb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_eedc :=&PdfAnnotationRichMedia {};
_eedc .RichMediaSettings =_fcaf .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_eedc .RichMediaContent =_fcaf .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _eedc ,nil ;};func (_fdeg *fontFile )parseASCIIPart (_cabcd []byte )error {if len (_cabcd )< 2||string (_cabcd [:2])!="\u0025\u0021"{return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_ddgd ,_bdfb ,_febb :=_bfbdg (_cabcd );if _febb !=nil {return _febb ;};_gedf :=_bdef (_ddgd );_fdeg ._agfc =_gedf ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _fdeg ._agfc ==""{_bb .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _bdfb !=""{_fgfaf ,_ccaab :=_cdaec (_bdfb );if _ccaab !=nil {return _ccaab ;};_agef ,_ccaab :=_gcc .NewCustomSimpleTextEncoder (_fgfaf ,nil );if _ccaab !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ccaab );
return nil ;};_fdeg ._cegc =_agef ;};return nil ;};

// ReplacePage replaces the original page to a new page.
func (_gggb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_fcdcg :=pageNum -1;for _bdae :=range _gggb ._fegcd {if _bdae ==_fcdcg {_cgcba :=page .Duplicate ();_gefedg (_cgcba );_gggb ._fegcd [_bdae ]=_cgcba ;};};};

// ToPdfObject implements interface PdfModel.
func (_gcbd *PdfActionSound )ToPdfObject ()_bbgb .PdfObject {_gcbd .PdfAction .ToPdfObject ();_cgf :=_gcbd ._dce ;_cgcb :=_cgf .PdfObject .(*_bbgb .PdfObjectDictionary );_cgcb .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeSound )));_cgcb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gcbd .Sound );
_cgcb .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gcbd .Volume );_cgcb .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gcbd .Synchronous );_cgcb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gcbd .Repeat );
_cgcb .SetIfNotNil ("\u004d\u0069\u0078",_gcbd .Mix );return _cgf ;};func _bgcfc (_cgafa *_bbgb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_gfec :=&PdfFieldChoice {};_gfec .Opt ,_ =_bbgb .GetArray (_cgafa .Get ("\u004f\u0070\u0074"));_gfec .TI ,_ =_bbgb .GetInt (_cgafa .Get ("\u0054\u0049"));
_gfec .I ,_ =_bbgb .GetArray (_cgafa .Get ("\u0049"));return _gfec ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bbgb .PdfObject ;FS _bbgb .PdfObject ;F _bbgb .PdfObject ;UF _bbgb .PdfObject ;DOS _bbgb .PdfObject ;Mac _bbgb .PdfObject ;Unix _bbgb .PdfObject ;ID _bbgb .PdfObject ;V _bbgb .PdfObject ;EF _bbgb .PdfObject ;RF _bbgb .PdfObject ;
Desc _bbgb .PdfObject ;CI _bbgb .PdfObject ;_gcecd _bbgb .PdfObject ;};

// B returns the value of the blue component of the color.
func (_gacbd *PdfColorDeviceRGB )B ()float64 {return _gacbd [2]};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gbbfd *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_abec :=range pages {_abec =_abec .Duplicate ();_gefedg (_abec );_gbbfd ._fegcd =append (_gbbfd ._fegcd ,_abec );};};

// GetXObjectByName gets XObject by name.
func (_dgdbae *PdfPage )GetXObjectByName (name _bbgb .PdfObjectName )(_bbgb .PdfObject ,bool ){_ffgaa ,_gdeee :=_dgdbae .Resources .XObject .(*_bbgb .PdfObjectDictionary );if !_gdeee {return nil ,false ;};if _bedde :=_ffgaa .Get (name );_bedde !=nil {return _bedde ,true ;
};return nil ,false ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););const (_ PdfOutputIntentType =iota ;
PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);func (_ccgeb *PdfReader )newPdfAnnotationMovieFromDict (_cbcb *_bbgb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_aedf :=PdfAnnotationMovie {};
_aedf .T =_cbcb .Get ("\u0054");_aedf .Movie =_cbcb .Get ("\u004d\u006f\u0076i\u0065");_aedf .A =_cbcb .Get ("\u0041");return &_aedf ,nil ;};

// Items returns all children outline items.
func (_feaae *Outline )Items ()[]*OutlineItem {return _feaae .Entries };func (_aec *PdfReader )newPdfActionImportDataFromDict (_dedf *_bbgb .PdfObjectDictionary )(*PdfActionImportData ,error ){_cbdc ,_bbcg :=_cfg (_dedf .Get ("\u0046"));if _bbcg !=nil {return nil ,_bbcg ;
};return &PdfActionImportData {F :_cbdc },nil ;};

// ToPdfObject implements interface PdfModel.
func (_efcb *PdfAnnotationProjection )ToPdfObject ()_bbgb .PdfObject {_efcb .PdfAnnotation .ToPdfObject ();_ddb :=_efcb ._bce ;_dcfg :=_ddb .PdfObject .(*_bbgb .PdfObjectDictionary );_efcb .PdfAnnotationMarkup .appendToPdfDictionary (_dcfg );return _ddb ;
};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_becdf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _becdf .flattenFieldsWithOpts (false ,appgen ,opts );};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_efcg :=NewPdfAnnotation ();_cbdcc :=&PdfAnnotationPolyLine {};_cbdcc .PdfAnnotation =_efcg ;_cbdcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efcg .SetContext (_cbdcc );return _cbdcc ;};func _eedg (_aacgaf *[]*PdfField ,_bdggd FieldFilterFunc ,_aaff bool )[]*PdfField {if _aacgaf ==nil {return nil ;
};_eddg :=*_aacgaf ;if len (*_aacgaf )==0{return nil ;};_edcgb :=_eddg [:0];if _bdggd ==nil {_bdggd =func (*PdfField )bool {return true };};var _gcab []*PdfField ;for _ ,_egbec :=range _eddg {_abeef :=_bdggd (_egbec );if _abeef {_gcab =append (_gcab ,_egbec );
if len (_egbec .Kids )> 0{_gcab =append (_gcab ,_eedg (&_egbec .Kids ,_bdggd ,_aaff )...);};};if !_aaff ||!_abeef ||len (_egbec .Kids )> 0{_edcgb =append (_edcgb ,_egbec );};};*_aacgaf =_edcgb ;return _gcab ;};

// ValidateSignatures validates digital signatures in the document.
func (_dgfdf *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dgfdf .AcroForm ==nil {return nil ,nil ;};if _dgfdf .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gfffg *PdfSignature ;
_ebda *PdfField ;_eabd SignatureHandler ;};var _cabdc []*sigFieldPair ;for _ ,_baeaa :=range _dgfdf .AcroForm .AllFields (){if _baeaa .V ==nil {continue ;};if _feff ,_geggd :=_bbgb .GetDict (_baeaa .V );_geggd {if _agdgg ,_gefd :=_bbgb .GetNameVal (_feff .Get ("\u0054\u0079\u0070\u0065"));
_gefd &&_agdgg =="\u0053\u0069\u0067"{_bedec ,_gcbfd :=_bbgb .GetIndirect (_baeaa .V );if !_gcbfd {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_gfdaa ,_cbegd :=_dgfdf .newPdfSignatureFromIndirect (_bedec );if _cbegd !=nil {return nil ,_cbegd ;};var _aaagb SignatureHandler ;for _ ,_fgeccf :=range handlers {if _fgeccf .IsApplicable (_gfdaa ){_aaagb =_fgeccf ;break ;};
};_cabdc =append (_cabdc ,&sigFieldPair {_gfffg :_gfdaa ,_ebda :_baeaa ,_eabd :_aaagb });};};};var _aadbd []SignatureValidationResult ;for _ ,_aeab :=range _cabdc {_ggegge :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_aeab ._ebda }};
if _aeab ._eabd ==nil {_ggegge .Errors =append (_ggegge .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_aadbd =append (_aadbd ,_ggegge );continue ;};_ddgcf ,_eecg :=_aeab ._eabd .NewDigest (_aeab ._gfffg );
if _eecg !=nil {_ggegge .Errors =append (_ggegge .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_eecg .Error ());_aadbd =append (_aadbd ,_ggegge );continue ;};_fbfgd :=_aeab ._gfffg .ByteRange ;if _fbfgd ==nil {_ggegge .Errors =append (_ggegge .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
_aadbd =append (_aadbd ,_ggegge );continue ;};for _egddea :=0;_egddea < _fbfgd .Len ();_egddea =_egddea +2{_gddeb ,_ :=_bbgb .GetNumberAsInt64 (_fbfgd .Get (_egddea ));_bebaa ,_ :=_bbgb .GetIntVal (_fbfgd .Get (_egddea +1));if _ ,_dbad :=_dgfdf ._gcfce .Seek (_gddeb ,_bf .SeekStart );
_dbad !=nil {return nil ,_dbad ;};_aebdb :=make ([]byte ,_bebaa );if _ ,_bdaba :=_dgfdf ._gcfce .Read (_aebdb );_bdaba !=nil {return nil ,_bdaba ;};_ddgcf .Write (_aebdb );};_gaaac ,_eecg :=_aeab ._eabd .Validate (_aeab ._gfffg ,_ddgcf );if _eecg !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_eecg ,_aeab ._eabd );
_gaaac .Errors =append (_gaaac .Errors ,_eecg .Error ());};_gaaac .Name =_aeab ._gfffg .Name .Decoded ();_gaaac .Reason =_aeab ._gfffg .Reason .Decoded ();if _aeab ._gfffg .M !=nil {_fabdb ,_cgbca :=NewPdfDate (_aeab ._gfffg .M .String ());if _cgbca !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbca );
_gaaac .Errors =append (_gaaac .Errors ,_cgbca .Error ());continue ;};_gaaac .Date =_fabdb ;};_gaaac .ContactInfo =_aeab ._gfffg .ContactInfo .Decoded ();_gaaac .Location =_aeab ._gfffg .Location .Decoded ();_gaaac .Fields =_ggegge .Fields ;_aadbd =append (_aadbd ,_gaaac );
};return _aadbd ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ToPdfObject implements interface PdfModel.
func (_agee *PdfAnnotationMovie )ToPdfObject ()_bbgb .PdfObject {_agee .PdfAnnotation .ToPdfObject ();_aea :=_agee ._bce ;_gege :=_aea .PdfObject .(*_bbgb .PdfObjectDictionary );_gege .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u004d\u006f\u0076i\u0065"));
_gege .SetIfNotNil ("\u0054",_agee .T );_gege .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_agee .Movie );_gege .SetIfNotNil ("\u0041",_agee .A );return _aea ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_aeba *PdfAppender )UpdatePage (page *PdfPage ){_aeba .updateObjectsDeep (page .ToPdfObject (),nil )};func (_faab *DSS )addCerts (_egfe [][]byte )([]*_bbgb .PdfObjectStream ,error ){return _faab .add (&_faab .Certs ,_faab ._ecca ,_egfe );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bcgg *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_effc *PdfActionMovie )ToPdfObject ()_bbgb .PdfObject {_effc .PdfAction .ToPdfObject ();_bgfb :=_effc ._dce ;_fee :=_bgfb .PdfObject .(*_bbgb .PdfObjectDictionary );_fee .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeMovie )));_fee .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_effc .Annotation );
_fee .SetIfNotNil ("\u0054",_effc .T );_fee .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_effc .Operation );return _bgfb ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_dcb :=NewPdfAnnotation ();_addg :=&PdfAnnotation3D {};_addg .PdfAnnotation =_dcb ;_dcb .SetContext (_addg );return _addg ;};func (_egcd *PdfReader )newPdfAnnotationTrapNetFromDict (_gccd *_bbgb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dgec :=PdfAnnotationTrapNet {};
return &_dgec ,nil ;};func _aebac (_gadfd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gadfd }};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fceg *PdfOutlineItem )ToPdfObject ()_bbgb .PdfObject {_fdefa :=_fceg ._dacfc ;_dgcgc :=_fdefa .PdfObject .(*_bbgb .PdfObjectDictionary );_dgcgc .Set ("\u0054\u0069\u0074l\u0065",_fceg .Title );if _fceg .A !=nil {_dgcgc .Set ("\u0041",_fceg .A );
};if _ffad :=_dgcgc .Get ("\u0053\u0045");_ffad !=nil {_dgcgc .Remove ("\u0053\u0045");};if _fceg .C !=nil {_dgcgc .Set ("\u0043",_fceg .C );};if _fceg .Dest !=nil {_dgcgc .Set ("\u0044\u0065\u0073\u0074",_fceg .Dest );};if _fceg .F !=nil {_dgcgc .Set ("\u0046",_fceg .F );
};if _fceg .Count !=nil {_dgcgc .Set ("\u0043\u006f\u0075n\u0074",_bbgb .MakeInteger (*_fceg .Count ));};if _fceg .Next !=nil {_dgcgc .Set ("\u004e\u0065\u0078\u0074",_fceg .Next .ToPdfObject ());};if _fceg .First !=nil {_dgcgc .Set ("\u0046\u0069\u0072s\u0074",_fceg .First .ToPdfObject ());
};if _fceg .Prev !=nil {_dgcgc .Set ("\u0050\u0072\u0065\u0076",_fceg .Prev .GetContext ().GetContainingPdfObject ());};if _fceg .Last !=nil {_dgcgc .Set ("\u004c\u0061\u0073\u0074",_fceg .Last .GetContext ().GetContainingPdfObject ());};if _fceg .Parent !=nil {_dgcgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fceg .Parent .GetContext ().GetContainingPdfObject ());
};return _fdefa ;};func (_bffcbe SignatureValidationResult )String ()string {var _abgab _gag .Buffer ;_abgab .WriteString (_d .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_bffcbe .Name ));if _bffcbe .Date ._ceegb > 0{_abgab .WriteString (_d .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_bffcbe .Date .ToGoTime ().String ()));
}else {_abgab .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_bffcbe .Reason )> 0{_abgab .WriteString (_d .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bffcbe .Reason ));
}else {_abgab .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_bffcbe .Location )> 0{_abgab .WriteString (_d .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bffcbe .Location ));
}else {_abgab .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_bffcbe .ContactInfo )> 0{_abgab .WriteString (_d .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_bffcbe .ContactInfo ));
}else {_abgab .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_abgab .WriteString (_d .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_bffcbe .Fields )));
if _bffcbe .IsSigned {_abgab .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_abgab .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _bffcbe .IsVerified {_abgab .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_abgab .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _bffcbe .IsTrusted {_abgab .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_abgab .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_bffcbe .GeneralizedTime .IsZero (){_abgab .WriteString (_d .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_bffcbe .GeneralizedTime .String ()));};return _abgab .String ();};type fontCommon struct{_debfe string ;
_fagd string ;_beedc string ;_ddbff _bbgb .PdfObject ;_aafb *_afg .CMap ;_eaega *PdfFontDescriptor ;_dfacd int64 ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bbgb .PdfObject ,error );};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bbgb .PdfObject ;MK _bbgb .PdfObject ;A _bbgb .PdfObject ;AA _bbgb .PdfObject ;};

// String implements interface PdfObject.
func (_db *PdfAction )String ()string {_cd ,_ff :=_db .ToPdfObject ().(*_bbgb .PdfIndirectObject );if _ff {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_db ._agb ,_cd .PdfObject .String ());};return "";};func (_dfcf *PdfReader )newPdfActionTransFromDict (_dge *_bbgb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dge .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbgb .PdfObject ;};func _cdcd ()*modelManager {_aefaf :=modelManager {};_aefaf ._gfebc =map[PdfModel ]_bbgb .PdfObject {};_aefaf ._abbge =map[_bbgb .PdfObject ]PdfModel {};
return &_aefaf ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fafba *PdfReader )Decrypt (password []byte )(bool ,error ){_beegb ,_febgc :=_fafba ._abceg .Decrypt (password );if _febgc !=nil {return false ,_febgc ;};if !_beegb {return false ,nil ;};_febgc =_fafba .loadStructure ();if _febgc !=nil {_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_febgc );
return false ,_febgc ;};return true ,nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ceab :=&PdfColorspaceDeviceN {};return _ceab };

// CustomKeys returns all custom info keys as list.
func (_dfad *PdfInfo )CustomKeys ()[]string {if _dfad ._fbcd ==nil {return nil ;};_bfgg :=make ([]string ,len (_dfad ._fbcd .Keys ()));for _ ,_efgeb :=range _dfad ._fbcd .Keys (){_bfgg =append (_bfgg ,_efgeb .String ());};return _bfgg ;};func (_cgff *PdfReader )newPdfActionThreadFromDict (_bgcc *_bbgb .PdfObjectDictionary )(*PdfActionThread ,error ){_bac ,_ece :=_cfg (_bgcc .Get ("\u0046"));
if _ece !=nil {return nil ,_ece ;};return &PdfActionThread {D :_bgcc .Get ("\u0044"),B :_bgcc .Get ("\u0042"),F :_bac },nil ;};func _edfbd ()string {_cbdg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _gegc _gag .Buffer ;for _gagb :=0;_gagb < 6;_gagb ++{_gegc .WriteRune (rune (_cbdg [_b .Intn (len (_cbdg ))]));};return _gegc .String ();};

// ToPdfObject converts the font to a PDF representation.
func (_dcace *pdfFontType0 )ToPdfObject ()_bbgb .PdfObject {if _dcace ._agac ==nil {_dcace ._agac =&_bbgb .PdfIndirectObject {};};_affg :=_dcace .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_dcace ._agac .PdfObject =_affg ;if _dcace .Encoding !=nil {_affg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dcace .Encoding );
}else if _dcace ._bdfgf !=nil {_affg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dcace ._bdfgf .ToPdfObject ());};if _dcace .DescendantFont !=nil {_affg .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bbgb .MakeArray (_dcace .DescendantFont .ToPdfObject ()));
};return _dcace ._agac ;};

// ToPdfObject implements interface PdfModel.
func (_fddb *PdfAnnotationText )ToPdfObject ()_bbgb .PdfObject {_fddb .PdfAnnotation .ToPdfObject ();_efeg :=_fddb ._bce ;_geeg :=_efeg .PdfObject .(*_bbgb .PdfObjectDictionary );if _fddb .PdfAnnotationMarkup !=nil {_fddb .PdfAnnotationMarkup .appendToPdfDictionary (_geeg );
};_geeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0054\u0065\u0078\u0074"));_geeg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fddb .Open );_geeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fddb .Name );_geeg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fddb .State );
_geeg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fddb .StateModel );return _efeg ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bbgb .PdfObject ;Name _bbgb .PdfObject ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbgb .PdfObject ;};func (_ebfa *Image )samplesTrimPadding (_efegd []uint32 )[]uint32 {_dgdag :=_ebfa .ColorComponents *int (_ebfa .Width )*int (_ebfa .Height );if len (_efegd )==_dgdag {return _efegd ;
};_bbcgf :=make ([]uint32 ,_dgdag );_debdc :=int (_ebfa .Width )*_ebfa .ColorComponents ;var _gfefd ,_fcacc ,_cdgc ,_bgeed int ;_eccede :=_ae .BytesPerLine (int (_ebfa .Width ),int (_ebfa .BitsPerComponent ),_ebfa .ColorComponents );for _gfefd =0;_gfefd < int (_ebfa .Height );
_gfefd ++{_fcacc =_gfefd *int (_ebfa .Width );_cdgc =_gfefd *_eccede ;for _bgeed =0;_bgeed < _debdc ;_bgeed ++{_bbcgf [_fcacc +_bgeed ]=_efegd [_cdgc +_bgeed ];};};return _bbcgf ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_accdc :=&PdfSignature {Type :_bbgb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_cbffd :=&pdfSignDictionary {PdfObjectDictionary :_bbgb .MakeDict (),_aecff :&handler ,_gabecd :_accdc };
_accdc ._ccdaa =_bbgb .MakeIndirectObject (_cbffd );return _accdc ;};func (_gefa *PdfReader )newPdfAnnotationPopupFromDict (_gaaf *_bbgb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bdde :=PdfAnnotationPopup {};_bdde .Parent =_gaaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_bdde .Open =_gaaf .Get ("\u004f\u0070\u0065\u006e");return &_bdde ,nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_gageg :_bbgb .MakeDict ()};
};

// GetAction returns the PDF action for the annotation link.
func (_baga *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _baga ._gbd !=nil {return _baga ._gbd ,nil ;};if _baga .A ==nil {return nil ,nil ;};if _baga ._ddf ==nil {return nil ,nil ;};_bafe ,_bdfg :=_baga ._ddf .loadAction (_baga .A );if _bdfg !=nil {return nil ,_bdfg ;
};_baga ._gbd =_bafe ;return _baga ._gbd ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func _edgbc (_bfba _bbgb .PdfObject ,_cfebf *fontCommon )(*_afg .CMap ,error ){_gfee ,_acdgc :=_bbgb .GetStream (_bfba );
if !_acdgc {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_bfba );
return nil ,_bbgb .ErrTypeError ;};_gcee ,_fgcg :=_bbgb .DecodeStream (_gfee );if _fgcg !=nil {return nil ,_fgcg ;};_fbff ,_fgcg :=_afg .LoadCmapFromData (_gcee ,!_cfebf .isCIDFont ());if _fgcg !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_gfee .ObjectNumber ,_fgcg );
};return _fbff ,_fgcg ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_effe :=&PdfFieldSignature {};_effe .PdfField =NewPdfField ();_effe .PdfField .SetContext (_effe );_effe .PdfAnnotationWidget =NewPdfAnnotationWidget ();_effe .PdfAnnotationWidget .SetContext (_effe );
_effe .PdfAnnotationWidget ._bce =_effe .PdfField ._bgbc ;_effe .T =_bbgb .MakeString ("");_effe .F =_bbgb .MakeInteger (132);_effe .V =signature ;return _effe ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_fdfga *PdfReader )Inspect ()(map[string ]int ,error ){return _fdfga ._abceg .Inspect ()};func (_gab *PdfReader )newPdfActionURIFromDict (_cgcf *_bbgb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cgcf .Get ("\u0055\u0052\u0049"),IsMap :_cgcf .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_gfcf *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bbgb .PdfObject ;Open _bbgb .PdfObject ;};func (_cdfd *PdfReader )newPdfAnnotation3DFromDict (_fgeg *_bbgb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_dgf :=PdfAnnotation3D {};_dgf .T3DD =_fgeg .Get ("\u0033\u0044\u0044");
_dgf .T3DV =_fgeg .Get ("\u0033\u0044\u0056");_dgf .T3DA =_fgeg .Get ("\u0033\u0044\u0041");_dgf .T3DI =_fgeg .Get ("\u0033\u0044\u0049");_dgf .T3DB =_fgeg .Get ("\u0033\u0044\u0042");return &_dgf ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fcce *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bcbg []byte ;_baegcb []float64 ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_bdg *PdfAnnotationWidget )ToPdfObject ()_bbgb .PdfObject {_bdg .PdfAnnotation .ToPdfObject ();_cde :=_bdg ._bce ;_beae :=_cde .PdfObject .(*_bbgb .PdfObjectDictionary );if _bdg ._ce {return _cde ;};_bdg ._ce =true ;_beae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_beae .SetIfNotNil ("\u0048",_bdg .H );_beae .SetIfNotNil ("\u004d\u004b",_bdg .MK );_beae .SetIfNotNil ("\u0041",_bdg .A );_beae .SetIfNotNil ("\u0041\u0041",_bdg .AA );_beae .SetIfNotNil ("\u0042\u0053",_bdg .BS );_cfec :=_bdg .Parent ;if _bdg ._dagf !=nil {if _bdg ._dagf ._bgbc ==_bdg ._bce {_bdg ._dagf .ToPdfObject ();
};_cfec =_bdg ._dagf .GetContainingPdfObject ();};if _cfec !=_cde {_beae .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfec );};_bdg ._ce =false ;return _cde ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dgbad *_bbgb .PdfIndirectObject ;_deabc *_bbgb .PdfIndirectObject ;_edaad map[_bbgb .PdfObject ]struct{};_cagcad []_bbgb .PdfObject ;_bfded map[_bbgb .PdfObject ]struct{};_fbebf []*_bbgb .PdfIndirectObject ;_eedaa *PdfOutlineTreeNode ;
_dfcbd *_bbgb .PdfObjectDictionary ;_eggfa []_bbgb .PdfObject ;_bgfbb *_bbgb .PdfIndirectObject ;_gacdg *_ga .Writer ;_cfbdg int64 ;_cccge error ;_agdbe *_bbgb .PdfCrypt ;_agecd *_bbgb .PdfObjectDictionary ;_bebbea *_bbgb .PdfIndirectObject ;_ffded *_bbgb .PdfObjectArray ;
_faabe _bbgb .Version ;_ddefe *bool ;_cabbb map[_bbgb .PdfObject ][]*_bbgb .PdfObjectDictionary ;_agfeb *PdfAcroForm ;_ebbg Optimizer ;_bdggb StandardApplier ;_caadc map[int ]crossReference ;_cddga int64 ;ObjNumOffset int ;_aadfb bool ;_egacg _bbgb .XrefTable ;
_cabbcc int64 ;_ddccg int64 ;_aeeec map[_bbgb .PdfObject ]int64 ;_eebd map[_bbgb .PdfObject ]struct{};_bfbbea string ;_fefa []*PdfOutputIntent ;_fffff bool ;_eddgd ,_cebgb string ;};func (_dfg *PdfReader )newPdfAnnotationScreenFromDict (_gbaa *_bbgb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dcag :=PdfAnnotationScreen {};
_dcag .T =_gbaa .Get ("\u0054");_dcag .MK =_gbaa .Get ("\u004d\u004b");_dcag .A =_gbaa .Get ("\u0041");_dcag .AA =_gbaa .Get ("\u0041\u0041");return &_dcag ,nil ;};func _fcbe (_ffcde *_bbgb .PdfObjectStream )(*PdfFunctionType0 ,error ){_gdbgf :=&PdfFunctionType0 {};
_gdbgf ._eaca =_ffcde ;_eagba :=_ffcde .PdfObjectDictionary ;_debdf ,_aaac :=_bbgb .TraceToDirectObject (_eagba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbgb .PdfObjectArray );if !_aaac {_bb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _debdf .Len ()< 0||_debdf .Len ()%2!=0{_bb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gdbgf .NumInputs =_debdf .Len ()/2;_gced ,_gaeda :=_debdf .ToFloat64Array ();if _gaeda !=nil {return nil ,_gaeda ;};_gdbgf .Domain =_gced ;
_debdf ,_aaac =_bbgb .TraceToDirectObject (_eagba .Get ("\u0052\u0061\u006eg\u0065")).(*_bbgb .PdfObjectArray );if !_aaac {_bb .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _debdf .Len ()< 0||_debdf .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gdbgf .NumOutputs =_debdf .Len ()/2;_adca ,_gaeda :=_debdf .ToFloat64Array ();if _gaeda !=nil {return nil ,_gaeda ;
};_gdbgf .Range =_adca ;_debdf ,_aaac =_bbgb .TraceToDirectObject (_eagba .Get ("\u0053\u0069\u007a\u0065")).(*_bbgb .PdfObjectArray );if !_aaac {_bb .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gbgcb ,_gaeda :=_debdf .ToIntegerArray ();
if _gaeda !=nil {return nil ,_gaeda ;};if len (_gbgcb )!=_gdbgf .NumInputs {_bb .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbgf .Size =_gbgcb ;_fedg ,_aaac :=_bbgb .TraceToDirectObject (_eagba .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bbgb .PdfObjectInteger );
if !_aaac {_bb .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fedg !=1&&*_fedg !=2&&*_fedg !=4&&*_fedg !=8&&*_fedg !=12&&*_fedg !=16&&*_fedg !=24&&*_fedg !=32{_bb .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fedg );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbgf .BitsPerSample =int (*_fedg );_gdbgf .Order =1;_bebaf ,_aaac :=_bbgb .TraceToDirectObject (_eagba .Get ("\u004f\u0072\u0064e\u0072")).(*_bbgb .PdfObjectInteger );
if _aaac {if *_bebaf !=1&&*_bebaf !=3{_bb .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bebaf );return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbgf .Order =int (*_bebaf );
};_debdf ,_aaac =_bbgb .TraceToDirectObject (_eagba .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bbgb .PdfObjectArray );if _aaac {_bceab ,_fgdde :=_debdf .ToFloat64Array ();if _fgdde !=nil {return nil ,_fgdde ;};_gdbgf .Encode =_bceab ;};_debdf ,_aaac =_bbgb .TraceToDirectObject (_eagba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bbgb .PdfObjectArray );
if _aaac {_egffe ,_debbb :=_debdf .ToFloat64Array ();if _debbb !=nil {return nil ,_debbb ;};_gdbgf .Decode =_egffe ;};_dfgfb ,_gaeda :=_bbgb .DecodeStream (_ffcde );if _gaeda !=nil {return nil ,_gaeda ;};_gdbgf ._faff =_dfgfb ;return _gdbgf ,nil ;};func (_dgbga fontCommon )fontFlags ()int {if _dgbga ._eaega ==nil {return 0;
};return _dgbga ._eaega ._gdaee ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dfdb *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_bffbg *PdfReader )traverseObjectData (_fefd _bbgb .PdfObject )error {return _bbgb .ResolveReferencesDeep (_fefd ,_bffbg ._efad );
};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_fbdb :=NewPdfAnnotation ();_bceg :=&PdfAnnotationSound {};_bceg .PdfAnnotation =_fbdb ;_bceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbdb .SetContext (_bceg );return _bceg ;};var _ pdfFont =(*pdfFontSimple )(nil );


// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _a .Time )(PdfDate ,error ){_geggb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gecgb ,_ :=_c .ParseInt (_geggb [1:3],10,32);_fddaf ,_ :=_c .ParseInt (_geggb [4:6],10,32);return PdfDate {_ceegb :int64 (timeObj .Year ()),_ggdac :int64 (timeObj .Month ()),_fcdgb :int64 (timeObj .Day ()),_ggddg :int64 (timeObj .Hour ()),_gcbcg :int64 (timeObj .Minute ()),_aacd :int64 (timeObj .Second ()),_cgabdg :_geggb [0],_dgbaef :_gecgb ,_gfgdb :_fddaf },nil ;
};func (_bfaaf *PdfWriter )adjustXRefAffectedVersion (_aggga bool ){if _aggga &&_bfaaf ._faabe .Major ==1&&_bfaaf ._faabe .Minor < 5{_bfaaf ._faabe .Minor =5;};};func _ddgcc (_ccfd *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ccfd }};


// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_ddda *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_cdddg fontCommon )asPdfObjectDictionary (_babcf string )*_bbgb .PdfObjectDictionary {if _babcf !=""&&_cdddg ._fagd !=""&&_babcf !=_cdddg ._fagd {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_babcf ,_cdddg );
}else if _babcf ==""&&_cdddg ._fagd ==""{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cdddg );
}else if _cdddg ._fagd ==""{_cdddg ._fagd =_babcf ;};_aabg :=_bbgb .MakeDict ();_aabg .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0046\u006f\u006e\u0074"));_aabg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bbgb .MakeName (_cdddg ._debfe ));
_aabg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName (_cdddg ._fagd ));if _cdddg ._eaega !=nil {_aabg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_cdddg ._eaega .ToPdfObject ());};if _cdddg ._ddbff !=nil {_aabg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cdddg ._ddbff );
}else if _cdddg ._aafb !=nil {_aacb ,_gfcbd :=_cdddg ._aafb .Stream ();if _gfcbd !=nil {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_gfcbd );
}else {_aabg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_aacb );};};return _aabg ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bbgb .PdfObject ;AN _bbgb .PdfObject ;OP _bbgb .PdfObject ;JS _bbgb .PdfObject ;};func (_cfcc *PdfReader )newPdfAnnotationFromIndirectObject (_dbe *_bbgb .PdfIndirectObject )(*PdfAnnotation ,error ){_cgfc ,_effgf :=_dbe .PdfObject .(*_bbgb .PdfObjectDictionary );
if !_effgf {return nil ,_d .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cfcc ._cgadg .GetModelFromPrimitive (_cgfc );model !=nil {_gdc ,_fbg :=model .(*PdfAnnotation );if !_fbg {return nil ,_d .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gdc ,nil ;};_cef :=&PdfAnnotation {};_cef ._bce =_dbe ;_cfcc ._cgadg .Register (_cgfc ,_cef );if _gbc :=_cgfc .Get ("\u0054\u0079\u0070\u0065");_gbc !=nil {_bea ,_fde :=_gbc .(*_bbgb .PdfObjectName );if !_fde {_bb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gbc );
}else {if *_bea !="\u0041\u006e\u006eo\u0074"{_bb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_bea );};};};if _dfcg :=_cgfc .Get ("\u0052\u0065\u0063\u0074");
_dfcg !=nil {_cef .Rect =_dfcg ;};if _dgd :=_cgfc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dgd !=nil {_cef .Contents =_dgd ;};if _ceg :=_cgfc .Get ("\u0050");_ceg !=nil {_cef .P =_ceg ;};if _dagfc :=_cgfc .Get ("\u004e\u004d");_dagfc !=nil {_cef .NM =_dagfc ;
};if _cdfe :=_cgfc .Get ("\u004d");_cdfe !=nil {_cef .M =_cdfe ;};if _ccae :=_cgfc .Get ("\u0046");_ccae !=nil {_cef .F =_ccae ;};if _bbca :=_cgfc .Get ("\u0041\u0050");_bbca !=nil {_cef .AP =_bbca ;};if _fdb :=_cgfc .Get ("\u0041\u0053");_fdb !=nil {_cef .AS =_fdb ;
};if _daa :=_cgfc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_daa !=nil {_cef .Border =_daa ;};if _effcc :=_cgfc .Get ("\u0043");_effcc !=nil {_cef .C =_effcc ;};if _gafg :=_cgfc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gafg !=nil {_cef .StructParent =_gafg ;};if _ggc :=_cgfc .Get ("\u004f\u0043");_ggc !=nil {_cef .OC =_ggc ;};_afaa :=_cgfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _afaa ==nil {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_cef ._cged =nil ;return _cef ,nil ;};_abd ,_dca :=_afaa .(*_bbgb .PdfObjectName );if !_dca {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_afaa );
return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_afaa );};switch *_abd {case "\u0054\u0065\u0078\u0074":_dedff ,_fgb :=_cfcc .newPdfAnnotationTextFromDict (_cgfc );
if _fgb !=nil {return nil ,_fgb ;};_dedff .PdfAnnotation =_cef ;_cef ._cged =_dedff ;return _cef ,nil ;case "\u004c\u0069\u006e\u006b":_cfgf ,_dcfb :=_cfcc .newPdfAnnotationLinkFromDict (_cgfc );if _dcfb !=nil {return nil ,_dcfb ;};_cfgf .PdfAnnotation =_cef ;
_cef ._cged =_cfgf ;return _cef ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_feag ,_fbag :=_cfcc .newPdfAnnotationFreeTextFromDict (_cgfc );if _fbag !=nil {return nil ,_fbag ;};_feag .PdfAnnotation =_cef ;_cef ._cged =_feag ;return _cef ,nil ;
case "\u004c\u0069\u006e\u0065":_efcge ,_egeg :=_cfcc .newPdfAnnotationLineFromDict (_cgfc );if _egeg !=nil {return nil ,_egeg ;};_efcge .PdfAnnotation =_cef ;_cef ._cged =_efcge ;_bb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cef ,_cef );
_bb .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_efcge ,_efcge );_bb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_efcge .PdfAnnotationMarkup ,_efcge .PdfAnnotationMarkup );
return _cef ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_eea ,_bfdf :=_cfcc .newPdfAnnotationSquareFromDict (_cgfc );if _bfdf !=nil {return nil ,_bfdf ;};_eea .PdfAnnotation =_cef ;_cef ._cged =_eea ;return _cef ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_bdc ,_cdb :=_cfcc .newPdfAnnotationCircleFromDict (_cgfc );
if _cdb !=nil {return nil ,_cdb ;};_bdc .PdfAnnotation =_cef ;_cef ._cged =_bdc ;return _cef ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_gdcg ,_beab :=_cfcc .newPdfAnnotationPolygonFromDict (_cgfc );if _beab !=nil {return nil ,_beab ;};_gdcg .PdfAnnotation =_cef ;
_cef ._cged =_gdcg ;return _cef ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_egff ,_ggcf :=_cfcc .newPdfAnnotationPolyLineFromDict (_cgfc );if _ggcf !=nil {return nil ,_ggcf ;};_egff .PdfAnnotation =_cef ;_cef ._cged =_egff ;return _cef ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_gaea ,_aff :=_cfcc .newPdfAnnotationHighlightFromDict (_cgfc );if _aff !=nil {return nil ,_aff ;};_gaea .PdfAnnotation =_cef ;_cef ._cged =_gaea ;return _cef ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dee ,_gec :=_cfcc .newPdfAnnotationUnderlineFromDict (_cgfc );
if _gec !=nil {return nil ,_gec ;};_dee .PdfAnnotation =_cef ;_cef ._cged =_dee ;return _cef ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_fgc ,_ceb :=_cfcc .newPdfAnnotationSquigglyFromDict (_cgfc );if _ceb !=nil {return nil ,_ceb ;};
_fgc .PdfAnnotation =_cef ;_cef ._cged =_fgc ;return _cef ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fab ,_dbeg :=_cfcc .newPdfAnnotationStrikeOut (_cgfc );if _dbeg !=nil {return nil ,_dbeg ;};_fab .PdfAnnotation =_cef ;_cef ._cged =_fab ;
return _cef ,nil ;case "\u0043\u0061\u0072e\u0074":_bbd ,_bbgg :=_cfcc .newPdfAnnotationCaretFromDict (_cgfc );if _bbgg !=nil {return nil ,_bbgg ;};_bbd .PdfAnnotation =_cef ;_cef ._cged =_bbd ;return _cef ,nil ;case "\u0053\u0074\u0061m\u0070":_fgd ,_aacf :=_cfcc .newPdfAnnotationStampFromDict (_cgfc );
if _aacf !=nil {return nil ,_aacf ;};_fgd .PdfAnnotation =_cef ;_cef ._cged =_fgd ;return _cef ,nil ;case "\u0049\u006e\u006b":_dcff ,_fgba :=_cfcc .newPdfAnnotationInkFromDict (_cgfc );if _fgba !=nil {return nil ,_fgba ;};_dcff .PdfAnnotation =_cef ;_cef ._cged =_dcff ;
return _cef ,nil ;case "\u0050\u006f\u0070u\u0070":_feb ,_gadf :=_cfcc .newPdfAnnotationPopupFromDict (_cgfc );if _gadf !=nil {return nil ,_gadf ;};_feb .PdfAnnotation =_cef ;_cef ._cged =_feb ;return _cef ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dac ,_ecac :=_cfcc .newPdfAnnotationFileAttachmentFromDict (_cgfc );
if _ecac !=nil {return nil ,_ecac ;};_dac .PdfAnnotation =_cef ;_cef ._cged =_dac ;return _cef ,nil ;case "\u0053\u006f\u0075n\u0064":_fdg ,_ffae :=_cfcc .newPdfAnnotationSoundFromDict (_cgfc );if _ffae !=nil {return nil ,_ffae ;};_fdg .PdfAnnotation =_cef ;
_cef ._cged =_fdg ;return _cef ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bec ,_eaea :=_cfcc .newPdfAnnotationRichMediaFromDict (_cgfc );if _eaea !=nil {return nil ,_eaea ;};_bec .PdfAnnotation =_cef ;_cef ._cged =_bec ;return _cef ,nil ;
case "\u004d\u006f\u0076i\u0065":_cadbb ,_fecf :=_cfcc .newPdfAnnotationMovieFromDict (_cgfc );if _fecf !=nil {return nil ,_fecf ;};_cadbb .PdfAnnotation =_cef ;_cef ._cged =_cadbb ;return _cef ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cac ,_agbe :=_cfcc .newPdfAnnotationScreenFromDict (_cgfc );
if _agbe !=nil {return nil ,_agbe ;};_cac .PdfAnnotation =_cef ;_cef ._cged =_cac ;return _cef ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_beg ,_caeeb :=_cfcc .newPdfAnnotationWidgetFromDict (_cgfc );if _caeeb !=nil {return nil ,_caeeb ;};_beg .PdfAnnotation =_cef ;
_cef ._cged =_beg ;return _cef ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bffa ,_adg :=_cfcc .newPdfAnnotationPrinterMarkFromDict (_cgfc );if _adg !=nil {return nil ,_adg ;};_bffa .PdfAnnotation =_cef ;_cef ._cged =_bffa ;
return _cef ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_aebe ,_becg :=_cfcc .newPdfAnnotationTrapNetFromDict (_cgfc );if _becg !=nil {return nil ,_becg ;};_aebe .PdfAnnotation =_cef ;_cef ._cged =_aebe ;return _cef ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bfb ,_eda :=_cfcc .newPdfAnnotationWatermarkFromDict (_cgfc );
if _eda !=nil {return nil ,_eda ;};_bfb .PdfAnnotation =_cef ;_cef ._cged =_bfb ;return _cef ,nil ;case "\u0033\u0044":_fggd ,_bbggb :=_cfcc .newPdfAnnotation3DFromDict (_cgfc );if _bbggb !=nil {return nil ,_bbggb ;};_fggd .PdfAnnotation =_cef ;_cef ._cged =_fggd ;
return _cef ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bgfg ,_gdd :=_cfcc .newPdfAnnotationProjectionFromDict (_cgfc );if _gdd !=nil {return nil ,_gdd ;};_bgfg .PdfAnnotation =_cef ;_cef ._cged =_bgfg ;return _cef ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_aeffg ,_edg :=_cfcc .newPdfAnnotationRedactFromDict (_cgfc );if _edg !=nil {return nil ,_edg ;};_aeffg .PdfAnnotation =_cef ;_cef ._cged =_aeffg ;return _cef ,nil ;};_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_abd );
return nil ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bbgb .PdfObject ;IC _bbgb .PdfObject ;BE _bbgb .PdfObject ;RD _bbgb .PdfObject ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bbgb .PdfObject ;ColorSpace _bbgb .PdfObject ;Pattern _bbgb .PdfObject ;Shading _bbgb .PdfObject ;XObject _bbgb .PdfObject ;Font _bbgb .PdfObject ;ProcSet _bbgb .PdfObject ;Properties _bbgb .PdfObject ;_acgfg *_bbgb .PdfObjectDictionary ;
_fagce *PdfPageResourcesColorspaces ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_efe :=NewPdfAction ();_aag :=&PdfActionThread {};_aag .PdfAction =_efe ;_efe .SetContext (_aag );return _aag ;};func (_gfbbc *PdfWriter )writeOutlines ()error {if _gfbbc ._eedaa ==nil {return nil ;};_bb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gfbbc ._eedaa );
_cggg :=_gfbbc ._eedaa .ToPdfObject ();_bb .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cggg ,_cggg ,_cggg );_gfbbc ._dfcbd .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cggg );
_gadef :=_gfbbc .addObjects (_cggg );if _gadef !=nil {return _gadef ;};return nil ;};func (_effgc *pdfFontType0 )bytesToCharcodes (_bcdea []byte )([]_gcc .CharCode ,bool ){if _effgc ._bcdc ==nil {return nil ,false ;};_agcf ,_cadaa :=_effgc ._bcdc .BytesToCharcodes (_bcdea );
if !_cadaa {return nil ,false ;};_ddbdf :=make ([]_gcc .CharCode ,len (_agcf ));for _accgg ,_cgeb :=range _agcf {_ddbdf [_accgg ]=_gcc .CharCode (_cgeb );};return _ddbdf ,true ;};

// M returns the value of the magenta component of the color.
func (_cgag *PdfColorDeviceCMYK )M ()float64 {return _cgag [1]};

// ToPdfObject implements model.PdfModel interface.
func (_bddbb *PdfOutputIntent )ToPdfObject ()_bbgb .PdfObject {if _bddbb ._gageg ==nil {_bddbb ._gageg =_bbgb .MakeDict ();};_babcgg :=_bddbb ._gageg ;if _bddbb .Type !=""{_babcgg .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName (_bddbb .Type ));};_babcgg .Set ("\u0053",_bbgb .MakeName (_bddbb .S .String ()));
if _bddbb .OutputCondition !=""{_babcgg .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bbgb .MakeString (_bddbb .OutputCondition ));};_babcgg .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bbgb .MakeString (_bddbb .OutputConditionIdentifier ));
_babcgg .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bbgb .MakeString (_bddbb .RegistryName ));if _bddbb .Info !=""{_babcgg .Set ("\u0049\u006e\u0066\u006f",_bbgb .MakeString (_bddbb .Info ));};if len (_bddbb .DestOutputProfile )!=0{_cage ,_gfcfe :=_bbgb .MakeStream (_bddbb .DestOutputProfile ,_bbgb .NewFlateEncoder ());
if _gfcfe !=nil {_bb .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gfcfe );
};_cage .PdfObjectDictionary .Set ("\u004e",_bbgb .MakeInteger (int64 (_bddbb .ColorComponents )));_bcbbe :=make ([]float64 ,_bddbb .ColorComponents *2);for _gdgaa :=0;_gdgaa < _bddbb .ColorComponents *2;_gdgaa ++{_affdf :=0.0;if _gdgaa %2!=0{_affdf =1.0;
};_bcbbe [_gdgaa ]=_affdf ;};_cage .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bbgb .MakeArrayFromFloats (_bcbbe ));_babcgg .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_cage );};
return _babcgg ;};func (_bcd *PdfReader )newPdfActionSubmitFormFromDict (_dfc *_bbgb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_ebb ,_bfd :=_cfg (_dfc .Get ("\u0046"));if _bfd !=nil {return nil ,_bfd ;};return &PdfActionSubmitForm {F :_ebb ,Fields :_dfc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dfc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_acg :=NewPdfAction ();_acc :=&PdfActionGoTo {};_acc .PdfAction =_acg ;_acg .SetContext (_acc );return _acc ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bbcad *PdfColorspaceCalGray )ToPdfObject ()_bbgb .PdfObject {_ccgd :=&_bbgb .PdfObjectArray {};_ccgd .Append (_bbgb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_adfg :=_bbgb .MakeDict ();if _bbcad .WhitePoint !=nil {_adfg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bbgb .MakeArray (_bbgb .MakeFloat (_bbcad .WhitePoint [0]),_bbgb .MakeFloat (_bbcad .WhitePoint [1]),_bbgb .MakeFloat (_bbcad .WhitePoint [2])));
}else {_bb .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bbcad .BlackPoint !=nil {_adfg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bbgb .MakeArray (_bbgb .MakeFloat (_bbcad .BlackPoint [0]),_bbgb .MakeFloat (_bbcad .BlackPoint [1]),_bbgb .MakeFloat (_bbcad .BlackPoint [2])));
};_adfg .Set ("\u0047\u0061\u006dm\u0061",_bbgb .MakeFloat (_bbcad .Gamma ));_ccgd .Append (_adfg );if _bbcad ._decf !=nil {_bbcad ._decf .PdfObject =_ccgd ;return _bbcad ._decf ;};return _ccgd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gdaa *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faaa :=vals [0];if _faaa < 0.0||_faaa > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ffab :=vals [1];if _ffab < 0.0||_ffab > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gaecg :=vals [2];if _gaecg < 0.0||_gaecg > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_edgae :=NewPdfColorCalRGB (_faaa ,_ffab ,_gaecg );return _edgae ,nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbgb .PdfObject ;IC _bbgb .PdfObject ;RO _bbgb .PdfObject ;OverlayText _bbgb .PdfObject ;Repeat _bbgb .PdfObject ;DA _bbgb .PdfObject ;Q _bbgb .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _bf .ReadSeeker )(*PdfReader ,error ){const _eddf ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _bebbd (rs ,&ReaderOpts {LazyLoad :true },false ,_eddf );
};func _ecef (_bedgd _bbgb .PdfObject ,_gbbba *PdfReader )(*OutlineDest ,error ){_dfadd ,_fccc :=_bbgb .GetArray (_bedgd );if !_fccc {return nil ,_fd .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_ecbd :=_dfadd .Len ();if _ecbd < 2{return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_ecbd );
};_aacgd :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gfgfc :=_dfadd .Get (0);if _ggad ,_gbbec :=_bbgb .GetIndirect (_gfgfc );_gbbec {if _ ,_fcbgf ,_dgbae :=_gbbba .PageFromIndirectObject (_ggad );_dgbae ==nil {_aacgd .Page =int64 (_fcbgf -1);}else {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ggad );
};_aacgd .PageObj =_ggad ;}else if _ecadf ,_cdeb :=_bbgb .GetIntVal (_gfgfc );_cdeb {if _ecadf >=0&&_ecadf < len (_gbbba .PageList ){_aacgd .PageObj =_gbbba .PageList [_ecadf ].GetPageAsIndirectObject ();}else {_bb .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ecadf );
};_aacgd .Page =int64 (_ecadf );}else {return nil ,_d .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gfgfc );};_gfbag ,_fccc :=_bbgb .GetNameVal (_dfadd .Get (1));
if !_fccc {_bb .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dfadd .Get (1));
return _aacgd ,nil ;};switch _gfbag {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _ecbd > 2{_aacgd .Y ,_ =_bbgb .GetNumberAsFloat (_bbgb .TraceToDirectObject (_dfadd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _ecbd > 2{_aacgd .X ,_ =_bbgb .GetNumberAsFloat (_bbgb .TraceToDirectObject (_dfadd .Get (2)));
};case "\u0058\u0059\u005a":if _ecbd > 4{_aacgd .X ,_ =_bbgb .GetNumberAsFloat (_bbgb .TraceToDirectObject (_dfadd .Get (2)));_aacgd .Y ,_ =_bbgb .GetNumberAsFloat (_bbgb .TraceToDirectObject (_dfadd .Get (3)));_aacgd .Zoom ,_ =_bbgb .GetNumberAsFloat (_bbgb .TraceToDirectObject (_dfadd .Get (4)));
};default:_gfbag ="\u0046\u0069\u0074";};_aacgd .Mode =_gfbag ;return _aacgd ,nil ;};func (_addda *Image )samplesAddPadding (_daeg []uint32 )[]uint32 {_fbcc :=_ae .BytesPerLine (int (_addda .Width ),int (_addda .BitsPerComponent ),_addda .ColorComponents )*(8/int (_addda .BitsPerComponent ));
_cbagg :=_fbcc *int (_addda .Height );if len (_daeg )==_cbagg {return _daeg ;};_aadab :=make ([]uint32 ,_cbagg );_fcdbb :=int (_addda .Width )*_addda .ColorComponents ;for _eccbf :=0;_eccbf < int (_addda .Height );_eccbf ++{_egbdb :=_eccbf *int (_addda .Width );
_gbfbd :=_eccbf *_fbcc ;for _egeb :=0;_egeb < _fcdbb ;_egeb ++{_aadab [_gbfbd +_egeb ]=_daeg [_egbdb +_egeb ];};};return _aadab ;};func (_cffc *DSS )addOCSPs (_eceb [][]byte )([]*_bbgb .PdfObjectStream ,error ){return _cffc .add (&_cffc .OCSPs ,_cffc ._bbaa ,_eceb );
};func (_accfc *PdfWriter )writeTrailer (_bgbgd int ){_accfc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _decg :=0;_decg <=_bgbgd ;{for ;_decg <=_bgbgd ;_decg ++{_ebde ,_aadbbg :=_accfc ._caadc [_decg ];if _aadbbg &&(!_accfc ._aadfb ||_accfc ._aadfb &&(_ebde .Type ==1&&_ebde .Offset >=_accfc ._ddccg ||_ebde .Type ==0)){break ;
};};var _fcfd int ;for _fcfd =_decg +1;_fcfd <=_bgbgd ;_fcfd ++{_ebcgf ,_gged :=_accfc ._caadc [_fcfd ];if _gged &&(!_accfc ._aadfb ||_accfc ._aadfb &&(_ebcgf .Type ==1&&_ebcgf .Offset > _accfc ._ddccg )){continue ;};break ;};_bedge :=_d .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_decg ,_fcfd -_decg );
_accfc .writeString (_bedge );for _eabg :=_decg ;_eabg < _fcfd ;_eabg ++{_cceeg :=_accfc ._caadc [_eabg ];switch _cceeg .Type {case 0:_bedge =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_accfc .writeString (_bedge );
case 1:_bedge =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_cceeg .Offset ,0);_accfc .writeString (_bedge );};};_decg =_fcfd +1;};_eeea :=_bbgb .MakeDict ();_eeea .Set ("\u0049\u006e\u0066\u006f",_accfc ._bgfbb );
_eeea .Set ("\u0052\u006f\u006f\u0074",_accfc ._dgbad );_eeea .Set ("\u0053\u0069\u007a\u0065",_bbgb .MakeInteger (int64 (_bgbgd +1)));if _accfc ._aadfb &&_accfc ._cabbcc > 0{_eeea .Set ("\u0050\u0072\u0065\u0076",_bbgb .MakeInteger (_accfc ._cabbcc ));
};if _accfc ._agdbe !=nil {_eeea .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_accfc ._bebbea );};if _accfc ._ffded ==nil &&_accfc ._eddgd !=""&&_accfc ._cebgb !=""{_accfc ._ffded =_bbgb .MakeArray (_bbgb .MakeHexString (_accfc ._eddgd ),_bbgb .MakeHexString (_accfc ._cebgb ));
};if _accfc ._ffded !=nil {_eeea .Set ("\u0049\u0044",_accfc ._ffded );_bb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_accfc ._ffded );};_accfc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_accfc .writeString (_eeea .WriteString ());
_accfc .writeString ("\u000a");};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bbgb .PdfObject ;T _bbgb .PdfObject ;Operation _bbgb .PdfObject ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_aaef *PdfFont )CharcodesToUnicode (charcodes []_gcc .CharCode )[]rune {_fcdcf ,_ ,_ :=_aaef .CharcodesToUnicodeWithStats (charcodes );return _fcdcf ;};func (_abdbe *PdfWriter )addObjects (_ceacf _bbgb .PdfObject )error {_bb .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _ggebea ,_fgcc :=_ceacf .(*_bbgb .PdfIndirectObject );_fgcc {_bb .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bb .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_ceacf ,_ggebea );_bb .Log .Trace ("\u002d\u0020\u0025\u0073",_ggebea .PdfObject );
if _abdbe .addObject (_ggebea ){_cbcdb :=_abdbe .addObjects (_ggebea .PdfObject );if _cbcdb !=nil {return _cbcdb ;};};return nil ;};if _bfffc ,_ggdage :=_ceacf .(*_bbgb .PdfObjectStream );_ggdage {_bb .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");
_bb .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_ceacf ,_ceacf );if _abdbe .addObject (_bfffc ){_eabbd :=_abdbe .addObjects (_bfffc .PdfObjectDictionary );if _eabbd !=nil {return _eabbd ;};};return nil ;};if _ddea ,_dddag :=_ceacf .(*_bbgb .PdfObjectDictionary );
_dddag {_bb .Log .Trace ("\u0044\u0069\u0063\u0074");_bb .Log .Trace ("\u002d\u0020\u0025\u0073",_ceacf );for _ ,_bbged :=range _ddea .Keys (){_bgbdf :=_ddea .Get (_bbged );if _eebed ,_edafb :=_bgbdf .(*_bbgb .PdfObjectReference );_edafb {_bgbdf =_eebed .Resolve ();
_ddea .Set (_bbged ,_bgbdf );};if _bbged !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _effb :=_abdbe .addObjects (_bgbdf );_effb !=nil {return _effb ;};}else {if _ ,_ddbab :=_bgbdf .(*_bbgb .PdfObjectNull );_ddbab {continue ;};if _bdbdd :=_abdbe .hasObject (_bgbdf );
!_bdbdd {_bb .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bgbdf ,_bgbdf ,_bgbdf );_abdbe ._cabbb [_bgbdf ]=append (_abdbe ._cabbb [_bgbdf ],_ddea );
};};};return nil ;};if _abaae ,_dcaccc :=_ceacf .(*_bbgb .PdfObjectArray );_dcaccc {_bb .Log .Trace ("\u0041\u0072\u0072a\u0079");_bb .Log .Trace ("\u002d\u0020\u0025\u0073",_ceacf );if _abaae ==nil {return _fd .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gbaaee ,_egdgd :=range _abaae .Elements (){if _ecgdde ,_gfaee :=_egdgd .(*_bbgb .PdfObjectReference );_gfaee {_egdgd =_ecgdde .Resolve ();_abaae .Set (_gbaaee ,_egdgd );};if _cfefc :=_abdbe .addObjects (_egdgd );_cfefc !=nil {return _cfefc ;};};
return nil ;};if _ ,_aebdf :=_ceacf .(*_bbgb .PdfObjectReference );_aebdf {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_ceacf );
return _fd .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_cfdg *PdfPageResources )HasExtGState (keyName _bbgb .PdfObjectName )bool {_ ,_afdg :=_cfdg .GetFontByName (keyName );return _afdg ;};func (_aegd *PdfReader )newPdfAnnotationStampFromDict (_dbd *_bbgb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_acafb :=PdfAnnotationStamp {};
_dffd ,_bacd :=_aegd .newPdfAnnotationMarkupFromDict (_dbd );if _bacd !=nil {return nil ,_bacd ;};_acafb .PdfAnnotationMarkup =_dffd ;_acafb .Name =_dbd .Get ("\u004e\u0061\u006d\u0065");return &_acafb ,nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_gbce *PdfColorspaceICCBased )GetContainingPdfObject ()_bbgb .PdfObject {return _gbce ._fafe };

// ToPdfObject implements interface PdfModel.
func (_efabb *PdfSignature )ToPdfObject ()_bbgb .PdfObject {_geafe :=_efabb ._ccdaa ;var _cgfdd *_bbgb .PdfObjectDictionary ;if _abfag ,_fcfgb :=_geafe .PdfObject .(*pdfSignDictionary );_fcfgb {_cgfdd =_abfag .PdfObjectDictionary ;}else {_cgfdd =_geafe .PdfObject .(*_bbgb .PdfObjectDictionary );
};_cgfdd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_efabb .Type );_cgfdd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_efabb .Filter );_cgfdd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_efabb .SubFilter );_cgfdd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_efabb .ByteRange );
_cgfdd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_efabb .Contents );_cgfdd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_efabb .Cert );_cgfdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_efabb .Name );_cgfdd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_efabb .Reason );
_cgfdd .SetIfNotNil ("\u004d",_efabb .M );_cgfdd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_efabb .Reference );_cgfdd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_efabb .Changes );_cgfdd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_efabb .ContactInfo );
return _geafe ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gdad *OutlineItem )Insert (index uint ,item *OutlineItem ){_fgdag :=uint (len (_gdad .Entries ));if index > _fgdag {index =_fgdag ;};_gdad .Entries =append (_gdad .Entries [:index ],append ([]*OutlineItem {item },_gdad .Entries [index :]...)...);
};func (_afbe *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fef *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebfb :=vals [0];if _ebfb < 0.0||_ebfb > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dgeb :=NewPdfColorCalGray (_ebfb );return _dgeb ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_bcf :=NewPdfAnnotation ();_bfe :=&PdfAnnotationLine {};_bfe .PdfAnnotation =_bcf ;_bfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcf .SetContext (_bfe );return _bfe ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_eabe *PdfPattern )GetContainingPdfObject ()_bbgb .PdfObject {return _eabe ._gdgafe };func (_abe *PdfReader )loadAction (_cfgg _bbgb .PdfObject )(*PdfAction ,error ){if _ecce ,_cbf :=_bbgb .GetIndirect (_cfgg );_cbf {_bef ,_ffge :=_abe .newPdfActionFromIndirectObject (_ecce );
if _ffge !=nil {return nil ,_ffge ;};return _bef ,nil ;}else if !_bbgb .IsNullObject (_cfgg ){return nil ,_fd .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bbgb .PdfObject ;_baac []byte ;_gddf *_bbgb .PdfIndirectObject ;};func (_eafc *PdfReader )newPdfAnnotationFileAttachmentFromDict (_dgg *_bbgb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dbae :=PdfAnnotationFileAttachment {};
_bdab ,_cbc :=_eafc .newPdfAnnotationMarkupFromDict (_dgg );if _cbc !=nil {return nil ,_cbc ;};_dbae .PdfAnnotationMarkup =_bdab ;_dbae .FS =_dgg .Get ("\u0046\u0053");_dbae .Name =_dgg .Get ("\u004e\u0061\u006d\u0065");return &_dbae ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_acae *PdfAppender )UpdateObject (obj _bbgb .PdfObject ){_acae .replaceObject (obj ,obj );if _ ,_gga :=_acae ._ddfg [obj ];!_gga {_acae ._dadf =append (_acae ._dadf ,obj );_acae ._ddfg [obj ]=struct{}{};};};func (_deceb Image )getBase ()_ae .ImageBase {return _ae .NewImageBase (int (_deceb .Width ),int (_deceb .Height ),int (_deceb .BitsPerComponent ),_deceb .ColorComponents ,_deceb .Data ,_deceb ._bcbg ,_deceb ._baegcb );
};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// RemovePage removes a page by number.
func (_adde *PdfAppender )RemovePage (pageNum int ){_afbc :=pageNum -1;_adde ._fegcd =append (_adde ._fegcd [0:_afbc ],_adde ._fegcd [pageNum :]...);};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_cgbf :=&PdfBorderStyle {};return _cgbf };

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_eebfe *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gegg []float64 ;for _dadd :=0;_dadd < _eebfe .GetNumComponents ();_dadd ++{_gegg =append (_gegg ,0.0,1.0);};return _gegg ;};

// Add appends an outline item as a child of the current outline item.
func (_faecab *OutlineItem )Add (item *OutlineItem ){_faecab .Entries =append (_faecab .Entries ,item )};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_beaeb *PdfPageResources )HasColorspaceByName (keyName _bbgb .PdfObjectName )bool {_gegag ,_abaf :=_beaeb .GetColorspaces ();if _abaf !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abaf );
return false ;};if _gegag ==nil {return false ;};_ ,_daegc :=_gegag .Colorspaces [string (keyName )];return _daegc ;};

// SetBorderWidth sets the style's border width.
func (_bace *PdfBorderStyle )SetBorderWidth (width float64 ){_bace .W =&width };func (_cda *PdfReader )newPdfAnnotationProjectionFromDict (_fad *_bbgb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_gcg :=&PdfAnnotationProjection {};_eeegd ,_daaa :=_cda .newPdfAnnotationMarkupFromDict (_fad );
if _daaa !=nil {return nil ,_daaa ;};_gcg .PdfAnnotationMarkup =_eeegd ;return _gcg ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bbgb .PdfObject ;V _bbgb .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gdge *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if _gdge .Alternate ==nil {if _gdge .N ==1{_bbdgd :=NewPdfColorspaceDeviceGray ();return _bbdgd .ColorFromPdfObjects (objects );}else if _gdge .N ==3{_dagg :=NewPdfColorspaceDeviceRGB ();
return _dagg .ColorFromPdfObjects (objects );}else if _gdge .N ==4{_abda :=NewPdfColorspaceDeviceCMYK ();return _abda .ColorFromPdfObjects (objects );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gdge .Alternate .ColorFromPdfObjects (objects );};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bbgb .PdfObjectArray ;ExtGState _bbgb .PdfObject ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_eff :=NewPdfAction ();_bgc :=&PdfActionLaunch {};_bgc .PdfAction =_eff ;_eff .SetContext (_bgc );return _bgc ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_egaaa *PdfPage )AppendContentStream (contentStr string )error {_gfgc ,_fcbgb :=_egaaa .GetContentStreams ();if _fcbgb !=nil {return _fcbgb ;};if len (_gfgc )==0{_gfgc =[]string {contentStr };return _egaaa .SetContentStreams (_gfgc ,_bbgb .NewFlateEncoder ());
};var _eaga _gag .Buffer ;_eaga .WriteString (_gfgc [len (_gfgc )-1]);_eaga .WriteString ("\u000a");_eaga .WriteString (contentStr );_gfgc [len (_gfgc )-1]=_eaga .String ();return _egaaa .SetContentStreams (_gfgc ,_bbgb .NewFlateEncoder ());};

// GetStandardApplier gets currently used StandardApplier..
func (_egege *PdfWriter )GetStandardApplier ()StandardApplier {return _egege ._bdggb };func _edbd (_acee *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_acee }};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cgbfb *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cede :=vals [0];if _cede < 0.0||_cede > 100.0{_bb .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cede );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccbe :=vals [1];_dggf :=float64 (-100);_agfb :=float64 (100);if len (_cgbfb .Range )> 1{_dggf =_cgbfb .Range [0];_agfb =_cgbfb .Range [1];};if _ccbe < _dggf ||_ccbe > _agfb {_bb .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ccbe ,_dggf ,_agfb );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcdag :=vals [2];_fgbc :=float64 (-100);_fbfd :=float64 (100);if len (_cgbfb .Range )> 3{_fgbc =_cgbfb .Range [2];_fbfd =_cgbfb .Range [3];};if _gcdag < _fgbc ||_gcdag > _fbfd {_bb .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gcdag ,_fgbc ,_fbfd );
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebe :=NewPdfColorLab (_cede ,_ccbe ,_gcdag );return _ebe ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dbgcb *PdfColorspaceLab )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abbf ,_eba :=_bbgb .GetNumbersAsFloat (objects );
if _eba !=nil {return nil ,_eba ;};return _dbgcb .ColorFromFloats (_abbf );};

// AddOutlineTree adds outlines to a PDF file.
func (_afbgg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_afbgg ._eedaa =outlineTree };const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);var _ pdfFont =(*pdfCIDFontType2 )(nil );

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bbgb .PdfObject ;NewWindow _bbgb .PdfObject ;T _bbgb .PdfObject ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gdddf *PdfReader )GetIndirectObjectByNumber (number int )(_bbgb .PdfObject ,error ){_gfeg ,_gafef :=_gdddf ._abceg .LookupByNumber (number );return _gfeg ,_gafef ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_fbbf *_bbgb .PdfIndirectObject ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_ddfb *PdfFieldButton )IsPush ()bool {return _ddfb .GetType ()==ButtonTypePush };

// ToPdfObject implements interface PdfModel.
func (_aegg *PdfAnnotationSound )ToPdfObject ()_bbgb .PdfObject {_aegg .PdfAnnotation .ToPdfObject ();_bdad :=_aegg ._bce ;_dad :=_bdad .PdfObject .(*_bbgb .PdfObjectDictionary );_aegg .PdfAnnotationMarkup .appendToPdfDictionary (_dad );_dad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0053\u006f\u0075n\u0064"));
_dad .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_aegg .Sound );_dad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aegg .Name );return _bdad ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ageaf *PdfColorspaceSpecialSeparation )ToPdfObject ()_bbgb .PdfObject {_dbfda :=_bbgb .MakeArray (_bbgb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_dbfda .Append (_ageaf .ColorantName );_dbfda .Append (_ageaf .AlternateSpace .ToPdfObject ());
_dbfda .Append (_ageaf .TintTransform .ToPdfObject ());if _ageaf ._adga !=nil {_ageaf ._adga .PdfObject =_dbfda ;return _ageaf ._adga ;};return _dbfda ;};func (_bdgf *PdfWriter )copyObjects (){_bgcae :=make (map[_bbgb .PdfObject ]_bbgb .PdfObject );_deegc :=make ([]_bbgb .PdfObject ,0,len (_bdgf ._cagcad ));
_eaaebd :=make (map[_bbgb .PdfObject ]struct{},len (_bdgf ._cagcad ));_eefee :=make (map[_bbgb .PdfObject ]struct{});for _ ,_cadeca :=range _bdgf ._cagcad {_gdabe :=_bdgf .copyObject (_cadeca ,_bgcae ,_eefee ,false );if _ ,_bfagd :=_eefee [_cadeca ];_bfagd {continue ;
};_deegc =append (_deegc ,_gdabe );_eaaebd [_gdabe ]=struct{}{};};_bdgf ._cagcad =_deegc ;_bdgf ._bfded =_eaaebd ;_bdgf ._bgfbb =_bdgf .copyObject (_bdgf ._bgfbb ,_bgcae ,nil ,false ).(*_bbgb .PdfIndirectObject );_bdgf ._dgbad =_bdgf .copyObject (_bdgf ._dgbad ,_bgcae ,nil ,false ).(*_bbgb .PdfIndirectObject );
if _bdgf ._bebbea !=nil {_bdgf ._bebbea =_bdgf .copyObject (_bdgf ._bebbea ,_bgcae ,nil ,false ).(*_bbgb .PdfIndirectObject );};if _bdgf ._aadfb {_eeaf :=make (map[_bbgb .PdfObject ]int64 );for _eccd ,_dgegf :=range _bdgf ._aeeec {if _bcaaf ,_ccfda :=_bgcae [_eccd ];
_ccfda {_eeaf [_bcaaf ]=_dgegf ;}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bdgf ._aeeec =_eeaf ;};};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_fcdeg *PdfAcroForm )GetContainingPdfObject ()_bbgb .PdfObject {return _fcdeg ._dabb };

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_aaec *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_aaec .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_aaec ._eeec =acroForm ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ac .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ac .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ac .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_aefab *PdfAppender ;_feec *DSS ;};func (_ggba *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _efgdfb :=_ggba ._eaega ;_efgdfb !=nil {return _efgdfb ;};return _ggba ._eagg ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cgeg *PdfField )Flags ()FieldFlag {var _acdfe FieldFlag ;_ggac ,_edbad :=_cgeg .inherit (func (_fega *PdfField )bool {if _fega .Ff !=nil {_acdfe =FieldFlag (*_fega .Ff );return true ;};return false ;});if _edbad !=nil {_bb .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_edbad );
};if !_ggac {_bb .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _acdfe ;};func _eaceg (_adfgc *_bbgb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_fcbgc :=PdfShadingType7 {};
_gcffd :=_adfgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gcffd ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bbbbg ,_gffba :=_gcffd .(*_bbgb .PdfObjectInteger );if !_gffba {_bb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcffd );
return nil ,_bbgb .ErrTypeError ;};_fcbgc .BitsPerCoordinate =_bbbbg ;_gcffd =_adfgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gcffd ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bbbbg ,_gffba =_gcffd .(*_bbgb .PdfObjectInteger );if !_gffba {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gcffd );
return nil ,_bbgb .ErrTypeError ;};_fcbgc .BitsPerComponent =_bbbbg ;_gcffd =_adfgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gcffd ==nil {_bb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbbbg ,_gffba =_gcffd .(*_bbgb .PdfObjectInteger );if !_gffba {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gcffd );
return nil ,_bbgb .ErrTypeError ;};_fcbgc .BitsPerComponent =_bbbbg ;_gcffd =_adfgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gcffd ==nil {_bb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbfed ,_gffba :=_gcffd .(*_bbgb .PdfObjectArray );if !_gffba {_bb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcffd );
return nil ,_bbgb .ErrTypeError ;};_fcbgc .Decode =_dbfed ;if _ggdce :=_adfgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ggdce !=nil {_fcbgc .Function =[]PdfFunction {};if _fdfgd ,_fcdbd :=_ggdce .(*_bbgb .PdfObjectArray );_fcdbd {for _ ,_bafb :=range _fdfgd .Elements (){_gceg ,_ccfbc :=_cdfb (_bafb );
if _ccfbc !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccfbc );return nil ,_ccfbc ;};_fcbgc .Function =append (_fcbgc .Function ,_gceg );
};}else {_gdbag ,_edaa :=_cdfb (_ggdce );if _edaa !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edaa );return nil ,_edaa ;};
_fcbgc .Function =append (_fcbgc .Function ,_gdbag );};};return &_fcbgc ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_efef interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToInteger convert to an integer format.
func (_fdbg *PdfColorCalGray )ToInteger (bits int )uint32 {_faec :=_ec .Pow (2,float64 (bits ))-1;return uint32 (_faec *_fdbg .Val ());};func (_ffff *PdfReader )newPdfAcroFormFromDict (_fccee *_bbgb .PdfIndirectObject ,_aagbe *_bbgb .PdfObjectDictionary )(*PdfAcroForm ,error ){_egefd :=NewPdfAcroForm ();
if _fccee !=nil {_egefd ._dabb =_fccee ;_fccee .PdfObject =_bbgb .MakeDict ();};if _ebeg :=_aagbe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_ebeg !=nil &&!_bbgb .IsNullObject (_ebeg ){_fgecc ,_cgbfa :=_bbgb .GetArray (_ebeg );if !_cgbfa {return nil ,_d .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ebeg );
};var _fbbgc []*PdfField ;for _ ,_ecbf :=range _fgecc .Elements (){_cadaae ,_afcce :=_bbgb .GetIndirect (_ecbf );if !_afcce {if _ ,_acdac :=_ecbf .(*_bbgb .PdfObjectNull );_acdac {_bb .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_bb .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ecbf );
return nil ,_d .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bbgbf ,_cagf :=_ffff .newPdfFieldFromIndirectObject (_cadaae ,nil );
if _cagf !=nil {return nil ,_cagf ;};_bb .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_bbgbf );_fbbgc =append (_fbbgc ,_bbgbf );};_egefd .Fields =&_fbbgc ;};if _ffaf :=_aagbe .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_ffaf !=nil {_dcbf ,_dcee :=_bbgb .GetBool (_ffaf );if _dcee {_egefd .NeedAppearances =_dcbf ;}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ffaf );
};};if _gadd :=_aagbe .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_gadd !=nil {_cgbdb ,_aeacg :=_bbgb .GetInt (_gadd );if _aeacg {_egefd .SigFlags =_cgbdb ;}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gadd );
};};if _ccbg :=_aagbe .Get ("\u0043\u004f");_ccbg !=nil {_babab ,_bdgcb :=_bbgb .GetArray (_ccbg );if _bdgcb {_egefd .CO =_babab ;}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ccbg );
};};if _eced :=_aagbe .Get ("\u0044\u0052");_eced !=nil {if _gcdae ,_bdbda :=_bbgb .GetDict (_eced );_bdbda {_gefbb ,_egbd :=NewPdfPageResourcesFromDict (_gcdae );if _egbd !=nil {_bb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_egbd );
return nil ,_egbd ;};_egefd .DR =_gefbb ;}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eced );};};if _begg :=_aagbe .Get ("\u0044\u0041");
_begg !=nil {_bbda ,_dcaf :=_bbgb .GetString (_begg );if _dcaf {_egefd .DA =_bbda ;}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_begg );
};};if _baeaf :=_aagbe .Get ("\u0051");_baeaf !=nil {_ddec ,_bcbae :=_bbgb .GetInt (_baeaf );if _bcbae {_egefd .Q =_ddec ;}else {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_baeaf );
};};if _ecgdd :=_aagbe .Get ("\u0058\u0046\u0041");_ecgdd !=nil {_egefd .XFA =_ecgdd ;};_egefd .ToPdfObject ();return _egefd ,nil ;};

// GetBorderWidth returns the border style's width.
func (_cgfa *PdfBorderStyle )GetBorderWidth ()float64 {if _cgfa .W ==nil {return 1;};return *_cgfa .W ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_gedd *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_dbb :=NewPdfAction ();_gg :=&PdfActionMovie {};_gg .PdfAction =_dbb ;_dbb .SetContext (_gg );return _gg ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bbgb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bbgb .PdfObject ;Contents _bbgb .PdfObject ;
Rotate *int64 ;Group _bbgb .PdfObject ;Thumb _bbgb .PdfObject ;B _bbgb .PdfObject ;Dur _bbgb .PdfObject ;Trans _bbgb .PdfObject ;AA _bbgb .PdfObject ;Metadata _bbgb .PdfObject ;PieceInfo _bbgb .PdfObject ;StructParents _bbgb .PdfObject ;ID _bbgb .PdfObject ;
PZ _bbgb .PdfObject ;SeparationInfo _bbgb .PdfObject ;Tabs _bbgb .PdfObject ;TemplateInstantiated _bbgb .PdfObject ;PresSteps _bbgb .PdfObject ;UserUnit _bbgb .PdfObject ;VP _bbgb .PdfObject ;Annots _bbgb .PdfObject ;_bccg []*PdfAnnotation ;_afebd *_bbgb .PdfObjectDictionary ;
_efbe *_bbgb .PdfIndirectObject ;_cdcbf *PdfReader ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bbgb .PdfObject )(*PdfFilespec ,error ){_bfff :=&PdfFilespec {};var _efga *_bbgb .PdfObjectDictionary ;if _abbe ,_dcga :=_bbgb .GetIndirect (obj );_dcga {_bfff ._gcecd =_abbe ;_caed ,_defbg :=_bbgb .GetDict (_abbe .PdfObject );
if !_defbg {_bb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bbgb .ErrTypeError ;};_efga =_caed ;}else if _cffa ,_dgbb :=_bbgb .GetDict (obj );
_dgbb {_bfff ._gcecd =_cffa ;_efga =_cffa ;}else {_bb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bbgb .ErrTypeError ;};if _efga ==nil {_bb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fdgc :=_efga .Get ("\u0054\u0079\u0070\u0065");_fdgc !=nil {_caece ,_cdaf :=_fdgc .(*_bbgb .PdfObjectName );if !_cdaf {_bb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fdgc );
}else {if *_caece !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_caece );
};};};if _eafa :=_efga .Get ("\u0046\u0053");_eafa !=nil {_bfff .FS =_eafa ;};if _fbeg :=_efga .Get ("\u0046");_fbeg !=nil {_bfff .F =_fbeg ;};if _dfacc :=_efga .Get ("\u0055\u0046");_dfacc !=nil {_bfff .UF =_dfacc ;};if _dcagb :=_efga .Get ("\u0044\u004f\u0053");
_dcagb !=nil {_bfff .DOS =_dcagb ;};if _babf :=_efga .Get ("\u004d\u0061\u0063");_babf !=nil {_bfff .Mac =_babf ;};if _edec :=_efga .Get ("\u0055\u006e\u0069\u0078");_edec !=nil {_bfff .Unix =_edec ;};if _fdffa :=_efga .Get ("\u0049\u0044");_fdffa !=nil {_bfff .ID =_fdffa ;
};if _bdda :=_efga .Get ("\u0056");_bdda !=nil {_bfff .V =_bdda ;};if _bfgge :=_efga .Get ("\u0045\u0046");_bfgge !=nil {_bfff .EF =_bfgge ;};if _ceff :=_efga .Get ("\u0052\u0046");_ceff !=nil {_bfff .RF =_ceff ;};if _dbdb :=_efga .Get ("\u0044\u0065\u0073\u0063");
_dbdb !=nil {_bfff .Desc =_dbdb ;};if _fgce :=_efga .Get ("\u0043\u0049");_fgce !=nil {_bfff .CI =_fgce ;};return _bfff ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_eeg :=NewPdfAnnotation ();_gacc :=&PdfAnnotationRedact {};_gacc .PdfAnnotation =_eeg ;_gacc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeg .SetContext (_gacc );return _gacc ;};func _gefedg (_agbcf *PdfPage ){_bcged :=_gd .GetLicenseKey ();
if _bcged !=nil &&_bcged .IsLicensed (){return ;};_fbdgd :=_bbgb .PdfObjectName ("\u0055\u0046\u0031");if !_agbcf .Resources .HasFontByName (_fbdgd ){_agbcf .Resources .SetFontByName (_fbdgd ,DefaultFont ().ToPdfObject ());};var _cbgbcf []string ;_cbgbcf =append (_cbgbcf ,"\u0071");
_cbgbcf =append (_cbgbcf ,"\u0042\u0054");_cbgbcf =append (_cbgbcf ,_d .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fbdgd .String ()));_cbgbcf =append (_cbgbcf ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_cbgbcf =append (_cbgbcf ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_aecbd :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_cbgbcf =append (_cbgbcf ,_d .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_aecbd ));_cbgbcf =append (_cbgbcf ,"\u0045\u0054");_cbgbcf =append (_cbgbcf ,"\u0051");_gfgac :=_df .Join (_cbgbcf ,"\u000a");_agbcf .AddContentStreamByString (_gfgac );_agbcf .ToPdfObject ();
};

// ToPdfObject returns the PDF representation of the function.
func (_edgdf *PdfFunctionType2 )ToPdfObject ()_bbgb .PdfObject {_aedab :=_bbgb .MakeDict ();_aedab .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbgb .MakeInteger (2));_dbefcc :=&_bbgb .PdfObjectArray {};for _ ,_fbfgc :=range _edgdf .Domain {_dbefcc .Append (_bbgb .MakeFloat (_fbfgc ));
};_aedab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbefcc );if _edgdf .Range !=nil {_dccaa :=&_bbgb .PdfObjectArray {};for _ ,_fabg :=range _edgdf .Range {_dccaa .Append (_bbgb .MakeFloat (_fabg ));};_aedab .Set ("\u0052\u0061\u006eg\u0065",_dccaa );
};if _edgdf .C0 !=nil {_bacce :=&_bbgb .PdfObjectArray {};for _ ,_abdf :=range _edgdf .C0 {_bacce .Append (_bbgb .MakeFloat (_abdf ));};_aedab .Set ("\u0043\u0030",_bacce );};if _edgdf .C1 !=nil {_bedd :=&_bbgb .PdfObjectArray {};for _ ,_affbg :=range _edgdf .C1 {_bedd .Append (_bbgb .MakeFloat (_affbg ));
};_aedab .Set ("\u0043\u0031",_bedd );};_aedab .Set ("\u004e",_bbgb .MakeFloat (_edgdf .N ));if _edgdf ._eafce !=nil {_edgdf ._eafce .PdfObject =_aedab ;return _edgdf ._eafce ;};return _aedab ;};

// GetCerts returns the signature certificate chain.
func (_gccbb *PdfSignature )GetCerts ()([]*_fc .Certificate ,error ){var _fgeba []func ()([]*_fc .Certificate ,error );switch _fdbbf ,_ :=_bbgb .GetNameVal (_gccbb .SubFilter );_fdbbf {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_fgeba =append (_fgeba ,_gccbb .extractChainFromPKCS7 ,_gccbb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_fgeba =append (_fgeba ,_gccbb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_fgeba =append (_fgeba ,_gccbb .extractChainFromPKCS7 );
default:return nil ,_d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_fdbbf );};for _ ,_ddaaa :=range _fgeba {_cbcfe ,_edgec :=_ddaaa ();if _edgec !=nil {return nil ,_edgec ;
};if len (_cbcfe )> 0{return _cbcfe ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_fbcf *PdfField )inherit (_defd func (*PdfField )bool )(bool ,error ){_cfdd :=map[*PdfField ]bool {};_acbg :=false ;_dfdbg :=_fbcf ;for _dfdbg !=nil {if _ ,_edae :=_cfdd [_dfdbg ];
_edae {return false ,_fd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_gedg :=_defd (_dfdbg );if _gedg {_acbg =true ;break ;};_cfdd [_dfdbg ]=true ;_dfdbg =_dfdbg .Parent ;};return _acbg ,nil ;
};func (_eeb *PdfReader )newPdfAnnotationCircleFromDict (_dcfd *_bbgb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_abed :=PdfAnnotationCircle {};_aebd ,_edgd :=_eeb .newPdfAnnotationMarkupFromDict (_dcfd );if _edgd !=nil {return nil ,_edgd ;};
_abed .PdfAnnotationMarkup =_aebd ;_abed .BS =_dcfd .Get ("\u0042\u0053");_abed .IC =_dcfd .Get ("\u0049\u0043");_abed .BE =_dcfd .Get ("\u0042\u0045");_abed .RD =_dcfd .Get ("\u0052\u0044");return &_abed ,nil ;};func _edbc (_ggd *PdfPage )map[_bbgb .PdfObjectName ]_bbgb .PdfObject {_eccfb :=make (map[_bbgb .PdfObjectName ]_bbgb .PdfObject );
if _ggd .Resources ==nil {return _eccfb ;};if _ggd .Resources .Font !=nil {if _fbac ,_efff :=_bbgb .GetDict (_ggd .Resources .Font );_efff {for _ ,_ged :=range _fbac .Keys (){_eccfb [_ged ]=_fbac .Get (_ged );};};};if _ggd .Resources .ExtGState !=nil {if _bggc ,_bcdb :=_bbgb .GetDict (_ggd .Resources .ExtGState );
_bcdb {for _ ,_afab :=range _bggc .Keys (){_eccfb [_afab ]=_bggc .Get (_afab );};};};if _ggd .Resources .XObject !=nil {if _fegcg ,_bfg :=_bbgb .GetDict (_ggd .Resources .XObject );_bfg {for _ ,_fbef :=range _fegcg .Keys (){_eccfb [_fbef ]=_fegcg .Get (_fbef );
};};};if _ggd .Resources .Pattern !=nil {if _cfccc ,_gcec :=_bbgb .GetDict (_ggd .Resources .Pattern );_gcec {for _ ,_gbdf :=range _cfccc .Keys (){_eccfb [_gbdf ]=_cfccc .Get (_gbdf );};};};if _ggd .Resources .Shading !=nil {if _ccc ,_bded :=_bbgb .GetDict (_ggd .Resources .Shading );
_bded {for _ ,_ccef :=range _ccc .Keys (){_eccfb [_ccef ]=_ccc .Get (_ccef );};};};if _ggd .Resources .ProcSet !=nil {if _cgg ,_ggdb :=_bbgb .GetDict (_ggd .Resources .ProcSet );_ggdb {for _ ,_eege :=range _cgg .Keys (){_eccfb [_eege ]=_cgg .Get (_eege );
};};};if _ggd .Resources .Properties !=nil {if _ffag ,_cbed :=_bbgb .GetDict (_ggd .Resources .Properties );_cbed {for _ ,_gfe :=range _ffag .Keys (){_eccfb [_gfe ]=_ffag .Get (_gfe );};};};return _eccfb ;};func (_cfcf *PdfReader )newPdfFieldSignatureFromDict (_cgda *_bbgb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_aegce :=&PdfFieldSignature {};
_dabg ,_fefg :=_bbgb .GetIndirect (_cgda .Get ("\u0056"));if _fefg {var _fddcd error ;_aegce .V ,_fddcd =_cfcf .newPdfSignatureFromIndirect (_dabg );if _fddcd !=nil {return nil ,_fddcd ;};};_aegce .Lock ,_ =_bbgb .GetIndirect (_cgda .Get ("\u004c\u006f\u0063\u006b"));
_aegce .SV ,_ =_bbgb .GetIndirect (_cgda .Get ("\u0053\u0056"));return _aegce ,nil ;};func (_ffcg *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_deae *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_deae ._fagce =colorspace ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_geeeee *PdfWriter )SetNamedDestinations (dests _bbgb .PdfObject )error {if dests ==nil {return nil ;};_bb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_geeeee ._dfcbd .Set ("\u0044\u0065\u0073t\u0073",dests );return _geeeee .addObjects (dests );};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_fggff *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_afcb ,_adfd :=color .(*PdfColorCalRGB );if !_adfd {_bb .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cdgg :=_afcb .A ();_ggcfc :=_afcb .B ();_gdec :=_afcb .C ();X :=_fggff .Matrix [0]*_ec .Pow (_cdgg ,_fggff .Gamma [0])+_fggff .Matrix [3]*_ec .Pow (_ggcfc ,_fggff .Gamma [1])+_fggff .Matrix [6]*_ec .Pow (_gdec ,_fggff .Gamma [2]);
Y :=_fggff .Matrix [1]*_ec .Pow (_cdgg ,_fggff .Gamma [0])+_fggff .Matrix [4]*_ec .Pow (_ggcfc ,_fggff .Gamma [1])+_fggff .Matrix [7]*_ec .Pow (_gdec ,_fggff .Gamma [2]);Z :=_fggff .Matrix [2]*_ec .Pow (_cdgg ,_fggff .Gamma [0])+_fggff .Matrix [5]*_ec .Pow (_ggcfc ,_fggff .Gamma [1])+_fggff .Matrix [8]*_ec .Pow (_gdec ,_fggff .Gamma [2]);
_gefc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gcdcg :=-0.969256*X +1.875992*Y +0.041556*Z ;_efac :=0.055648*X +-0.204043*Y +1.057311*Z ;_gefc =_ec .Min (_ec .Max (_gefc ,0),1.0);_gcdcg =_ec .Min (_ec .Max (_gcdcg ,0),1.0);_efac =_ec .Min (_ec .Max (_efac ,0),1.0);
return NewPdfColorDeviceRGB (_gefc ,_gcdcg ,_efac ),nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_becgd :=NewPdfOutline ();_becgd ._efef =&_becgd ;return _becgd ;};

// ToPdfObject converts the font to a PDF representation.
func (_efdcb *pdfFontType3 )ToPdfObject ()_bbgb .PdfObject {if _efdcb ._baegc ==nil {_efdcb ._baegc =&_bbgb .PdfIndirectObject {};};_bbce :=_efdcb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_efdcb ._baegc .PdfObject =_bbce ;if _efdcb .FirstChar !=nil {_bbce .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_efdcb .FirstChar );
};if _efdcb .LastChar !=nil {_bbce .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_efdcb .LastChar );};if _efdcb .Widths !=nil {_bbce .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_efdcb .Widths );};if _efdcb .Encoding !=nil {_bbce .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efdcb .Encoding );
}else if _efdcb ._bcffb !=nil {_abbfa :=_efdcb ._bcffb .ToPdfObject ();if _abbfa !=nil {_bbce .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abbfa );};};if _efdcb .FontBBox !=nil {_bbce .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_efdcb .FontBBox );
};if _efdcb .FontMatrix !=nil {_bbce .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_efdcb .FontMatrix );};if _efdcb .CharProcs !=nil {_bbce .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_efdcb .CharProcs );};if _efdcb .Resources !=nil {_bbce .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_efdcb .Resources );
};return _efdcb ._baegc ;};func (_bfdac PdfOutputIntentType )String ()string {switch _bfdac {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";
case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";
};};func (_gcece *pdfFontSimple )getFontEncoding ()(_abgcc string ,_gaaadf map[_gcc .CharCode ]_gcc .GlyphName ,_baef error ){_abgcc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _aefgd ,_cbeb :=_abcg [_gcece ._debfe ];
_cbeb {_abgcc =_aefgd ;}else if _gcece .fontFlags ()&_eeed !=0{for _egced ,_bdcc :=range _abcg {if _df .Contains (_gcece ._debfe ,_egced ){_abgcc =_bdcc ;break ;};};};if _gcece .Encoding ==nil {return _abgcc ,nil ,nil ;};switch _gfgfb :=_gcece .Encoding .(type ){case *_bbgb .PdfObjectName :return string (*_gfgfb ),nil ,nil ;
case *_bbgb .PdfObjectDictionary :_fbfcg ,_bcbaa :=_bbgb .GetName (_gfgfb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bcbaa {_abgcc =_fbfcg .String ();};if _ecde :=_gfgfb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_ecde !=nil {_gcfe ,_eade :=_bbgb .GetArray (_ecde );if !_eade {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gfgfb ,_gfgfb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bbgb .ErrTypeError ;};_gaaadf ,_baef =_gcc .FromFontDifferences (_gcfe );};return _abgcc ,_gaaadf ,_baef ;default:_bb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gcece .Encoding ,_gcece .Encoding );
return "",nil ,_bbgb .ErrTypeError ;};};func _fcgc (_cccg _bbgb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dcgd :=NewPdfColorspaceSpecialSeparation ();if _ffaed ,_gcdab :=_cccg .(*_bbgb .PdfIndirectObject );_gcdab {_dcgd ._adga =_ffaed ;};_cccg =_bbgb .TraceToDirectObject (_cccg );
_gebdd ,_aeda :=_cccg .(*_bbgb .PdfObjectArray );if !_aeda {return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _gebdd .Len ()!=4{return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_cccg =_gebdd .Get (0);_daae ,_aeda :=_cccg .(*_bbgb .PdfObjectName );if !_aeda {return nil ,_d .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_daae !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_d .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_cccg =_gebdd .Get (1);_daae ,_aeda =_cccg .(*_bbgb .PdfObjectName );if !_aeda {return nil ,_d .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dcgd .ColorantName =_daae ;_cccg =_gebdd .Get (2);_cdcb ,_cgaga :=NewPdfColorspaceFromPdfObject (_cccg );if _cgaga !=nil {return nil ,_cgaga ;};_dcgd .AlternateSpace =_cdcb ;_gfbd ,_cgaga :=_cdfb (_gebdd .Get (3));if _cgaga !=nil {return nil ,_cgaga ;
};_dcgd .TintTransform =_gfbd ;return _dcgd ,nil ;};func (_cffd *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cffd .fontCommon };

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cebcd *PdfFieldButton )IsCheckbox ()bool {return _cebcd .GetType ()==ButtonTypeCheckbox };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dddg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beeg ,_aefg :=_bbgb .GetNumbersAsFloat (objects );
if _aefg !=nil {return nil ,_aefg ;};return _dddg .ColorFromFloats (_beeg );};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bbgb .PdfObject ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_abgcb *_bbgb .PdfIndirectObject ;Certs []*_bbgb .PdfObjectStream ;OCSPs []*_bbgb .PdfObjectStream ;CRLs []*_bbgb .PdfObjectStream ;VRI map[string ]*VRI ;_ecca map[string ]*_bbgb .PdfObjectStream ;_bbaa map[string ]*_bbgb .PdfObjectStream ;
_edce map[string ]*_bbgb .PdfObjectStream ;};func _ddfbc (_ffcgg _bbgb .PdfObject ){_bb .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ffcgg ,_ffcgg .String ());if _aebdg ,_dbcdg :=_ffcgg .(*_bbgb .PdfObjectStream );_dbcdg {_bcfe ,_gfcfg :=_bbgb .DecodeStream (_aebdg );
if _gfcfg !=nil {_bb .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_gfcfg );return ;};_bb .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_bcfe );}else if _bacdg ,_cbedc :=_ffcgg .(*_bbgb .PdfIndirectObject );
_cbedc {_bb .Log .Debug ("\u0025\u0054\u0020%\u0076",_bacdg .PdfObject ,_bacdg .PdfObject );_bb .Log .Debug ("\u0025\u0073",_bacdg .PdfObject .String ());};};func (_dgfed *PdfReader )newPdfPageFromDict (_gbbc *_bbgb .PdfObjectDictionary )(*PdfPage ,error ){_dccb :=NewPdfPage ();
_dccb ._afebd =_gbbc ;_cbagbd :=*_gbbc ;_ffed ,_daeac :=_cbagbd .Get ("\u0054\u0079\u0070\u0065").(*_bbgb .PdfObjectName );if !_daeac {return nil ,_fd .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_ffed !="\u0050\u0061\u0067\u0065"{return nil ,_fd .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fccd :=_cbagbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_fccd !=nil {_dccb .Parent =_fccd ;};if _dabbg :=_cbagbd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_dabbg !=nil {_gcaae ,_efagf :=_bbgb .GetString (_dabbg );if !_efagf {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_ddbdfg ,_eacd :=NewPdfDate (_gcaae .Str ());if _eacd !=nil {return nil ,_eacd ;};_dccb .LastModified =&_ddbdfg ;};if _cfcea :=_cbagbd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cfcea !=nil &&!_bbgb .IsNullObject (_cfcea ){_egfbg ,_dcdg :=_bbgb .GetDict (_cfcea );
if !_dcdg {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cfcea );};var _bdfgb error ;_dccb .Resources ,_bdfgb =NewPdfPageResourcesFromDict (_egfbg );
if _bdfgb !=nil {return nil ,_bdfgb ;};}else {_bfgc ,_acffa :=_dccb .getParentResources ();if _acffa !=nil {return nil ,_acffa ;};if _bfgc ==nil {_bfgc =NewPdfPageResources ();};_dccb .Resources =_bfgc ;};if _begag :=_cbagbd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_begag !=nil {_gbgg ,_debed :=_bbgb .GetArray (_begag );if !_debed {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _edbaf error ;
_dccb .MediaBox ,_edbaf =NewPdfRectangle (*_gbgg );if _edbaf !=nil {return nil ,_edbaf ;};};if _adebb :=_cbagbd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_adebb !=nil {_cceb ,_gcag :=_bbgb .GetArray (_adebb );if !_gcag {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bbffe error ;_dccb .CropBox ,_bbffe =NewPdfRectangle (*_cceb );if _bbffe !=nil {return nil ,_bbffe ;};};if _eagfg :=_cbagbd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_eagfg !=nil {_dcce ,_fdcee :=_bbgb .GetArray (_eagfg );if !_fdcee {return nil ,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _ddgbe error ;_dccb .BleedBox ,_ddgbe =NewPdfRectangle (*_dcce );if _ddgbe !=nil {return nil ,_ddgbe ;};};if _agcbd :=_cbagbd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_agcbd !=nil {_ddbde ,_acfb :=_bbgb .GetArray (_agcbd );if !_acfb {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ggbd error ;_dccb .TrimBox ,_ggbd =NewPdfRectangle (*_ddbde );if _ggbd !=nil {return nil ,_ggbd ;};};if _fcdfc :=_cbagbd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_fcdfc !=nil {_afabf ,_egab :=_bbgb .GetArray (_fcdfc );if !_egab {return nil ,_fd .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eegbb error ;_dccb .ArtBox ,_eegbb =NewPdfRectangle (*_afabf );if _eegbb !=nil {return nil ,_eegbb ;};};if _dafcg :=_cbagbd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dafcg !=nil {_dccb .BoxColorInfo =_dafcg ;};
if _cbdgb :=_cbagbd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cbdgb !=nil {_dccb .Contents =_cbdgb ;};if _daecb :=_cbagbd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_daecb !=nil {_cfff ,_caag :=_bbgb .GetNumberAsInt64 (_daecb );if _caag !=nil {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dccb .Rotate =&_cfff ;};if _bdbfb :=_cbagbd .Get ("\u0047\u0072\u006fu\u0070");_bdbfb !=nil {_dccb .Group =_bdbfb ;};if _feefa :=_cbagbd .Get ("\u0054\u0068\u0075m\u0062");_feefa !=nil {_dccb .Thumb =_feefa ;};if _gcgfb :=_cbagbd .Get ("\u0042");_gcgfb !=nil {_dccb .B =_gcgfb ;
};if _bbadf :=_cbagbd .Get ("\u0044\u0075\u0072");_bbadf !=nil {_dccb .Dur =_bbadf ;};if _befga :=_cbagbd .Get ("\u0054\u0072\u0061n\u0073");_befga !=nil {_dccb .Trans =_befga ;};if _aaadc :=_cbagbd .Get ("\u0041\u0041");_aaadc !=nil {_dccb .AA =_aaadc ;
};if _cebcf :=_cbagbd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cebcf !=nil {_dccb .Metadata =_cebcf ;};if _gcdbe :=_cbagbd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gcdbe !=nil {_dccb .PieceInfo =_gcdbe ;};if _aadd :=_cbagbd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_aadd !=nil {_dccb .StructParents =_aadd ;};if _dacda :=_cbagbd .Get ("\u0049\u0044");_dacda !=nil {_dccb .ID =_dacda ;};if _ccga :=_cbagbd .Get ("\u0050\u005a");_ccga !=nil {_dccb .PZ =_ccga ;};if _eebgc :=_cbagbd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_eebgc !=nil {_dccb .SeparationInfo =_eebgc ;};if _ffbed :=_cbagbd .Get ("\u0054\u0061\u0062\u0073");_ffbed !=nil {_dccb .Tabs =_ffbed ;};if _bgbce :=_cbagbd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bgbce !=nil {_dccb .TemplateInstantiated =_bgbce ;};if _fdebc :=_cbagbd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_fdebc !=nil {_dccb .PresSteps =_fdebc ;};if _dedag :=_cbagbd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_dedag !=nil {_dccb .UserUnit =_dedag ;
};if _dgfbe :=_cbagbd .Get ("\u0056\u0050");_dgfbe !=nil {_dccb .VP =_dgfbe ;};if _dfafd :=_cbagbd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_dfafd !=nil {_dccb .Annots =_dfafd ;};_dccb ._cdcbf =_dgfed ;return _dccb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbdbc *PdfAnnotationSquare )ToPdfObject ()_bbgb .PdfObject {_fbdbc .PdfAnnotation .ToPdfObject ();_cdbe :=_fbdbc ._bce ;_cea :=_cdbe .PdfObject .(*_bbgb .PdfObjectDictionary );if _fbdbc .PdfAnnotationMarkup !=nil {_fbdbc .PdfAnnotationMarkup .appendToPdfDictionary (_cea );
};_cea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_cea .SetIfNotNil ("\u0042\u0053",_fbdbc .BS );_cea .SetIfNotNil ("\u0049\u0043",_fbdbc .IC );_cea .SetIfNotNil ("\u0042\u0045",_fbdbc .BE );
_cea .SetIfNotNil ("\u0052\u0044",_fbdbc .RD );return _cdbe ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cbaba *PdfOutline )GetContainingPdfObject ()_bbgb .PdfObject {return _cbaba ._fbbf };

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gbgge *PdfTilingPattern )ToPdfObject ()_bbgb .PdfObject {_gbgge .PdfPattern .ToPdfObject ();_deagc :=_gbgge .getDict ();if _gbgge .PaintType !=nil {_deagc .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gbgge .PaintType );};if _gbgge .TilingType !=nil {_deagc .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gbgge .TilingType );
};if _gbgge .BBox !=nil {_deagc .Set ("\u0042\u0042\u006f\u0078",_gbgge .BBox .ToPdfObject ());};if _gbgge .XStep !=nil {_deagc .Set ("\u0058\u0053\u0074e\u0070",_gbgge .XStep );};if _gbgge .YStep !=nil {_deagc .Set ("\u0059\u0053\u0074e\u0070",_gbgge .YStep );
};if _gbgge .Resources !=nil {_deagc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gbgge .Resources .ToPdfObject ());};if _gbgge .Matrix !=nil {_deagc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gbgge .Matrix );};return _gbgge ._gdgafe ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gbgf :=NewPdfAnnotation ();_bde :=&PdfAnnotationPrinterMark {};_bde .PdfAnnotation =_gbgf ;_gbgf .SetContext (_bde );return _bde ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func _eaag (_fdddf _bbgb .PdfObject )(*PdfColorspaceCalGray ,error ){_afcfge :=NewPdfColorspaceCalGray ();if _cagc ,_gfgf :=_fdddf .(*_bbgb .PdfIndirectObject );_gfgf {_afcfge ._decf =_cagc ;};_fdddf =_bbgb .TraceToDirectObject (_fdddf );
_gded ,_fddc :=_fdddf .(*_bbgb .PdfObjectArray );if !_fddc {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gded .Len ()!=2{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_fdddf =_bbgb .TraceToDirectObject (_gded .Get (0));_dgdc ,_fddc :=_fdddf .(*_bbgb .PdfObjectName );if !_fddc {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_dgdc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_d .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fdddf =_bbgb .TraceToDirectObject (_gded .Get (1));
_bgce ,_fddc :=_fdddf .(*_bbgb .PdfObjectDictionary );if !_fddc {return nil ,_d .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_fdddf =_bgce .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fdddf =_bbgb .TraceToDirectObject (_fdddf );_bfga ,_fddc :=_fdddf .(*_bbgb .PdfObjectArray );if !_fddc {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _bfga .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ffdg ,_bdaa :=_bfga .GetAsFloat64Slice ();
if _bdaa !=nil {return nil ,_bdaa ;};_afcfge .WhitePoint =_ffdg ;_fdddf =_bgce .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fdddf !=nil {_fdddf =_bbgb .TraceToDirectObject (_fdddf );_bbcb ,_dggg :=_fdddf .(*_bbgb .PdfObjectArray );
if !_dggg {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bbcb .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_gcddd ,_dfee :=_bbcb .GetAsFloat64Slice ();if _dfee !=nil {return nil ,_dfee ;};_afcfge .BlackPoint =_gcddd ;};_fdddf =_bgce .Get ("\u0047\u0061\u006dm\u0061");if _fdddf !=nil {_fdddf =_bbgb .TraceToDirectObject (_fdddf );_gbdc ,_ebf :=_bbgb .GetNumberAsFloat (_fdddf );
if _ebf !=nil {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_afcfge .Gamma =_gbdc ;};return _afcfge ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_daaeg *PdfPage )GetContainingPdfObject ()_bbgb .PdfObject {return _daaeg ._efbe };

// ToPdfObject implements interface PdfModel.
func (_ecd *PdfActionRendition )ToPdfObject ()_bbgb .PdfObject {_ecd .PdfAction .ToPdfObject ();_bfa :=_ecd ._dce ;_be :=_bfa .PdfObject .(*_bbgb .PdfObjectDictionary );_be .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeRendition )));_be .SetIfNotNil ("\u0052",_ecd .R );
_be .SetIfNotNil ("\u0041\u004e",_ecd .AN );_be .SetIfNotNil ("\u004f\u0050",_ecd .OP );_be .SetIfNotNil ("\u004a\u0053",_ecd .JS );return _bfa ;};

// A returns the value of the A component of the color.
func (_effga *PdfColorCalRGB )A ()float64 {return _effga [0]};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fdbbd *PdfAcroForm ,_fdcb *PdfField ,_gdbg *PdfAnnotationWidget )(*_bbgb .PdfObjectDictionary ,error );};func (_gfed *PdfPattern )getDict ()*_bbgb .PdfObjectDictionary {if _gcgd ,_bbag :=_gfed ._gdgafe .(*_bbgb .PdfIndirectObject );
_bbag {_edcfgb ,_gbagd :=_gcgd .PdfObject .(*_bbgb .PdfObjectDictionary );if !_gbagd {return nil ;};return _edcfgb ;}else if _eddecb ,_eabc :=_gfed ._gdgafe .(*_bbgb .PdfObjectStream );_eabc {return _eddecb .PdfObjectDictionary ;}else {_bb .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_gfed ._gdgafe );
return nil ;};};

// ToPdfObject implements interface PdfModel.
func (_dgef *PdfAnnotationFileAttachment )ToPdfObject ()_bbgb .PdfObject {_dgef .PdfAnnotation .ToPdfObject ();_dgfd :=_dgef ._bce ;_ffef :=_dgfd .PdfObject .(*_bbgb .PdfObjectDictionary );_dgef .PdfAnnotationMarkup .appendToPdfDictionary (_ffef );_ffef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ffef .SetIfNotNil ("\u0046\u0053",_dgef .FS );_ffef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgef .Name );return _dgfd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcgg *PdfPageResourcesColorspaces )ToPdfObject ()_bbgb .PdfObject {_cfba :=_bbgb .MakeDict ();for _ ,_ceced :=range _dcgg .Names {_cfba .Set (_bbgb .PdfObjectName (_ceced ),_dcgg .Colorspaces [_ceced ].ToPdfObject ());};if _dcgg ._fcbccb !=nil {_dcgg ._fcbccb .PdfObject =_cfba ;
return _dcgg ._fcbccb ;};return _cfba ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cagd *PdfWriter )SetOptimizer (optimizer Optimizer ){_cagd ._ebbg =optimizer };

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_eecbd PdfModel ;_bgbc *_bbgb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bbgb .PdfObjectName ;T *_bbgb .PdfObjectString ;TU *_bbgb .PdfObjectString ;TM *_bbgb .PdfObjectString ;
Ff *_bbgb .PdfObjectInteger ;V _bbgb .PdfObject ;DV _bbgb .PdfObject ;AA _bbgb .PdfObject ;VariableText *VariableText ;};func _gdfgf (_bebd *XObjectImage )error {if _bebd .SMask ==nil {return nil ;};_eeaa ,_deebg :=_bebd .SMask .(*_bbgb .PdfObjectStream );
if !_deebg {_bb .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _bbgb .ErrTypeError ;};_ebfbcc :=_eeaa .PdfObjectDictionary ;
_fegeb :=_ebfbcc .Get ("\u004d\u0061\u0074t\u0065");if _fegeb ==nil {return nil ;};_gecdb ,_fccab :=_bdebf (_fegeb .(*_bbgb .PdfObjectArray ));if _fccab !=nil {return _fccab ;};_gfdga :=_bbgb .MakeArrayFromFloats ([]float64 {_gecdb });_ebfbcc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gfdga );
return nil ;};func (_ecgdf *PdfReader )newPdfAnnotationLineFromDict (_bdce *_bbgb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_dae :=PdfAnnotationLine {};_cbag ,_fdff :=_ecgdf .newPdfAnnotationMarkupFromDict (_bdce );if _fdff !=nil {return nil ,_fdff ;
};_dae .PdfAnnotationMarkup =_cbag ;_dae .L =_bdce .Get ("\u004c");_dae .BS =_bdce .Get ("\u0042\u0053");_dae .LE =_bdce .Get ("\u004c\u0045");_dae .IC =_bdce .Get ("\u0049\u0043");_dae .LL =_bdce .Get ("\u004c\u004c");_dae .LLE =_bdce .Get ("\u004c\u004c\u0045");
_dae .Cap =_bdce .Get ("\u0043\u0061\u0070");_dae .IT =_bdce .Get ("\u0049\u0054");_dae .LLO =_bdce .Get ("\u004c\u004c\u004f");_dae .CP =_bdce .Get ("\u0043\u0050");_dae .Measure =_bdce .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_dae .CO =_bdce .Get ("\u0043\u004f");
return &_dae ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_ebcf *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ggce :=_ebcf .actualFont ();if _ggce ==nil {_bb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_ebcf ._efcd );
return _add .CharMetrics {},false ;};if _ffce ,_abdg :=_ggce .GetRuneMetrics (r );_abdg {return _ffce ,true ;};if _bbfc ,_cdda :=_ebcf .GetFontDescriptor ();_cdda ==nil &&_bbfc !=nil {return _add .CharMetrics {Wx :_bbfc ._cbab },true ;};_bb .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebcf );
return _add .CharMetrics {},false ;};func (_bdba *PdfWriter )writeObject (_cbaegf int ,_aeebd _bbgb .PdfObject ){_bb .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cbaegf );if _eadbf ,_cagaf :=_aeebd .(*_bbgb .PdfIndirectObject );
_cagaf {_bdba ._caadc [_cbaegf ]=crossReference {Type :1,Offset :_bdba ._cfbdg ,Generation :_eadbf .GenerationNumber };_bgbb :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbaegf );if _ggadd ,_fgafg :=_eadbf .PdfObject .(*pdfSignDictionary );
_fgafg {_ggadd ._dagfd =_bdba ._cfbdg +int64 (len (_bgbb ));};if _eadbf .PdfObject ==nil {_bb .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_eadbf .PdfObject =_bbgb .MakeNull ();};_bgbb +=_eadbf .PdfObject .WriteString ();_bgbb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bdba .writeString (_bgbb );return ;};if _afbggd ,_afcee :=_aeebd .(*_bbgb .PdfObjectStream );_afcee {_bdba ._caadc [_cbaegf ]=crossReference {Type :1,Offset :_bdba ._cfbdg ,Generation :_afbggd .GenerationNumber };
_adgca :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbaegf );_adgca +=_afbggd .PdfObjectDictionary .WriteString ();_adgca +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdba .writeString (_adgca );_bdba .writeBytes (_afbggd .Stream );
_bdba .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _beagd ,_edfa :=_aeebd .(*_bbgb .PdfObjectStreams );_edfa {_bdba ._caadc [_cbaegf ]=crossReference {Type :1,Offset :_bdba ._cfbdg ,Generation :_beagd .GenerationNumber };
_ebggf :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbaegf );var _dfdca []string ;var _gcfea string ;var _eagbd int64 ;for _bdece ,_bgfdac :=range _beagd .Elements (){_cgcea ,_ggbcf :=_bgfdac .(*_bbgb .PdfIndirectObject );if !_ggbcf {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cbaegf ,_bgfdac );
continue ;};_beabc :=_cgcea .PdfObject .WriteString ()+"\u0020";_gcfea =_gcfea +_beabc ;_dfdca =append (_dfdca ,_d .Sprintf ("\u0025\u0064\u0020%\u0064",_cgcea .ObjectNumber ,_eagbd ));_bdba ._caadc [int (_cgcea .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cbaegf ,Index :_bdece };
_eagbd =_eagbd +int64 (len ([]byte (_beabc )));};_fgage :=_df .Join (_dfdca ,"\u0020")+"\u0020";_gbbgec :=_bbgb .NewFlateEncoder ();_edgbe :=_gbbgec .MakeStreamDict ();_edgbe .Set (_bbgb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bbgb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_egcc :=int64 (_beagd .Len ());_edgbe .Set (_bbgb .PdfObjectName ("\u004e"),_bbgb .MakeInteger (_egcc ));_dcfga :=int64 (len (_fgage ));_edgbe .Set (_bbgb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bbgb .MakeInteger (_dcfga ));_aeage ,_ :=_gbbgec .EncodeBytes ([]byte (_fgage +_gcfea ));
_cddbe :=int64 (len (_aeage ));_edgbe .Set (_bbgb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bbgb .MakeInteger (_cddbe ));_ebggf +=_edgbe .WriteString ();_ebggf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdba .writeString (_ebggf );
_bdba .writeBytes (_aeage );_bdba .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bdba .writeString (_aeebd .WriteString ());};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bbgb .PdfObject ;BS _bbgb .PdfObject ;LE _bbgb .PdfObject ;IC _bbgb .PdfObject ;LL _bbgb .PdfObject ;LLE _bbgb .PdfObject ;Cap _bbgb .PdfObject ;IT _bbgb .PdfObject ;LLO _bbgb .PdfObject ;
CP _bbgb .PdfObject ;Measure _bbgb .PdfObject ;CO _bbgb .PdfObject ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// IsColored specifies if the pattern is colored.
func (_gfeff *PdfTilingPattern )IsColored ()bool {if _gfeff .PaintType !=nil &&*_gfeff .PaintType ==1{return true ;};return false ;};func _feed (_fdad _bbgb .PdfObject )(*PdfFunctionType3 ,error ){_aagfd :=&PdfFunctionType3 {};var _abage *_bbgb .PdfObjectDictionary ;
if _bebc ,_bcbb :=_fdad .(*_bbgb .PdfIndirectObject );_bcbb {_bcadd ,_aadbe :=_bebc .PdfObject .(*_bbgb .PdfObjectDictionary );if !_aadbe {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};
_aagfd ._adabc =_bebc ;_abage =_bcadd ;}else if _cfagb ,_cdbdd :=_fdad .(*_bbgb .PdfObjectDictionary );_cdbdd {_abage =_cfagb ;}else {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efbdc ,_cfbd :=_bbgb .TraceToDirectObject (_abage .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbgb .PdfObjectArray );
if !_cfbd {_bb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efbdc .Len ()!=2{_bb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gdeda ,_ggdf :=_efbdc .ToFloat64Array ();
if _ggdf !=nil {return nil ,_ggdf ;};_aagfd .Domain =_gdeda ;_efbdc ,_cfbd =_bbgb .TraceToDirectObject (_abage .Get ("\u0052\u0061\u006eg\u0065")).(*_bbgb .PdfObjectArray );if _cfbd {if _efbdc .Len ()< 0||_efbdc .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_egefc ,_ebcfc :=_efbdc .ToFloat64Array ();if _ebcfc !=nil {return nil ,_ebcfc ;};_aagfd .Range =_egefc ;};_efbdc ,_cfbd =_bbgb .TraceToDirectObject (_abage .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bbgb .PdfObjectArray );if !_cfbd {_bb .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aagfd .Functions =[]PdfFunction {};
for _ ,_gebf :=range _efbdc .Elements (){_ebeb ,_adef :=_cdfb (_gebf );if _adef !=nil {return nil ,_adef ;};_aagfd .Functions =append (_aagfd .Functions ,_ebeb );};_efbdc ,_cfbd =_bbgb .TraceToDirectObject (_abage .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bbgb .PdfObjectArray );
if !_cfbd {_bb .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_fdca ,_ggdf :=_efbdc .ToFloat64Array ();if _ggdf !=nil {return nil ,_ggdf ;};_aagfd .Bounds =_fdca ;if len (_aagfd .Bounds )!=len (_aagfd .Functions )-1{_bb .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_aagfd .Bounds ),len (_aagfd .Functions ));
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efbdc ,_cfbd =_bbgb .TraceToDirectObject (_abage .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bbgb .PdfObjectArray );if !_cfbd {_bb .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bbeef ,_ggdf :=_efbdc .ToFloat64Array ();
if _ggdf !=nil {return nil ,_ggdf ;};_aagfd .Encode =_bbeef ;if len (_aagfd .Encode )!=2*len (_aagfd .Functions ){_bb .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_aagfd .Encode ),len (_aagfd .Functions ));
return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _aagfd ,nil ;};func _efafd (_bcaa *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bcaa }};

// SetFontByName sets the font specified by keyName to the given object.
func (_cddc *PdfPageResources )SetFontByName (keyName _bbgb .PdfObjectName ,obj _bbgb .PdfObject )error {if _cddc .Font ==nil {_cddc .Font =_bbgb .MakeDict ();};_fefc ,_efgde :=_bbgb .TraceToDirectObject (_cddc .Font ).(*_bbgb .PdfObjectDictionary );if !_efgde {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bbgb .TraceToDirectObject (_cddc .Font ));
return _bbgb .ErrTypeError ;};_fefc .Set (keyName ,obj );return nil ;};func (_ddab *PdfReader )newPdfAnnotationSquareFromDict (_ffb *_bbgb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_cabb :=PdfAnnotationSquare {};_dba ,_agdc :=_ddab .newPdfAnnotationMarkupFromDict (_ffb );
if _agdc !=nil {return nil ,_agdc ;};_cabb .PdfAnnotationMarkup =_dba ;_cabb .BS =_ffb .Get ("\u0042\u0053");_cabb .IC =_ffb .Get ("\u0049\u0043");_cabb .BE =_ffb .Get ("\u0042\u0045");_cabb .RD =_ffb .Get ("\u0052\u0044");return &_cabb ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bbgb .PdfObject ;IC _bbgb .PdfObject ;BE _bbgb .PdfObject ;RD _bbgb .PdfObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_ebaf []_bbgb .PdfObject )([]_bbgb .PdfObject ,error );};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bbgb .PdfObject )(*PdfInfo ,error ){var _ddbd PdfInfo ;_beed ,_dcef :=obj .(*_bbgb .PdfObjectDictionary );if !_dcef {return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_acbc :=range _beed .Keys (){switch _acbc {case "\u0054\u0069\u0074l\u0065":_ddbd .Title ,_ =_bbgb .GetString (_beed .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_ddbd .Author ,_ =_bbgb .GetString (_beed .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_ddbd .Subject ,_ =_bbgb .GetString (_beed .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_ddbd .Keywords ,_ =_bbgb .GetString (_beed .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_ddbd .Creator ,_ =_bbgb .GetString (_beed .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_ddbd .Producer ,_ =_bbgb .GetString (_beed .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_ddbd .Trapped ,_ =_bbgb .GetName (_beed .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _bgbg ,_gaed :=_bbgb .GetString (_beed .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_gaed &&_bgbg .String ()!=""{_aebed ,_bfcb :=NewPdfDate (_bgbg .String ());if _bfcb !=nil {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_bfcb );
};_ddbd .CreationDate =&_aebed ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _agga ,_ffaa :=_bbgb .GetString (_beed .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_ffaa &&_agga .String ()!=""{_fceec ,_agfg :=NewPdfDate (_agga .String ());if _agfg !=nil {return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_agfg );
};_ddbd .ModifiedDate =&_fceec ;};default:_caeef ,_ :=_bbgb .GetString (_beed .Get (_acbc ));if _ddbd ._fbcd ==nil {_ddbd ._fbcd =_bbgb .MakeDict ();};_ddbd ._fbcd .Set (_acbc ,_caeef );};};return &_ddbd ,nil ;};func _baecf (_efgdf StdFontName )(pdfFontSimple ,error ){_dedfec ,_dddea :=_add .NewStdFontByName (_efgdf );
if !_dddea {return pdfFontSimple {},ErrFontNotSupported ;};_eaaf :=_ebfg (_dedfec );return _eaaf ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_faea *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cffb :=func (_efec float64 )float64 {if _efec >=6.0/29{return _efec *_efec *_efec ;};return 108.0/841*(_efec -4/29);};_cedda ,_deaca :=color .(*PdfColorLab );if !_deaca {_bb .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cedda .L ();AStar :=_cedda .A ();BStar :=_cedda .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_faea .WhitePoint [0]*_cffb (L );Y :=_faea .WhitePoint [1]*_cffb (M );Z :=_faea .WhitePoint [2]*_cffb (N );_agbf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_edab :=-0.969256*X +1.875992*Y +0.041556*Z ;_aecb :=0.055648*X +-0.204043*Y +1.057311*Z ;_agbf =_ec .Min (_ec .Max (_agbf ,0),1.0);
_edab =_ec .Min (_ec .Max (_edab ,0),1.0);_aecb =_ec .Min (_ec .Max (_aecb ,0),1.0);return NewPdfColorDeviceRGB (_agbf ,_edab ,_aecb ),nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bbgb .PdfIndirectObject )*PdfOutlineItem {_cbfac :=PdfOutlineItem {};_cbfac ._efef =&_cbfac ;_cbfac .Title =_bbgb .MakeString (title );_fgfff :=_bbgb .MakeArray ();_fgfff .Append (page );_fgfff .Append (_bbgb .MakeName ("\u0046\u0069\u0074"));
_cbfac .Dest =_fgfff ;return &_cbfac ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dbac *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bedf :=_bbg .NewReader (img .getBase ());_gadfg :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dbac .AlternateSpace .GetNumComponents (),nil ,img ._bcbg ,nil );
_adbf :=_bbg .NewWriter (_gadfg );_dade :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_bb .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_bb .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dbac .TintTransform );_efge :=_dbac .AlternateSpace .DecodeArray ();var (_egef uint32 ;_baec error ;);for {_egef ,_baec =_bedf .ReadSample ();if _baec ==_bf .EOF {break ;
};if _baec !=nil {return img ,_baec ;};_cebf :=float64 (_egef )/_dade ;_abcd ,_dddbd :=_dbac .TintTransform .Evaluate ([]float64 {_cebf });if _dddbd !=nil {return img ,_dddbd ;};for _gccc ,_bagdd :=range _abcd {_cggd :=_ae .LinearInterpolate (_bagdd ,_efge [_gccc *2],_efge [_gccc *2+1],0,1);
if _dddbd =_adbf .WriteSample (uint32 (_cggd *_dade ));_dddbd !=nil {return img ,_dddbd ;};};};return _dbac .AlternateSpace .ImageToRGB (_cfegb (&_gadfg ));};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_add .CharMetrics ;

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_fdfg :=PdfColorCalGray (grayVal );return &_fdfg ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bagd _bbgb .PdfObject ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_dbgd *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caec ,_dbbd :=_bbgb .GetNumbersAsFloat (objects );
if _dbbd !=nil {return nil ,_dbbd ;};return _dbgd .ColorFromFloats (_caec );};

// ParserMetadata gets the parser  metadata.
func (_geadb *CompliancePdfReader )ParserMetadata ()_bbgb .ParserMetadata {if _geadb ._cdcgd ==(_bbgb .ParserMetadata {}){_geadb ._cdcgd ,_ =_geadb ._abceg .ParserMetadata ();};return _geadb ._cdcgd ;};func _cbdad (_bfeeg *_bbgb .PdfObjectStream )(*PdfFunctionType4 ,error ){_dgfcd :=&PdfFunctionType4 {};
_dgfcd ._fgcef =_bfeeg ;_ecdba :=_bfeeg .PdfObjectDictionary ;_aebgb ,_aafa :=_bbgb .TraceToDirectObject (_ecdba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbgb .PdfObjectArray );if !_aafa {_bb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aebgb .Len ()%2!=0{_bb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cddg ,_aada :=_aebgb .ToFloat64Array ();if _aada !=nil {return nil ,_aada ;};_dgfcd .Domain =_cddg ;_aebgb ,_aafa =_bbgb .TraceToDirectObject (_ecdba .Get ("\u0052\u0061\u006eg\u0065")).(*_bbgb .PdfObjectArray );
if _aafa {if _aebgb .Len ()< 0||_aebgb .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eebca ,_dceg :=_aebgb .ToFloat64Array ();if _dceg !=nil {return nil ,_dceg ;};_dgfcd .Range =_eebca ;
};_bbggc ,_aada :=_bbgb .DecodeStream (_bfeeg );if _aada !=nil {return nil ,_aada ;};_dgfcd ._acdag =_bbggc ;_cbdcg :=_adc .NewPSParser (_bbggc );_cdafd ,_aada :=_cbdcg .Parse ();if _aada !=nil {return nil ,_aada ;};_dgfcd .Program =_cdafd ;return _dgfcd ,nil ;
};

// GetFillImage get attached model.Image in push button.
func (_ageef *PdfFieldButton )GetFillImage ()*Image {if _ageef .IsPush (){return _ageef ._agda ;};return nil ;};func (_ebc *PdfAppender )updateObjectsDeep (_ggfc _bbgb .PdfObject ,_ecced map[_bbgb .PdfObject ]struct{}){if _ecced ==nil {_ecced =map[_bbgb .PdfObject ]struct{}{};
};if _ ,_acdb :=_ecced [_ggfc ];_acdb ||_ggfc ==nil {return ;};_ecced [_ggfc ]=struct{}{};_fcbg :=_bbgb .ResolveReferencesDeep (_ggfc ,_ebc ._ebbb );if _fcbg !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcbg );};switch _agdca :=_ggfc .(type ){case *_bbgb .PdfIndirectObject :switch {case _agdca .GetParser ()==_ebc ._cgeda ._abceg :return ;
case _agdca .GetParser ()==_ebc .Reader ._abceg :_bgae ,_ :=_ebc ._cgeda .GetIndirectObjectByNumber (int (_agdca .ObjectNumber ));_bdbg ,_eebf :=_bgae .(*_bbgb .PdfIndirectObject );if _eebf &&_bdbg !=nil {if _bdbg .PdfObject !=_agdca .PdfObject &&_bdbg .PdfObject .WriteString ()!=_agdca .PdfObject .WriteString (){_ebc .addNewObject (_ggfc );
_ebc ._gcbf [_ggfc ]=_agdca .ObjectNumber ;};};default:_ebc .addNewObject (_ggfc );};_ebc .updateObjectsDeep (_agdca .PdfObject ,_ecced );case *_bbgb .PdfObjectArray :for _ ,_ddga :=range _agdca .Elements (){_ebc .updateObjectsDeep (_ddga ,_ecced );};case *_bbgb .PdfObjectDictionary :for _ ,_fcbc :=range _agdca .Keys (){_ebc .updateObjectsDeep (_agdca .Get (_fcbc ),_ecced );
};case *_bbgb .PdfObjectStreams :if _agdca .GetParser ()!=_ebc ._cgeda ._abceg {for _ ,_bagg :=range _agdca .Elements (){_ebc .updateObjectsDeep (_bagg ,_ecced );};};case *_bbgb .PdfObjectStream :switch {case _agdca .GetParser ()==_ebc ._cgeda ._abceg :return ;
case _agdca .GetParser ()==_ebc .Reader ._abceg :if _eccea ,_gfffa :=_ebc ._cgeda ._abceg .LookupByReference (_agdca .PdfObjectReference );_gfffa ==nil {var _cfed bool ;if _gfag ,_fgbd :=_bbgb .GetStream (_eccea );_fgbd &&_gag .Equal (_gfag .Stream ,_agdca .Stream ){_cfed =true ;
};if _daga ,_adae :=_bbgb .GetDict (_eccea );_cfed &&_adae {_cfed =_daga .WriteString ()==_agdca .PdfObjectDictionary .WriteString ();};if _cfed {return ;};};if _agdca .ObjectNumber !=0{_ebc ._gcbf [_ggfc ]=_agdca .ObjectNumber ;};default:if _ ,_ccce :=_ebc ._ddfg [_ggfc ];
!_ccce {_ebc .addNewObject (_ggfc );};};_ebc .updateObjectsDeep (_agdca .PdfObjectDictionary ,_ecced );};};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cdga *PdfColorspaceLab )ToPdfObject ()_bbgb .PdfObject {_baggd :=_bbgb .MakeArray ();_baggd .Append (_bbgb .MakeName ("\u004c\u0061\u0062"));_efdd :=_bbgb .MakeDict ();if _cdga .WhitePoint !=nil {_bccf :=_bbgb .MakeArray (_bbgb .MakeFloat (_cdga .WhitePoint [0]),_bbgb .MakeFloat (_cdga .WhitePoint [1]),_bbgb .MakeFloat (_cdga .WhitePoint [2]));
_efdd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bccf );}else {_bb .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cdga .BlackPoint !=nil {_abfb :=_bbgb .MakeArray (_bbgb .MakeFloat (_cdga .BlackPoint [0]),_bbgb .MakeFloat (_cdga .BlackPoint [1]),_bbgb .MakeFloat (_cdga .BlackPoint [2]));_efdd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_abfb );
};if _cdga .Range !=nil {_cdfea :=_bbgb .MakeArray (_bbgb .MakeFloat (_cdga .Range [0]),_bbgb .MakeFloat (_cdga .Range [1]),_bbgb .MakeFloat (_cdga .Range [2]),_bbgb .MakeFloat (_cdga .Range [3]));_efdd .Set ("\u0052\u0061\u006eg\u0065",_cdfea );};_baggd .Append (_efdd );
if _cdga ._cbgd !=nil {_cdga ._cbgd .PdfObject =_baggd ;return _cdga ._cbgd ;};return _baggd ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_aaed *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _aaed .Range };var ImageHandling ImageHandler =DefaultImageHandler {};func (_agfe *PdfReader )loadDSS ()(*DSS ,error ){if _agfe ._abceg .GetCrypter ()!=nil &&!_agfe ._abceg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gdgg :=_agfe ._facae .Get ("\u0044\u0053\u0053");if _gdgg ==nil {return nil ,nil ;};_ddfbd ,_ :=_bbgb .GetIndirect (_gdgg );_gdgg =_bbgb .TraceToDirectObject (_gdgg );switch _bfbded :=_gdgg .(type ){case *_bbgb .PdfObjectNull :return nil ,nil ;case *_bbgb .PdfObjectDictionary :return _edeb (_ddfbd ,_bfbded );
};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_gdgg );};

// ToPdfObject implements interface PdfModel.
func (_gda *PdfAction )ToPdfObject ()_bbgb .PdfObject {_bfc :=_gda ._dce ;_aef :=_bfc .PdfObject .(*_bbgb .PdfObjectDictionary );_aef .Clear ();_aef .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_aef .SetIfNotNil ("\u0053",_gda .S );
_aef .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gda .Next );return _bfc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgda *PdfColorspaceDeviceGray )ToPdfObject ()_bbgb .PdfObject {return _bbgb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _bfbg (_bece *_bbgb .PdfObjectDictionary ){_debf ,_egac :=_bbgb .GetArray (_bece .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_ggfgc ,_fgabb :=_bbgb .GetIntVal (_bece .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_faaaf ,_abfe :=_bbgb .GetIntVal (_bece .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _egac &&_fgabb &&_abfe {_dcc :=_debf .Len ();if _dcc !=_faaaf -_ggfgc +1{_bb .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_dcc ,_faaaf );
_ffefc :=_bbgb .PdfObjectInteger (_ggfgc +_dcc -1);_bece .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_ffefc );};};};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bbbed :=&XObjectImage {};_ffaaf :=&_bbgb .PdfObjectStream {};_ffaaf .PdfObjectDictionary =_bbgb .MakeDict ();_bbbed ._gffd =_ffaaf ;return _bbbed ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bfaa *PdfColorspaceLab )DecodeArray ()[]float64 {_fdcf :=[]float64 {0,100};if _bfaa .Range !=nil &&len (_bfaa .Range )==4{_fdcf =append (_fdcf ,_bfaa .Range ...);}else {_fdcf =append (_fdcf ,-100,100,-100,100);};return _fdcf ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bgfcbf *Image )ToJBIG2Image ()(*_bbgb .JBIG2Image ,error ){_dacfa ,_fcfc :=_bgfcbf .ToGoImage ();if _fcfc !=nil {return nil ,_fcfc ;};return _bbgb .GoImageToJBIG2 (_dacfa ,_bbgb .JB2ImageAutoThreshold );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_acddd *PdfOutlineItem )GetContainingPdfObject ()_bbgb .PdfObject {return _acddd ._dacfc };

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ddgf *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddgf .AlternateSpace ==nil {return nil ,_fd .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ddgf .AlternateSpace .ColorToRGB (color );};var (_fcff =_edc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_agdea =_edc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_gefed =_edc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_cefe ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fede ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_abfbf ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// AddImageResource adds an image to the XObject resources.
func (_gdgeb *PdfPage )AddImageResource (name _bbgb .PdfObjectName ,ximg *XObjectImage )error {var _ffbb *_bbgb .PdfObjectDictionary ;if _gdgeb .Resources .XObject ==nil {_ffbb =_bbgb .MakeDict ();_gdgeb .Resources .XObject =_ffbb ;}else {var _fbbff bool ;
_ffbb ,_fbbff =(_gdgeb .Resources .XObject ).(*_bbgb .PdfObjectDictionary );if !_fbbff {return _fd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_ffbb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cfce *Outline )ToPdfOutline ()*PdfOutline {_gcgc :=NewPdfOutline ();var _cadfe []*PdfOutlineItem ;var _abce int64 ;var _ddcbd *PdfOutlineItem ;for _ ,_affbf :=range _cfce .Entries {_fcbaa ,_bcbf :=_affbf .ToPdfOutlineItem ();_fcbaa .Parent =&_gcgc .PdfOutlineTreeNode ;
if _ddcbd !=nil {_ddcbd .Next =&_fcbaa .PdfOutlineTreeNode ;_fcbaa .Prev =&_ddcbd .PdfOutlineTreeNode ;};_cadfe =append (_cadfe ,_fcbaa );_abce +=_bcbf ;_ddcbd =_fcbaa ;};_edge :=int64 (len (_cadfe ));_abce +=_edge ;if _edge > 0{_gcgc .First =&_cadfe [0].PdfOutlineTreeNode ;
_gcgc .Last =&_cadfe [_edge -1].PdfOutlineTreeNode ;_gcgc .Count =&_abce ;};return _gcgc ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_aebc :=NewPdfAnnotation ();_afe :=&PdfAnnotationFreeText {};_afe .PdfAnnotation =_aebc ;_afe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aebc .SetContext (_afe );return _afe ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gecee *Outline )ToPdfObject ()_bbgb .PdfObject {return _gecee .ToPdfOutline ().ToPdfObject ()};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ebdb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fd .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_dddf ,_gaab :=_ae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bcbg ,img ._baegcb );if _gaab !=nil {return img ,_gaab ;};_acfa ,_gaab :=_ae .GrayConverter .Convert (_dddf );if _gaab !=nil {return img ,_gaab ;
};return _cfegb (_acfa .Base ()),nil ;};

// Y returns the value of the yellow component of the color.
func (_ffcc *PdfColorDeviceCMYK )Y ()float64 {return _ffcc [2]};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_fcffa *PdfPage )SetContentStreams (cStreams []string ,encoder _bbgb .StreamEncoder )error {if len (cStreams )==0{_fcffa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bbgb .NewRawEncoder ();};var _gaba []*_bbgb .PdfObjectStream ;for _ ,_bbbe :=range cStreams {_fadcg :=&_bbgb .PdfObjectStream {};
_bdggf :=encoder .MakeStreamDict ();_abga ,_gdgda :=encoder .EncodeBytes ([]byte (_bbbe ));if _gdgda !=nil {return _gdgda ;};_bdggf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_abga ))));_fadcg .PdfObjectDictionary =_bdggf ;
_fadcg .Stream =_abga ;_gaba =append (_gaba ,_fadcg );};if len (_gaba )==1{_fcffa .Contents =_gaba [0];}else {_aagg :=_bbgb .MakeArray ();for _ ,_cgacf :=range _gaba {_aagg .Append (_cgacf );};_fcffa .Contents =_aagg ;};return nil ;};

// ToInteger convert to an integer format.
func (_eegb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gacg :=_ec .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gacg *_eegb .C ()),uint32 (_gacg *_eegb .M ()),uint32 (_gacg *_eegb .Y ()),uint32 (_gacg *_eegb .K ())};};

// IsShading specifies if the pattern is a shading pattern.
func (_becc *PdfPattern )IsShading ()bool {return _becc .PatternType ==2};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gbda :=&PdfColorspaceLab {};_gbda .BlackPoint =[]float64 {0.0,0.0,0.0};_gbda .Range =[]float64 {-100,100,-100,100};return _gbda ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_beea *PdfReader )GetNamedDestinations ()(_bbgb .PdfObject ,error ){_gbdcf :=_bbgb .ResolveReference (_beea ._facae .Get ("\u0044\u0065\u0073t\u0073"));if _gbdcf ==nil {return nil ,nil ;};if !_beea ._adbbb {_ddfbg :=_beea .traverseObjectData (_gbdcf );
if _ddfbg !=nil {return nil ,_ddfbg ;};};return _gbdcf ,nil ;};

// IsCID returns true if the underlying font is CID.
func (_ecdcg *PdfFont )IsCID ()bool {return _ecdcg .baseFields ().isCIDFont ()};func _fgff (_acbbd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_eeegc ,_egfc :=_bbgb .GetDict (_acbbd .AP );if !_egfc {return nil ,nil ,_fd .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _eeegc ==nil {return nil ,nil ,nil ;};_ceadf ,_egfc :=_bbgb .GetArray (_acbbd .Rect );if !_egfc ||_ceadf .Len ()!=4{return nil ,nil ,_fd .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gbde ,_aggg :=NewPdfRectangle (*_ceadf );
if _aggg !=nil {return nil ,nil ,_aggg ;};_ebfec :=_bbgb .TraceToDirectObject (_eeegc .Get ("\u004e"));switch _ggcff :=_ebfec .(type ){case *_bbgb .PdfObjectStream :_ggacg :=_ggcff ;_dcabb ,_efbg :=NewXObjectFormFromStream (_ggacg );return _dcabb ,_gbde ,_efbg ;
case *_bbgb .PdfObjectDictionary :_bccd :=_ggcff ;_gdgd ,_acbe :=_bbgb .GetName (_acbbd .AS );if !_acbe {return nil ,nil ,nil ;};if _bccd .Get (*_gdgd )==nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bffac ,_acbe :=_bbgb .GetStream (_bccd .Get (*_gdgd ));if !_acbe {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gdgd );
return nil ,nil ,_fd .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_aebca ,_geaeac :=NewXObjectFormFromStream (_bffac );return _aebca ,_gbde ,_geaeac ;};_bb .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ebfec );
return nil ,nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cbdda *PdfWriter )SetPageLabels (pageLabels _bbgb .PdfObject )error {if pageLabels ==nil {return nil ;};_bb .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_cbdda ._dfcbd .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cbdda .addObjects (pageLabels );};func _gggff ()string {return _bb .Version };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bbdb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbdb .AlternateSpace ==nil {return nil ,_fd .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bbdb .AlternateSpace .ColorToRGB (color );};func (_baced *PdfAppender )addNewObject (_dfbg _bbgb .PdfObject ){if _ ,_cfgc :=_baced ._ddfg [_dfbg ];!_cfgc {_baced ._dadf =append (_baced ._dadf ,_dfbg );_baced ._ddfg [_dfbg ]=struct{}{};};};func (_dfed *DSS )add (_ddce *[]*_bbgb .PdfObjectStream ,_dedfe map[string ]*_bbgb .PdfObjectStream ,_fgdca [][]byte )([]*_bbgb .PdfObjectStream ,error ){_ccca :=make ([]*_bbgb .PdfObjectStream ,0,len (_fgdca ));
for _ ,_edcc :=range _fgdca {_bdag ,_cege :=_fbeaac (_edcc );if _cege !=nil {return nil ,_cege ;};_dgae ,_fbga :=_dedfe [string (_bdag )];if !_fbga {_dgae ,_cege =_bbgb .MakeStream (_edcc ,_bbgb .NewRawEncoder ());if _cege !=nil {return nil ,_cege ;};_dedfe [string (_bdag )]=_dgae ;
*_ddce =append (*_ddce ,_dgae );};_ccca =append (_ccca ,_dgae );};return _ccca ,nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_aegbf *PdfPageResources )HasXObjectByName (keyName _bbgb .PdfObjectName )bool {_cfede ,_ :=_aegbf .GetXObjectByName (keyName );return _cfede !=nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bbgb .PdfObject ;Name _bbgb .PdfObject ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cgffb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cgffb ._ffggf ==nil {_cgffb ._ffggf =_adc .NewPSExecutor (_cgffb .Program );};var _fbcb []_adc .PSObject ;for _ ,_geeea :=range xVec {_fbcb =append (_fbcb ,_adc .MakeReal (_geeea ));
};_fcaeb ,_ddcf :=_cgffb ._ffggf .Execute (_fbcb );if _ddcf !=nil {return nil ,_ddcf ;};_feedb ,_ddcf :=_adc .PSObjectArrayToFloat64Array (_fcaeb );if _ddcf !=nil {return nil ,_ddcf ;};return _feedb ,nil ;};

// SetImage updates XObject Image with new image data.
func (_beff *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_beff .Filter .UpdateParams (img .GetParamsDict ());_fggc ,_cbad :=_beff .Filter .EncodeBytes (img .Data );if _cbad !=nil {return _cbad ;};_beff .Stream =_fggc ;_edad :=img .Width ;
_beff .Width =&_edad ;_gbggfe :=img .Height ;_beff .Height =&_gbggfe ;_adag :=img .BitsPerComponent ;_beff .BitsPerComponent =&_adag ;if cs ==nil {if img .ColorComponents ==1{_beff .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_beff .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_beff .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_beff .ColorSpace =cs ;};return nil ;
};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_cfda *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _cfda .baseFields ()._eaega !=nil {return _cfda .baseFields ()._eaega ;};if _fgde :=_cfda ._efcd .getFontDescriptor ();_fgde !=nil {return _fgde ;};_bb .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_cfda );
return nil ;};var _gcdcf =false ;func (_gfgg *PdfFont )baseFields ()*fontCommon {if _gfgg ._efcd ==nil {_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _gfgg ._efcd .baseFields ();};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bbgb .PdfObject ;};type pdfFont interface{_add .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bbgb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _faaeb ()string {_baae .Lock ();defer _baae .Unlock ();return _ggaca };

// Val returns the color value.
func (_fgbaf *PdfColorDeviceGray )Val ()float64 {return float64 (*_fgbaf )};func (_dgad *PdfReader )newPdfAnnotationSoundFromDict (_ddc *_bbgb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bcec :=PdfAnnotationSound {};_gebb ,_ddd :=_dgad .newPdfAnnotationMarkupFromDict (_ddc );
if _ddd !=nil {return nil ,_ddd ;};_bcec .PdfAnnotationMarkup =_gebb ;_bcec .Name =_ddc .Get ("\u004e\u0061\u006d\u0065");_bcec .Sound =_ddc .Get ("\u0053\u006f\u0075n\u0064");return &_bcec ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bbgb .StreamEncoder ;Intent _bbgb .PdfObject ;ImageMask _bbgb .PdfObject ;Mask _bbgb .PdfObject ;Matte _bbgb .PdfObject ;Decode _bbgb .PdfObject ;Interpolate _bbgb .PdfObject ;
Alternatives _bbgb .PdfObject ;SMask _bbgb .PdfObject ;SMaskInData _bbgb .PdfObject ;Name _bbgb .PdfObject ;StructParent _bbgb .PdfObject ;ID _bbgb .PdfObject ;OPI _bbgb .PdfObject ;Metadata _bbgb .PdfObject ;OC _bbgb .PdfObject ;Stream []byte ;_gffd *_bbgb .PdfObjectStream ;
};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// IsValid checks if the given pdf output intent type is valid.
func (_agdde PdfOutputIntentType )IsValid ()bool {return _agdde >=PdfOutputIntentTypeA1 &&_agdde <=PdfOutputIntentTypeX ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _bf .ReadSeeker )(*PdfFont ,error ){_babag ,_deeec :=_ad .ReadAll (r );if _deeec !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_deeec );
return nil ,_deeec ;};_dcfa ,_deeec :=_add .TtfParse (_gag .NewReader (_babag ));if _deeec !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_deeec );
return nil ,_deeec ;};_ceebb :=&pdfCIDFontType2 {fontCommon :fontCommon {_fagd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bbgb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dcfa .Widths )<=0{return nil ,_fd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cdge :=1000.0/float64 (_dcfa .UnitsPerEm );_cdafb :=_cdge *float64 (_dcfa .Widths [0]);_abac :=make (map[rune ]int );_gfffeb :=make (map[_add .GID ]int );_cbcf :=_add .GID (len (_dcfa .Widths ));for _fdda ,_dfea :=range _dcfa .Chars {if _dfea > _cbcf -1{continue ;
};_fffb :=int (_cdge *float64 (_dcfa .Widths [_dfea ]));_abac [_fdda ]=_fffb ;_gfffeb [_dfea ]=_fffb ;};_ceebb ._dfcac =_abac ;_ceebb .DW =_bbgb .MakeInteger (int64 (_cdafb ));_egdac :=_efddb (_gfffeb ,uint16 (_cbcf ));_ceebb .W =_bbgb .MakeIndirectObject (_egdac );
_cbgac :=_bbgb .MakeDict ();_cbgac .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bbgb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cbgac .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bbgb .MakeString ("\u0041\u0064\u006fb\u0065"));
_cbgac .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bbgb .MakeInteger (0));_ceebb .CIDSystemInfo =_cbgac ;_cgedd :=&PdfFontDescriptor {FontName :_bbgb .MakeName (_dcfa .PostScriptName ),Ascent :_bbgb .MakeFloat (_cdge *float64 (_dcfa .TypoAscender )),Descent :_bbgb .MakeFloat (_cdge *float64 (_dcfa .TypoDescender )),CapHeight :_bbgb .MakeFloat (_cdge *float64 (_dcfa .CapHeight )),FontBBox :_bbgb .MakeArrayFromFloats ([]float64 {_cdge *float64 (_dcfa .Xmin ),_cdge *float64 (_dcfa .Ymin ),_cdge *float64 (_dcfa .Xmax ),_cdge *float64 (_dcfa .Ymax )}),ItalicAngle :_bbgb .MakeFloat (_dcfa .ItalicAngle ),MissingWidth :_bbgb .MakeFloat (_cdafb )};
_dcca ,_deeec :=_bbgb .MakeStream (_babag ,_bbgb .NewFlateEncoder ());if _deeec !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_deeec );
return nil ,_deeec ;};_dcca .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbgb .MakeInteger (int64 (len (_babag ))));_cgedd .FontFile2 =_dcca ;if _dcfa .Bold {_cgedd .StemV =_bbgb .MakeInteger (120);}else {_cgedd .StemV =_bbgb .MakeInteger (70);
};_fggffc :=_eeed ;if _dcfa .IsFixedPitch {_fggffc |=_gadba ;};if _dcfa .ItalicAngle !=0{_fggffc |=_aeceb ;};_cgedd .Flags =_bbgb .MakeInteger (int64 (_fggffc ));_ceebb ._debfe =_dcfa .PostScriptName ;_ceebb ._eaega =_cgedd ;_dcdf :=pdfFontType0 {fontCommon :fontCommon {_fagd :"\u0054\u0079\u0070e\u0030",_debfe :_dcfa .PostScriptName },DescendantFont :&PdfFont {_efcd :_ceebb },Encoding :_bbgb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bdfgf :_dcfa .NewEncoder ()};
if len (_dcfa .Chars )> 0{_fdgg :=make (map[_afg .CharCode ]rune ,len (_dcfa .Chars ));for _cadec ,_adbgg :=range _dcfa .Chars {_bddaf :=_afg .CharCode (_adbgg );if _bfccb ,_bcad :=_fdgg [_bddaf ];!_bcad ||(_bcad &&_bfccb > _cadec ){_fdgg [_bddaf ]=_cadec ;
};};_dcdf ._aafb =_afg .NewToUnicodeCMap (_fdgg );};_eaac :=PdfFont {_efcd :&_dcdf };return &_eaac ,nil ;};

// PdfVersion returns version of the PDF file.
func (_eagdf *PdfReader )PdfVersion ()_bbgb .Version {return _eagdf ._abceg .PdfVersion ()};

// ToPdfObject implements interface PdfModel.
func (_gdf *PdfAnnotationStrikeOut )ToPdfObject ()_bbgb .PdfObject {_gdf .PdfAnnotation .ToPdfObject ();_afcc :=_gdf ._bce ;_debd :=_afcc .PdfObject .(*_bbgb .PdfObjectDictionary );_gdf .PdfAnnotationMarkup .appendToPdfDictionary (_debd );_debd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_debd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdf .QuadPoints );return _afcc ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_gbbae *LTV )EnableChain (chain []*_fc .Certificate )error {return _gbbae .enable (nil ,chain ,"")};func (_bgfcc *PdfWriter )writeString (_abgfg string ){if _bgfcc ._cccge !=nil {return ;};_faag ,_aadgf :=_bgfcc ._gacdg .WriteString (_abgfg );_bgfcc ._cfbdg +=int64 (_faag );
_bgfcc ._cccge =_aadgf ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bbgb .PdfObject ;};func (_ebeef *pdfFontType3 )baseFields ()*fontCommon {return &_ebeef .fontCommon };

// B returns the value of the B component of the color.
func (_faae *PdfColorCalRGB )B ()float64 {return _faae [1]};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cfc :=NewPdfAction ();_bbgc :=&PdfActionSubmitForm {};_bbgc .PdfAction =_cfc ;_cfc .SetContext (_bbgc );return _bbgc ;};var _ pdfFont =(*pdfFontType3 )(nil );

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dbfd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_cedfc :=&PdfColorPattern {};_daaac ,_degg :=objects [len (objects )-1].(*_bbgb .PdfObjectName );if !_degg {_bb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_cedfc .PatternName =*_daaac ;if len (objects )> 1{_ecfgg :=objects [0:len (objects )-1];if _dbfd .UnderlyingCS ==nil {_bb .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_dbfb ,_gfef :=_dbfd .UnderlyingCS .ColorFromPdfObjects (_ecfgg );if _gfef !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_gfef );
return nil ,_gfef ;};_cedfc .Color =_dbfb ;};return _cedfc ,nil ;};func (_acgaa *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _acgaa ._abceg .GetCrypter ()!=nil &&!_acgaa ._abceg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_afaba :=_acgaa ._facae ;_dcffec :=_afaba .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _dcffec ==nil {return nil ,nil ;};_degbf ,_ :=_bbgb .GetIndirect (_dcffec );_dcffec =_bbgb .TraceToDirectObject (_dcffec );if _bbgb .IsNullObject (_dcffec ){_bb .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_dffe ,_fbfcgf :=_bbgb .GetDict (_dcffec );if !_fbfcgf {_bb .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dcffec );_bb .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dcffec );};_bb .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_bb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_acgaa ._adbbb {_gcecg :=_acgaa .traverseObjectData (_dffe );
if _gcecg !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gcecg );
return nil ,_gcecg ;};};_eefdb ,_bgedf :=_acgaa .newPdfAcroFormFromDict (_degbf ,_dffe );if _bgedf !=nil {return nil ,_bgedf ;};return _eefdb ,nil ;};func (_fada *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};func (_ccbad *PdfReader )loadStructure ()error {if _ccbad ._abceg .GetCrypter ()!=nil &&!_ccbad ._abceg .IsAuthenticated (){return _d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fceeb :=_ccbad ._abceg .GetTrailer ();if _fceeb ==nil {return _d .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ddbffg ,_bffaa :=_fceeb .Get ("\u0052\u006f\u006f\u0074").(*_bbgb .PdfObjectReference );
if !_bffaa {return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_fceeb );};_ffagf ,_dage :=_ccbad ._abceg .LookupByReference (*_ddbffg );
if _dage !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dage );
return _dage ;};_ebae ,_bffaa :=_ffagf .(*_bbgb .PdfIndirectObject );if !_bffaa {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ffagf ,*_fceeb );
return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dcbdd ,_bffaa :=(*_ebae ).PdfObject .(*_bbgb .PdfObjectDictionary );if !_bffaa {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ebae .PdfObject );
return _fd .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bb .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dcbdd );_adbab ,_bffaa :=_dcbdd .Get ("\u0050\u0061\u0067e\u0073").(*_bbgb .PdfObjectReference );
if !_bffaa {return _fd .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_feagb ,_dage :=_ccbad ._abceg .LookupByReference (*_adbab );
if _dage !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _dage ;};_babd ,_bffaa :=_feagb .(*_bbgb .PdfIndirectObject );if !_bffaa {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_bb .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_babd );return _fd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bccfc ,_bffaa :=_babd .PdfObject .(*_bbgb .PdfObjectDictionary );if !_bffaa {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_babd );
return _fd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fgagg ,_bffaa :=_bbgb .GetInt (_bccfc .Get ("\u0043\u006f\u0075n\u0074"));if !_bffaa {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fd .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bffaa =_bbgb .GetName (_bccfc .Get ("\u0054\u0079\u0070\u0065"));!_bffaa {_bb .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_bccfc .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _aefca ,_dagab :=_bbgb .GetInt (_bccfc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_dagab {_bbfca :=int64 (*_aefca );_ccbad .Rotate =&_bbfca ;};_ccbad ._abdd =_ddbffg ;
_ccbad ._facae =_dcbdd ;_ccbad ._dccg =_bccfc ;_ccbad ._abaaf =_babd ;_ccbad ._agfa =int (*_fgagg );_ccbad ._gadg =[]*_bbgb .PdfIndirectObject {};_caadg :=map[_bbgb .PdfObject ]struct{}{};_dage =_ccbad .buildPageList (_babd ,nil ,_caadg );if _dage !=nil {return _dage ;
};_bb .Log .Trace ("\u002d\u002d\u002d");_bb .Log .Trace ("\u0054\u004f\u0043");_bb .Log .Trace ("\u0050\u0061\u0067e\u0073");_bb .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ccbad ._gadg ),_ccbad ._gadg );_ccbad ._cgcac ,_dage =_ccbad .loadOutlines ();
if _dage !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_dage );
return _dage ;};_ccbad .AcroForm ,_dage =_ccbad .loadForms ();if _dage !=nil {return _dage ;};_ccbad .DSS ,_dage =_ccbad .loadDSS ();if _dage !=nil {return _dage ;};return nil ;};func _efaa (_cecc _bbgb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_bbgdb :=&PdfColorspaceDeviceNAttributes {};
var _gagga *_bbgb .PdfObjectDictionary ;switch _baddd :=_cecc .(type ){case *_bbgb .PdfIndirectObject :_bbgdb ._fecce =_baddd ;var _agbeb bool ;_gagga ,_agbeb =_baddd .PdfObject .(*_bbgb .PdfObjectDictionary );if !_agbeb {_bb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bbgb .PdfObjectDictionary :_gagga =_baddd ;case *_bbgb .PdfObjectReference :_cfded :=_baddd .Resolve ();return _efaa (_cfded );default:_bb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbbee :=_gagga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dbbee !=nil {_daccf ,_fdab :=_bbgb .TraceToDirectObject (_dbbee ).(*_bbgb .PdfObjectName );if !_fdab {_bb .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bbgdb .Subtype =_daccf ;};if _ecggc :=_gagga .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ecggc !=nil {_bbgdb .Colorants =_ecggc ;};if _dcge :=_gagga .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_dcge !=nil {_bbgdb .Process =_dcge ;};if _bageb :=_gagga .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_bageb !=nil {_bbgdb .MixingHints =_bageb ;};return _bbgdb ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_gaa .File ,error ){const _dccga ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_gfbaf ,_abeag :=_gaa .Open (pdfFile );if _abeag !=nil {return nil ,nil ,_abeag ;};_caddb ,_abeag :=_bebbd (_gfbaf ,opts ,true ,_dccga );if _abeag !=nil {_gfbaf .Close ();return nil ,nil ,_abeag ;};return _caddb ,_gfbaf ,nil ;};func (_fcba *PdfAcroForm )filteredFields (_dgeg FieldFilterFunc ,_aaedb bool )[]*PdfField {if _fcba ==nil {return nil ;
};return _eedg (_fcba .Fields ,_dgeg ,_aaedb );};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bbgb .PdfObject ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ecgbe *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_dggcg :=_bbg .NewReader (img .getBase ());_ccbfb :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dfac :=_bbg .NewWriter (_ccbfb );
_dgdb :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_gagg :=make ([]uint32 ,3);var (_faa uint32 ;ANorm ,X ,Y ,Z ,_acdf ,_edfb ,_ggcg float64 ;_ggbca error ;);for {_faa ,_ggbca =_dggcg .ReadSample ();if _ggbca ==_bf .EOF {break ;}else if _ggbca !=nil {return img ,_ggbca ;
};ANorm =float64 (_faa )/_dgdb ;X =_ecgbe .WhitePoint [0]*_ec .Pow (ANorm ,_ecgbe .Gamma );Y =_ecgbe .WhitePoint [1]*_ec .Pow (ANorm ,_ecgbe .Gamma );Z =_ecgbe .WhitePoint [2]*_ec .Pow (ANorm ,_ecgbe .Gamma );_acdf =3.240479*X +-1.537150*Y +-0.498535*Z ;
_edfb =-0.969256*X +1.875992*Y +0.041556*Z ;_ggcg =0.055648*X +-0.204043*Y +1.057311*Z ;_acdf =_ec .Min (_ec .Max (_acdf ,0),1.0);_edfb =_ec .Min (_ec .Max (_edfb ,0),1.0);_ggcg =_ec .Min (_ec .Max (_ggcg ,0),1.0);_gagg [0]=uint32 (_acdf *_dgdb );_gagg [1]=uint32 (_edfb *_dgdb );
_gagg [2]=uint32 (_ggcg *_dgdb );if _ggbca =_dfac .WriteSamples (_gagg );_ggbca !=nil {return img ,_ggbca ;};};return _cfegb (&_ccbfb ),nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ffdf *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetDescent returns the Descent of the font `descriptor`.
func (_adea *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bbgb .GetNumberAsFloat (_adea .Descent );};

// ToPdfObject implements interface PdfModel.
func (_adf *PdfActionHide )ToPdfObject ()_bbgb .PdfObject {_adf .PdfAction .ToPdfObject ();_bgd :=_adf ._dce ;_cfb :=_bgd .PdfObject .(*_bbgb .PdfObjectDictionary );_cfb .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeHide )));_cfb .SetIfNotNil ("\u0054",_adf .T );
_cfb .SetIfNotNil ("\u0048",_adf .H );return _bgd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_bgdgf *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gdcc :=&PdfAppender {_bffc :reader ._gcfce ,Reader :reader ,_agbc :reader ._abceg ,_ebbb :reader ._efad };_fbb ,_bgfc :=_gdcc ._bffc .Seek (0,_bf .SeekEnd );if _bgfc !=nil {return nil ,_bgfc ;
};_gdcc ._eddc =_fbb ;if _ ,_bgfc =_gdcc ._bffc .Seek (0,_bf .SeekStart );_bgfc !=nil {return nil ,_bgfc ;};_gdcc ._cgeda ,_bgfc =NewPdfReader (_gdcc ._bffc );if _bgfc !=nil {return nil ,_bgfc ;};for _ ,_ggeb :=range _gdcc .Reader .GetObjectNums (){if _gdcc ._fac < _ggeb {_gdcc ._fac =_ggeb ;
};};_gdcc ._bee =_gdcc ._agbc .GetXrefTable ();_gdcc ._bdbd =_gdcc ._agbc .GetXrefOffset ();_gdcc ._fegcd =append (_gdcc ._fegcd ,_gdcc ._cgeda .PageList ...);_gdcc ._ddfg =make (map[_bbgb .PdfObject ]struct{});_gdcc ._gcbf =make (map[_bbgb .PdfObject ]int64 );
_gdcc ._ecaea =make (map[_bbgb .PdfObject ]struct{});_gdcc ._eeec =_gdcc ._cgeda .AcroForm ;_gdcc ._gdg =_gdcc ._cgeda .DSS ;return _gdcc ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_fded *DSS )GetContainingPdfObject ()_bbgb .PdfObject {return _fded ._abgcb };

// HasFontByName checks if has font resource by name.
func (_fbcbc *PdfPage )HasFontByName (name _bbgb .PdfObjectName )bool {_adddb ,_cegff :=_fbcbc .Resources .Font .(*_bbgb .PdfObjectDictionary );if !_cegff {return false ;};if _dcacc :=_adddb .Get (name );_dcacc !=nil {return true ;};return false ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cdfee *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bbgb .PdfObject {_dbbge :=_bbgb .MakeDict ();if _cdfee .Subtype !=nil {_dbbge .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cdfee .Subtype );};_dbbge .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cdfee .Colorants );
_dbbge .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cdfee .Process );_dbbge .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cdfee .MixingHints );if _cdfee ._fecce !=nil {_cdfee ._fecce .PdfObject =_dbbge ;return _cdfee ._fecce ;
};return _dbbge ;};func (_bc *PdfReader )newPdfActionFromIndirectObject (_eaf *_bbgb .PdfIndirectObject )(*PdfAction ,error ){_agba ,_cfcg :=_eaf .PdfObject .(*_bbgb .PdfObjectDictionary );if !_cfcg {return nil ,_d .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bc ._cgadg .GetModelFromPrimitive (_agba );model !=nil {_bag ,_eca :=model .(*PdfAction );if !_eca {return nil ,_d .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _bag ,nil ;};_fggb :=&PdfAction {};_fggb ._dce =_eaf ;_bc ._cgadg .Register (_agba ,_fggb );if _gfd :=_agba .Get ("\u0054\u0079\u0070\u0065");_gfd !=nil {_accb ,_fff :=_gfd .(*_bbgb .PdfObjectName );if !_fff {_bb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfd );
}else {if *_accb !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bb .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_accb );
};_fggb .Type =_accb ;};};if _dead :=_agba .Get ("\u004e\u0065\u0078\u0074");_dead !=nil {_fggb .Next =_dead ;};if _gff :=_agba .Get ("\u0053");_gff !=nil {_fggb .S =_gff ;};_egge ,_edda :=_fggb .S .(*_bbgb .PdfObjectName );if !_edda {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fggb .S );
return nil ,_d .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fggb .S );};_edb :=PdfActionType (_egge .String ());
switch _edb {case ActionTypeGoTo :_abb ,_dgc :=_bc .newPdfActionGotoFromDict (_agba );if _dgc !=nil {return nil ,_dgc ;};_abb .PdfAction =_fggb ;_fggb ._agb =_abb ;return _fggb ,nil ;case ActionTypeGoToR :_daf ,_caa :=_bc .newPdfActionGotoRFromDict (_agba );
if _caa !=nil {return nil ,_caa ;};_daf .PdfAction =_fggb ;_fggb ._agb =_daf ;return _fggb ,nil ;case ActionTypeGoToE :_bd ,_gde :=_bc .newPdfActionGotoEFromDict (_agba );if _gde !=nil {return nil ,_gde ;};_bd .PdfAction =_fggb ;_fggb ._agb =_bd ;return _fggb ,nil ;
case ActionTypeLaunch :_gfa ,_afa :=_bc .newPdfActionLaunchFromDict (_agba );if _afa !=nil {return nil ,_afa ;};_gfa .PdfAction =_fggb ;_fggb ._agb =_gfa ;return _fggb ,nil ;case ActionTypeThread :_eee ,_beb :=_bc .newPdfActionThreadFromDict (_agba );if _beb !=nil {return nil ,_beb ;
};_eee .PdfAction =_fggb ;_fggb ._agb =_eee ;return _fggb ,nil ;case ActionTypeURI :_ecc ,_bbf :=_bc .newPdfActionURIFromDict (_agba );if _bbf !=nil {return nil ,_bbf ;};_ecc .PdfAction =_fggb ;_fggb ._agb =_ecc ;return _fggb ,nil ;case ActionTypeSound :_fddd ,_ggg :=_bc .newPdfActionSoundFromDict (_agba );
if _ggg !=nil {return nil ,_ggg ;};_fddd .PdfAction =_fggb ;_fggb ._agb =_fddd ;return _fggb ,nil ;case ActionTypeMovie :_bebb ,_fca :=_bc .newPdfActionMovieFromDict (_agba );if _fca !=nil {return nil ,_fca ;};_bebb .PdfAction =_fggb ;_fggb ._agb =_bebb ;
return _fggb ,nil ;case ActionTypeHide :_dda ,_gba :=_bc .newPdfActionHideFromDict (_agba );if _gba !=nil {return nil ,_gba ;};_dda .PdfAction =_fggb ;_fggb ._agb =_dda ;return _fggb ,nil ;case ActionTypeNamed :_gdbc ,_eeeg :=_bc .newPdfActionNamedFromDict (_agba );
if _eeeg !=nil {return nil ,_eeeg ;};_gdbc .PdfAction =_fggb ;_fggb ._agb =_gdbc ;return _fggb ,nil ;case ActionTypeSubmitForm :_fbe ,_edde :=_bc .newPdfActionSubmitFormFromDict (_agba );if _edde !=nil {return nil ,_edde ;};_fbe .PdfAction =_fggb ;_fggb ._agb =_fbe ;
return _fggb ,nil ;case ActionTypeResetForm :_deb ,_bff :=_bc .newPdfActionResetFormFromDict (_agba );if _bff !=nil {return nil ,_bff ;};_deb .PdfAction =_fggb ;_fggb ._agb =_deb ;return _fggb ,nil ;case ActionTypeImportData :_ddg ,_ccd :=_bc .newPdfActionImportDataFromDict (_agba );
if _ccd !=nil {return nil ,_ccd ;};_ddg .PdfAction =_fggb ;_fggb ._agb =_ddg ;return _fggb ,nil ;case ActionTypeSetOCGState :_fdceb ,_cag :=_bc .newPdfActionSetOCGStateFromDict (_agba );if _cag !=nil {return nil ,_cag ;};_fdceb .PdfAction =_fggb ;_fggb ._agb =_fdceb ;
return _fggb ,nil ;case ActionTypeRendition :_cab ,_ace :=_bc .newPdfActionRenditionFromDict (_agba );if _ace !=nil {return nil ,_ace ;};_cab .PdfAction =_fggb ;_fggb ._agb =_cab ;return _fggb ,nil ;case ActionTypeTrans :_cbd ,_dcg :=_bc .newPdfActionTransFromDict (_agba );
if _dcg !=nil {return nil ,_dcg ;};_cbd .PdfAction =_fggb ;_fggb ._agb =_cbd ;return _fggb ,nil ;case ActionTypeGoTo3DView :_fggf ,_fbf :=_bc .newPdfActionGoTo3DViewFromDict (_agba );if _fbf !=nil {return nil ,_fbf ;};_fggf .PdfAction =_fggb ;_fggb ._agb =_fggf ;
return _fggb ,nil ;case ActionTypeJavaScript :_dgcg ,_def :=_bc .newPdfActionJavaScriptFromDict (_agba );if _def !=nil {return nil ,_def ;};_dgcg .PdfAction =_fggb ;_fggb ._agb =_dgcg ;return _fggb ,nil ;};_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_edb );
return nil ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dfced *pdfCIDFontType2 )ToPdfObject ()_bbgb .PdfObject {if _dfced ._eadf ==nil {_dfced ._eadf =&_bbgb .PdfIndirectObject {};};_begd :=_dfced .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_dfced ._eadf .PdfObject =_begd ;if _dfced .CIDSystemInfo !=nil {_begd .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dfced .CIDSystemInfo );};if _dfced .DW !=nil {_begd .Set ("\u0044\u0057",_dfced .DW );};if _dfced .DW2 !=nil {_begd .Set ("\u0044\u0057\u0032",_dfced .DW2 );
};if _dfced .W !=nil {_begd .Set ("\u0057",_dfced .W );};if _dfced .W2 !=nil {_begd .Set ("\u0057\u0032",_dfced .W2 );};if _dfced .CIDToGIDMap !=nil {_begd .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dfced .CIDToGIDMap );};return _dfced ._eadf ;
};

// SetContext set the sub annotation (context).
func (_ddaed *PdfShading )SetContext (ctx PdfModel ){_ddaed ._ccdac =ctx };

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bgfdf *PdfWriter )SetNameDictionary (names _bbgb .PdfObject )error {if names ==nil {return nil ;};_bb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_bgfdf ._dfcbd .Set ("\u004e\u0061\u006de\u0073",names );return _bgfdf .addObjects (names );};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bbgb .PdfObjectString ;Q *_bbgb .PdfObjectInteger ;DS *_bbgb .PdfObjectString ;RV _bbgb .PdfObject ;};

// SetFillImage attach a model.Image to push button.
func (_agfd *PdfFieldButton )SetFillImage (image *Image ){if _agfd .IsPush (){_agfd ._agda =image ;};};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cbgd *_bbgb .PdfIndirectObject ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cf :=NewPdfAction ();_cdf :=&PdfActionSound {};_cdf .PdfAction =_cf ;_cf .SetContext (_cdf );return _cdf ;};

// ImageToRGB convert an indexed image to RGB.
func (_fdag *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fdag .Base .GetNumComponents ();if N < 1{return Image {},_d .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_gade :=_ae .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bcbg ,img ._baegcb );_cbff :=_bbg .NewReader (img .getBase ());_ceae :=_bbg .NewWriter (_gade );var (_gdffa uint32 ;_bdee int ;_abbc error ;);for {_gdffa ,_abbc =_cbff .ReadSample ();
if _abbc ==_bf .EOF {break ;}else if _abbc !=nil {return img ,_abbc ;};_bdee =int (_gdffa );_bb .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bdee ,N ,len (_fdag ._baac ));
if (_bdee +1)*N > len (_fdag ._baac ){_bdee =len (_fdag ._baac )/N -1;_bb .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bdee );if _bdee < 0{_bb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _fccb :=_bdee *N ;_fccb < (_bdee +1)*N ;_fccb ++{if _abbc =_ceae .WriteSample (uint32 (_fdag ._baac [_fccb ]));_abbc !=nil {return img ,_abbc ;};};};return _fdag .Base .ImageToRGB (_cfegb (&_gade ));};func _edeb (_cffe *_bbgb .PdfIndirectObject ,_acde *_bbgb .PdfObjectDictionary )(*DSS ,error ){if _cffe ==nil {_cffe =_bbgb .MakeIndirectObject (nil );
};_cffe .PdfObject =_bbgb .MakeDict ();_cefcc :=map[string ]*VRI {};if _afabd ,_dgfg :=_bbgb .GetDict (_acde .Get ("\u0056\u0052\u0049"));_dgfg {for _ ,_bdbc :=range _afabd .Keys (){if _aegdd ,_fbbea :=_bbgb .GetDict (_afabd .Get (_bdbc ));_fbbea {_cefcc [_df .ToUpper (_bdbc .String ())]=_cfcd (_aegdd );
};};};return &DSS {Certs :_ecfge (_acde .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_ecfge (_acde .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_ecfge (_acde .Get ("\u0043\u0052\u004c\u0073")),VRI :_cefcc ,_abgcb :_cffe },nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fbea *PdfColorCalRGB )GetNumComponents ()int {return 3};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_ecdcf *PdfShading )GetContext ()PdfModel {return _ecdcf ._ccdac };func _aecceb (_cbaf _bbgb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dacef :=&PdfPageResourcesColorspaces {};if _fedb ,_adfdb :=_cbaf .(*_bbgb .PdfIndirectObject );_adfdb {_dacef ._fcbccb =_fedb ;
_cbaf =_fedb .PdfObject ;};_ggfgg ,_fcaaf :=_bbgb .GetDict (_cbaf );if !_fcaaf {return nil ,_fd .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dacef .Names =[]string {};
_dacef .Colorspaces =map[string ]PdfColorspace {};for _ ,_abba :=range _ggfgg .Keys (){_edbac :=_ggfgg .Get (_abba );_dacef .Names =append (_dacef .Names ,string (_abba ));_aaeee ,_egbgdd :=NewPdfColorspaceFromPdfObject (_edbac );if _egbgdd !=nil {return nil ,_egbgdd ;
};_dacef .Colorspaces [string (_abba )]=_aaeee ;};return _dacef ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_gcebb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gcebb ._efcd .getFontDescriptor (),nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_beafa *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _beafa .Alternate ==nil {_bb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _beafa .N ==1{_bb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_dfgc :=NewPdfColorspaceDeviceGray ();return _dfgc .ImageToRGB (img );}else if _beafa .N ==3{_bb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _beafa .N ==4{_bb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bfcc :=NewPdfColorspaceDeviceCMYK ();return _bfcc .ImageToRGB (img );}else {return img ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_beafa );
_agfbf ,_cegb :=_beafa .Alternate .ImageToRGB (img );_bb .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bb .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_agfbf );
return _agfbf ,_cegb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gffb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbgcf ,_bgfcb :=_bbgb .GetNumbersAsFloat (objects );
if _bgfcb !=nil {return nil ,_bgfcb ;};return _gffb .ColorFromFloats (_dbgcf );};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_gcbae *PdfPageResources )GetShadingByName (keyName _bbgb .PdfObjectName )(*PdfShading ,bool ){if _gcbae .Shading ==nil {return nil ,false ;};_bebcc ,_ggafa :=_bbgb .TraceToDirectObject (_gcbae .Shading ).(*_bbgb .PdfObjectDictionary );if !_ggafa {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcbae .Shading );
return nil ,false ;};if _fdfee :=_bebcc .Get (keyName );_fdfee !=nil {_decdg ,_dffge :=_gecfbc (_fdfee );if _dffge !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dffge );
return nil ,false ;};return _decdg ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfAnnotationCircle )ToPdfObject ()_bbgb .PdfObject {_fcg .PdfAnnotation .ToPdfObject ();_eac :=_fcg ._bce ;_dffb :=_eac .PdfObject .(*_bbgb .PdfObjectDictionary );_fcg .PdfAnnotationMarkup .appendToPdfDictionary (_dffb );_dffb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_dffb .SetIfNotNil ("\u0042\u0053",_fcg .BS );_dffb .SetIfNotNil ("\u0049\u0043",_fcg .IC );_dffb .SetIfNotNil ("\u0042\u0045",_fcg .BE );_dffb .SetIfNotNil ("\u0052\u0044",_fcg .RD );return _eac ;};func _bddgb ()string {_baae .Lock ();defer _baae .Unlock ();
return _dcfdcc };

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_agb PdfModel ;Type _bbgb .PdfObject ;S _bbgb .PdfObject ;Next _bbgb .PdfObject ;_dce *_bbgb .PdfIndirectObject ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bbgb .PdfObjectArray ;Domain *_bbgb .PdfObjectArray ;Function []PdfFunction ;Extend *_bbgb .PdfObjectArray ;};func (_dbfaa *PdfSignature )extractChainFromCert ()([]*_fc .Certificate ,error ){var _bafa *_bbgb .PdfObjectArray ;
switch _bgfda :=_dbfaa .Cert .(type ){case *_bbgb .PdfObjectString :_bafa =_bbgb .MakeArray (_bgfda );case *_bbgb .PdfObjectArray :_bafa =_bgfda ;default:return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bgfda );
};var _acffb _gag .Buffer ;for _ ,_aeafb :=range _bafa .Elements (){_gdgdc ,_dgcfe :=_bbgb .GetString (_aeafb );if !_dgcfe {return nil ,_d .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_aeafb );
};if _ ,_ebegb :=_acffb .Write (_gdgdc .Bytes ());_ebegb !=nil {return nil ,_ebegb ;};};return _fc .ParseCertificates (_acffb .Bytes ());};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_abdb *PdfPageResourcesColorspaces )Set (key _bbgb .PdfObjectName ,val PdfColorspace ){if _ ,_agfgc :=_abdb .Colorspaces [string (key )];!_agfgc {_abdb .Names =append (_abdb .Names ,string (key ));};_abdb .Colorspaces [string (key )]=val ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_acfaa :=PdfColorCalRGB {a ,b ,c };return &_acfaa ;};

// SetDecode sets the decode image float slice.
func (_gefcb *Image )SetDecode (decode []float64 ){_gefcb ._baegcb =decode };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_adce :=NewPdfAction ();_aeb :=&PdfActionURI {};_aeb .PdfAction =_adce ;_adce .SetContext (_aeb );return _aeb ;};type pdfFontSimple struct{fontCommon ;_fagfd *_bbgb .PdfIndirectObject ;_ceec map[_gcc .CharCode ]float64 ;
_fddbf _gcc .TextEncoder ;_geff _gcc .TextEncoder ;_eagg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bbgb .PdfObject ;LastChar _bbgb .PdfObject ;Widths _bbgb .PdfObject ;Encoding _bbgb .PdfObject ;_eeff *_add .RuneCharSafeMap ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_dedce DefaultImageHandler )NewImageFromGoImage (goimg _fb .Image )(*Image ,error ){_cagag ,_gedeb :=_ae .FromGoImage (goimg );if _gedeb !=nil {return nil ,_gedeb ;};_fcdea :=_cfegb (_cagag .Base ());return &_fcdea ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_ggcfg *Image )SetAlpha (alpha []byte ){_ggcfg ._bcbg =alpha };type pdfCIDFontType0 struct{fontCommon ;_bfgeb *_bbgb .PdfIndirectObject ;_abbda _gcc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bbgb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bbgb .PdfObject ;W _bbgb .PdfObject ;DW2 _bbgb .PdfObject ;W2 _bbgb .PdfObject ;_dadfd map[_gcc .CharCode ]float64 ;_ccbee float64 ;};func (_efee *PdfWriter )flushWriter ()error {if _efee ._cccge ==nil {_efee ._cccge =_efee ._gacdg .Flush ();};return _efee ._cccge ;
};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_gefgd *PdfAcroForm )ToPdfObject ()_bbgb .PdfObject {_egdgcf :=_gefgd ._dabb ;_gggbd :=_egdgcf .PdfObject .(*_bbgb .PdfObjectDictionary );if _gefgd .Fields !=nil {_eccef :=_bbgb .PdfObjectArray {};for _ ,_ggfac :=range *_gefgd .Fields {_ccfa :=_ggfac .GetContext ();
if _ccfa !=nil {_eccef .Append (_ccfa .ToPdfObject ());}else {_eccef .Append (_ggfac .ToPdfObject ());};};_gggbd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_eccef );};if _gefgd .NeedAppearances !=nil {_gggbd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_gefgd .NeedAppearances );
};if _gefgd .SigFlags !=nil {_gggbd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_gefgd .SigFlags );};if _gefgd .CO !=nil {_gggbd .Set ("\u0043\u004f",_gefgd .CO );};if _gefgd .DR !=nil {_gggbd .Set ("\u0044\u0052",_gefgd .DR .ToPdfObject ());
};if _gefgd .DA !=nil {_gggbd .Set ("\u0044\u0041",_gefgd .DA );};if _gefgd .Q !=nil {_gggbd .Set ("\u0051",_gefgd .Q );};if _gefgd .XFA !=nil {_gggbd .Set ("\u0058\u0046\u0041",_gefgd .XFA );};return _egdgcf ;};var (CourierName =_add .CourierName ;CourierBoldName =_add .CourierBoldName ;
CourierObliqueName =_add .CourierObliqueName ;CourierBoldObliqueName =_add .CourierBoldObliqueName ;HelveticaName =_add .HelveticaName ;HelveticaBoldName =_add .HelveticaBoldName ;HelveticaObliqueName =_add .HelveticaObliqueName ;HelveticaBoldObliqueName =_add .HelveticaBoldObliqueName ;
SymbolName =_add .SymbolName ;ZapfDingbatsName =_add .ZapfDingbatsName ;TimesRomanName =_add .TimesRomanName ;TimesBoldName =_add .TimesBoldName ;TimesItalicName =_add .TimesItalicName ;TimesBoldItalicName =_add .TimesBoldItalicName ;);

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bbgb .PdfObject ;Flags _bbgb .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ccced *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};type pdfCIDFontType2 struct{fontCommon ;_eadf *_bbgb .PdfIndirectObject ;_eedda _gcc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bbgb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bbgb .PdfObject ;W _bbgb .PdfObject ;DW2 _bbgb .PdfObject ;W2 _bbgb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bbgb .PdfObject ;_daad map[_gcc .CharCode ]float64 ;_fbaaf float64 ;_dfcac map[rune ]int ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_edef :=NewPdfAnnotation ();_fbaa :=&PdfAnnotationMovie {};_fbaa .PdfAnnotation =_edef ;_edef .SetContext (_fbaa );return _fbaa ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bbgb .PdfObject ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bbgb .PdfObject ;NewWindow _bbgb .PdfObject ;};func (_geb *PdfReader )newPdfAnnotationMarkupFromDict (_ced *_bbgb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_gacb :=&PdfAnnotationMarkup {};
if _cbac :=_ced .Get ("\u0054");_cbac !=nil {_gacb .T =_cbac ;};if _dbbe :=_ced .Get ("\u0050\u006f\u0070u\u0070");_dbbe !=nil {_egca ,_gbbf :=_dbbe .(*_bbgb .PdfIndirectObject );if !_gbbf {if _ ,_fdfe :=_dbbe .(*_bbgb .PdfObjectNull );!_fdfe {return nil ,_fd .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_gge ,_dacd :=_geb .newPdfAnnotationFromIndirectObject (_egca );if _dacd !=nil {return nil ,_dacd ;};if _gge !=nil {_ccab ,_aaee :=_gge ._cged .(*PdfAnnotationPopup );if !_aaee {return nil ,_fd .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_gacb .Popup =_ccab ;};};};if _fdba :=_ced .Get ("\u0043\u0041");_fdba !=nil {_gacb .CA =_fdba ;};if _aegc :=_ced .Get ("\u0052\u0043");_aegc !=nil {_gacb .RC =_aegc ;};if _bda :=_ced .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_bda !=nil {_gacb .CreationDate =_bda ;};if _beaf :=_ced .Get ("\u0049\u0052\u0054");_beaf !=nil {_gacb .IRT =_beaf ;};if _gce :=_ced .Get ("\u0053\u0075\u0062\u006a");_gce !=nil {_gacb .Subj =_gce ;};if _acf :=_ced .Get ("\u0052\u0054");_acf !=nil {_gacb .RT =_acf ;
};if _afgc :=_ced .Get ("\u0049\u0054");_afgc !=nil {_gacb .IT =_afgc ;};if _dbc :=_ced .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_dbc !=nil {_gacb .ExData =_dbc ;};return _gacb ,nil ;};func (_fbd *PdfReader )newPdfActionLaunchFromDict (_aee *_bbgb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_cfd ,_dag :=_cfg (_aee .Get ("\u0046"));
if _dag !=nil {return nil ,_dag ;};return &PdfActionLaunch {Win :_aee .Get ("\u0057\u0069\u006e"),Mac :_aee .Get ("\u004d\u0061\u0063"),Unix :_aee .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_aee .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cfd },nil ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bfbe *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bfbe .Alternate ==nil {if _bfbe .N ==1{_dbaed :=NewPdfColorspaceDeviceGray ();return _dbaed .ColorFromFloats (vals );}else if _bfbe .N ==3{_ccdb :=NewPdfColorspaceDeviceRGB ();
return _ccdb .ColorFromFloats (vals );}else if _bfbe .N ==4{_fgae :=NewPdfColorspaceDeviceCMYK ();return _fgae .ColorFromFloats (vals );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bfbe .Alternate .ColorFromFloats (vals );};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_egbe *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bbgb .StreamEncoder )(*XObjectImage ,error ){_bbaf :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bbaf ,img ,cs ,encoder );};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bbgb .PdfObject ;GetContainingPdfObject ()_bbgb .PdfObject ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bgaf *PdfReader )IsEncrypted ()(bool ,error ){return _bgaf ._abceg .IsEncrypted ()};func (_adaf *PdfReader )newPdfAnnotationTextFromDict (_dgcd *_bbgb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_acaa :=PdfAnnotationText {};_fbgd ,_dedc :=_adaf .newPdfAnnotationMarkupFromDict (_dgcd );
if _dedc !=nil {return nil ,_dedc ;};_acaa .PdfAnnotationMarkup =_fbgd ;_acaa .Open =_dgcd .Get ("\u004f\u0070\u0065\u006e");_acaa .Name =_dgcd .Get ("\u004e\u0061\u006d\u0065");_acaa .State =_dgcd .Get ("\u0053\u0074\u0061t\u0065");_acaa .StateModel =_dgcd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_acaa ,nil ;};func (_abc *PdfReader )newPdfAnnotationLinkFromDict (_fgcb *_bbgb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_ggbcg :=PdfAnnotationLink {};_ggbcg .A =_fgcb .Get ("\u0041");_ggbcg .Dest =_fgcb .Get ("\u0044\u0065\u0073\u0074");
_ggbcg .H =_fgcb .Get ("\u0048");_ggbcg .PA =_fgcb .Get ("\u0050\u0041");_ggbcg .QuadPoints =_fgcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ggbcg .BS =_fgcb .Get ("\u0042\u0053");return &_ggbcg ,nil ;};func (_bedee *PdfReader )buildOutlineTree (_gcdfc _bbgb .PdfObject ,_cbabc *PdfOutlineTreeNode ,_afadb *PdfOutlineTreeNode ,_bdgeg map[_bbgb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bdgeg ==nil {_bdgeg =map[_bbgb .PdfObject ]struct{}{};
};_bdgeg [_gcdfc ]=struct{}{};_dedbbd ,_bdgef :=_gcdfc .(*_bbgb .PdfIndirectObject );if !_bdgef {return nil ,nil ,_d .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gcdfc );
};_fadaf ,_acefc :=_dedbbd .PdfObject .(*_bbgb .PdfObjectDictionary );if !_acefc {return nil ,nil ,_fd .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fadaf ,_dedbbd ,_dedbbd );
if _fbaaa :=_fadaf .Get ("\u0054\u0069\u0074l\u0065");_fbaaa !=nil {_afgde ,_gcfaf :=_bedee .newPdfOutlineItemFromIndirectObject (_dedbbd );if _gcfaf !=nil {return nil ,nil ,_gcfaf ;};_afgde .Parent =_cbabc ;_afgde .Prev =_afadb ;_bbde :=_bbgb .ResolveReference (_fadaf .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_edefaa :=_bdgeg [_bbde ];_bbde !=nil &&_bbde !=_dedbbd &&!_edefaa {if !_bbgb .IsNullObject (_bbde ){_ebaba ,_fdabe ,_baed :=_bedee .buildOutlineTree (_bbde ,&_afgde .PdfOutlineTreeNode ,nil ,_bdgeg );if _baed !=nil {_bb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_baed );
}else {_afgde .First =_ebaba ;_afgde .Last =_fdabe ;};};};_beaee :=_bbgb .ResolveReference (_fadaf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_dfeaf :=_bdgeg [_beaee ];_beaee !=nil &&_beaee !=_dedbbd &&!_dfeaf {if !_bbgb .IsNullObject (_beaee ){_beda ,_badfg ,_ggbdb :=_bedee .buildOutlineTree (_beaee ,_cbabc ,&_afgde .PdfOutlineTreeNode ,_bdgeg );
if _ggbdb !=nil {_bb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ggbdb );
}else {_afgde .Next =_beda ;return &_afgde .PdfOutlineTreeNode ,_badfg ,nil ;};};};return &_afgde .PdfOutlineTreeNode ,&_afgde .PdfOutlineTreeNode ,nil ;};_fbgfc ,_aafbg :=_gdgaf (_dedbbd );if _aafbg !=nil {return nil ,nil ,_aafbg ;};_fbgfc .Parent =_cbabc ;
if _gccdg :=_fadaf .Get ("\u0046\u0069\u0072s\u0074");_gccdg !=nil {_gccdg =_bbgb .ResolveReference (_gccdg );if _ ,_gecfd :=_bdgeg [_gccdg ];_gccdg !=nil &&_gccdg !=_dedbbd &&!_gecfd {_gbbg :=_bbgb .TraceToDirectObject (_gccdg );if _ ,_bcgc :=_gbbg .(*_bbgb .PdfObjectNull );
!_bcgc &&_gbbg !=nil {_eccc ,_edcab ,_fbeag :=_bedee .buildOutlineTree (_gccdg ,&_fbgfc .PdfOutlineTreeNode ,nil ,_bdgeg );if _fbeag !=nil {_bb .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_fbeag );
}else {_fbgfc .First =_eccc ;_fbgfc .Last =_edcab ;};};};};return &_fbgfc .PdfOutlineTreeNode ,&_fbgfc .PdfOutlineTreeNode ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_fe :=NewPdfAction ();_ee :=&PdfActionGoToR {};_ee .PdfAction =_fe ;_fe .SetContext (_ee );return _ee ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;func (_edgg *LTV )buildCertChain (_eecf ,_fadab []*_fc .Certificate )([]*_fc .Certificate ,map[string ]*_fc .Certificate ,error ){_acbaf :=map[string ]*_fc .Certificate {};for _ ,_aagfb :=range _eecf {_acbaf [_aagfb .Subject .CommonName ]=_aagfb ;
};_bgacg :=_eecf ;for _ ,_ggegg :=range _fadab {_cebae :=_ggegg .Subject .CommonName ;if _ ,_fedc :=_acbaf [_cebae ];_fedc {continue ;};_acbaf [_cebae ]=_ggegg ;_bgacg =append (_bgacg ,_ggegg );};if len (_bgacg )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _ffgcgf error ;for _ecdcbg :=_bgacg [0];_ecdcbg !=nil &&!_edgg .CertClient .IsCA (_ecdcbg );{_gafgc ,_ccag :=_acbaf [_ecdcbg .Issuer .CommonName ];if !_ccag {if _gafgc ,_ffgcgf =_edgg .CertClient .GetIssuer (_ecdcbg );_ffgcgf !=nil {_bb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ffgcgf );
break ;};_acbaf [_ecdcbg .Issuer .CommonName ]=_gafgc ;_bgacg =append (_bgacg ,_gafgc );};_ecdcbg =_gafgc ;};return _bgacg ,_acbaf ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_ebbbe PdfModel ;_gdgafe _bbgb .PdfObject ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_afdec *PdfOutlineTreeNode )GetContext ()PdfModel {if _dfada ,_bacg :=_afdec ._efef .(*PdfOutline );_bacg {return _dfada ;};if _acace ,_cadfb :=_afdec ._efef .(*PdfOutlineItem );_cadfb {return _acace ;};_bb .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_bfaca *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_cefdb ,_ ,_ccbfg :=_bfaca .CharcodesToUnicodeWithStats (_bfaca .BytesToCharcodes (data ));_fffag :=_gcc .ExpandLigatures (_cefdb );return _fffag ,_gbg .RuneCountInString (_fffag ),_ccbfg ;
};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cbddc *PdfReader )PageFromIndirectObject (ind *_bbgb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cbddc .PageList )!=len (_cbddc ._gadg ){return nil ,0,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _abde ,_dcdc :=range _cbddc ._gadg {if _dcdc ==ind {return _cbddc .PageList [_abde ],_abde +1,nil ;};};return nil ,0,_fd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ceed *PdfField )GetContainingPdfObject ()_bbgb .PdfObject {return _ceed ._bgbc };func (_ecea *PdfReader )newPdfAnnotationPolygonFromDict (_fagf *_bbgb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_daff :=PdfAnnotationPolygon {};_abbd ,_cce :=_ecea .newPdfAnnotationMarkupFromDict (_fagf );
if _cce !=nil {return nil ,_cce ;};_daff .PdfAnnotationMarkup =_abbd ;_daff .Vertices =_fagf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_daff .LE =_fagf .Get ("\u004c\u0045");_daff .BS =_fagf .Get ("\u0042\u0053");_daff .IC =_fagf .Get ("\u0049\u0043");
_daff .BE =_fagf .Get ("\u0042\u0045");_daff .IT =_fagf .Get ("\u0049\u0054");_daff .Measure =_fagf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_daff ,nil ;};

// SetReason sets the `Reason` field of the signature.
func (_gddbeg *PdfSignature )SetReason (reason string ){_gddbeg .Reason =_bbgb .MakeString (reason )};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_efcd pdfFont };func (_gcafg *PdfAppender )replaceObject (_bacdf ,_cccf _bbgb .PdfObject ){switch _adbc :=_bacdf .(type ){case *_bbgb .PdfIndirectObject :_gcafg ._gcbf [_cccf ]=_adbc .ObjectNumber ;case *_bbgb .PdfObjectStream :_gcafg ._gcbf [_cccf ]=_adbc .ObjectNumber ;
};};

// Initialize initializes the PdfSignature.
func (_gebce *PdfSignature )Initialize ()error {if _gebce .Handler ==nil {return _fd .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gebce .Handler .InitSignature (_gebce );};

// Encoder returns the font's text encoder.
func (_bfbae pdfCIDFontType0 )Encoder ()_gcc .TextEncoder {return _bfbae ._abbda };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gadga ,_gggeg :=_aa .ParsePdfTime (dateStr );if _gggeg !=nil {return PdfDate {},_gggeg ;};return NewPdfDateFromTime (_gadga );};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_aebgbf *PdfReader )CheckAccessRights (password []byte )(bool ,_fa .Permissions ,error ){return _aebgbf ._abceg .CheckAccessRights (password );};

// Encrypt encrypts the output file with a specified user/owner password.
func (_fdae *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_affeb :=RC4_128bit ;if options !=nil {_affeb =options .Algorithm ;};_ebgfg :=_fa .PermOwner ;if options !=nil {_ebgfg =options .Permissions ;};var _acgb _ef .Filter ;
switch _affeb {case RC4_128bit :_acgb =_ef .NewFilterV2 (16);case AES_128bit :_acgb =_ef .NewFilterAESV2 ();case AES_256bit :_acgb =_ef .NewFilterAESV3 ();default:return _d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_cgacb ,_bcbc ,_afdeg :=_bbgb .PdfCryptNewEncrypt (_acgb ,userPass ,ownerPass ,_ebgfg );if _afdeg !=nil {return _afdeg ;};_fdae ._agdbe =_cgacb ;if _bcbc .Major !=0{_fdae .SetVersion (_bcbc .Major ,_bcbc .Minor );};_fdae ._agecd =_bcbc .Encrypt ;_fdae ._eddgd ,_fdae ._cebgb =_bcbc .ID0 ,_bcbc .ID1 ;
_gecea :=_bbgb .MakeIndirectObject (_bcbc .Encrypt );_fdae ._bebbea =_gecea ;_fdae .addObject (_gecea );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdff *PdfActionNamed )ToPdfObject ()_bbgb .PdfObject {_cdff .PdfAction .ToPdfObject ();_ea :=_cdff ._dce ;_cae :=_ea .PdfObject .(*_bbgb .PdfObjectDictionary );_cae .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeNamed )));_cae .SetIfNotNil ("\u004e",_cdff .N );
return _ea ;};

// ToPdfObject implements interface PdfModel.
func (_fgdc *PdfAnnotationInk )ToPdfObject ()_bbgb .PdfObject {_fgdc .PdfAnnotation .ToPdfObject ();_cgdg :=_fgdc ._bce ;_abgd :=_cgdg .PdfObject .(*_bbgb .PdfObjectDictionary );_fgdc .PdfAnnotationMarkup .appendToPdfDictionary (_abgd );_abgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0049\u006e\u006b"));
_abgd .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fgdc .InkList );_abgd .SetIfNotNil ("\u0042\u0053",_fgdc .BS );return _cgdg ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_cefa *PdfFieldButton )SetType (btype ButtonType ){_baadc :=uint32 (0);if _cefa .Ff !=nil {_baadc =uint32 (*_cefa .Ff );};switch btype {case ButtonTypePush :_baadc |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_baadc |=FieldFlagRadio .Mask ();
};_cefa .Ff =_bbgb .MakeInteger (int64 (_baadc ));};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_dgcb *PdfReader )newPdfActionHideFromDict (_efc *_bbgb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_efc .Get ("\u0054"),H :_efc .Get ("\u0048")},nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _bf .ReadSeeker )(*PdfReader ,error ){const _bebcd ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _bebbd (rs ,&ReaderOpts {},false ,_bebcd );};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bage *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddfgd ,_fecgc :=color .(*PdfColorCalGray );if !_fecgc {_bb .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ddfgd .Val ();X :=_bage .WhitePoint [0]*_ec .Pow (ANorm ,_bage .Gamma );Y :=_bage .WhitePoint [1]*_ec .Pow (ANorm ,_bage .Gamma );
Z :=_bage .WhitePoint [2]*_ec .Pow (ANorm ,_bage .Gamma );_gfab :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dbf :=-0.969256*X +1.875992*Y +0.041556*Z ;_bcfd :=0.055648*X +-0.204043*Y +1.057311*Z ;_gfab =_ec .Min (_ec .Max (_gfab ,0),1.0);_dbf =_ec .Min (_ec .Max (_dbf ,0),1.0);
_bcfd =_ec .Min (_ec .Max (_bcfd ,0),1.0);return NewPdfColorDeviceRGB (_gfab ,_dbf ,_bcfd ),nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_affc *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_eacc :=NewPdfOutlineItem ();_eacc .Title =_bbgb .MakeEncodedString (_affc .Title ,true );_eacc .Dest =_affc .Dest .ToPdfObject ();var _cbcbb []*PdfOutlineItem ;var _fbba int64 ;var _dedbbc *PdfOutlineItem ;
for _ ,_aebcg :=range _affc .Entries {_baccea ,_gagda :=_aebcg .ToPdfOutlineItem ();_baccea .Parent =&_eacc .PdfOutlineTreeNode ;if _dedbbc !=nil {_dedbbc .Next =&_baccea .PdfOutlineTreeNode ;_baccea .Prev =&_dedbbc .PdfOutlineTreeNode ;};_cbcbb =append (_cbcbb ,_baccea );
_fbba +=_gagda ;_dedbbc =_baccea ;};_gbed :=len (_cbcbb );_fbba +=int64 (_gbed );if _gbed > 0{_eacc .First =&_cbcbb [0].PdfOutlineTreeNode ;_eacc .Last =&_cbcbb [_gbed -1].PdfOutlineTreeNode ;_eacc .Count =&_fbba ;};return _eacc ,_fbba ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adbcb pdfCIDFontType0 )GetRuneMetrics (r rune )(_add .CharMetrics ,bool ){return _add .CharMetrics {Wx :_adbcb ._ccbee },true ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_ageeb *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaga ,_fgbad :=_bbgb .GetNumbersAsFloat (objects );
if _fgbad !=nil {return nil ,_fgbad ;};return _ageeb .ColorFromFloats (_aaga );};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bbgb .PdfObjectArray )(*PdfRectangle ,error ){_bbgba :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _badbd error ;_bbgba .Llx ,_badbd =_bbgb .GetNumberAsFloat (arr .Get (0));if _badbd !=nil {return nil ,_badbd ;};_bbgba .Lly ,_badbd =_bbgb .GetNumberAsFloat (arr .Get (1));if _badbd !=nil {return nil ,_badbd ;};_bbgba .Urx ,_badbd =_bbgb .GetNumberAsFloat (arr .Get (2));
if _badbd !=nil {return nil ,_badbd ;};_bbgba .Ury ,_badbd =_bbgb .GetNumberAsFloat (arr .Get (3));if _badbd !=nil {return nil ,_badbd ;};return &_bbgba ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_bgffa *PdfSignature )SetLocation (location string ){_bgffa .Location =_bbgb .MakeString (location );};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gdb :=NewPdfAction ();_bgf :=&PdfActionImportData {};_bgf .PdfAction =_gdb ;_gdb .SetContext (_bgf );return _bgf ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_abfc *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject implements interface PdfModel.
func (_gfb *PdfAnnotationPopup )ToPdfObject ()_bbgb .PdfObject {_gfb .PdfAnnotation .ToPdfObject ();_cadbba :=_gfb ._bce ;_ffee :=_cadbba .PdfObject .(*_bbgb .PdfObjectDictionary );_ffee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0050\u006f\u0070u\u0070"));
_ffee .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfb .Parent );_ffee .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gfb .Open );return _cadbba ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_befgb *CompliancePdfReader )error ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_gdbe *PdfFieldButton )IsRadio ()bool {return _gdbe .GetType ()==ButtonTypeRadio };

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gca *PdfAction )GetContext ()PdfModel {if _gca ==nil {return nil ;};return _gca ._agb ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bbaae :=PdfWriter {};_bbaae ._bfded =map[_bbgb .PdfObject ]struct{}{};_bbaae ._cagcad =[]_bbgb .PdfObject {};_bbaae ._cabbb =map[_bbgb .PdfObject ][]*_bbgb .PdfObjectDictionary {};_bbaae ._eebd =map[_bbgb .PdfObject ]struct{}{};
_bbaae ._faabe .Major =1;_bbaae ._faabe .Minor =3;_fcfge :=_bbgb .MakeDict ();_ebcfcg :=[]struct{_egbgf _bbgb .PdfObjectName ;_cgbde string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_aeafc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cadfaf ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_gadag ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_faaeb ()},{"\u0054\u0069\u0074l\u0065",_bddgb ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_egada ()}};
for _ ,_ccecg :=range _ebcfcg {if _ccecg ._cgbde !=""{_fcfge .Set (_ccecg ._egbgf ,_bbgb .MakeString (_ccecg ._cgbde ));};};if _deefb :=_bffed ();!_deefb .IsZero (){if _cafcac ,_daeae :=NewPdfDateFromTime (_deefb );_daeae ==nil {_fcfge .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cafcac .ToPdfObject ());
};};if _gacdf :=_aagd ();!_gacdf .IsZero (){if _fcbad ,_gdeg :=NewPdfDateFromTime (_gacdf );_gdeg ==nil {_fcfge .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fcbad .ToPdfObject ());};};_fdege :=_bbgb .PdfIndirectObject {};_fdege .PdfObject =_fcfge ;_bbaae ._bgfbb =&_fdege ;
_bbaae .addObject (&_fdege );_cfcgb :=_bbgb .PdfIndirectObject {};_dcfgb :=_bbgb .MakeDict ();_dcfgb .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_cfcgb .PdfObject =_dcfgb ;_bbaae ._dgbad =&_cfcgb ;_bbaae .addObject (_bbaae ._dgbad );
_efebb ,_bcaf :=_beec ("\u0077");if _bcaf !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bcaf );};_bbaae ._bfbbea =_efebb ;_bdgdf :=_bbgb .PdfIndirectObject {};_beega :=_bbgb .MakeDict ();_beega .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0050\u0061\u0067e\u0073"));
_acgd :=_bbgb .PdfObjectArray {};_beega .Set ("\u004b\u0069\u0064\u0073",&_acgd );_beega .Set ("\u0043\u006f\u0075n\u0074",_bbgb .MakeInteger (0));_bdgdf .PdfObject =_beega ;_bbaae ._deabc =&_bdgdf ;_bbaae ._edaad =map[_bbgb .PdfObject ]struct{}{};_bbaae .addObject (_bbaae ._deabc );
_dcfgb .Set ("\u0050\u0061\u0067e\u0073",&_bdgdf );_bbaae ._dfcbd =_dcfgb ;_bb .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_cfcgb );return _bbaae ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bbgb .PdfObjectStream ;Data []byte ;_edca *_bbgb .PdfIndirectObject ;_fafe *_bbgb .PdfObjectStream ;};func _ebccb (_cgcg *_bbgb .PdfObjectDictionary ,_eagb *fontCommon ,_bcdef _gcc .TextEncoder )(*pdfFontSimple ,error ){_cbefb :=_efafd (_eagb );
_cbefb ._geff =_bcdef ;if _bcdef ==nil {_aadb :=_cgcg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aadb ==nil {_aadb =_bbgb .MakeInteger (0);};_cbefb .FirstChar =_aadb ;_dcbd ,_dgcc :=_bbgb .GetIntVal (_aadb );if !_dgcc {_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aadb );
return nil ,_bbgb .ErrTypeError ;};_cddaa :=_gcc .CharCode (_dcbd );_aadb =_cgcg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aadb ==nil {_aadb =_bbgb .MakeInteger (255);};_cbefb .LastChar =_aadb ;_dcbd ,_dgcc =_bbgb .GetIntVal (_aadb );
if !_dgcc {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aadb );return nil ,_bbgb .ErrTypeError ;
};_gcbgg :=_gcc .CharCode (_dcbd );_cbefb ._ceec =make (map[_gcc .CharCode ]float64 );_aadb =_cgcg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aadb !=nil {_cbefb .Widths =_aadb ;_aaad ,_egcb :=_bbgb .GetArray (_aadb );if !_egcb {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aadb );
return nil ,_bbgb .ErrTypeError ;};_fade ,_bcac :=_aaad .ToFloat64Array ();if _bcac !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bcac ;};if len (_fade )!=int (_gcbgg -_cddaa +1){_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gcbgg -_cddaa +1,len (_fade ));
return nil ,_bbgb .ErrRangeError ;};for _ffaedg ,_fdabb :=range _fade {_cbefb ._ceec [_cddaa +_gcc .CharCode (_ffaedg )]=_fdabb ;};};};_cbefb .Encoding =_bbgb .TraceToDirectObject (_cgcg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cbefb ,nil ;
};

// StdFontName represents name of a standard font.
type StdFontName =_add .StdFontName ;

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ggb :=NewPdfAnnotation ();_fec :=&PdfAnnotationCircle {};_fec .PdfAnnotation =_ggb ;_fec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggb .SetContext (_fec );return _fec ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_bggde *PdfReader )GetTrailer ()(*_bbgb .PdfObjectDictionary ,error ){_adge :=_bggde ._abceg .GetTrailer ();if _adge ==nil {return nil ,_fd .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _adge ,nil ;
};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bffc _bf .ReadSeeker ;_agbc *_bbgb .PdfParser ;_cgeda *PdfReader ;Reader *PdfReader ;_fegcd []*PdfPage ;_eeec *PdfAcroForm ;_gdg *DSS ;_bee _bbgb .XrefTable ;_bdbd int64 ;_fac int ;_dadf []_bbgb .PdfObject ;_ddfg map[_bbgb .PdfObject ]struct{};
_gcbf map[_bbgb .PdfObject ]int64 ;_ecaea map[_bbgb .PdfObject ]struct{};_ebbb map[_bbgb .PdfObject ]struct{};_eddc int64 ;_dbgb bool ;_febg string ;_daeb *EncryptOptions ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cbcgd *PdfFont )SubsetRegistered ()error {switch _ggfg :=_cbcgd ._efcd .(type ){case *pdfFontType0 :_dcae :=_ggfg .subsetRegistered ();if _dcae !=nil {_bb .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dcae );
return _dcae ;};if _ggfg ._agac !=nil {if _ggfg ._bdfgf !=nil {_ggfg ._bdfgf .ToPdfObject ();};_ggfg .ToPdfObject ();};default:_bb .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_ggfg );
};return nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_aeadb *PdfTilingPattern )SetContentStream (content []byte ,encoder _bbgb .StreamEncoder )error {_fdfff ,_fgbg :=_aeadb ._gdgafe .(*_bbgb .PdfObjectStream );if !_fgbg {_bb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aeadb ._gdgafe );
return _bbgb .ErrTypeError ;};if encoder ==nil {encoder =_bbgb .NewRawEncoder ();};_acaed :=_fdfff .PdfObjectDictionary ;_eagfb :=encoder .MakeStreamDict ();_acaed .Merge (_eagfb );_ggdbb ,_gabde :=encoder .EncodeBytes (content );if _gabde !=nil {return _gabde ;
};_acaed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_ggdbb ))));_fdfff .Stream =_ggdbb ;return nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_afef *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_abdc :=pageNum -1;var _abfd *PdfPage ;for _ggef ,_fcdc :=range _afef ._fegcd {if _ggef ==_abdc {_abfd =_fcdc ;};};if _abfd ==nil {return _d .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _abfd ._efbe !=nil &&_abfd ._efbe .GetParser ()==_afef ._cgeda ._abceg {_abfd =_abfd .Duplicate ();_afef ._fegcd [_abdc ]=_abfd ;};page =page .Duplicate ();_gefedg (page );_ecgdg :=_edbc (_abfd );_feee :=_edbc (page );_fffa :=make (map[_bbgb .PdfObjectName ]_bbgb .PdfObjectName );
for _edf :=range _feee {if _ ,_gadc :=_ecgdg [_edf ];_gadc {for _faf :=1;true ;_faf ++{_fgaa :=_bbgb .PdfObjectName (string (_edf )+_c .Itoa (_faf ));if _ ,_fbc :=_ecgdg [_fgaa ];!_fbc {_fffa [_edf ]=_fgaa ;break ;};};};};_edag ,_dffdb :=page .GetContentStreams ();
if _dffdb !=nil {return _dffdb ;};_bffad ,_dffdb :=_abfd .GetContentStreams ();if _dffdb !=nil {return _dffdb ;};for _gcdc ,_dgb :=range _edag {for _cdgf ,_babc :=range _fffa {_dgb =_df .Replace (_dgb ,"\u002f"+string (_cdgf ),"\u002f"+string (_babc ),-1);
};_edag [_gcdc ]=_dgb ;};_bffad =append (_bffad ,_edag ...);if _feef :=_abfd .SetContentStreams (_bffad ,_bbgb .NewFlateEncoder ());_feef !=nil {return _feef ;};_abfd ._bccg =append (_abfd ._bccg ,page ._bccg ...);if _abfd .Resources ==nil {_abfd .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_abfd .Resources .Font =_afef .mergeResources (_abfd .Resources .Font ,page .Resources .Font ,_fffa );_abfd .Resources .XObject =_afef .mergeResources (_abfd .Resources .XObject ,page .Resources .XObject ,_fffa );_abfd .Resources .Properties =_afef .mergeResources (_abfd .Resources .Properties ,page .Resources .Properties ,_fffa );
if _abfd .Resources .ProcSet ==nil {_abfd .Resources .ProcSet =page .Resources .ProcSet ;};_abfd .Resources .Shading =_afef .mergeResources (_abfd .Resources .Shading ,page .Resources .Shading ,_fffa );_abfd .Resources .ExtGState =_afef .mergeResources (_abfd .Resources .ExtGState ,page .Resources .ExtGState ,_fffa );
};_bbed ,_dffdb :=_abfd .GetMediaBox ();if _dffdb !=nil {return _dffdb ;};_bba ,_dffdb :=page .GetMediaBox ();if _dffdb !=nil {return _dffdb ;};var _gbf bool ;if _bbed .Llx > _bba .Llx {_bbed .Llx =_bba .Llx ;_gbf =true ;};if _bbed .Lly > _bba .Lly {_bbed .Lly =_bba .Lly ;
_gbf =true ;};if _bbed .Urx < _bba .Urx {_bbed .Urx =_bba .Urx ;_gbf =true ;};if _bbed .Ury < _bba .Ury {_bbed .Ury =_bba .Ury ;_gbf =true ;};if _gbf {_abfd .MediaBox =_bbed ;};return nil ;};func (_cec *PdfReader )newPdfAnnotationCaretFromDict (_ccge *_bbgb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dbcad :=PdfAnnotationCaret {};
_eef ,_eggf :=_cec .newPdfAnnotationMarkupFromDict (_ccge );if _eggf !=nil {return nil ,_eggf ;};_dbcad .PdfAnnotationMarkup =_eef ;_dbcad .RD =_ccge .Get ("\u0052\u0044");_dbcad .Sy =_ccge .Get ("\u0053\u0079");return &_dbcad ,nil ;};func _ebfg (_ddbb _add .StdFont )pdfFontSimple {_aadbb :=_ddbb .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_fagd :"\u0054\u0079\u0070e\u0031",_debfe :_ddbb .Name ()},_eeff :_ddbb .GetMetricsTable (),_eagg :&PdfFontDescriptor {FontName :_bbgb .MakeName (string (_aadbb .Name )),FontFamily :_bbgb .MakeName (_aadbb .Family ),FontWeight :_bbgb .MakeFloat (float64 (_aadbb .Weight )),Flags :_bbgb .MakeInteger (int64 (_aadbb .Flags )),FontBBox :_bbgb .MakeArrayFromFloats (_aadbb .BBox [:]),ItalicAngle :_bbgb .MakeFloat (_aadbb .ItalicAngle ),Ascent :_bbgb .MakeFloat (_aadbb .Ascent ),Descent :_bbgb .MakeFloat (_aadbb .Descent ),CapHeight :_bbgb .MakeFloat (_aadbb .CapHeight ),XHeight :_bbgb .MakeFloat (_aadbb .XHeight ),StemV :_bbgb .MakeFloat (_aadbb .StemV ),StemH :_bbgb .MakeFloat (_aadbb .StemH )},_geff :_ddbb .Encoder ()};
};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_fbde *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetDate sets the `M` field of the signature.
func (_gbgdg *PdfSignature )SetDate (date _a .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gbgdg .M =_bbgb .MakeString (date .Format (format ));
};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gfdeb *PdfOutlineTreeNode )ToPdfObject ()_bbgb .PdfObject {return _gfdeb .GetContext ().ToPdfObject ();};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bbgb .PdfObjectArray ;Matrix *_bbgb .PdfObjectArray ;Function []PdfFunction ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bbgb .PdfObject ;H _bbgb .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ggbaf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ggbaf .NumInputs {_bb .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ggbaf ._bdca ==nil {_gebbe :=_ggbaf .processSamples ();if _gebbe !=nil {return nil ,_gebbe ;};};_feeefa :=_ggbaf .Encode ;if _feeefa ==nil {_feeefa =[]float64 {};
for _bgfa :=0;_bgfa < len (_ggbaf .Size );_bgfa ++{_feeefa =append (_feeefa ,0);_feeefa =append (_feeefa ,float64 (_ggbaf .Size [_bgfa ]-1));};};_gdab :=_ggbaf .Decode ;if _gdab ==nil {_gdab =_ggbaf .Range ;};_befae :=make ([]int ,len (x ));for _dbefe :=0;
_dbefe < len (x );_dbefe ++{_bbcc :=x [_dbefe ];_daec :=_ec .Min (_ec .Max (_bbcc ,_ggbaf .Domain [2*_dbefe ]),_ggbaf .Domain [2*_dbefe +1]);_bbbcd :=_ae .LinearInterpolate (_daec ,_ggbaf .Domain [2*_dbefe ],_ggbaf .Domain [2*_dbefe +1],_feeefa [2*_dbefe ],_feeefa [2*_dbefe +1]);
_fbgdg :=_ec .Min (_ec .Max (_bbbcd ,0),float64 (_ggbaf .Size [_dbefe ]-1));_cbdeb :=int (_ec .Floor (_fbgdg +0.5));if _cbdeb < 0{_cbdeb =0;}else if _cbdeb > _ggbaf .Size [_dbefe ]{_cbdeb =_ggbaf .Size [_dbefe ]-1;};_befae [_dbefe ]=_cbdeb ;};_ccfe :=_befae [0];
for _ebadf :=1;_ebadf < _ggbaf .NumInputs ;_ebadf ++{_cdbd :=_befae [_ebadf ];for _ceggd :=0;_ceggd < _ebadf ;_ceggd ++{_cdbd *=_ggbaf .Size [_ceggd ];};_ccfe +=_cdbd ;};_ccfe *=_ggbaf .NumOutputs ;var _ceca []float64 ;for _cdggd :=0;_cdggd < _ggbaf .NumOutputs ;
_cdggd ++{_gcef :=_ccfe +_cdggd ;if _gcef >=len (_ggbaf ._bdca ){_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_eagf :=_ggbaf ._bdca [_gcef ];_cbgg :=_ae .LinearInterpolate (float64 (_eagf ),0,_ec .Pow (2,float64 (_ggbaf .BitsPerSample )),_gdab [2*_cdggd ],_gdab [2*_cdggd +1]);_efddba :=_ec .Min (_ec .Max (_cbgg ,_ggbaf .Range [2*_cdggd ]),_ggbaf .Range [2*_cdggd +1]);
_ceca =append (_ceca ,_efddba );};return _ceca ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fbbb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fbbb .UnderlyingCS ==nil {return nil ,_fd .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fbbb .UnderlyingCS .ColorFromFloats (vals );};

// Encoder returns the font's text encoder.
func (_deee pdfFontType0 )Encoder ()_gcc .TextEncoder {return _deee ._bdfgf };func _ggagd (_agfge []*_bbgb .PdfObjectStream )*_bbgb .PdfObjectArray {if len (_agfge )==0{return nil ;};_ggbcgf :=make ([]_bbgb .PdfObject ,0,len (_agfge ));for _ ,_afae :=range _agfge {_ggbcgf =append (_ggbcgf ,_afae );
};return _bbgb .MakeArray (_ggbcgf ...);};

// ToPdfObject returns a stream object.
func (_dcdbg *XObjectForm )ToPdfObject ()_bbgb .PdfObject {_cgeca :=_dcdbg ._ddad ;_fecb :=_cgeca .PdfObjectDictionary ;if _dcdbg .Filter !=nil {_fecb =_dcdbg .Filter .MakeStreamDict ();_cgeca .PdfObjectDictionary =_fecb ;};_fecb .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_fecb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0046\u006f\u0072\u006d"));_fecb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dcdbg .FormType );_fecb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dcdbg .BBox );_fecb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dcdbg .Matrix );
if _dcdbg .Resources !=nil {_fecb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dcdbg .Resources .ToPdfObject ());};_fecb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dcdbg .Group );_fecb .SetIfNotNil ("\u0052\u0065\u0066",_dcdbg .Ref );_fecb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dcdbg .MetaData );
_fecb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dcdbg .PieceInfo );_fecb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dcdbg .LastModified );_fecb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dcdbg .StructParent );
_fecb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dcdbg .StructParents );_fecb .SetIfNotNil ("\u004f\u0050\u0049",_dcdbg .OPI );_fecb .SetIfNotNil ("\u004f\u0043",_dcdbg .OC );_fecb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dcdbg .Name );
_fecb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_dcdbg .Stream ))));_cgeca .Stream =_dcdbg .Stream ;return _cgeca ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_eddec *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aece ,_becb :=_bbgb .GetNumbersAsFloat (objects );
if _becb !=nil {return nil ,_becb ;};return _eddec .ColorFromFloats (_aece );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_eccg *PdfFieldChoice )ToPdfObject ()_bbgb .PdfObject {_eccg .PdfField .ToPdfObject ();_ccda :=_eccg ._bgbc ;_faee :=_ccda .PdfObject .(*_bbgb .PdfObjectDictionary );_faee .Set ("\u0046\u0054",_bbgb .MakeName ("\u0043\u0068"));if _eccg .Opt !=nil {_faee .Set ("\u004f\u0070\u0074",_eccg .Opt );
};if _eccg .TI !=nil {_faee .Set ("\u0054\u0049",_eccg .TI );};if _eccg .I !=nil {_faee .Set ("\u0049",_eccg .I );};return _ccda ;};func _bcaae (_fgffe []byte )bool {if len (_fgffe )< 4{return true ;};for _ffga :=range _fgffe [:4]{_dgabdc :=rune (_ffga );
if !_af .Is (_af .ASCII_Hex_Digit ,_dgabdc )&&!_af .IsSpace (_dgabdc ){return true ;};};return false ;};

// ToPdfObject implements interface PdfModel.
func (_fgg *PdfActionThread )ToPdfObject ()_bbgb .PdfObject {_fgg .PdfAction .ToPdfObject ();_ca :=_fgg ._dce ;_cfe :=_ca .PdfObject .(*_bbgb .PdfObjectDictionary );_cfe .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeThread )));if _fgg .F !=nil {_cfe .Set ("\u0046",_fgg .F .ToPdfObject ());
};_cfe .SetIfNotNil ("\u0044",_fgg .D );_cfe .SetIfNotNil ("\u0042",_fgg .B );return _ca ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fa .Permissions ;Algorithm EncryptionAlgorithm ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_faebc *Image )ConvertToBinary ()error {if _faebc .ColorComponents ==1&&_faebc .BitsPerComponent ==1{return nil ;};_cbbcg ,_gafed :=_faebc .ToGoImage ();if _gafed !=nil {return _gafed ;};_eaec ,_gafed :=_ae .MonochromeConverter .Convert (_cbbcg );
if _gafed !=nil {return _gafed ;};_faebc .Data =_eaec .Base ().Data ;_faebc ._bcbg ,_gafed =_ae .ScaleAlphaToMonochrome (_faebc ._bcbg ,int (_faebc .Width ),int (_faebc .Height ));if _gafed !=nil {return _gafed ;};_faebc .BitsPerComponent =1;_faebc .ColorComponents =1;
_faebc ._baegcb =nil ;return nil ;};func (_gega fontCommon )coreString ()string {_ccdcb :="";if _gega ._eaega !=nil {_ccdcb =_gega ._eaega .String ();};return _d .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gega ._fagd ,_gega ._debfe ,_gega ._beedc ,_gega ._dfacd ,_gega ._ddbff !=nil ,_gega .fontFlags (),_ccdcb );
};

// ToPdfObject implements interface PdfModel.
func (_agc *PdfAnnotationTrapNet )ToPdfObject ()_bbgb .PdfObject {_agc .PdfAnnotation .ToPdfObject ();_gabe :=_agc ._bce ;_abf :=_gabe .PdfObject .(*_bbgb .PdfObjectDictionary );_abf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _gabe ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gabf FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gabf .Mask ()&^fl .Mask ())};func (_afgf *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bfce int ,_fceee *PdfPage );func (_ffcb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _ffcb ._eaega ==nil &&_ffcb .DescendantFont !=nil {return _ffcb .DescendantFont .FontDescriptor ();};return _ffcb ._eaega ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dffg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbfc ,_ageg :=_bbgb .GetNumbersAsFloat (objects );
if _ageg !=nil {return nil ,_ageg ;};return _dffg .ColorFromFloats (_cbfc );};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_edaga *PdfFont )BytesToCharcodes (data []byte )[]_gcc .CharCode {_bb .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dddc ,_dfdac :=_edaga ._efcd .(*pdfFontType0 );_dfdac &&_dddc ._bcdc !=nil {if _cdacf ,_dcacd :=_dddc .bytesToCharcodes (data );_dcacd {return _cdacf ;};};_ccgga :=make ([]_gcc .CharCode ,0,len (data )+len (data )%2);if _edaga .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _ddgadd :=0;_ddgadd < len (data );_ddgadd +=2{_gfccd :=uint16 (data [_ddgadd ])<<8|uint16 (data [_ddgadd +1]);_ccgga =append (_ccgga ,_gcc .CharCode (_gfccd ));};}else {for _ ,_bbdf :=range data {_ccgga =append (_ccgga ,_gcc .CharCode (_bbdf ));
};};return _ccgga ;};

// String returns a string describing the font descriptor.
func (_ageefd *PdfFontDescriptor )String ()string {var _deeg []string ;if _ageefd .FontName !=nil {_deeg =append (_deeg ,_ageefd .FontName .String ());};if _ageefd .FontFamily !=nil {_deeg =append (_deeg ,_ageefd .FontFamily .String ());};if _ageefd .fontFile !=nil {_deeg =append (_deeg ,_ageefd .fontFile .String ());
};if _ageefd ._gbaac !=nil {_deeg =append (_deeg ,_ageefd ._gbaac .String ());};_deeg =append (_deeg ,_d .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ageefd .FontFile3 !=nil ));return _d .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_df .Join (_deeg ,"\u002c\u0020"));
};func _eeda (_cddac *PdfField ,_cbffgd _bbgb .PdfObject ){for _ ,_bfgb :=range _cddac .Annotations {_bfgb .AS =_cbffgd ;_bfgb .ToPdfObject ();};};func (_bdefd *PdfWriter )setCatalogVersion (){_bdefd ._dfcbd .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bbgb .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_bdefd ._faabe .Major ,_bdefd ._faabe .Minor )));
};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bbgb .PdfObject ;};

// AddWatermarkImage adds a watermark to the page.
func (_bebbf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_abaed ,_bdcgc :=_bebbf .GetMediaBox ();if _bdcgc !=nil {return _bdcgc ;};_ggdbe :=_abaed .Urx -_abaed .Llx ;_ebabe :=_abaed .Ury -_abaed .Lly ;_aabe :=float64 (*ximg .Width );
_cfgdf :=(_ggdbe -_aabe )/2;if opt .FitToWidth {_aabe =_ggdbe ;_cfgdf =0;};_bddgf :=_ebabe ;_gdcdb :=float64 (0);if opt .PreserveAspectRatio {_bddgf =_aabe *float64 (*ximg .Height )/float64 (*ximg .Width );_gdcdb =(_ebabe -_bddgf )/2;};if _bebbf .Resources ==nil {_bebbf .Resources =NewPdfPageResources ();
};_abaa :=0;_ccdfd :=_bbgb .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_abaa ));for _bebbf .Resources .HasXObjectByName (_ccdfd ){_abaa ++;_ccdfd =_bbgb .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_abaa ));};_bdcgc =_bebbf .AddImageResource (_ccdfd ,ximg );
if _bdcgc !=nil {return _bdcgc ;};_abaa =0;_dccce :=_bbgb .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_abaa ));for _bebbf .HasExtGState (_dccce ){_abaa ++;_dccce =_bbgb .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_abaa ));};_gcacee :=_bbgb .MakeDict ();
_gcacee .Set ("\u0042\u004d",_bbgb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gcacee .Set ("\u0043\u0041",_bbgb .MakeFloat (opt .Alpha ));_gcacee .Set ("\u0063\u0061",_bbgb .MakeFloat (opt .Alpha ));_bdcgc =_bebbf .AddExtGState (_dccce ,_gcacee );
if _bdcgc !=nil {return _bdcgc ;};_bgbcf :=_d .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dccce ,_aabe ,_bddgf ,_cfgdf ,_gdcdb ,_ccdfd );
_bebbf .AddContentStreamByString (_bgbcf );return nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_gfbc *PdfPageResources )ToPdfObject ()_bbgb .PdfObject {_bdeba :=_gfbc ._acgfg ;_bdeba .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gfbc .ExtGState );if _gfbc ._fagce !=nil {_gfbc .ColorSpace =_gfbc ._fagce .ToPdfObject ();};_bdeba .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gfbc .ColorSpace );
_bdeba .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_gfbc .Pattern );_bdeba .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gfbc .Shading );_bdeba .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_gfbc .XObject );_bdeba .SetIfNotNil ("\u0046\u006f\u006e\u0074",_gfbc .Font );
_bdeba .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_gfbc .ProcSet );_bdeba .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_gfbc .Properties );return _bdeba ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gebad *Image )GetSamples ()[]uint32 {_bcga :=_bbg .ResampleBytes (_gebad .Data ,int (_gebad .BitsPerComponent ));if _gebad .BitsPerComponent < 8{_bcga =_gebad .samplesTrimPadding (_bcga );};_gebaf :=int (_gebad .Width )*int (_gebad .Height )*_gebad .ColorComponents ;
if len (_bcga )< _gebaf {_bb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_bcga ),_gebaf );
return _bcga ;}else if len (_bcga )> _gebaf {_bb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_bcga ),_gebaf );
_bcga =_bcga [:_gebaf ];};return _bcga ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_defa ,_gdebf :=_gaa .Open (filePath );if _gdebf !=nil {_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gdebf );
return nil ,_gdebf ;};defer _defa .Close ();return NewCompositePdfFontFromTTF (_defa );};func (_cddd *PdfReader )newPdfAnnotationSquigglyFromDict (_afee *_bbgb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gbca :=PdfAnnotationSquiggly {};_gcbe ,_ffgb :=_cddd .newPdfAnnotationMarkupFromDict (_afee );
if _ffgb !=nil {return nil ,_ffgb ;};_gbca .PdfAnnotationMarkup =_gcbe ;_gbca .QuadPoints =_afee .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gbca ,nil ;};

// Width returns the width of `rect`.
func (_eaaca *PdfRectangle )Width ()float64 {return _ec .Abs (_eaaca .Urx -_eaaca .Llx )};func (_gdcga *PdfWriter )updateObjectNumbers (){_eebab :=_gdcga .ObjNumOffset ;_dcagc :=0;for _ ,_dfbac :=range _gdcga ._cagcad {_abgae :=int64 (_dcagc +1+_eebab );
_cdaef :=true ;if _gdcga ._aadfb {if _bbgbb ,_cdfead :=_gdcga ._aeeec [_dfbac ];_cdfead {_abgae =_bbgbb ;_cdaef =false ;};};switch _cdbdf :=_dfbac .(type ){case *_bbgb .PdfIndirectObject :_cdbdf .ObjectNumber =_abgae ;_cdbdf .GenerationNumber =0;case *_bbgb .PdfObjectStream :_cdbdf .ObjectNumber =_abgae ;
_cdbdf .GenerationNumber =0;case *_bbgb .PdfObjectStreams :_cdbdf .ObjectNumber =_abgae ;_cdbdf .GenerationNumber =0;default:_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cdbdf );
continue ;};if _cdaef {_dcagc ++;};};_gbdcb :=func (_bagge _bbgb .PdfObject )int64 {switch _acbcee :=_bagge .(type ){case *_bbgb .PdfIndirectObject :return _acbcee .ObjectNumber ;case *_bbgb .PdfObjectStream :return _acbcee .ObjectNumber ;case *_bbgb .PdfObjectStreams :return _acbcee .ObjectNumber ;
};return 0;};_egc .SliceStable (_gdcga ._cagcad ,func (_fcdd ,_afebdf int )bool {return _gbdcb (_gdcga ._cagcad [_fcdd ])< _gbdcb (_gdcga ._cagcad [_afebdf ])});};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bbgb .PdfObject ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _bgbca (_degc ,_aggee string )string {if _df .Contains (_degc ,"\u002b"){_cabgb :=_df .Split (_degc ,"\u002b");if len (_cabgb )==2{_degc =_cabgb [1];};};return _aggee +"\u002b"+_degc ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bbgb .PdfObject ;FontFamily _bbgb .PdfObject ;FontStretch _bbgb .PdfObject ;FontWeight _bbgb .PdfObject ;Flags _bbgb .PdfObject ;FontBBox _bbgb .PdfObject ;ItalicAngle _bbgb .PdfObject ;Ascent _bbgb .PdfObject ;Descent _bbgb .PdfObject ;
Leading _bbgb .PdfObject ;CapHeight _bbgb .PdfObject ;XHeight _bbgb .PdfObject ;StemV _bbgb .PdfObject ;StemH _bbgb .PdfObject ;AvgWidth _bbgb .PdfObject ;MaxWidth _bbgb .PdfObject ;MissingWidth _bbgb .PdfObject ;FontFile _bbgb .PdfObject ;FontFile2 _bbgb .PdfObject ;
FontFile3 _bbgb .PdfObject ;CharSet _bbgb .PdfObject ;_gdaee int ;_cbab float64 ;*fontFile ;_gbaac *_add .TtfType ;

// Additional entries for CIDFonts
Style _bbgb .PdfObject ;Lang _bbgb .PdfObject ;FD _bbgb .PdfObject ;CIDSet _bbgb .PdfObject ;_gaeg *_bbgb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cad *PdfActionSubmitForm )ToPdfObject ()_bbgb .PdfObject {_cad .PdfAction .ToPdfObject ();_bbc :=_cad ._dce ;_efd :=_bbc .PdfObject .(*_bbgb .PdfObjectDictionary );_efd .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeSubmitForm )));if _cad .F !=nil {_efd .Set ("\u0046",_cad .F .ToPdfObject ());
};_efd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cad .Fields );_efd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cad .Flags );return _bbc ;};

// ToInteger convert to an integer format.
func (_bacc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cabgd :=_ec .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cabgd *_bacc .R ()),uint32 (_cabgd *_bacc .G ()),uint32 (_cabgd *_bacc .B ())};};

// PartialName returns the partial name of the field.
func (_afgcg *PdfField )PartialName ()string {_gebdf :="";if _afgcg .T !=nil {_gebdf =_afgcg .T .Decoded ();}else {_bb .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gebdf ;};func (_ggga *PdfWriter )setDocumentIDs (_ddbaf ,_agefa string ){_ggga ._ffded =_bbgb .MakeArray (_bbgb .MakeHexString (_ddbaf ),_bbgb .MakeHexString (_agefa ));};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bfbb *_bbgb .PdfObjectDictionary ;_bagb *_bbgb .PdfIndirectObject ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bbgb .PdfObjectDictionary )(*PdfPageResources ,error ){_fdfada :=NewPdfPageResources ();if _bebfd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bebfd !=nil {_fdfada .ExtGState =_bebfd ;};if _abggd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_abggd !=nil &&!_bbgb .IsNullObject (_abggd ){_fdfada .ColorSpace =_abggd ;};if _gccdd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gccdd !=nil {_fdfada .Pattern =_gccdd ;};if _ebfea :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_ebfea !=nil {_fdfada .Shading =_ebfea ;
};if _fbgba :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fbgba !=nil {_fdfada .XObject =_fbgba ;};if _gcfeb :=_bbgb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_gcfeb !=nil {_fdfada .Font =_gcfeb ;};if _cdab :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_cdab !=nil {_fdfada .ProcSet =_cdab ;};if _adfbb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_adfbb !=nil {_fdfada .Properties =_adfbb ;};return _fdfada ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cbdea *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_afeg ,_fgbgb :=_bbgb .GetDict (_cbdea ._dfcbd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fgbgb {_afeg =_bbgb .MakeDict ();_cbdea ._dfcbd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_afeg );
};_beeae ,_fgbgb :=_bbgb .GetDict (_afeg .Get (_bbgb .PdfObjectName (extName )));if !_fgbgb {_beeae =_bbgb .MakeDict ();_afeg .Set (_bbgb .PdfObjectName (extName ),_beeae );};if _ggbff ,_ :=_bbgb .GetNameVal (_beeae .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ggbff !=baseVersion {_beeae .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bbgb .MakeName (baseVersion ));};if _eecge ,_ :=_bbgb .GetIntVal (_beeae .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_eecge !=extLevel {_beeae .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bbgb .MakeInteger (int64 (extLevel )));};};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ggefg *Outline )Insert (index uint ,item *OutlineItem ){_ggcfce :=uint (len (_ggefg .Entries ));if index > _ggcfce {index =_ggcfce ;};_ggefg .Entries =append (_ggefg .Entries [:index ],append ([]*OutlineItem {item },_ggefg .Entries [index :]...)...);
};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_cfggg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcbg :=vals [0];if _gcbg < 0.0||_gcbg > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cdae :=vals [1];if _cdae < 0.0||_cdae > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdee :=vals [2];if _fdee < 0.0||_fdee > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cagb :=vals [3];if _cagb < 0.0||_cagb > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbef :=NewPdfColorDeviceCMYK (_gcbg ,_cdae ,_fdee ,_cagb );return _cbef ,nil ;};func (_bcge *PdfReader )newPdfFieldFromIndirectObject (_cefg *_bbgb .PdfIndirectObject ,_gdbab *PdfField )(*PdfField ,error ){if _gcafd ,_dddba :=_bcge ._cgadg .GetModelFromPrimitive (_cefg ).(*PdfField );
_dddba {return _gcafd ,nil ;};_abfa ,_cecb :=_bbgb .GetDict (_cefg );if !_cecb {return nil ,_d .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ffdee :=NewPdfField ();_ffdee ._bgbc =_cefg ;_ffdee ._bgbc .PdfObject =_abfa ;if _beba ,_gdefa :=_bbgb .GetName (_abfa .Get ("\u0046\u0054"));_gdefa {_ffdee .FT =_beba ;};if _gdbab !=nil {_ffdee .Parent =_gdbab ;};_ffdee .T ,_ =_abfa .Get ("\u0054").(*_bbgb .PdfObjectString );
_ffdee .TU ,_ =_abfa .Get ("\u0054\u0055").(*_bbgb .PdfObjectString );_ffdee .TM ,_ =_abfa .Get ("\u0054\u004d").(*_bbgb .PdfObjectString );_ffdee .Ff ,_ =_abfa .Get ("\u0046\u0066").(*_bbgb .PdfObjectInteger );_ffdee .V =_abfa .Get ("\u0056");_ffdee .DV =_abfa .Get ("\u0044\u0056");
_ffdee .AA =_abfa .Get ("\u0041\u0041");if DA :=_abfa .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bbgb .GetString (DA );_ffdee .VariableText =&VariableText {DA :DA };Q ,_ :=_abfa .Get ("\u0051").(*_bbgb .PdfObjectInteger );DS ,_ :=_abfa .Get ("\u0044\u0053").(*_bbgb .PdfObjectString );
RV :=_abfa .Get ("\u0052\u0056");_ffdee .VariableText .Q =Q ;_ffdee .VariableText .DS =DS ;_ffdee .VariableText .RV =RV ;};_eefd :=_ffdee .FT ;if _eefd ==nil &&_gdbab !=nil {_eefd =_gdbab .FT ;};if _eefd !=nil {switch *_eefd {case "\u0054\u0078":_dafca ,_aabc :=_gcaa (_abfa );
if _aabc !=nil {return nil ,_aabc ;};_dafca .PdfField =_ffdee ;_ffdee ._eecbd =_dafca ;case "\u0043\u0068":_gfaa ,_bbfa :=_bgcfc (_abfa );if _bbfa !=nil {return nil ,_bbfa ;};_gfaa .PdfField =_ffdee ;_ffdee ._eecbd =_gfaa ;case "\u0042\u0074\u006e":_gcce ,_dgfc :=_ddeg (_abfa );
if _dgfc !=nil {return nil ,_dgfc ;};_gcce .PdfField =_ffdee ;_ffdee ._eecbd =_gcce ;case "\u0053\u0069\u0067":_bcgf ,_cbbd :=_bcge .newPdfFieldSignatureFromDict (_abfa );if _cbbd !=nil {return nil ,_cbbd ;};_bcgf .PdfField =_ffdee ;_ffdee ._eecbd =_bcgf ;
default:_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_ffdee .FT );return nil ,_fd .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gabff ,_adba :=_bbgb .GetName (_abfa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_adba {if *_gabff =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gbbfc ,_eecedb :=_bcge .newPdfAnnotationFromIndirectObject (_cefg );if _eecedb !=nil {return nil ,_eecedb ;
};_bede ,_eeddf :=_gbbfc .GetContext ().(*PdfAnnotationWidget );if !_eeddf {return nil ,_fd .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_bede ._dagf =_ffdee ;_bede .Parent =_ffdee ._bgbc ;
_ffdee .Annotations =append (_ffdee .Annotations ,_bede );return _ffdee ,nil ;};};_cbcg :=true ;if _fgab ,_agcc :=_bbgb .GetArray (_abfa .Get ("\u004b\u0069\u0064\u0073"));_agcc {_cgfd :=make ([]*_bbgb .PdfIndirectObject ,0,_fgab .Len ());for _ ,_bdabe :=range _fgab .Elements (){_efgf ,_fafaa :=_bbgb .GetIndirect (_bdabe );
if !_fafaa {_gagf ,_ebea :=_bbgb .GetStream (_bdabe );if _ebea &&_gagf .PdfObjectDictionary !=nil {_eafd ,_edgba :=_bbgb .GetNameVal (_gagf .Get ("\u0054\u0079\u0070\u0065"));if _edgba &&_eafd =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bb .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fd .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_efeb ,_bbeda :=_bbgb .GetDict (_efgf );
if !_bbeda {return nil ,ErrTypeCheck ;};if _cbcg {_cbcg =!_gedc (_efeb );};_cgfd =append (_cgfd ,_efgf );};for _ ,_aace :=range _cgfd {if _cbcg {_adff ,_dfcc :=_bcge .newPdfAnnotationFromIndirectObject (_aace );if _dfcc !=nil {_bb .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dfcc );
return nil ,_dfcc ;};_efgb ,_dace :=_adff ._cged .(*PdfAnnotationWidget );if !_dace {return nil ,ErrTypeCheck ;};_efgb ._dagf =_ffdee ;_ffdee .Annotations =append (_ffdee .Annotations ,_efgb );}else {_gfbfb ,_cega :=_bcge .newPdfFieldFromIndirectObject (_aace ,_ffdee );
if _cega !=nil {_bb .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cega );return nil ,_cega ;};_ffdee .Kids =append (_ffdee .Kids ,_gfbfb );
};};};return _ffdee ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_afabe *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _afabe ._ebbbe .(*PdfTilingPattern );};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_daea FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_daea .Mask ()|fl .Mask ())};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_dbgeb *LTV )EnableAll (extraCerts []*_fc .Certificate )error {_dbbgg :=_dbgeb ._aefab ._cgeda .AcroForm ;for _ ,_gacgb :=range _dbbgg .AllFields (){_fgfe ,_ :=_gacgb .GetContext ().(*PdfFieldSignature );if _fgfe ==nil {continue ;};_adbce :=_fgfe .V ;
if _agdcag :=_dbgeb .validateSig (_adbce );_agdcag !=nil {_bb .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_agdcag );
};if _ffaea :=_dbgeb .Enable (_adbce ,extraCerts );_ffaea !=nil {return _ffaea ;};};return nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_eebe *PdfColorspaceDeviceN )GetNumComponents ()int {return _eebe .ColorantNames .Len ()};

// GetPdfInfo returns the PDF info dictionary.
func (_fdfad *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_ffdgd ,_cabaf :=_fdfad .GetTrailer ();if _cabaf !=nil {return nil ,_cabaf ;};var _cbeff *_bbgb .PdfObjectDictionary ;_egaag :=_ffdgd .Get ("\u0049\u006e\u0066\u006f");switch _degccf :=_egaag .(type ){case *_bbgb .PdfObjectReference :_geggc :=_degccf ;
_egaag ,_cabaf =_fdfad .GetIndirectObjectByNumber (int (_geggc .ObjectNumber ));_egaag =_bbgb .TraceToDirectObject (_egaag );if _cabaf !=nil {return nil ,_cabaf ;};_cbeff ,_ =_egaag .(*_bbgb .PdfObjectDictionary );case *_bbgb .PdfObjectDictionary :_cbeff =_degccf ;
};if _cbeff ==nil {return nil ,_fd .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_geegg ,_cabaf :=NewPdfInfoFromObject (_cbeff );if _cabaf !=nil {return nil ,_cabaf ;
};return _geegg ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bbgb .PdfObjectInteger ;BitsPerComponent *_bbgb .PdfObjectInteger ;BitsPerFlag *_bbgb .PdfObjectInteger ;Decode *_bbgb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_ffg *PdfActionLaunch )ToPdfObject ()_bbgb .PdfObject {_ffg .PdfAction .ToPdfObject ();_age :=_ffg ._dce ;_ege :=_age .PdfObject .(*_bbgb .PdfObjectDictionary );_ege .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeLaunch )));if _ffg .F !=nil {_ege .Set ("\u0046",_ffg .F .ToPdfObject ());
};_ege .SetIfNotNil ("\u0057\u0069\u006e",_ffg .Win );_ege .SetIfNotNil ("\u004d\u0061\u0063",_ffg .Mac );_ege .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ffg .Unix );_ege .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ffg .NewWindow );return _age ;
};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gadcc *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_feaab :=_bbg .NewReader (img .getBase ());_bdaae :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bfdff :=_bbg .NewWriter (_bdaae );
_geae :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_dged :=make ([]uint32 ,3);var (_edcb error ;_gafgb ,_ccegd ,_dcddf ,_ffde ,_dgcf ,_dcdb float64 ;);for {_edcb =_feaab .ReadSamples (_dged );if _edcb ==_bf .EOF {break ;}else if _edcb !=nil {return img ,_edcb ;
};_gafgb =float64 (_dged [0])/_geae ;_ccegd =float64 (_dged [1])/_geae ;_dcddf =float64 (_dged [2])/_geae ;_ffde =_gadcc .Matrix [0]*_ec .Pow (_gafgb ,_gadcc .Gamma [0])+_gadcc .Matrix [3]*_ec .Pow (_ccegd ,_gadcc .Gamma [1])+_gadcc .Matrix [6]*_ec .Pow (_dcddf ,_gadcc .Gamma [2]);
_dgcf =_gadcc .Matrix [1]*_ec .Pow (_gafgb ,_gadcc .Gamma [0])+_gadcc .Matrix [4]*_ec .Pow (_ccegd ,_gadcc .Gamma [1])+_gadcc .Matrix [7]*_ec .Pow (_dcddf ,_gadcc .Gamma [2]);_dcdb =_gadcc .Matrix [2]*_ec .Pow (_gafgb ,_gadcc .Gamma [0])+_gadcc .Matrix [5]*_ec .Pow (_ccegd ,_gadcc .Gamma [1])+_gadcc .Matrix [8]*_ec .Pow (_dcddf ,_gadcc .Gamma [2]);
_gafgb =3.240479*_ffde +-1.537150*_dgcf +-0.498535*_dcdb ;_ccegd =-0.969256*_ffde +1.875992*_dgcf +0.041556*_dcdb ;_dcddf =0.055648*_ffde +-0.204043*_dgcf +1.057311*_dcdb ;_gafgb =_ec .Min (_ec .Max (_gafgb ,0),1.0);_ccegd =_ec .Min (_ec .Max (_ccegd ,0),1.0);
_dcddf =_ec .Min (_ec .Max (_dcddf ,0),1.0);_dged [0]=uint32 (_gafgb *_geae );_dged [1]=uint32 (_ccegd *_geae );_dged [2]=uint32 (_dcddf *_geae );if _edcb =_bfdff .WriteSamples (_dged );_edcb !=nil {return img ,_edcb ;};};return _cfegb (&_bdaae ),nil ;
};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bbgb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_agdee *pdfCIDFontType0 )ToPdfObject ()_bbgb .PdfObject {return _bbgb .MakeNull ()};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ccefg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bbgb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbea ,_cagae :=_bbgb .GetNumbersAsFloat (objects );
if _cagae !=nil {return nil ,_cagae ;};return _ccefg .ColorFromFloats (_dbea );};func _dbcc (_eccca *_bbgb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cegfff :=PdfShadingType1 {};if _daca :=_eccca .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_daca !=nil {_daca =_bbgb .TraceToDirectObject (_daca );
_bgff ,_gggfg :=_daca .(*_bbgb .PdfObjectArray );if !_gggfg {_bb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daca );return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cegfff .Domain =_bgff ;};if _efbfg :=_eccca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_efbfg !=nil {_efbfg =_bbgb .TraceToDirectObject (_efbfg );_bbge ,_abacd :=_efbfg .(*_bbgb .PdfObjectArray );if !_abacd {_bb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efbfg );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cegfff .Matrix =_bbge ;};_dbdc :=_eccca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dbdc ==nil {_bb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cegfff .Function =[]PdfFunction {};if _eaad ,_ddba :=_dbdc .(*_bbgb .PdfObjectArray );_ddba {for _ ,_acbgf :=range _eaad .Elements (){_ddgab ,_fdcce :=_cdfb (_acbgf );if _fdcce !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdcce );
return nil ,_fdcce ;};_cegfff .Function =append (_cegfff .Function ,_ddgab );};}else {_gfcd ,_bcegc :=_cdfb (_dbdc );if _bcegc !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcegc );
return nil ,_bcegc ;};_cegfff .Function =append (_cegfff .Function ,_gfcd );};return &_cegfff ,nil ;};func _aeed (_dgbcd _bbgb .PdfObject )(string ,error ){_dgbcd =_bbgb .TraceToDirectObject (_dgbcd );switch _babff :=_dgbcd .(type ){case *_bbgb .PdfObjectString :return _babff .Str (),nil ;
case *_bbgb .PdfObjectStream :_dbcaa ,_efbc :=_bbgb .DecodeStream (_babff );if _efbc !=nil {return "",_efbc ;};return string (_dbcaa ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_dgbcd );
};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_fccg *PdfPage )Size ()(float64 ,float64 ,error ){_gddc ,_fagcf :=_fccg .GetMediaBox ();if _fagcf !=nil {return 0,0,_fagcf ;};_aecef ,_gbgcba :=_gddc .Width (),_gddc .Height ();if _fdggc :=_fccg .Rotate ;_fdggc !=nil &&*_fdggc %360!=0&&*_fdggc %90==0{if _cfgd :=(360+*_fdggc %360)%360;
_cfgd ==90||_cfgd ==270{_aecef ,_gbgcba =_gbgcba ,_aecef ;};};return _aecef ,_gbgcba ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ccbc *PdfPattern )SetContext (ctx PdfModel ){_ccbc ._ebbbe =ctx };

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_dbcd pdfFontSimple )GetCharMetrics (code _gcc .CharCode )(_add .CharMetrics ,bool ){if _eagd ,_fgbf :=_dbcd ._ceec [code ];_fgbf {return _add .CharMetrics {Wx :_eagd },true ;};if _add .IsStdFont (_add .StdFontName (_dbcd ._debfe )){return _add .CharMetrics {Wx :250},true ;
};return _add .CharMetrics {},false ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_feaaa *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dcdd ,_bagde :=color .(*PdfColorDeviceRGB );if !_bagde {_bb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dcdd ,nil ;};func (_afgce *PdfReader )loadAnnotations (_ggbfc _bbgb .PdfObject )([]*PdfAnnotation ,error ){_bcce ,_fcgg :=_bbgb .GetArray (_ggbfc );
if !_fcgg {return nil ,_d .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dbcdd []*PdfAnnotation ;for _ ,_cegcd :=range _bcce .Elements (){_cegcd =_bbgb .ResolveReference (_cegcd );
if _ ,_dbdgf :=_cegcd .(*_bbgb .PdfObjectNull );_dbdgf {continue ;};_fgabd ,_eeceg :=_cegcd .(*_bbgb .PdfObjectDictionary );_faffc ,_dbebb :=_cegcd .(*_bbgb .PdfIndirectObject );if _eeceg {_faffc =&_bbgb .PdfIndirectObject {};_faffc .PdfObject =_fgabd ;
}else {if !_dbebb {return nil ,_d .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_dgceb ,_gdccc :=_afgce .newPdfAnnotationFromIndirectObject (_faffc );
if _gdccc !=nil {return nil ,_gdccc ;};switch _eefec :=_dgceb .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dcffd :=range _afgce .AcroForm .AllFields (){if _dcffd ._bgbc ==_eefec .Parent {_eefec ._dagf =_dcffd ;break ;};};};if _dgceb !=nil {_dbcdd =append (_dbcdd ,_dgceb );
};};return _dbcdd ,nil ;};func (_cfbe *PdfReader )newPdfActionNamedFromDict (_ffdc *_bbgb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_ffdc .Get ("\u004e")},nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_abceg *_bbgb .PdfParser ;_abdd _bbgb .PdfObject ;_abaaf *_bbgb .PdfIndirectObject ;_dccg *_bbgb .PdfObjectDictionary ;_gadg []*_bbgb .PdfIndirectObject ;PageList []*PdfPage ;_agfa int ;_facae *_bbgb .PdfObjectDictionary ;_cgcac *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_cgadg *modelManager ;_adbbb bool ;_efad map[_bbgb .PdfObject ]struct{};_gcfce _bf .ReadSeeker ;_bbegc string ;_efeabc bool ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gcb :=NewPdfAction ();_gae :=&PdfActionJavaScript {};_gae .PdfAction =_gcb ;_gcb .SetContext (_gae );return _gae ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_cged PdfModel ;Rect _bbgb .PdfObject ;Contents _bbgb .PdfObject ;P _bbgb .PdfObject ;NM _bbgb .PdfObject ;M _bbgb .PdfObject ;F _bbgb .PdfObject ;AP _bbgb .PdfObject ;AS _bbgb .PdfObject ;Border _bbgb .PdfObject ;C _bbgb .PdfObject ;
StructParent _bbgb .PdfObject ;OC _bbgb .PdfObject ;_bce *_bbgb .PdfIndirectObject ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_fgac *PdfOutputIntent )GetContainingPdfObject ()_bbgb .PdfObject {return _fgac ._gageg };func (_fced *pdfCIDFontType0 )baseFields ()*fontCommon {return &_fced .fontCommon };

// GetContainingPdfObject implements interface PdfModel.
func (_dfce *PdfAnnotation )GetContainingPdfObject ()_bbgb .PdfObject {return _dfce ._bce };

// Fill populates `form` with values provided by `provider`.
func (_ggfe *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ggfe .fill (provider ,nil )};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_facca *XObjectImage )SetFilter (encoder _bbgb .StreamEncoder )error {_bbacc :=_facca .Stream ;_fbbgg ,_ebged :=_facca .Filter .DecodeBytes (_bbacc );if _ebged !=nil {return _ebged ;};_facca .Filter =encoder ;encoder .UpdateParams (_facca .getParamsDict ());
_bbacc ,_ebged =encoder .EncodeBytes (_fbbgg );if _ebged !=nil {return _ebged ;};_facca .Stream =_bbacc ;return nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_fcbccb *_bbgb .PdfIndirectObject ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bbgb .PdfIndirectObject ;SV *_bbgb .PdfIndirectObject ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _bf .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fabdf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _bebbd (rs ,opts ,true ,_fabdf );
};func _ddeg (_ffaeg *_bbgb .PdfObjectDictionary )(*PdfFieldButton ,error ){_ebdfg :=&PdfFieldButton {};_ebdfg .PdfField =NewPdfField ();_ebdfg .PdfField .SetContext (_ebdfg );_ebdfg .Opt ,_ =_bbgb .GetArray (_ffaeg .Get ("\u004f\u0070\u0074"));_gefecc :=NewPdfAnnotationWidget ();
_gefecc .A ,_ =_bbgb .GetDict (_ffaeg .Get ("\u0041"));_gefecc .AP ,_ =_bbgb .GetDict (_ffaeg .Get ("\u0041\u0050"));_gefecc .SetContext (_ebdfg );_ebdfg .PdfField .Annotations =append (_ebdfg .PdfField .Annotations ,_gefecc );return _ebdfg ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_aebcge *PdfTilingPattern )GetContentStream ()([]byte ,error ){_ddceb ,_ ,_cdfg :=_aebcge .GetContentStreamWithEncoder ();return _ddceb ,_cdfg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bcba *PdfFilespec )GetContainingPdfObject ()_bbgb .PdfObject {return _bcba ._gcecd };

// Add appends a top level outline item to the outline.
func (_egaad *Outline )Add (item *OutlineItem ){_egaad .Entries =append (_egaad .Entries ,item )};func _dbceg (_baag _bbgb .PdfObject )(*PdfColorspaceDeviceN ,error ){_cdaca :=NewPdfColorspaceDeviceN ();if _eacg ,_gefgg :=_baag .(*_bbgb .PdfIndirectObject );
_gefgg {_cdaca ._fcfb =_eacg ;};_baag =_bbgb .TraceToDirectObject (_baag );_bdgb ,_fgafe :=_baag .(*_bbgb .PdfObjectArray );if !_fgafe {return nil ,_d .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bdgb .Len ()!=4&&_bdgb .Len ()!=5{return nil ,_d .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_baag =_bdgb .Get (0);
_eecc ,_fgafe :=_baag .(*_bbgb .PdfObjectName );if !_fgafe {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_eecc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_d .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_baag =_bdgb .Get (1);
_baag =_bbgb .TraceToDirectObject (_baag );_fcced ,_fgafe :=_baag .(*_bbgb .PdfObjectArray );if !_fgafe {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_cdaca .ColorantNames =_fcced ;_baag =_bdgb .Get (2);_cebc ,_bbgdf :=NewPdfColorspaceFromPdfObject (_baag );if _bbgdf !=nil {return nil ,_bbgdf ;};_cdaca .AlternateSpace =_cebc ;_cgae ,_bbgdf :=_cdfb (_bdgb .Get (3));if _bbgdf !=nil {return nil ,_bbgdf ;
};_cdaca .TintTransform =_cgae ;if _bdgb .Len ()==5{_fcfe ,_afbae :=_efaa (_bdgb .Get (4));if _afbae !=nil {return nil ,_afbae ;};_cdaca .Attributes =_fcfe ;};return _cdaca ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gedea pdfFontType0 )GetRuneMetrics (r rune )(_add .CharMetrics ,bool ){if _gedea .DescendantFont ==nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gedea );
return _add .CharMetrics {},false ;};return _gedea .DescendantFont .GetRuneMetrics (r );};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_cabc :=&PdfColorspaceCalRGB {};_cabc .BlackPoint =[]float64 {0.0,0.0,0.0};_cabc .Gamma =[]float64 {1.0,1.0,1.0};_cabc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _cabc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gbgdc pdfFontType0 )GetCharMetrics (code _gcc .CharCode )(_add .CharMetrics ,bool ){if _gbgdc .DescendantFont ==nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gbgdc );
return _add .CharMetrics {},false ;};return _gbgdc .DescendantFont .GetCharMetrics (code );};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gbgcg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gbgcg ._ebbbe .(*PdfShadingPattern );};const (_gadba =0x00001;_aebae =0x00002;_eeed =0x00004;_dfcfc =0x00008;_fead =0x00020;_aeceb =0x00040;_ebgb =0x10000;_affb =0x20000;_ccdbg =0x40000;
);

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bbgb .PdfObject ;PreserveRB _bbgb .PdfObject ;};

// ToInteger convert to an integer format.
func (_fbgf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cgcc :=_ec .Pow (2,float64 (bits ))-1;return uint32 (_cgcc *_fbgf .Val ());};func (_gefec *DSS )generateHashMaps ()error {_dfaf ,_ffgga :=_gefec .generateHashMap (_gefec .Certs );if _ffgga !=nil {return _ffgga ;
};_gaafc ,_ffgga :=_gefec .generateHashMap (_gefec .OCSPs );if _ffgga !=nil {return _ffgga ;};_bffef ,_ffgga :=_gefec .generateHashMap (_gefec .CRLs );if _ffgga !=nil {return _ffgga ;};_gefec ._ecca =_dfaf ;_gefec ._bbaa =_gaafc ;_gefec ._edce =_bffef ;
return nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_eegcd *PdfPageResources )GetFontByName (keyName _bbgb .PdfObjectName )(_bbgb .PdfObject ,bool ){if _eegcd .Font ==nil {return nil ,false ;};_eaaeb ,_ffdab :=_bbgb .TraceToDirectObject (_eegcd .Font ).(*_bbgb .PdfObjectDictionary );if !_ffdab {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bbgb .TraceToDirectObject (_eegcd .Font ));
return nil ,false ;};if _egfac :=_eaaeb .Get (keyName );_egfac !=nil {return _egfac ,true ;};return nil ,false ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_cdffc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdffc .Alternate ==nil {_bb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _cdffc .N ==1{_bb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fgaf :=NewPdfColorspaceDeviceGray ();return _fgaf .ColorToRGB (color );}else if _cdffc .N ==3{_bb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _cdffc .N ==4{_bb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dgdgb :=NewPdfColorspaceDeviceCMYK ();return _dgdgb .ColorToRGB (color );}else {return nil ,_fd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_bb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cdffc );
return _cdffc .Alternate .ColorToRGB (color );};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bbccf *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _fd .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bbccf .S =subtype ;return nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bbgb .PdfObjectInteger ;TilingType *_bbgb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bbgb .PdfObjectFloat ;YStep *_bbgb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bbgb .PdfObjectArray ;
};func _ecdf (_aeaa *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_aeaa }};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bbgb .PdfObject ;IsMap _bbgb .PdfObject ;};func (_feg *PdfAnnotation )String ()string {_ddgb :="";_ebbd ,_bbe :=_feg .ToPdfObject ().(*_bbgb .PdfIndirectObject );if _bbe {_ddgb =_d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_feg ._cged ,_ebbd .PdfObject .String ());
};return _ddgb ;};func (_fcd *PdfReader )newPdfAnnotationUnderlineFromDict (_bad *_bbgb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_egd :=PdfAnnotationUnderline {};_gdee ,_gfcb :=_fcd .newPdfAnnotationMarkupFromDict (_bad );if _gfcb !=nil {return nil ,_gfcb ;
};_egd .PdfAnnotationMarkup =_gdee ;_egd .QuadPoints =_bad .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_egd ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cfaff DefaultImageHandler )NewGrayImageFromGoImage (goimg _fb .Image )(*Image ,error ){_dcdbe :=goimg .Bounds ();_cgbbg :=&Image {Width :int64 (_dcdbe .Dx ()),Height :int64 (_dcdbe .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gedde :=goimg .(type ){case *_fb .Gray :if len (_gedde .Pix )!=_dcdbe .Dx ()*_dcdbe .Dy (){_aggge ,_cefbb :=_ae .GrayConverter .Convert (goimg );
if _cefbb !=nil {return nil ,_cefbb ;};_cgbbg .Data =_aggge .Pix ();}else {_cgbbg .Data =_gedde .Pix ;};case *_fb .Gray16 :_cgbbg .BitsPerComponent =16;if len (_gedde .Pix )!=_dcdbe .Dx ()*_dcdbe .Dy ()*2{_eeceb ,_aacc :=_ae .Gray16Converter .Convert (goimg );
if _aacc !=nil {return nil ,_aacc ;};_cgbbg .Data =_eeceb .Pix ();}else {_cgbbg .Data =_gedde .Pix ;};case _ae .Image :_dccf :=_gedde .Base ();if _dccf .ColorComponents ==1{_cgbbg .BitsPerComponent =int64 (_dccf .BitsPerComponent );_cgbbg .Data =_dccf .Data ;
return _cgbbg ,nil ;};_facda ,_fefb :=_ae .GrayConverter .Convert (goimg );if _fefb !=nil {return nil ,_fefb ;};_cgbbg .Data =_facda .Pix ();default:_aedc ,_abdge :=_ae .GrayConverter .Convert (goimg );if _abdge !=nil {return nil ,_abdge ;};_cgbbg .Data =_aedc .Pix ();
};return _cgbbg ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_adabc *_bbgb .PdfIndirectObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_eafce *_bbgb .PdfIndirectObject ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_becf ,_daba :=_add .NewStdFontByName (HelveticaName );if !_daba {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_ggfd :=_ebfg (_becf );return &PdfFont {_efcd :&_ggfd };};func (_dfeeb *PdfReader )newPdfSignatureFromIndirect (_bgcee *_bbgb .PdfIndirectObject )(*PdfSignature ,error ){_dfge ,_aadce :=_bgcee .PdfObject .(*_bbgb .PdfObjectDictionary );if !_aadce {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _cbaeg ,_cebfb :=_dfeeb ._cgadg .GetModelFromPrimitive (_bgcee ).(*PdfSignature );_cebfb {return _cbaeg ,nil ;};_cgbac :=&PdfSignature {};_cgbac ._ccdaa =_bgcee ;_cgbac .Type ,_ =_bbgb .GetName (_dfge .Get ("\u0054\u0079\u0070\u0065"));
_cgbac .Filter ,_aadce =_bbgb .GetName (_dfge .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_aadce {_bb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cgbac .SubFilter ,_ =_bbgb .GetName (_dfge .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cgbac .Contents ,_aadce =_bbgb .GetString (_dfge .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_aadce {_bb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cgbac .Cert =_dfge .Get ("\u0043\u0065\u0072\u0074");_cgbac .ByteRange ,_ =_bbgb .GetArray (_dfge .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_cgbac .Reference ,_ =_bbgb .GetArray (_dfge .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_cgbac .Changes ,_ =_bbgb .GetArray (_dfge .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cgbac .Name ,_ =_bbgb .GetString (_dfge .Get ("\u004e\u0061\u006d\u0065"));_cgbac .M ,_ =_bbgb .GetString (_dfge .Get ("\u004d"));_cgbac .Location ,_ =_bbgb .GetString (_dfge .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cgbac .Reason ,_ =_bbgb .GetString (_dfge .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cgbac .ContactInfo ,_ =_bbgb .GetString (_dfge .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cgbac .R ,_ =_bbgb .GetInt (_dfge .Get ("\u0052"));
_cgbac .V ,_ =_bbgb .GetInt (_dfge .Get ("\u0056"));_cgbac .PropBuild ,_ =_bbgb .GetDict (_dfge .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cgbac .PropAuthTime ,_ =_bbgb .GetInt (_dfge .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cgbac .PropAuthType ,_ =_bbgb .GetName (_dfge .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _cgbac ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bbgb .PdfObject ;Name _bbgb .PdfObject ;State _bbgb .PdfObject ;StateModel _bbgb .PdfObject ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bbgb .PdfObjectInteger ;BitsPerComponent *_bbgb .PdfObjectInteger ;BitsPerFlag *_bbgb .PdfObjectInteger ;Decode *_bbgb .PdfObjectArray ;Function []PdfFunction ;};func _ggfda (_gfad *_bbgb .PdfObjectDictionary ,_abfef *fontCommon )(*pdfFontType0 ,error ){_aaeg ,_fbdbg :=_bbgb .GetArray (_gfad .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_fbdbg {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_abfef );
return nil ,_bbgb .ErrRangeError ;};if _aaeg .Len ()!=1{_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_aaeg .Len ());return nil ,_bbgb .ErrRangeError ;
};_bfaf ,_cfgfa :=_fbcaf (_aaeg .Get (0),false );if _cfgfa !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_cfgfa ,_abfef );
return nil ,_cfgfa ;};_gcbc :=_edbd (_abfef );_gcbc .DescendantFont =_bfaf ;_cefba ,_fbdbg :=_bbgb .GetNameVal (_gfad .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fbdbg {if _cefba =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cefba =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gcbc ._bdfgf =_gcc .NewIdentityTextEncoder (_cefba );
}else if _afg .IsPredefinedCMap (_cefba ){_gcbc ._bcdc ,_cfgfa =_afg .LoadPredefinedCMap (_cefba );if _cfgfa !=nil {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cefba ,_cfgfa );
};}else {_bb .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cefba );};};if _bbbgb :=_bfaf .baseFields ()._aafb ;_bbbgb !=nil {if _cgce :=_bbbgb .Name ();_cgce =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cgce =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cgce =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cgce =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gcbc ._bdfgf =_gcc .NewCMapEncoder (_cefba ,_gcbc ._bcdc ,_bbbgb );
};};return _gcbc ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fdbb *PdfFieldButton )ToPdfObject ()_bbgb .PdfObject {_fdbb .PdfField .ToPdfObject ();_bdgda :=_fdbb ._bgbc ;_adbe :=_bdgda .PdfObject .(*_bbgb .PdfObjectDictionary );_adbe .Set ("\u0046\u0054",_bbgb .MakeName ("\u0042\u0074\u006e"));if _fdbb .Opt !=nil {_adbe .Set ("\u004f\u0070\u0074",_fdbb .Opt );
};return _bdgda ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bbgb .PdfObject ;B _bbgb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aac *PdfActionImportData )ToPdfObject ()_bbgb .PdfObject {_aac .PdfAction .ToPdfObject ();_baa :=_aac ._dce ;_cgd :=_baa .PdfObject .(*_bbgb .PdfObjectDictionary );_cgd .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeImportData )));if _aac .F !=nil {_cgd .Set ("\u0046",_aac .F .ToPdfObject ());
};return _baa ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_aae :=NewPdfAnnotation ();_eae :=&PdfAnnotationText {};_eae .PdfAnnotation =_aae ;_eae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aae .SetContext (_eae );return _eae ;};func _bffed ()_a .Time {_baae .Lock ();
defer _baae .Unlock ();return _beebg };

// ToPdfObject returns a stream object.
func (_aeagc *XObjectImage )ToPdfObject ()_bbgb .PdfObject {_eeebb :=_aeagc ._gffd ;_fcbab :=_eeebb .PdfObjectDictionary ;if _aeagc .Filter !=nil {_fcbab =_aeagc .Filter .MakeStreamDict ();_eeebb .PdfObjectDictionary =_fcbab ;};_fcbab .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_fcbab .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0049\u006d\u0061g\u0065"));_fcbab .Set ("\u0057\u0069\u0064t\u0068",_bbgb .MakeInteger (*(_aeagc .Width )));_fcbab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbgb .MakeInteger (*(_aeagc .Height )));
if _aeagc .BitsPerComponent !=nil {_fcbab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbgb .MakeInteger (*(_aeagc .BitsPerComponent )));};if _aeagc .ColorSpace !=nil {_fcbab .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aeagc .ColorSpace .ToPdfObject ());
};_fcbab .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_aeagc .Intent );_fcbab .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_aeagc .ImageMask );_fcbab .SetIfNotNil ("\u004d\u0061\u0073\u006b",_aeagc .Mask );_ffgbag :=_fcbab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _aeagc .Decode ==nil &&_ffgbag {_fcbab .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _aeagc .Decode !=nil {_fcbab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aeagc .Decode );};_fcbab .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_aeagc .Interpolate );
_fcbab .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_aeagc .Alternatives );_fcbab .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_aeagc .SMask );_fcbab .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_aeagc .SMaskInData );
_fcbab .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aeagc .Matte );_fcbab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aeagc .Name );_fcbab .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aeagc .StructParent );_fcbab .SetIfNotNil ("\u0049\u0044",_aeagc .ID );
_fcbab .SetIfNotNil ("\u004f\u0050\u0049",_aeagc .OPI );_fcbab .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aeagc .Metadata );_fcbab .SetIfNotNil ("\u004f\u0043",_aeagc .OC );_fcbab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_aeagc .Stream ))));
_eeebb .Stream =_aeagc .Stream ;return _eeebb ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bbgb .PdfObject ;RichMediaContent _bbgb .PdfObject ;};var _fagcc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_bfabc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_gcfd *PdfReader )newPdfAnnotationHighlightFromDict (_gdeb *_bbgb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_gefea :=PdfAnnotationHighlight {};
_eddae ,_aagc :=_gcfd .newPdfAnnotationMarkupFromDict (_gdeb );if _aagc !=nil {return nil ,_aagc ;};_gefea .PdfAnnotationMarkup =_eddae ;_gefea .QuadPoints =_gdeb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gefea ,nil ;
};

// String returns a human readable description of `fontfile`.
func (_bccdg *fontFile )String ()string {_bcgde :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bccdg ._cegc !=nil {_bcgde =_bccdg ._cegc .String ();};return _d .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bccdg ._agfc ,_bcgde );
};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func _bdebf (_dfefc *_bbgb .PdfObjectArray )(float64 ,error ){_adbcf ,_afbgb :=_dfefc .ToFloat64Array ();if _afbgb !=nil {_bb .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfefc ,_afbgb );
};switch len (_adbcf ){case 1:return _adbcf [0],nil ;case 3:_feeag :=PdfColorspaceDeviceRGB {};_bcdcg ,_befac :=_feeag .ColorFromFloats (_adbcf );if _befac !=nil {return 0.0,_befac ;};return _bcdcg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dbadf :=PdfColorspaceDeviceCMYK {};
_fcedg ,_ecded :=_dbadf .ColorFromFloats (_adbcf );if _ecded !=nil {return 0.0,_ecded ;};_cgcaf ,_ecded :=_dbadf .ColorToRGB (_fcedg .(*PdfColorDeviceCMYK ));if _ecded !=nil {return 0.0,_ecded ;};return _cgcaf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_afbgb =_fd .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_bb .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfefc ,_afbgb );
return 0.0,_afbgb ;};

// C returns the value of the cyan component of the color.
func (_fcgf *PdfColorDeviceCMYK )C ()float64 {return _fcgf [0]};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_afdf *PdfPageResources )HasFontByName (keyName _bbgb .PdfObjectName )bool {_ ,_fdcd :=_afdf .GetFontByName (keyName );return _fdcd ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gfgdf *VRI )ToPdfObject ()*_bbgb .PdfObjectDictionary {_gcbgc :=_bbgb .MakeDict ();_gcbgc .SetIfNotNil (_bbgb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ggagd (_gfgdf .Cert ));_gcbgc .SetIfNotNil (_bbgb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ggagd (_gfgdf .OCSP ));
_gcbgc .SetIfNotNil (_bbgb .PdfObjectName ("\u0043\u0052\u004c"),_ggagd (_gfgdf .CRL ));_gcbgc .SetIfNotNil ("\u0054\u0055",_gfgdf .TU );_gcbgc .SetIfNotNil ("\u0054\u0053",_gfgdf .TS );return _gcbgc ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bbgb .StreamEncoder ;FormType _bbgb .PdfObject ;BBox _bbgb .PdfObject ;Matrix _bbgb .PdfObject ;Resources *PdfPageResources ;Group _bbgb .PdfObject ;Ref _bbgb .PdfObject ;MetaData _bbgb .PdfObject ;PieceInfo _bbgb .PdfObject ;
LastModified _bbgb .PdfObject ;StructParent _bbgb .PdfObject ;StructParents _bbgb .PdfObject ;OPI _bbgb .PdfObject ;OC _bbgb .PdfObject ;Name _bbgb .PdfObject ;

// Stream data.
Stream []byte ;_ddad *_bbgb .PdfObjectStream ;};func (_adcc *PdfReader )newPdfActionJavaScriptFromDict (_bdf *_bbgb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bdf .Get ("\u004a\u0053")},nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// AddFont adds a font dictionary to the Font resources.
func (_gaagd *PdfPage )AddFont (name _bbgb .PdfObjectName ,font _bbgb .PdfObject )error {if _gaagd .Resources ==nil {_gaagd .Resources =NewPdfPageResources ();};if _gaagd .Resources .Font ==nil {_gaagd .Resources .Font =_bbgb .MakeDict ();};_bgbgb ,_ddeeb :=_bbgb .TraceToDirectObject (_gaagd .Resources .Font ).(*_bbgb .PdfObjectDictionary );
if !_ddeeb {_bb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bbgb .TraceToDirectObject (_gaagd .Resources .Font ));
return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgbgb .Set (name ,font );return nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gcdd *PdfAnnotation )GetContext ()PdfModel {if _gcdd ==nil {return nil ;};return _gcdd ._cged ;};func (_gdedf *LTV )validateSig (_ffefe *PdfSignature )error {if _ffefe ==nil ||_ffefe .Contents ==nil ||len (_ffefe .Contents .Bytes ())==0{return _d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_ffefe );
};return nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bbgb .PdfObject ;Q _bbgb .PdfObject ;RC _bbgb .PdfObject ;DS _bbgb .PdfObject ;CL _bbgb .PdfObject ;IT _bbgb .PdfObject ;BE _bbgb .PdfObject ;RD _bbgb .PdfObject ;BS _bbgb .PdfObject ;
LE _bbgb .PdfObject ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bbgb .PdfObjectString ;Q *_bbgb .PdfObjectInteger ;DS *_bbgb .PdfObjectString ;RV _bbgb .PdfObject ;MaxLen *_bbgb .PdfObjectInteger ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_defc *PdfReader )GetNameDictionary ()(_bbgb .PdfObject ,error ){_affgf :=_bbgb .ResolveReference (_defc ._facae .Get ("\u004e\u0061\u006de\u0073"));if _affgf ==nil {return nil ,nil ;};if !_defc ._adbbb {_fgded :=_defc .traverseObjectData (_affgf );
if _fgded !=nil {return nil ,_fgded ;};};return _affgf ,nil ;};func (_bdbgb *PdfWriter )hasObject (_ffgba _bbgb .PdfObject )bool {_ ,_aeecd :=_bdbgb ._bfded [_ffgba ];return _aeecd ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_badff *PdfColorspaceICCBased )ToPdfObject ()_bbgb .PdfObject {_cccef :=&_bbgb .PdfObjectArray {};_cccef .Append (_bbgb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _gbfb *_bbgb .PdfObjectStream ;if _badff ._fafe !=nil {_gbfb =_badff ._fafe ;
}else {_gbfb =&_bbgb .PdfObjectStream {};};_egdgc :=_bbgb .MakeDict ();_egdgc .Set ("\u004e",_bbgb .MakeInteger (int64 (_badff .N )));if _badff .Alternate !=nil {_egdgc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_badff .Alternate .ToPdfObject ());
};if _badff .Metadata !=nil {_egdgc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_badff .Metadata );};if _badff .Range !=nil {var _edgb []_bbgb .PdfObject ;for _ ,_bbad :=range _badff .Range {_edgb =append (_edgb ,_bbgb .MakeFloat (_bbad ));
};_egdgc .Set ("\u0052\u0061\u006eg\u0065",_bbgb .MakeArray (_edgb ...));};_egdgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_badff .Data ))));_gbfb .Stream =_badff .Data ;_gbfb .PdfObjectDictionary =_egdgc ;_cccef .Append (_gbfb );
if _badff ._edca !=nil {_badff ._edca .PdfObject =_cccef ;return _badff ._edca ;};return _cccef ;};

// ToPdfObject implements interface PdfModel.
func (_bacdd *PdfAnnotationLine )ToPdfObject ()_bbgb .PdfObject {_bacdd .PdfAnnotation .ToPdfObject ();_ccgg :=_bacdd ._bce ;_fffc :=_ccgg .PdfObject .(*_bbgb .PdfObjectDictionary );_bacdd .PdfAnnotationMarkup .appendToPdfDictionary (_fffc );_fffc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u004c\u0069\u006e\u0065"));
_fffc .SetIfNotNil ("\u004c",_bacdd .L );_fffc .SetIfNotNil ("\u0042\u0053",_bacdd .BS );_fffc .SetIfNotNil ("\u004c\u0045",_bacdd .LE );_fffc .SetIfNotNil ("\u0049\u0043",_bacdd .IC );_fffc .SetIfNotNil ("\u004c\u004c",_bacdd .LL );_fffc .SetIfNotNil ("\u004c\u004c\u0045",_bacdd .LLE );
_fffc .SetIfNotNil ("\u0043\u0061\u0070",_bacdd .Cap );_fffc .SetIfNotNil ("\u0049\u0054",_bacdd .IT );_fffc .SetIfNotNil ("\u004c\u004c\u004f",_bacdd .LLO );_fffc .SetIfNotNil ("\u0043\u0050",_bacdd .CP );_fffc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bacdd .Measure );
_fffc .SetIfNotNil ("\u0043\u004f",_bacdd .CO );return _ccgg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gfcbc pdfCIDFontType2 )GetRuneMetrics (r rune )(_add .CharMetrics ,bool ){_gaaad ,_feac :=_gfcbc ._dfcac [r ];if !_feac {_feeef ,_cdbgb :=_bbgb .GetInt (_gfcbc .DW );if !_cdbgb {return _add .CharMetrics {},false ;};_gaaad =int (*_feeef );};return _add .CharMetrics {Wx :float64 (_gaaad )},true ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dfdg pdfFontType3 )GetRuneMetrics (r rune )(_add .CharMetrics ,bool ){_aaege :=_dfdg .Encoder ();if _aaege ==nil {_bb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dfdg );
return _add .CharMetrics {},false ;};_gbfba ,_dgba :=_aaege .RuneToCharcode (r );if !_dgba {if r !=' '{_bb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dfdg );
};return _add .CharMetrics {},false ;};_fafgc ,_cabec :=_dfdg .GetCharMetrics (_gbfba );return _fafgc ,_cabec ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bbgb .PdfObject ;Volume _bbgb .PdfObject ;Synchronous _bbgb .PdfObject ;Repeat _bbgb .PdfObject ;Mix _bbgb .PdfObject ;};

// SetForms sets the Acroform for a PDF file.
func (_aafdg *PdfWriter )SetForms (form *PdfAcroForm )error {_aafdg ._agfeb =form ;return nil };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bfdc *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bfdc .ToPdfOutline ().PdfOutlineTreeNode ;};func _ceac (_dbfg *_bbgb .PdfObjectDictionary ,_accdb *fontCommon )(*pdfCIDFontType2 ,error ){if _accdb ._fagd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_accdb );
return nil ,_bbgb .ErrRangeError ;};_dfddd :=_aebac (_accdb );_afdb ,_faeg :=_bbgb .GetDict (_dbfg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_faeg {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_accdb );
return nil ,ErrRequiredAttributeMissing ;};_dfddd .CIDSystemInfo =_afdb ;_dfddd .DW =_dbfg .Get ("\u0044\u0057");_dfddd .W =_dbfg .Get ("\u0057");_dfddd .DW2 =_dbfg .Get ("\u0044\u0057\u0032");_dfddd .W2 =_dbfg .Get ("\u0057\u0032");_dfddd .CIDToGIDMap =_dbfg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_dfddd ._fbaaf =1000.0;if _eeedd ,_fece :=_bbgb .GetNumberAsFloat (_dfddd .DW );_fece ==nil {_dfddd ._fbaaf =_eeedd ;};_ceef ,_egdcg :=_ecaa (_dfddd .W );if _egdcg !=nil {return nil ,_egdcg ;};if _ceef ==nil {_ceef =map[_gcc .CharCode ]float64 {};};_dfddd ._daad =_ceef ;
return _dfddd ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_ebgc *modelManager )GetModelFromPrimitive (primitive _bbgb .PdfObject )PdfModel {model ,_bedg :=_ebgc ._abbge [primitive ];if !_bedg {return nil ;};return model ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fccbg *PdfFontDescriptor )ToPdfObject ()_bbgb .PdfObject {_abcf :=_bbgb .MakeDict ();if _fccbg ._gaeg ==nil {_fccbg ._gaeg =&_bbgb .PdfIndirectObject {};};_fccbg ._gaeg .PdfObject =_abcf ;_abcf .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _fccbg .FontName !=nil {_abcf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fccbg .FontName );};if _fccbg .FontFamily !=nil {_abcf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fccbg .FontFamily );};if _fccbg .FontStretch !=nil {_abcf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fccbg .FontStretch );
};if _fccbg .FontWeight !=nil {_abcf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fccbg .FontWeight );};if _fccbg .Flags !=nil {_abcf .Set ("\u0046\u006c\u0061g\u0073",_fccbg .Flags );};if _fccbg .FontBBox !=nil {_abcf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fccbg .FontBBox );
};if _fccbg .ItalicAngle !=nil {_abcf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fccbg .ItalicAngle );};if _fccbg .Ascent !=nil {_abcf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fccbg .Ascent );};if _fccbg .Descent !=nil {_abcf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fccbg .Descent );
};if _fccbg .Leading !=nil {_abcf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fccbg .Leading );};if _fccbg .CapHeight !=nil {_abcf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fccbg .CapHeight );};if _fccbg .XHeight !=nil {_abcf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fccbg .XHeight );
};if _fccbg .StemV !=nil {_abcf .Set ("\u0053\u0074\u0065m\u0056",_fccbg .StemV );};if _fccbg .StemH !=nil {_abcf .Set ("\u0053\u0074\u0065m\u0048",_fccbg .StemH );};if _fccbg .AvgWidth !=nil {_abcf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fccbg .AvgWidth );
};if _fccbg .MaxWidth !=nil {_abcf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fccbg .MaxWidth );};if _fccbg .MissingWidth !=nil {_abcf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fccbg .MissingWidth );};if _fccbg .FontFile !=nil {_abcf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fccbg .FontFile );
};if _fccbg .FontFile2 !=nil {_abcf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fccbg .FontFile2 );};if _fccbg .FontFile3 !=nil {_abcf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fccbg .FontFile3 );};if _fccbg .CharSet !=nil {_abcf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fccbg .CharSet );
};if _fccbg .Style !=nil {_abcf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fccbg .FontName );};if _fccbg .Lang !=nil {_abcf .Set ("\u004c\u0061\u006e\u0067",_fccbg .Lang );};if _fccbg .FD !=nil {_abcf .Set ("\u0046\u0044",_fccbg .FD );};
if _fccbg .CIDSet !=nil {_abcf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fccbg .CIDSet );};return _fccbg ._gaeg ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gecc ,_debdd :=_baecf (basefont );if _debdd !=nil {return nil ,_debdd ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gecc ._fddbf =_gcc .NewWinAnsiEncoder ();};return &PdfFont {_efcd :&_gecc },nil ;
};func (_effg *PdfReader )newPdfActionGotoEFromDict (_debg *_bbgb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dga ,_cge :=_cfg (_debg .Get ("\u0046"));if _cge !=nil {return nil ,_cge ;};return &PdfActionGoToE {D :_debg .Get ("\u0044"),NewWindow :_debg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_debg .Get ("\u0054"),F :_dga },nil ;
};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_bfdfc *DSS )ToPdfObject ()_bbgb .PdfObject {_eeba :=_bfdfc ._abgcb .PdfObject .(*_bbgb .PdfObjectDictionary );_eeba .Clear ();_gacba :=_bbgb .MakeDict ();for _faefe ,_egdc :=range _bfdfc .VRI {_gacba .Set (*_bbgb .MakeName (_faefe ),_egdc .ToPdfObject ());
};_eeba .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ggagd (_bfdfc .Certs ));_eeba .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ggagd (_bfdfc .OCSPs ));_eeba .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ggagd (_bfdfc .CRLs ));_eeba .Set ("\u0056\u0052\u0049",_gacba );
return _bfdfc ._abgcb ;};func _aagd ()_a .Time {_baae .Lock ();defer _baae .Unlock ();return _gbff };

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bbgb .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _adcbb *_bbgb .PdfIndirectObject ;var _cgbb *_bbgb .PdfObjectName ;var _efa *_bbgb .PdfObjectArray ;if _bcfc ,_cfaf :=obj .(*_bbgb .PdfIndirectObject );
_cfaf {_adcbb =_bcfc ;};obj =_bbgb .TraceToDirectObject (obj );switch _cggc :=obj .(type ){case *_bbgb .PdfObjectArray :_efa =_cggc ;case *_bbgb .PdfObjectName :_cgbb =_cggc ;};if _cgbb !=nil {switch *_cgbb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_bb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cgbb );return nil ,_dfgbe ;};};if _efa !=nil &&_efa .Len ()> 0{var _cddb _bbgb .PdfObject =_adcbb ;
if _adcbb ==nil {_cddb =_efa ;};if _bgb ,_gadfb :=_bbgb .GetName (_efa .Get (0));_gadfb {switch _bgb .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _efa .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _efa .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _efa .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _eaag (_cddb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _aede (_cddb );
case "\u004c\u0061\u0062":return _cfgb (_cddb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dacc (_cddb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ddfe (_cddb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _ccgef (_cddb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fcgc (_cddb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _dbceg (_cddb );default:_bb .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bgb );
};};};_bb .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bbgdce *PdfPage )Duplicate ()*PdfPage {_acff :=*_bbgdce ;_acff ._afebd =_bbgb .MakeDict ();_acff ._efbe =_bbgb .MakeIndirectObject (_acff ._afebd );return &_acff ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gdaag *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gdaag .Base ==nil {return nil ,_fd .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gdaag .Base .ColorToRGB (color );};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gbdec *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_geece :=_gbdec .GetContentStreamObjs ();wrapContents =wrapContents &&len (_geece )> 0;_bgdggf :=_bbgb .NewFlateEncoder ();_gcdcb :=_bbgb .MakeArray ();if wrapContents {_ddef ,_fgbcb :=_bbgb .MakeStream ([]byte ("\u0071\u000a"),_bgdggf );
if _fgbcb !=nil {return _fgbcb ;};_gcdcb .Append (_ddef );};_gcdcb .Append (_geece ...);if wrapContents {_ggbcb ,_afgg :=_bbgb .MakeStream ([]byte ("\u000a\u0051\u000a"),_bgdggf );if _afgg !=nil {return _afgg ;};_gcdcb .Append (_ggbcb );};_afeed ,_dacgb :=_bbgb .MakeStream (cs ,_bgdggf );
if _dacgb !=nil {return _dacgb ;};_gcdcb .Append (_afeed );_gbdec .Contents =_gcdcb ;return nil ;};func (_afeb *Image )resampleLowBits (_gfabd []uint32 ){_adeb :=_ae .BytesPerLine (int (_afeb .Width ),int (_afeb .BitsPerComponent ),_afeb .ColorComponents );
_febff :=make ([]byte ,_afeb .ColorComponents *_adeb *int (_afeb .Height ));_gaade :=int (_afeb .BitsPerComponent )*_afeb .ColorComponents *int (_afeb .Width );_ccbbg :=uint8 (8);var (_debbf ,_dbegc int ;_cece uint32 ;);for _dddbec :=0;_dddbec < int (_afeb .Height );
_dddbec ++{_dbegc =_dddbec *_adeb ;for _edcac :=0;_edcac < _gaade ;_edcac ++{_cece =_gfabd [_debbf ];_ccbbg -=uint8 (_afeb .BitsPerComponent );_febff [_dbegc ]|=byte (_cece )<<_ccbbg ;if _ccbbg ==0{_ccbbg =8;_dbegc ++;};_debbf ++;};};_afeb .Data =_febff ;
};func (_gaagb *pdfFontSimple )updateStandard14Font (){_ebfcb ,_aacgg :=_gaagb .Encoder ().(_gcc .SimpleEncoder );if !_aacgg {_bb .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_gaagb .Encoder (),_gaagb );
return ;};_gbfdc :=_ebfcb .Charcodes ();_gaagb ._ceec =make (map[_gcc .CharCode ]float64 ,len (_gbfdc ));for _ ,_cfaca :=range _gbfdc {_aggd ,_ :=_ebfcb .CharcodeToRune (_cfaca );_cabad ,_ :=_gaagb ._eeff .Read (_aggd );_gaagb ._ceec [_cfaca ]=_cabad .Wx ;
};};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bfde *PdfPage )GetContentStreamObjs ()[]_bbgb .PdfObject {if _bfde .Contents ==nil {return nil ;};_dbgdf :=_bbgb .TraceToDirectObject (_bfde .Contents );if _edefg ,_abggc :=_dbgdf .(*_bbgb .PdfObjectArray );_abggc {return _edefg .Elements ();};return []_bbgb .PdfObject {_dbgdf };
};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ffac :=NewPdfAnnotation ();_ecfd :=&PdfAnnotationWidget {};_ecfd .PdfAnnotation =_ffac ;_ffac .SetContext (_ecfd );return _ecfd ;};func (_abgb *PdfReader )newPdfAnnotationWatermarkFromDict (_bdeb *_bbgb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_aeea :=PdfAnnotationWatermark {};
_aeea .FixedPrint =_bdeb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_aeea ,nil ;};func (_gccab *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gccab ._eaega };func _agcaf (_gaff *_bbgb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_cfae :=PdfShadingType2 {};
_ggcb :=_gaff .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ggcb ==nil {_bb .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gcdbeb ,_bcfb :=_ggcb .(*_bbgb .PdfObjectArray );if !_bcfb {_bb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggcb );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcdbeb .Len ()!=4{_bb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gcdbeb .Len ());
return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_cfae .Coords =_gcdbeb ;if _ceadec :=_gaff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ceadec !=nil {_ceadec =_bbgb .TraceToDirectObject (_ceadec );
_eegff ,_ecec :=_ceadec .(*_bbgb .PdfObjectArray );if !_ecec {_bb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceadec );return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cfae .Domain =_eegff ;};_ggcb =_gaff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggcb ==nil {_bb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cfae .Function =[]PdfFunction {};if _bdaggc ,_afca :=_ggcb .(*_bbgb .PdfObjectArray );_afca {for _ ,_bface :=range _bdaggc .Elements (){_ccaaba ,_cfacd :=_cdfb (_bface );if _cfacd !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfacd );
return nil ,_cfacd ;};_cfae .Function =append (_cfae .Function ,_ccaaba );};}else {_aega ,_ebcg :=_cdfb (_ggcb );if _ebcg !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebcg );
return nil ,_ebcg ;};_cfae .Function =append (_cfae .Function ,_aega );};if _gccage :=_gaff .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gccage !=nil {_gccage =_bbgb .TraceToDirectObject (_gccage );_cgaag ,_gcbea :=_gccage .(*_bbgb .PdfObjectArray );
if !_gcbea {_bb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gccage );return nil ,_bbgb .ErrTypeError ;};if _cgaag .Len ()!=2{_bb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cgaag .Len ());
return nil ,ErrInvalidAttribute ;};_cfae .Extend =_cgaag ;};return &_cfae ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ccaff *pdfFontSimple )SetEncoder (encoder _gcc .TextEncoder ){_ccaff ._fddbf =encoder };

// AddAnnotation appends `annot` to the list of page annotations.
func (_faeab *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _faeab ._bccg ==nil {_faeab .GetAnnotations ();};_faeab ._bccg =append (_faeab ._bccg ,annot );};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gefba *PdfShadingPattern )ToPdfObject ()_bbgb .PdfObject {_gefba .PdfPattern .ToPdfObject ();_caaade :=_gefba .getDict ();if _gefba .Shading !=nil {_caaade .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gefba .Shading .ToPdfObject ());};if _gefba .Matrix !=nil {_caaade .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gefba .Matrix );
};if _gefba .ExtGState !=nil {_caaade .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gefba .ExtGState );};return _gefba ._gdgafe ;};func _gfba (_ggdag *_bbgb .PdfObjectDictionary ,_gcgf *fontCommon )(*pdfCIDFontType0 ,error ){if _gcgf ._fagd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gcgf );
return nil ,_bbgb .ErrRangeError ;};_eegae :=_ecdf (_gcgf );_gebba ,_ggbe :=_bbgb .GetDict (_ggdag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ggbe {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcgf );
return nil ,ErrRequiredAttributeMissing ;};_eegae .CIDSystemInfo =_gebba ;_eegae .DW =_ggdag .Get ("\u0044\u0057");_eegae .W =_ggdag .Get ("\u0057");_eegae .DW2 =_ggdag .Get ("\u0044\u0057\u0032");_eegae .W2 =_ggdag .Get ("\u0057\u0032");_eegae ._ccbee =1000.0;
if _dfca ,_bgga :=_bbgb .GetNumberAsFloat (_eegae .DW );_bgga ==nil {_eegae ._ccbee =_dfca ;};_ggca ,_afda :=_ecaa (_eegae .W );if _afda !=nil {return nil ,_afda ;};if _ggca ==nil {_ggca =map[_gcc .CharCode ]float64 {};};_eegae ._dadfd =_ggca ;return _eegae ,nil ;
};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fadd *PdfFont )ToUnicode ()string {if _fadd .baseFields ()._aafb ==nil {return "";};return _fadd .baseFields ()._aafb .Name ();};func _fafg (_afaac _bbgb .PdfObject )(*_bbgb .PdfObjectDictionary ,*fontCommon ,error ){_bcde :=&fontCommon {};if _gbec ,_adab :=_afaac .(*_bbgb .PdfIndirectObject );
_adab {_bcde ._dfacd =_gbec .ObjectNumber ;};_acec ,_dfgae :=_bbgb .GetDict (_afaac );if !_dfgae {_bb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_afaac );
return nil ,nil ,ErrFontNotSupported ;};_fabf ,_dfgae :=_bbgb .GetNameVal (_acec .Get ("\u0054\u0079\u0070\u0065"));if !_dfgae {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fabf !="\u0046\u006f\u006e\u0074"{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fabf ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bbgb .ErrTypeError ;};_fecfa ,_dfgae :=_bbgb .GetNameVal (_acec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dfgae {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_bcde ._fagd =_fecfa ;_cbbe ,_dfgae :=_bbgb .GetNameVal (_acec .Get ("\u004e\u0061\u006d\u0065"));if _dfgae {_bcde ._beedc =_cbbe ;};_cbbf :=_acec .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cbbf !=nil {_bcde ._ddbff =_bbgb .TraceToDirectObject (_cbbf );
_dbgbd ,_bfaba :=_edgbc (_bcde ._ddbff ,_bcde );if _bfaba !=nil {return _acec ,_bcde ,_bfaba ;};_bcde ._aafb =_dbgbd ;}else if _fecfa =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fecfa =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dedeg ,_dedd :=_afg .NewCIDSystemInfo (_acec .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _dedd !=nil {return _acec ,_bcde ,_dedd ;};_dgebg :=_d .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dedeg .Registry ,_dedeg .Ordering );if _afg .IsPredefinedCMap (_dgebg ){_bcde ._aafb ,_dedd =_afg .LoadPredefinedCMap (_dgebg );
if _dedd !=nil {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dgebg ,_dedd );
};};};_acaac :=_acec .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _acaac !=nil {_adbd ,_fdddg :=_aeae (_acaac );if _fdddg !=nil {_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fdddg );
return _acec ,_bcde ,_fdddg ;};_bcde ._eaega =_adbd ;};if _fecfa !="\u0054\u0079\u0070e\u0033"{_dfccg ,_ecadd :=_bbgb .GetNameVal (_acec .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_ecadd {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _acec ,_bcde ,ErrRequiredAttributeMissing ;};_bcde ._debfe =_dfccg ;};return _acec ,_bcde ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_debfc *XObjectImage )ToImage ()(*Image ,error ){_bdgde :=&Image {};if _debfc .Height ==nil {return nil ,_fd .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bdgde .Height =*_debfc .Height ;if _debfc .Width ==nil {return nil ,_fd .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bdgde .Width =*_debfc .Width ;if _debfc .BitsPerComponent ==nil {switch _debfc .Filter .(type ){case *_bbgb .CCITTFaxEncoder ,*_bbgb .JBIG2Encoder :_bdgde .BitsPerComponent =1;
case *_bbgb .LZWEncoder ,*_bbgb .RunLengthEncoder :_bdgde .BitsPerComponent =8;default:return nil ,_fd .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bdgde .BitsPerComponent =*_debfc .BitsPerComponent ;};_bdgde .ColorComponents =_debfc .ColorSpace .GetNumComponents ();_debfc ._gffd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbgb .MakeInteger (int64 (_bdgde .ColorComponents )));
_efgbb ,_beaa :=_bbgb .DecodeStream (_debfc ._gffd );if _beaa !=nil {return nil ,_beaa ;};_bdgde .Data =_efgbb ;if _debfc .Decode !=nil {_dbcdb ,_dadgec :=_debfc .Decode .(*_bbgb .PdfObjectArray );if !_dadgec {_bb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bbdfa ,_gbef :=_dbcdb .ToFloat64Array ();if _gbef !=nil {return nil ,_gbef ;};_bdgde ._baegcb =_bbdfa ;};return _bdgde ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_gabc :=PdfColorDeviceRGB {r ,g ,b };return &_gabc ;};type fontFile struct{_agfc string ;_gdaab string ;_cegc _gcc .SimpleEncoder ;};

// ToPdfObject implements interface PdfModel.
func (_begc *PdfAnnotationFreeText )ToPdfObject ()_bbgb .PdfObject {_begc .PdfAnnotation .ToPdfObject ();_dec :=_begc ._bce ;_eag :=_dec .PdfObject .(*_bbgb .PdfObjectDictionary );_begc .PdfAnnotationMarkup .appendToPdfDictionary (_eag );_eag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_eag .SetIfNotNil ("\u0044\u0041",_begc .DA );_eag .SetIfNotNil ("\u0051",_begc .Q );_eag .SetIfNotNil ("\u0052\u0043",_begc .RC );_eag .SetIfNotNil ("\u0044\u0053",_begc .DS );_eag .SetIfNotNil ("\u0043\u004c",_begc .CL );_eag .SetIfNotNil ("\u0049\u0054",_begc .IT );
_eag .SetIfNotNil ("\u0042\u0045",_begc .BE );_eag .SetIfNotNil ("\u0052\u0044",_begc .RD );_eag .SetIfNotNil ("\u0042\u0053",_begc .BS );_eag .SetIfNotNil ("\u004c\u0045",_begc .LE );return _dec ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_geeef :=&PdfColorspaceSpecialSeparation {};return _geeef ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_adb :=NewPdfAnnotation ();_bgg :=&PdfAnnotationScreen {};_bgg .PdfAnnotation =_adb ;_adb .SetContext (_bgg );return _bgg ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_afbcf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _abcfg []*PdfOutlineTreeNode ;var _bgeg []string ;var _gdaeee func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gdaeee =func (_ddcfc *PdfOutlineTreeNode ,_eeccc *[]*PdfOutlineTreeNode ,_dfab *[]string ,_gfbb int ){if _ddcfc ==nil {return ;
};if _ddcfc ._efef ==nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gdbd ,_fbaec :=_ddcfc ._efef .(*PdfOutlineItem );if _fbaec {*_eeccc =append (*_eeccc ,&_gdbd .PdfOutlineTreeNode );
_eddef :=_df .Repeat ("\u0020",_gfbb *2)+_gdbd .Title .Decoded ();*_dfab =append (*_dfab ,_eddef );};if _ddcfc .First !=nil {_abbfae :=_df .Repeat ("\u0020",_gfbb *2)+"\u002b";*_dfab =append (*_dfab ,_abbfae );_gdaeee (_ddcfc .First ,_eeccc ,_dfab ,_gfbb +1);
};if _fbaec &&_gdbd .Next !=nil {_gdaeee (_gdbd .Next ,_eeccc ,_dfab ,_gfbb );};};_gdaeee (_afbcf ._cgcac ,&_abcfg ,&_bgeg ,0);return _abcfg ,_bgeg ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _a .Time ){_baae .Lock ();defer _baae .Unlock ();_beebg =creationDate ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_cgefd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _cgefd .MediaBox !=nil {return _cgefd .MediaBox ,nil ;};_aabb :=_cgefd .Parent ;for _aabb !=nil {_abgfc ,_ebec :=_bbgb .GetDict (_aabb );if !_ebec {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _eceae :=_abgfc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_eceae !=nil {_aadaa ,_cgddb :=_bbgb .GetArray (_eceae );if !_cgddb {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_agae ,_eafg :=NewPdfRectangle (*_aadaa );if _eafg !=nil {return nil ,_eafg ;};return _agae ,nil ;};_aabb =_abgfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fd .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject implements interface PdfModel.
func (_baf *PdfActionURI )ToPdfObject ()_bbgb .PdfObject {_baf .PdfAction .ToPdfObject ();_egb :=_baf ._dce ;_fdce :=_egb .PdfObject .(*_bbgb .PdfObjectDictionary );_fdce .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeURI )));_fdce .SetIfNotNil ("\u0055\u0052\u0049",_baf .URI );
_fdce .SetIfNotNil ("\u0049\u0073\u004da\u0070",_baf .IsMap );return _egb ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_abecec pdfFontType3 )GetCharMetrics (code _gcc .CharCode )(_add .CharMetrics ,bool ){if _cgcfe ,_bgdc :=_abecec ._baage [code ];_bgdc {return _add .CharMetrics {Wx :_cgcfe },true ;};if _add .IsStdFont (_add .StdFontName (_abecec ._debfe )){return _add .CharMetrics {Wx :250},true ;
};return _add .CharMetrics {},false ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_dabb :_bbgb .MakeIndirectObject (_bbgb .MakeDict ())};};

// ToPdfObject implements interface PdfModel.
func (_gbgc *PdfActionGoToR )ToPdfObject ()_bbgb .PdfObject {_gbgc .PdfAction .ToPdfObject ();_fdf :=_gbgc ._dce ;_dea :=_fdf .PdfObject .(*_bbgb .PdfObjectDictionary );_dea .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeGoToR )));if _gbgc .F !=nil {_dea .Set ("\u0046",_gbgc .F .ToPdfObject ());
};_dea .SetIfNotNil ("\u0044",_gbgc .D );_dea .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gbgc .NewWindow );return _fdf ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_aebg :=NewPdfAnnotation ();_bgde :=&PdfAnnotationSquiggly {};_bgde .PdfAnnotation =_aebg ;_bgde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aebg .SetContext (_bgde );return _bgde ;};func _bffgg (_aacfb *_bbgb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebegf :=&PdfTilingPattern {};
_ccgcc :=_aacfb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ccgcc ==nil {_bb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fgfd ,_gcfff :=_ccgcc .(*_bbgb .PdfObjectInteger );
if !_gcfff {_bb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ccgcc );return nil ,_bbgb .ErrTypeError ;
};_ebegf .PaintType =_fgfd ;_ccgcc =_aacfb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ccgcc ==nil {_bb .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dada ,_gcfff :=_ccgcc .(*_bbgb .PdfObjectInteger );if !_gcfff {_bb .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccgcc );
return nil ,_bbgb .ErrTypeError ;};_ebegf .TilingType =_dada ;_ccgcc =_aacfb .Get ("\u0042\u0042\u006f\u0078");if _ccgcc ==nil {_bb .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ccgcc =_bbgb .TraceToDirectObject (_ccgcc );_fcbed ,_gcfff :=_ccgcc .(*_bbgb .PdfObjectArray );if !_gcfff {_bb .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccgcc );
return nil ,_bbgb .ErrTypeError ;};_ceade ,_fafc :=NewPdfRectangle (*_fcbed );if _fafc !=nil {_bb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fafc );return nil ,_fafc ;};_ebegf .BBox =_ceade ;_ccgcc =_aacfb .Get ("\u0058\u0053\u0074e\u0070");
if _ccgcc ==nil {_bb .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_acga ,_fafc :=_bbgb .GetNumberAsFloat (_ccgcc );if _fafc !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_acga );
return nil ,_fafc ;};_ebegf .XStep =_bbgb .MakeFloat (_acga );_ccgcc =_aacfb .Get ("\u0059\u0053\u0074e\u0070");if _ccgcc ==nil {_bb .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_abcb ,_fafc :=_bbgb .GetNumberAsFloat (_ccgcc );if _fafc !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_abcb );
return nil ,_fafc ;};_ebegf .YStep =_bbgb .MakeFloat (_abcb );_ccgcc =_aacfb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ccgcc ==nil {_bb .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aacfb ,_gcfff =_bbgb .TraceToDirectObject (_ccgcc ).(*_bbgb .PdfObjectDictionary );if !_gcfff {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ccgcc );
};_fcefb ,_fafc :=NewPdfPageResourcesFromDict (_aacfb );if _fafc !=nil {return nil ,_fafc ;};_ebegf .Resources =_fcefb ;if _fceea :=_aacfb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fceea !=nil {_fgad ,_cdcad :=_fceea .(*_bbgb .PdfObjectArray );if !_cdcad {_bb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fceea );
return nil ,_bbgb .ErrTypeError ;};_ebegf .Matrix =_fgad ;};return _ebegf ,nil ;};func (_ggefb *PdfWriter )writeXRefStreams (_aeaad int ,_cafcf int64 )error {_bbedb :=_aeaad +1;_ggefb ._caadc [_bbedb ]=crossReference {Type :1,ObjectNumber :_bbedb ,Offset :_cafcf };
_ceafe :=_gag .NewBuffer (nil );_eebaf :=_bbgb .MakeArray ();for _gcga :=0;_gcga <=_aeaad ;{for ;_gcga <=_aeaad ;_gcga ++{_fccbe ,_eacgb :=_ggefb ._caadc [_gcga ];if _eacgb &&(!_ggefb ._aadfb ||_ggefb ._aadfb &&(_fccbe .Type ==1&&_fccbe .Offset >=_ggefb ._ddccg ||_fccbe .Type ==0)){break ;
};};var _ecbb int ;for _ecbb =_gcga +1;_ecbb <=_aeaad ;_ecbb ++{_afcfd ,_ceag :=_ggefb ._caadc [_ecbb ];if _ceag &&(!_ggefb ._aadfb ||_ggefb ._aadfb &&(_afcfd .Type ==1&&_afcfd .Offset > _ggefb ._ddccg )){continue ;};break ;};_eebaf .Append (_bbgb .MakeInteger (int64 (_gcga )),_bbgb .MakeInteger (int64 (_ecbb -_gcga )));
for _fdfadd :=_gcga ;_fdfadd < _ecbb ;_fdfadd ++{_adbfd :=_ggefb ._caadc [_fdfadd ];switch _adbfd .Type {case 0:_eg .Write (_ceafe ,_eg .BigEndian ,byte (0));_eg .Write (_ceafe ,_eg .BigEndian ,uint32 (0));_eg .Write (_ceafe ,_eg .BigEndian ,uint16 (0xFFFF));
case 1:_eg .Write (_ceafe ,_eg .BigEndian ,byte (1));_eg .Write (_ceafe ,_eg .BigEndian ,uint32 (_adbfd .Offset ));_eg .Write (_ceafe ,_eg .BigEndian ,uint16 (_adbfd .Generation ));case 2:_eg .Write (_ceafe ,_eg .BigEndian ,byte (2));_eg .Write (_ceafe ,_eg .BigEndian ,uint32 (_adbfd .ObjectNumber ));
_eg .Write (_ceafe ,_eg .BigEndian ,uint16 (_adbfd .Index ));};};_gcga =_ecbb +1;};_fbddg ,_egcedc :=_bbgb .MakeStream (_ceafe .Bytes (),_bbgb .NewFlateEncoder ());if _egcedc !=nil {return _egcedc ;};_fbddg .ObjectNumber =int64 (_bbedb );_fbddg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0058\u0052\u0065\u0066"));
_fbddg .PdfObjectDictionary .Set ("\u0057",_bbgb .MakeArray (_bbgb .MakeInteger (1),_bbgb .MakeInteger (4),_bbgb .MakeInteger (2)));_fbddg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_eebaf );_fbddg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bbgb .MakeInteger (int64 (_bbedb +1)));
_fbddg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ggefb ._bgfbb );_fbddg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ggefb ._dgbad );if _ggefb ._aadfb &&_ggefb ._cabbcc > 0{_fbddg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bbgb .MakeInteger (_ggefb ._cabbcc ));
};if _ggefb ._agdbe !=nil {_fbddg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ggefb ._bebbea );};if _ggefb ._ffded ==nil &&_ggefb ._eddgd !=""&&_ggefb ._cebgb !=""{_ggefb ._ffded =_bbgb .MakeArray (_bbgb .MakeHexString (_ggefb ._eddgd ),_bbgb .MakeHexString (_ggefb ._cebgb ));
};if _ggefb ._ffded !=nil {_bb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ggefb ._ffded );_fbddg .Set ("\u0049\u0044",_ggefb ._ffded );};_ggefb .writeObject (int (_fbddg .ObjectNumber ),_fbddg );return nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fdcaf *XObjectForm )GetContainingPdfObject ()_bbgb .PdfObject {return _fdcaf ._ddad };

// A returns the value of the A component of the color.
func (_ffgf *PdfColorLab )A ()float64 {return _ffgf [1]};

// GetNumPages returns the number of pages in the document.
func (_bbec *PdfReader )GetNumPages ()(int ,error ){if _bbec ._abceg .GetCrypter ()!=nil &&!_bbec ._abceg .IsAuthenticated (){return 0,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bbec ._gadg ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_acd *PdfAnnotationScreen )ToPdfObject ()_bbgb .PdfObject {_acd .PdfAnnotation .ToPdfObject ();_dfe :=_acd ._bce ;_eccf :=_dfe .PdfObject .(*_bbgb .PdfObjectDictionary );_eccf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_eccf .SetIfNotNil ("\u0054",_acd .T );_eccf .SetIfNotNil ("\u004d\u004b",_acd .MK );_eccf .SetIfNotNil ("\u0041",_acd .A );_eccf .SetIfNotNil ("\u0041\u0041",_acd .AA );return _dfe ;};var _ccgfg =_edc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");
var (ErrRequiredAttributeMissing =_fd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dfgbe =_fd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_fd .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_fd .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_ag .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bbgb .ErrNotSupported );
ErrType1CFontNotSupported =_ag .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bbgb .ErrNotSupported );
ErrType3FontNotSupported =_ag .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bbgb .ErrNotSupported );
ErrTTCmapNotSupported =_ag .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bbgb .ErrNotSupported );
ErrSignNotEnoughSpace =_ag .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ag .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_agdd :=NewPdfAnnotation ();_egbg :=&PdfAnnotationPopup {};_egbg .PdfAnnotation =_agdd ;_agdd .SetContext (_egbg );return _egbg ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dceac *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ceadg []*PdfField ;_ggdfa :=map[*_bbgb .PdfIndirectObject ]struct{}{};for _ ,_geecf :=range _dceac .PageList {_defef ,_gadge :=_geecf .GetAnnotations ();if _gadge !=nil {return _gadge ;
};for _ ,_bged :=range _defef {var _dbfa *PdfField ;switch _ecfggb :=_bged .GetContext ().(type ){case *PdfAnnotationWidget :if _ecfggb ._dagf !=nil {_dbfa =_ecfggb ._dagf ;break ;};if _cbdga ,_dccgd :=_bbgb .GetIndirect (_ecfggb .Parent );_dccgd {_dbfa ,_gadge =_dceac .newPdfFieldFromIndirectObject (_cbdga ,nil );
if _gadge ==nil {break ;};_bb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cbdga ,_gadge );
};if _ecfggb ._bce !=nil {_dbfa ,_gadge =_dceac .newPdfFieldFromIndirectObject (_ecfggb ._bce ,nil );if _gadge ==nil {break ;};_bb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecfggb ._bce ,_gadge );
};};if _dbfa ==nil {continue ;};if _ ,_gdagb :=_ggdfa [_dbfa ._bgbc ];_gdagb {continue ;};_ggdfa [_dbfa ._bgbc ]=struct{}{};_ceadg =append (_ceadg ,_dbfa );};};if len (_ceadg )==0{return nil ;};if _dceac .AcroForm ==nil {_dceac .AcroForm =NewPdfAcroForm ();
};_dceac .AcroForm .Fields =&_ceadg ;return nil ;};func (_cbagf *PdfPage )setContainer (_eegf *_bbgb .PdfIndirectObject ){_eegf .PdfObject =_cbagf ._afebd ;_cbagf ._efbe =_eegf ;};

// C returns the value of the C component of the color.
func (_dbef *PdfColorCalRGB )C ()float64 {return _dbef [2]};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_aebde *Image )Resample (targetBitsPerComponent int64 ){if _aebde .BitsPerComponent ==targetBitsPerComponent {return ;};_egcac :=_aebde .GetSamples ();if targetBitsPerComponent < _aebde .BitsPerComponent {_gfdd :=_aebde .BitsPerComponent -targetBitsPerComponent ;
for _cedc :=range _egcac {_egcac [_cedc ]>>=uint (_gfdd );};}else if targetBitsPerComponent > _aebde .BitsPerComponent {_ecdbg :=targetBitsPerComponent -_aebde .BitsPerComponent ;for _agbab :=range _egcac {_egcac [_agbab ]<<=uint (_ecdbg );};};_aebde .BitsPerComponent =targetBitsPerComponent ;
if _aebde .BitsPerComponent < 8{_aebde .resampleLowBits (_egcac );return ;};_fabd :=_ae .BytesPerLine (int (_aebde .Width ),int (_aebde .BitsPerComponent ),_aebde .ColorComponents );_fabdg :=make ([]byte ,_fabd *int (_aebde .Height ));var (_gedfc ,_eeebf ,_dfedf ,_aacff int ;
_cccea uint32 ;);for _dfedf =0;_dfedf < int (_aebde .Height );_dfedf ++{_gedfc =_dfedf *_fabd ;_eeebf =(_dfedf +1)*_fabd -1;_eecd :=_bbg .ResampleUint32 (_egcac [_gedfc :_eeebf ],int (targetBitsPerComponent ),8);for _aacff ,_cccea =range _eecd {_fabdg [_aacff +_gedfc ]=byte (_cccea );
};};_aebde .Data =_fabdg ;};func (_cbcde *PdfWriter )checkPendingObjects (){for _fcdbe ,_acfg :=range _cbcde ._cabbb {if !_cbcde .hasObject (_fcdbe ){_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fcdbe ,_fcdbe ,_fcdbe );
for _ ,_ecfda :=range _acfg {for _ ,_acefd :=range _ecfda .Keys (){_bdgcd :=_ecfda .Get (_acefd );if _bdgcd ==_fcdbe {_bb .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_ecfda .Set (_acefd ,_bbgb .MakeNull ());break ;};};};};};};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dfa :=NewPdfAnnotation ();_caee :=&PdfAnnotationInk {};_caee .PdfAnnotation =_dfa ;_caee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfa .SetContext (_caee );return _caee ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gdde *modelManager )GetPrimitiveFromModel (model PdfModel )_bbgb .PdfObject {_ceeef ,_daef :=_gdde ._gfebc [model ];if !_daef {return nil ;};return _ceeef ;};func _fbcaf (_agfgf _bbgb .PdfObject ,_gcfb bool )(*PdfFont ,error ){_aage ,_eegdf ,_ddbe :=_fafg (_agfgf );
if _aage !=nil {_bfbg (_aage );};if _ddbe !=nil {if _ddbe ==ErrType1CFontNotSupported {_dcda ,_bfec :=_ebccb (_aage ,_eegdf ,nil );if _bfec !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_eegdf ,_bfec );
return nil ,_ddbe ;};return &PdfFont {_efcd :_dcda },_ddbe ;};return nil ,_ddbe ;};_ccaa :=&PdfFont {};switch _eegdf ._fagd {case "\u0054\u0079\u0070e\u0030":if !_gcfb {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eegdf );
return nil ,_fd .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gcae ,_gbfbf :=_ggfda (_aage ,_eegdf );if _gbfbf !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eegdf ,_gbfbf );
return nil ,_gbfbf ;};_ccaa ._efcd =_gcae ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ecdb *pdfFontSimple ;_defe ,_beeb :=_add .NewStdFontByName (_add .StdFontName (_eegdf ._debfe ));
if _beeb {_agge :=_ebfg (_defe );_ccaa ._efcd =&_agge ;_bdded :=_bbgb .TraceToDirectObject (_agge .ToPdfObject ());_cfdab ,_efacd ,_egda :=_fafg (_bdded );if _egda !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_eegdf ,_agge );
return nil ,_egda ;};for _ ,_fabee :=range _aage .Keys (){_cfdab .Set (_fabee ,_aage .Get (_fabee ));};_ecdb ,_egda =_ebccb (_cfdab ,_efacd ,_agge ._geff );if _egda !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_eegdf ,_agge );
return nil ,_egda ;};_ecdb ._ceec =_agge ._ceec ;_ecdb ._eeff =_agge ._eeff ;if _ecdb ._eagg ==nil {_ecdb ._eagg =_agge ._eagg ;};}else {_ecdb ,_ddbe =_ebccb (_aage ,_eegdf ,nil );if _ddbe !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_eegdf ,_ddbe );
return nil ,_ddbe ;};};_ddbe =_ecdb .addEncoding ();if _ddbe !=nil {return nil ,_ddbe ;};if _beeb {_ecdb .updateStandard14Font ();};if _beeb &&_ecdb ._fddbf ==nil &&_ecdb ._geff ==nil {_bb .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecdb );
_bb .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_defe );};if len (_ecdb ._ceec )==0{_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ecdb );};_ccaa ._efcd =_ecdb ;
case "\u0054\u0079\u0070e\u0033":_cfcccf ,_eggfe :=_aggfd (_aage ,_eegdf );if _eggfe !=nil {_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_eggfe );
return nil ,_eggfe ;};_ccaa ._efcd =_cfcccf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ceee ,_dcgee :=_gfba (_aage ,_eegdf );if _dcgee !=nil {_bb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dcgee );
return nil ,_dcgee ;};_ccaa ._efcd =_ceee ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ccff ,_becda :=_ceac (_aage ,_eegdf );if _becda !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eegdf ,_becda );
return nil ,_becda ;};_ccaa ._efcd =_ccff ;default:_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_eegdf );
return nil ,_d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eegdf );};return _ccaa ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_ccbdd PdfDate )ToGoTime ()_a .Time {_gdaaf :=int (_ccbdd ._dgbaef *60*60+_ccbdd ._gfgdb *60);switch _ccbdd ._cgabdg {case '-':_gdaaf =-_gdaaf ;case 'Z':_gdaaf =0;};_gfbeg :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ccbdd ._cgabdg ,_ccbdd ._dgbaef ,_ccbdd ._gfgdb );
_cebg :=_a .FixedZone (_gfbeg ,_gdaaf );return _a .Date (int (_ccbdd ._ceegb ),_a .Month (_ccbdd ._ggdac ),int (_ccbdd ._fcdgb ),int (_ccbdd ._ggddg ),int (_ccbdd ._gcbcg ),int (_ccbdd ._aacd ),0,_cebg );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_beedg *PdfFieldSignature )ToPdfObject ()_bbgb .PdfObject {if _beedg .PdfAnnotationWidget !=nil {_beedg .PdfAnnotationWidget .ToPdfObject ();};_beedg .PdfField .ToPdfObject ();_cefdg :=_beedg ._bgbc ;_dbba :=_cefdg .PdfObject .(*_bbgb .PdfObjectDictionary );
_dbba .SetIfNotNil ("\u0046\u0054",_bbgb .MakeName ("\u0053\u0069\u0067"));_dbba .SetIfNotNil ("\u004c\u006f\u0063\u006b",_beedg .Lock );_dbba .SetIfNotNil ("\u0053\u0056",_beedg .SV );if _beedg .V !=nil {_dbba .SetIfNotNil ("\u0056",_beedg .V .ToPdfObject ());
};return _cefdg ;};func (_dbg *PdfReader )newPdfAnnotationPolyLineFromDict (_gbbe *_bbgb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dfd :=PdfAnnotationPolyLine {};_afad ,_cga :=_dbg .newPdfAnnotationMarkupFromDict (_gbbe );if _cga !=nil {return nil ,_cga ;
};_dfd .PdfAnnotationMarkup =_afad ;_dfd .Vertices =_gbbe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dfd .LE =_gbbe .Get ("\u004c\u0045");_dfd .BS =_gbbe .Get ("\u0042\u0053");_dfd .IC =_gbbe .Get ("\u0049\u0043");_dfd .BE =_gbbe .Get ("\u0042\u0045");
_dfd .IT =_gbbe .Get ("\u0049\u0054");_dfd .Measure =_gbbe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dfd ,nil ;};func (_gffe *PdfPage )getParentResources ()(*PdfPageResources ,error ){_abbcg :=_gffe .Parent ;for _abbcg !=nil {_bggf ,_gbgdb :=_bbgb .GetDict (_abbcg );
if !_gbgdb {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _febe :=_bggf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_febe !=nil {_daecbe ,_daadb :=_bbgb .GetDict (_febe );if !_daadb {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_cgedg ,_bfdcb :=NewPdfPageResourcesFromDict (_daecbe );if _bfdcb !=nil {return nil ,_bfdcb ;};return _cgedg ,nil ;};_abbcg =_bggf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_baae .Lock ();defer _baae .Unlock ();_dcfdcc =title };

// Register registers (caches) a model to primitive object relationship.
func (_bcdeg *modelManager )Register (primitive _bbgb .PdfObject ,model PdfModel ){_bcdeg ._gfebc [model ]=primitive ;_bcdeg ._abbge [primitive ]=model ;};func _cfegb (_ecace *_ae .ImageBase )(_dcba Image ){_dcba .Width =int64 (_ecace .Width );_dcba .Height =int64 (_ecace .Height );
_dcba .BitsPerComponent =int64 (_ecace .BitsPerComponent );_dcba .ColorComponents =_ecace .ColorComponents ;_dcba .Data =_ecace .Data ;_dcba ._baegcb =_ecace .Decode ;_dcba ._bcbg =_ecace .Alpha ;return _dcba ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gbfd *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fd .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gadb :=field .V ;if _gadb ==nil {return _fd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_aad :=pageNum -1;if _aad < 0||_aad > len (_gbfd ._fegcd )-1{return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_deda :=_gbfd .Reader .PageList [_aad ];field .P =_deda .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bbgb .MakeString (_d .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_deda .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _gbfd ._eeec ==_gbfd ._cgeda .AcroForm {_gbfd ._eeec =_gbfd .Reader .AcroForm ;};_aegb :=_gbfd ._eeec ;if _aegb ==nil {_aegb =NewPdfAcroForm ();};_aegb .SigFlags =_bbgb .MakeInteger (3);_afag :=append (_aegb .AllFields (),field .PdfField );_aegb .Fields =&_afag ;
_gbfd .ReplaceAcroForm (_aegb );_gbfd .UpdatePage (_deda );_gbfd ._fegcd [_aad ]=_deda ;return nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_bagcf *PdfPattern )GetContext ()PdfModel {return _bagcf ._ebbbe };func (_dbee *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_fdbbb *PdfWriter )SetOpenAction (dest _bbgb .PdfObject )error {if dest ==nil ||_bbgb .IsNullObject (dest ){return nil ;};_fdbbb ._dfcbd .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _fdbbb .addObjects (dest );
};

// WriteString outputs the object as it is to be written to file.
func (_gfabdg *pdfSignDictionary )WriteString ()string {_gfabdg ._fgfda =0;_gfabdg ._daace =0;_gfabdg ._dbgee =0;_gfabdg ._dbggf =0;_eddbc :=_gag .NewBuffer (nil );_eddbc .WriteString ("\u003c\u003c");for _ ,_fcbca :=range _gfabdg .Keys (){_efae :=_gfabdg .Get (_fcbca );
switch _fcbca {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_eddbc .WriteString (_fcbca .WriteString ());_eddbc .WriteString ("\u0020");_gfabdg ._dbgee =_eddbc .Len ();_eddbc .WriteString (_efae .WriteString ());_eddbc .WriteString ("\u0020");_gfabdg ._dbggf =_eddbc .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_eddbc .WriteString (_fcbca .WriteString ());_eddbc .WriteString ("\u0020");_gfabdg ._fgfda =_eddbc .Len ();_eddbc .WriteString (_efae .WriteString ());_eddbc .WriteString ("\u0020");_gfabdg ._daace =_eddbc .Len ()-1;
default:_eddbc .WriteString (_fcbca .WriteString ());_eddbc .WriteString ("\u0020");_eddbc .WriteString (_efae .WriteString ());};};_eddbc .WriteString ("\u003e\u003e");return _eddbc .String ();};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gafd *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_dagggg :=_gafd .fill (provider ,appGen );if _dagggg !=nil {return _dagggg ;};if _ ,_adfga :=provider .(FieldImageProvider );_adfga {_dagggg =_gafd .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _dagggg ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fcb *PdfAnnotationWidget )Field ()*PdfField {return _fcb ._dagf };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bbgb .PdfObject ;Mac _bbgb .PdfObject ;Unix _bbgb .PdfObject ;NewWindow _bbgb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_afec *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_afec .GetNumComponents (){return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeffa ,_cccga :=_afec .TintTransform .Evaluate (vals );
if _cccga !=nil {return nil ,_cccga ;};_geega ,_cccga :=_afec .AlternateSpace .ColorFromFloats (_aeffa );if _cccga !=nil {return nil ,_cccga ;};return _geega ,nil ;};func (_dbbda *PdfReader )newPdfOutlineItemFromIndirectObject (_adac *_bbgb .PdfIndirectObject )(*PdfOutlineItem ,error ){_cgfab ,_ecgf :=_adac .PdfObject .(*_bbgb .PdfObjectDictionary );
if !_ecgf {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfagg :=NewPdfOutlineItem ();_gbgffe :=_cgfab .Get ("\u0054\u0069\u0074l\u0065");
if _gbgffe ==nil {return nil ,_d .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_cegec ,_fdeab :=_bbgb .GetString (_gbgffe );if !_fdeab {return nil ,_d .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gbgffe );};_gfagg .Title =_cegec ;if _abdcc :=_cgfab .Get ("\u0043\u006f\u0075n\u0074");
_abdcc !=nil {_aagcd ,_dddbg :=_abdcc .(*_bbgb .PdfObjectInteger );if !_dddbg {return nil ,_d .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_abdcc );};_dffgg :=int64 (*_aagcd );
_gfagg .Count =&_dffgg ;};if _acgf :=_cgfab .Get ("\u0044\u0065\u0073\u0074");_acgf !=nil {_gfagg .Dest =_bbgb .ResolveReference (_acgf );if !_dbbda ._adbbb {_ccfc :=_dbbda .traverseObjectData (_gfagg .Dest );if _ccfc !=nil {return nil ,_ccfc ;};};};if _bgec :=_cgfab .Get ("\u0041");
_bgec !=nil {_gfagg .A =_bbgb .ResolveReference (_bgec );if !_dbbda ._adbbb {_aecce :=_dbbda .traverseObjectData (_gfagg .A );if _aecce !=nil {return nil ,_aecce ;};};};if _abeefe :=_cgfab .Get ("\u0053\u0045");_abeefe !=nil {_gfagg .SE =nil ;};if _efab :=_cgfab .Get ("\u0043");
_efab !=nil {_gfagg .C =_bbgb .ResolveReference (_efab );};if _bedbb :=_cgfab .Get ("\u0046");_bedbb !=nil {_gfagg .F =_bbgb .ResolveReference (_bedbb );};return _gfagg ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_deabf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _deabf .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_dfcd :=&PdfAnnotation {};_dfcd ._bce =_bbgb .MakeIndirectObject (_bbgb .MakeDict ());return _dfcd ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_gee :=NewPdfAction ();_cgc :=&PdfActionRendition {};_cgc .PdfAction =_gee ;_gee .SetContext (_cgc );return _cgc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gef *PdfAction )GetContainingPdfObject ()_bbgb .PdfObject {return _gef ._dce };

// GetContentStreams returns the content stream as an array of strings.
func (_gffbea *PdfPage )GetContentStreams ()([]string ,error ){_eaab :=_gffbea .GetContentStreamObjs ();var _cecgf []string ;for _ ,_eaef :=range _eaab {_cfad ,_fegd :=_aeed (_eaef );if _fegd !=nil {return nil ,_fegd ;};_cecgf =append (_cecgf ,_cfad );
};return _cecgf ,nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bbgb .PdfObject ;Popup *PdfAnnotationPopup ;CA _bbgb .PdfObject ;RC _bbgb .PdfObject ;CreationDate _bbgb .PdfObject ;IRT _bbgb .PdfObject ;Subj _bbgb .PdfObject ;RT _bbgb .PdfObject ;IT _bbgb .PdfObject ;ExData _bbgb .PdfObject ;
};type pdfFontType0 struct{fontCommon ;_agac *_bbgb .PdfIndirectObject ;_bdfgf _gcc .TextEncoder ;Encoding _bbgb .PdfObject ;DescendantFont *PdfFont ;_bcdc *_afg .CMap ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_edcfg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_bbgfd *PdfWriter )ApplyStandard (optimizer StandardApplier ){_bbgfd ._bdggb =optimizer };

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_dgea *Image )ToGoImage ()(_fb .Image ,error ){_bb .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_bbfbag ,_fffbe :=_ae .NewImage (int (_dgea .Width ),int (_dgea .Height ),int (_dgea .BitsPerComponent ),_dgea .ColorComponents ,_dgea .Data ,_dgea ._bcbg ,_dgea ._baegcb );
if _fffbe !=nil {return nil ,_fffbe ;};return _bbfbag ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_dfcgf _bf .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fddg _fb .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_gdfa _fb .Image )(*Image ,error );

// Compress an image.
Compress (_ccaad *Image ,_edcgd int64 )(*Image ,error );};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bbgb .PdfObject ;MK _bbgb .PdfObject ;A _bbgb .PdfObject ;AA _bbgb .PdfObject ;BS _bbgb .PdfObject ;Parent _bbgb .PdfObject ;_dagf *PdfField ;_ce bool ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eabb OutlineDest )ToPdfObject ()_bbgb .PdfObject {if (_eabb .PageObj ==nil &&_eabb .Page < 0)||_eabb .Mode ==""{return _bbgb .MakeNull ();};_baegca :=_bbgb .MakeArray ();if _eabb .PageObj !=nil {_baegca .Append (_eabb .PageObj );}else {_baegca .Append (_bbgb .MakeInteger (_eabb .Page ));
};_baegca .Append (_bbgb .MakeName (_eabb .Mode ));switch _eabb .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_baegca .Append (_bbgb .MakeFloat (_eabb .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_baegca .Append (_bbgb .MakeFloat (_eabb .X ));
case "\u0058\u0059\u005a":_baegca .Append (_bbgb .MakeFloat (_eabb .X ));_baegca .Append (_bbgb .MakeFloat (_eabb .Y ));_baegca .Append (_bbgb .MakeFloat (_eabb .Zoom ));default:_baegca .Set (1,_bbgb .MakeName ("\u0046\u0069\u0074"));};return _baegca ;
};

// ToPdfObject converts date to a PDF string object.
func (_eegea *PdfDate )ToPdfObject ()_bbgb .PdfObject {_feeea :=_d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eegea ._ceegb ,_eegea ._ggdac ,_eegea ._fcdgb ,_eegea ._ggddg ,_eegea ._gcbcg ,_eegea ._aacd ,_eegea ._cgabdg ,_eegea ._dgbaef ,_eegea ._gfgdb );
return _bbgb .MakeString (_feeea );};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bbgb .PdfObjectString ;Author *_bbgb .PdfObjectString ;Subject *_bbgb .PdfObjectString ;Keywords *_bbgb .PdfObjectString ;Creator *_bbgb .PdfObjectString ;Producer *_bbgb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bbgb .PdfObjectName ;_fbcd *_bbgb .PdfObjectDictionary ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_cbga *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fbfcd *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_dbed :=_bbg .NewReader (img .getBase ());_ffabc :=_ae .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bcbg ,img ._baegcb );
_ebgf :=_bbg .NewWriter (_ffabc );_ddee :=_ec .Pow (2,float64 (img .BitsPerComponent ))-1;_caab :=_fbfcd .GetNumComponents ();_ecacg :=make ([]uint32 ,_caab );_gffg :=make ([]float64 ,_caab );for {_fdbf :=_dbed .ReadSamples (_ecacg );if _fdbf ==_bf .EOF {break ;
}else if _fdbf !=nil {return img ,_fdbf ;};for _bgac :=0;_bgac < _caab ;_bgac ++{_fcdb :=float64 (_ecacg [_bgac ])/_ddee ;_gffg [_bgac ]=_fcdb ;};_bacbb ,_fdbf :=_fbfcd .TintTransform .Evaluate (_gffg );if _fdbf !=nil {return img ,_fdbf ;};for _ ,_debge :=range _bacbb {_debge =_ec .Min (_ec .Max (0,_debge ),1.0);
if _fdbf =_ebgf .WriteSample (uint32 (_debge *_ddee ));_fdbf !=nil {return img ,_fdbf ;};};};return _fbfcd .AlternateSpace .ImageToRGB (_cfegb (&_ffabc ));};func (_efdbe *PdfWriter )optimize ()error {if _efdbe ._ebbg ==nil {return nil ;};var _ebdd error ;
_efdbe ._cagcad ,_ebdd =_efdbe ._ebbg .Optimize (_efdbe ._cagcad );if _ebdd !=nil {return _ebdd ;};_dccee :=make (map[_bbgb .PdfObject ]struct{},len (_efdbe ._cagcad ));for _ ,_affef :=range _efdbe ._cagcad {_dccee [_affef ]=struct{}{};};_efdbe ._bfded =_dccee ;
return nil ;};func (_eefb *PdfWriter )makeOffSetReference (_ebead int64 ){_fcfbg :=_d .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ebead );_eefb .writeString (_fcfbg );_eefb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};func (_aed *PdfReader )newPdfActionRenditionFromDict (_bdd *_bbgb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bdd .Get ("\u0052"),AN :_bdd .Get ("\u0041\u004e"),OP :_bdd .Get ("\u004f\u0050"),JS :_bdd .Get ("\u004a\u0053")},nil ;
};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cgca *LTV )Enable (sig *PdfSignature ,extraCerts []*_fc .Certificate )error {if _adgg :=_cgca .validateSig (sig );_adgg !=nil {return _adgg ;};_dabag ,_ebge :=_cgca .generateVRIKey (sig );if _ebge !=nil {return _ebge ;};if _ ,_egfd :=_cgca ._feec .VRI [_dabag ];
_egfd &&_cgca .SkipExisting {return nil ;};_egdd ,_ebge :=sig .GetCerts ();if _ebge !=nil {return _ebge ;};return _cgca .enable (_egdd ,extraCerts ,_dabag );};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bbgb .PdfObject ;BS _bbgb .PdfObject ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fdebf :=&XObjectForm {};_dcbcgc :=&_bbgb .PdfObjectStream {};_dcbcgc .PdfObjectDictionary =_bbgb .MakeDict ();_fdebf ._ddad =_dcbcgc ;return _fdebf ;};func _fbeaac (_dbced []byte )([]byte ,error ){_eecag :=_gb .New ();
if _ ,_fcgbc :=_bf .Copy (_eecag ,_gag .NewReader (_dbced ));_fcgbc !=nil {return nil ,_fcgbc ;};return _eecag .Sum (nil ),nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_efaf pdfCIDFontType2 )GetCharMetrics (code _gcc .CharCode )(_add .CharMetrics ,bool ){if _dbcae ,_accc :=_efaf ._daad [code ];_accc {return _add .CharMetrics {Wx :_dbcae },true ;};_gaeac :=rune (code );_gffbg ,_aacga :=_efaf ._dfcac [_gaeac ];if !_aacga {_gffbg =int (_efaf ._fbaaf );
};return _add .CharMetrics {Wx :float64 (_gffbg )},true ;};func (_ecgd *PdfReader )newPdfActionGotoFromDict (_eb *_bbgb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_eb .Get ("\u0044")},nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_gbgad *PdfReader )GetObjectNums ()[]int {return _gbgad ._abceg .GetObjectNums ()};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_gageg :_bbgb .MakeDict (),ColorComponents :colorComponents };
};func _edbe (_cdffa *_bbgb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_adbea :=PdfShadingType3 {};_ebgbb :=_cdffa .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ebgbb ==nil {_bb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bddgg ,_bgacb :=_ebgbb .(*_bbgb .PdfObjectArray );if !_bgacb {_bb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebgbb );
return nil ,_bbgb .ErrTypeError ;};if _bddgg .Len ()!=6{_bb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bddgg .Len ());return nil ,ErrInvalidAttribute ;
};_adbea .Coords =_bddgg ;if _ggacd :=_cdffa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggacd !=nil {_ggacd =_bbgb .TraceToDirectObject (_ggacd );_afcda ,_bbede :=_ggacd .(*_bbgb .PdfObjectArray );if !_bbede {_bb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggacd );
return nil ,_bbgb .ErrTypeError ;};_adbea .Domain =_afcda ;};_ebgbb =_cdffa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebgbb ==nil {_bb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_adbea .Function =[]PdfFunction {};if _dbcb ,_ebcb :=_ebgbb .(*_bbgb .PdfObjectArray );_ebcb {for _ ,_bfffe :=range _dbcb .Elements (){_fadcc ,_fbgdgd :=_cdfb (_bfffe );if _fbgdgd !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbgdgd );
return nil ,_fbgdgd ;};_adbea .Function =append (_adbea .Function ,_fadcc );};}else {_afebf ,_cccfb :=_cdfb (_ebgbb );if _cccfb !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cccfb );
return nil ,_cccfb ;};_adbea .Function =append (_adbea .Function ,_afebf );};if _acaea :=_cdffa .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_acaea !=nil {_acaea =_bbgb .TraceToDirectObject (_acaea );_cfbba ,_bcgbd :=_acaea .(*_bbgb .PdfObjectArray );
if !_bcgbd {_bb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acaea );return nil ,_bbgb .ErrTypeError ;};if _cfbba .Len ()!=2{_bb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cfbba .Len ());
return nil ,ErrInvalidAttribute ;};_adbea .Extend =_cfbba ;};return &_adbea ,nil ;};type pdfFontType3 struct{fontCommon ;_baegc *_bbgb .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bbgb .PdfObject ;Encoding _bbgb .PdfObject ;FontBBox _bbgb .PdfObject ;FontMatrix _bbgb .PdfObject ;FirstChar _bbgb .PdfObject ;LastChar _bbgb .PdfObject ;Widths _bbgb .PdfObject ;Resources _bbgb .PdfObject ;_baage map[_gcc .CharCode ]float64 ;
_bcffb _gcc .TextEncoder ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_aaca *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dbeb []_gcc .TextEncoder ;var _bca _gcc .CMapEncoder ;if _ddbf :=_aaca .baseFields ()._aafb ;_ddbf !=nil {_bca =_gcc .NewCMapEncoder ("",nil ,_ddbf );};_faca :=_aaca .Encoder ();
if _faca !=nil {switch _gbbdd :=_faca .(type ){case _gcc .SimpleEncoder :_fefgf :=_gbbdd .BaseName ();if _ ,_egfge :=_bbbg [_fefgf ];_egfge {_dbeb =append (_dbeb ,_faca );};};};if len (_dbeb )==0{if _aaca .baseFields ()._aafb !=nil {_dbeb =append (_dbeb ,_bca );
};if _faca !=nil {_dbeb =append (_dbeb ,_faca );};};var _bgdgg _gag .Buffer ;var _dceb int ;for _ ,_aefa :=range data {var _ebee bool ;for _ ,_cbge :=range _dbeb {if _dbgaa :=_cbge .Encode (string (_aefa ));len (_dbgaa )> 0{_bgdgg .Write (_dbgaa );_ebee =true ;
break ;};};if !_ebee {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_aefa );
_dceb ++;};};if _dceb !=0{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dceb ,_aaca ,_dbeb );
};return _bgdgg .Bytes (),_dceb ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_edaf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _edaf ._fagce !=nil {return _edaf ._fagce ,nil ;};if _edaf .ColorSpace ==nil {return nil ,nil ;};_dadge ,_dcdbd :=_aecceb (_edaf .ColorSpace );if _dcdbd !=nil {return nil ,_dcdbd ;
};_edaf ._fagce =_dadge ;return _edaf ._fagce ,nil ;};func _ffc (_ggf _bbgb .PdfObject )(*PdfBorderStyle ,error ){_fggdf :=&PdfBorderStyle {};_fggdf ._bagd =_ggf ;var _dde *_bbgb .PdfObjectDictionary ;_ggf =_bbgb .TraceToDirectObject (_ggf );_dde ,_deeb :=_ggf .(*_bbgb .PdfObjectDictionary );
if !_deeb {return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _aeag :=_dde .Get ("\u0054\u0079\u0070\u0065");_aeag !=nil {_dfbc ,_fffe :=_aeag .(*_bbgb .PdfObjectName );if !_fffe {_bb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aeag );
}else {if *_dfbc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bb .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_dfbc );};};};if _fcea :=_dde .Get ("\u0057");
_fcea !=nil {_caf ,_cdg :=_bbgb .GetNumberAsFloat (_fcea );if _cdg !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cdg );return nil ,_cdg ;};_fggdf .W =&_caf ;
};if _eegd :=_dde .Get ("\u0053");_eegd !=nil {_ffdd ,_ddaff :=_eegd .(*_bbgb .PdfObjectName );if !_ddaff {return nil ,_fd .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dafe BorderStyle ;switch *_ffdd {case "\u0053":_dafe =BorderStyleSolid ;case "\u0044":_dafe =BorderStyleDashed ;case "\u0042":_dafe =BorderStyleBeveled ;case "\u0049":_dafe =BorderStyleInset ;case "\u0055":_dafe =BorderStyleUnderline ;default:_bb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ffdd );
return nil ,_fd .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_fggdf .S =&_dafe ;};if _afb :=_dde .Get ("\u0044");_afb !=nil {_eaeg ,_ade :=_afb .(*_bbgb .PdfObjectArray );
if !_ade {_bb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_afb );return nil ,_fd .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_bacb ,_bcea :=_eaeg .ToIntegerArray ();if _bcea !=nil {_bb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bcea );
return nil ,_bcea ;};_fggdf .D =&_bacb ;};return _fggdf ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fbaf *PdfPageResources )SetXObjectByName (keyName _bbgb .PdfObjectName ,stream *_bbgb .PdfObjectStream )error {if _fbaf .XObject ==nil {_fbaf .XObject =_bbgb .MakeDict ();};_agabb :=_bbgb .TraceToDirectObject (_fbaf .XObject );_ceecgd ,_gaeagg :=_agabb .(*_bbgb .PdfObjectDictionary );
if !_gaeagg {_bb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fbaf .XObject ,_agabb );return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ceecgd .Set (keyName ,stream );return nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_gbded *PdfPageResources )GetColorspaceByName (keyName _bbgb .PdfObjectName )(PdfColorspace ,bool ){_gggga ,_afgef :=_gbded .GetColorspaces ();if _afgef !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_afgef );
return nil ,false ;};if _gggga ==nil {return nil ,false ;};_bgfd ,_egfea :=_gggga .Colorspaces [string (keyName )];if !_egfea {return nil ,false ;};return _bgfd ,true ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_gdacb *PdfPageResources )GetXObjectFormByName (keyName _bbgb .PdfObjectName )(*XObjectForm ,error ){_faad ,_cggdc :=_gdacb .GetXObjectByName (keyName );if _faad ==nil {return nil ,nil ;};if _cggdc !=XObjectTypeForm {return nil ,_fd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_afefb ,_cbcef :=NewXObjectFormFromStream (_faad );if _cbcef !=nil {return nil ,_cbcef ;};return _afefb ,nil ;};func _aede (_bcb _bbgb .PdfObject )(*PdfColorspaceCalRGB ,error ){_ccaec :=NewPdfColorspaceCalRGB ();if _cabac ,_fgeb :=_bcb .(*_bbgb .PdfIndirectObject );
_fgeb {_ccaec ._bagb =_cabac ;};_bcb =_bbgb .TraceToDirectObject (_bcb );_eecb ,_eedd :=_bcb .(*_bbgb .PdfObjectArray );if !_eedd {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eecb .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bcb =_bbgb .TraceToDirectObject (_eecb .Get (0));_bdgg ,_eedd :=_bcb .(*_bbgb .PdfObjectName );if !_eedd {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_bdgg !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_d .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_bcb =_bbgb .TraceToDirectObject (_eecb .Get (1));
_gfffc ,_eedd :=_bcb .(*_bbgb .PdfObjectDictionary );if !_eedd {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_bcb =_gfffc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bcb =_bbgb .TraceToDirectObject (_bcb );_dddb ,_eedd :=_bcb .(*_bbgb .PdfObjectArray );if !_eedd {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _dddb .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_eegde ,_geec :=_dddb .GetAsFloat64Slice ();
if _geec !=nil {return nil ,_geec ;};_ccaec .WhitePoint =_eegde ;_bcb =_gfffc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bcb !=nil {_bcb =_bbgb .TraceToDirectObject (_bcb );_abfdd ,_gegd :=_bcb .(*_bbgb .PdfObjectArray );
if !_gegd {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _abfdd .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_baccd ,_cff :=_abfdd .GetAsFloat64Slice ();if _cff !=nil {return nil ,_cff ;};_ccaec .BlackPoint =_baccd ;};_bcb =_gfffc .Get ("\u0047\u0061\u006dm\u0061");if _bcb !=nil {_bcb =_bbgb .TraceToDirectObject (_bcb );_egcf ,_dadgg :=_bcb .(*_bbgb .PdfObjectArray );
if !_dadgg {return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _egcf .Len ()!=3{return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_gfffea ,_fgfb :=_egcf .GetAsFloat64Slice ();if _fgfb !=nil {return nil ,_fgfb ;};_ccaec .Gamma =_gfffea ;};_bcb =_gfffc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bcb !=nil {_bcb =_bbgb .TraceToDirectObject (_bcb );_cbagd ,_gbac :=_bcb .(*_bbgb .PdfObjectArray );
if !_gbac {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cbagd .Len ()!=9{_bb .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cbagd .String ());
return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fcge ,_egcdb :=_cbagd .GetAsFloat64Slice ();if _egcdb !=nil {return nil ,_egcdb ;
};_ccaec .Matrix =_fcge ;};return _ccaec ,nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_dbeba *pdfSignDictionary )GetSubFilter ()string {_agdb :=_dbeba .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _agdb ==nil {return "";};if _cebb ,_bfafa :=_bbgb .GetNameVal (_agdb );_bfafa {return _cebb ;};return "";};

// String returns a string that describes `font`.
func (_gaaa *PdfFont )String ()string {_gcdb :="";if _gaaa ._efcd .Encoder ()!=nil {_gcdb =_gaaa ._efcd .Encoder ().String ();};return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gaaa ._efcd ,_gaaa .baseFields ().coreString (),_gcdb );
};func _feaac (_dfef _bbgb .PdfObject )(*PdfPattern ,error ){_fadb :=&PdfPattern {};var _gagec *_bbgb .PdfObjectDictionary ;if _debfb ,_ceecf :=_bbgb .GetIndirect (_dfef );_ceecf {_fadb ._gdgafe =_debfb ;_cacgg ,_bdaf :=_debfb .PdfObject .(*_bbgb .PdfObjectDictionary );
if !_bdaf {_bb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_debfb .PdfObject );
return nil ,_bbgb .ErrTypeError ;};_gagec =_cacgg ;}else if _caeggb ,_eedf :=_bbgb .GetStream (_dfef );_eedf {_fadb ._gdgafe =_caeggb ;_gagec =_caeggb .PdfObjectDictionary ;}else {_bb .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dfef );
return nil ,_bbgb .ErrTypeError ;};_bdge :=_gagec .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bdge ==nil {_bb .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_effcg ,_febgb :=_bdge .(*_bbgb .PdfObjectInteger );if !_febgb {_bb .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdge );
return nil ,_bbgb .ErrTypeError ;};if *_effcg !=1&&*_effcg !=2{_bb .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_effcg );return nil ,_bbgb .ErrRangeError ;
};_fadb .PatternType =int64 (*_effcg );switch *_effcg {case 1:_aefgc ,_bfgf :=_bffgg (_gagec );if _bfgf !=nil {return nil ,_bfgf ;};_aefgc .PdfPattern =_fadb ;_fadb ._ebbbe =_aefgc ;return _fadb ,nil ;case 2:_eaecc ,_dcbag :=_aefba (_gagec );if _dcbag !=nil {return nil ,_dcbag ;
};_eaecc .PdfPattern =_fadb ;_fadb ._ebbbe =_eaecc ;return _fadb ,nil ;};return nil ,_fd .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// String returns a string that describes `base`.
func (_dfga fontCommon )String ()string {return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dfga .coreString ());};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_baae .Lock ();defer _baae .Unlock ();_gceac =author };var _ _bbgb .PdfObject =&pdfSignDictionary {};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_daaf *PdfFont )GetCharMetrics (code _gcc .CharCode )(CharMetrics ,bool ){var _fcca _add .CharMetrics ;switch _bebad :=_daaf ._efcd .(type ){case *pdfFontSimple :if _fcfeed ,_cecgg :=_bebad .GetCharMetrics (code );_cecgg {return _fcfeed ,_cecgg ;
};case *pdfFontType0 :if _ffddd ,_fbae :=_bebad .GetCharMetrics (code );_fbae {return _ffddd ,_fbae ;};case *pdfCIDFontType0 :if _aeafe ,_bdgbc :=_bebad .GetCharMetrics (code );_bdgbc {return _aeafe ,_bdgbc ;};case *pdfCIDFontType2 :if _dgdd ,_cfeb :=_bebad .GetCharMetrics (code );
_cfeb {return _dgdd ,_cfeb ;};case *pdfFontType3 :if _addad ,_bdac :=_bebad .GetCharMetrics (code );_bdac {return _addad ,_bdac ;};default:_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_daaf ._efcd );
return _fcca ,false ;};if _fcdg ,_gbfce :=_daaf .GetFontDescriptor ();_gbfce ==nil &&_fcdg !=nil {return _add .CharMetrics {Wx :_fcdg ._cbab },true ;};_bb .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_daaf );
return _fcca ,false ;};

// ToPdfObject converts rectangle to a PDF object.
func (_gada *PdfRectangle )ToPdfObject ()_bbgb .PdfObject {return _bbgb .MakeArray (_bbgb .MakeFloat (_gada .Llx ),_bbgb .MakeFloat (_gada .Lly ),_bbgb .MakeFloat (_gada .Urx ),_bbgb .MakeFloat (_gada .Ury ));};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cffea *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cffea .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ba :=NewPdfAction ();_edd :=&PdfActionTrans {};_edd .PdfAction =_ba ;_ba .SetContext (_edd );return _edd ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bbgb .PdfObject )(*PdfOutputIntent ,error ){_fdfa :=&PdfOutputIntent {};if _bgfe :=_fdfa .ParsePdfObject (object );_bgfe !=nil {return nil ,_bgfe ;};return _fdfa ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bbgb .PdfObjectArray ;Domain *_bbgb .PdfObjectArray ;Function []PdfFunction ;Extend *_bbgb .PdfObjectArray ;};func _aeafc ()string {_baae .Lock ();defer _baae .Unlock ();_efabf :=_gd .GetLicenseKey ();if len (_accbc )> 0&&(_efabf .IsLicensed ()||_gcdcf ){return _accbc ;
};return _d .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_gggff (),_efabf .TypeToString ());};

// GetPdfVersion gets the version of the PDF used within this document.
func (_gaeae *PdfWriter )GetPdfVersion ()string {return _gaeae .getPdfVersion ()};func _cfdc (_afgaf *PdfField ,_gbgb _bbgb .PdfObject )error {switch _afgaf .GetContext ().(type ){case *PdfFieldText :switch _adad :=_gbgb .(type ){case *_bbgb .PdfObjectName :_gfcgd :=_adad ;
_bb .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gfcgd .String ());
_afgaf .V =_bbgb .MakeEncodedString (_adad .String (),true );case *_bbgb .PdfObjectString :_afgaf .V =_bbgb .MakeEncodedString (_adad .String (),true );default:_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_adad ,_adad );
};case *PdfFieldButton :switch _gbgb .(type ){case *_bbgb .PdfObjectName :if len (_gbgb .String ())> 0{_afgaf .V =_gbgb ;_eeda (_afgaf ,_gbgb );};case *_bbgb .PdfObjectString :if len (_gbgb .String ())> 0{_afgaf .V =_bbgb .MakeName (_gbgb .String ());_eeda (_afgaf ,_afgaf .V );
};default:_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_afgaf .PartialName (),_gbgb );_afgaf .V =_gbgb ;};case *PdfFieldChoice :switch _gbgb .(type ){case *_bbgb .PdfObjectName :if len (_gbgb .String ())> 0{_afgaf .V =_bbgb .MakeString (_gbgb .String ());
_eeda (_afgaf ,_gbgb );};case *_bbgb .PdfObjectString :if len (_gbgb .String ())> 0{_afgaf .V =_gbgb ;_eeda (_afgaf ,_bbgb .MakeName (_gbgb .String ()));};default:_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_afgaf .PartialName (),_gbgb );
_afgaf .V =_gbgb ;};case *PdfFieldSignature :_bb .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_afgaf .PartialName (),_gbgb );
};return nil ;};

// Encoder returns the font's text encoder.
func (_gage *pdfFontSimple )Encoder ()_gcc .TextEncoder {if _gage ._fddbf !=nil {return _gage ._fddbf ;};if _gage ._geff !=nil {return _gage ._geff ;};_gedb ,_ :=_gcc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gedb ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_efad :map[_bbgb .PdfObject ]struct{}{},_cgadg :_cdcd (),_abceg :_bbgb .NewParserFromString (txt )};};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_gfaga *Image )SetSamples (samples []uint32 ){if _gfaga .BitsPerComponent < 8{samples =_gfaga .samplesAddPadding (samples );};_dbeea :=_bbg .ResampleUint32 (samples ,int (_gfaga .BitsPerComponent ),8);_deabg :=make ([]byte ,len (_dbeea ));for _effed ,_fbagea :=range _dbeea {_deabg [_effed ]=byte (_fbagea );
};_gfaga .Data =_deabg ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dedg *PdfField )FullName ()(string ,error ){var _gcccef _gag .Buffer ;_bagbd :=[]string {};if _dedg .T !=nil {_bagbd =append (_bagbd ,_dedg .T .Decoded ());};_gdba :=map[*PdfField ]bool {};_gdba [_dedg ]=true ;_gdaec :=_dedg .Parent ;for _gdaec !=nil {if _ ,_fcgfe :=_gdba [_gdaec ];
_fcgfe {return _gcccef .String (),_fd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _gdaec .T ==nil {return _gcccef .String (),_fd .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_bagbd =append (_bagbd ,_gdaec .T .Decoded ());_gdba [_gdaec ]=true ;_gdaec =_gdaec .Parent ;};for _daac :=len (_bagbd )-1;_daac >=0;_daac --{_gcccef .WriteString (_bagbd [_daac ]);if _daac > 0{_gcccef .WriteString ("\u002e");};};return _gcccef .String (),nil ;
};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_baae .Lock ();defer _baae .Unlock ();_accbc =producer };func (_bbef *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _deggf []*PdfFieldSignature ;for _ ,_fgcdc :=range _bbef .AllFields (){switch _ccee :=_fgcdc .GetContext ().(type ){case *PdfFieldSignature :_dgbc :=_ccee ;
_deggf =append (_deggf ,_dgbc );};};return _deggf ;};

// GetNumComponents returns the number of color components.
func (_bcda *PdfColorspaceICCBased )GetNumComponents ()int {return _bcda .N };

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_dadfb :=PdfPage {};_dadfb ._afebd =_bbgb .MakeDict ();_dadfb .Resources =NewPdfPageResources ();_aaea :=_bbgb .PdfIndirectObject {};_aaea .PdfObject =_dadfb ._afebd ;_dadfb ._efbe =&_aaea ;return &_dadfb ;};func (_egfb *PdfReader )newPdfActionGoTo3DViewFromDict (_gaf *_bbgb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_gaf .Get ("\u0054\u0041"),V :_gaf .Get ("\u0056")},nil ;
};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gbbfg *PdfPageResources )GetXObjectByName (keyName _bbgb .PdfObjectName )(*_bbgb .PdfObjectStream ,XObjectType ){if _gbbfg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cdgdf ,_gadec :=_bbgb .TraceToDirectObject (_gbbfg .XObject ).(*_bbgb .PdfObjectDictionary );
if !_gadec {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbgb .TraceToDirectObject (_gbbfg .XObject ));
return nil ,XObjectTypeUndefined ;};if _acdda :=_cdgdf .Get (keyName );_acdda !=nil {_ccbbe ,_cgga :=_bbgb .GetStream (_acdda );if !_cgga {_bb .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_acdda );
return nil ,XObjectTypeUndefined ;};_dgbd :=_ccbbe .PdfObjectDictionary ;_acbd ,_cgga :=_bbgb .TraceToDirectObject (_dgbd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bbgb .PdfObjectName );if !_cgga {_bb .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_dgbd .String ());
return nil ,XObjectTypeUndefined ;};if *_acbd =="\u0049\u006d\u0061g\u0065"{return _ccbbe ,XObjectTypeImage ;}else if *_acbd =="\u0046\u006f\u0072\u006d"{return _ccbbe ,XObjectTypeForm ;}else if *_acbd =="\u0050\u0053"{return _ccbbe ,XObjectTypePS ;}else {_bb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_acbd );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_ebd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bbgb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gdae []_bbgb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_dece []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cfcgf *PdfReader )GetPageLabels ()(_bbgb .PdfObject ,error ){_fege :=_bbgb .ResolveReference (_cfcgf ._facae .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fege ==nil {return nil ,nil ;};if !_cfcgf ._adbbb {_fdeda :=_cfcgf .traverseObjectData (_fege );
if _fdeda !=nil {return nil ,_fdeda ;};};return _fege ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_dffac *PdfPage )GetPageDict ()*_bbgb .PdfObjectDictionary {_ffcee :=_dffac ._afebd ;_ffcee .Clear ();_ffcee .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0050\u0061\u0067\u0065"));_ffcee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dffac .Parent );
if _dffac .LastModified !=nil {_ffcee .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dffac .LastModified .ToPdfObject ());};if _dffac .Resources !=nil {_ffcee .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dffac .Resources .ToPdfObject ());
};if _dffac .CropBox !=nil {_ffcee .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_dffac .CropBox .ToPdfObject ());};if _dffac .MediaBox !=nil {_ffcee .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_dffac .MediaBox .ToPdfObject ());};if _dffac .BleedBox !=nil {_ffcee .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_dffac .BleedBox .ToPdfObject ());
};if _dffac .TrimBox !=nil {_ffcee .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_dffac .TrimBox .ToPdfObject ());};if _dffac .ArtBox !=nil {_ffcee .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_dffac .ArtBox .ToPdfObject ());};_ffcee .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_dffac .BoxColorInfo );
_ffcee .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dffac .Contents );if _dffac .Rotate !=nil {_ffcee .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bbgb .MakeInteger (*_dffac .Rotate ));};_ffcee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dffac .Group );
_ffcee .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_dffac .Thumb );_ffcee .SetIfNotNil ("\u0042",_dffac .B );_ffcee .SetIfNotNil ("\u0044\u0075\u0072",_dffac .Dur );_ffcee .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dffac .Trans );_ffcee .SetIfNotNil ("\u0041\u0041",_dffac .AA );
_ffcee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dffac .Metadata );_ffcee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dffac .PieceInfo );_ffcee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dffac .StructParents );
_ffcee .SetIfNotNil ("\u0049\u0044",_dffac .ID );_ffcee .SetIfNotNil ("\u0050\u005a",_dffac .PZ );_ffcee .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_dffac .SeparationInfo );_ffcee .SetIfNotNil ("\u0054\u0061\u0062\u0073",_dffac .Tabs );
_ffcee .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_dffac .TemplateInstantiated );_ffcee .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_dffac .PresSteps );_ffcee .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_dffac .UserUnit );
_ffcee .SetIfNotNil ("\u0056\u0050",_dffac .VP );if _dffac ._bccg !=nil {_fccfc :=_bbgb .MakeArray ();for _ ,_deef :=range _dffac ._bccg {if _cedcb :=_deef .GetContext ();_cedcb !=nil {_fccfc .Append (_cedcb .ToPdfObject ());}else {_fccfc .Append (_deef .ToPdfObject ());
};};if _fccfc .Len ()> 0{_ffcee .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_fccfc );};}else if _dffac .Annots !=nil {_ffcee .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_dffac .Annots );};return _ffcee ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_dab *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_afgd :=NewPdfAnnotation ();_ecga :=&PdfAnnotationTrapNet {};_ecga .PdfAnnotation =_afgd ;_afgd .SetContext (_ecga );return _ecga ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgdb *PdfShadingType5 )ToPdfObject ()_bbgb .PdfObject {_cgdb .PdfShading .ToPdfObject ();_dgfcg ,_ccdec :=_cgdb .getShadingDict ();if _ccdec !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgdb .BitsPerCoordinate !=nil {_dgfcg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgdb .BitsPerCoordinate );};if _cgdb .BitsPerComponent !=nil {_dgfcg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgdb .BitsPerComponent );
};if _cgdb .VerticesPerRow !=nil {_dgfcg .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cgdb .VerticesPerRow );};if _cgdb .Decode !=nil {_dgfcg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgdb .Decode );};if _cgdb .Function !=nil {if len (_cgdb .Function )==1{_dgfcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgdb .Function [0].ToPdfObject ());
}else {_cbdadf :=_bbgb .MakeArray ();for _ ,_gebg :=range _cgdb .Function {_cbdadf .Append (_gebg .ToPdfObject ());};_dgfcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbdadf );};};return _cgdb ._bfgebd ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dgeff *PdfPageResources )SetXObjectFormByName (keyName _bbgb .PdfObjectName ,xform *XObjectForm )error {_cabca :=xform .ToPdfObject ().(*_bbgb .PdfObjectStream );_eegfe :=_dgeff .SetXObjectByName (keyName ,_cabca );return _eegfe ;};func _egada ()string {_baae .Lock ();
defer _baae .Unlock ();return _egaba };

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cg :=NewPdfAction ();_ab :=&PdfActionSetOCGState {};_ab .PdfAction =_cg ;_cg .SetContext (_ab );return _ab ;};func _aefba (_abfed *_bbgb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_ecbe :=&PdfShadingPattern {};
_cdfc :=_abfed .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _cdfc ==nil {_bb .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dcagbe ,_dggdb :=_gecfbc (_cdfc );
if _dggdb !=nil {_bb .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dggdb );return nil ,_dggdb ;};_ecbe .Shading =_dcagbe ;if _dgaea :=_abfed .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_dgaea !=nil {_debdb ,_dadag :=_dgaea .(*_bbgb .PdfObjectArray );if !_dadag {_bb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgaea );
return nil ,_bbgb .ErrTypeError ;};_ecbe .Matrix =_debdb ;};if _fadfa :=_abfed .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fadfa !=nil {_ecbe .ExtGState =_fadfa ;};return _ecbe ,nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bbgb .PdfObject )(*PdfFont ,error ){return _fbcaf (fontObj ,true )};

// ToPdfObject implements interface PdfModel.
func (_dcd *PdfAnnotationUnderline )ToPdfObject ()_bbgb .PdfObject {_dcd .PdfAnnotation .ToPdfObject ();_cgb :=_dcd ._bce ;_fed :=_cgb .PdfObject .(*_bbgb .PdfObjectDictionary );_dcd .PdfAnnotationMarkup .appendToPdfDictionary (_fed );_fed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_fed .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcd .QuadPoints );return _cgb ;};func (_faaac *LTV )getOCSPs (_cgdfa []*_fc .Certificate ,_gggc map[string ]*_fc .Certificate )([][]byte ,error ){_cgba :=make ([][]byte ,0,len (_cgdfa ));
for _ ,_gabd :=range _cgdfa {for _ ,_fgefa :=range _gabd .OCSPServer {if _faaac .CertClient .IsCA (_gabd ){continue ;};_abbed ,_bfag :=_gggc [_gabd .Issuer .CommonName ];if !_bfag {_bb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_afde ,_cefdc :=_faaac .OCSPClient .MakeRequest (_fgefa ,_gabd ,_abbed );if _cefdc !=nil {_bb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cefdc );
continue ;};_cgba =append (_cgba ,_afde );};};return _cgba ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fba :=NewPdfAnnotation ();_abg :=&PdfAnnotationHighlight {};_abg .PdfAnnotation =_fba ;_abg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fba .SetContext (_abg );return _abg ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bbgb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ecg *PdfActionTrans )ToPdfObject ()_bbgb .PdfObject {_ecg .PdfAction .ToPdfObject ();_gea :=_ecg ._dce ;_gcd :=_gea .PdfObject .(*_bbgb .PdfObjectDictionary );_gcd .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeTrans )));_gcd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ecg .Trans );
return _gea ;};func (_bcgea *PdfWriter )copyObject (_edaadb _bbgb .PdfObject ,_ddfbde map[_bbgb .PdfObject ]_bbgb .PdfObject ,_decfc map[_bbgb .PdfObject ]struct{},_ebacc bool )_bbgb .PdfObject {_aegba :=!_bcgea ._aadfb &&_decfc !=nil ;if _fegaf ,_aadaae :=_ddfbde [_edaadb ];
_aadaae {if _aegba &&!_ebacc {delete (_decfc ,_edaadb );};return _fegaf ;};_ddgbc :=_edaadb ;switch _egdgb :=_edaadb .(type ){case *_bbgb .PdfObjectArray :_aefgf :=_bbgb .MakeArray ();_ddgbc =_aefgf ;_ddfbde [_edaadb ]=_ddgbc ;for _ ,_baged :=range _egdgb .Elements (){_aefgf .Append (_bcgea .copyObject (_baged ,_ddfbde ,_decfc ,_ebacc ));
};case *_bbgb .PdfObjectStreams :_bgba :=&_bbgb .PdfObjectStreams {PdfObjectReference :_egdgb .PdfObjectReference };_ddgbc =_bgba ;_ddfbde [_edaadb ]=_ddgbc ;for _ ,_eead :=range _egdgb .Elements (){_bgba .Append (_bcgea .copyObject (_eead ,_ddfbde ,_decfc ,_ebacc ));
};case *_bbgb .PdfObjectStream :_bffd :=&_bbgb .PdfObjectStream {Stream :_egdgb .Stream ,PdfObjectReference :_egdgb .PdfObjectReference };_ddgbc =_bffd ;_ddfbde [_edaadb ]=_ddgbc ;_bffd .PdfObjectDictionary =_bcgea .copyObject (_egdgb .PdfObjectDictionary ,_ddfbde ,_decfc ,_ebacc ).(*_bbgb .PdfObjectDictionary );
case *_bbgb .PdfObjectDictionary :var _gcgec bool ;if _aegba &&!_ebacc {if _dbgag ,_ :=_bbgb .GetNameVal (_egdgb .Get ("\u0054\u0079\u0070\u0065"));_dbgag =="\u0050\u0061\u0067\u0065"{_ ,_gegb :=_bcgea ._edaad [_egdgb ];_ebacc =!_gegb ;_gcgec =_ebacc ;
};};_afed :=_bbgb .MakeDict ();_ddgbc =_afed ;_ddfbde [_edaadb ]=_ddgbc ;for _ ,_ggcbd :=range _egdgb .Keys (){_afed .Set (_ggcbd ,_bcgea .copyObject (_egdgb .Get (_ggcbd ),_ddfbde ,_decfc ,_ebacc ));};if _gcgec {_ddgbc =_bbgb .MakeNull ();_ebacc =false ;
};case *_bbgb .PdfIndirectObject :_fcgcdf :=&_bbgb .PdfIndirectObject {PdfObjectReference :_egdgb .PdfObjectReference };_ddgbc =_fcgcdf ;_ddfbde [_edaadb ]=_ddgbc ;_fcgcdf .PdfObject =_bcgea .copyObject (_egdgb .PdfObject ,_ddfbde ,_decfc ,_ebacc );case *_bbgb .PdfObjectString :_acgbc :=*_egdgb ;
_ddgbc =&_acgbc ;_ddfbde [_edaadb ]=_ddgbc ;case *_bbgb .PdfObjectName :_gffeb :=*_egdgb ;_ddgbc =&_gffeb ;_ddfbde [_edaadb ]=_ddgbc ;case *_bbgb .PdfObjectNull :_ddgbc =_bbgb .MakeNull ();_ddfbde [_edaadb ]=_ddgbc ;case *_bbgb .PdfObjectInteger :_gafb :=*_egdgb ;
_ddgbc =&_gafb ;_ddfbde [_edaadb ]=_ddgbc ;case *_bbgb .PdfObjectReference :_bfaed :=*_egdgb ;_ddgbc =&_bfaed ;_ddfbde [_edaadb ]=_ddgbc ;case *_bbgb .PdfObjectFloat :_dceab :=*_egdgb ;_ddgbc =&_dceab ;_ddfbde [_edaadb ]=_ddgbc ;case *_bbgb .PdfObjectBool :_dgdda :=*_egdgb ;
_ddgbc =&_dgdda ;_ddfbde [_edaadb ]=_ddgbc ;case *pdfSignDictionary :_dfaba :=&pdfSignDictionary {PdfObjectDictionary :_bbgb .MakeDict (),_aecff :_egdgb ._aecff ,_gabecd :_egdgb ._gabecd };_ddgbc =_dfaba ;_ddfbde [_edaadb ]=_ddgbc ;for _ ,_bfgbf :=range _egdgb .Keys (){_dfaba .Set (_bfgbf ,_bcgea .copyObject (_egdgb .Get (_bfgbf ),_ddfbde ,_decfc ,_ebacc ));
};default:_bb .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_edaadb );
};if _aegba &&_ebacc {_decfc [_edaadb ]=struct{}{};};return _ddgbc ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_eabfb FieldFlag )Has (fl FieldFlag )bool {return (_eabfb .Mask ()&fl .Mask ())> 0};

// GetCustomInfo returns a custom info value for the specified name.
func (_ddgada *PdfInfo )GetCustomInfo (name string )*_bbgb .PdfObjectString {var _gccce *_bbgb .PdfObjectString ;if _ddgada ._fbcd ==nil {return _gccce ;};if _edfbc ,_aeeg :=_ddgada ._fbcd .Get (*_bbgb .MakeName (name )).(*_bbgb .PdfObjectString );_aeeg {_gccce =_edfbc ;
};return _gccce ;};var _abcg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject implements interface PdfModel.
func (_becd *PdfAnnotationPolyLine )ToPdfObject ()_bbgb .PdfObject {_becd .PdfAnnotation .ToPdfObject ();_dggc :=_becd ._bce ;_acca :=_dggc .PdfObject .(*_bbgb .PdfObjectDictionary );_becd .PdfAnnotationMarkup .appendToPdfDictionary (_acca );_acca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_acca .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_becd .Vertices );_acca .SetIfNotNil ("\u004c\u0045",_becd .LE );_acca .SetIfNotNil ("\u0042\u0053",_becd .BS );_acca .SetIfNotNil ("\u0049\u0043",_becd .IC );_acca .SetIfNotNil ("\u0042\u0045",_becd .BE );
_acca .SetIfNotNil ("\u0049\u0054",_becd .IT );_acca .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_becd .Measure );return _dggc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ffgc *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdaeg :=vals [0];if _bdaeg < 0.0||_bdaeg > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_baba :=vals [1];if _baba < 0.0||_baba > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbgc :=vals [2];if _dbgc < 0.0||_dbgc > 1.0{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cbfce :=NewPdfColorDeviceRGB (_bdaeg ,_baba ,_dbgc );return _cbfce ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_edbca byte )byte ;func (_cbacg *PdfSignature )extractChainFromPKCS7 ()([]*_fc .Certificate ,error ){_dgbgd ,_efaee :=_cc .Parse (_cbacg .Contents .Bytes ());if _efaee !=nil {return nil ,_efaee ;};return _dgbgd .Certificates ,nil ;
};func (_cedd *PdfReader )newPdfAnnotationInkFromDict (_bdfc *_bbgb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gbbd :=PdfAnnotationInk {};_cacg ,_bbga :=_cedd .newPdfAnnotationMarkupFromDict (_bdfc );if _bbga !=nil {return nil ,_bbga ;};_gbbd .PdfAnnotationMarkup =_cacg ;
_gbbd .InkList =_bdfc .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gbbd .BS =_bdfc .Get ("\u0042\u0053");return &_gbbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edbg *PdfAnnotationCaret )ToPdfObject ()_bbgb .PdfObject {_edbg .PdfAnnotation .ToPdfObject ();_ddcb :=_edbg ._bce ;_bffg :=_ddcb .PdfObject .(*_bbgb .PdfObjectDictionary );_edbg .PdfAnnotationMarkup .appendToPdfDictionary (_bffg );_bffg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0043\u0061\u0072e\u0074"));
_bffg .SetIfNotNil ("\u0052\u0044",_edbg .RD );_bffg .SetIfNotNil ("\u0053\u0079",_edbg .Sy );return _ddcb ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_ebac *PdfReader )GetOutlines ()(*Outline ,error ){if _ebac ==nil {return nil ,_fd .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_ecbdd :=_ebac .GetOutlineTree ();if _ecbdd ==nil {return nil ,_fd .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fffaa func (_gfbba *PdfOutlineTreeNode ,_aeega *[]*OutlineItem );_fffaa =func (_efbgc *PdfOutlineTreeNode ,_gaacb *[]*OutlineItem ){if _efbgc ==nil {return ;};if _efbgc ._efef ==nil {_bb .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cdgad *OutlineItem ;if _befaeg ,_gcbb :=_efbgc ._efef .(*PdfOutlineItem );_gcbb {_bcef :=_befaeg .Dest ;if (_bcef ==nil ||_bbgb .IsNullObject (_bcef ))&&_befaeg .A !=nil {if _agab ,_aaefb :=_bbgb .GetDict (_befaeg .A );_aaefb {_bcef ,_ =_bbgb .GetArray (_agab .Get ("\u0044"));
};};var _dbff OutlineDest ;if _bcef !=nil &&!_bbgb .IsNullObject (_bcef ){if _beag ,_bfcf :=_ecef (_bcef ,_ebac );_bfcf ==nil {_dbff =*_beag ;}else {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bcef ,_bfcf );
};};_cdgad =NewOutlineItem (_befaeg .Title .Decoded (),_dbff );*_gaacb =append (*_gaacb ,_cdgad );if _befaeg .Next !=nil {_fffaa (_befaeg .Next ,_gaacb );};};if _efbgc .First !=nil {if _cdgad !=nil {_gaacb =&_cdgad .Entries ;};_fffaa (_efbgc .First ,_gaacb );
};};_eagc :=NewOutline ();_fffaa (_ecbdd ,&_eagc .Entries );return _eagc ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bcdd *PdfPage )error ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ecdc :=NewPdfAnnotation ();_cfde :=&PdfAnnotationLink {};_cfde .PdfAnnotation =_ecdc ;_ecdc .SetContext (_cfde );return _cfde ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ffa :=NewPdfAnnotation ();_abgc :=&PdfAnnotationProjection {};_abgc .PdfAnnotation =_ffa ;_abgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffa .SetContext (_abgc );return _abgc ;};

// Encoder returns the font's text encoder.
func (_caad pdfFontType3 )Encoder ()_gcc .TextEncoder {return _caad ._bcffb };

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_gageg *_bbgb .PdfObjectDictionary ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ceegb int64 ;_ggdac int64 ;_fcdgb int64 ;_ggddg int64 ;_gcbcg int64 ;_aacd int64 ;_cgabdg byte ;_dgbaef int64 ;_gfgdb int64 ;};

// ToPdfObject implements interface PdfModel.
func (_aeff *PdfActionSetOCGState )ToPdfObject ()_bbgb .PdfObject {_aeff .PdfAction .ToPdfObject ();_dbbf :=_aeff ._dce ;_cadb :=_dbbf .PdfObject .(*_bbgb .PdfObjectDictionary );_cadb .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeSetOCGState )));
_cadb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_aeff .State );_cadb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_aeff .PreserveRB );return _dbbf ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_ebfad *PdfShading )GetContainingPdfObject ()_bbgb .PdfObject {return _ebfad ._bfgebd };func (_abef *PdfWriter )writeAcroFormFields ()error {if _abef ._agfeb ==nil {return nil ;};_bb .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_bacbg :=_abef ._agfeb .ToPdfObject ();_bb .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bacbg );_abef ._dfcbd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bacbg );_bcdg :=_abef .addObjects (_bacbg );
if _bcdg !=nil {return _bcdg ;};return nil ;};func (_fcfff *PdfWriter )getPdfVersion ()string {return _d .Sprintf ("\u0025\u0064\u002e%\u0064",_fcfff ._faabe .Major ,_fcfff ._faabe .Minor );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bedc *PdfShadingType1 )ToPdfObject ()_bbgb .PdfObject {_bedc .PdfShading .ToPdfObject ();_dfdec ,_fgfef :=_bedc .getShadingDict ();if _fgfef !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bedc .Domain !=nil {_dfdec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bedc .Domain );};if _bedc .Matrix !=nil {_dfdec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bedc .Matrix );};if _bedc .Function !=nil {if len (_bedc .Function )==1{_dfdec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bedc .Function [0].ToPdfObject ());
}else {_feccc :=_bbgb .MakeArray ();for _ ,_cafgd :=range _bedc .Function {_feccc .Append (_cafgd .ToPdfObject ());};_dfdec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_feccc );};};return _bedc ._bfgebd ;};func (_adcbf *DSS )addCRLs (_dffa [][]byte )([]*_bbgb .PdfObjectStream ,error ){return _adcbf .add (&_adcbf .CRLs ,_adcbf ._edce ,_dffa );
};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_egcab *PdfPageResources )SetColorspaceByName (keyName _bbgb .PdfObjectName ,cs PdfColorspace )error {_ecgge ,_gddg :=_egcab .GetColorspaces ();if _gddg !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gddg );
return _gddg ;};if _ecgge ==nil {_ecgge =NewPdfPageResourcesColorspaces ();_egcab .SetColorSpace (_ecgge );};_ecgge .Set (keyName ,cs );return nil ;};func _dacc (_cdbf _bbgb .PdfObject )(*PdfColorspaceICCBased ,error ){_deg :=&PdfColorspaceICCBased {};
if _fcaa ,_befa :=_cdbf .(*_bbgb .PdfIndirectObject );_befa {_deg ._edca =_fcaa ;};_cdbf =_bbgb .TraceToDirectObject (_cdbf );_afefe ,_cced :=_cdbf .(*_bbgb .PdfObjectArray );if !_cced {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _afefe .Len ()!=2{return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_cdbf =_bbgb .TraceToDirectObject (_afefe .Get (0));_fccfa ,_cced :=_cdbf .(*_bbgb .PdfObjectName );
if !_cced {return nil ,_d .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fccfa !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_d .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cdbf =_afefe .Get (1);_gabeb ,_cced :=_bbgb .GetStream (_cdbf );if !_cced {_bb .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cdbf );
return nil ,_d .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bfca :=_gabeb .PdfObjectDictionary ;_ccaf ,_cced :=_bfca .Get ("\u004e").(*_bbgb .PdfObjectInteger );
if !_cced {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ccaf !=1&&*_ccaf !=3&&*_ccaf !=4{return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_deg .N =int (*_ccaf );if _dbce :=_bfca .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dbce !=nil {_cegg ,_bcdag :=NewPdfColorspaceFromPdfObject (_dbce );if _bcdag !=nil {return nil ,_bcdag ;};_deg .Alternate =_cegg ;};if _feda :=_bfca .Get ("\u0052\u0061\u006eg\u0065");
_feda !=nil {_feda =_bbgb .TraceToDirectObject (_feda );_gdfd ,_cade :=_feda .(*_bbgb .PdfObjectArray );if !_cade {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _gdfd .Len ()!=2*_deg .N {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_agcd ,_agde :=_gdfd .GetAsFloat64Slice ();if _agde !=nil {return nil ,_agde ;};_deg .Range =_agcd ;}else {_deg .Range =make ([]float64 ,2*_deg .N );for _bae :=0;_bae < _deg .N ;_bae ++{_deg .Range [2*_bae ]=0.0;_deg .Range [2*_bae +1]=1.0;};};if _cgfe :=_bfca .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_cgfe !=nil {_ebdf ,_dcbe :=_cgfe .(*_bbgb .PdfObjectStream );if !_dcbe {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_deg .Metadata =_ebdf ;};_agbfa ,_cgbfc :=_bbgb .DecodeStream (_gabeb );if _cgbfc !=nil {return nil ,_cgbfc ;};_deg .Data =_agbfa ;_deg ._fafe =_gabeb ;return _deg ,nil ;};func _bfbdg (_fbcfe []byte )(_baea ,_bgcb string ,_aegcf error ){_bb .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_fbcfe ));
_dbge :=_fcff .FindIndex (_fbcfe );if _dbge ==nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bbgb .ErrTypeError ;};_befb :=_dbge [1];_eadg :=_df .Index (string (_fbcfe [_befb :]),_cefe );if _eadg < 0{_baea =string (_fbcfe [_befb :]);return _baea ,"",nil ;};_abfg :=_befb +_eadg ;_baea =string (_fbcfe [_befb :_abfg ]);_gece :=_abfg ;
_eadg =_df .Index (string (_fbcfe [_gece :]),_fede );if _eadg < 0{_bb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aegcf );
return "","",_bbgb .ErrTypeError ;};_aecbf :=_gece +_eadg ;_bgcb =string (_fbcfe [_gece :_aecbf ]);return _baea ,_bgcb ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_afd :=&PdfAppender {_bffc :reader ._gcfce ,Reader :reader ,_agbc :reader ._abceg ,_ebbb :reader ._efad };_efg ,_bgfgg :=_afd ._bffc .Seek (0,_bf .SeekEnd );
if _bgfgg !=nil {return nil ,_bgfgg ;};_afd ._eddc =_efg ;if _ ,_bgfgg =_afd ._bffc .Seek (0,_bf .SeekStart );_bgfgg !=nil {return nil ,_bgfgg ;};_afd ._cgeda ,_bgfgg =NewPdfReaderWithOpts (_afd ._bffc ,opts );if _bgfgg !=nil {return nil ,_bgfgg ;};for _ ,_egbgb :=range _afd .Reader .GetObjectNums (){if _afd ._fac < _egbgb {_afd ._fac =_egbgb ;
};};_afd ._bee =_afd ._agbc .GetXrefTable ();_afd ._bdbd =_afd ._agbc .GetXrefOffset ();_afd ._fegcd =append (_afd ._fegcd ,_afd ._cgeda .PageList ...);_afd ._ddfg =make (map[_bbgb .PdfObject ]struct{});_afd ._gcbf =make (map[_bbgb .PdfObject ]int64 );
_afd ._ecaea =make (map[_bbgb .PdfObject ]struct{});_afd ._eeec =_afd ._cgeda .AcroForm ;_afd ._gdg =_afd ._cgeda .DSS ;if opts !=nil {_afd ._febg =opts .Password ;};if encryptOptions !=nil {_afd ._daeb =encryptOptions ;};return _afd ,nil ;};type pdfSignDictionary struct{*_bbgb .PdfObjectDictionary ;
_aecff *SignatureHandler ;_gabecd *PdfSignature ;_dagfd int64 ;_fgfda int ;_daace int ;_dbgee int ;_dbggf int ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_gaca *PdfInfo )AddCustomInfo (name string ,value string )error {if _gaca ._fbcd ==nil {_gaca ._fbcd =_bbgb .MakeDict ();};if _ ,_eecea :=_fagcc [name ];_eecea {return _d .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_gaca ._fbcd .SetIfNotNil (*_bbgb .MakeName (name ),_bbgb .MakeString (value ));return nil ;};func (_fabfc *pdfFontSimple )baseFields ()*fontCommon {return &_fabfc .fontCommon };func (_ggfb *LTV )generateVRIKey (_acfed *PdfSignature )(string ,error ){_ddbdc ,_acba :=_fbeaac (_acfed .Contents .Bytes ());
if _acba !=nil {return "",_acba ;};return _df .ToUpper (_ed .EncodeToString (_ddbdc )),nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_badf *PdfColorspaceDeviceRGB )ToPdfObject ()_bbgb .PdfObject {return _bbgb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_fegcf *_ccg .Document )error ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_ccgf *PdfInfo )ToPdfObject ()_bbgb .PdfObject {_fgaac :=_bbgb .MakeDict ();_fgaac .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ccgf .Title );_fgaac .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ccgf .Author );_fgaac .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ccgf .Subject );
_fgaac .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ccgf .Keywords );_fgaac .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ccgf .Creator );_fgaac .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ccgf .Producer );
_fgaac .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ccgf .Trapped );if _ccgf .CreationDate !=nil {_fgaac .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ccgf .CreationDate .ToPdfObject ());};if _ccgf .ModifiedDate !=nil {_fgaac .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ccgf .ModifiedDate .ToPdfObject ());
};for _ ,_dbeab :=range _ccgf ._fbcd .Keys (){_fgaac .SetIfNotNil (_dbeab ,_ccgf ._fbcd .Get (_dbeab ));};return _fgaac ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bceaf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_gcc .CharCode )(_egfff []rune ,_bffcb ,_gcca int ){_cfaa ,_bffcb ,_gcca :=_bceaf .CharcodesToStrings (charcodes );return []rune (_df .Join (_cfaa ,"")),_bffcb ,_gcca ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bbgb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bbgb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_gbfa ,_deff :=encoder .EncodeBytes (img .Data );
if _deff !=nil {_bb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_deff );return nil ,_deff ;};_adgee :=NewXObjectImage ();_aegec :=img .Width ;_cbedd :=img .Height ;
_adgee .Width =&_aegec ;_adgee .Height =&_cbedd ;_fafcb :=img .BitsPerComponent ;_adgee .BitsPerComponent =&_fafcb ;_adgee .Filter =encoder ;_adgee .Stream =_gbfa ;if cs ==nil {if img .ColorComponents ==1{_adgee .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_adgee .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_adgee .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_adgee .ColorSpace =cs ;};if len (img ._bcbg )!=0{_bfgea :=NewXObjectImage ();_bfgea .Filter =encoder ;_gfegeg ,_eegg :=encoder .EncodeBytes (img ._bcbg );if _eegg !=nil {_bb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_eegg );
return nil ,_eegg ;};_bfgea .Stream =_gfegeg ;_bfgea .BitsPerComponent =_adgee .BitsPerComponent ;_bfgea .Width =&img .Width ;_bfgea .Height =&img .Height ;_bfgea .ColorSpace =NewPdfColorspaceDeviceGray ();_adgee .SMask =_bfgea .ToPdfObject ();}else {_adgee .SMask =xobjIn .SMask ;
_adgee .ImageMask =xobjIn .ImageMask ;if _adgee .ColorSpace .GetNumComponents ()==1{_gdfgf (_adgee );};};return _adgee ,nil ;};func (_bbage *PdfWriter )setHashIDs (_bbbbge _e .Hash )error {_cafcc :=_bbbbge .Sum (nil );if _bbage ._eddgd ==""{_bbage ._eddgd =_ed .EncodeToString (_cafcc [:8]);
};_bbage .setDocumentIDs (_bbage ._eddgd ,_ed .EncodeToString (_cafcc [8:]));return nil ;};func (_cceda *LTV )getCRLs (_fbgb []*_fc .Certificate )([][]byte ,error ){_fegb :=make ([][]byte ,0,len (_fbgb ));for _ ,_bebbe :=range _fbgb {for _ ,_dgdca :=range _bebbe .CRLDistributionPoints {if _cceda .CertClient .IsCA (_bebbe ){continue ;
};_ecdcb ,_fefbd :=_cceda .CRLClient .MakeRequest (_dgdca ,_bebbe );if _fefbd !=nil {_bb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fefbd );continue ;
};_fegb =append (_fegb ,_ecdcb );};};return _fegb ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_aefgdb *PdfPageResources )GetPatternByName (keyName _bbgb .PdfObjectName )(*PdfPattern ,bool ){if _aefgdb .Pattern ==nil {return nil ,false ;};_gbbge ,_ggagc :=_bbgb .TraceToDirectObject (_aefgdb .Pattern ).(*_bbgb .PdfObjectDictionary );if !_ggagc {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aefgdb .Pattern );
return nil ,false ;};if _gfefb :=_gbbge .Get (keyName );_gfefb !=nil {_gfda ,_dbaef :=_feaac (_gfefb );if _dbaef !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dbaef );
return nil ,false ;};return _gfda ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fegcgb *PdfShadingType2 )ToPdfObject ()_bbgb .PdfObject {_fegcgb .PdfShading .ToPdfObject ();_ggdd ,_cgadgd :=_fegcgb .getShadingDict ();if _cgadgd !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ggdd ==nil {_bb .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fegcgb .Coords !=nil {_ggdd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fegcgb .Coords );
};if _fegcgb .Domain !=nil {_ggdd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fegcgb .Domain );};if _fegcgb .Function !=nil {if len (_fegcgb .Function )==1{_ggdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fegcgb .Function [0].ToPdfObject ());
}else {_gfbg :=_bbgb .MakeArray ();for _ ,_cefbg :=range _fegcgb .Function {_gfbg .Append (_cefbg .ToPdfObject ());};_ggdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfbg );};};if _fegcgb .Extend !=nil {_ggdd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fegcgb .Extend );
};return _fegcgb ._bfgebd ;};

// ToPdfObject implements interface PdfModel.
func (_egf *PdfActionGoToE )ToPdfObject ()_bbgb .PdfObject {_egf .PdfAction .ToPdfObject ();_cba :=_egf ._dce ;_dcf :=_cba .PdfObject .(*_bbgb .PdfObjectDictionary );_dcf .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeGoToE )));if _egf .F !=nil {_dcf .Set ("\u0046",_egf .F .ToPdfObject ());
};_dcf .SetIfNotNil ("\u0044",_egf .D );_dcf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_egf .NewWindow );_dcf .SetIfNotNil ("\u0054",_egf .T );return _cba ;};func _facc (_gaeag *PdfField )[]*PdfField {_dcffe :=[]*PdfField {_gaeag };for _ ,_cdca :=range _gaeag .Kids {_dcffe =append (_dcffe ,_facc (_cdca )...);
};return _dcffe ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_efcf *PdfPattern )ToPdfObject ()_bbgb .PdfObject {_gbgba :=_efcf .getDict ();_gbgba .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gbgba .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bbgb .MakeInteger (_efcf .PatternType ));
return _efcf ._gdgafe ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_acda *PdfColorLab )GetNumComponents ()int {return 3};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_afba *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject implements interface PdfModel.
func (_efde *PdfAnnotationPrinterMark )ToPdfObject ()_bbgb .PdfObject {_efde .PdfAnnotation .ToPdfObject ();_gebd :=_efde ._bce ;_eebg :=_gebd .PdfObject .(*_bbgb .PdfObjectDictionary );_eebg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_eebg .SetIfNotNil ("\u004d\u004e",_efde .MN );return _gebd ;};func (_fddae *PdfWriter )writeBytes (_ggcd []byte ){if _fddae ._cccge !=nil {return ;};_adbabe ,_edbef :=_fddae ._gacdg .Write (_ggcd );_fddae ._cfbdg +=int64 (_adbabe );_fddae ._cccge =_edbef ;
};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_fagc :=NewPdfAnnotation ();_fge :=&PdfAnnotationFileAttachment {};_fge .PdfAnnotation =_fagc ;_fge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fagc .SetContext (_fge );return _fge ;
};

// GetAscent returns the Ascent of the font `descriptor`.
func (_eefcg *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bbgb .GetNumberAsFloat (_eefcg .Ascent );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdaa *PdfColorspaceSpecialPattern )ToPdfObject ()_bbgb .PdfObject {if _fdaa .UnderlyingCS ==nil {return _bbgb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_badc :=_bbgb .MakeArray (_bbgb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_badc .Append (_fdaa .UnderlyingCS .ToPdfObject ());if _fdaa ._egbee !=nil {_fdaa ._egbee .PdfObject =_badc ;return _fdaa ._egbee ;};return _badc ;};func (_baeca *PdfWriter )optimizeDocument ()error {if _baeca ._bdggb ==nil {return nil ;};_cgefg ,_abge :=_bbgb .GetDict (_baeca ._bgfbb );
if !_abge {return _fd .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ebeag :=_ccg .Document {ID :[2]string {_baeca ._eddgd ,_baeca ._cebgb },Version :_baeca ._faabe ,Objects :_baeca ._cagcad ,Info :_cgefg ,Crypt :_baeca ._agdbe ,UseHashBasedID :_baeca ._fffff };
if _ddccc :=_baeca ._bdggb .ApplyStandard (&_ebeag );_ddccc !=nil {return _ddccc ;};_baeca ._eddgd ,_baeca ._cebgb =_ebeag .ID [0],_ebeag .ID [1];_baeca ._faabe =_ebeag .Version ;_baeca ._cagcad =_ebeag .Objects ;_baeca ._bgfbb .PdfObject =_ebeag .Info ;
_baeca ._fffff =_ebeag .UseHashBasedID ;_baeca ._agdbe =_ebeag .Crypt ;_bdccc :=make (map[_bbgb .PdfObject ]struct{},len (_baeca ._cagcad ));for _ ,_gbbdg :=range _baeca ._cagcad {_bdccc [_gbbdg ]=struct{}{};};_baeca ._bfded =_bdccc ;return nil ;};

// G returns the value of the green component of the color.
func (_eaa *PdfColorDeviceRGB )G ()float64 {return _eaa [1]};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ffgfc *PdfPage )GetAllContentStreams ()(string ,error ){_cdcdf ,_bgbea :=_ffgfc .GetContentStreams ();if _bgbea !=nil {return "",_bgbea ;};return _df .Join (_cdcdf ,"\u0020"),nil ;};func _gecfbc (_gagbe _bbgb .PdfObject )(*PdfShading ,error ){_fgdg :=&PdfShading {};
var _bbcf *_bbgb .PdfObjectDictionary ;if _agca ,_ccaea :=_bbgb .GetIndirect (_gagbe );_ccaea {_fgdg ._bfgebd =_agca ;_afaae ,_cbeae :=_agca .PdfObject .(*_bbgb .PdfObjectDictionary );if !_cbeae {_bb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_bbgb .ErrTypeError ;};_bbcf =_afaae ;}else if _bdddd ,_agdg :=_bbgb .GetStream (_gagbe );_agdg {_fgdg ._bfgebd =_bdddd ;_bbcf =_bdddd .PdfObjectDictionary ;}else if _abad ,_afdfe :=_bbgb .GetDict (_gagbe );_afdfe {_fgdg ._bfgebd =_abad ;_bbcf =_abad ;
}else {_bb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gagbe );return nil ,_bbgb .ErrTypeError ;};if _bbcf ==nil {_bb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gagbe =_bbcf .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gagbe ==nil {_bb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gagbe =_bbgb .TraceToDirectObject (_gagbe );_bdfe ,_fcbbf :=_gagbe .(*_bbgb .PdfObjectInteger );if !_fcbbf {_bb .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gagbe );
return nil ,_bbgb .ErrTypeError ;};if *_bdfe < 1||*_bdfe > 7{_bb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bdfe );
return nil ,_bbgb .ErrTypeError ;};_fgdg .ShadingType =_bdfe ;_gagbe =_bbcf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gagbe ==nil {_bb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdbgb ,_egfgc :=NewPdfColorspaceFromPdfObject (_gagbe );if _egfgc !=nil {_bb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_egfgc );
return nil ,_egfgc ;};_fgdg .ColorSpace =_gdbgb ;_gagbe =_bbcf .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gagbe !=nil {_gagbe =_bbgb .TraceToDirectObject (_gagbe );_fedbg ,_edgdc :=_gagbe .(*_bbgb .PdfObjectArray );if !_edgdc {_bb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gagbe );
return nil ,_bbgb .ErrTypeError ;};_fgdg .Background =_fedbg ;};_gagbe =_bbcf .Get ("\u0042\u0042\u006f\u0078");if _gagbe !=nil {_gagbe =_bbgb .TraceToDirectObject (_gagbe );_bdabd ,_begf :=_gagbe .(*_bbgb .PdfObjectArray );if !_begf {_bb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gagbe );
return nil ,_bbgb .ErrTypeError ;};_dbagg ,_beee :=NewPdfRectangle (*_bdabd );if _beee !=nil {_bb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_beee );return nil ,_beee ;};_fgdg .BBox =_dbagg ;};_gagbe =_bbcf .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _gagbe !=nil {_gagbe =_bbgb .TraceToDirectObject (_gagbe );_ccede ,_bccdc :=_gagbe .(*_bbgb .PdfObjectBool );if !_bccdc {_bb .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gagbe );
return nil ,_bbgb .ErrTypeError ;};_fgdg .AntiAlias =_ccede ;};switch *_bdfe {case 1:_adcaf ,_ecfdf :=_dbcc (_bbcf );if _ecfdf !=nil {return nil ,_ecfdf ;};_adcaf .PdfShading =_fgdg ;_fgdg ._ccdac =_adcaf ;return _fgdg ,nil ;case 2:_fddgb ,_begace :=_agcaf (_bbcf );
if _begace !=nil {return nil ,_begace ;};_fddgb .PdfShading =_fgdg ;_fgdg ._ccdac =_fddgb ;return _fgdg ,nil ;case 3:_defcb ,_abbaa :=_edbe (_bbcf );if _abbaa !=nil {return nil ,_abbaa ;};_defcb .PdfShading =_fgdg ;_fgdg ._ccdac =_defcb ;return _fgdg ,nil ;
case 4:_ggacc ,_edfc :=_bbab (_bbcf );if _edfc !=nil {return nil ,_edfc ;};_ggacc .PdfShading =_fgdg ;_fgdg ._ccdac =_ggacc ;return _fgdg ,nil ;case 5:_fcegc ,_bfeee :=_cgea (_bbcf );if _bfeee !=nil {return nil ,_bfeee ;};_fcegc .PdfShading =_fgdg ;_fgdg ._ccdac =_fcegc ;
return _fgdg ,nil ;case 6:_ccebe ,_cbcfa :=_dgbe (_bbcf );if _cbcfa !=nil {return nil ,_cbcfa ;};_ccebe .PdfShading =_fgdg ;_fgdg ._ccdac =_ccebe ;return _fgdg ,nil ;case 7:_ecda ,_agbb :=_eaceg (_bbcf );if _agbb !=nil {return nil ,_agbb ;};_ecda .PdfShading =_fgdg ;
_fgdg ._ccdac =_ecda ;return _fgdg ,nil ;};return nil ,_fd .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_adedg *PdfRectangle )Normalize (){if _adedg .Llx > _adedg .Urx {_adedg .Llx ,_adedg .Urx =_adedg .Urx ,_adedg .Llx ;};if _adedg .Lly > _adedg .Ury {_adedg .Lly ,_adedg .Ury =_adedg .Ury ,_adedg .Lly ;};};func _ddfe (_dgede _bbgb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bb .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dgede .String (),_dgede );
_cfgca :=NewPdfColorspaceSpecialPattern ();if _fbbg ,_geaea :=_dgede .(*_bbgb .PdfIndirectObject );_geaea {_cfgca ._egbee =_fbbg ;};_dgede =_bbgb .TraceToDirectObject (_dgede );if _caga ,_bege :=_dgede .(*_bbgb .PdfObjectName );_bege {if *_caga !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _cfgca ,nil ;};_bed ,_cefd :=_dgede .(*_bbgb .PdfObjectArray );if !_cefd {_bb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dgede );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bed .Len ()!=1&&_bed .Len ()!=2{_bb .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bed );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dgede =_bed .Get (0);if _agec ,_daee :=_dgede .(*_bbgb .PdfObjectName );_daee {if *_agec !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bb .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_agec );
return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bed .Len ()> 1{_dgede =_bed .Get (1);_dgede =_bbgb .TraceToDirectObject (_dgede );_ggfa ,_daggg :=NewPdfColorspaceFromPdfObject (_dgede );if _daggg !=nil {return nil ,_daggg ;
};_cfgca .UnderlyingCS =_ggfa ;};_bb .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_cfgca .UnderlyingCS );
return _cfgca ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_bbbc *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_eeecg *PdfPage )ToPdfObject ()_bbgb .PdfObject {_bcffc :=_eeecg ._efbe ;_eeecg .GetPageDict ();return _bcffc ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fgge :=NewPdfAnnotation ();_ecf :=&PdfAnnotationPolygon {};_ecf .PdfAnnotation =_fgge ;_ecf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgge .SetContext (_ecf );return _ecf ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_gfada *PdfPageResources )SetShadingByName (keyName _bbgb .PdfObjectName ,shadingObj _bbgb .PdfObject )error {if _gfada .Shading ==nil {_gfada .Shading =_bbgb .MakeDict ();};_cgccg ,_gaadec :=_gfada .Shading .(*_bbgb .PdfObjectDictionary );if !_gaadec {return _bbgb .ErrTypeError ;
};_cgccg .Set (keyName ,shadingObj );return nil ;};func _aeae (_cebfa _bbgb .PdfObject )(*PdfFontDescriptor ,error ){_cfbee :=&PdfFontDescriptor {};_cebfa =_bbgb .ResolveReference (_cebfa );if _ddfbb ,_cabbc :=_cebfa .(*_bbgb .PdfIndirectObject );_cabbc {_cfbee ._gaeg =_ddfbb ;
_cebfa =_ddfbb .PdfObject ;};_gcafc ,_geaf :=_bbgb .GetDict (_cebfa );if !_geaf {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cebfa );
return nil ,_bbgb .ErrTypeError ;};if _fadf :=_gcafc .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_fadf !=nil {_cfbee .FontName =_fadf ;}else {_bb .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_bdagg ,_ :=_bbgb .GetName (_cfbee .FontName );if _caegg :=_gcafc .Get ("\u0054\u0079\u0070\u0065");_caegg !=nil {_gbgd ,_facg :=_caegg .(*_bbgb .PdfObjectName );if !_facg ||string (*_gbgd )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_caegg ,_bdagg ,_cfbee .FontName );
};}else {_bb .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bdagg ,_cfbee .FontName );
};_cfbee .FontFamily =_gcafc .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cfbee .FontStretch =_gcafc .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cfbee .FontWeight =_gcafc .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_cfbee .Flags =_gcafc .Get ("\u0046\u006c\u0061g\u0073");_cfbee .FontBBox =_gcafc .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cfbee .ItalicAngle =_gcafc .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cfbee .Ascent =_gcafc .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_cfbee .Descent =_gcafc .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cfbee .Leading =_gcafc .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cfbee .CapHeight =_gcafc .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cfbee .XHeight =_gcafc .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_cfbee .StemV =_gcafc .Get ("\u0053\u0074\u0065m\u0056");_cfbee .StemH =_gcafc .Get ("\u0053\u0074\u0065m\u0048");_cfbee .AvgWidth =_gcafc .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cfbee .MaxWidth =_gcafc .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_cfbee .MissingWidth =_gcafc .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cfbee .FontFile =_gcafc .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cfbee .FontFile2 =_gcafc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_cfbee .FontFile3 =_gcafc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cfbee .CharSet =_gcafc .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cfbee .Style =_gcafc .Get ("\u0053\u0074\u0079l\u0065");_cfbee .Lang =_gcafc .Get ("\u004c\u0061\u006e\u0067");
_cfbee .FD =_gcafc .Get ("\u0046\u0044");_cfbee .CIDSet =_gcafc .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cfbee .Flags !=nil {if _gcfa ,_ccdad :=_bbgb .GetIntVal (_cfbee .Flags );_ccdad {_cfbee ._gdaee =_gcfa ;};};if _cfbee .MissingWidth !=nil {if _ebbf ,_ecb :=_bbgb .GetNumberAsFloat (_cfbee .MissingWidth );
_ecb ==nil {_cfbee ._cbab =_ebbf ;};};if _cfbee .FontFile !=nil {_bddd ,_dfeg :=_gdga (_cfbee .FontFile );if _dfeg !=nil {return _cfbee ,_dfeg ;};_bb .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bddd );_cfbee .fontFile =_bddd ;
};if _cfbee .FontFile2 !=nil {_ccbfd ,_efbf :=_add .NewFontFile2FromPdfObject (_cfbee .FontFile2 );if _efbf !=nil {return _cfbee ,_efbf ;};_bb .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ccbfd .String ());_cfbee ._gbaac =&_ccbfd ;
};return _cfbee ,nil ;};func _efcbc (_dccc _bbgb .PdfObject )(*PdfFunctionType2 ,error ){_bdbcg :=&PdfFunctionType2 {};var _feba *_bbgb .PdfObjectDictionary ;if _bdffc ,_gbcc :=_dccc .(*_bbgb .PdfIndirectObject );_gbcc {_aacag ,_eaagf :=_bdffc .PdfObject .(*_bbgb .PdfObjectDictionary );
if !_eaagf {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdbcg ._eafce =_bdffc ;_feba =_aacag ;}else if _geaec ,_cgdgcc :=_dccc .(*_bbgb .PdfObjectDictionary );_cgdgcc {_feba =_geaec ;
}else {return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bb .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_feba .String ());_cdgea ,_ffccg :=_bbgb .TraceToDirectObject (_feba .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bbgb .PdfObjectArray );
if !_ffccg {_bb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cdgea .Len ()< 0||_cdgea .Len ()%2!=0{_bb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_aabad ,_ccea :=_cdgea .ToFloat64Array ();if _ccea !=nil {return nil ,_ccea ;};_bdbcg .Domain =_aabad ;_cdgea ,_ffccg =_bbgb .TraceToDirectObject (_feba .Get ("\u0052\u0061\u006eg\u0065")).(*_bbgb .PdfObjectArray );if _ffccg {if _cdgea .Len ()< 0||_cdgea .Len ()%2!=0{return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_efecb ,_aggb :=_cdgea .ToFloat64Array ();if _aggb !=nil {return nil ,_aggb ;};_bdbcg .Range =_efecb ;};_cdgea ,_ffccg =_bbgb .TraceToDirectObject (_feba .Get ("\u0043\u0030")).(*_bbgb .PdfObjectArray );if _ffccg {_acgc ,_ecee :=_cdgea .ToFloat64Array ();
if _ecee !=nil {return nil ,_ecee ;};_bdbcg .C0 =_acgc ;};_cdgea ,_ffccg =_bbgb .TraceToDirectObject (_feba .Get ("\u0043\u0031")).(*_bbgb .PdfObjectArray );if _ffccg {_eafdf ,_fbbeg :=_cdgea .ToFloat64Array ();if _fbbeg !=nil {return nil ,_fbbeg ;};_bdbcg .C1 =_eafdf ;
};if len (_bdbcg .C0 )!=len (_bdbcg .C1 ){_bb .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bbgb .ErrRangeError ;};N ,_ccea :=_bbgb .GetNumberAsFloat (_bbgb .TraceToDirectObject (_feba .Get ("\u004e")));
if _ccea !=nil {_bb .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_feba .String ());return nil ,_ccea ;};_bdbcg .N =N ;
return _bdbcg ,nil ;};func (_gbb *PdfReader )newPdfActionMovieFromDict (_ffe *_bbgb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ffe .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ffe .Get ("\u0054"),Operation :_ffe .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// Encoder returns the font's text encoder.
func (_gafcc pdfCIDFontType2 )Encoder ()_gcc .TextEncoder {return _gafcc ._eedda };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_decf *_bbgb .PdfIndirectObject ;};func _aggfd (_bgca *_bbgb .PdfObjectDictionary ,_baega *fontCommon )(*pdfFontType3 ,error ){_dgfcc :=_ddgcc (_baega );_cdbb :=_bgca .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _cdbb ==nil {_cdbb =_bbgb .MakeInteger (0);};_dgfcc .FirstChar =_cdbb ;_bdbfe ,_cbda :=_bbgb .GetIntVal (_cdbb );if !_cbda {_bb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cdbb );
return nil ,_bbgb .ErrTypeError ;};_cbcd :=_gcc .CharCode (_bdbfe );_cdbb =_bgca .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cdbb ==nil {_cdbb =_bbgb .MakeInteger (255);};_dgfcc .LastChar =_cdbb ;_bdbfe ,_cbda =_bbgb .GetIntVal (_cdbb );
if !_cbda {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cdbb );return nil ,_bbgb .ErrTypeError ;
};_daffb :=_gcc .CharCode (_bdbfe );_cdbb =_bgca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cdbb !=nil {_dgfcc .Resources =_cdbb ;};_cdbb =_bgca .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _cdbb ==nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_cdbb );
return nil ,_bbgb .ErrNotSupported ;};_dgfcc .CharProcs =_cdbb ;_cdbb =_bgca .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _cdbb ==nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_cdbb );
return nil ,_bbgb .ErrNotSupported ;};_dgfcc .FontMatrix =_cdbb ;_dgfcc ._baage =make (map[_gcc .CharCode ]float64 );_cdbb =_bgca .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cdbb !=nil {_dgfcc .Widths =_cdbb ;_febd ,_dggfg :=_bbgb .GetArray (_cdbb );
if !_dggfg {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cdbb );return nil ,_bbgb .ErrTypeError ;
};_gdaf ,_ddgag :=_febd .ToFloat64Array ();if _ddgag !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ddgag ;};if len (_gdaf )!=int (_daffb -_cbcd +1){_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_daffb -_cbcd +1,len (_gdaf ));
return nil ,_bbgb .ErrRangeError ;};_eage ,_dggfg :=_bbgb .GetArray (_dgfcc .FontMatrix );if !_dggfg {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eage );
return nil ,_ddgag ;};_fgec ,_ddgag :=_eage .ToFloat64Array ();if _ddgag !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ddgag ;};_bbbd :=_fga .NewMatrix (_fgec [0],_fgec [1],_fgec [2],_fgec [3],_fgec [4],_fgec [5]);for _cecd ,_adcbc :=range _gdaf {_aeef ,_ :=_bbbd .Transform (_adcbc ,_adcbc );_dgfcc ._baage [_cbcd +_gcc .CharCode (_cecd )]=_aeef ;};};_dgfcc .Encoding =_bbgb .TraceToDirectObject (_bgca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_bfgdf :=_bgca .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bfgdf !=nil {_dgfcc ._ddbff =_bbgb .TraceToDirectObject (_bfgdf );_agbge ,_cadbbg :=_edgbc (_dgfcc ._ddbff ,&_dgfcc .fontCommon );if _cadbbg !=nil {return nil ,_cadbbg ;};_dgfcc ._aafb =_agbge ;
};if _aecgc :=_dgfcc ._aafb ;_aecgc !=nil {_dgfcc ._bcffb =_gcc .NewCMapEncoder ("",nil ,_aecgc );}else {_dgfcc ._bcffb =_gcc .NewPdfDocEncoder ();};return _dgfcc ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dbeaf *PdfFieldText )ToPdfObject ()_bbgb .PdfObject {_dbeaf .PdfField .ToPdfObject ();_dfcb :=_dbeaf ._bgbc ;_cgaf :=_dfcb .PdfObject .(*_bbgb .PdfObjectDictionary );_cgaf .Set ("\u0046\u0054",_bbgb .MakeName ("\u0054\u0078"));if _dbeaf .DA !=nil {_cgaf .Set ("\u0044\u0041",_dbeaf .DA );
};if _dbeaf .Q !=nil {_cgaf .Set ("\u0051",_dbeaf .Q );};if _dbeaf .DS !=nil {_cgaf .Set ("\u0044\u0053",_dbeaf .DS );};if _dbeaf .RV !=nil {_cgaf .Set ("\u0052\u0056",_dbeaf .RV );};if _dbeaf .MaxLen !=nil {_cgaf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dbeaf .MaxLen );
};return _dfcb ;};func (_cdgdfb *PdfWriter )addObject (_dfdba _bbgb .PdfObject )bool {_debda :=_cdgdfb .hasObject (_dfdba );if !_debda {_caffa :=_bbgb .ResolveReferencesDeep (_dfdba ,_cdgdfb ._eebd );if _caffa !=nil {_bb .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_caffa );
};_cdgdfb ._cagcad =append (_cdgdfb ._cagcad ,_dfdba );_cdgdfb ._bfded [_dfdba ]=struct{}{};return true ;};return false ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_egafa *PdfPattern )IsTiling ()bool {return _egafa .PatternType ==1};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_bdgd *PdfColorspaceDeviceN )ToPdfObject ()_bbgb .PdfObject {_gfgd :=_bbgb .MakeArray (_bbgb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gfgd .Append (_bdgd .ColorantNames );_gfgd .Append (_bdgd .AlternateSpace .ToPdfObject ());_gfgd .Append (_bdgd .TintTransform .ToPdfObject ());
if _bdgd .Attributes !=nil {_gfgd .Append (_bdgd .Attributes .ToPdfObject ());};if _bdgd ._fcfb !=nil {_bdgd ._fcfb .PdfObject =_gfgd ;return _bdgd ._fcfb ;};return _gfgd ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_aadcg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bbgb .GetNumberAsFloat (_aadcg .CapHeight );};

// ToPdfObject implements interface PdfModel.
func (_eafe *PdfAnnotation3D )ToPdfObject ()_bbgb .PdfObject {_eafe .PdfAnnotation .ToPdfObject ();_cgab :=_eafe ._bce ;_dgag :=_cgab .PdfObject .(*_bbgb .PdfObjectDictionary );_dgag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0033\u0044"));
_dgag .SetIfNotNil ("\u0033\u0044\u0044",_eafe .T3DD );_dgag .SetIfNotNil ("\u0033\u0044\u0056",_eafe .T3DV );_dgag .SetIfNotNil ("\u0033\u0044\u0041",_eafe .T3DA );_dgag .SetIfNotNil ("\u0033\u0044\u0049",_eafe .T3DI );_dgag .SetIfNotNil ("\u0033\u0044\u0042",_eafe .T3DB );
return _cgab ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bbgb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bbgb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bbgb .PdfObjectBool ;_ccdac PdfModel ;_bfgebd _bbgb .PdfObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ebeae :=&PdfOutline {_fbbf :_bbgb .MakeIndirectObject (_bbgb .MakeDict ())};_ebeae ._efef =_ebeae ;return _ebeae ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_faabc *Image )GetParamsDict ()*_bbgb .PdfObjectDictionary {_bcgbc :=_bbgb .MakeDict ();_bcgbc .Set ("\u0057\u0069\u0064t\u0068",_bbgb .MakeInteger (_faabc .Width ));_bcgbc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbgb .MakeInteger (_faabc .Height ));
_bcgbc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbgb .MakeInteger (int64 (_faabc .ColorComponents )));_bcgbc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbgb .MakeInteger (_faabc .BitsPerComponent ));
return _bcgbc ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_edfec pdfFontSimple )GetRuneMetrics (r rune )(_add .CharMetrics ,bool ){if _edfec ._eeff !=nil {_bdbbg ,_bcfcc :=_edfec ._eeff .Read (r );if _bcfcc {return _bdbbg ,true ;};};_cgec :=_edfec .Encoder ();if _cgec ==nil {_bb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_edfec );
return _add .CharMetrics {},false ;};_cgbd ,_gcfc :=_cgec .RuneToCharcode (r );if !_gcfc {if r !=' '{_bb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_edfec );
};return _add .CharMetrics {},false ;};_gegcc ,_aebacd :=_edfec .GetCharMetrics (_cgbd );return _gegcc ,_aebacd ;};func _gdgaf (_gggg *_bbgb .PdfIndirectObject )(*PdfOutline ,error ){_dcbbf ,_bfacae :=_gggg .PdfObject .(*_bbgb .PdfObjectDictionary );if !_bfacae {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eegcb :=NewPdfOutline ();if _faac :=_dcbbf .Get ("\u0054\u0079\u0070\u0065");_faac !=nil {_fbagb ,_dcebf :=_faac .(*_bbgb .PdfObjectName );if _dcebf {if *_fbagb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bb .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fbagb );
};};};if _cgeba :=_dcbbf .Get ("\u0043\u006f\u0075n\u0074");_cgeba !=nil {_cbagb ,_cbcge :=_bbgb .GetNumberAsInt64 (_cgeba );if _cbcge !=nil {return nil ,_cbcge ;};_eegcb .Count =&_cbagb ;};return _eegcb ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_faff []byte ;_bdca []uint32 ;_eaca *_bbgb .PdfObjectStream ;};func (_caafdd *PdfShading )getShadingDict ()(*_bbgb .PdfObjectDictionary ,error ){_ddfd :=_caafdd ._bfgebd ;
if _dfabe ,_cbbdg :=_ddfd .(*_bbgb .PdfIndirectObject );_cbbdg {_fgcaa ,_cbgea :=_dfabe .PdfObject .(*_bbgb .PdfObjectDictionary );if !_cbgea {return nil ,_bbgb .ErrTypeError ;};return _fgcaa ,nil ;}else if _gegec ,_aadf :=_ddfd .(*_bbgb .PdfObjectStream );
_aadf {return _gegec .PdfObjectDictionary ,nil ;}else if _cdafe ,_gffc :=_ddfd .(*_bbgb .PdfObjectDictionary );_gffc {return _cdafe ,nil ;}else {_bb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_bbgb .ErrTypeError ;};};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_affa *PdfPageResources )GetXObjectImageByName (keyName _bbgb .PdfObjectName )(*XObjectImage ,error ){_ddca ,_abeb :=_affa .GetXObjectByName (keyName );if _ddca ==nil {return nil ,nil ;};if _abeb !=XObjectTypeImage {return nil ,_fd .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_cbbg ,_dgaef :=NewXObjectImageFromStream (_ddca );if _dgaef !=nil {return nil ,_dgaef ;};return _cbbg ,nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_aadbc *PdfPageResources )GenerateXObjectName ()_bbgb .PdfObjectName {_ceaeb :=1;for {_ebgbc :=_bbgb .MakeName (_d .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_ceaeb ));if !_aadbc .HasXObjectByName (*_ebgbc ){return *_ebgbc ;};_ceaeb ++;};};
func _efddb (_caaf map[_add .GID ]int ,_bggcb uint16 )*_bbgb .PdfObjectArray {_eegc :=&_bbgb .PdfObjectArray {};_badb :=_add .GID (_bggcb );for _fedf :=_add .GID (0);_fedf < _badb ;{_ccec ,_gdda :=_caaf [_fedf ];if !_gdda {_fedf ++;continue ;};_cbeg :=_fedf ;
for _gbga :=_cbeg +1;_gbga < _badb ;_gbga ++{if _cefde ,_bgea :=_caaf [_gbga ];!_bgea ||_ccec !=_cefde {break ;};_cbeg =_gbga ;};_eegc .Append (_bbgb .MakeInteger (int64 (_fedf )));_eegc .Append (_bbgb .MakeInteger (int64 (_cbeg )));_eegc .Append (_bbgb .MakeInteger (int64 (_ccec )));
_fedf =_cbeg +1;};return _eegc ;};func _bbab (_geadg *_bbgb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dfbda :=PdfShadingType4 {};_bccfcf :=_geadg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bccfcf ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acgea ,_fegga :=_bccfcf .(*_bbgb .PdfObjectInteger );if !_fegga {_bb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bccfcf );
return nil ,_bbgb .ErrTypeError ;};_dfbda .BitsPerCoordinate =_acgea ;_bccfcf =_geadg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bccfcf ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_acgea ,_fegga =_bccfcf .(*_bbgb .PdfObjectInteger );if !_fegga {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bccfcf );
return nil ,_bbgb .ErrTypeError ;};_dfbda .BitsPerComponent =_acgea ;_bccfcf =_geadg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bccfcf ==nil {_bb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acgea ,_fegga =_bccfcf .(*_bbgb .PdfObjectInteger );if !_fegga {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bccfcf );
return nil ,_bbgb .ErrTypeError ;};_dfbda .BitsPerComponent =_acgea ;_bccfcf =_geadg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bccfcf ==nil {_bb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbee ,_fegga :=_bccfcf .(*_bbgb .PdfObjectArray );if !_fegga {_bb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bccfcf );
return nil ,_bbgb .ErrTypeError ;};_dfbda .Decode =_cbee ;_bccfcf =_geadg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bccfcf ==nil {_bb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dfbda .Function =[]PdfFunction {};if _faaec ,_dfff :=_bccfcf .(*_bbgb .PdfObjectArray );_dfff {for _ ,_dcdgb :=range _faaec .Elements (){_ffbd ,_cdbgd :=_cdfb (_dcdgb );if _cdbgd !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdbgd );
return nil ,_cdbgd ;};_dfbda .Function =append (_dfbda .Function ,_ffbd );};}else {_dfeac ,_cffeaa :=_cdfb (_bccfcf );if _cffeaa !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cffeaa );
return nil ,_cffeaa ;};_dfbda .Function =append (_dfbda .Function ,_dfeac );};return &_dfbda ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_abdgeb *PdfPage )HasXObjectByName (name _bbgb .PdfObjectName )bool {_gcea ,_ceecg :=_abdgeb .Resources .XObject .(*_bbgb .PdfObjectDictionary );if !_ceecg {return false ;};if _bbfbb :=_gcea .Get (name );_bbfbb !=nil {return true ;};return false ;
};func (_dgedg *PdfWriter )writeObjectsInStreams (_cdbgc map[_bbgb .PdfObject ]bool )error {for _ ,_fafd :=range _dgedg ._cagcad {if _cefaf :=_cdbgc [_fafd ];_cefaf {continue ;};_agbba :=int64 (0);switch _ecbbf :=_fafd .(type ){case *_bbgb .PdfIndirectObject :_agbba =_ecbbf .ObjectNumber ;
case *_bbgb .PdfObjectStream :_agbba =_ecbbf .ObjectNumber ;case *_bbgb .PdfObjectStreams :_agbba =_ecbbf .ObjectNumber ;default:_bb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_fafd );
return ErrTypeCheck ;};if _dgedg ._agdbe !=nil &&_fafd !=_dgedg ._bebbea {_fffcc :=_dgedg ._agdbe .Encrypt (_fafd ,_agbba ,0);if _fffcc !=nil {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_fffcc );
return _fffcc ;};};_dgedg .writeObject (int (_agbba ),_fafd );};return nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_baee *PdfPageResources )SetPatternByName (keyName _bbgb .PdfObjectName ,pattern _bbgb .PdfObject )error {if _baee .Pattern ==nil {_baee .Pattern =_bbgb .MakeDict ();};_dfecb ,_ebbef :=_baee .Pattern .(*_bbgb .PdfObjectDictionary );if !_ebbef {return _bbgb .ErrTypeError ;
};_dfecb .Set (keyName ,pattern );return nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_bggcbg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bggcbg ._abceg .GetCrypter ()!=nil &&!_bggcbg ._abceg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_bggcbg ._gadg )< pageNumber {return nil ,_fd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_eadd :=pageNumber -1;if _eadd < 0{return nil ,_d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_abbgf :=_bggcbg .PageList [_eadd ];
return _abbgf ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_eacb *pdfFontSimple )ToPdfObject ()_bbgb .PdfObject {if _eacb ._fagfd ==nil {_eacb ._fagfd =&_bbgb .PdfIndirectObject {};};_dgeda :=_eacb .baseFields ().asPdfObjectDictionary ("");_eacb ._fagfd .PdfObject =_dgeda ;if _eacb .FirstChar !=nil {_dgeda .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_eacb .FirstChar );
};if _eacb .LastChar !=nil {_dgeda .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_eacb .LastChar );};if _eacb .Widths !=nil {_dgeda .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_eacb .Widths );};if _eacb .Encoding !=nil {_dgeda .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eacb .Encoding );
}else if _eacb ._fddbf !=nil {_acfe :=_eacb ._fddbf .ToPdfObject ();if _acfe !=nil {_dgeda .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acfe );};};return _eacb ._fagfd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_facea *PdfSignature )GetContainingPdfObject ()_bbgb .PdfObject {return _facea ._ccdaa };

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_gaac :=PdfColorLab {l ,a ,b };return &_gaac };

// B returns the value of the B component of the color.
func (_gagd *PdfColorLab )B ()float64 {return _gagd [2]};func (_ddcec *fontFile )loadFromSegments (_cdbgba ,_cdffg []byte )error {_bb .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cdbgba ),len (_cdffg ));
_ccbfgg :=_ddcec .parseASCIIPart (_cdbgba );if _ccbfgg !=nil {return _ccbfgg ;};_bb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ddcec );if len (_cdffg )==0{return nil ;};_bb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ddcec );
return nil ;};func (_eed *PdfReader )newPdfAnnotationFreeTextFromDict (_fdec *_bbgb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_geg :=PdfAnnotationFreeText {};_bdb ,_fgf :=_eed .newPdfAnnotationMarkupFromDict (_fdec );if _fgf !=nil {return nil ,_fgf ;
};_geg .PdfAnnotationMarkup =_bdb ;_geg .DA =_fdec .Get ("\u0044\u0041");_geg .Q =_fdec .Get ("\u0051");_geg .RC =_fdec .Get ("\u0052\u0043");_geg .DS =_fdec .Get ("\u0044\u0053");_geg .CL =_fdec .Get ("\u0043\u004c");_geg .IT =_fdec .Get ("\u0049\u0054");
_geg .BE =_fdec .Get ("\u0042\u0045");_geg .RD =_fdec .Get ("\u0052\u0044");_geg .BS =_fdec .Get ("\u0042\u0053");_geg .LE =_fdec .Get ("\u004c\u0045");return &_geg ,nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_afge *PdfPage )AddContentStreamByString (contentStr string )error {_fdecg ,_dcddb :=_bbgb .MakeStream ([]byte (contentStr ),_bbgb .NewFlateEncoder ());if _dcddb !=nil {return _dcddb ;};if _afge .Contents ==nil {_afge .Contents =_fdecg ;}else {_cdbbc :=_bbgb .TraceToDirectObject (_afge .Contents );
_baccb ,_ecff :=_cdbbc .(*_bbgb .PdfObjectArray );if !_ecff {_baccb =_bbgb .MakeArray (_cdbbc );};_baccb .Append (_fdecg );_afge .Contents =_baccb ;};return nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cabg :=NewPdfAnnotation ();_eggd :=&PdfAnnotationStamp {};_eggd .PdfAnnotation =_cabg ;_eggd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cabg .SetContext (_eggd );return _eggd ;};func _gdga (_dgdf _bbgb .PdfObject )(*fontFile ,error ){_bb .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dgdf );
_ccfbd :=&fontFile {};_dgdf =_bbgb .TraceToDirectObject (_dgdf );_cdfag ,_cgdgc :=_dgdf .(*_bbgb .PdfObjectStream );if !_cgdgc {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dgdf );
return nil ,_bbgb .ErrTypeError ;};_fgea :=_cdfag .PdfObjectDictionary ;_gdaac ,_cdgd :=_bbgb .DecodeStream (_cdfag );if _cdgd !=nil {return nil ,_cdgd ;};_gaae ,_cgdgc :=_bbgb .GetNameVal (_fgea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cgdgc {_ccfbd ._gdaab =_gaae ;
if _gaae =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bb .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_dcfbb ,_ :=_bbgb .GetIntVal (_fgea .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fdabc ,_ :=_bbgb .GetIntVal (_fgea .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dcfbb > len (_gdaac ){_dcfbb =len (_gdaac );
};if _dcfbb +_fdabc > len (_gdaac ){_fdabc =len (_gdaac )-_dcfbb ;};_gefgf :=_gdaac [:_dcfbb ];var _dffc []byte ;if _fdabc > 0{_dffc =_gdaac [_dcfbb :_dcfbb +_fdabc ];};if _dcfbb > 0&&_fdabc > 0{_ceaf :=_ccfbd .loadFromSegments (_gefgf ,_dffc );if _ceaf !=nil {return nil ,_ceaf ;
};};return _ccfbd ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func _cgea (_dadfa *_bbgb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_gbfcc :=PdfShadingType5 {};_abebc :=_dadfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _abebc ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gccg ,_ddbeg :=_abebc .(*_bbgb .PdfObjectInteger );if !_ddbeg {_bb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abebc );
return nil ,_bbgb .ErrTypeError ;};_gbfcc .BitsPerCoordinate =_gccg ;_abebc =_dadfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _abebc ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gccg ,_ddbeg =_abebc .(*_bbgb .PdfObjectInteger );if !_ddbeg {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_abebc );
return nil ,_bbgb .ErrTypeError ;};_gbfcc .BitsPerComponent =_gccg ;_abebc =_dadfa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _abebc ==nil {_bb .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_gccg ,_ddbeg =_abebc .(*_bbgb .PdfObjectInteger );if !_ddbeg {_bb .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_abebc );
return nil ,_bbgb .ErrTypeError ;};_gbfcc .VerticesPerRow =_gccg ;_abebc =_dadfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _abebc ==nil {_bb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecacc ,_ddbeg :=_abebc .(*_bbgb .PdfObjectArray );if !_ddbeg {_bb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abebc );
return nil ,_bbgb .ErrTypeError ;};_gbfcc .Decode =_ecacc ;if _faccf :=_dadfa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_faccf !=nil {_gbfcc .Function =[]PdfFunction {};if _eccfba ,_ddfgg :=_faccf .(*_bbgb .PdfObjectArray );_ddfgg {for _ ,_aeeaf :=range _eccfba .Elements (){_dbcg ,_gdcaf :=_cdfb (_aeeaf );
if _gdcaf !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdcaf );return nil ,_gdcaf ;};_gbfcc .Function =append (_gbfcc .Function ,_dbcg );
};}else {_dadfbe ,_fagfe :=_cdfb (_faccf );if _fagfe !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fagfe );return nil ,_fagfe ;
};_gbfcc .Function =append (_gbfcc .Function ,_dadfbe );};};return &_gbfcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bga *PdfAnnotationLink )ToPdfObject ()_bbgb .PdfObject {_bga .PdfAnnotation .ToPdfObject ();_gcda :=_bga ._bce ;_fgag :=_gcda .PdfObject .(*_bbgb .PdfObjectDictionary );_fgag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u004c\u0069\u006e\u006b"));
if _bga ._gbd !=nil &&_bga ._gbd ._agb !=nil {_fgag .Set ("\u0041",_bga ._gbd ._agb .ToPdfObject ());}else if _bga .A !=nil {_fgag .Set ("\u0041",_bga .A );};_fgag .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bga .Dest );_fgag .SetIfNotNil ("\u0048",_bga .H );
_fgag .SetIfNotNil ("\u0050\u0041",_bga .PA );_fgag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bga .QuadPoints );_fgag .SetIfNotNil ("\u0042\u0053",_bga .BS );return _gcda ;};func (_fgdb *PdfWriter )writeOutputIntents ()error {if len (_fgdb ._fefa )==0{return nil ;
};_ddbabc :=make ([]_bbgb .PdfObject ,len (_fgdb ._fefa ));for _dcedd ,_gebdde :=range _fgdb ._fefa {_fagcg :=_gebdde .ToPdfObject ();_ddbabc [_dcedd ]=_bbgb .MakeIndirectObject (_fagcg );};_gbfdd :=_bbgb .MakeIndirectObject (_bbgb .MakeArray (_ddbabc ...));
_fgdb ._dfcbd .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_gbfdd );if _dfceef :=_fgdb .addObjects (_gbfdd );_dfceef !=nil {return _dfceef ;};return nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_caea *PdfPageResources )GetExtGState (keyName _bbgb .PdfObjectName )(_bbgb .PdfObject ,bool ){if _caea .ExtGState ==nil {return nil ,false ;};_ddcc ,_egfcc :=_bbgb .TraceToDirectObject (_caea .ExtGState ).(*_bbgb .PdfObjectDictionary );if !_egfcc {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caea .ExtGState );
return nil ,false ;};if _dbege :=_ddcc .Get (keyName );_dbege !=nil {return _dbege ,true ;};return nil ,false ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bbgb .PdfObject ;Movie _bbgb .PdfObject ;A _bbgb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aceb *PdfAnnotationStamp )ToPdfObject ()_bbgb .PdfObject {_aceb .PdfAnnotation .ToPdfObject ();_gcfdf :=_aceb ._bce ;_dbga :=_gcfdf .PdfObject .(*_bbgb .PdfObjectDictionary );_aceb .PdfAnnotationMarkup .appendToPdfDictionary (_dbga );_dbga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0053\u0074\u0061m\u0070"));
_dbga .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aceb .Name );return _gcfdf ;};

// BaseFont returns the font's "BaseFont" field.
func (_gggf *PdfFont )BaseFont ()string {return _gggf .baseFields ()._debfe };

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_eeecef *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_baae .Lock ();defer _baae .Unlock ();_cdea =creator };

// String returns a string representation of the field.
func (_abcc *PdfField )String ()string {if _accg ,_aeac :=_abcc .ToPdfObject ().(*_bbgb .PdfIndirectObject );_aeac {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_abcc ._eecbd ,_accg .PdfObject .String ());};return "";};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_gfgfge *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_abded *PdfSignature ,_cbagc Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_fbfcgfg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fggfb *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_fbcbb *PdfSignature ,_gebfa Hasher )error ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ffd :=NewPdfAction ();_cb :=&PdfActionGoTo3DView {};_cb .PdfAction =_ffd ;_ffd .SetContext (_cb );return _cb ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bbgb .PdfObject ;Dest _bbgb .PdfObject ;H _bbgb .PdfObject ;PA _bbgb .PdfObject ;QuadPoints _bbgb .PdfObject ;BS _bbgb .PdfObject ;_gbd *PdfAction ;_ddf *PdfReader ;};func _cfgb (_cdce _bbgb .PdfObject )(*PdfColorspaceLab ,error ){_dcab :=NewPdfColorspaceLab ();
if _geca ,_aade :=_cdce .(*_bbgb .PdfIndirectObject );_aade {_dcab ._cbgd =_geca ;};_cdce =_bbgb .TraceToDirectObject (_cdce );_cfac ,_ddeb :=_cdce .(*_bbgb .PdfObjectArray );if !_ddeb {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _cfac .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cdce =_bbgb .TraceToDirectObject (_cfac .Get (0));_cbb ,_ddeb :=_cdce .(*_bbgb .PdfObjectName );
if !_ddeb {return nil ,_d .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_cbb !="\u004c\u0061\u0062"{return nil ,_d .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_cdce =_bbgb .TraceToDirectObject (_cfac .Get (1));_effa ,_ddeb :=_cdce .(*_bbgb .PdfObjectDictionary );if !_ddeb {return nil ,_d .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_cdce =_effa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cdce =_bbgb .TraceToDirectObject (_cdce );_bbdg ,_ddeb :=_cdce .(*_bbgb .PdfObjectArray );if !_ddeb {return nil ,_d .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _bbdg .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_ggbf ,_ffeeg :=_bbdg .GetAsFloat64Slice ();
if _ffeeg !=nil {return nil ,_ffeeg ;};_dcab .WhitePoint =_ggbf ;_cdce =_effa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cdce !=nil {_cdce =_bbgb .TraceToDirectObject (_cdce );_eeece ,_aaf :=_cdce .(*_bbgb .PdfObjectArray );
if !_aaf {return nil ,_d .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _eeece .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gbbee ,_bafce :=_eeece .GetAsFloat64Slice ();if _bafce !=nil {return nil ,_bafce ;};_dcab .BlackPoint =_gbbee ;};_cdce =_effa .Get ("\u0052\u0061\u006eg\u0065");if _cdce !=nil {_cdce =_bbgb .TraceToDirectObject (_cdce );_dgfe ,_aab :=_cdce .(*_bbgb .PdfObjectArray );
if !_aab {_bb .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgfe .Len ()!=4{_bb .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_agcb ,_gdag :=_dgfe .GetAsFloat64Slice ();if _gdag !=nil {return nil ,_gdag ;};_dcab .Range =_agcb ;};return _dcab ,nil ;};

// SetContext sets the sub annotation (context).
func (_bafc *PdfAnnotation )SetContext (ctx PdfModel ){_bafc ._cged =ctx };

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_geecc *PdfField )SetContext (ctx PdfModel ){_geecc ._eecbd =ctx };

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fcbb *PdfColorspaceCalRGB )ToPdfObject ()_bbgb .PdfObject {_edbcc :=&_bbgb .PdfObjectArray {};_edbcc .Append (_bbgb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_dggbb :=_bbgb .MakeDict ();if _fcbb .WhitePoint !=nil {_ccde :=_bbgb .MakeArray (_bbgb .MakeFloat (_fcbb .WhitePoint [0]),_bbgb .MakeFloat (_fcbb .WhitePoint [1]),_bbgb .MakeFloat (_fcbb .WhitePoint [2]));
_dggbb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ccde );}else {_bb .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _fcbb .BlackPoint !=nil {_bffe :=_bbgb .MakeArray (_bbgb .MakeFloat (_fcbb .BlackPoint [0]),_bbgb .MakeFloat (_fcbb .BlackPoint [1]),_bbgb .MakeFloat (_fcbb .BlackPoint [2]));_dggbb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bffe );
};if _fcbb .Gamma !=nil {_gede :=_bbgb .MakeArray (_bbgb .MakeFloat (_fcbb .Gamma [0]),_bbgb .MakeFloat (_fcbb .Gamma [1]),_bbgb .MakeFloat (_fcbb .Gamma [2]));_dggbb .Set ("\u0047\u0061\u006dm\u0061",_gede );};if _fcbb .Matrix !=nil {_bgbd :=_bbgb .MakeArray (_bbgb .MakeFloat (_fcbb .Matrix [0]),_bbgb .MakeFloat (_fcbb .Matrix [1]),_bbgb .MakeFloat (_fcbb .Matrix [2]),_bbgb .MakeFloat (_fcbb .Matrix [3]),_bbgb .MakeFloat (_fcbb .Matrix [4]),_bbgb .MakeFloat (_fcbb .Matrix [5]),_bbgb .MakeFloat (_fcbb .Matrix [6]),_bbgb .MakeFloat (_fcbb .Matrix [7]),_bbgb .MakeFloat (_fcbb .Matrix [8]));
_dggbb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgbd );};_edbcc .Append (_dggbb );if _fcbb ._bagb !=nil {_fcbb ._bagb .PdfObject =_edbcc ;return _fcbb ._bagb ;};return _edbcc ;};func (_ggaa *PdfReader )flattenFieldsWithOpts (_dfgge bool ,_efb FieldAppearanceGenerator ,_dbedf *FieldFlattenOpts )error {if _dbedf ==nil {_dbedf =&FieldFlattenOpts {};
};var _cgaff bool ;_adccf :=map[*PdfAnnotation ]bool {};{var _egaf []*PdfField ;_cbgdg :=_ggaa .AcroForm ;if _cbgdg !=nil {if _dbedf .FilterFunc !=nil {_egaf =_cbgdg .filteredFields (_dbedf .FilterFunc ,true );_cgaff =_cbgdg .Fields !=nil &&len (*_cbgdg .Fields )> 0;
}else {_egaf =_cbgdg .AllFields ();};};for _ ,_fgcd :=range _egaf {for _ ,_agbef :=range _fgcd .Annotations {_adccf [_agbef .PdfAnnotation ]=_fgcd .V !=nil ;if _efb !=nil {_cbbde ,_bacdc :=_efb .GenerateAppearanceDict (_cbgdg ,_fgcd ,_agbef );if _bacdc !=nil {return _bacdc ;
};_agbef .AP =_cbbde ;};};};};if _dfgge {for _ ,_ddde :=range _ggaa .PageList {_cggb ,_dacf :=_ddde .GetAnnotations ();if _dacf !=nil {return _dacf ;};for _ ,_ffcf :=range _cggb {_adccf [_ffcf ]=true ;};};};for _ ,_ccefc :=range _ggaa .PageList {var _aggf []*PdfAnnotation ;
if _efb !=nil {if _ecdg :=_efb .WrapContentStream (_ccefc );_ecdg !=nil {return _ecdg ;};};_baeg ,_bfda :=_ccefc .GetAnnotations ();if _bfda !=nil {return _bfda ;};for _ ,_dgde :=range _baeg {_bdcbg ,_ebab :=_adccf [_dgde ];if !_ebab &&_dbedf .AnnotFilterFunc !=nil {if _ ,_aagb :=_dgde .GetContext ().(*PdfAnnotationWidget );
!_aagb {_ebab =_dbedf .AnnotFilterFunc (_dgde );};};if !_ebab {_aggf =append (_aggf ,_dgde );continue ;};switch _dgde .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dcgf ,_aadc ,_dbfe :=_fgff (_dgde );if _dbfe !=nil {if !_bdcbg {_bb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_dbfe );
continue ;};if _dcgf ==nil {continue ;};_cebd :=_ccefc .Resources .GenerateXObjectName ();_ccefc .Resources .SetXObjectFormByName (_cebd ,_dcgf );_cffg :=_ec .Min (_aadc .Llx ,_aadc .Urx );_efdbf :=_ec .Min (_aadc .Lly ,_aadc .Ury );var _fgca []string ;
_fgca =append (_fgca ,"\u0071");_fgca =append (_fgca ,_d .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_cffg ,_efdbf ));
_fgca =append (_fgca ,_d .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cebd .String ()));_fgca =append (_fgca ,"\u0051");_agbg :=_df .Join (_fgca ,"\u000a");_dbfe =_ccefc .AppendContentStream (_agbg );if _dbfe !=nil {return _dbfe ;};if _dcgf .Resources !=nil {_bedb ,_aedb :=_bbgb .GetDict (_dcgf .Resources .Font );
if _aedb {for _ ,_abgdb :=range _bedb .Keys (){if !_ccefc .Resources .HasFontByName (_abgdb ){_ccefc .Resources .SetFontByName (_abgdb ,_bedb .Get (_abgdb ));};};};};};if len (_aggf )> 0{_ccefc ._bccg =_aggf ;}else {_ccefc ._bccg =[]*PdfAnnotation {};};
};if !_cgaff {_ggaa .AcroForm =nil ;};return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_aefc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// Mask returns the uin32 bitmask for the specific flag.
func (_acdg FieldFlag )Mask ()uint32 {return uint32 (_acdg )};

// ToPdfObject implements interface PdfModel.
func (_ffbf *PdfFilespec )ToPdfObject ()_bbgb .PdfObject {_bgbgc :=_ffbf .getDict ();_bgbgc .Clear ();_bgbgc .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_bgbgc .SetIfNotNil ("\u0046\u0053",_ffbf .FS );
_bgbgc .SetIfNotNil ("\u0046",_ffbf .F );_bgbgc .SetIfNotNil ("\u0055\u0046",_ffbf .UF );_bgbgc .SetIfNotNil ("\u0044\u004f\u0053",_ffbf .DOS );_bgbgc .SetIfNotNil ("\u004d\u0061\u0063",_ffbf .Mac );_bgbgc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ffbf .Unix );
_bgbgc .SetIfNotNil ("\u0049\u0044",_ffbf .ID );_bgbgc .SetIfNotNil ("\u0056",_ffbf .V );_bgbgc .SetIfNotNil ("\u0045\u0046",_ffbf .EF );_bgbgc .SetIfNotNil ("\u0052\u0046",_ffbf .RF );_bgbgc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ffbf .Desc );_bgbgc .SetIfNotNil ("\u0043\u0049",_ffbf .CI );
return _ffbf ._gcecd ;};func (_adafg *PdfWriter )writeObjects (){_bb .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_adafg ._cagcad ));_adafg ._caadc =make (map[int ]crossReference );_adafg ._caadc [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _adafg ._egacg .ObjectMap !=nil {for _fbfgg ,_dcgfda :=range _adafg ._egacg .ObjectMap {if _fbfgg ==0{continue ;};if _dcgfda .XType ==_bbgb .XrefTypeObjectStream {_fgbe :=crossReference {Type :2,ObjectNumber :_dcgfda .OsObjNumber ,Index :_dcgfda .OsObjIndex };
_adafg ._caadc [_fbfgg ]=_fgbe ;};if _dcgfda .XType ==_bbgb .XrefTypeTableEntry {_bdeg :=crossReference {Type :1,ObjectNumber :_dcgfda .ObjectNumber ,Offset :_dcgfda .Offset };_adafg ._caadc [_fbfgg ]=_bdeg ;};};};};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bead *PdfPageResources )GetContainingPdfObject ()_bbgb .PdfObject {return _bead ._acgfg };

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bbgb .PdfObjectStream )(*XObjectImage ,error ){_cdcbe :=&XObjectImage {};_cdcbe ._gffd =stream ;_egcfa :=*(stream .PdfObjectDictionary );_aeedb ,_cgdc :=_bbgb .NewEncoderFromStream (stream );if _cgdc !=nil {return nil ,_cgdc ;
};_cdcbe .Filter =_aeedb ;if _gdcgg :=_bbgb .TraceToDirectObject (_egcfa .Get ("\u0057\u0069\u0064t\u0068"));_gdcgg !=nil {_bffaf ,_bcgbcg :=_gdcgg .(*_bbgb .PdfObjectInteger );if !_bcgbcg {return nil ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_gdeaf :=int64 (*_bffaf );_cdcbe .Width =&_gdeaf ;}else {return nil ,_fd .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _egag :=_bbgb .TraceToDirectObject (_egcfa .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_egag !=nil {_gcbfb ,_agfbd :=_egag .(*_bbgb .PdfObjectInteger );if !_agfbd {return nil ,_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_daabd :=int64 (*_gcbfb );
_cdcbe .Height =&_daabd ;}else {return nil ,_fd .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gbab :=_bbgb .TraceToDirectObject (_egcfa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_gbab !=nil {_bdade ,_ccega :=NewPdfColorspaceFromPdfObject (_gbab );if _ccega !=nil {return nil ,_ccega ;};_cdcbe .ColorSpace =_bdade ;}else {_bb .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_cdcbe .ColorSpace =NewPdfColorspaceDeviceGray ();};if _defbb :=_bbgb .TraceToDirectObject (_egcfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_defbb !=nil {_fgebad ,_gccbg :=_defbb .(*_bbgb .PdfObjectInteger );
if !_gccbg {return nil ,_fd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gfeed :=int64 (*_fgebad );_cdcbe .BitsPerComponent =&_gfeed ;};_cdcbe .Intent =_egcfa .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_cdcbe .ImageMask =_egcfa .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_cdcbe .Mask =_egcfa .Get ("\u004d\u0061\u0073\u006b");_cdcbe .Decode =_egcfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_cdcbe .Interpolate =_egcfa .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_cdcbe .Alternatives =_egcfa .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_cdcbe .SMask =_egcfa .Get ("\u0053\u004d\u0061s\u006b");_cdcbe .SMaskInData =_egcfa .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_cdcbe .Matte =_egcfa .Get ("\u004d\u0061\u0074t\u0065");_cdcbe .Name =_egcfa .Get ("\u004e\u0061\u006d\u0065");_cdcbe .StructParent =_egcfa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cdcbe .ID =_egcfa .Get ("\u0049\u0044");
_cdcbe .OPI =_egcfa .Get ("\u004f\u0050\u0049");_cdcbe .Metadata =_egcfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cdcbe .OC =_egcfa .Get ("\u004f\u0043");_cdcbe .Stream =stream .Stream ;return _cdcbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccdc *PdfAnnotationSquiggly )ToPdfObject ()_bbgb .PdfObject {_ccdc .PdfAnnotation .ToPdfObject ();_ccbf :=_ccdc ._bce ;_fgdd :=_ccbf .PdfObject .(*_bbgb .PdfObjectDictionary );_ccdc .PdfAnnotationMarkup .appendToPdfDictionary (_fgdd );_fgdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_fgdd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ccdc .QuadPoints );return _ccbf ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fbeb *PdfOutline )ToPdfObject ()_bbgb .PdfObject {_cggef :=_fbeb ._fbbf ;_baeb :=_cggef .PdfObject .(*_bbgb .PdfObjectDictionary );_baeb .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fbeb .First !=nil {_baeb .Set ("\u0046\u0069\u0072s\u0074",_fbeb .First .ToPdfObject ());
};if _fbeb .Last !=nil {_baeb .Set ("\u004c\u0061\u0073\u0074",_fbeb .Last .GetContext ().GetContainingPdfObject ());};if _fbeb .Parent !=nil {_baeb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbeb .Parent .GetContext ().GetContainingPdfObject ());};
if _fbeb .Count !=nil {_baeb .Set ("\u0043\u006f\u0075n\u0074",_bbgb .MakeInteger (*_fbeb .Count ));};return _cggef ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bbgb .PdfObjectName ;};func _cdaec (_baabd string )(map[_gcc .CharCode ]_gcc .GlyphName ,error ){_dddbe :=_df .Split (_baabd ,"\u000a");_bgbe :=make (map[_gcc .CharCode ]_gcc .GlyphName );for _ ,_dgaa :=range _dddbe {_dcagg :=_gefed .FindStringSubmatch (_dgaa );
if _dcagg ==nil {continue ;};_aced ,_fcgca :=_dcagg [1],_dcagg [2];_dedbb ,_geedb :=_c .Atoi (_aced );if _geedb !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_dgaa );
return nil ,_bbgb .ErrTypeError ;};_bgbe [_gcc .CharCode (_dedbb )]=_gcc .GlyphName (_fcgca );};_bb .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bgbe );
return _bgbe ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_fcffg *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _fcffg ._bccg !=nil {return _fcffg ._bccg ,nil ;};if _fcffg .Annots ==nil {_fcffg ._bccg =[]*PdfAnnotation {};return nil ,nil ;};if _fcffg ._cdcbf ==nil {_fcffg ._bccg =[]*PdfAnnotation {};
return nil ,nil ;};_eegdg ,_gddef :=_fcffg ._cdcbf .loadAnnotations (_fcffg .Annots );if _gddef !=nil {return nil ,_gddef ;};if _eegdg ==nil {_fcffg ._bccg =[]*PdfAnnotation {};};_fcffg ._bccg =_eegdg ;return _fcffg ._bccg ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);

// XObjectType represents the type of an XObject.
type XObjectType int ;func _cdfb (_dgded _bbgb .PdfObject )(PdfFunction ,error ){_dgded =_bbgb .ResolveReference (_dgded );if _bbfe ,_ffdb :=_dgded .(*_bbgb .PdfObjectStream );_ffdb {_geba :=_bbfe .PdfObjectDictionary ;_cabd ,_gfffebd :=_geba .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbgb .PdfObjectInteger );
if !_gfffebd {_bb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_cabd ==0{return _fcbe (_bbfe );}else if *_cabd ==4{return _cbdad (_bbfe );}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _aagfa ,_fcab :=_dgded .(*_bbgb .PdfIndirectObject );
_fcab {_dbefc ,_aadg :=_aagfa .PdfObject .(*_bbgb .PdfObjectDictionary );if !_aadg {_bb .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_accba ,_aadg :=_dbefc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbgb .PdfObjectInteger );
if !_aadg {_bb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_accba ==2{return _efcbc (_aagfa );}else if *_accba ==3{return _feed (_aagfa );}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cceef ,_deddg :=_dgded .(*_bbgb .PdfObjectDictionary );
_deddg {_afcfb ,_ebbff :=_cceef .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bbgb .PdfObjectInteger );if !_ebbff {_bb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_afcfb ==2{return _efcbc (_cceef );}else if *_afcfb ==3{return _feed (_cceef );
}else {return nil ,_fd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bb .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dgded );
return nil ,_fd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_deacc *PdfPageResources )SetXObjectImageByName (keyName _bbgb .PdfObjectName ,ximg *XObjectImage )error {_fbgeb :=ximg .ToPdfObject ().(*_bbgb .PdfObjectStream );_ceedf :=_deacc .SetXObjectByName (keyName ,_fbgeb );return _ceedf ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_gccdb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _ebgg []*PdfField ;if _gccdb .AcroForm !=nil {_ebgg =_gccdb .AcroForm .AllFields ();};_fgfed :=make (map[*PdfField ]struct{},len (_ebgg ));for _ ,_cgafaf :=range _ebgg {_fgfed [_cgafaf ]=struct{}{};
};for _ ,_cegca :=range _gccdb .PageList {_cffcb ,_adgad :=_cegca .GetAnnotations ();if _adgad !=nil {return false ,_adgad ;};for _ ,_agcdg :=range _cffcb {_eeca ,_bgdcf :=_agcdg .GetContext ().(*PdfAnnotationWidget );if !_bgdcf {continue ;};_gacbg :=_eeca .Field ();
if _gacbg ==nil {return true ,nil ;};if _ ,_babbe :=_fgfed [_gacbg ];!_babbe {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbdd *PdfAnnotationRichMedia )ToPdfObject ()_bbgb .PdfObject {_fbdd .PdfAnnotation .ToPdfObject ();_ead :=_fbdd ._bce ;_eefg :=_ead .PdfObject .(*_bbgb .PdfObjectDictionary );_eefg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_eefg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fbdd .RichMediaSettings );_eefg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fbdd .RichMediaContent );
return _ead ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cfacag *Image )ColorAt (x ,y int )(_fg .Color ,error ){_dbbdb :=_ae .BytesPerLine (int (_cfacag .Width ),int (_cfacag .BitsPerComponent ),_cfacag .ColorComponents );switch _cfacag .ColorComponents {case 1:return _ae .ColorAtGrayscale (x ,y ,int (_cfacag .BitsPerComponent ),_dbbdb ,_cfacag .Data ,_cfacag ._baegcb );
case 3:return _ae .ColorAtNRGBA (x ,y ,int (_cfacag .Width ),_dbbdb ,int (_cfacag .BitsPerComponent ),_cfacag .Data ,_cfacag ._bcbg ,_cfacag ._baegcb );case 4:return _ae .ColorAtCMYK (x ,y ,int (_cfacag .Width ),_cfacag .Data ,_cfacag ._baegcb );};_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cfacag .ColorComponents ,_cfacag .BitsPerComponent );
return nil ,_fd .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// GetCharMetrics returns the char metrics for character code `code`.
func (_abgg pdfCIDFontType0 )GetCharMetrics (code _gcc .CharCode )(_add .CharMetrics ,bool ){_fafb :=_abgg ._ccbee ;if _geef ,_efcca :=_abgg ._dadfd [code ];_efcca {_fafb =_geef ;};return _add .CharMetrics {Wx :_fafb },true ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ccdaa *_bbgb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bbgb .PdfObjectName ;Filter *_bbgb .PdfObjectName ;SubFilter *_bbgb .PdfObjectName ;Contents *_bbgb .PdfObjectString ;Cert _bbgb .PdfObject ;ByteRange *_bbgb .PdfObjectArray ;Reference *_bbgb .PdfObjectArray ;Changes *_bbgb .PdfObjectArray ;Name *_bbgb .PdfObjectString ;
M *_bbgb .PdfObjectString ;Location *_bbgb .PdfObjectString ;Reason *_bbgb .PdfObjectString ;ContactInfo *_bbgb .PdfObjectString ;R *_bbgb .PdfObjectInteger ;V *_bbgb .PdfObjectInteger ;PropBuild *_bbgb .PdfObjectDictionary ;PropAuthTime *_bbgb .PdfObjectInteger ;
PropAuthType *_bbgb .PdfObjectName ;};func (_afbad *PdfWriter )checkLicense ()error {_fbcbd :=_gd .GetLicenseKey ();if (_fbcbd ==nil ||!_fbcbd .IsLicensed ())&&!_gcdcf {_d .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_d .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fd .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bbgb .PdfObjectArray ;TI *_bbgb .PdfObjectInteger ;I *_bbgb .PdfObjectArray ;};func (_bdcg *PdfReader )newPdfAnnotationRedactFromDict (_befg *_bbgb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_acb :=PdfAnnotationRedact {};
_gfcg ,_cfef :=_bdcg .newPdfAnnotationMarkupFromDict (_befg );if _cfef !=nil {return nil ,_cfef ;};_acb .PdfAnnotationMarkup =_gfcg ;_acb .QuadPoints =_befg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_acb .IC =_befg .Get ("\u0049\u0043");
_acb .RO =_befg .Get ("\u0052\u004f");_acb .OverlayText =_befg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_acb .Repeat =_befg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_acb .DA =_befg .Get ("\u0044\u0041");_acb .Q =_befg .Get ("\u0051");
return &_acb ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fbbgb *PdfWriter )SetDocInfo (info *PdfInfo ){_fbbgb .setDocInfo (info .ToPdfObject ())};func (_bdff *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// Write writes out the PDF.
func (_dcgea *PdfWriter )Write (writer _bf .Writer )error {_bb .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ggebc :=_dcgea .checkLicense ();if _ggebc !=nil {return _ggebc ;};if _ggebc =_dcgea .writeOutlines ();_ggebc !=nil {return _ggebc ;};if _ggebc =_dcgea .writeAcroFormFields ();
_ggebc !=nil {return _ggebc ;};_dcgea .checkPendingObjects ();if _ggebc =_dcgea .writeOutputIntents ();_ggebc !=nil {return _ggebc ;};_dcgea .setCatalogVersion ();_dcgea .copyObjects ();if _ggebc =_dcgea .optimize ();_ggebc !=nil {return _ggebc ;};if _ggebc =_dcgea .optimizeDocument ();
_ggebc !=nil {return _ggebc ;};var _fggde _e .Hash ;if _dcgea ._fffff {_fggde =_ge .New ();writer =_bf .MultiWriter (_fggde ,writer );};_dcgea .setWriter (writer );_ecdca :=_dcgea .checkCrossReferenceStream ();_gaaee ,_ecdca :=_dcgea .mapObjectStreams (_ecdca );
_dcgea .adjustXRefAffectedVersion (_ecdca );_dcgea .writeDocumentVersion ();_dcgea .updateObjectNumbers ();_dcgea .writeObjects ();if _ggebc =_dcgea .writeObjectsInStreams (_gaaee );_ggebc !=nil {return _ggebc ;};_aeec :=_dcgea ._cfbdg ;var _geda int ;
for _beeaf :=range _dcgea ._caadc {if _beeaf > _geda {_geda =_beeaf ;};};if _dcgea ._fffff {if _ggebc =_dcgea .setHashIDs (_fggde );_ggebc !=nil {return _ggebc ;};};if _ecdca {if _ggebc =_dcgea .writeXRefStreams (_geda ,_aeec );_ggebc !=nil {return _ggebc ;
};}else {_dcgea .writeTrailer (_geda );};_dcgea .makeOffSetReference (_aeec );if _ggebc =_dcgea .flushWriter ();_ggebc !=nil {return _ggebc ;};return nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_adeg *PdfField )IsTerminal ()bool {return len (_adeg .Kids )==0};

// SetContext sets the sub action (context).
func (_bg *PdfAction )SetContext (ctx PdfModel ){_bg ._agb =ctx };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_efdbb :=&PdfOutlineItem {_dacfc :_bbgb .MakeIndirectObject (_bbgb .MakeDict ())};_efdbb ._efef =_efdbb ;return _efdbb ;};

// ToInteger convert to an integer format.
func (_caaa *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_efed :=_ec .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_efed *_caaa .A ()),uint32 (_efed *_caaa .B ()),uint32 (_efed *_caaa .C ())};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gffff *PdfShadingType3 )ToPdfObject ()_bbgb .PdfObject {_gffff .PdfShading .ToPdfObject ();_ggde ,_ebgdg :=_gffff .getShadingDict ();if _ebgdg !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gffff .Coords !=nil {_ggde .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gffff .Coords );};if _gffff .Domain !=nil {_ggde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gffff .Domain );};if _gffff .Function !=nil {if len (_gffff .Function )==1{_ggde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gffff .Function [0].ToPdfObject ());
}else {_eddaa :=_bbgb .MakeArray ();for _ ,_gbbbc :=range _gffff .Function {_eddaa .Append (_gbbbc .ToPdfObject ());};_ggde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eddaa );};};if _gffff .Extend !=nil {_ggde .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gffff .Extend );
};return _gffff ._bfgebd ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bbgb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fcfb *_bbgb .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fcae *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_fcae .Base .GetNumComponents ();_bggb :=int (vals [0])*N ;
if _bggb < 0||(_bggb +N -1)>=len (_fcae ._baac ){return nil ,_fd .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_babcg :=_fcae ._baac [_bggb :_bggb +N ];var _ddcd []float64 ;for _ ,_ccgc :=range _babcg {_ddcd =append (_ddcd ,float64 (_ccgc )/255.0);
};_dbgbf ,_dcac :=_fcae .Base .ColorFromFloats (_ddcd );if _dcac !=nil {return nil ,_dcac ;};return _dbgbf ,nil ;};func (_bffacc *pdfFontSimple )addEncoding ()error {var (_eebc string ;_fffeb map[_gcc .CharCode ]_gcc .GlyphName ;_edagg _gcc .SimpleEncoder ;
);if _bffacc .Encoder ()!=nil {_ddcbe ,_adcf :=_bffacc .Encoder ().(_gcc .SimpleEncoder );if _adcf &&_ddcbe !=nil {_eebc =_ddcbe .BaseName ();};};if _bffacc .Encoding !=nil {_dgfb ,_abbg ,_addd :=_bffacc .getFontEncoding ();if _addd !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bffacc ._debfe ,_bffacc ._fagd ,_bffacc .Encoding ,_bffacc .Encoding ,_addd );
return _addd ;};if _dgfb !=""{_eebc =_dgfb ;};_fffeb =_abbg ;_edagg ,_addd =_gcc .NewSimpleTextEncoder (_eebc ,_fffeb );if _addd !=nil {return _addd ;};};if _edagg ==nil {_agegf :=_bffacc ._eaega ;if _agegf !=nil {switch _bffacc ._fagd {case "\u0054\u0079\u0070e\u0031":if _agegf .fontFile !=nil &&_agegf .fontFile ._cegc !=nil {_bb .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_edagg =_agegf .fontFile ._cegc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _agegf ._gbaac !=nil {_bb .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gdbea ,_fbegg :=_agegf ._gbaac .MakeEncoder ();
if _fbegg ==nil {_edagg =_gdbea ;};};};};};if _edagg !=nil {if _fffeb !=nil {_bb .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fffeb ,_bffacc .baseFields ());
_edagg =_gcc .ApplyDifferences (_edagg ,_fffeb );};_bffacc .SetEncoder (_edagg );};return nil ;};func (_cedb *DSS )generateHashMap (_fdbce []*_bbgb .PdfObjectStream )(map[string ]*_bbgb .PdfObjectStream ,error ){_bbgfc :=map[string ]*_bbgb .PdfObjectStream {};
for _ ,_eacfc :=range _fdbce {_fcfee ,_afagd :=_bbgb .DecodeStream (_eacfc );if _afagd !=nil {return nil ,_afagd ;};_bdbf ,_afagd :=_fbeaac (_fcfee );if _afagd !=nil {return nil ,_afagd ;};_bbgfc [string (_bdbf )]=_eacfc ;};return _bbgfc ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _bf .ReadSeeker )(*CompliancePdfReader ,error ){const _afga ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_ggge ,_bdceg :=_bebbd (rs ,&ReaderOpts {ComplianceMode :true },false ,_afga );
if _bdceg !=nil {return nil ,_bdceg ;};return &CompliancePdfReader {PdfReader :_ggge },nil ;};func (_fgga *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _fgga ._abceg .GetCrypter ()!=nil &&!_fgga ._abceg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cbgbc :=_fgga ._facae ;_aaegg :=_cbgbc .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _aaegg ==nil {return nil ,nil ;};_bb .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_bdgcg :=_bbgb .ResolveReference (_aaegg );
_bb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_bdgcg );if _dbfgf :=_bbgb .IsNullObject (_bdgcg );_dbfgf {_bb .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_affbga ,_cbbfd :=_bdgcg .(*_bbgb .PdfIndirectObject );if !_cbbfd {if _ ,_ggag :=_bbgb .GetDict (_bdgcg );!_ggag {_bb .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_bb .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_affbga =_bbgb .MakeIndirectObject (_bdgcg );};_cbae ,_cbbfd :=_affbga .PdfObject .(*_bbgb .PdfObjectDictionary );if !_cbbfd {return nil ,_fd .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_bb .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_cbae );_ccac ,_ ,_gbcaa :=_fgga .buildOutlineTree (_affbga ,nil ,nil ,nil );if _gbcaa !=nil {return nil ,_gbcaa ;};_bb .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ccac );
return _ccac ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ebbc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_fadc :=0.3*_ebbc .R ()+0.59*_ebbc .G ()+0.11*_ebbc .B ();_fadc =_ec .Min (_ec .Max (_fadc ,0.0),1.0);return NewPdfColorDeviceGray (_fadc );};

// K returns the value of the key component of the color.
func (_cegd *PdfColorDeviceCMYK )K ()float64 {return _cegd [3]};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cfdbc :=&PdfColorspaceCalGray {};_cfdbc .BlackPoint =[]float64 {0.0,0.0,0.0};_cfdbc .Gamma =1;return _cfdbc ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_cbde :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_cbde ;};

// ToPdfObject implements interface PdfModel.
func (_egce *PdfAnnotationPolygon )ToPdfObject ()_bbgb .PdfObject {_egce .PdfAnnotation .ToPdfObject ();_gfae :=_egce ._bce ;_fegc :=_gfae .PdfObject .(*_bbgb .PdfObjectDictionary );_egce .PdfAnnotationMarkup .appendToPdfDictionary (_fegc );_fegc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fegc .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_egce .Vertices );_fegc .SetIfNotNil ("\u004c\u0045",_egce .LE );_fegc .SetIfNotNil ("\u0042\u0053",_egce .BS );_fegc .SetIfNotNil ("\u0049\u0043",_egce .IC );_fegc .SetIfNotNil ("\u0042\u0045",_egce .BE );
_fegc .SetIfNotNil ("\u0049\u0054",_egce .IT );_fegc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_egce .Measure );return _gfae ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _a .Time ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bbgb .PdfObjectName ;Colorants _bbgb .PdfObject ;Process _bbgb .PdfObject ;MixingHints _bbgb .PdfObject ;_fecce *_bbgb .PdfIndirectObject ;};var (_baae _f .Mutex ;_gceac ="";_beebg _a .Time ;_cdea ="";
_egaba ="";_gbff _a .Time ;_accbc ="";_ggaca ="";_dcfdcc ="";);

// ToPdfObject implements interface PdfModel.
func (_decd *PdfAnnotationWatermark )ToPdfObject ()_bbgb .PdfObject {_decd .PdfAnnotation .ToPdfObject ();_cecg :=_decd ._bce ;_ddaf :=_cecg .PdfObject .(*_bbgb .PdfObjectDictionary );_ddaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_ddaf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_decd .FixedPrint );return _cecg ;};var _bbbg =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func _gadag ()string {_baae .Lock ();defer _baae .Unlock ();return _gceac };

// ColorToRGB converts gray -> rgb for a single color component.
func (_baabc *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cee ,_efgd :=color .(*PdfColorDeviceGray );if !_efgd {_bb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cee ),float64 (*_cee ),float64 (*_cee )),nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bbgb .PdfObject ;T3DV _bbgb .PdfObject ;T3DA _bbgb .PdfObject ;T3DI _bbgb .PdfObject ;T3DB _bbgb .PdfObject ;};

// HasExtGState checks if ExtGState name is available.
func (_gcebd *PdfPage )HasExtGState (name _bbgb .PdfObjectName )bool {if _gcebd .Resources ==nil {return false ;};if _gcebd .Resources .ExtGState ==nil {return false ;};_egdde ,_acdagg :=_bbgb .TraceToDirectObject (_gcebd .Resources .ExtGState ).(*_bbgb .PdfObjectDictionary );
if !_acdagg {_bb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bbgb .TraceToDirectObject (_gcebd .Resources .ExtGState ));
return false ;};_dgddc :=_egdde .Get (name );_cccb :=_dgddc !=nil ;return _cccb ;};

// ToPdfObject implements interface PdfModel.
func (_caff *PdfBorderStyle )ToPdfObject ()_bbgb .PdfObject {_fged :=_bbgb .MakeDict ();if _caff ._bagd !=nil {if _fecc ,_dfgf :=_caff ._bagd .(*_bbgb .PdfIndirectObject );_dfgf {_fecc .PdfObject =_fged ;};};_fged .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _caff .W !=nil {_fged .Set ("\u0057",_bbgb .MakeFloat (*_caff .W ));};if _caff .S !=nil {_fged .Set ("\u0053",_bbgb .MakeName (_caff .S .GetPdfName ()));};if _caff .D !=nil {_fged .Set ("\u0044",_bbgb .MakeArrayFromIntegers (*_caff .D ));};if _caff ._bagd !=nil {return _caff ._bagd ;
};return _fged ;};

// ToPdfObject returns the PDF representation of the function.
func (_dgcba *PdfFunctionType0 )ToPdfObject ()_bbgb .PdfObject {if _dgcba ._eaca ==nil {_dgcba ._eaca =&_bbgb .PdfObjectStream {};};_ggbg :=_bbgb .MakeDict ();_ggbg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbgb .MakeInteger (0));
_bgaea :=&_bbgb .PdfObjectArray {};for _ ,_efcdb :=range _dgcba .Domain {_bgaea .Append (_bbgb .MakeFloat (_efcdb ));};_ggbg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgaea );_gecg :=&_bbgb .PdfObjectArray {};for _ ,_begac :=range _dgcba .Range {_gecg .Append (_bbgb .MakeFloat (_begac ));
};_ggbg .Set ("\u0052\u0061\u006eg\u0065",_gecg );_gcdf :=&_bbgb .PdfObjectArray {};for _ ,_gddb :=range _dgcba .Size {_gcdf .Append (_bbgb .MakeInteger (int64 (_gddb )));};_ggbg .Set ("\u0053\u0069\u007a\u0065",_gcdf );_ggbg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bbgb .MakeInteger (int64 (_dgcba .BitsPerSample )));
if _dgcba .Order !=1{_ggbg .Set ("\u004f\u0072\u0064e\u0072",_bbgb .MakeInteger (int64 (_dgcba .Order )));};_ggbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_dgcba ._faff ))));_dgcba ._eaca .Stream =_dgcba ._faff ;_dgcba ._eaca .PdfObjectDictionary =_ggbg ;
return _dgcba ._eaca ;};func _ffaba (_ddegc []byte )[]byte {const _gcced =52845;const _daaba =22719;_gagef :=55665;for _ ,_gecfb :=range _ddegc [:4]{_gagef =(int (_gecfb )+_gagef )*_gcced +_daaba ;};_fcec :=make ([]byte ,len (_ddegc )-4);for _aafd ,_bdbgg :=range _ddegc [4:]{_fcec [_aafd ]=byte (int (_bdbgg )^_gagef >>8);
_gagef =(int (_bdbgg )+_gagef )*_gcced +_daaba ;};return _fcec ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ffbc *BorderStyle )GetPdfName ()string {switch *_ffbc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bddb *PdfFieldButton )GetType ()ButtonType {_gabef :=ButtonTypeCheckbox ;if _bddb .Ff !=nil {if (uint32 (*_bddb .Ff )&FieldFlagPushbutton .Mask ())> 0{_gabef =ButtonTypePush ;}else if (uint32 (*_bddb .Ff )&FieldFlagRadio .Mask ())> 0{_gabef =ButtonTypeRadio ;
};};return _gabef ;};

// SetVersion sets the PDF version of the output file.
func (_bfea *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_bfea ._faabe .Major =majorVersion ;_bfea ._faabe .Minor =minorVersion ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gdbba *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bbgb .StreamEncoder ,error ){_fdcbd ,_cfabg :=_gdbba ._gdgafe .(*_bbgb .PdfObjectStream );if !_cfabg {_bb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdbba ._gdgafe );
return nil ,nil ,_bbgb .ErrTypeError ;};_gffa ,_cfade :=_bbgb .DecodeStream (_fdcbd );if _cfade !=nil {_bb .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_cfade );
return nil ,nil ,_cfade ;};_decce ,_cfade :=_bbgb .NewEncoderFromStream (_fdcbd );if _cfade !=nil {_bb .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cfade );
return nil ,nil ,_cfade ;};return _gffa ,_decce ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_gcbdd *PdfPage )AddExtGState (name _bbgb .PdfObjectName ,egs *_bbgb .PdfObjectDictionary )error {if _gcbdd .Resources ==nil {_gcbdd .Resources =NewPdfPageResources ();};if _gcbdd .Resources .ExtGState ==nil {_gcbdd .Resources .ExtGState =_bbgb .MakeDict ();
};_cceefg ,_afbd :=_bbgb .TraceToDirectObject (_gcbdd .Resources .ExtGState ).(*_bbgb .PdfObjectDictionary );if !_afbd {_bb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bbgb .TraceToDirectObject (_gcbdd .Resources .ExtGState ));
return _fd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cceefg .Set (name ,egs );return nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _a .Time ){_baae .Lock ();defer _baae .Unlock ();_gbff =modifiedDate ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gfgaf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _eafda ,_ccdcg :=range _gfgaf ._bcbg {_gfgaf ._bcbg [_eafda ]=mapFunc (_ccdcg );};};

// ToPdfObject implements interface PdfModel.
func (_aca *PdfActionResetForm )ToPdfObject ()_bbgb .PdfObject {_aca .PdfAction .ToPdfObject ();_cdd :=_aca ._dce ;_dede :=_cdd .PdfObject .(*_bbgb .PdfObjectDictionary );_dede .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeResetForm )));_dede .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_aca .Fields );
_dede .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_aca .Flags );return _cdd ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ggbc :=NewPdfAnnotation ();_ccb :=&PdfAnnotationUnderline {};_ccb .PdfAnnotation =_ggbc ;_ccb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggbc .SetContext (_ccb );return _ccb ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bdedb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bb .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bb .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_bb .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bb .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_aaeef ,_cedf :=_ae .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bcbg ,img ._baegcb );if _cedf !=nil {return Image {},_cedf ;};_geaaa ,_cedf :=_ae .NRGBAConverter .Convert (_aaeef );
if _cedf !=nil {return Image {},_cedf ;};return _cfegb (_geaaa .Base ()),nil ;};func (_gfgb *PdfReader )newPdfAnnotationStrikeOut (_caba *_bbgb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_dbca :=PdfAnnotationStrikeOut {};_fbee ,_gdea :=_gfgb .newPdfAnnotationMarkupFromDict (_caba );
if _gdea !=nil {return nil ,_gdea ;};_dbca .PdfAnnotationMarkup =_fbee ;_dbca .QuadPoints =_caba .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dbca ,nil ;};func _cfg (_gfc _bbgb .PdfObject )(*PdfFilespec ,error ){if _gfc ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_gfc );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecccg *PdfShadingType6 )ToPdfObject ()_bbgb .PdfObject {_ecccg .PdfShading .ToPdfObject ();_ebcgc ,_ceacb :=_ecccg .getShadingDict ();if _ceacb !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecccg .BitsPerCoordinate !=nil {_ebcgc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecccg .BitsPerCoordinate );};if _ecccg .BitsPerComponent !=nil {_ebcgc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecccg .BitsPerComponent );
};if _ecccg .BitsPerFlag !=nil {_ebcgc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecccg .BitsPerFlag );};if _ecccg .Decode !=nil {_ebcgc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecccg .Decode );};if _ecccg .Function !=nil {if len (_ecccg .Function )==1{_ebcgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecccg .Function [0].ToPdfObject ());
}else {_dbccb :=_bbgb .MakeArray ();for _ ,_cegcad :=range _ecccg .Function {_dbccb .Append (_cegcad .ToPdfObject ());};_ebcgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbccb );};};return _ecccg ._bfgebd ;};func (_efbdd *XObjectImage )getParamsDict ()*_bbgb .PdfObjectDictionary {_gffbad :=_bbgb .MakeDict ();
_gffbad .Set ("\u0057\u0069\u0064t\u0068",_bbgb .MakeInteger (*_efbdd .Width ));_gffbad .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bbgb .MakeInteger (*_efbdd .Height ));_gffbad .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bbgb .MakeInteger (int64 (_efbdd .ColorSpace .GetNumComponents ())));
_gffbad .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bbgb .MakeInteger (*_efbdd .BitsPerComponent ));return _gffbad ;};

// SetOCProperties sets the optional content properties.
func (_dbaa *PdfWriter )SetOCProperties (ocProperties _bbgb .PdfObject )error {_eecee :=_dbaa ._dfcbd ;if ocProperties !=nil {_bb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_eecee .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dbaa .addObjects (ocProperties );};return nil ;};func (_caeee *LTV )enable (_cbgb ,_gbebf []*_fc .Certificate ,_cgge string )error {_adfc ,_gddd ,_bfae :=_caeee .buildCertChain (_cbgb ,_gbebf );
if _bfae !=nil {return _bfae ;};_cbcee ,_bfae :=_caeee .getCerts (_adfc );if _bfae !=nil {return _bfae ;};_agace ,_bfae :=_caeee .getOCSPs (_adfc ,_gddd );if _bfae !=nil {return _bfae ;};_fcace ,_bfae :=_caeee .getCRLs (_adfc );if _bfae !=nil {return _bfae ;
};_ageec :=_caeee ._feec ;_caafaf ,_bfae :=_ageec .addCerts (_cbcee );if _bfae !=nil {return _bfae ;};_cedg ,_bfae :=_ageec .addOCSPs (_agace );if _bfae !=nil {return _bfae ;};_acedg ,_bfae :=_ageec .addCRLs (_fcace );if _bfae !=nil {return _bfae ;};if _cgge !=""{_ageec .VRI [_cgge ]=&VRI {Cert :_caafaf ,OCSP :_cedg ,CRL :_acedg };
};_caeee ._aefab .SetDSS (_ageec );return nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bbgb .PdfObject ;LE _bbgb .PdfObject ;BS _bbgb .PdfObject ;IC _bbgb .PdfObject ;BE _bbgb .PdfObject ;IT _bbgb .PdfObject ;Measure _bbgb .PdfObject ;};

// GetOptimizer returns current PDF optimizer.
func (_fgdeb *PdfWriter )GetOptimizer ()Optimizer {return _fgdeb ._ebbg };

// DecodeArray returns the component range values for the Indexed colorspace.
func (_fcf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_fcf .HiVal )};};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dgaff *PdfField )GetContext ()PdfModel {return _dgaff ._eecbd };

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bbfb ,_efdbc :=NewStandard14Font (basefont );if _efdbc !=nil {panic (_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bbfb ;};

// Height returns the height of `rect`.
func (_fbecb *PdfRectangle )Height ()float64 {return _ec .Abs (_fbecb .Ury -_fbecb .Lly )};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_beeac *XObjectImage )GetContainingPdfObject ()_bbgb .PdfObject {return _beeac ._gffd };

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fdbga *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fdbga .UnderlyingCS .GetNumComponents ();};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_aebgd *PdfPage )GetPageAsIndirectObject ()*_bbgb .PdfIndirectObject {return _aebgd ._efbe };func (_dggbg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dggbg ._eaega };func (_bcgd *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};


// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_bebga :=&PdfPageResourcesColorspaces {};_bebga .Names =[]string {};_bebga .Colorspaces =map[string ]PdfColorspace {};_bebga ._fcbccb =&_bbgb .PdfIndirectObject {};return _bebga ;};func (_gefgaa *PdfWriter )mapObjectStreams (_bbccd bool )(map[_bbgb .PdfObject ]bool ,bool ){_dcdaf :=make (map[_bbgb .PdfObject ]bool );
for _ ,_ceffe :=range _gefgaa ._cagcad {if _agfga ,_adgf :=_ceffe .(*_bbgb .PdfObjectStreams );_adgf {_bbccd =true ;for _ ,_eded :=range _agfga .Elements (){_dcdaf [_eded ]=true ;if _fefag ,_aegee :=_eded .(*_bbgb .PdfIndirectObject );_aegee {_dcdaf [_fefag .PdfObject ]=true ;
};};};};return _dcdaf ,_bbccd ;};func (_gffbe *pdfFontType0 )baseFields ()*fontCommon {return &_gffbe .fontCommon };func _ecfge (_bfebg _bbgb .PdfObject )[]*_bbgb .PdfObjectStream {if _bfebg ==nil {return nil ;};_fcbdb ,_bgdge :=_bbgb .GetArray (_bfebg );
if !_bgdge ||_fcbdb .Len ()==0{return nil ;};_bggbg :=make ([]*_bbgb .PdfObjectStream ,0,_fcbdb .Len ());for _ ,_fdgd :=range _fcbdb .Elements (){if _degdd ,_gbdfg :=_bbgb .GetStream (_fdgd );_gbdfg {_bggbg =append (_bggbg ,_degdd );};};return _bggbg ;
};

// ToPdfObject returns the PDF representation of the function.
func (_gcba *PdfFunctionType4 )ToPdfObject ()_bbgb .PdfObject {_cefee :=_gcba ._fgcef ;if _cefee ==nil {_gcba ._fgcef =&_bbgb .PdfObjectStream {};_cefee =_gcba ._fgcef ;};_adabcf :=_bbgb .MakeDict ();_adabcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbgb .MakeInteger (4));
_bbeg :=&_bbgb .PdfObjectArray {};for _ ,_fbdgf :=range _gcba .Domain {_bbeg .Append (_bbgb .MakeFloat (_fbdgf ));};_adabcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbeg );_gcff :=&_bbgb .PdfObjectArray {};for _ ,_cfefa :=range _gcba .Range {_gcff .Append (_bbgb .MakeFloat (_cfefa ));
};_adabcf .Set ("\u0052\u0061\u006eg\u0065",_gcff );if _gcba ._acdag ==nil &&_gcba .Program !=nil {_gcba ._acdag =[]byte (_gcba .Program .String ());};_adabcf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bbgb .MakeInteger (int64 (len (_gcba ._acdag ))));
_cefee .Stream =_gcba ._acdag ;_cefee .PdfObjectDictionary =_adabcf ;return _cefee ;};

// ToPdfObject implements interface PdfModel.
func (_ded *PdfActionGoTo )ToPdfObject ()_bbgb .PdfObject {_ded .PdfAction .ToPdfObject ();_agd :=_ded ._dce ;_aba :=_agd .PdfObject .(*_bbgb .PdfObjectDictionary );_aba .SetIfNotNil ("\u0053",_bbgb .MakeName (string (ActionTypeGoTo )));_aba .SetIfNotNil ("\u0044",_ded .D );
return _agd ;};

// GetVersion gets the document version.
func (_faced *PdfWriter )GetVersion ()_bbgb .Version {return _faced ._faabe };

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_baae .Lock ();defer _baae .Unlock ();_ggaca =subject };func _bebbd (_cbagfe _bf .ReadSeeker ,_ecgda *ReaderOpts ,_gbgaf bool ,_gccag string )(*PdfReader ,error ){if _ecgda ==nil {_ecgda =NewReaderOpts ();};_daeba :=&PdfReader {_gcfce :_cbagfe ,_efad :map[_bbgb .PdfObject ]struct{}{},_cgadg :_cdcd (),_adbbb :_ecgda .LazyLoad ,_efeabc :_ecgda .ComplianceMode };
_bgaca ,_dedba :=_beec ("\u0072");if _dedba !=nil {return nil ,_dedba ;};_dedba =_gd .Track (_bgaca ,_gccag );if _dedba !=nil {return nil ,_dedba ;};_daeba ._bbegc =_bgaca ;var _gbfbb *_bbgb .PdfParser ;if !_daeba ._efeabc {_gbfbb ,_dedba =_bbgb .NewParser (_cbagfe );
}else {_gbfbb ,_dedba =_bbgb .NewCompliancePdfParser (_cbagfe );};if _dedba !=nil {return nil ,_dedba ;};_daeba ._abceg =_gbfbb ;_cffgc ,_dedba :=_daeba .IsEncrypted ();if _dedba !=nil {return nil ,_dedba ;};if !_cffgc {_dedba =_daeba .loadStructure ();
if _dedba !=nil {return nil ,_dedba ;};}else if _gbgaf {_dcad ,_dcbc :=_daeba .Decrypt ([]byte (_ecgda .Password ));if _dcbc !=nil {return nil ,_dcbc ;};if !_dcad {return nil ,_fd .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _daeba ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_befgf *PdfOutputIntent )ParsePdfObject (object _bbgb .PdfObject )error {_bfddd ,_egedf :=_bbgb .GetDict (object );if !_egedf {_bb .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fd .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_befgf ._gageg =_bfddd ;_befgf .Type ,_ =_bfddd .GetString ("\u0054\u0079\u0070\u0065");_dcfdc ,_egedf :=_bfddd .GetString ("\u0053");if _egedf {switch _dcfdc {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_befgf .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_befgf .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_befgf .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_befgf .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_befgf .S =PdfOutputIntentTypeX ;
};};_befgf .OutputCondition ,_ =_bfddd .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_befgf .OutputConditionIdentifier ,_ =_bfddd .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_befgf .RegistryName ,_ =_bfddd .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_befgf .Info ,_ =_bfddd .GetString ("\u0049\u006e\u0066\u006f");if _adaa ,_aedad :=_bbgb .GetStream (_bfddd .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_aedad {_befgf .ColorComponents ,_ =_bbgb .GetIntVal (_adaa .Get ("\u004e"));_ffaec ,_dggfgg :=_bbgb .DecodeStream (_adaa );if _dggfgg !=nil {return _dggfgg ;};_befgf .DestOutputProfile =_ffaec ;};return nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_bebg *PdfColorCalGray )GetNumComponents ()int {return 1};

// R returns the value of the red component of the color.
func (_cdac *PdfColorDeviceRGB )R ()float64 {return _cdac [0]};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ceaee *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_cbcc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_ecad *_bbgb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_eeee :=PdfAnnotationPrinterMark {};_eeee .MN =_ecad .Get ("\u004d\u004e");
return &_eeee ,nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// Subtype returns the font's "Subtype" field.
func (_debb *PdfFont )Subtype ()string {_cffae :=_debb .baseFields ()._fagd ;if _accd ,_dfde :=_debb ._efcd .(*pdfFontType0 );_dfde {_cffae =_cffae +"\u003a"+_accd .DescendantFont .Subtype ();};return _cffae ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_aacg *PdfAppender )Write (w _bf .Writer )error {if _aacg ._dbgb {return _fd .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_geee :=NewPdfWriter ();_debe ,_debgb :=_bbgb .GetDict (_geee ._deabc );if !_debgb {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fagb ,_debgb :=_debe .Get ("\u004b\u0069\u0064\u0073").(*_bbgb .PdfObjectArray );if !_debgb {return _fd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gdcd ,_debgb :=_debe .Get ("\u0043\u006f\u0075n\u0074").(*_bbgb .PdfObjectInteger );if !_debgb {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_faeb :=_aacg ._cgeda ._abceg ;_dfba :=_faeb .GetTrailer ();if _dfba ==nil {return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bbgf ,_debgb :=_bbgb .GetIndirect (_dfba .Get ("\u0052\u006f\u006f\u0074"));
if !_debgb {return _fd .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gaec ,_debgb :=_bbgb .GetDict (_bbgf );if !_debgb {_bb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bbgf ,*_dfba );
return _fd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_eab :=range _gaec .Keys (){if _geee ._dfcbd .Get (_eab )==nil {_bcc :=_gaec .Get (_eab );_geee ._dfcbd .Set (_eab ,_bcc );};};if _aacg ._eeec !=nil {_geee ._dfcbd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_aacg ._eeec .ToPdfObject ());
_aacg .updateObjectsDeep (_aacg ._eeec .ToPdfObject (),nil );};if _aacg ._gdg !=nil {_aacg .updateObjectsDeep (_aacg ._gdg .ToPdfObject (),nil );_geee ._dfcbd .Set ("\u0044\u0053\u0053",_aacg ._gdg .GetContainingPdfObject ());};if _geee ._faabe .Major < 2{_geee .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_geee .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_aacg .addNewObject (_geee ._bgfbb );_aacg .addNewObject (_geee ._dgbad );_dcfgc :=false ;if len (_aacg ._cgeda .PageList )!=len (_aacg ._fegcd ){_dcfgc =true ;}else {for _gceb :=range _aacg ._cgeda .PageList {switch {case _aacg ._fegcd [_gceb ]==_aacg ._cgeda .PageList [_gceb ]:case _aacg ._fegcd [_gceb ]==_aacg .Reader .PageList [_gceb ]:default:_dcfgc =true ;
};if _dcfgc {break ;};};};if _dcfgc {_aacg .updateObjectsDeep (_geee ._deabc ,nil );}else {_aacg ._ecaea [_geee ._deabc ]=struct{}{};};_geee ._deabc .ObjectNumber =_aacg .Reader ._abaaf .ObjectNumber ;_aacg ._gcbf [_geee ._deabc ]=_aacg .Reader ._abaaf .ObjectNumber ;
_bbb :=[]_bbgb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_baab :=range _aacg ._fegcd {_gcgb :=_baab .ToPdfObject ();
*_gdcd =*_gdcd +1;if _gdcge ,_cead :=_gcgb .(*_bbgb .PdfIndirectObject );_cead &&_gdcge .GetParser ()==_aacg ._cgeda ._abceg {_fagb .Append (&_gdcge .PdfObjectReference );continue ;};if _faebd ,_faba :=_bbgb .GetDict (_gcgb );_faba {_ebg ,_aebgf :=_faebd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bbgb .PdfIndirectObject );
for _aebgf {_bb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebg );_gead ,_dfdd :=_ebg .PdfObject .(*_bbgb .PdfObjectDictionary );if !_dfdd {return _fd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cceg :=range _bbb {_bb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cceg );if _faebd .Get (_cceg )!=nil {_bb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gbba :=_gead .Get (_cceg );_gbba !=nil {_bb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cceg );_faebd .Set (_cceg ,_gbba );};};_ebg ,_aebgf =_gead .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bbgb .PdfIndirectObject );
_bb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gead .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_faebd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_geee ._deabc );};_aacg .updateObjectsDeep (_gcgb ,nil );
_fagb .Append (_gcgb );};if _ ,_cccfc :=_aacg ._bffc .Seek (0,_bf .SeekStart );_cccfc !=nil {return _cccfc ;};_begb :=make (map[SignatureHandler ]_bf .Writer );_agdf :=_bbgb .MakeArray ();for _ ,_dfbd :=range _aacg ._dadf {if _cbca ,_edfe :=_bbgb .GetIndirect (_dfbd );
_edfe {if _fcef ,_ebcc :=_cbca .PdfObject .(*pdfSignDictionary );_ebcc {_bdcb :=*_fcef ._aecff ;var _faef error ;_begb [_bdcb ],_faef =_bdcb .NewDigest (_fcef ._gabecd );if _faef !=nil {return _faef ;};_agdf .Append (_bbgb .MakeInteger (0xfffff),_bbgb .MakeInteger (0xfffff));
};};};if _agdf .Len ()> 0{_agdf .Append (_bbgb .MakeInteger (0xfffff),_bbgb .MakeInteger (0xfffff));};for _ ,_aefb :=range _aacg ._dadf {if _efea ,_fdgf :=_bbgb .GetIndirect (_aefb );_fdgf {if _acac ,_gbdb :=_efea .PdfObject .(*pdfSignDictionary );_gbdb {_acac .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_agdf );
};};};_ffgg :=len (_begb )> 0;var _adcb _bf .Reader =_aacg ._bffc ;if _ffgg {_gdac :=make ([]_bf .Writer ,0,len (_begb ));for _ ,_adbg :=range _begb {_gdac =append (_gdac ,_adbg );};_adcb =_bf .TeeReader (_aacg ._bffc ,_bf .MultiWriter (_gdac ...));};_gafe ,_ecfg :=_bf .Copy (w ,_adcb );
if _ecfg !=nil {return _ecfg ;};if len (_aacg ._dadf )==0{return nil ;};_geee ._cddga =_gafe ;_geee .ObjNumOffset =_aacg ._fac ;_geee ._aadfb =true ;_geee ._egacg =_aacg ._bee ;_geee ._cabbcc =_aacg ._bdbd ;_geee ._ddccg =_aacg ._eddc ;_geee ._faabe =_aacg ._cgeda .PdfVersion ();
_geee ._aeeec =_aacg ._gcbf ;_geee ._agdbe =_aacg ._agbc .GetCrypter ();_geee ._bebbea =_aacg ._agbc .GetEncryptObj ();_afcfg :=_aacg ._agbc .GetXrefType ();if _afcfg !=nil {_aga :=*_afcfg ==_bbgb .XrefTypeObjectStream ;_geee ._ddefe =&_aga ;};_geee ._bfded =map[_bbgb .PdfObject ]struct{}{};
_geee ._cagcad =[]_bbgb .PdfObject {};for _ ,_ccfb :=range _aacg ._dadf {if _ ,_fbge :=_aacg ._ecaea [_ccfb ];_fbge {continue ;};_geee .addObject (_ccfb );};_efdg :=w ;if _ffgg {_efdg =_gag .NewBuffer (nil );};if _aacg ._febg !=""&&_geee ._agdbe ==nil {_geee .Encrypt ([]byte (_aacg ._febg ),[]byte (_aacg ._febg ),_aacg ._daeb );
};if _dbbg :=_dfba .Get ("\u0049\u0044");_dbbg !=nil {if _cbdd ,_gcdg :=_bbgb .GetArray (_dbbg );_gcdg {_geee ._ffded =_cbdd ;};};if _cccd :=_geee .Write (_efdg );_cccd !=nil {return _cccd ;};if _ffgg {_efdb :=_efdg .(*_gag .Buffer ).Bytes ();_eaed :=_bbgb .MakeArray ();
var _feaa []*pdfSignDictionary ;var _bafeg int64 ;for _ ,_cafc :=range _geee ._cagcad {if _eaeda ,_ecgc :=_bbgb .GetIndirect (_cafc );_ecgc {if _gfge ,_gfeb :=_eaeda .PdfObject .(*pdfSignDictionary );_gfeb {_feaa =append (_feaa ,_gfge );_ceaa :=_gfge ._dagfd +int64 (_gfge ._fgfda );
_eaed .Append (_bbgb .MakeInteger (_bafeg ),_bbgb .MakeInteger (_ceaa -_bafeg ));_bafeg =_gfge ._dagfd +int64 (_gfge ._daace );};};};_eaed .Append (_bbgb .MakeInteger (_bafeg ),_bbgb .MakeInteger (_gafe +int64 (len (_efdb ))-_bafeg ));_befe :=[]byte (_eaed .WriteString ());
for _ ,_ccbd :=range _feaa {_ggda :=int (_ccbd ._dagfd -_gafe );for _defb :=_ccbd ._dbgee ;_defb < _ccbd ._dbggf ;_defb ++{_efdb [_ggda +_defb ]=' ';};_eddag :=_efdb [_ggda +_ccbd ._dbgee :_ggda +_ccbd ._dbggf ];copy (_eddag ,_befe );};var _bge int ;for _ ,_gaee :=range _feaa {_ddgad :=int (_gaee ._dagfd -_gafe );
_affe :=_efdb [_bge :_ddgad +_gaee ._fgfda ];_fecg :=*_gaee ._aecff ;_begb [_fecg ].Write (_affe );_bge =_ddgad +_gaee ._daace ;};for _ ,_cgad :=range _feaa {_ggae :=_efdb [_bge :];_bddg :=*_cgad ._aecff ;_begb [_bddg ].Write (_ggae );};for _ ,_bfab :=range _feaa {_aecg :=int (_bfab ._dagfd -_gafe );
_afaf :=*_bfab ._aecff ;_deab :=_begb [_afaf ];if _ceba :=_afaf .Sign (_bfab ._gabecd ,_deab );_ceba !=nil {return _ceba ;};_bfab ._gabecd .ByteRange =_eaed ;_ffgd :=[]byte (_bfab ._gabecd .Contents .WriteString ());for _acbb :=_bfab ._dbgee ;_acbb < _bfab ._dbggf ;
_acbb ++{_efdb [_aecg +_acbb ]=' ';};for _egad :=_bfab ._fgfda ;_egad < _bfab ._daace ;_egad ++{_efdb [_aecg +_egad ]=' ';};_ccba :=_efdb [_aecg +_bfab ._dbgee :_aecg +_bfab ._dbggf ];copy (_ccba ,_befe );_ccba =_efdb [_aecg +_bfab ._fgfda :_aecg +_bfab ._daace ];
copy (_ccba ,_ffgd );};_bddef :=_gag .NewBuffer (_efdb );_ ,_ecfg =_bf .Copy (w ,_bddef );if _ecfg !=nil {return _ecfg ;};};_aacg ._dbgb =true ;return nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_edefa *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};var _ pdfFont =(*pdfCIDFontType0 )(nil );


// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_geed :=map[rune ]int {};for _ ,_cgabd :=range text {_geed [_cgabd ]++;};return _geed ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_eaccc *PdfWriter )AddPage (page *PdfPage )error {const _cbebg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gefedg (page );_dcgfd :=page .ToPdfObject ();_bb .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_bb .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_dcgfd );_egde ,_aadea :=_bbgb .GetIndirect (_dcgfd );if !_aadea {return _fd .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bb .Log .Trace ("\u0025\u0073",_egde );_bb .Log .Trace ("\u0025\u0073",_egde .PdfObject );_geeeed ,_aadea :=_bbgb .GetDict (_egde .PdfObject );if !_aadea {return _fd .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dccec ,_aadea :=_bbgb .GetName (_geeeed .Get ("\u0054\u0079\u0070\u0065"));if !_aadea {return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_geeeed .Get ("\u0054\u0079\u0070\u0065"));
};if _dccec .String ()!="\u0050\u0061\u0067\u0065"{return _fd .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_afcca :=[]_bbgb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_beecb ,_bccge :=_bbgb .GetIndirect (_geeeed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bb .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_geeeed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bccge );
for _bccge {_bb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_beecb );_efedc ,_gfcff :=_bbgb .GetDict (_beecb .PdfObject );if !_gfcff {return _fd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_adgae :=range _afcca {_bb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adgae );if _geeeed .Get (_adgae )!=nil {_bb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _acaeb :=_efedc .Get (_adgae );_acaeb !=nil {_bb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adgae );_geeeed .Set (_adgae ,_acaeb );};};_beecb ,_bccge =_bbgb .GetIndirect (_efedc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_bb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_efedc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_geeeed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eaccc ._deabc );_egde .PdfObject =_geeeed ;_gdggc ,_aadea :=_bbgb .GetDict (_eaccc ._deabc .PdfObject );if !_aadea {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_aaccd ,_aadea :=_bbgb .GetArray (_gdggc .Get ("\u004b\u0069\u0064\u0073"));if !_aadea {return _fd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_aaccd .Append (_egde );_eaccc ._edaad [_geeeed ]=struct{}{};_eceac ,_aadea :=_bbgb .GetInt (_gdggc .Get ("\u0043\u006f\u0075n\u0074"));if !_aadea {return _fd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_eceac =*_eceac +1;if page ._cdcbf ==nil {_dfacg :=_gd .Track (_eaccc ._bfbbea ,_cbebg );if _dfacg !=nil {return _dfacg ;};}else {_fgegd :=_gd .Track (page ._cdcbf ._bbegc ,_cbebg );if _fgegd !=nil {return _fgegd ;};};_eaccc .addObject (_egde );_geggg :=_eaccc .addObjects (_geeeed );
if _geggg !=nil {return _geggg ;};return nil ;};func (_abgdd *PdfFilespec )getDict ()*_bbgb .PdfObjectDictionary {if _dbcf ,_ebdfgf :=_abgdd ._gcecd .(*_bbgb .PdfIndirectObject );_ebdfgf {_eged ,_abgf :=_dbcf .PdfObject .(*_bbgb .PdfObjectDictionary );
if !_abgf {return nil ;};return _eged ;}else if _aggc ,_gccb :=_abgdd ._gcecd .(*_bbgb .PdfObjectDictionary );_gccb {return _aggc ;}else {_bb .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_abgdd ._gcecd );
return nil ;};};func (_bgcd *PdfWriter )writeDocumentVersion (){if _bgcd ._aadfb {_bgcd .writeString ("\u000a");}else {_bgcd .writeString (_d .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_bgcd ._faabe .Major ,_bgcd ._faabe .Minor ));
_bgcd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_eegaa *PdfWriter )SetRotation (rotate int64 )error {_gbfee ,_bccged :=_bbgb .GetDict (_eegaa ._deabc );if !_bccged {return ErrTypeCheck ;};_gbfee .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bbgb .MakeInteger (rotate ));return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdbfc *PdfShading )ToPdfObject ()_bbgb .PdfObject {_adfde :=_fdbfc ._bfgebd ;_dgee ,_fdffc :=_fdbfc .getShadingDict ();if _fdffc !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdbfc .ShadingType !=nil {_dgee .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fdbfc .ShadingType );};if _fdbfc .ColorSpace !=nil {_dgee .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fdbfc .ColorSpace .ToPdfObject ());
};if _fdbfc .Background !=nil {_dgee .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_fdbfc .Background );};if _fdbfc .BBox !=nil {_dgee .Set ("\u0042\u0042\u006f\u0078",_fdbfc .BBox .ToPdfObject ());};if _fdbfc .AntiAlias !=nil {_dgee .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_fdbfc .AntiAlias );
};return _adfde ;};func (_gebc *PdfAppender )mergeResources (_fda ,_eacf _bbgb .PdfObject ,_adcd map[_bbgb .PdfObjectName ]_bbgb .PdfObjectName )_bbgb .PdfObject {if _eacf ==nil &&_fda ==nil {return nil ;};if _eacf ==nil {return _fda ;};_eaeb ,_daffe :=_bbgb .GetDict (_eacf );
if !_daffe {return _fda ;};if _fda ==nil {_bagf :=_bbgb .MakeDict ();_bagf .Merge (_eaeb );return _eacf ;};_adfb ,_daffe :=_bbgb .GetDict (_fda );if !_daffe {_bb .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_adfb =_bbgb .MakeDict ();};for _ ,_edbge :=range _eaeb .Keys (){if _fcdf ,_adfa :=_adcd [_edbge ];_adfa {_adfb .Set (_fcdf ,_eaeb .Get (_edbge ));}else {_adfb .Set (_edbge ,_eaeb .Get (_edbge ));};};return _adfb ;};func _ecaa (_ebad _bbgb .PdfObject )(map[_gcc .CharCode ]float64 ,error ){if _ebad ==nil {return nil ,nil ;
};_bbbb ,_bgceb :=_bbgb .GetArray (_ebad );if !_bgceb {return nil ,nil ;};_dddcc :=map[_gcc .CharCode ]float64 {};_abeg :=_bbbb .Len ();for _dfcfe :=0;_dfcfe < _abeg -1;_dfcfe ++{_dgece :=_bbgb .TraceToDirectObject (_bbbb .Get (_dfcfe ));_cggf ,_eccae :=_bbgb .GetIntVal (_dgece );
if !_eccae {return nil ,_d .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dfcfe ,_dgece );};_dfcfe ++;if _dfcfe > _abeg -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bbbb );
};_fbage :=_bbgb .TraceToDirectObject (_bbbb .Get (_dfcfe ));switch _fbage .(type ){case *_bbgb .PdfObjectArray :_fabff ,_ :=_bbgb .GetArray (_fbage );if _ecadc ,_ddcde :=_fabff .ToFloat64Array ();_ddcde ==nil {for _eeddb :=0;_eeddb < len (_ecadc );_eeddb ++{_dddcc [_gcc .CharCode (_cggf +_eeddb )]=_ecadc [_eeddb ];
};}else {return nil ,_d .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfcfe ,_fbage );};case *_bbgb .PdfObjectInteger :_bbfba ,_dbag :=_bbgb .GetIntVal (_fbage );
if !_dbag {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfcfe ,_fbage );};_dfcfe ++;if _dfcfe > _abeg -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bbbb );
};_fdef :=_bbbb .Get (_dfcfe );_geeee ,_cabab :=_bbgb .GetNumberAsFloat (_fdef );if _cabab !=nil {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfcfe ,_fdef );
};for _aaab :=_cggf ;_aaab <=_bbfba ;_aaab ++{_dddcc [_gcc .CharCode (_aaab )]=_geeee ;};default:return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfcfe ,_fbage );
};};return _dddcc ,nil ;};

// Val returns the value of the color.
func (_fbab *PdfColorCalGray )Val ()float64 {return float64 (*_fbab )};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bbgb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_adga *_bbgb .PdfIndirectObject ;};func _cadfaf ()string {_baae .Lock ();defer _baae .Unlock ();if len (_cdea )> 0{return _cdea ;
};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cdcgd _bbgb .ParserMetadata ;};func (_bfacf *PdfReader )buildPageList (_gabec *_bbgb .PdfIndirectObject ,_aecebf *_bbgb .PdfIndirectObject ,_faaf map[_bbgb .PdfObject ]struct{})error {if _gabec ==nil {return nil ;
};if _ ,_dfefb :=_faaf [_gabec ];_dfefb {_bb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gabec .ObjectNumber );
return nil ;};_faaf [_gabec ]=struct{}{};_gddbd ,_febc :=_gabec .PdfObject .(*_bbgb .PdfObjectDictionary );if !_febc {return _fd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_dfcge ,_febc :=(*_gddbd ).Get ("\u0054\u0079\u0070\u0065").(*_bbgb .PdfObjectName );
if !_febc {if _gddbd .Get ("\u004b\u0069\u0064\u0073")==nil {return _fd .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_dfcge =_bbgb .MakeName ("\u0050\u0061\u0067e\u0073");_gddbd .Set ("\u0054\u0079\u0070\u0065",_dfcge );};_bb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_dfcge ,_gabec );
if *_dfcge =="\u0050\u0061\u0067\u0065"{_febec ,_bgccf :=_bfacf .newPdfPageFromDict (_gddbd );if _bgccf !=nil {return _bgccf ;};_febec .setContainer (_gabec );if _aecebf !=nil {_gddbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aecebf );};_bfacf ._gadg =append (_bfacf ._gadg ,_gabec );
_bfacf .PageList =append (_bfacf .PageList ,_febec );return nil ;};if *_dfcge !="\u0050\u0061\u0067e\u0073"{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_dfcge );
return _fd .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _aecebf !=nil {_gddbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aecebf );};if !_bfacf ._adbbb {_acbce :=_bfacf .traverseObjectData (_gabec );if _acbce !=nil {return _acbce ;};};_gbggf ,_eadb :=_bfacf ._abceg .Resolve (_gddbd .Get ("\u004b\u0069\u0064\u0073"));
if _eadb !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _eadb ;};var _dfcfd *_bbgb .PdfObjectArray ;
_dfcfd ,_febc =_gbggf .(*_bbgb .PdfObjectArray );if !_febc {_cggfa ,_agcda :=_gbggf .(*_bbgb .PdfIndirectObject );if !_agcda {return _fd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_dfcfd ,_febc =_cggfa .PdfObject .(*_bbgb .PdfObjectArray );if !_febc {return _fd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dfcfd );
for _cgaa ,_fcad :=range _dfcfd .Elements (){_aged ,_aafff :=_bbgb .GetIndirect (_fcad );if !_aafff {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_aged );
return _fd .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dfcfd .Set (_cgaa ,_aged );_eadb =_bfacf .buildPageList (_aged ,_gabec ,_faaf );if _eadb !=nil {return _eadb ;
};};return nil ;};func (_bdgdd *PdfWriter )checkCrossReferenceStream ()bool {_bdead :=_bdgdd ._faabe .Major > 1||(_bdgdd ._faabe .Major ==1&&_bdgdd ._faabe .Minor > 4);if _bdgdd ._ddefe !=nil {_bdead =*_bdgdd ._ddefe ;};return _bdead ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_dadaf *PdfReader )GetOCProperties ()(_bbgb .PdfObject ,error ){_gefga :=_dadaf ._facae ;_ecab :=_gefga .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ecab =_bbgb .ResolveReference (_ecab );if !_dadaf ._adbbb {_gcdad :=_dadaf .traverseObjectData (_ecab );
if _gcdad !=nil {return nil ,_gcdad ;};};return _ecab ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fcfba *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fd .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cefb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfgb :=vals [0];if _dfgb < 0.0||_dfgb > 1.0{_bb .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _dfgb < 0.0{_dfgb =0.0;}else if _dfgb > 1.0{_dfgb =1.0;};return NewPdfColorDeviceGray (_dfgb ),nil ;};var _dggd =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_caaad ,_feeee :=_gaa .Open (filePath );if _feeee !=nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_feeee );
return nil ,_feeee ;};defer _caaad .Close ();return NewPdfFontFromTTF (_caaad );};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_abgcb :_bbgb .MakeIndirectObject (_bbgb .MakeDict ()),VRI :map[string ]*VRI {}};};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dedb *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_dedb .updateObjectsDeep (dss .ToPdfObject (),nil );};_dedb ._gdg =dss ;};

// ToPdfObject implements interface PdfModel.
func (_dggb *PdfAnnotationRedact )ToPdfObject ()_bbgb .PdfObject {_dggb .PdfAnnotation .ToPdfObject ();_gfff :=_dggb ._bce ;_cfcb :=_gfff .PdfObject .(*_bbgb .PdfObjectDictionary );_dggb .PdfAnnotationMarkup .appendToPdfDictionary (_cfcb );_cfcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_cfcb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dggb .QuadPoints );_cfcb .SetIfNotNil ("\u0049\u0043",_dggb .IC );_cfcb .SetIfNotNil ("\u0052\u004f",_dggb .RO );_cfcb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dggb .OverlayText );
_cfcb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dggb .Repeat );_cfcb .SetIfNotNil ("\u0044\u0041",_dggb .DA );_cfcb .SetIfNotNil ("\u0051",_dggb .Q );return _gfff ;};func (_fag *PdfReader )newPdfActionSetOCGStateFromDict (_gcaf *_bbgb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gcaf .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gcaf .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ddgc :=&PdfFilespec {};_ddgc ._gcecd =_bbgb .MakeIndirectObject (_bbgb .MakeDict ());return _ddgc ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_edefc :=&PdfPageResources {};_edefc ._acgfg =_bbgb .MakeDict ();return _edefc ;};func (_eddb *PdfAcroForm )fill (_cgef FieldValueProvider ,_edcf FieldAppearanceGenerator )error {if _eddb ==nil {return nil ;
};_cbcgb ,_fbdg :=_cgef .FieldValues ();if _fbdg !=nil {return _fbdg ;};for _ ,_acedf :=range _eddb .AllFields (){_gfga :=_acedf .PartialName ();_degcc ,_aegdc :=_cbcgb [_gfga ];if !_aegdc {if _abag ,_bgbf :=_acedf .FullName ();_bgbf ==nil {_degcc ,_aegdc =_cbcgb [_abag ];
};};if !_aegdc {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gfga );
continue ;};if _fbfe :=_cfdc (_acedf ,_degcc );_fbfe !=nil {return _fbfe ;};if _edcf ==nil {continue ;};for _ ,_gdcf :=range _acedf .Annotations {_agad ,_bggd :=_edcf .GenerateAppearanceDict (_eddb ,_acedf ,_gdcf );if _bggd !=nil {return _bggd ;};_gdcf .AP =_agad ;
_gdcf .ToPdfObject ();};};return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gaag *PdfColorspaceDeviceCMYK )ToPdfObject ()_bbgb .PdfObject {return _bbgb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_faabg *PdfAcroForm )fillImageWithAppearance (_ebfbc FieldImageProvider ,_dcde FieldAppearanceGenerator )error {if _faabg ==nil {return nil ;
};_egga ,_acgg :=_ebfbc .FieldImageValues ();if _acgg !=nil {return _acgg ;};for _ ,_gfdc :=range _faabg .AllFields (){_baegg :=_gfdc .PartialName ();_fgfbc ,_bdddc :=_egga [_baegg ];if !_bdddc {if _gbeb ,_cabga :=_gfdc .FullName ();_cabga ==nil {_fgfbc ,_bdddc =_egga [_gbeb ];
};};if !_bdddc {_bb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_baegg );
continue ;};switch _bgda :=_gfdc .GetContext ().(type ){case *PdfFieldButton :if _bgda .IsPush (){_bgda .SetFillImage (_fgfbc );};};if _dcde ==nil {continue ;};for _ ,_cefdbe :=range _gfdc .Annotations {_dgdfc ,_befd :=_dcde .GenerateAppearanceDict (_faabg ,_gfdc ,_cefdbe );
if _befd !=nil {return _befd ;};_cefdbe .AP =_dgdfc ;_cefdbe .ToPdfObject ();};};return nil ;};func (_aege PdfFont )actualFont ()pdfFont {if _aege ._efcd ==nil {_bb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aege );
};return _aege ._efcd ;};

// ToPdfObject returns the PDF representation of the function.
func (_ggfacd *PdfFunctionType3 )ToPdfObject ()_bbgb .PdfObject {_geea :=_bbgb .MakeDict ();_geea .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bbgb .MakeInteger (3));_fbec :=&_bbgb .PdfObjectArray {};for _ ,_cegf :=range _ggfacd .Domain {_fbec .Append (_bbgb .MakeFloat (_cegf ));
};_geea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbec );if _ggfacd .Range !=nil {_faeca :=&_bbgb .PdfObjectArray {};for _ ,_febbe :=range _ggfacd .Range {_faeca .Append (_bbgb .MakeFloat (_febbe ));};_geea .Set ("\u0052\u0061\u006eg\u0065",_faeca );
};if _ggfacd .Functions !=nil {_fdea :=&_bbgb .PdfObjectArray {};for _ ,_effaa :=range _ggfacd .Functions {_fdea .Append (_effaa .ToPdfObject ());};_geea .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_fdea );};if _ggfacd .Bounds !=nil {_geaeb :=&_bbgb .PdfObjectArray {};
for _ ,_dddcg :=range _ggfacd .Bounds {_geaeb .Append (_bbgb .MakeFloat (_dddcg ));};_geea .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_geaeb );};if _ggfacd .Encode !=nil {_caafa :=&_bbgb .PdfObjectArray {};for _ ,_fdgfg :=range _ggfacd .Encode {_caafa .Append (_bbgb .MakeFloat (_fdgfg ));
};_geea .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_caafa );};if _ggfacd ._adabc !=nil {_ggfacd ._adabc .PdfObject =_geea ;return _ggfacd ._adabc ;};return _geea ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_baaf *PdfFont )ToPdfObject ()_bbgb .PdfObject {if _baaf ._efcd ==nil {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bbgb .MakeNull ();
};return _baaf ._efcd .ToPdfObject ();};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bbgb .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fgfec *OutlineItem )ToPdfObject ()_bbgb .PdfObject {_ecebb ,_ :=_fgfec .ToPdfOutlineItem ();return _ecebb .ToPdfObject ();};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_adc .PSProgram ;_ffggf *_adc .PSExecutor ;_acdag []byte ;_fgcef *_bbgb .PdfObjectStream ;};

// WriteToFile writes the output PDF to file.
func (_gfagb *PdfWriter )WriteToFile (outputFilePath string )error {_ddafg ,_gbad :=_gaa .Create (outputFilePath );if _gbad !=nil {return _gbad ;};defer _ddafg .Close ();return _gfagb .Write (_ddafg );};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_fcbf :=NewPdfAnnotation ();_bacf :=&PdfAnnotationCaret {};_bacf .PdfAnnotation =_fcbf ;_bacf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcbf .SetContext (_bacf );return _bacf ;};

// ToPdfObject implements interface PdfModel.
func (_agf *PdfAnnotationHighlight )ToPdfObject ()_bbgb .PdfObject {_agf .PdfAnnotation .ToPdfObject ();_cbe :=_agf ._bce ;_bebf :=_cbe .PdfObject .(*_bbgb .PdfObjectDictionary );_agf .PdfAnnotationMarkup .appendToPdfDictionary (_bebf );_bebf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bbgb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_bebf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agf .QuadPoints );return _cbe ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fdddgf *PdfReader )GetEncryptionMethod ()string {_ddfa :=_fdddgf ._abceg .GetCrypter ();return _ddfa .String ();};

// AllFields returns a flattened list of all fields in the form.
func (_dfcee *PdfAcroForm )AllFields ()[]*PdfField {if _dfcee ==nil {return nil ;};var _gfgbef []*PdfField ;if _dfcee .Fields !=nil {for _ ,_cddbc :=range *_dfcee .Fields {_gfgbef =append (_gfgbef ,_facc (_cddbc )...);};};return _gfgbef ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bbgb .PdfObjectBool ;SigFlags *_bbgb .PdfObjectInteger ;CO *_bbgb .PdfObjectArray ;DR *PdfPageResources ;DA *_bbgb .PdfObjectString ;Q *_bbgb .PdfObjectInteger ;XFA _bbgb .PdfObject ;_dabb *_bbgb .PdfIndirectObject ;
};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_baae .Lock ();defer _baae .Unlock ();_egaba =keywords };func _dgbe (_ffede *_bbgb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_begbd :=PdfShadingType6 {};_dfaa :=_ffede .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dfaa ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_agcbde ,_cegcaa :=_dfaa .(*_bbgb .PdfObjectInteger );if !_cegcaa {_bb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfaa );
return nil ,_bbgb .ErrTypeError ;};_begbd .BitsPerCoordinate =_agcbde ;_dfaa =_ffede .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dfaa ==nil {_bb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_agcbde ,_cegcaa =_dfaa .(*_bbgb .PdfObjectInteger );if !_cegcaa {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dfaa );
return nil ,_bbgb .ErrTypeError ;};_begbd .BitsPerComponent =_agcbde ;_dfaa =_ffede .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dfaa ==nil {_bb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_agcbde ,_cegcaa =_dfaa .(*_bbgb .PdfObjectInteger );if !_cegcaa {_bb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dfaa );
return nil ,_bbgb .ErrTypeError ;};_begbd .BitsPerComponent =_agcbde ;_dfaa =_ffede .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dfaa ==nil {_bb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_afdag ,_cegcaa :=_dfaa .(*_bbgb .PdfObjectArray );if !_cegcaa {_bb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfaa );
return nil ,_bbgb .ErrTypeError ;};_begbd .Decode =_afdag ;if _caeac :=_ffede .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_caeac !=nil {_begbd .Function =[]PdfFunction {};if _aacae ,_dgbbe :=_caeac .(*_bbgb .PdfObjectArray );_dgbbe {for _ ,_eebcg :=range _aacae .Elements (){_ccgfc ,_deca :=_cdfb (_eebcg );
if _deca !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_deca );return nil ,_deca ;};_begbd .Function =append (_begbd .Function ,_ccgfc );
};}else {_ggbb ,_ddaee :=_cdfb (_caeac );if _ddaee !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddaee );return nil ,_ddaee ;
};_begbd .Function =append (_begbd .Function ,_ggbb );};};return &_begbd ,nil ;};func (_ccggb *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _ccggb ._eaega };func (_gcf *PdfReader )newPdfActionGotoRFromDict (_abae *_bbgb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_eccb ,_gac :=_cfg (_abae .Get ("\u0046"));
if _gac !=nil {return nil ,_gac ;};return &PdfActionGoToR {D :_abae .Get ("\u0044"),NewWindow :_abae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eccb },nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// SetAnnotations sets the annotations list.
func (_deag *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_deag ._bccg =annotations };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cebce *PdfShadingType4 )ToPdfObject ()_bbgb .PdfObject {_cebce .PdfShading .ToPdfObject ();_bffee ,_cccbd :=_cebce .getShadingDict ();if _cccbd !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cebce .BitsPerCoordinate !=nil {_bffee .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cebce .BitsPerCoordinate );};if _cebce .BitsPerComponent !=nil {_bffee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cebce .BitsPerComponent );
};if _cebce .BitsPerFlag !=nil {_bffee .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cebce .BitsPerFlag );};if _cebce .Decode !=nil {_bffee .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cebce .Decode );};if _cebce .Function !=nil {if len (_cebce .Function )==1{_bffee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cebce .Function [0].ToPdfObject ());
}else {_afefa :=_bbgb .MakeArray ();for _ ,_beaef :=range _cebce .Function {_afefa .Append (_beaef .ToPdfObject ());};_bffee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afefa );};};return _cebce ._bfgebd ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bbgb .PdfObject ;Flags _bbgb .PdfObject ;};

// SetName sets the `Name` field of the signature.
func (_ecacd *PdfSignature )SetName (name string ){_ecacd .Name =_bbgb .MakeString (name )};func (_bfee *PdfAnnotationMarkup )appendToPdfDictionary (_fae *_bbgb .PdfObjectDictionary ){_fae .SetIfNotNil ("\u0054",_bfee .T );if _bfee .Popup !=nil {_fae .Set ("\u0050\u006f\u0070u\u0070",_bfee .Popup .ToPdfObject ());
};_fae .SetIfNotNil ("\u0043\u0041",_bfee .CA );_fae .SetIfNotNil ("\u0052\u0043",_bfee .RC );_fae .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bfee .CreationDate );_fae .SetIfNotNil ("\u0049\u0052\u0054",_bfee .IRT );
_fae .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bfee .Subj );_fae .SetIfNotNil ("\u0052\u0054",_bfee .RT );_fae .SetIfNotNil ("\u0049\u0054",_bfee .IT );_fae .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bfee .ExData );};

// String returns a string representation of what flags are set.
func (_dggbf FieldFlag )String ()string {_eeeb :="";if _dggbf ==FieldFlagClear {_eeeb ="\u0043\u006c\u0065a\u0072";return _eeeb ;};if _dggbf &FieldFlagReadOnly > 0{_eeeb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _dggbf &FieldFlagRequired > 0{_eeeb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _dggbf &FieldFlagNoExport > 0{_eeeb +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _dggbf &FieldFlagNoToggleToOff > 0{_eeeb +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _dggbf &FieldFlagRadio > 0{_eeeb +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _dggbf &FieldFlagPushbutton > 0{_eeeb +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _dggbf &FieldFlagRadiosInUnision > 0{_eeeb +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _dggbf &FieldFlagMultiline > 0{_eeeb +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _dggbf &FieldFlagPassword > 0{_eeeb +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _dggbf &FieldFlagFileSelect > 0{_eeeb +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _dggbf &FieldFlagDoNotScroll > 0{_eeeb +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _dggbf &FieldFlagComb > 0{_eeeb +="\u007c\u0043\u006fm\u0062";};if _dggbf &FieldFlagRichText > 0{_eeeb +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _dggbf &FieldFlagDoNotSpellCheck > 0{_eeeb +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _dggbf &FieldFlagCombo > 0{_eeeb +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _dggbf &FieldFlagEdit > 0{_eeeb +="\u007c\u0045\u0064i\u0074";};if _dggbf &FieldFlagSort > 0{_eeeb +="\u007c\u0053\u006fr\u0074";};if _dggbf &FieldFlagMultiSelect > 0{_eeeb +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _dggbf &FieldFlagCommitOnSelChange > 0{_eeeb +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _df .Trim (_eeeb ,"\u007c");};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_adbgf *PdfField )ToPdfObject ()_bbgb .PdfObject {_bega :=_adbgf ._bgbc ;_gbcf :=_bega .PdfObject .(*_bbgb .PdfObjectDictionary );_ecgga :=_bbgb .MakeArray ();for _ ,_fcgcd :=range _adbgf .Kids {_ecgga .Append (_fcgcd .ToPdfObject ());};for _ ,_feae :=range _adbgf .Annotations {if _feae ._bce !=_adbgf ._bgbc {_ecgga .Append (_feae .GetContext ().ToPdfObject ());
};};if _adbgf .Parent !=nil {_gbcf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_adbgf .Parent .GetContainingPdfObject ());};if _ecgga .Len ()> 0{_gbcf .Set ("\u004b\u0069\u0064\u0073",_ecgga );};_gbcf .SetIfNotNil ("\u0046\u0054",_adbgf .FT );
_gbcf .SetIfNotNil ("\u0054",_adbgf .T );_gbcf .SetIfNotNil ("\u0054\u0055",_adbgf .TU );_gbcf .SetIfNotNil ("\u0054\u004d",_adbgf .TM );_gbcf .SetIfNotNil ("\u0046\u0066",_adbgf .Ff );_gbcf .SetIfNotNil ("\u0056",_adbgf .V );_gbcf .SetIfNotNil ("\u0044\u0056",_adbgf .DV );
_gbcf .SetIfNotNil ("\u0041\u0041",_adbgf .AA );if _adbgf .VariableText !=nil {_gbcf .SetIfNotNil ("\u0044\u0041",_adbgf .VariableText .DA );_gbcf .SetIfNotNil ("\u0051",_adbgf .VariableText .Q );_gbcf .SetIfNotNil ("\u0044\u0053",_adbgf .VariableText .DS );
_gbcf .SetIfNotNil ("\u0052\u0056",_adbgf .VariableText .RV );};return _bega ;};func (_gbdbg *pdfFontType0 )subsetRegistered ()error {_gfde ,_aecbe :=_gbdbg .DescendantFont ._efcd .(*pdfCIDFontType2 );if !_aecbe {_bb .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gbdbg .DescendantFont );
return nil ;};if _gfde ==nil {return nil ;};if _gfde ._eaega ==nil {_bb .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gbdbg ._bdfgf ==nil {_bb .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_facd ,_aecbe :=_bbgb .GetStream (_gfde ._eaega .FontFile2 );if !_aecbe {_bb .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fd .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_aebb ,_cccee :=_bbgb .DecodeStream (_facd );if _cccee !=nil {_bb .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cccee );
return _cccee ;};_baafg ,_cccee :=_egg .Parse (_gag .NewReader (_aebb ));if _cccee !=nil {_bb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_facd .Stream ));
return _cccee ;};var _gdecb []rune ;var _aegge *_egg .Font ;switch _ecdgf :=_gbdbg ._bdfgf .(type ){case *_gcc .TrueTypeFontEncoder :_gdecb =_ecdgf .RegisteredRunes ();_aegge ,_cccee =_baafg .SubsetKeepRunes (_gdecb );if _cccee !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccee );
return _cccee ;};_ecdgf .SubsetRegistered ();case *_gcc .IdentityEncoder :_gdecb =_ecdgf .RegisteredRunes ();_cefca :=make ([]_egg .GlyphIndex ,len (_gdecb ));for _cabe ,_befc :=range _gdecb {_cefca [_cabe ]=_egg .GlyphIndex (_befc );};_aegge ,_cccee =_baafg .SubsetKeepIndices (_cefca );
if _cccee !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccee );return _cccee ;};case _gcc .SimpleEncoder :_ccabd :=_ecdgf .Charcodes ();for _ ,_debbg :=range _ccabd {_bgfcbb ,_fdded :=_ecdgf .CharcodeToRune (_debbg );if !_fdded {_bb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_debbg );
continue ;};_gdecb =append (_gdecb ,_bgfcbb );};default:return _d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gbdbg ._bdfgf );
};var _aeacf _gag .Buffer ;_cccee =_aegge .Write (&_aeacf );if _cccee !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccee );return _cccee ;};if _gbdbg ._aafb !=nil {_gcbdb :=make (map[_afg .CharCode ]rune ,len (_gdecb ));for _ ,_fcac :=range _gdecb {_ccgb ,_bgacf :=_gbdbg ._bdfgf .RuneToCharcode (_fcac );
if !_bgacf {continue ;};_gcbdb [_afg .CharCode (_ccgb )]=_fcac ;};_gbdbg ._aafb =_afg .NewToUnicodeCMap (_gcbdb );};_facd ,_cccee =_bbgb .MakeStream (_aeacf .Bytes (),_bbgb .NewFlateEncoder ());if _cccee !=nil {_bb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cccee );
return _cccee ;};_facd .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bbgb .MakeInteger (int64 (_aeacf .Len ())));if _ggea ,_aggcg :=_bbgb .GetStream (_gfde ._eaega .FontFile2 );_aggcg {*_ggea =*_facd ;}else {_gfde ._eaega .FontFile2 =_facd ;};_dbgfe :=_edfbd ();
if len (_gbdbg ._debfe )> 0{_gbdbg ._debfe =_bgbca (_gbdbg ._debfe ,_dbgfe );};if len (_gfde ._debfe )> 0{_gfde ._debfe =_bgbca (_gfde ._debfe ,_dbgfe );};if len (_gbdbg ._beedc )> 0{_gbdbg ._beedc =_bgbca (_gbdbg ._beedc ,_dbgfe );};if _gfde ._eaega !=nil {_fdbfd ,_gdefb :=_bbgb .GetName (_gfde ._eaega .FontName );
if _gdefb &&len (_fdbfd .String ())> 0{_abbce :=_bgbca (_fdbfd .String (),_dbgfe );_gfde ._eaega .FontName =_bbgb .MakeName (_abbce );};};return nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// Items returns all children outline items.
func (_gbfg *OutlineItem )Items ()[]*OutlineItem {return _gbfg .Entries };

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_dcbb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// GetContentStream returns the XObject Form's content stream.
func (_babg *XObjectForm )GetContentStream ()([]byte ,error ){_dcbfa ,_ggaccc :=_bbgb .DecodeStream (_babg ._ddad );if _ggaccc !=nil {return nil ,_ggaccc ;};return _dcbfa ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_bcg :=PdfColorDeviceGray (grayVal );return &_bcg ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bfac :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_bfac .N =N ;return _bfac ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_cgac *PdfAppender )WriteToFile (outputPath string )error {_dgga ,_eega :=_gaa .Create (outputPath );if _eega !=nil {return _eega ;};defer _dgga .Close ();return _cgac .Write (_dgga );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bbgb .PdfObject )(_bbgb .PdfObjectName ,error ){var _gafca *_bbgb .PdfObjectName ;var _cefc *_bbgb .PdfObjectArray ;if _cgdd ,_dadg :=obj .(*_bbgb .PdfIndirectObject );_dadg {if _eeced ,_fccf :=_cgdd .PdfObject .(*_bbgb .PdfObjectArray );
_fccf {_cefc =_eeced ;}else if _egdg ,_fcee :=_cgdd .PdfObject .(*_bbgb .PdfObjectName );_fcee {_gafca =_egdg ;};}else if _cbg ,_dgdg :=obj .(*_bbgb .PdfObjectArray );_dgdg {_cefc =_cbg ;}else if _aebgfe ,_dfgg :=obj .(*_bbgb .PdfObjectName );_dfgg {_gafca =_aebgfe ;
};if _gafca !=nil {switch *_gafca {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gafca ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gafca ,nil ;
};};if _cefc !=nil &&_cefc .Len ()> 0{if _bbee ,_gefg :=_cefc .Get (0).(*_bbgb .PdfObjectName );_gefg {switch *_bbee {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cefc .Len ()==1{return *_bbee ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bbee ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bbee ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bbee ,nil ;};};};return "",nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bbgb .PdfObjectInteger ;BitsPerComponent *_bbgb .PdfObjectInteger ;VerticesPerRow *_bbgb .PdfObjectInteger ;Decode *_bbgb .PdfObjectArray ;Function []PdfFunction ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_afcdd :=NewPdfAnnotation ();_cca :=&PdfAnnotationStrikeOut {};_cca .PdfAnnotation =_afcdd ;_cca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afcdd .SetContext (_cca );return _cca ;};

// ToInteger convert to an integer format.
func (_decc *PdfColorLab )ToInteger (bits int )[3]uint32 {_cfee :=_ec .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cfee *_decc .L ()),uint32 (_cfee *_decc .A ()),uint32 (_cfee *_decc .B ())};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cefab *PdfShadingType7 )ToPdfObject ()_bbgb .PdfObject {_cefab .PdfShading .ToPdfObject ();_eacca ,_dbace :=_cefab .getShadingDict ();if _dbace !=nil {_bb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cefab .BitsPerCoordinate !=nil {_eacca .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cefab .BitsPerCoordinate );};if _cefab .BitsPerComponent !=nil {_eacca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cefab .BitsPerComponent );
};if _cefab .BitsPerFlag !=nil {_eacca .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cefab .BitsPerFlag );};if _cefab .Decode !=nil {_eacca .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cefab .Decode );};if _cefab .Function !=nil {if len (_cefab .Function )==1{_eacca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cefab .Function [0].ToPdfObject ());
}else {_effac :=_bbgb .MakeArray ();for _ ,_dbfag :=range _cefab .Function {_effac .Append (_dbfag .ToPdfObject ());};_eacca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_effac );};};return _cefab ._bfgebd ;};func _ccgef (_ffgbc _bbgb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_gdbb :=NewPdfColorspaceSpecialIndexed ();
if _ggebg ,_bgab :=_ffgbc .(*_bbgb .PdfIndirectObject );_bgab {_gdbb ._gddf =_ggebg ;};_ffgbc =_bbgb .TraceToDirectObject (_ffgbc );_agea ,_agcg :=_ffgbc .(*_bbgb .PdfObjectArray );if !_agcg {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _agea .Len ()!=4{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ffgbc =_agea .Get (0);
_fafa ,_agcg :=_ffgbc .(*_bbgb .PdfObjectName );if !_agcg {return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fafa !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_ffgbc =_agea .Get (1);_accbg ,_afbag :=DetermineColorspaceNameFromPdfObject (_ffgbc );if _afbag !=nil {return nil ,_afbag ;};if _accbg =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_accbg =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bb .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_accbg );
return nil ,_dfgbe ;};_caac ,_afbag :=NewPdfColorspaceFromPdfObject (_ffgbc );if _afbag !=nil {return nil ,_afbag ;};_gdbb .Base =_caac ;_ffgbc =_agea .Get (2);_dgaf ,_afbag :=_bbgb .GetNumberAsInt64 (_ffgbc );if _afbag !=nil {return nil ,_afbag ;};if _dgaf > 255{return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_gdbb .HiVal =int (_dgaf );_ffgbc =_agea .Get (3);_gdbb .Lookup =_ffgbc ;_ffgbc =_bbgb .TraceToDirectObject (_ffgbc );var _gfgbe []byte ;if _ceddc ,_febf :=_ffgbc .(*_bbgb .PdfObjectString );_febf {_gfgbe =_ceddc .Bytes ();_bb .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gfgbe );
}else if _bbae ,_cgcbd :=_ffgbc .(*_bbgb .PdfObjectStream );_cgcbd {_bb .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_ffgbc .String ());_bb .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_bbae .Stream ),_bbae .Stream );
_dfda ,_gfdg :=_bbgb .DecodeStream (_bbae );if _gfdg !=nil {return nil ,_gfdg ;};_bb .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_dfda ),_dfda );_gfgbe =_dfda ;}else {_bb .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ffgbc );
return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gfgbe )< _gdbb .Base .GetNumComponents ()*(_gdbb .HiVal +1){_bb .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_bb .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gfgbe ),_gdbb .Base .GetNumComponents (),_gdbb .HiVal );
}else {_gfgbe =_gfgbe [:_gdbb .Base .GetNumComponents ()*(_gdbb .HiVal +1)];};_gdbb ._baac =_gfgbe ;return _gdbb ,nil ;};func _gcaa (_gecf *_bbgb .PdfObjectDictionary )(*PdfFieldText ,error ){_abea :=&PdfFieldText {};_abea .DA ,_ =_bbgb .GetString (_gecf .Get ("\u0044\u0041"));
_abea .Q ,_ =_bbgb .GetInt (_gecf .Get ("\u0051"));_abea .DS ,_ =_bbgb .GetString (_gecf .Get ("\u0044\u0053"));_abea .RV =_gecf .Get ("\u0052\u0056");_abea .MaxLen ,_ =_bbgb .GetInt (_gecf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _abea ,nil ;
};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_fcbd *LTV )EnableByName (name string ,extraCerts []*_fc .Certificate )error {_ddae :=_fcbd ._aefab ._cgeda .AcroForm ;for _ ,_eada :=range _ddae .AllFields (){_edagad ,_ :=_eada .GetContext ().(*PdfFieldSignature );if _edagad ==nil {continue ;};
if _degb :=_edagad .PartialName ();_degb !=name {continue ;};return _fcbd .Enable (_edagad .V ,extraCerts );};return nil ;};

// SetAction sets the PDF action for the annotation link.
func (_fdcc *PdfAnnotationLink )SetAction (action *PdfAction ){_fdcc ._gbd =action ;if action ==nil {_fdcc .A =nil ;};};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gdgf []byte )(_dcgeeg int ,_cebed error );};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_dabcf *PdfPageResources )AddExtGState (gsName _bbgb .PdfObjectName ,gsDict _bbgb .PdfObject )error {if _dabcf .ExtGState ==nil {_dabcf .ExtGState =_bbgb .MakeDict ();};_adaag :=_dabcf .ExtGState ;_aeeff ,_ccbbf :=_bbgb .TraceToDirectObject (_adaag ).(*_bbgb .PdfObjectDictionary );
if !_ccbbf {_bb .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_adaag ,_bbgb .TraceToDirectObject (_adaag ));
return _bbgb .ErrTypeError ;};_aeeff .Set (gsName ,gsDict );return nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bbgb .PdfObjectInteger ;BitsPerComponent *_bbgb .PdfObjectInteger ;BitsPerFlag *_bbgb .PdfObjectInteger ;Decode *_bbgb .PdfObjectArray ;Function []PdfFunction ;};type modelManager struct{_gfebc map[PdfModel ]_bbgb .PdfObject ;
_abbge map[_bbgb .PdfObject ]PdfModel ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_edefb *PdfOutlineTreeNode )GetContainingPdfObject ()_bbgb .PdfObject {return _edefb .GetContext ().GetContainingPdfObject ();};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ecae *PdfAnnotation )ToPdfObject ()_bbgb .PdfObject {_fgfa :=_ecae ._bce ;_feea :=_fgfa .PdfObject .(*_bbgb .PdfObjectDictionary );_feea .Clear ();_feea .Set ("\u0054\u0079\u0070\u0065",_bbgb .MakeName ("\u0041\u006e\u006eo\u0074"));_feea .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ecae .Rect );
_feea .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ecae .Contents );_feea .SetIfNotNil ("\u0050",_ecae .P );_feea .SetIfNotNil ("\u004e\u004d",_ecae .NM );_feea .SetIfNotNil ("\u004d",_ecae .M );_feea .SetIfNotNil ("\u0046",_ecae .F );
_feea .SetIfNotNil ("\u0041\u0050",_ecae .AP );_feea .SetIfNotNil ("\u0041\u0053",_ecae .AS );_feea .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ecae .Border );_feea .SetIfNotNil ("\u0043",_ecae .C );_feea .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ecae .StructParent );
_feea .SetIfNotNil ("\u004f\u0043",_ecae .OC );return _fgfa ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bbgb .PdfObject ;LE _bbgb .PdfObject ;BS _bbgb .PdfObject ;IC _bbgb .PdfObject ;BE _bbgb .PdfObject ;IT _bbgb .PdfObject ;Measure _bbgb .PdfObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_egbee *_bbgb .PdfIndirectObject ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_da :=NewPdfAction ();_de :=&PdfActionNamed {};_de .PdfAction =_da ;_da .SetContext (_de );return _de ;};func (_bbgd *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};func _beec (_agdce string )(string ,error ){var _ddfac _gag .Buffer ;_ddfac .WriteString (_agdce );_cbebf :=make ([]byte ,8+16);_cffac :=_a .Now ().UTC ().UnixNano ();_eg .BigEndian .PutUint64 (_cbebf ,uint64 (_cffac ));_ ,_ebgcf :=_dc .Read (_cbebf [8:]);
if _ebgcf !=nil {return "",_ebgcf ;};_ddfac .WriteString (_ed .EncodeToString (_cbebf ));return _ddfac .String (),nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_cfeda :=appender .Reader .DSS ;if _cfeda ==nil {_cfeda =NewDSS ();};if _cedcc :=_cfeda .generateHashMaps ();_cedcc !=nil {return nil ,_cedcc ;};return &LTV {CertClient :_ac .NewCertClient (),OCSPClient :_ac .NewOCSPClient (),CRLClient :_ac .NewCRLClient (),SkipExisting :true ,_aefab :appender ,_feec :_cfeda },nil ;
};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bbgb .PdfObject ;Sy _bbgb .PdfObject ;};func (_edeea *PdfWriter )seekByName (_edfcg _bbgb .PdfObject ,_dcbcg []string ,_ffged string )([]_bbgb .PdfObject ,error ){_bb .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_edfcg );
var _dcdef []_bbgb .PdfObject ;if _fggfd ,_deaa :=_edfcg .(*_bbgb .PdfIndirectObject );_deaa {return _edeea .seekByName (_fggfd .PdfObject ,_dcbcg ,_ffged );};if _agbee ,_eafcf :=_edfcg .(*_bbgb .PdfObjectStream );_eafcf {return _edeea .seekByName (_agbee .PdfObjectDictionary ,_dcbcg ,_ffged );
};if _effad ,_ddgcg :=_edfcg .(*_bbgb .PdfObjectDictionary );_ddgcg {_bb .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bddge :=range _effad .Keys (){_bfeaf :=_effad .Get (_bddge );if string (_bddge )==_ffged {_dcdef =append (_dcdef ,_bfeaf );};for _ ,_cdba :=range _dcbcg {if string (_bddge )==_cdba {_bb .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_cdba );
_ccebf ,_fggbc :=_edeea .seekByName (_bfeaf ,_dcbcg ,_ffged );if _fggbc !=nil {return _dcdef ,_fggbc ;};_dcdef =append (_dcdef ,_ccebf ...);break ;};};};return _dcdef ,nil ;};return _dcdef ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_acacd int ,_dbgg *PdfPage )error ;func (_fbdc *PdfWriter )setWriter (_ebbfcf _bf .Writer ){_fbdc ._cfbdg =_fbdc ._cddga ;_fbdc ._gacdg =_ga .NewWriter (_ebbfcf );};func (_cbddf *PdfReader )resolveReference (_cfbbc *_bbgb .PdfObjectReference )(_bbgb .PdfObject ,bool ,error ){_dcec ,_cgee :=_cbddf ._abceg .ObjCache [int (_cfbbc .ObjectNumber )];
if !_cgee {_bb .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cfbbc );_gaged ,_afea :=_cbddf ._abceg .LookupByReference (*_cfbbc );if _afea !=nil {return nil ,false ,_afea ;};_cbddf ._abceg .ObjCache [int (_cfbbc .ObjectNumber )]=_gaged ;
return _gaged ,false ,nil ;};return _dcec ,true ,nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_gcc .SimpleEncoder ,error ){_bdbb ,_fbeab :=_baecf (basefont );if _fbeab !=nil {return nil ,nil ,_fbeab ;};_cdbg ,_feca :=_bdbb .Encoder ().(_gcc .SimpleEncoder );
if !_feca {return nil ,nil ,_d .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bdbb .Encoder ());
};_cfbb :=make (map[rune ]_gcc .GlyphName );for _ceeb :=range alphabet {if _ ,_gbgff :=_cdbg .RuneToCharcode (_ceeb );!_gbgff {_ ,_dbgf :=_bdbb ._eeff .Read (_ceeb );if !_dbgf {_bb .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ceeb ,_ceeb );
continue ;};_bgbcb ,_dbgf :=_gcc .RuneToGlyph (_ceeb );if !_dbgf {_bb .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ceeb ,_ceeb );continue ;};if len (_cfbb )>=255{return nil ,nil ,_fd .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_cfbb [_ceeb ]=_bgbcb ;};};var (_aecf []_gcc .CharCode ;_bffgb []_gcc .CharCode ;);for _ffgff :=_gcc .CharCode (1);_ffgff <=0xff;_ffgff ++{_gbfc ,_bdcba :=_cdbg .CharcodeToRune (_ffgff );if !_bdcba {_aecf =append (_aecf ,_ffgff );continue ;};if _ ,_bdcba =alphabet [_gbfc ];
!_bdcba {_bffgb =append (_bffgb ,_ffgff );};};_fdde :=append (_aecf ,_bffgb ...);if len (_fdde )< len (_cfbb ){return nil ,nil ,_d .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_cfbb ),len (_fdde ));
};_cdcc :=make ([]rune ,0,len (_cfbb ));for _cebe :=range _cfbb {_cdcc =append (_cdcc ,_cebe );};_egc .Slice (_cdcc ,func (_bdgbf ,_egfg int )bool {return _cdcc [_bdgbf ]< _cdcc [_egfg ]});_gfgfg :=make (map[_gcc .CharCode ]_gcc .GlyphName ,len (_cdcc ));
for _ ,_fbca :=range _cdcc {_dgcfa :=_fdde [0];_fdde =_fdde [1:];_gfgfg [_dgcfa ]=_cfbb [_fbca ];};_cdbg =_gcc .ApplyDifferences (_cdbg ,_gfgfg );_bdbb .SetEncoder (_cdbg );return &PdfFont {_efcd :&_bdbb },_cdbg ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bbgb .PdfObjectStream ;OCSP []*_bbgb .PdfObjectStream ;CRL []*_bbgb .PdfObjectStream ;TU *_bbgb .PdfObjectString ;TS *_bbgb .PdfObjectString ;};func _gedc (_bdcgb *_bbgb .PdfObjectDictionary )bool {for _ ,_gdffad :=range _bdcgb .Keys (){if _ ,_afcdc :=_dggd [_gdffad .String ()];
_afcdc {return true ;};};return false ;};func (_gdbec *PdfWriter )setDocInfo (_acdea _bbgb .PdfObject ){if _gdbec .hasObject (_gdbec ._bgfbb ){delete (_gdbec ._bfded ,_gdbec ._bgfbb );delete (_gdbec ._eebd ,_gdbec ._bgfbb );for _bgcde ,_efdea :=range _gdbec ._cagcad {if _efdea ==_gdbec ._bgfbb {copy (_gdbec ._cagcad [_bgcde :],_gdbec ._cagcad [_bgcde +1:]);
_gdbec ._cagcad [len (_gdbec ._cagcad )-1]=nil ;_gdbec ._cagcad =_gdbec ._cagcad [:len (_gdbec ._cagcad )-1];break ;};};};_ggfga :=_bbgb .PdfIndirectObject {};_ggfga .PdfObject =_acdea ;_gdbec ._bgfbb =&_ggfga ;_gdbec .addObject (&_ggfga );};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gf :=NewPdfAction ();_ede :=&PdfActionHide {};_ede .PdfAction =_gf ;_gf .SetContext (_ede );return _ede ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_affd *PdfFont )CharcodesToStrings (charcodes []_gcc .CharCode )([]string ,int ,int ){_ecdd :=_affd .baseFields ();_ageea :=make ([]string ,0,len (charcodes ));_gdgde :=0;_dbdg :=_affd .Encoder ();if _dbdg !=nil {switch _ebfed :=_dbdg .(type ){case _gcc .SimpleEncoder :_dgce :=_ebfed .BaseName ();
if _ ,_gcace :=_bbbg [_dgce ];_gcace {for _ ,_abece :=range charcodes {if _eefc ,_gecff :=_dbdg .CharcodeToRune (_abece );_gecff {_ageea =append (_ageea ,string (_eefc ));}else {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_abece ,charcodes ,_ecdd .isCIDFont (),_affd ,_dbdg );
_gdgde ++;_ageea =append (_ageea ,_afg .MissingCodeString );};};return _ageea ,len (_ageea ),_gdgde ;};};};for _ ,_fefgb :=range charcodes {if _ecdd ._aafb !=nil {if _adbca ,_adcdb :=_ecdd ._aafb .CharcodeToUnicode (_afg .CharCode (_fefgb ));_adcdb {_ageea =append (_ageea ,_adbca );
continue ;};};if _dbdg !=nil {if _feab ,_egaae :=_dbdg .CharcodeToRune (_fefgb );_egaae {_ageea =append (_ageea ,string (_feab ));continue ;};};_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fefgb ,charcodes ,_ecdd .isCIDFont (),_affd ,_dbdg );
_gdgde ++;_ageea =append (_ageea ,_afg .MissingCodeString );};if _gdgde !=0{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_gdgde ,_affd );
};return _ageea ,len (_ageea ),_gdgde ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fabb *PdfColorspaceSpecialIndexed )ToPdfObject ()_bbgb .PdfObject {_gfgba :=_bbgb .MakeArray (_bbgb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_gfgba .Append (_fabb .Base .ToPdfObject ());_gfgba .Append (_bbgb .MakeInteger (int64 (_fabb .HiVal )));
_gfgba .Append (_fabb .Lookup );if _fabb ._gddf !=nil {_fabb ._gddf .PdfObject =_gfgba ;return _fabb ._gddf ;};return _gfgba ;};

// L returns the value of the L component of the color.
func (_bfdd *PdfColorLab )L ()float64 {return _bfdd [0]};func (_cgebe *PdfFunctionType0 )processSamples ()error {_eace :=_bbg .ResampleBytes (_cgebe ._faff ,_cgebe .BitsPerSample );_cgebe ._bdca =_eace ;return nil ;};