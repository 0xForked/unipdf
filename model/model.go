//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ec "bufio";_bb "bytes";_f "crypto/rand";_bd "crypto/sha1";_b "crypto/x509";_gg "encoding/binary";_g "encoding/hex";_fff "errors";_c "fmt";_dcg "github.com/unidoc/pkcs7";_fa "github.com/unidoc/unipdf/v3/common";_bg "github.com/unidoc/unipdf/v3/core";
_ffb "github.com/unidoc/unipdf/v3/core/security";_fb "github.com/unidoc/unipdf/v3/core/security/crypt";_bbg "github.com/unidoc/unipdf/v3/internal/cmap";_ggc "github.com/unidoc/unipdf/v3/internal/imageutil";_ecb "github.com/unidoc/unipdf/v3/internal/license";
_dd "github.com/unidoc/unipdf/v3/internal/sampling";_be "github.com/unidoc/unipdf/v3/internal/textencoding";_gf "github.com/unidoc/unipdf/v3/internal/transform";_adb "github.com/unidoc/unipdf/v3/model/internal/fonts";_cg "github.com/unidoc/unipdf/v3/model/sigutil";
_ffg "github.com/unidoc/unipdf/v3/ps";_ba "github.com/unidoc/unitype";_eb "golang.org/x/xerrors";_gc "image";_ge "image/color";_ "image/gif";_ "image/png";_ab "io";_df "io/ioutil";_dc "math";_ga "math/rand";_ee "os";_aa "regexp";_ad "sort";_af "strconv";
_ff "strings";_cc "sync";_ecg "time";_a "unicode";_cf "unicode/utf8";);

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cbege *PdfShadingPattern )ToPdfObject ()_bg .PdfObject {_cbege .PdfPattern .ToPdfObject ();_cbaa :=_cbege .getDict ();if _cbege .Shading !=nil {_cbaa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cbege .Shading .ToPdfObject ());};if _cbege .Matrix !=nil {_cbaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cbege .Matrix );
};if _cbege .ExtGState !=nil {_cbaa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cbege .ExtGState );};return _cbege ._ededfe ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_dgfcc *PdfWriter )SetRotation (rotate int64 )error {_cgdbd ,_bcfeg :=_bg .GetDict (_dgfcc ._bbadca );if !_bcfeg {return ErrTypeCheck ;};_cgdbd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bg .MakeInteger (rotate ));return nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_cegfg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// WriteToFile writes the Appender output to file specified by path.
func (_eec *PdfAppender )WriteToFile (outputPath string )error {_cadg ,_ebda :=_ee .Create (outputPath );if _ebda !=nil {return _ebda ;};defer _cadg .Close ();return _eec .Write (_cadg );};var _ _bg .PdfObject =&pdfSignDictionary {};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fdceag *PdfPageResources )HasXObjectByName (keyName _bg .PdfObjectName )bool {_ebddd ,_ :=_fdceag .GetXObjectByName (keyName );return _ebddd !=nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_abgce *PdfWriter )SetDocInfo (info *PdfInfo ){if _abgce .hasObject (_abgce ._cedg ){delete (_abgce ._eccf ,_abgce ._cedg );delete (_abgce ._dcdefd ,_abgce ._cedg );for _gebfg ,_daadf :=range _abgce ._fdeeb {if _daadf ==_abgce ._cedg {copy (_abgce ._fdeeb [_gebfg :],_abgce ._fdeeb [_gebfg +1:]);
_abgce ._fdeeb [len (_abgce ._fdeeb )-1]=nil ;_abgce ._fdeeb =_abgce ._fdeeb [:len (_abgce ._fdeeb )-1];break ;};};};_ddbgb :=_bg .PdfIndirectObject {};_ddbgb .PdfObject =info .ToPdfObject ();_abgce ._cedg =&_ddbgb ;_abgce .addObject (&_ddbgb );};func (_daabb *pdfFontType0 )bytesToCharcodes (_cagb []byte )([]_be .CharCode ,bool ){if _daabb ._fgccc ==nil {return nil ,false ;
};_gfee ,_fcgaf :=_daabb ._fgccc .BytesToCharcodes (_cagb );if !_fcgaf {return nil ,false ;};_fddaf :=make ([]_be .CharCode ,len (_gfee ));for _gcedc ,_bbedg :=range _gfee {_fddaf [_gcedc ]=_be .CharCode (_bbedg );};return _fddaf ,true ;};var ImageHandling ImageHandler =DefaultImageHandler {};


// Evaluate runs the function on the passed in slice and returns the results.
func (_fecggg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fecggg .NumInputs {_fa .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fecggg ._gfaebg ==nil {_feebf :=_fecggg .processSamples ();if _feebf !=nil {return nil ,_feebf ;};};_badfg :=_fecggg .Encode ;
if _badfg ==nil {_badfg =[]float64 {};for _aega :=0;_aega < len (_fecggg .Size );_aega ++{_badfg =append (_badfg ,0);_badfg =append (_badfg ,float64 (_fecggg .Size [_aega ]-1));};};_dfca :=_fecggg .Decode ;if _dfca ==nil {_dfca =_fecggg .Range ;};_bege :=make ([]int ,len (x ));
for _gcec :=0;_gcec < len (x );_gcec ++{_deaa :=x [_gcec ];_gfdgg :=_dc .Min (_dc .Max (_deaa ,_fecggg .Domain [2*_gcec ]),_fecggg .Domain [2*_gcec +1]);_dbef :=_ggc .LinearInterpolate (_gfdgg ,_fecggg .Domain [2*_gcec ],_fecggg .Domain [2*_gcec +1],_badfg [2*_gcec ],_badfg [2*_gcec +1]);
_fbfdd :=_dc .Min (_dc .Max (_dbef ,0),float64 (_fecggg .Size [_gcec ]-1));_cgbf :=int (_dc .Floor (_fbfdd +0.5));if _cgbf < 0{_cgbf =0;}else if _cgbf > _fecggg .Size [_gcec ]{_cgbf =_fecggg .Size [_gcec ]-1;};_bege [_gcec ]=_cgbf ;};_bafe :=_bege [0];
for _faebc :=1;_faebc < _fecggg .NumInputs ;_faebc ++{_addg :=_bege [_faebc ];for _dcffa :=0;_dcffa < _faebc ;_dcffa ++{_addg *=_fecggg .Size [_dcffa ];};_bafe +=_addg ;};_bafe *=_fecggg .NumOutputs ;var _bdfc []float64 ;for _cbedc :=0;_cbedc < _fecggg .NumOutputs ;
_cbedc ++{_gece :=_bafe +_cbedc ;if _gece >=len (_fecggg ._gfaebg ){_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_efefb :=_fecggg ._gfaebg [_gece ];_aegc :=_ggc .LinearInterpolate (float64 (_efefb ),0,_dc .Pow (2,float64 (_fecggg .BitsPerSample )),_dfca [2*_cbedc ],_dfca [2*_cbedc +1]);_gdece :=_dc .Min (_dc .Max (_aegc ,_fecggg .Range [2*_cbedc ]),_fecggg .Range [2*_cbedc +1]);
_bdfc =append (_bdfc ,_gdece );};return _bdfc ,nil ;};func (_agde *LTV )buildCertChain (_gbfcef ,_gdfad []*_b .Certificate )([]*_b .Certificate ,map[string ]*_b .Certificate ,error ){_cbdff :=map[string ]*_b .Certificate {};for _ ,_fdab :=range _gbfcef {_cbdff [_fdab .Subject .CommonName ]=_fdab ;
};_dgeba :=_gbfcef ;for _ ,_dcadff :=range _gdfad {_dbcfb :=_dcadff .Subject .CommonName ;if _ ,_gfbgf :=_cbdff [_dbcfb ];_gfbgf {continue ;};_cbdff [_dbcfb ]=_dcadff ;_dgeba =append (_dgeba ,_dcadff );};if len (_dgeba )==0{return nil ,nil ,ErrSignNoCertificates ;
};var _aeed error ;for _agabbc :=_dgeba [0];_agabbc !=nil &&!_agde .CertClient .IsCA (_agabbc );{_ffdff ,_agac :=_cbdff [_agabbc .Issuer .CommonName ];if !_agac {if _ffdff ,_aeed =_agde .CertClient .GetIssuer (_agabbc );_aeed !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_aeed );
break ;};_cbdff [_agabbc .Issuer .CommonName ]=_ffdff ;_dgeba =append (_dgeba ,_ffdff );};_agabbc =_ffdff ;};return _dgeba ,_cbdff ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_decdd *pdfFontSimple )ToPdfObject ()_bg .PdfObject {if _decdd ._dbdbac ==nil {_decdd ._dbdbac =&_bg .PdfIndirectObject {};};_bbadf :=_decdd .baseFields ().asPdfObjectDictionary ("");_decdd ._dbdbac .PdfObject =_bbadf ;if _decdd .FirstChar !=nil {_bbadf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_decdd .FirstChar );
};if _decdd .LastChar !=nil {_bbadf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_decdd .LastChar );};if _decdd .Widths !=nil {_bbadf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_decdd .Widths );};if _decdd .Encoding !=nil {_bbadf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_decdd .Encoding );
}else if _decdd ._cbdd !=nil {_bbff :=_decdd ._cbdd .ToPdfObject ();if _bbff !=nil {_bbadf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbff );};};return _decdd ._dbdbac ;};func (_bccf *LTV )generateVRIKey (_dcadf *PdfSignature )(string ,error ){_gbddc ,_fcec :=_ecbff (_dcadf .Contents .Bytes ());
if _fcec !=nil {return "",_fcec ;};return _ff .ToUpper (_g .EncodeToString (_gbddc )),nil ;};

// Fill populates `form` with values provided by `provider`.
func (_fgegb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fgegb .fill (provider ,nil )};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_egae *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_egeda *PdfPattern )getDict ()*_bg .PdfObjectDictionary {if _ffgfg ,_effed :=_egeda ._ededfe .(*_bg .PdfIndirectObject );_effed {_bfgba ,_aaff :=_ffgfg .PdfObject .(*_bg .PdfObjectDictionary );
if !_aaff {return nil ;};return _bfgba ;}else if _bfgge ,_ecdce :=_egeda ._ededfe .(*_bg .PdfObjectStream );_ecdce {return _bfgge .PdfObjectDictionary ;}else {_fa .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_egeda ._ededfe );
return nil ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbde *PdfShadingType1 )ToPdfObject ()_bg .PdfObject {_gbde .PdfShading .ToPdfObject ();_eefd ,_cbcbg :=_gbde .getShadingDict ();if _cbcbg !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gbde .Domain !=nil {_eefd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbde .Domain );};if _gbde .Matrix !=nil {_eefd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gbde .Matrix );};if _gbde .Function !=nil {if len (_gbde .Function )==1{_eefd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbde .Function [0].ToPdfObject ());
}else {_egbfd :=_bg .MakeArray ();for _ ,_cfbe :=range _gbde .Function {_egbfd .Append (_cfbe .ToPdfObject ());};_eefd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egbfd );};};return _gbde ._cabb ;};func (_dgfdf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ggbeg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// String returns a string representation of the field.
func (_fbdbb *PdfField )String ()string {if _ebfce ,_adead :=_fbdbb .ToPdfObject ().(*_bg .PdfIndirectObject );_adead {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fbdbb ._ccgd ,_ebfce .PdfObject .String ());};return "";};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ddee :=NewPdfAnnotation ();_gcd :=&PdfAnnotationInk {};_gcd .PdfAnnotation =_ddee ;_gcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddee .SetContext (_gcd );return _gcd ;};

// ToPdfObject implements interface PdfModel.
func (_adf *PdfActionJavaScript )ToPdfObject ()_bg .PdfObject {_adf .PdfAction .ToPdfObject ();_dbb :=_adf ._gfd ;_ccd :=_dbb .PdfObject .(*_bg .PdfObjectDictionary );_ccd .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeJavaScript )));_ccd .SetIfNotNil ("\u004a\u0053",_adf .JS );
return _dbb ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bfdaa *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bfdaa .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gefb []_bg .PdfObject )([]_bg .PdfObject ,error );};func (_adaa *PdfReader )newPdfAnnotationScreenFromDict (_dad *_bg .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ebc :=PdfAnnotationScreen {};_ebc .T =_dad .Get ("\u0054");
_ebc .MK =_dad .Get ("\u004d\u004b");_ebc .A =_dad .Get ("\u0041");_ebc .AA =_dad .Get ("\u0041\u0041");return &_ebc ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bg .PdfObject ;Name _bg .PdfObject ;State _bg .PdfObject ;StateModel _bg .PdfObject ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gba :=PdfColorDeviceGray (grayVal );return &_gba ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ecfde *PdfColorCalGray )GetNumComponents ()int {return 1};

// CustomKeys returns all custom info keys as list.
func (_fbfca *PdfInfo )CustomKeys ()[]string {if _fbfca ._eeac ==nil {return nil ;};_agbc :=make ([]string ,len (_fbfca ._eeac .Keys ()));for _ ,_ababc :=range _fbfca ._eeac .Keys (){_agbc =append (_agbc ,_ababc .String ());};return _agbc ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ggga :=NewPdfAnnotation ();_ddca :=&PdfAnnotationCircle {};_ddca .PdfAnnotation =_ggga ;_ddca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggga .SetContext (_ddca );return _ddca ;};func _bbace (_adgaa *_ggc .ImageBase )(_fegec Image ){_fegec .Width =int64 (_adgaa .Width );
_fegec .Height =int64 (_adgaa .Height );_fegec .BitsPerComponent =int64 (_adgaa .BitsPerComponent );_fegec .ColorComponents =_adgaa .ColorComponents ;_fegec .Data =_adgaa .Data ;_fegec ._bcfbf =_adgaa .Decode ;_fegec ._gcfag =_adgaa .Alpha ;return _fegec ;
};func (_dcga *PdfReader )newPdfActionSetOCGStateFromDict (_gbb *_bg .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gbb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gbb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ToPdfObject converts rectangle to a PDF object.
func (_dbgf *PdfRectangle )ToPdfObject ()_bg .PdfObject {return _bg .MakeArray (_bg .MakeFloat (_dbgf .Llx ),_bg .MakeFloat (_dbgf .Lly ),_bg .MakeFloat (_dbgf .Urx ),_bg .MakeFloat (_dbgf .Ury ));};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fefbf *PdfReader )GetIndirectObjectByNumber (number int )(_bg .PdfObject ,error ){_efec ,_bcaba :=_fefbf ._gbgb .LookupByNumber (number );return _efec ,_bcaba ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fcafc pdfFont };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bg .PdfObjectInteger ;BitsPerComponent *_bg .PdfObjectInteger ;VerticesPerRow *_bg .PdfObjectInteger ;Decode *_bg .PdfObjectArray ;Function []PdfFunction ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_fddff *PdfWriter )SetOptimizer (optimizer Optimizer ){_fddff ._cfbef =optimizer };

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fcdcf int64 ;_ecdcd int64 ;_dcagc int64 ;_cacfd int64 ;_fdbfb int64 ;_aggabf int64 ;_adbdf byte ;_bged int64 ;_debc int64 ;};func (_ceebd *PdfReader )loadDSS ()(*DSS ,error ){if _ceebd ._gbgb .GetCrypter ()!=nil &&!_ceebd ._gbgb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bgefd :=_ceebd ._daagd .Get ("\u0044\u0053\u0053");if _bgefd ==nil {return nil ,nil ;};_ccfg ,_ :=_bg .GetIndirect (_bgefd );_bgefd =_bg .TraceToDirectObject (_bgefd );switch _ccgbb :=_bgefd .(type ){case *_bg .PdfObjectNull :return nil ,nil ;case *_bg .PdfObjectDictionary :return _fgac (_ccfg ,_ccgbb );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_bgefd );};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_babbb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_gacf ,_ebgee :=_bg .GetDict (_babbb ._gcff .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_ebgee {_gacf =_bg .MakeDict ();_babbb ._gcff .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_gacf );
};_bceag ,_ebgee :=_bg .GetDict (_gacf .Get (_bg .PdfObjectName (extName )));if !_ebgee {_bceag =_bg .MakeDict ();_gacf .Set (_bg .PdfObjectName (extName ),_bceag );};if _accge ,_ :=_bg .GetNameVal (_bceag .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_accge !=baseVersion {_bceag .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bg .MakeName (baseVersion ));};if _bccfd ,_ :=_bg .GetIntVal (_bceag .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_bccfd !=extLevel {_bceag .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bg .MakeInteger (int64 (extLevel )));};};func _bfbbe (_edgc _bg .PdfObject )(*fontFile ,error ){_fa .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_edgc );
_ebbc :=&fontFile {};_edgc =_bg .TraceToDirectObject (_edgc );_fgcgg ,_fbbe :=_edgc .(*_bg .PdfObjectStream );if !_fbbe {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_edgc );
return nil ,_bg .ErrTypeError ;};_ccbbg :=_fgcgg .PdfObjectDictionary ;_cedb ,_aadf :=_bg .DecodeStream (_fgcgg );if _aadf !=nil {return nil ,_aadf ;};_dcdae ,_fbbe :=_bg .GetNameVal (_ccbbg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fbbe {_ebbc ._effb =_dcdae ;
if _dcdae =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fa .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_ebeag ,_ :=_bg .GetIntVal (_ccbbg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_fbdga ,_ :=_bg .GetIntVal (_ccbbg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ebeag > len (_cedb ){_ebeag =len (_cedb );
};if _ebeag +_fbdga > len (_cedb ){_fbdga =len (_cedb )-_ebeag ;};_eebcg :=_cedb [:_ebeag ];var _bdeca []byte ;if _fbdga > 0{_bdeca =_cedb [_ebeag :_ebeag +_fbdga ];};if _ebeag > 0&&_fbdga > 0{_cfcbg :=_ebbc .loadFromSegments (_eebcg ,_bdeca );if _cfcbg !=nil {return nil ,_cfcbg ;
};};return _ebbc ,nil ;};func (_cfaead *pdfFontSimple )baseFields ()*fontCommon {return &_cfaead .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_dga *PdfAnnotationSquare )ToPdfObject ()_bg .PdfObject {_dga .PdfAnnotation .ToPdfObject ();_eeda :=_dga ._cdcf ;_ccgg :=_eeda .PdfObject .(*_bg .PdfObjectDictionary );if _dga .PdfAnnotationMarkup !=nil {_dga .PdfAnnotationMarkup .appendToPdfDictionary (_ccgg );
};_ccgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ccgg .SetIfNotNil ("\u0042\u0053",_dga .BS );_ccgg .SetIfNotNil ("\u0049\u0043",_dga .IC );_ccgg .SetIfNotNil ("\u0042\u0045",_dga .BE );
_ccgg .SetIfNotNil ("\u0052\u0044",_dga .RD );return _eeda ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffaca *PdfShadingType3 )ToPdfObject ()_bg .PdfObject {_ffaca .PdfShading .ToPdfObject ();_egfga ,_ggeda :=_ffaca .getShadingDict ();if _ggeda !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ffaca .Coords !=nil {_egfga .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ffaca .Coords );};if _ffaca .Domain !=nil {_egfga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffaca .Domain );};if _ffaca .Function !=nil {if len (_ffaca .Function )==1{_egfga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffaca .Function [0].ToPdfObject ());
}else {_ggcae :=_bg .MakeArray ();for _ ,_gfcc :=range _ffaca .Function {_ggcae .Append (_gfcc .ToPdfObject ());};_egfga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggcae );};};if _ffaca .Extend !=nil {_egfga .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ffaca .Extend );
};return _ffaca ._cabb ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_agdeg *PdfPage )ToPdfObject ()_bg .PdfObject {_beabc :=_agdeg ._eecd ;_agdeg .GetPageDict ();return _beabc ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_dag *PdfReader )newPdfActionURIFromDict (_cfb *_bg .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cfb .Get ("\u0055\u0052\u0049"),IsMap :_cfb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_geddg *LTV )EnableAll (extraCerts []*_b .Certificate )error {_agecc :=_geddg ._edefg ._dgfca .AcroForm ;for _ ,_ecfefd :=range _agecc .AllFields (){_cdggg ,_ :=_ecfefd .GetContext ().(*PdfFieldSignature );if _cdggg ==nil {continue ;};_gfdbd :=_cdggg .V ;
if _eede :=_geddg .validateSig (_gfdbd );_eede !=nil {_fa .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_eede );
};if _dbgc :=_geddg .Enable (_gfdbd ,extraCerts );_dbgc !=nil {return _dbgc ;};};return nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gdac *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gdac .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bg .PdfObject ;NewWindow _bg .PdfObject ;};

// ToInteger convert to an integer format.
func (_bdaf *PdfColorLab )ToInteger (bits int )[3]uint32 {_cgaf :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cgaf *_bdaf .L ()),uint32 (_cgaf *_bdaf .A ()),uint32 (_cgaf *_bdaf .B ())};};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bg .StreamEncoder ;FormType _bg .PdfObject ;BBox _bg .PdfObject ;Matrix _bg .PdfObject ;Resources *PdfPageResources ;Group _bg .PdfObject ;Ref _bg .PdfObject ;MetaData _bg .PdfObject ;PieceInfo _bg .PdfObject ;LastModified _bg .PdfObject ;
StructParent _bg .PdfObject ;StructParents _bg .PdfObject ;OPI _bg .PdfObject ;OC _bg .PdfObject ;Name _bg .PdfObject ;

// Stream data.
Stream []byte ;_egfbg *_bg .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_ebff *PdfAnnotationCircle )ToPdfObject ()_bg .PdfObject {_ebff .PdfAnnotation .ToPdfObject ();_bbbg :=_ebff ._cdcf ;_cefc :=_bbbg .PdfObject .(*_bg .PdfObjectDictionary );_ebff .PdfAnnotationMarkup .appendToPdfDictionary (_cefc );_cefc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_cefc .SetIfNotNil ("\u0042\u0053",_ebff .BS );_cefc .SetIfNotNil ("\u0049\u0043",_ebff .IC );_cefc .SetIfNotNil ("\u0042\u0045",_ebff .BE );_cefc .SetIfNotNil ("\u0052\u0044",_ebff .RD );return _bbbg ;};func (_fbf *PdfReader )newPdfAnnotationLineFromDict (_fdgc *_bg .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_ceca :=PdfAnnotationLine {};
_dfda ,_cef :=_fbf .newPdfAnnotationMarkupFromDict (_fdgc );if _cef !=nil {return nil ,_cef ;};_ceca .PdfAnnotationMarkup =_dfda ;_ceca .L =_fdgc .Get ("\u004c");_ceca .BS =_fdgc .Get ("\u0042\u0053");_ceca .LE =_fdgc .Get ("\u004c\u0045");_ceca .IC =_fdgc .Get ("\u0049\u0043");
_ceca .LL =_fdgc .Get ("\u004c\u004c");_ceca .LLE =_fdgc .Get ("\u004c\u004c\u0045");_ceca .Cap =_fdgc .Get ("\u0043\u0061\u0070");_ceca .IT =_fdgc .Get ("\u0049\u0054");_ceca .LLO =_fdgc .Get ("\u004c\u004c\u004f");_ceca .CP =_fdgc .Get ("\u0043\u0050");
_ceca .Measure =_fdgc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_ceca .CO =_fdgc .Get ("\u0043\u004f");return &_ceca ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ceceb *PdfColorspaceDeviceCMYK )ToPdfObject ()_bg .PdfObject {return _bg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func _acbc (_cabfe _bg .PdfObject )(*PdfBorderStyle ,error ){_bce :=&PdfBorderStyle {};_bce ._daga =_cabfe ;
var _bgga *_bg .PdfObjectDictionary ;_cabfe =_bg .TraceToDirectObject (_cabfe );_bgga ,_fada :=_cabfe .(*_bg .PdfObjectDictionary );if !_fada {return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _efgb :=_bgga .Get ("\u0054\u0079\u0070\u0065");
_efgb !=nil {_dcdc ,_dbag :=_efgb .(*_bg .PdfObjectName );if !_dbag {_fa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_efgb );
}else {if *_dcdc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fa .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_dcdc );};};};if _gaa :=_bgga .Get ("\u0057");
_gaa !=nil {_dffd ,_cedc :=_bg .GetNumberAsFloat (_gaa );if _cedc !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cedc );return nil ,_cedc ;};_bce .W =&_dffd ;
};if _aaec :=_bgga .Get ("\u0053");_aaec !=nil {_bgad ,_gaag :=_aaec .(*_bg .PdfObjectName );if !_gaag {return nil ,_fff .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _fcfd BorderStyle ;switch *_bgad {case "\u0053":_fcfd =BorderStyleSolid ;case "\u0044":_fcfd =BorderStyleDashed ;case "\u0042":_fcfd =BorderStyleBeveled ;case "\u0049":_fcfd =BorderStyleInset ;case "\u0055":_fcfd =BorderStyleUnderline ;default:_fa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bgad );
return nil ,_fff .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bce .S =&_fcfd ;};if _efgbc :=_bgga .Get ("\u0044");_efgbc !=nil {_gfef ,_dedg :=_efgbc .(*_bg .PdfObjectArray );
if !_dedg {_fa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_efgbc );return nil ,_fff .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ceaa ,_ecgd :=_gfef .ToIntegerArray ();if _ecgd !=nil {_fa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ecgd );
return nil ,_ecgd ;};_bce .D =&_ceaa ;};return _bce ,nil ;};func (_cffd *XObjectImage )getParamsDict ()*_bg .PdfObjectDictionary {_agdec :=_bg .MakeDict ();_agdec .Set ("\u0057\u0069\u0064t\u0068",_bg .MakeInteger (*_cffd .Width ));_agdec .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bg .MakeInteger (*_cffd .Height ));
_agdec .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bg .MakeInteger (int64 (_cffd .ColorSpace .GetNumComponents ())));_agdec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bg .MakeInteger (*_cffd .BitsPerComponent ));
return _agdec ;};func _beeg (_cddaf *_bg .PdfObjectDictionary )(*PdfFieldChoice ,error ){_bbc :=&PdfFieldChoice {};_bbc .Opt ,_ =_bg .GetArray (_cddaf .Get ("\u004f\u0070\u0074"));_bbc .TI ,_ =_bg .GetInt (_cddaf .Get ("\u0054\u0049"));_bbc .I ,_ =_bg .GetArray (_cddaf .Get ("\u0049"));
return _bbc ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_cabgg *PdfReader )Inspect ()(map[string ]int ,error ){return _cabgg ._gbgb .Inspect ()};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_aaaf :=PdfColorLab {l ,a ,b };return &_aaaf };

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bg .PdfObject )(_bg .PdfObjectName ,error ){var _bfda *_bg .PdfObjectName ;var _cbaeb *_bg .PdfObjectArray ;if _gcbgc ,_ggeg :=obj .(*_bg .PdfIndirectObject );_ggeg {if _acfa ,_gggc :=_gcbgc .PdfObject .(*_bg .PdfObjectArray );
_gggc {_cbaeb =_acfa ;}else if _adaac ,_cfaa :=_gcbgc .PdfObject .(*_bg .PdfObjectName );_cfaa {_bfda =_adaac ;};}else if _ccce ,_debe :=obj .(*_bg .PdfObjectArray );_debe {_cbaeb =_ccce ;}else if _fade ,_dgfa :=obj .(*_bg .PdfObjectName );_dgfa {_bfda =_fade ;
};if _bfda !=nil {switch *_bfda {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bfda ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bfda ,nil ;
};};if _cbaeb !=nil &&_cbaeb .Len ()> 0{if _gfdb ,_ecab :=_cbaeb .Get (0).(*_bg .PdfObjectName );_ecab {switch *_gfdb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cbaeb .Len ()==1{return *_gfdb ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gfdb ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gfdb ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gfdb ,nil ;};};};return "",nil ;};func (_gbba *PdfFunctionType0 )processSamples ()error {_bgbc :=_dd .ResampleBytes (_gbba ._ddbed ,_gbba .BitsPerSample );
_gbba ._gfaebg =_bgbc ;return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bdgcf *PdfReader )GetNamedDestinations ()(_bg .PdfObject ,error ){_gbae :=_bg .ResolveReference (_bdgcf ._daagd .Get ("\u0044\u0065\u0073t\u0073"));if _gbae ==nil {return nil ,nil ;};if !_bdgcf ._aaeef {_gafbd :=_bdgcf .traverseObjectData (_gbae );
if _gafbd !=nil {return nil ,_gafbd ;};};return _gbae ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gdfg :=NewPdfAnnotation ();_dcgc :=&PdfAnnotationStamp {};_dcgc .PdfAnnotation =_gdfg ;_dcgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdfg .SetContext (_dcgc );return _dcgc ;};

// ToPdfObject converts date to a PDF string object.
func (_aafd *PdfDate )ToPdfObject ()_bg .PdfObject {_deebf :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aafd ._fcdcf ,_aafd ._ecdcd ,_aafd ._dcagc ,_aafd ._cacfd ,_aafd ._fdbfb ,_aafd ._aggabf ,_aafd ._adbdf ,_aafd ._bged ,_aafd ._debc );
return _bg .MakeString (_deebf );};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aggg *PdfOutlineTreeNode )GetContext ()PdfModel {if _dgfcd ,_bccg :=_aggg ._baag .(*PdfOutline );_bccg {return _dgfcd ;};if _fcge ,_ebgfb :=_aggg ._baag .(*PdfOutlineItem );_ebgfb {return _fcge ;};_fa .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// String implements interface PdfObject.
func (_cd *PdfAction )String ()string {_cdc ,_cdd :=_cd .ToPdfObject ().(*_bg .PdfIndirectObject );if _cdd {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cd ._gd ,_cdc .PdfObject .String ());};return "";};func _fgac (_ffeda *_bg .PdfIndirectObject ,_cfdb *_bg .PdfObjectDictionary )(*DSS ,error ){if _ffeda ==nil {_ffeda =_bg .MakeIndirectObject (nil );
};_ffeda .PdfObject =_bg .MakeDict ();_dbcf :=map[string ]*VRI {};if _ffcb ,_aeab :=_bg .GetDict (_cfdb .Get ("\u0056\u0052\u0049"));_aeab {for _ ,_bfbb :=range _ffcb .Keys (){if _cafcc ,_aggf :=_bg .GetDict (_ffcb .Get (_bfbb ));_aggf {_dbcf [_ff .ToUpper (_bfbb .String ())]=_caffb (_cafcc );
};};};return &DSS {Certs :_bgdc (_cfdb .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bgdc (_cfdb .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bgdc (_cfdb .Get ("\u0043\u0052\u004c\u0073")),VRI :_dbcf ,_gacab :_ffeda },nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cffe FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cffe .Mask ()|fl .Mask ())};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_ebaag *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcgc ,_egbfb :=color .(*PdfColorPattern );if !_egbfb {_fa .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _bcgc .Color ==nil {return color ,nil ;};if _ebaag .UnderlyingCS ==nil {return nil ,_fff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _ebaag .UnderlyingCS .ColorToRGB (_bcgc .Color );};func (_gegd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func _acfdd (_cbca _bg .PdfObject )(*PdfFontDescriptor ,error ){_edadd :=&PdfFontDescriptor {};
_cbca =_bg .ResolveReference (_cbca );if _bfedg ,_efeaf :=_cbca .(*_bg .PdfIndirectObject );_efeaf {_edadd ._ffff =_bfedg ;_cbca =_bfedg .PdfObject ;};_adggf ,_cgac :=_bg .GetDict (_cbca );if !_cgac {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cbca );
return nil ,_bg .ErrTypeError ;};if _fccba :=_adggf .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_fccba !=nil {_edadd .FontName =_fccba ;}else {_fa .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_ggbd ,_ :=_bg .GetName (_edadd .FontName );if _babd :=_adggf .Get ("\u0054\u0079\u0070\u0065");_babd !=nil {_bdcf ,_cccf :=_babd .(*_bg .PdfObjectName );if !_cccf ||string (*_bdcf )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_babd ,_ggbd ,_edadd .FontName );
};}else {_fa .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ggbd ,_edadd .FontName );
};_edadd .FontFamily =_adggf .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_edadd .FontStretch =_adggf .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_edadd .FontWeight =_adggf .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_edadd .Flags =_adggf .Get ("\u0046\u006c\u0061g\u0073");_edadd .FontBBox =_adggf .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_edadd .ItalicAngle =_adggf .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_edadd .Ascent =_adggf .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_edadd .Descent =_adggf .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_edadd .Leading =_adggf .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_edadd .CapHeight =_adggf .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_edadd .XHeight =_adggf .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_edadd .StemV =_adggf .Get ("\u0053\u0074\u0065m\u0056");_edadd .StemH =_adggf .Get ("\u0053\u0074\u0065m\u0048");_edadd .AvgWidth =_adggf .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_edadd .MaxWidth =_adggf .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_edadd .MissingWidth =_adggf .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_edadd .FontFile =_adggf .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_edadd .FontFile2 =_adggf .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_edadd .FontFile3 =_adggf .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_edadd .CharSet =_adggf .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_edadd .Style =_adggf .Get ("\u0053\u0074\u0079l\u0065");_edadd .Lang =_adggf .Get ("\u004c\u0061\u006e\u0067");
_edadd .FD =_adggf .Get ("\u0046\u0044");_edadd .CIDSet =_adggf .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _edadd .Flags !=nil {if _aagc ,_adfc :=_bg .GetIntVal (_edadd .Flags );_adfc {_edadd ._beceg =_aagc ;};};if _edadd .MissingWidth !=nil {if _gedcg ,_gaaec :=_bg .GetNumberAsFloat (_edadd .MissingWidth );
_gaaec ==nil {_edadd ._fcfga =_gedcg ;};};if _edadd .FontFile !=nil {_ecgcb ,_bgea :=_bfbbe (_edadd .FontFile );if _bgea !=nil {return _edadd ,_bgea ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ecgcb );_edadd .fontFile =_ecgcb ;
};if _edadd .FontFile2 !=nil {_abdgf ,_gceg :=_adb .NewFontFile2FromPdfObject (_edadd .FontFile2 );if _gceg !=nil {return _edadd ,_gceg ;};_fa .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_abdgf .String ());_edadd ._ebfd =&_abdgf ;
};return _edadd ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ebgfbb *PdfPage )AppendContentStream (contentStr string )error {_dfggb ,_dggf :=_ebgfbb .GetContentStreams ();if _dggf !=nil {return _dggf ;};if len (_dfggb )==0{_dfggb =[]string {contentStr };return _ebgfbb .SetContentStreams (_dfggb ,_bg .NewFlateEncoder ());
};var _bcbbc _bb .Buffer ;_bcbbc .WriteString (_dfggb [len (_dfggb )-1]);_bcbbc .WriteString ("\u000a");_bcbbc .WriteString (contentStr );_dfggb [len (_dfggb )-1]=_bcbbc .String ();return _ebgfbb .SetContentStreams (_dfggb ,_bg .NewFlateEncoder ());};func (_bbdd *PdfReader )newPdfAnnotationPolyLineFromDict (_adde *_bg .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_aecg :=PdfAnnotationPolyLine {};
_bef ,_bbda :=_bbdd .newPdfAnnotationMarkupFromDict (_adde );if _bbda !=nil {return nil ,_bbda ;};_aecg .PdfAnnotationMarkup =_bef ;_aecg .Vertices =_adde .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_aecg .LE =_adde .Get ("\u004c\u0045");
_aecg .BS =_adde .Get ("\u0042\u0053");_aecg .IC =_adde .Get ("\u0049\u0043");_aecg .BE =_adde .Get ("\u0042\u0045");_aecg .IT =_adde .Get ("\u0049\u0054");_aecg .Measure =_adde .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_aecg ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_baec *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _baec .baseFields ()._abcd !=nil {return _baec .baseFields ()._abcd ;};if _baaa :=_baec ._fcafc .getFontDescriptor ();_baaa !=nil {return _baaa ;};_fa .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_baec );
return nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gda :=NewPdfAnnotation ();_aabb :=&PdfAnnotationRedact {};_aabb .PdfAnnotation =_gda ;_aabb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gda .SetContext (_aabb );return _aabb ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fcdf *PdfAppender )UpdatePage (page *PdfPage ){_fcdf .updateObjectsDeep (page .ToPdfObject (),nil )};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ggdea :=NewPdfAnnotation ();_fccc :=&PdfAnnotationWatermark {};_fccc .PdfAnnotation =_ggdea ;_ggdea .SetContext (_fccc );return _fccc ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_dbgec *PdfFont )GetCharMetrics (code _be .CharCode )(CharMetrics ,bool ){var _bfbc _adb .CharMetrics ;switch _bdgf :=_dbgec ._fcafc .(type ){case *pdfFontSimple :if _efefa ,_eebg :=_bdgf .GetCharMetrics (code );_eebg {return _efefa ,_eebg ;};case *pdfFontType0 :if _bfdba ,_dgdd :=_bdgf .GetCharMetrics (code );
_dgdd {return _bfdba ,_dgdd ;};case *pdfCIDFontType0 :if _cffgf ,_beff :=_bdgf .GetCharMetrics (code );_beff {return _cffgf ,_beff ;};case *pdfCIDFontType2 :if _bbeaf ,_aebac :=_bdgf .GetCharMetrics (code );_aebac {return _bbeaf ,_aebac ;};case *pdfFontType3 :if _gcba ,_dabe :=_bdgf .GetCharMetrics (code );
_dabe {return _gcba ,_dabe ;};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_dbgec ._fcafc );
return _bfbc ,false ;};if _fdgdf ,_abdb :=_dbgec .GetFontDescriptor ();_abdb ==nil &&_fdgdf !=nil {return _adb .CharMetrics {Wx :_fdgdf ._fcfga },true ;};_fa .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_dbgec );
return _bfbc ,false ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_edbcg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _edbcg ._eddc .(*PdfShadingPattern );};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cdagc :=PdfDate {};_aafed :=_gffgg .FindAllStringSubmatch (dateStr ,1);if len (_aafed )< 1{return _cdagc ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_aafed [0])!=10{return _cdagc ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_cdagc ._fcdcf ,_ =_af .ParseInt (_aafed [0][1],10,32);_cdagc ._ecdcd ,_ =_af .ParseInt (_aafed [0][2],10,32);_cdagc ._dcagc ,_ =_af .ParseInt (_aafed [0][3],10,32);_cdagc ._cacfd ,_ =_af .ParseInt (_aafed [0][4],10,32);_cdagc ._fdbfb ,_ =_af .ParseInt (_aafed [0][5],10,32);
_cdagc ._aggabf ,_ =_af .ParseInt (_aafed [0][6],10,32);if len (_aafed [0][7])> 0{_cdagc ._adbdf =_aafed [0][7][0];}else {_cdagc ._adbdf ='+';};if len (_aafed [0][8])> 0{_cdagc ._bged ,_ =_af .ParseInt (_aafed [0][8],10,32);}else {_cdagc ._bged =0;};if len (_aafed [0][9])> 0{_cdagc ._debc ,_ =_af .ParseInt (_aafed [0][9],10,32);
}else {_cdagc ._debc =0;};return _cdagc ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_eccc :=NewPdfAnnotation ();_ded :=&PdfAnnotationPolyLine {};_ded .PdfAnnotation =_eccc ;_ded .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eccc .SetContext (_ded );return _ded ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bg .PdfObject ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bg .PdfObject ;};func (_agfad SignatureValidationResult )String ()string {var _abccd _bb .Buffer ;_abccd .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_agfad .Name ));
if _agfad .Date ._fcdcf > 0{_abccd .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_agfad .Date .ToGoTime ().String ()));}else {_abccd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_agfad .Reason )> 0{_abccd .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_agfad .Reason ));}else {_abccd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_agfad .Location )> 0{_abccd .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_agfad .Location ));}else {_abccd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_agfad .ContactInfo )> 0{_abccd .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_agfad .ContactInfo ));}else {_abccd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_abccd .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_agfad .Fields )));if _agfad .IsSigned {_abccd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_abccd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _agfad .IsVerified {_abccd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_abccd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _agfad .IsTrusted {_abccd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_abccd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_agfad .GeneralizedTime .IsZero (){_abccd .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_agfad .GeneralizedTime .String ()));
};return _abccd .String ();};func (_gfc *PdfAppender )mergeResources (_cag ,_bbbf _bg .PdfObject ,_efbc map[_bg .PdfObjectName ]_bg .PdfObjectName )_bg .PdfObject {if _bbbf ==nil &&_cag ==nil {return nil ;};if _bbbf ==nil {return _cag ;};_fbcf ,_eeab :=_bg .GetDict (_bbbf );
if !_eeab {return _cag ;};if _cag ==nil {_ebga :=_bg .MakeDict ();_ebga .Merge (_fbcf );return _bbbf ;};_ecgag ,_eeab :=_bg .GetDict (_cag );if !_eeab {_fa .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_ecgag =_bg .MakeDict ();};for _ ,_dgfce :=range _fbcf .Keys (){if _egec ,_aacg :=_efbc [_dgfce ];_aacg {_ecgag .Set (_egec ,_fbcf .Get (_dgfce ));}else {_ecgag .Set (_dgfce ,_fbcf .Get (_dgfce ));};};return _ecgag ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_add :=NewPdfAnnotation ();_ddgbe :=&PdfAnnotationPrinterMark {};_ddgbe .PdfAnnotation =_add ;_add .SetContext (_ddgbe );return _ddgbe ;};func (_cfce *PdfReader )lookupPageByObject (_cbgee _bg .PdfObject )(*PdfPage ,error ){return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func _abfa (_bacdf *_bg .PdfObjectDictionary )(*PdfShadingPattern ,error ){_agcb :=&PdfShadingPattern {};_fcabg :=_bacdf .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _fcabg ==nil {_fa .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aggbe ,_dfggdb :=_gccef (_fcabg );if _dfggdb !=nil {_fa .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dfggdb );return nil ,_dfggdb ;
};_agcb .Shading =_aggbe ;if _bggad :=_bacdf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bggad !=nil {_cggd ,_dfdca :=_bggad .(*_bg .PdfObjectArray );if !_dfdca {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bggad );
return nil ,_bg .ErrTypeError ;};_agcb .Matrix =_cggd ;};if _ddcd :=_bacdf .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ddcd !=nil {_agcb .ExtGState =_ddcd ;};return _agcb ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bg .PdfObject ;T3DV _bg .PdfObject ;T3DA _bg .PdfObject ;T3DI _bg .PdfObject ;T3DB _bg .PdfObject ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bg .PdfObjectStream ;OCSP []*_bg .PdfObjectStream ;CRL []*_bg .PdfObjectStream ;TU *_bg .PdfObjectString ;TS *_bg .PdfObjectString ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ab .ReadSeeker )(*PdfFont ,error ){const _cdcce =_be .CharCode (32);const _ccbg =_be .CharCode (255);_eddb ,_fgcd :=_df .ReadAll (r );if _fgcd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fgcd );
return nil ,_fgcd ;};_agfbeg ,_fgcd :=_adb .TtfParse (_bb .NewReader (_eddb ));if _fgcd !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_fgcd );
return nil ,_fgcd ;};_fcdc :=&pdfFontSimple {_cccaa :make (map[_be .CharCode ]float64 ),fontCommon :fontCommon {_ccbf :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fcdc ._cbdd =_be .NewWinAnsiEncoder ();_fcdc ._ffgfd =_agfbeg .PostScriptName ;
_fcdc .FirstChar =_bg .MakeInteger (int64 (_cdcce ));_fcdc .LastChar =_bg .MakeInteger (int64 (_ccbg ));_bbcac :=1000.0/float64 (_agfbeg .UnitsPerEm );if len (_agfbeg .Widths )<=0{return nil ,_fff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_afac :=_bbcac *float64 (_agfbeg .Widths [0]);_cfgb :=make ([]float64 ,0,_ccbg -_cdcce +1);for _dcba :=_cdcce ;_dcba <=_ccbg ;_dcba ++{_dcaa ,_eced :=_fcdc .Encoder ().CharcodeToRune (_dcba );if !_eced {_fa .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_dcba );
_cfgb =append (_cfgb ,_afac );continue ;};_bdac ,_efca :=_agfbeg .Chars [_dcaa ];if !_efca {_fa .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cfgb =append (_cfgb ,_afac );continue ;
};_cbaec :=_bbcac *float64 (_agfbeg .Widths [_bdac ]);_cfgb =append (_cfgb ,_cbaec );};_fcdc .Widths =_bg .MakeIndirectObject (_bg .MakeArrayFromFloats (_cfgb ));if len (_cfgb )< int (_ccbg -_cdcce +1){_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cfgb ),255-32+1);
return nil ,_bg .ErrRangeError ;};for _eaafd :=_cdcce ;_eaafd <=_ccbg ;_eaafd ++{_fcdc ._cccaa [_eaafd ]=_cfgb [_eaafd -_cdcce ];};_fcdc .Encoding =_bg .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gaecg :=&PdfFontDescriptor {};
_gaecg .FontName =_bg .MakeName (_agfbeg .PostScriptName );_gaecg .Ascent =_bg .MakeFloat (_bbcac *float64 (_agfbeg .TypoAscender ));_gaecg .Descent =_bg .MakeFloat (_bbcac *float64 (_agfbeg .TypoDescender ));_gaecg .CapHeight =_bg .MakeFloat (_bbcac *float64 (_agfbeg .CapHeight ));
_gaecg .FontBBox =_bg .MakeArrayFromFloats ([]float64 {_bbcac *float64 (_agfbeg .Xmin ),_bbcac *float64 (_agfbeg .Ymin ),_bbcac *float64 (_agfbeg .Xmax ),_bbcac *float64 (_agfbeg .Ymax )});_gaecg .ItalicAngle =_bg .MakeFloat (_agfbeg .ItalicAngle );_gaecg .MissingWidth =_bg .MakeFloat (_bbcac *float64 (_agfbeg .Widths [0]));
_efge ,_fgcd :=_bg .MakeStream (_eddb ,_bg .NewFlateEncoder ());if _fgcd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fgcd );
return nil ,_fgcd ;};_efge .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bg .MakeInteger (int64 (len (_eddb ))));_gaecg .FontFile2 =_efge ;if _agfbeg .Bold {_gaecg .StemV =_bg .MakeInteger (120);}else {_gaecg .StemV =_bg .MakeInteger (70);
};_dgceg :=_cfddg ;if _agfbeg .IsFixedPitch {_dgceg |=_egffef ;};if _agfbeg .ItalicAngle !=0{_dgceg |=_faac ;};_gaecg .Flags =_bg .MakeInteger (int64 (_dgceg ));_fcdc ._abcd =_gaecg ;_fefc :=&PdfFont {_fcafc :_fcdc };return _fefc ,nil ;};type crossReference struct{Type int ;


// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ddfe *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fefbg :=vals [0];if _fefbg < 0.0||_fefbg > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gbcd :=vals [1];if _gbcd < 0.0||_gbcd > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbfd :=vals [2];if _fbfd < 0.0||_fbfd > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ccaa :=NewPdfColorDeviceRGB (_fefbg ,_gbcd ,_fbfd );return _ccaa ,nil ;};func (_cgga *PdfReader )newPdfActionGotoFromDict (_feeg *_bg .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_feeg .Get ("\u0044")},nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ddbg :=NewPdfAnnotation ();_dda :=&PdfAnnotationLink {};_dda .PdfAnnotation =_ddbg ;_ddbg .SetContext (_dda );return _dda ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bg .PdfObject ;};func (_efff *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject implements interface PdfModel.
func (_dcgd *PdfAnnotationFreeText )ToPdfObject ()_bg .PdfObject {_dcgd .PdfAnnotation .ToPdfObject ();_abge :=_dcgd ._cdcf ;_fbe :=_abge .PdfObject .(*_bg .PdfObjectDictionary );_dcgd .PdfAnnotationMarkup .appendToPdfDictionary (_fbe );_fbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fbe .SetIfNotNil ("\u0044\u0041",_dcgd .DA );_fbe .SetIfNotNil ("\u0051",_dcgd .Q );_fbe .SetIfNotNil ("\u0052\u0043",_dcgd .RC );_fbe .SetIfNotNil ("\u0044\u0053",_dcgd .DS );_fbe .SetIfNotNil ("\u0043\u004c",_dcgd .CL );_fbe .SetIfNotNil ("\u0049\u0054",_dcgd .IT );
_fbe .SetIfNotNil ("\u0042\u0045",_dcgd .BE );_fbe .SetIfNotNil ("\u0052\u0044",_dcgd .RD );_fbe .SetIfNotNil ("\u0042\u0053",_dcgd .BS );_fbe .SetIfNotNil ("\u004c\u0045",_dcgd .LE );return _abge ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bg .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_bbage *_bg .PdfIndirectObject ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_begf *pdfFontSimple )SetEncoder (encoder _be .TextEncoder ){_begf ._cbdd =encoder };func (_cdga *PdfAppender )updateObjectsDeep (_ffce _bg .PdfObject ,_abgf map[_bg .PdfObject ]struct{}){if _abgf ==nil {_abgf =map[_bg .PdfObject ]struct{}{};};if _ ,_beg :=_abgf [_ffce ];
_beg ||_ffce ==nil {return ;};_abgf [_ffce ]=struct{}{};_gcae :=_bg .ResolveReferencesDeep (_ffce ,_cdga ._ggbe );if _gcae !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcae );};switch _bfaef :=_ffce .(type ){case *_bg .PdfIndirectObject :switch {case _bfaef .GetParser ()==_cdga ._dgfca ._gbgb :return ;
case _bfaef .GetParser ()==_cdga .Reader ._gbgb :_ebec ,_ :=_cdga ._dgfca .GetIndirectObjectByNumber (int (_bfaef .ObjectNumber ));_fdad ,_eae :=_ebec .(*_bg .PdfIndirectObject );if _eae &&_fdad !=nil {if _fdad .PdfObject !=_bfaef .PdfObject &&_fdad .PdfObject .WriteString ()!=_bfaef .PdfObject .WriteString (){_cdga .addNewObject (_ffce );
_cdga ._dafc [_ffce ]=_bfaef .ObjectNumber ;};};default:_cdga .addNewObject (_ffce );};_cdga .updateObjectsDeep (_bfaef .PdfObject ,_abgf );case *_bg .PdfObjectArray :for _ ,_abaf :=range _bfaef .Elements (){_cdga .updateObjectsDeep (_abaf ,_abgf );};case *_bg .PdfObjectDictionary :for _ ,_bdgga :=range _bfaef .Keys (){_cdga .updateObjectsDeep (_bfaef .Get (_bdgga ),_abgf );
};case *_bg .PdfObjectStreams :if _bfaef .GetParser ()!=_cdga ._dgfca ._gbgb {for _ ,_egde :=range _bfaef .Elements (){_cdga .updateObjectsDeep (_egde ,_abgf );};};case *_bg .PdfObjectStream :switch {case _bfaef .GetParser ()==_cdga ._dgfca ._gbgb :return ;
case _bfaef .GetParser ()==_cdga .Reader ._gbgb :if _dacf ,_fede :=_cdga ._dgfca ._gbgb .LookupByReference (_bfaef .PdfObjectReference );_fede ==nil {var _badd bool ;if _cega ,_ddfc :=_bg .GetStream (_dacf );_ddfc &&_bb .Equal (_cega .Stream ,_bfaef .Stream ){_badd =true ;
};if _bfcf ,_egff :=_bg .GetDict (_dacf );_badd &&_egff {_badd =_bfcf .WriteString ()==_bfaef .PdfObjectDictionary .WriteString ();};if _badd {return ;};};if _bfaef .ObjectNumber !=0{_cdga ._dafc [_ffce ]=_bfaef .ObjectNumber ;};default:if _ ,_ecff :=_cdga ._geb [_ffce ];
!_ecff {_cdga .addNewObject (_ffce );};};_cdga .updateObjectsDeep (_bfaef .PdfObjectDictionary ,_abgf );};};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ee .File ,error ){const _aecaee ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fcfec ,_aedd :=_ee .Open (pdfFile );if _aedd !=nil {return nil ,nil ,_aedd ;};_cecfe ,_aedd :=_gdaeb (_fcfec ,opts ,true ,_aecaee );if _aedd !=nil {_fcfec .Close ();return nil ,nil ,_aedd ;};return _cecfe ,_fcfec ,nil ;};var _cfda =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// ToPdfObject implements interface PdfModel.
func (_de *PdfActionHide )ToPdfObject ()_bg .PdfObject {_de .PdfAction .ToPdfObject ();_ed :=_de ._gfd ;_cga :=_ed .PdfObject .(*_bg .PdfObjectDictionary );_cga .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeHide )));_cga .SetIfNotNil ("\u0054",_de .T );
_cga .SetIfNotNil ("\u0048",_de .H );return _ed ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bg .PdfObject ;Mac _bg .PdfObject ;Unix _bg .PdfObject ;NewWindow _bg .PdfObject ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_cfdf *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _cfdf ._dfadc ==nil {_cfdf ._dfadc =_ffg .NewPSExecutor (_cfdf .Program );};var _gfdbg []_ffg .PSObject ;for _ ,_cede :=range xVec {_gfdbg =append (_gfdbg ,_ffg .MakeReal (_cede ));
};_cgdaad ,_bdgb :=_cfdf ._dfadc .Execute (_gfdbg );if _bdgb !=nil {return nil ,_bdgb ;};_bfbg ,_bdgb :=_ffg .PSObjectArrayToFloat64Array (_cgdaad );if _bdgb !=nil {return nil ,_bdgb ;};return _bfbg ,nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gbcdg *_bg .PdfIndirectObject ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ddbb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddbb .AlternateSpace ==nil {return nil ,_fff .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ddbb .AlternateSpace .ColorToRGB (color );};

// GetCustomInfo returns a custom info value for the specified name.
func (_fcbe *PdfInfo )GetCustomInfo (name string )*_bg .PdfObjectString {var _cfge *_bg .PdfObjectString ;if _fcbe ._eeac ==nil {return _cfge ;};if _fabba ,_egac :=_fcbe ._eeac .Get (*_bg .MakeName (name )).(*_bg .PdfObjectString );_egac {_cfge =_fabba ;
};return _cfge ;};func (_bcec PdfFont )actualFont ()pdfFont {if _bcec ._fcafc ==nil {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcec );
};return _bcec ._fcafc ;};

// ToPdfObject implements interface PdfModel.
func (_ebgc *PdfAnnotationHighlight )ToPdfObject ()_bg .PdfObject {_ebgc .PdfAnnotation .ToPdfObject ();_bccd :=_ebgc ._cdcf ;_def :=_bccd .PdfObject .(*_bg .PdfObjectDictionary );_ebgc .PdfAnnotationMarkup .appendToPdfDictionary (_def );_def .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_def .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ebgc .QuadPoints );return _bccd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dddgf *PdfColorspaceSpecialPattern )ToPdfObject ()_bg .PdfObject {if _dddgf .UnderlyingCS ==nil {return _bg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_agbde :=_bg .MakeArray (_bg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_agbde .Append (_dddgf .UnderlyingCS .ToPdfObject ());
if _dddgf ._cgcf !=nil {_dddgf ._cgcf .PdfObject =_agbde ;return _dddgf ._cgcf ;};return _agbde ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_dgecb *PdfReader )GetTrailer ()(*_bg .PdfObjectDictionary ,error ){_aefbb :=_dgecb ._gbgb .GetTrailer ();if _aefbb ==nil {return nil ,_fff .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _aefbb ,nil ;
};

// String returns a human readable description of `fontfile`.
func (_bgba *fontFile )String ()string {_aeffg :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bgba ._abdgb !=nil {_aeffg =_bgba ._abdgb .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bgba ._ecge ,_aeffg );
};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_cfeega DefaultImageHandler )NewImageFromGoImage (goimg _gc .Image )(*Image ,error ){_ggdcf ,_bgdb :=_ggc .FromGoImage (goimg );if _bgdb !=nil {return nil ,_bgdb ;};_eeagc :=_bbace (_ggdcf .Base ());return &_eeagc ,nil ;};func (_cegb *PdfReader )newPdfAnnotationCaretFromDict (_feb *_bg .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bde :=PdfAnnotationCaret {};
_ggbg ,_fae :=_cegb .newPdfAnnotationMarkupFromDict (_feb );if _fae !=nil {return nil ,_fae ;};_bde .PdfAnnotationMarkup =_ggbg ;_bde .RD =_feb .Get ("\u0052\u0044");_bde .Sy =_feb .Get ("\u0053\u0079");return &_bde ,nil ;};func (_bcaf *DSS )addCRLs (_fgag [][]byte )([]*_bg .PdfObjectStream ,error ){return _bcaf .add (&_bcaf .CRLs ,_bcaf ._gffbf ,_fgag );
};

// Register registers (caches) a model to primitive object relationship.
func (_adbed *modelManager )Register (primitive _bg .PdfObject ,model PdfModel ){_adbed ._feaa [model ]=primitive ;_adbed ._cgccg [primitive ]=model ;};func (_afcb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _afcb ._abcd ==nil &&_afcb .DescendantFont !=nil {return _afcb .DescendantFont .FontDescriptor ();
};return _afcb ._abcd ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_adcd *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _adcd ._facgg !=nil {return _adcd ._facgg ,nil ;};if _adcd .Annots ==nil {_adcd ._facgg =[]*PdfAnnotation {};return nil ,nil ;};if _adcd ._cdbd ==nil {_adcd ._facgg =[]*PdfAnnotation {};
return nil ,nil ;};_fabab ,_gcccg :=_adcd ._cdbd .loadAnnotations (_adcd .Annots );if _gcccg !=nil {return nil ,_gcccg ;};if _fabab ==nil {_adcd ._facgg =[]*PdfAnnotation {};};_adcd ._facgg =_fabab ;return _adcd ._facgg ,nil ;};func (_gedg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _gedg ._gbgb .GetCrypter ()!=nil &&!_gedg ._gbgb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgdcf :=_gedg ._daagd ;_egdfc :=_cgdcf .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _egdfc ==nil {return nil ,nil ;};_fa .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_ebfa :=_bg .ResolveReference (_egdfc );
_fa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_ebfa );if _dgddd :=_bg .IsNullObject (_ebfa );_dgddd {_fa .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_bbgf ,_caabg :=_ebfa .(*_bg .PdfIndirectObject );if !_caabg {if _ ,_beade :=_bg .GetDict (_ebfa );!_beade {_fa .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_fa .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_bbgf =_bg .MakeIndirectObject (_ebfa );};_fefdea ,_caabg :=_bbgf .PdfObject .(*_bg .PdfObjectDictionary );if !_caabg {return nil ,_fff .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_fa .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fefdea );_ggcba ,_ ,_bcdg :=_gedg .buildOutlineTree (_bbgf ,nil ,nil ,nil );if _bcdg !=nil {return nil ,_bcdg ;};_fa .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ggcba );
return _ggcba ,nil ;};func _cggbf ()string {return _fa .Version };func (_edfeb *DSS )addCerts (_ebde [][]byte )([]*_bg .PdfObjectStream ,error ){return _edfeb .add (&_edfeb .Certs ,_edfeb ._gefg ,_ebde );};func (_bbba *PdfReader )newPdfAnnotationUnderlineFromDict (_affb *_bg .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_degf :=PdfAnnotationUnderline {};
_gcedf ,_cfbb :=_bbba .newPdfAnnotationMarkupFromDict (_affb );if _cfbb !=nil {return nil ,_cfbb ;};_degf .PdfAnnotationMarkup =_gcedf ;_degf .QuadPoints =_affb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_degf ,nil ;};
func _ebagg (_edaeg *[]*PdfField ,_fece FieldFilterFunc ,_gbebf bool )[]*PdfField {if _edaeg ==nil {return nil ;};_bbadcd :=*_edaeg ;if len (*_edaeg )==0{return nil ;};_bbceg :=_bbadcd [:0];if _fece ==nil {_fece =func (*PdfField )bool {return true };};
var _fbfgg []*PdfField ;for _ ,_agffe :=range _bbadcd {_efeef :=_fece (_agffe );if _efeef {_fbfgg =append (_fbfgg ,_agffe );if len (_agffe .Kids )> 0{_fbfgg =append (_fbfgg ,_ebagg (&_agffe .Kids ,_fece ,_gbebf )...);};};if !_gbebf ||!_efeef ||len (_agffe .Kids )> 0{_bbceg =append (_bbceg ,_agffe );
};};*_edaeg =_bbceg ;return _fbfgg ;};

// ToPdfObject implements interface PdfModel.
func (_cgddb *PdfAnnotation3D )ToPdfObject ()_bg .PdfObject {_cgddb .PdfAnnotation .ToPdfObject ();_cgee :=_cgddb ._cdcf ;_ebfef :=_cgee .PdfObject .(*_bg .PdfObjectDictionary );_ebfef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0033\u0044"));
_ebfef .SetIfNotNil ("\u0033\u0044\u0044",_cgddb .T3DD );_ebfef .SetIfNotNil ("\u0033\u0044\u0056",_cgddb .T3DV );_ebfef .SetIfNotNil ("\u0033\u0044\u0041",_cgddb .T3DA );_ebfef .SetIfNotNil ("\u0033\u0044\u0049",_cgddb .T3DI );_ebfef .SetIfNotNil ("\u0033\u0044\u0042",_cgddb .T3DB );
return _cgee ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fabga *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gdbe :=[]float64 {0.0};if _fabga .C0 !=nil {_gdbe =_fabga .C0 ;};_fdeg :=[]float64 {1.0};if _fabga .C1 !=nil {_fdeg =_fabga .C1 ;};var _eeegc []float64 ;for _ebafg :=0;_ebafg < len (_gdbe );_ebafg ++{_gffeb :=_gdbe [_ebafg ]+_dc .Pow (x [0],_fabga .N )*(_fdeg [_ebafg ]-_gdbe [_ebafg ]);
_eeegc =append (_eeegc ,_gffeb );};return _eeegc ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_feddg *PdfShading )GetContainingPdfObject ()_bg .PdfObject {return _feddg ._cabb };

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bg .PdfObjectInteger ;TilingType *_bg .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bg .PdfObjectFloat ;YStep *_bg .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bg .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_bdd *PdfActionSound )ToPdfObject ()_bg .PdfObject {_bdd .PdfAction .ToPdfObject ();_ddc :=_bdd ._gfd ;_acb :=_ddc .PdfObject .(*_bg .PdfObjectDictionary );_acb .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeSound )));_acb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bdd .Sound );
_acb .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bdd .Volume );_acb .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bdd .Synchronous );_acb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bdd .Repeat );_acb .SetIfNotNil ("\u004d\u0069\u0078",_bdd .Mix );
return _ddc ;};func _ffdgf (_cdgcg *_bg .PdfObjectDictionary )(*PdfTilingPattern ,error ){_dgda :=&PdfTilingPattern {};_bdbad :=_cdgcg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _bdbad ==nil {_fa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gggdg ,_cggf :=_bdbad .(*_bg .PdfObjectInteger );if !_cggf {_fa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bdbad );
return nil ,_bg .ErrTypeError ;};_dgda .PaintType =_gggdg ;_bdbad =_cdgcg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bdbad ==nil {_fa .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bffaf ,_cggf :=_bdbad .(*_bg .PdfObjectInteger );if !_cggf {_fa .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdbad );
return nil ,_bg .ErrTypeError ;};_dgda .TilingType =_bffaf ;_bdbad =_cdgcg .Get ("\u0042\u0042\u006f\u0078");if _bdbad ==nil {_fa .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bdbad =_bg .TraceToDirectObject (_bdbad );_egcg ,_cggf :=_bdbad .(*_bg .PdfObjectArray );if !_cggf {_fa .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdbad );
return nil ,_bg .ErrTypeError ;};_egce ,_edcfg :=NewPdfRectangle (*_egcg );if _edcfg !=nil {_fa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_edcfg );return nil ,_edcfg ;};_dgda .BBox =_egce ;_bdbad =_cdgcg .Get ("\u0058\u0053\u0074e\u0070");
if _bdbad ==nil {_fa .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bcadce ,_edcfg :=_bg .GetNumberAsFloat (_bdbad );if _edcfg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bcadce );
return nil ,_edcfg ;};_dgda .XStep =_bg .MakeFloat (_bcadce );_bdbad =_cdgcg .Get ("\u0059\u0053\u0074e\u0070");if _bdbad ==nil {_fa .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_acde ,_edcfg :=_bg .GetNumberAsFloat (_bdbad );if _edcfg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_acde );
return nil ,_edcfg ;};_dgda .YStep =_bg .MakeFloat (_acde );_bdbad =_cdgcg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bdbad ==nil {_fa .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cdgcg ,_cggf =_bg .TraceToDirectObject (_bdbad ).(*_bg .PdfObjectDictionary );if !_cggf {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bdbad );
};_dbgcf ,_edcfg :=NewPdfPageResourcesFromDict (_cdgcg );if _edcfg !=nil {return nil ,_edcfg ;};_dgda .Resources =_dbgcf ;if _egab :=_cdgcg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_egab !=nil {_bbbfgc ,_cgbdb :=_egab .(*_bg .PdfObjectArray );if !_cgbdb {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egab );
return nil ,_bg .ErrTypeError ;};_dgda .Matrix =_bbbfgc ;};return _dgda ,nil ;};func (_ffef *PdfReader )newPdfAnnotationPolygonFromDict (_fed *_bg .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fgcc :=PdfAnnotationPolygon {};_bfa ,_cggc :=_ffef .newPdfAnnotationMarkupFromDict (_fed );
if _cggc !=nil {return nil ,_cggc ;};_fgcc .PdfAnnotationMarkup =_bfa ;_fgcc .Vertices =_fed .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fgcc .LE =_fed .Get ("\u004c\u0045");_fgcc .BS =_fed .Get ("\u0042\u0053");_fgcc .IC =_fed .Get ("\u0049\u0043");
_fgcc .BE =_fed .Get ("\u0042\u0045");_fgcc .IT =_fed .Get ("\u0049\u0054");_fgcc .Measure =_fed .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fgcc ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bg .PdfObject ,error );};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gbfce ,_gebe :=_ee .Open (filePath );if _gebe !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gebe );
return nil ,_gebe ;};defer _gbfce .Close ();return NewPdfFontFromTTF (_gbfce );};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_egge *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bg .GetNumberAsFloat (_egge .CapHeight );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gefd *PdfField )FullName ()(string ,error ){var _bcdd _bb .Buffer ;_gabeb :=[]string {};if _gefd .T !=nil {_gabeb =append (_gabeb ,_gefd .T .Decoded ());};_egda :=map[*PdfField ]bool {};_egda [_gefd ]=true ;_ddbga :=_gefd .Parent ;for _ddbga !=nil {if _ ,_ddfdb :=_egda [_ddbga ];
_ddfdb {return _bcdd .String (),_fff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ddbga .T ==nil {return _bcdd .String (),_fff .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_gabeb =append (_gabeb ,_ddbga .T .Decoded ());_egda [_ddbga ]=true ;_ddbga =_ddbga .Parent ;};for _ceea :=len (_gabeb )-1;_ceea >=0;_ceea --{_bcdd .WriteString (_gabeb [_ceea ]);if _ceea > 0{_bcdd .WriteString ("\u002e");};};return _bcdd .String (),nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bagf *PdfActionGoTo )ToPdfObject ()_bg .PdfObject {_bagf .PdfAction .ToPdfObject ();_caf :=_bagf ._gfd ;_aae :=_caf .PdfObject .(*_bg .PdfObjectDictionary );_aae .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeGoTo )));_aae .SetIfNotNil ("\u0044",_bagf .D );
return _caf ;};func _eagad (_fbfef _bg .PdfObject )(*PdfFunctionType3 ,error ){_gecaac :=&PdfFunctionType3 {};var _ccgde *_bg .PdfObjectDictionary ;if _acgbe ,_agbbgd :=_fbfef .(*_bg .PdfIndirectObject );_agbbgd {_cafcf ,_cfegca :=_acgbe .PdfObject .(*_bg .PdfObjectDictionary );
if !_cfegca {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gecaac ._defa =_acgbe ;_ccgde =_cafcf ;}else if _fecd ,_eeeb :=_fbfef .(*_bg .PdfObjectDictionary );_eeeb {_ccgde =_fecd ;}else {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_caeae ,_cddge :=_bg .TraceToDirectObject (_ccgde .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bg .PdfObjectArray );if !_cddge {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _caeae .Len ()!=2{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_abed ,_efde :=_caeae .ToFloat64Array ();
if _efde !=nil {return nil ,_efde ;};_gecaac .Domain =_abed ;_caeae ,_cddge =_bg .TraceToDirectObject (_ccgde .Get ("\u0052\u0061\u006eg\u0065")).(*_bg .PdfObjectArray );if _cddge {if _caeae .Len ()< 0||_caeae .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dfabb ,_cdgca :=_caeae .ToFloat64Array ();if _cdgca !=nil {return nil ,_cdgca ;};_gecaac .Range =_dfabb ;};_caeae ,_cddge =_bg .TraceToDirectObject (_ccgde .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bg .PdfObjectArray );if !_cddge {_fa .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gecaac .Functions =[]PdfFunction {};
for _ ,_faaff :=range _caeae .Elements (){_gfca ,_bacbg :=_egfbb (_faaff );if _bacbg !=nil {return nil ,_bacbg ;};_gecaac .Functions =append (_gecaac .Functions ,_gfca );};_caeae ,_cddge =_bg .TraceToDirectObject (_ccgde .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bg .PdfObjectArray );
if !_cddge {_fa .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_eccgb ,_efde :=_caeae .ToFloat64Array ();if _efde !=nil {return nil ,_efde ;};_gecaac .Bounds =_eccgb ;if len (_gecaac .Bounds )!=len (_gecaac .Functions )-1{_fa .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_gecaac .Bounds ),len (_gecaac .Functions ));
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caeae ,_cddge =_bg .TraceToDirectObject (_ccgde .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bg .PdfObjectArray );if !_cddge {_fa .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_baacb ,_efde :=_caeae .ToFloat64Array ();
if _efde !=nil {return nil ,_efde ;};_gecaac .Encode =_baacb ;if len (_gecaac .Encode )!=2*len (_gecaac .Functions ){_fa .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_gecaac .Encode ),len (_gecaac .Functions ));
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _gecaac ,nil ;};

// IsCID returns true if the underlying font is CID.
func (_abfd *PdfFont )IsCID ()bool {return _abfd .baseFields ().isCIDFont ()};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_bcc :=NewPdfAnnotation ();_fgff :=&PdfAnnotationStrikeOut {};_fgff .PdfAnnotation =_bcc ;_fgff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcc .SetContext (_fgff );return _fgff ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_eacg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eacg .AlternateSpace ==nil {return nil ,_fff .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _eacg .AlternateSpace .ColorToRGB (color );};

// ToPdfObject convert PdfInfo to pdf object.
func (_gegb *PdfInfo )ToPdfObject ()_bg .PdfObject {_bgbb :=_bg .MakeDict ();_bgbb .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_gegb .Title );_bgbb .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_gegb .Author );_bgbb .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_gegb .Subject );
_bgbb .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gegb .Keywords );_bgbb .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_gegb .Creator );_bgbb .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_gegb .Producer );
_bgbb .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_gegb .Trapped );if _gegb .CreationDate !=nil {_bgbb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gegb .CreationDate .ToPdfObject ());};if _gegb .ModifiedDate !=nil {_bgbb .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_gegb .ModifiedDate .ToPdfObject ());
};for _ ,_bagae :=range _gegb ._eeac .Keys (){_bgbb .SetIfNotNil (_bagae ,_gegb ._eeac .Get (_bagae ));};return _bgbb ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_cfefc *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbad ,_dfbc :=_bg .GetNumbersAsFloat (objects );
if _dfbc !=nil {return nil ,_dfbc ;};return _cfefc .ColorFromFloats (_gbad );};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bg .PdfObject ;IsMap _bg .PdfObject ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_eegba *PdfFieldButton )SetType (btype ButtonType ){_ecfgg :=uint32 (0);if _eegba .Ff !=nil {_ecfgg =uint32 (*_eegba .Ff );};switch btype {case ButtonTypePush :_ecfgg |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_ecfgg |=FieldFlagRadio .Mask ();
};_eegba .Ff =_bg .MakeInteger (int64 (_ecfgg ));};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bg .PdfIndirectObject ;SV *_bg .PdfIndirectObject ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bg .PdfObject ;Popup *PdfAnnotationPopup ;CA _bg .PdfObject ;RC _bg .PdfObject ;CreationDate _bg .PdfObject ;IRT _bg .PdfObject ;Subj _bg .PdfObject ;RT _bg .PdfObject ;IT _bg .PdfObject ;ExData _bg .PdfObject ;};

// B returns the value of the B component of the color.
func (_cfde *PdfColorLab )B ()float64 {return _cfde [2]};

// BaseFont returns the font's "BaseFont" field.
func (_gccga *PdfFont )BaseFont ()string {return _gccga .baseFields ()._ffgfd };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_bffa *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _bffa ._eddc .(*PdfTilingPattern );};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cbagg *PdfField )Flags ()FieldFlag {var _cfebc FieldFlag ;_gegdb ,_ggca :=_cbagg .inherit (func (_aceg *PdfField )bool {if _aceg .Ff !=nil {_cfebc =FieldFlag (*_aceg .Ff );return true ;};return false ;});if _ggca !=nil {_fa .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ggca );
};if !_gegdb {_fa .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cfebc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_aegg *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _aegg .Alternate ==nil {if _aegg .N ==1{_edgb :=NewPdfColorspaceDeviceGray ();return _edgb .ColorFromFloats (vals );}else if _aegg .N ==3{_egffe :=NewPdfColorspaceDeviceRGB ();
return _egffe .ColorFromFloats (vals );}else if _aegg .N ==4{_fagdb :=NewPdfColorspaceDeviceCMYK ();return _fagdb .ColorFromFloats (vals );}else {return nil ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aegg .Alternate .ColorFromFloats (vals );};func (_egbfg *PdfReader )traverseObjectData (_eebad _bg .PdfObject )error {return _bg .ResolveReferencesDeep (_eebad ,_egbfg ._edaed );};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_cddg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fff .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dccc :=field .V ;if _dccc ==nil {return _fff .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gef :=pageNum -1;
if _gef < 0||_gef > len (_cddg ._dgec )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_acad :=_cddg .Reader .PageList [_gef ];field .P =_acad .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bg .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_acad .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _cddg ._egcb ==_cddg ._dgfca .AcroForm {_cddg ._egcb =_cddg .Reader .AcroForm ;};_acec :=_cddg ._egcb ;if _acec ==nil {_acec =NewPdfAcroForm ();};_acec .SigFlags =_bg .MakeInteger (3);
_eacd :=append (_acec .AllFields (),field .PdfField );_acec .Fields =&_eacd ;_cddg .ReplaceAcroForm (_acec );_cddg .UpdatePage (_acad );_cddg ._dgec [_gef ]=_acad ;return nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_aefg :=&PdfColorspaceLab {};_aefg .BlackPoint =[]float64 {0.0,0.0,0.0};_aefg .Range =[]float64 {-100,100,-100,100};return _aefg ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_dafdd *PdfWriter )AddPage (page *PdfPage )error {const _fcbea ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cgada (page );_cfefce :=page .ToPdfObject ();_fa .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_fa .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cfefce );_cfaab ,_egfab :=_bg .GetIndirect (_cfefce );if !_egfab {return _fff .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fa .Log .Trace ("\u0025\u0073",_cfaab );_fa .Log .Trace ("\u0025\u0073",_cfaab .PdfObject );_bbfd ,_egfab :=_bg .GetDict (_cfaab .PdfObject );if !_egfab {return _fff .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_effgb ,_egfab :=_bg .GetName (_bbfd .Get ("\u0054\u0079\u0070\u0065"));if !_egfab {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_bbfd .Get ("\u0054\u0079\u0070\u0065"));
};if _effgb .String ()!="\u0050\u0061\u0067\u0065"{return _fff .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gcfad :=[]_bg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_cagfd ,_fgcda :=_bg .GetIndirect (_bbfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fa .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_bbfd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fgcda );
for _fgcda {_fa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cagfd );_fgggb ,_ebegg :=_bg .GetDict (_cagfd .PdfObject );if !_ebegg {return _fff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_agbcb :=range _gcfad {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agbcb );if _bbfd .Get (_agbcb )!=nil {_fa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _aabbf :=_fgggb .Get (_agbcb );_aabbf !=nil {_fa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agbcb );_bbfd .Set (_agbcb ,_aabbf );};};_cagfd ,_fgcda =_bg .GetIndirect (_fgggb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_fa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fgggb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_bbfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dafdd ._bbadca );_cfaab .PdfObject =_bbfd ;_dfggf ,_egfab :=_bg .GetDict (_dafdd ._bbadca .PdfObject );if !_egfab {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dbccb ,_egfab :=_bg .GetArray (_dfggf .Get ("\u004b\u0069\u0064\u0073"));if !_egfab {return _fff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dbccb .Append (_cfaab );_dafdd ._cdfde [_bbfd ]=struct{}{};_geabe ,_egfab :=_bg .GetInt (_dfggf .Get ("\u0043\u006f\u0075n\u0074"));if !_egfab {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_geabe =*_geabe +1;if page ._cdbd ==nil {_fbbcg :=_ecb .Track (_dafdd ._aceca ,_fcbea );if _fbbcg !=nil {return _fbbcg ;};}else {_dgcaa :=_ecb .Track (page ._cdbd ._fced ,_fcbea );if _dgcaa !=nil {return _dgcaa ;};};_dafdd .addObject (_cfaab );_ccgbc :=_dafdd .addObjects (_bbfd );
if _ccgbc !=nil {return _ccgbc ;};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dbbc *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccdc ,_agef :=_bg .GetNumbersAsFloat (objects );
if _agef !=nil {return nil ,_agef ;};return _dbbc .ColorFromFloats (_ccdc );};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_abefg OutlineDest )ToPdfObject ()_bg .PdfObject {if (_abefg .PageObj ==nil &&_abefg .Page < 0)||_abefg .Mode ==""{return _bg .MakeNull ();};_bfcfg :=_bg .MakeArray ();if _abefg .PageObj !=nil {_bfcfg .Append (_abefg .PageObj );}else {_bfcfg .Append (_bg .MakeInteger (_abefg .Page ));
};_bfcfg .Append (_bg .MakeName (_abefg .Mode ));switch _abefg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_bfcfg .Append (_bg .MakeFloat (_abefg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_bfcfg .Append (_bg .MakeFloat (_abefg .X ));
case "\u0058\u0059\u005a":_bfcfg .Append (_bg .MakeFloat (_abefg .X ));_bfcfg .Append (_bg .MakeFloat (_abefg .Y ));_bfcfg .Append (_bg .MakeFloat (_abefg .Zoom ));default:_bfcfg .Set (1,_bg .MakeName ("\u0046\u0069\u0074"));};return _bfcfg ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_aade *PdfPageResources )SetXObjectByName (keyName _bg .PdfObjectName ,stream *_bg .PdfObjectStream )error {if _aade .XObject ==nil {_aade .XObject =_bg .MakeDict ();};_fadee :=_bg .TraceToDirectObject (_aade .XObject );_cdfdg ,_fcdcg :=_fadee .(*_bg .PdfObjectDictionary );
if !_fcdcg {_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_aade .XObject ,_fadee );return _fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cdfdg .Set (keyName ,stream );return nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_dbeaf *PdfReader )PageFromIndirectObject (ind *_bg .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_dbeaf .PageList )!=len (_dbeaf ._abcee ){return nil ,0,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _acbg ,_adcfa :=range _dbeaf ._abcee {if _adcfa ==ind {return _dbeaf .PageList [_acbg ],_acbg +1,nil ;};};return nil ,0,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gccg *PdfAnnotationSquiggly )ToPdfObject ()_bg .PdfObject {_gccg .PdfAnnotation .ToPdfObject ();_dgab :=_gccg ._cdcf ;_eca :=_dgab .PdfObject .(*_bg .PdfObjectDictionary );_gccg .PdfAnnotationMarkup .appendToPdfDictionary (_eca );_eca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_eca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gccg .QuadPoints );return _dgab ;};func _baac (_fgfeg _bg .PdfObject )(*_bg .PdfObjectDictionary ,*fontCommon ,error ){_ecda :=&fontCommon {};if _gde ,_afefg :=_fgfeg .(*_bg .PdfIndirectObject );
_afefg {_ecda ._gaaad =_gde .ObjectNumber ;};_gafa ,_acdf :=_bg .GetDict (_fgfeg );if !_acdf {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fgfeg );
return nil ,nil ,ErrFontNotSupported ;};_gdfb ,_acdf :=_bg .GetNameVal (_gafa .Get ("\u0054\u0079\u0070\u0065"));if !_acdf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gdfb !="\u0046\u006f\u006e\u0074"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gdfb ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bg .ErrTypeError ;};_dgaa ,_acdf :=_bg .GetNameVal (_gafa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_acdf {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ecda ._ccbf =_dgaa ;_eeceb ,_acdf :=_bg .GetNameVal (_gafa .Get ("\u004e\u0061\u006d\u0065"));if _acdf {_ecda ._babbc =_eeceb ;};_dcea :=_gafa .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dcea !=nil {_ecda ._ageeb =_bg .TraceToDirectObject (_dcea );
_gaaae ,_baef :=_agaag (_ecda ._ageeb ,_ecda );if _baef !=nil {return _gafa ,_ecda ,_baef ;};_ecda ._ddddg =_gaaae ;}else if _dgaa =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_dgaa =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_becgc ,_aeabb :=_bbg .NewCIDSystemInfo (_gafa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _aeabb !=nil {return _gafa ,_ecda ,_aeabb ;};_deac :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_becgc .Registry ,_becgc .Ordering );if _bbg .IsPredefinedCMap (_deac ){_ecda ._ddddg ,_aeabb =_bbg .LoadPredefinedCMap (_deac );
if _aeabb !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_deac ,_aeabb );
};};};_egbcd :=_gafa .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _egbcd !=nil {_gaafb ,_bgebg :=_acfdd (_egbcd );if _bgebg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bgebg );
return _gafa ,_ecda ,_bgebg ;};_ecda ._abcd =_gaafb ;};if _dgaa !="\u0054\u0079\u0070e\u0033"{_fbed ,_cbfa :=_bg .GetNameVal (_gafa .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_cbfa {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gafa ,_ecda ,ErrRequiredAttributeMissing ;};_ecda ._ffgfd =_fbed ;};return _gafa ,_ecda ,nil ;};func (_fcff *PdfReader )newPdfAnnotationHighlightFromDict (_faf *_bg .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_becc :=PdfAnnotationHighlight {};
_fgbf ,_agfd :=_fcff .newPdfAnnotationMarkupFromDict (_faf );if _agfd !=nil {return nil ,_agfd ;};_becc .PdfAnnotationMarkup =_fgbf ;_becc .QuadPoints =_faf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_becc ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func _fgfde (_efgdd _bg .PdfObject )(*PdfColorspaceLab ,error ){_geee :=NewPdfColorspaceLab ();if _gbgdf ,_fgbb :=_efgdd .(*_bg .PdfIndirectObject );_fgbb {_geee ._gbcdg =_gbgdf ;};_efgdd =_bg .TraceToDirectObject (_efgdd );
_abccf ,_baga :=_efgdd .(*_bg .PdfObjectArray );if !_baga {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abccf .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_efgdd =_bg .TraceToDirectObject (_abccf .Get (0));_ccf ,_baga :=_efgdd .(*_bg .PdfObjectName );if !_baga {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_ccf !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_efgdd =_bg .TraceToDirectObject (_abccf .Get (1));_fggc ,_baga :=_efgdd .(*_bg .PdfObjectDictionary );
if !_baga {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_efgdd =_fggc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_efgdd =_bg .TraceToDirectObject (_efgdd );_beea ,_baga :=_efgdd .(*_bg .PdfObjectArray );if !_baga {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _beea .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bbad ,_dbdb :=_beea .GetAsFloat64Slice ();if _dbdb !=nil {return nil ,_dbdb ;};_geee .WhitePoint =_bbad ;_efgdd =_fggc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _efgdd !=nil {_efgdd =_bg .TraceToDirectObject (_efgdd );
_eebbd ,_eagb :=_efgdd .(*_bg .PdfObjectArray );if !_eagb {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _eebbd .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ccgb ,_aeccf :=_eebbd .GetAsFloat64Slice ();if _aeccf !=nil {return nil ,_aeccf ;};_geee .BlackPoint =_ccgb ;};_efgdd =_fggc .Get ("\u0052\u0061\u006eg\u0065");if _efgdd !=nil {_efgdd =_bg .TraceToDirectObject (_efgdd );_cegf ,_bbbb :=_efgdd .(*_bg .PdfObjectArray );
if !_bbbb {_fa .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cegf .Len ()!=4{_fa .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cebfe ,_ccca :=_cegf .GetAsFloat64Slice ();if _ccca !=nil {return nil ,_ccca ;};_geee .Range =_cebfe ;};return _geee ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_bbgc *PdfAction )GetContext ()PdfModel {if _bbgc ==nil {return nil ;};return _bbgc ._gd ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_afef *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dcag *PdfFontDescriptor )ToPdfObject ()_bg .PdfObject {_aebgg :=_bg .MakeDict ();if _dcag ._ffff ==nil {_dcag ._ffff =&_bg .PdfIndirectObject {};};_dcag ._ffff .PdfObject =_aebgg ;_aebgg .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dcag .FontName !=nil {_aebgg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dcag .FontName );};if _dcag .FontFamily !=nil {_aebgg .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dcag .FontFamily );};if _dcag .FontStretch !=nil {_aebgg .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dcag .FontStretch );
};if _dcag .FontWeight !=nil {_aebgg .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dcag .FontWeight );};if _dcag .Flags !=nil {_aebgg .Set ("\u0046\u006c\u0061g\u0073",_dcag .Flags );};if _dcag .FontBBox !=nil {_aebgg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dcag .FontBBox );
};if _dcag .ItalicAngle !=nil {_aebgg .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dcag .ItalicAngle );};if _dcag .Ascent !=nil {_aebgg .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dcag .Ascent );};if _dcag .Descent !=nil {_aebgg .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dcag .Descent );
};if _dcag .Leading !=nil {_aebgg .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dcag .Leading );};if _dcag .CapHeight !=nil {_aebgg .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dcag .CapHeight );};if _dcag .XHeight !=nil {_aebgg .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dcag .XHeight );
};if _dcag .StemV !=nil {_aebgg .Set ("\u0053\u0074\u0065m\u0056",_dcag .StemV );};if _dcag .StemH !=nil {_aebgg .Set ("\u0053\u0074\u0065m\u0048",_dcag .StemH );};if _dcag .AvgWidth !=nil {_aebgg .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dcag .AvgWidth );
};if _dcag .MaxWidth !=nil {_aebgg .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dcag .MaxWidth );};if _dcag .MissingWidth !=nil {_aebgg .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dcag .MissingWidth );};if _dcag .FontFile !=nil {_aebgg .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dcag .FontFile );
};if _dcag .FontFile2 !=nil {_aebgg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dcag .FontFile2 );};if _dcag .FontFile3 !=nil {_aebgg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dcag .FontFile3 );};if _dcag .CharSet !=nil {_aebgg .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dcag .CharSet );
};if _dcag .Style !=nil {_aebgg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dcag .FontName );};if _dcag .Lang !=nil {_aebgg .Set ("\u004c\u0061\u006e\u0067",_dcag .Lang );};if _dcag .FD !=nil {_aebgg .Set ("\u0046\u0044",_dcag .FD );};if _dcag .CIDSet !=nil {_aebgg .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dcag .CIDSet );
};return _dcag ._ffff ;};func _dcdcc ()*modelManager {_fbff :=modelManager {};_fbff ._feaa =map[PdfModel ]_bg .PdfObject {};_fbff ._cgccg =map[_bg .PdfObject ]PdfModel {};return &_fbff ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_dadcg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _acdd []float64 ;for _aefc :=0;_aefc < _dadcg .GetNumComponents ();_aefc ++{_acdd =append (_acdd ,0.0,1.0);};return _acdd ;};func _eace (_ebddg _bg .PdfObject )(*PdfFunctionType2 ,error ){_babac :=&PdfFunctionType2 {};
var _cgbff *_bg .PdfObjectDictionary ;if _dbdd ,_eafg :=_ebddg .(*_bg .PdfIndirectObject );_eafg {_bfab ,_ebbcg :=_dbdd .PdfObject .(*_bg .PdfObjectDictionary );if !_ebbcg {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_babac ._ebgdf =_dbdd ;_cgbff =_bfab ;}else if _aefgb ,_dddf :=_ebddg .(*_bg .PdfObjectDictionary );_dddf {_cgbff =_aefgb ;}else {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fa .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_cgbff .String ());
_gddde ,_gdff :=_bg .TraceToDirectObject (_cgbff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bg .PdfObjectArray );if !_gdff {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gddde .Len ()< 0||_gddde .Len ()%2!=0{_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_eeefg ,_gbca :=_gddde .ToFloat64Array ();if _gbca !=nil {return nil ,_gbca ;};_babac .Domain =_eeefg ;_gddde ,_gdff =_bg .TraceToDirectObject (_cgbff .Get ("\u0052\u0061\u006eg\u0065")).(*_bg .PdfObjectArray );if _gdff {if _gddde .Len ()< 0||_gddde .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cccg ,_fdggg :=_gddde .ToFloat64Array ();if _fdggg !=nil {return nil ,_fdggg ;};_babac .Range =_cccg ;};_gddde ,_gdff =_bg .TraceToDirectObject (_cgbff .Get ("\u0043\u0030")).(*_bg .PdfObjectArray );if _gdff {_dbdbf ,_dcdef :=_gddde .ToFloat64Array ();
if _dcdef !=nil {return nil ,_dcdef ;};_babac .C0 =_dbdbf ;};_gddde ,_gdff =_bg .TraceToDirectObject (_cgbff .Get ("\u0043\u0031")).(*_bg .PdfObjectArray );if _gdff {_bddgc ,_cafa :=_gddde .ToFloat64Array ();if _cafa !=nil {return nil ,_cafa ;};_babac .C1 =_bddgc ;
};if len (_babac .C0 )!=len (_babac .C1 ){_fa .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bg .ErrRangeError ;};N ,_gbca :=_bg .GetNumberAsFloat (_bg .TraceToDirectObject (_cgbff .Get ("\u004e")));
if _gbca !=nil {_fa .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_cgbff .String ());return nil ,_gbca ;};_babac .N =N ;
return _babac ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_adcc *PdfFunctionType0 )ToPdfObject ()_bg .PdfObject {if _adcc ._edfc ==nil {_adcc ._edfc =&_bg .PdfObjectStream {};};_ebcf :=_bg .MakeDict ();_ebcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bg .MakeInteger (0));
_bcfbc :=&_bg .PdfObjectArray {};for _ ,_gfefc :=range _adcc .Domain {_bcfbc .Append (_bg .MakeFloat (_gfefc ));};_ebcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bcfbc );_adec :=&_bg .PdfObjectArray {};for _ ,_cfedd :=range _adcc .Range {_adec .Append (_bg .MakeFloat (_cfedd ));
};_ebcf .Set ("\u0052\u0061\u006eg\u0065",_adec );_faec :=&_bg .PdfObjectArray {};for _ ,_gded :=range _adcc .Size {_faec .Append (_bg .MakeInteger (int64 (_gded )));};_ebcf .Set ("\u0053\u0069\u007a\u0065",_faec );_ebcf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bg .MakeInteger (int64 (_adcc .BitsPerSample )));
if _adcc .Order !=1{_ebcf .Set ("\u004f\u0072\u0064e\u0072",_bg .MakeInteger (int64 (_adcc .Order )));};_ebcf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_adcc ._ddbed ))));_adcc ._edfc .Stream =_adcc ._ddbed ;_adcc ._edfc .PdfObjectDictionary =_ebcf ;
return _adcc ._edfc ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_cg .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_cg .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_cg .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_edefg *PdfAppender ;_agbea *DSS ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bdbc *PdfInfo )AddCustomInfo (name string ,value string )error {if _bdbc ._eeac ==nil {_bdbc ._eeac =_bg .MakeDict ();};if _ ,_efad :=_cfda [name ];_efad {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_bdbc ._eeac .SetIfNotNil (*_bg .MakeName (name ),_bg .MakeString (value ));return nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_egfb *DSS )ToPdfObject ()_bg .PdfObject {_gfab :=_egfb ._gacab .PdfObject .(*_bg .PdfObjectDictionary );_gfab .Clear ();_fbbfe :=_bg .MakeDict ();for _agdd ,_ebaf :=range _egfb .VRI {_fbbfe .Set (*_bg .MakeName (_agdd ),_ebaf .ToPdfObject ());};
_gfab .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ccbfgb (_egfb .Certs ));_gfab .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ccbfgb (_egfb .OCSPs ));_gfab .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ccbfgb (_egfb .CRLs ));_gfab .Set ("\u0056\u0052\u0049",_fbbfe );
return _egfb ._gacab ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bebc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bebc .Base ==nil {return nil ,_fff .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bebc .Base .ColorToRGB (color );};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_bagfd :=&PdfPageResources {};_bagfd ._dcedc =_bg .MakeDict ();return _bagfd ;};

// ToPdfObject implements interface PdfModel.
func (_ageea *PdfFilespec )ToPdfObject ()_bg .PdfObject {_bfdc :=_ageea .getDict ();_bfdc .Clear ();_bfdc .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_bfdc .SetIfNotNil ("\u0046\u0053",_ageea .FS );
_bfdc .SetIfNotNil ("\u0046",_ageea .F );_bfdc .SetIfNotNil ("\u0055\u0046",_ageea .UF );_bfdc .SetIfNotNil ("\u0044\u004f\u0053",_ageea .DOS );_bfdc .SetIfNotNil ("\u004d\u0061\u0063",_ageea .Mac );_bfdc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ageea .Unix );
_bfdc .SetIfNotNil ("\u0049\u0044",_ageea .ID );_bfdc .SetIfNotNil ("\u0056",_ageea .V );_bfdc .SetIfNotNil ("\u0045\u0046",_ageea .EF );_bfdc .SetIfNotNil ("\u0052\u0046",_ageea .RF );_bfdc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ageea .Desc );_bfdc .SetIfNotNil ("\u0043\u0049",_ageea .CI );
return _ageea ._cdfaf ;};func (_fcfddb *PdfReader )newPdfPageFromDict (_eefg *_bg .PdfObjectDictionary )(*PdfPage ,error ){_adab :=NewPdfPage ();_adab ._fcbg =_eefg ;_gdddd :=*_eefg ;_bfaee ,_bfbgd :=_gdddd .Get ("\u0054\u0079\u0070\u0065").(*_bg .PdfObjectName );
if !_bfbgd {return nil ,_fff .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_bfaee !="\u0050\u0061\u0067\u0065"{return nil ,_fff .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _fedbb :=_gdddd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fedbb !=nil {_adab .Parent =_fedbb ;};if _gbcdgf :=_gdddd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gbcdgf !=nil {_bfdgf ,_aeegf :=_bg .GetString (_gbcdgf );
if !_aeegf {return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_facfe ,_gebgg :=NewPdfDate (_bfdgf .Str ());if _gebgg !=nil {return nil ,_gebgg ;};_adab .LastModified =&_facfe ;};if _ecadg :=_gdddd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ecadg !=nil &&!_bg .IsNullObject (_ecadg ){_cadeg ,_decea :=_bg .GetDict (_ecadg );
if !_decea {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ecadg );};var _acdfg error ;_adab .Resources ,_acdfg =NewPdfPageResourcesFromDict (_cadeg );
if _acdfg !=nil {return nil ,_acdfg ;};}else {_gfbfa ,_gfbba :=_adab .getParentResources ();if _gfbba !=nil {return nil ,_gfbba ;};if _gfbfa ==nil {_gfbfa =NewPdfPageResources ();};_adab .Resources =_gfbfa ;};if _dcaf :=_gdddd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_dcaf !=nil {_cfggf ,_aeeeg :=_bg .GetArray (_dcaf );if !_aeeeg {return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _afdg error ;
_adab .MediaBox ,_afdg =NewPdfRectangle (*_cfggf );if _afdg !=nil {return nil ,_afdg ;};};if _ccebaf :=_gdddd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ccebaf !=nil {_dbagf ,_feafc :=_bg .GetArray (_ccebaf );if !_feafc {return nil ,_fff .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gfag error ;_adab .CropBox ,_gfag =NewPdfRectangle (*_dbagf );if _gfag !=nil {return nil ,_gfag ;};};if _adgdg :=_gdddd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_adgdg !=nil {_dcgab ,_ggaf :=_bg .GetArray (_adgdg );if !_ggaf {return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _edefb error ;_adab .BleedBox ,_edefb =NewPdfRectangle (*_dcgab );if _edefb !=nil {return nil ,_edefb ;};};if _afgcd :=_gdddd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_afgcd !=nil {_afged ,_baagg :=_bg .GetArray (_afgcd );if !_baagg {return nil ,_fff .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _egdbc error ;_adab .TrimBox ,_egdbc =NewPdfRectangle (*_afged );if _egdbc !=nil {return nil ,_egdbc ;};};if _cadcg :=_gdddd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cadcg !=nil {_faegd ,_afad :=_bg .GetArray (_cadcg );if !_afad {return nil ,_fff .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cdde error ;_adab .ArtBox ,_cdde =NewPdfRectangle (*_faegd );if _cdde !=nil {return nil ,_cdde ;};};if _abacee :=_gdddd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_abacee !=nil {_adab .BoxColorInfo =_abacee ;};if _aadcf :=_gdddd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_aadcf !=nil {_adab .Contents =_aadcf ;};if _edcgf :=_gdddd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_edcgf !=nil {_bgce ,_ebaff :=_bg .GetInt (_edcgf );if !_ebaff {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eafgd :=int64 (*_bgce );_adab .Rotate =&_eafgd ;};if _gcadc :=_gdddd .Get ("\u0047\u0072\u006fu\u0070");_gcadc !=nil {_adab .Group =_gcadc ;};if _adbde :=_gdddd .Get ("\u0054\u0068\u0075m\u0062");_adbde !=nil {_adab .Thumb =_adbde ;};if _adgea :=_gdddd .Get ("\u0042");
_adgea !=nil {_adab .B =_adgea ;};if _edeec :=_gdddd .Get ("\u0044\u0075\u0072");_edeec !=nil {_adab .Dur =_edeec ;};if _cegcf :=_gdddd .Get ("\u0054\u0072\u0061n\u0073");_cegcf !=nil {_adab .Trans =_cegcf ;};if _bagc :=_gdddd .Get ("\u0041\u0041");_bagc !=nil {_adab .AA =_bagc ;
};if _bceeg :=_gdddd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bceeg !=nil {_adab .Metadata =_bceeg ;};if _dbeg :=_gdddd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dbeg !=nil {_adab .PieceInfo =_dbeg ;};if _bcbbb :=_gdddd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bcbbb !=nil {_adab .StructParents =_bcbbb ;};if _efefd :=_gdddd .Get ("\u0049\u0044");_efefd !=nil {_adab .ID =_efefd ;};if _afba :=_gdddd .Get ("\u0050\u005a");_afba !=nil {_adab .PZ =_afba ;};if _abdd :=_gdddd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_abdd !=nil {_adab .SeparationInfo =_abdd ;};if _feafg :=_gdddd .Get ("\u0054\u0061\u0062\u0073");_feafg !=nil {_adab .Tabs =_feafg ;};if _adbfb :=_gdddd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_adbfb !=nil {_adab .TemplateInstantiated =_adbfb ;};if _becd :=_gdddd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_becd !=nil {_adab .PresSteps =_becd ;};if _efbca :=_gdddd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_efbca !=nil {_adab .UserUnit =_efbca ;
};if _fdcae :=_gdddd .Get ("\u0056\u0050");_fdcae !=nil {_adab .VP =_fdcae ;};if _gagdg :=_gdddd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_gagdg !=nil {_adab .Annots =_gagdg ;};_adab ._cdbd =_fcfddb ;return _adab ,nil ;};func (_ggdd *PdfFont )baseFields ()*fontCommon {if _ggdd ._fcafc ==nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _ggdd ._fcafc .baseFields ();};

// SetImage updates XObject Image with new image data.
func (_aegcc *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_aegcc .Filter .UpdateParams (img .GetParamsDict ());_bebf ,_ddfcd :=_aegcc .Filter .EncodeBytes (img .Data );if _ddfcd !=nil {return _ddfcd ;};_aegcc .Stream =_bebf ;_gaff :=img .Width ;
_aegcc .Width =&_gaff ;_gcfaf :=img .Height ;_aegcc .Height =&_gcfaf ;_bdgda :=img .BitsPerComponent ;_aegcc .BitsPerComponent =&_bdgda ;if cs ==nil {if img .ColorComponents ==1{_aegcc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_aegcc .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_aegcc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_aegcc .ColorSpace =cs ;};return nil ;
};

// ToPdfObject implements interface PdfModel.
func (_egb *PdfActionResetForm )ToPdfObject ()_bg .PdfObject {_egb .PdfAction .ToPdfObject ();_gcc :=_egb ._gfd ;_cafg :=_gcc .PdfObject .(*_bg .PdfObjectDictionary );_cafg .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeResetForm )));_cafg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_egb .Fields );
_cafg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_egb .Flags );return _gcc ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bgdf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_dcda *PdfColorspaceSpecialIndexed )ToPdfObject ()_bg .PdfObject {_abag :=_bg .MakeArray (_bg .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_abag .Append (_dcda .Base .ToPdfObject ());_abag .Append (_bg .MakeInteger (int64 (_dcda .HiVal )));
_abag .Append (_dcda .Lookup );if _dcda ._cgefa !=nil {_dcda ._cgefa .PdfObject =_abag ;return _dcda ._cgefa ;};return _abag ;};func (_bbacf *PdfWriter )copyObjects (){_ccdfdb :=make (map[_bg .PdfObject ]_bg .PdfObject );_dabea :=make ([]_bg .PdfObject ,0,len (_bbacf ._fdeeb ));
_cdbag :=make (map[_bg .PdfObject ]struct{},len (_bbacf ._fdeeb ));_egggg :=make (map[_bg .PdfObject ]struct{});for _ ,_cdbg :=range _bbacf ._fdeeb {_gecgf :=_bbacf .copyObject (_cdbg ,_ccdfdb ,_egggg ,false );if _ ,_ffde :=_egggg [_cdbg ];_ffde {continue ;
};_dabea =append (_dabea ,_gecgf );_cdbag [_gecgf ]=struct{}{};};_bbacf ._fdeeb =_dabea ;_bbacf ._eccf =_cdbag ;_bbacf ._cedg =_bbacf .copyObject (_bbacf ._cedg ,_ccdfdb ,nil ,false ).(*_bg .PdfIndirectObject );_bbacf ._cdbe =_bbacf .copyObject (_bbacf ._cdbe ,_ccdfdb ,nil ,false ).(*_bg .PdfIndirectObject );
if _bbacf ._bbfcc !=nil {_bbacf ._bbfcc =_bbacf .copyObject (_bbacf ._bbfcc ,_ccdfdb ,nil ,false ).(*_bg .PdfIndirectObject );};if _bbacf ._efbcc {_aecaeee :=make (map[_bg .PdfObject ]int64 );for _gcbge ,_eeebb :=range _bbacf ._fgefc {if _aaeacf ,_agegg :=_ccdfdb [_gcbge ];
_agegg {_aecaeee [_aaeacf ]=_eeebb ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bbacf ._fgefc =_aecaeee ;};};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_afdbc *PdfFont )BytesToCharcodes (data []byte )[]_be .CharCode {_fa .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _abeaf ,_cgdaa :=_afdbc ._fcafc .(*pdfFontType0 );_cgdaa &&_abeaf ._fgccc !=nil {if _eggfg ,_adeade :=_abeaf .bytesToCharcodes (data );_adeade {return _eggfg ;};};_dgecc :=make ([]_be .CharCode ,0,len (data )+len (data )%2);if _afdbc .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _cbdb :=0;_cbdb < len (data );_cbdb +=2{_gbaf :=uint16 (data [_cbdb ])<<8|uint16 (data [_cbdb +1]);_dgecc =append (_dgecc ,_be .CharCode (_gbaf ));};}else {for _ ,_bdgae :=range data {_dgecc =append (_dgecc ,_be .CharCode (_bdgae ));
};};return _dgecc ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_bdeea *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _bdeea .UnderlyingCS .GetNumComponents ();};

// ToPdfObject implements interface PdfModel.
func (_bda *PdfAnnotationLink )ToPdfObject ()_bg .PdfObject {_bda .PdfAnnotation .ToPdfObject ();_baf :=_bda ._cdcf ;_cee :=_baf .PdfObject .(*_bg .PdfObjectDictionary );_cee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u004c\u0069\u006e\u006b"));
if _bda ._dbd !=nil &&_bda ._dbd ._gd !=nil {_cee .Set ("\u0041",_bda ._dbd ._gd .ToPdfObject ());}else if _bda .A !=nil {_cee .Set ("\u0041",_bda .A );};_cee .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bda .Dest );_cee .SetIfNotNil ("\u0048",_bda .H );_cee .SetIfNotNil ("\u0050\u0041",_bda .PA );
_cee .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bda .QuadPoints );_cee .SetIfNotNil ("\u0042\u0053",_bda .BS );return _baf ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_cgdbb *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffdg :=vals [0];if _ffdg < 0.0||_ffdg > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bfgf :=vals [1];if _bfgf < 0.0||_bfgf > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgaab :=vals [2];if _fgaab < 0.0||_fgaab > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fddf :=vals [3];if _fddf < 0.0||_fddf > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgeb :=NewPdfColorDeviceCMYK (_ffdg ,_bfgf ,_fgaab ,_fddf );return _bgeb ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_baffg *PdfFont )CharcodesToUnicode (charcodes []_be .CharCode )[]rune {_aeda ,_ ,_ :=_baffg .CharcodesToUnicodeWithStats (charcodes );return _aeda ;};func (_bcg *PdfReader )newPdfActionSubmitFormFromDict (_bdgg *_bg .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_egdf ,_efg :=_gdf (_bdgg .Get ("\u0046"));
if _efg !=nil {return nil ,_efg ;};return &PdfActionSubmitForm {F :_egdf ,Fields :_bdgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bdgg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _dbgb (_cgdbg *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cgdbg }};


// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_aeba *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dafcg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dafcg .MediaBox !=nil {return _dafcg .MediaBox ,nil ;};_eedfb :=_dafcg .Parent ;for _eedfb !=nil {_bcecf ,_begcc :=_bg .GetDict (_eedfb );if !_begcc {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fcfa :=_bcecf .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fcfa !=nil {_degc ,_facff :=_bg .GetArray (_fcfa );if !_facff {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_fcbb ,_ggffc :=NewPdfRectangle (*_degc );if _ggffc !=nil {return nil ,_ggffc ;};return _fcbb ,nil ;};_eedfb =_bcecf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fff .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_afga *Image )ColorAt (x ,y int )(_ge .Color ,error ){_fdcea :=_ggc .BytesPerLine (int (_afga .Width ),int (_afga .BitsPerComponent ),_afga .ColorComponents );switch _afga .ColorComponents {case 1:return _ggc .ColorAtGrayscale (x ,y ,int (_afga .BitsPerComponent ),_fdcea ,_afga .Data ,_afga ._bcfbf );
case 3:return _ggc .ColorAtNRGBA (x ,y ,int (_afga .Width ),_fdcea ,int (_afga .BitsPerComponent ),_afga .Data ,_afga ._gcfag ,_afga ._bcfbf );case 4:return _ggc .ColorAtCMYK (x ,y ,int (_afga .Width ),_afga .Data ,_afga ._bcfbf );};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_afga .ColorComponents ,_afga .BitsPerComponent );
return nil ,_fff .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// String returns a string describing the font descriptor.
func (_ecag *PdfFontDescriptor )String ()string {var _aace []string ;if _ecag .FontName !=nil {_aace =append (_aace ,_ecag .FontName .String ());};if _ecag .FontFamily !=nil {_aace =append (_aace ,_ecag .FontFamily .String ());};if _ecag .fontFile !=nil {_aace =append (_aace ,_ecag .fontFile .String ());
};if _ecag ._ebfd !=nil {_aace =append (_aace ,_ecag ._ebfd .String ());};_aace =append (_aace ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ecag .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ff .Join (_aace ,"\u002c\u0020"));
};var (_dfga =_aa .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_eaaeb =_aa .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_gdcc =_aa .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_acedg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ceac ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cbcd ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_edebb *PdfPageResources )SetXObjectFormByName (keyName _bg .PdfObjectName ,xform *XObjectForm )error {_eegf :=xform .ToPdfObject ().(*_bg .PdfObjectStream );_ggafa :=_edebb .SetXObjectByName (keyName ,_eegf );return _ggafa ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_dbee *PdfAppender )Write (w _ab .Writer )error {if _dbee ._dbaf {return _fff .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_cgge :=NewPdfWriter ();_ddad ,_dbca :=_bg .GetDict (_cgge ._bbadca );if !_dbca {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cgfc ,_dbca :=_ddad .Get ("\u004b\u0069\u0064\u0073").(*_bg .PdfObjectArray );if !_dbca {return _fff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ggbf ,_dbca :=_ddad .Get ("\u0043\u006f\u0075n\u0074").(*_bg .PdfObjectInteger );if !_dbca {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dafce :=_dbee ._dgfca ._gbgb ;_fdeb :=_dafce .GetTrailer ();if _fdeb ==nil {return _fff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_afb ,_dbca :=_bg .GetIndirect (_fdeb .Get ("\u0052\u006f\u006f\u0074"));
if !_dbca {return _fff .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gbff ,_dbca :=_bg .GetDict (_afb );if !_dbca {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_afb ,*_fdeb );
return _fff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_cabd :=range _gbff .Keys (){if _cgge ._gcff .Get (_cabd )==nil {_gaec :=_gbff .Get (_cabd );_cgge ._gcff .Set (_cabd ,_gaec );};};if _dbee ._egcb !=nil {_cgge ._gcff .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dbee ._egcb .ToPdfObject ());
_dbee .updateObjectsDeep (_dbee ._egcb .ToPdfObject (),nil );};if _dbee ._gaac !=nil {_dbee .updateObjectsDeep (_dbee ._gaac .ToPdfObject (),nil );_cgge ._gcff .Set ("\u0044\u0053\u0053",_dbee ._gaac .GetContainingPdfObject ());};if _cgge ._afee < 2{_cgge .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_cgge .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_dbee .addNewObject (_cgge ._cedg );_dbee .addNewObject (_cgge ._cdbe );_cebgb :=false ;if len (_dbee ._dgfca .PageList )!=len (_dbee ._dgec ){_cebgb =true ;}else {for _beee :=range _dbee ._dgfca .PageList {switch {case _dbee ._dgec [_beee ]==_dbee ._dgfca .PageList [_beee ]:case _dbee ._dgec [_beee ]==_dbee .Reader .PageList [_beee ]:default:_cebgb =true ;
};if _cebgb {break ;};};};if _cebgb {_dbee .updateObjectsDeep (_cgge ._bbadca ,nil );}else {_dbee ._faae [_cgge ._bbadca ]=struct{}{};};_cgge ._bbadca .ObjectNumber =_dbee .Reader ._aefa .ObjectNumber ;_dbee ._dafc [_cgge ._bbadca ]=_dbee .Reader ._aefa .ObjectNumber ;
_cebe :=[]_bg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_gebg :=range _dbee ._dgec {_bfff :=_gebg .ToPdfObject ();
*_ggbf =*_ggbf +1;if _gddb ,_cfdc :=_bfff .(*_bg .PdfIndirectObject );_cfdc &&_gddb .GetParser ()==_dbee ._dgfca ._gbgb {_cgfc .Append (&_gddb .PdfObjectReference );continue ;};if _dadc ,_eeag :=_bg .GetDict (_bfff );_eeag {_bcbe ,_ddeed :=_dadc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bg .PdfIndirectObject );
for _ddeed {_fa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bcbe );_bfdb ,_abb :=_bcbe .PdfObject .(*_bg .PdfObjectDictionary );if !_abb {return _fff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_acgf :=range _cebe {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_acgf );if _dadc .Get (_acgf )!=nil {_fa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _dagb :=_bfdb .Get (_acgf );_dagb !=nil {_fa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_acgf );_dadc .Set (_acgf ,_dagb );};};_bcbe ,_ddeed =_bfdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bg .PdfIndirectObject );
_fa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dadc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgge ._bbadca );};_dbee .updateObjectsDeep (_bfff ,nil );
_cgfc .Append (_bfff );};if _ ,_bcfb :=_dbee ._ebaa .Seek (0,_ab .SeekStart );_bcfb !=nil {return _bcfb ;};_cdgf :=make (map[SignatureHandler ]_ab .Writer );_edaee :=_bg .MakeArray ();for _ ,_dfed :=range _dbee ._egf {if _feda ,_edb :=_bg .GetIndirect (_dfed );
_edb {if _feed ,_fgg :=_feda .PdfObject .(*pdfSignDictionary );_fgg {_fgbfb :=*_feed ._gdagf ;var _adbd error ;_cdgf [_fgbfb ],_adbd =_fgbfb .NewDigest (_feed ._eecf );if _adbd !=nil {return _adbd ;};_edaee .Append (_bg .MakeInteger (0xfffff),_bg .MakeInteger (0xfffff));
};};};if _edaee .Len ()> 0{_edaee .Append (_bg .MakeInteger (0xfffff),_bg .MakeInteger (0xfffff));};for _ ,_fagd :=range _dbee ._egf {if _aecga ,_egag :=_bg .GetIndirect (_fagd );_egag {if _cad ,_dagc :=_aecga .PdfObject .(*pdfSignDictionary );_dagc {_cad .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_edaee );
};};};_aeeg :=len (_cdgf )> 0;var _gabe _ab .Reader =_dbee ._ebaa ;if _aeeg {_abeag :=make ([]_ab .Writer ,0,len (_cdgf ));for _ ,_agd :=range _cdgf {_abeag =append (_abeag ,_agd );};_gabe =_ab .TeeReader (_dbee ._ebaa ,_ab .MultiWriter (_abeag ...));};
_deeb ,_befe :=_ab .Copy (w ,_gabe );if _befe !=nil {return _befe ;};if len (_dbee ._egf )==0{return nil ;};_cgge ._accgd =_deeb ;_cgge .ObjNumOffset =_dbee ._bfef ;_cgge ._efbcc =true ;_cgge ._bddec =_dbee ._becb ;_cgge ._dgffd =_dbee ._eacce ;_cgge ._bfegf =_dbee ._dgce ;
_cgge ._ceced =_dbee ._dgfca .PdfVersion ().Minor ;_cgge ._fgefc =_dbee ._dafc ;_gfgg :=_dbee ._cgeb .GetXrefType ();if _gfgg !=nil {_faaf :=*_gfgg ==_bg .XrefTypeObjectStream ;_cgge ._fedaag =&_faaf ;};_cgge ._eccf =map[_bg .PdfObject ]struct{}{};_cgge ._fdeeb =[]_bg .PdfObject {};
for _ ,_dfdf :=range _dbee ._egf {if _ ,_aede :=_dbee ._faae [_dfdf ];_aede {continue ;};_cgge .addObject (_dfdf );};_fabb :=w ;if _aeeg {_fabb =_bb .NewBuffer (nil );};if _bgda :=_cgge .Write (_fabb );_bgda !=nil {return _bgda ;};if _aeeg {_bada :=_fabb .(*_bb .Buffer ).Bytes ();
_dadea :=_bg .MakeArray ();var _daag []*pdfSignDictionary ;var _cfgd int64 ;for _ ,_dgeg :=range _cgge ._fdeeb {if _cggb ,_ccgff :=_bg .GetIndirect (_dgeg );_ccgff {if _egfa ,_adcf :=_cggb .PdfObject .(*pdfSignDictionary );_adcf {_daag =append (_daag ,_egfa );
_cbcf :=_egfa ._gcdda +int64 (_egfa ._cebca );_dadea .Append (_bg .MakeInteger (_cfgd ),_bg .MakeInteger (_cbcf -_cfgd ));_cfgd =_egfa ._gcdda +int64 (_egfa ._efefbg );};};};_dadea .Append (_bg .MakeInteger (_cfgd ),_bg .MakeInteger (_deeb +int64 (len (_bada ))-_cfgd ));
_bfdd :=[]byte (_dadea .WriteString ());for _ ,_cfeb :=range _daag {_ecee :=int (_cfeb ._gcdda -_deeb );for _abafc :=_cfeb ._ceff ;_abafc < _cfeb ._deaaa ;_abafc ++{_bada [_ecee +_abafc ]=' ';};_egffd :=_bada [_ecee +_cfeb ._ceff :_ecee +_cfeb ._deaaa ];
copy (_egffd ,_bfdd );};var _aag int ;for _ ,_eadf :=range _daag {_acc :=int (_eadf ._gcdda -_deeb );_fcgg :=_bada [_aag :_acc +_eadf ._cebca ];_bffc :=*_eadf ._gdagf ;_cdgf [_bffc ].Write (_fcgg );_aag =_acc +_eadf ._efefbg ;};for _ ,_bdcd :=range _daag {_dcbdf :=_bada [_aag :];
_ffgf :=*_bdcd ._gdagf ;_cdgf [_ffgf ].Write (_dcbdf );};for _ ,_egbc :=range _daag {_adag :=int (_egbc ._gcdda -_deeb );_agfa :=*_egbc ._gdagf ;_bdbf :=_cdgf [_agfa ];if _aadg :=_agfa .Sign (_egbc ._eecf ,_bdbf );_aadg !=nil {return _aadg ;};_egbc ._eecf .ByteRange =_dadea ;
_cbac :=[]byte (_egbc ._eecf .Contents .WriteString ());for _dfad :=_egbc ._ceff ;_dfad < _egbc ._deaaa ;_dfad ++{_bada [_adag +_dfad ]=' ';};for _ceaf :=_egbc ._cebca ;_ceaf < _egbc ._efefbg ;_ceaf ++{_bada [_adag +_ceaf ]=' ';};_aef :=_bada [_adag +_egbc ._ceff :_adag +_egbc ._deaaa ];
copy (_aef ,_bfdd );_aef =_bada [_adag +_egbc ._cebca :_adag +_egbc ._efefbg ];copy (_aef ,_cbac );};_gdab :=_bb .NewBuffer (_bada );_ ,_befe =_ab .Copy (w ,_gdab );if _befe !=nil {return _befe ;};};_dbee ._dbaf =true ;return nil ;};func _defc (_ffcca *_bg .PdfObjectStream )(*PdfFunctionType4 ,error ){_fecef :=&PdfFunctionType4 {};
_fecef ._daeb =_ffcca ;_ecgcf :=_ffcca .PdfObjectDictionary ;_ababf ,_gcaf :=_bg .TraceToDirectObject (_ecgcf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bg .PdfObjectArray );if !_gcaf {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ababf .Len ()%2!=0{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gacce ,_fecdf :=_ababf .ToFloat64Array ();if _fecdf !=nil {return nil ,_fecdf ;};_fecef .Domain =_gacce ;_ababf ,_gcaf =_bg .TraceToDirectObject (_ecgcf .Get ("\u0052\u0061\u006eg\u0065")).(*_bg .PdfObjectArray );
if _gcaf {if _ababf .Len ()< 0||_ababf .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cedac ,_ddgae :=_ababf .ToFloat64Array ();if _ddgae !=nil {return nil ,_ddgae ;};_fecef .Range =_cedac ;
};_cfgff ,_fecdf :=_bg .DecodeStream (_ffcca );if _fecdf !=nil {return nil ,_fecdf ;};_fecef ._gdcde =_cfgff ;_edbc :=_ffg .NewPSParser (_cfgff );_feega ,_fecdf :=_edbc .Parse ();if _fecdf !=nil {return nil ,_fecdf ;};_fecef .Program =_feega ;return _fecef ,nil ;
};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gcbgf *PdfPage )GetPageDict ()*_bg .PdfObjectDictionary {_bedb :=_gcbgf ._fcbg ;_bedb .Clear ();_bedb .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0050\u0061\u0067\u0065"));_bedb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcbgf .Parent );
if _gcbgf .LastModified !=nil {_bedb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gcbgf .LastModified .ToPdfObject ());};if _gcbgf .Resources !=nil {_bedb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gcbgf .Resources .ToPdfObject ());
};if _gcbgf .CropBox !=nil {_bedb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gcbgf .CropBox .ToPdfObject ());};if _gcbgf .MediaBox !=nil {_bedb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gcbgf .MediaBox .ToPdfObject ());};if _gcbgf .BleedBox !=nil {_bedb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gcbgf .BleedBox .ToPdfObject ());
};if _gcbgf .TrimBox !=nil {_bedb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gcbgf .TrimBox .ToPdfObject ());};if _gcbgf .ArtBox !=nil {_bedb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gcbgf .ArtBox .ToPdfObject ());};_bedb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gcbgf .BoxColorInfo );
_bedb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gcbgf .Contents );if _gcbgf .Rotate !=nil {_bedb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bg .MakeInteger (*_gcbgf .Rotate ));};_bedb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gcbgf .Group );
_bedb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gcbgf .Thumb );_bedb .SetIfNotNil ("\u0042",_gcbgf .B );_bedb .SetIfNotNil ("\u0044\u0075\u0072",_gcbgf .Dur );_bedb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gcbgf .Trans );_bedb .SetIfNotNil ("\u0041\u0041",_gcbgf .AA );
_bedb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gcbgf .Metadata );_bedb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gcbgf .PieceInfo );_bedb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gcbgf .StructParents );
_bedb .SetIfNotNil ("\u0049\u0044",_gcbgf .ID );_bedb .SetIfNotNil ("\u0050\u005a",_gcbgf .PZ );_bedb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gcbgf .SeparationInfo );_bedb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gcbgf .Tabs );
_bedb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gcbgf .TemplateInstantiated );_bedb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gcbgf .PresSteps );_bedb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gcbgf .UserUnit );
_bedb .SetIfNotNil ("\u0056\u0050",_gcbgf .VP );if _gcbgf ._facgg !=nil {_gffbg :=_bg .MakeArray ();for _ ,_face :=range _gcbgf ._facgg {if _dgcf :=_face .GetContext ();_dgcf !=nil {_gffbg .Append (_dgcf .ToPdfObject ());}else {_gffbg .Append (_face .ToPdfObject ());
};};if _gffbg .Len ()> 0{_bedb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gffbg );};}else if _gcbgf .Annots !=nil {_bedb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gcbgf .Annots );};return _bedb ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bg .PdfObjectName ;Colorants _bg .PdfObject ;Process _bg .PdfObject ;MixingHints _bg .PdfObject ;_dgebb *_bg .PdfIndirectObject ;};func (_gdfa *PdfReader )newPdfAnnotationMarkupFromDict (_fgcg *_bg .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dbf :=&PdfAnnotationMarkup {};
if _cgbd :=_fgcg .Get ("\u0054");_cgbd !=nil {_dbf .T =_cgbd ;};if _fce :=_fgcg .Get ("\u0050\u006f\u0070u\u0070");_fce !=nil {_debg ,_dgfc :=_fce .(*_bg .PdfIndirectObject );if !_dgfc {if _ ,_ccae :=_fce .(*_bg .PdfObjectNull );!_ccae {return nil ,_fff .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_fbgfa ,_bee :=_gdfa .newPdfAnnotationFromIndirectObject (_debg );if _bee !=nil {return nil ,_bee ;};if _fbgfa !=nil {_efbb ,_adgf :=_fbgfa ._dcf .(*PdfAnnotationPopup );if !_adgf {return nil ,_fff .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dbf .Popup =_efbb ;};};};if _cfee :=_fgcg .Get ("\u0043\u0041");_cfee !=nil {_dbf .CA =_cfee ;};if _egca :=_fgcg .Get ("\u0052\u0043");_egca !=nil {_dbf .RC =_egca ;};if _eeg :=_fgcg .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_eeg !=nil {_dbf .CreationDate =_eeg ;};if _gdbg :=_fgcg .Get ("\u0049\u0052\u0054");_gdbg !=nil {_dbf .IRT =_gdbg ;};if _gecb :=_fgcg .Get ("\u0053\u0075\u0062\u006a");_gecb !=nil {_dbf .Subj =_gecb ;};if _ggcf :=_fgcg .Get ("\u0052\u0054");_ggcf !=nil {_dbf .RT =_ggcf ;
};if _gbgd :=_fgcg .Get ("\u0049\u0054");_gbgd !=nil {_dbf .IT =_gbgd ;};if _aabba :=_fgcg .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_aabba !=nil {_dbf .ExData =_aabba ;};return _dbf ,nil ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;
ButtonTypeRadio ButtonType =iota ;);

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfAnnotationCaret )ToPdfObject ()_bg .PdfObject {_ddf .PdfAnnotation .ToPdfObject ();_abe :=_ddf ._cdcf ;_afe :=_abe .PdfObject .(*_bg .PdfObjectDictionary );_ddf .PdfAnnotationMarkup .appendToPdfDictionary (_afe );_afe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0043\u0061\u0072e\u0074"));
_afe .SetIfNotNil ("\u0052\u0044",_ddf .RD );_afe .SetIfNotNil ("\u0053\u0079",_ddf .Sy );return _abe ;};func (_gdfd *LTV )getCRLs (_faefc []*_b .Certificate )([][]byte ,error ){_badgd :=make ([][]byte ,0,len (_faefc ));for _ ,_fgafg :=range _faefc {for _ ,_gffg :=range _fgafg .CRLDistributionPoints {if _gdfd .CertClient .IsCA (_fgafg ){continue ;
};_baabe ,_efbad :=_gdfd .CRLClient .MakeRequest (_gffg ,_fgafg );if _efbad !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_efbad );continue ;
};_badgd =append (_badgd ,_baabe );};};return _badgd ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_gabdf *PdfAcroForm )AllFields ()[]*PdfField {if _gabdf ==nil {return nil ;};var _gcdc []*PdfField ;if _gabdf .Fields !=nil {for _ ,_dbff :=range *_gabdf .Fields {_gcdc =append (_gcdc ,_dgbf (_dbff )...);};};return _gcdc ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bg .PdfObject ;IC _bg .PdfObject ;BE _bg .PdfObject ;RD _bg .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gfeea *PdfSignature )GetContainingPdfObject ()_bg .PdfObject {return _gfeea ._gbaa };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_dbeeb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_dbeeb .ToPdfOutline ().PdfOutlineTreeNode ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_faggf *PdfPageResources )SetXObjectImageByName (keyName _bg .PdfObjectName ,ximg *XObjectImage )error {_gceaf :=ximg .ToPdfObject ().(*_bg .PdfObjectStream );_becaa :=_faggf .SetXObjectByName (keyName ,_gceaf );return _becaa ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_agfec *PdfReader )GetPageLabels ()(_bg .PdfObject ,error ){_caffe :=_bg .ResolveReference (_agfec ._daagd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _caffe ==nil {return nil ,nil ;};if !_agfec ._aaeef {_dacbf :=_agfec .traverseObjectData (_caffe );
if _dacbf !=nil {return nil ,_dacbf ;};};return _caffe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcc *PdfActionImportData )ToPdfObject ()_bg .PdfObject {_fcc .PdfAction .ToPdfObject ();_egg :=_fcc ._gfd ;_ede :=_egg .PdfObject .(*_bg .PdfObjectDictionary );_ede .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeImportData )));if _fcc .F !=nil {_ede .Set ("\u0046",_fcc .F .ToPdfObject ());
};return _egg ;};

// Val returns the color value.
func (_aebg *PdfColorDeviceGray )Val ()float64 {return float64 (*_aebg )};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_afgbb *PdfReader )buildOutlineTree (_fbgg _bg .PdfObject ,_geceb *PdfOutlineTreeNode ,_gcbgcd *PdfOutlineTreeNode ,_fgga map[_bg .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _fgga ==nil {_fgga =map[_bg .PdfObject ]struct{}{};
};_fgga [_fbgg ]=struct{}{};_becbc ,_gffc :=_fbgg .(*_bg .PdfIndirectObject );if !_gffc {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fbgg );
};_efadf ,_cgceb :=_becbc .PdfObject .(*_bg .PdfObjectDictionary );if !_cgceb {return nil ,nil ,_fff .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_efadf ,_becbc ,_becbc );
if _bggafb :=_efadf .Get ("\u0054\u0069\u0074l\u0065");_bggafb !=nil {_bcafa ,_cefa :=_afgbb .newPdfOutlineItemFromIndirectObject (_becbc );if _cefa !=nil {return nil ,nil ,_cefa ;};_bcafa .Parent =_geceb ;_bcafa .Prev =_gcbgcd ;_cdbdd :=_bg .ResolveReference (_efadf .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_gfbff :=_fgga [_cdbdd ];_cdbdd !=nil &&_cdbdd !=_becbc &&!_gfbff {if !_bg .IsNullObject (_cdbdd ){_egedb ,_dfcb ,_ccaga :=_afgbb .buildOutlineTree (_cdbdd ,&_bcafa .PdfOutlineTreeNode ,nil ,_fgga );if _ccaga !=nil {_fa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ccaga );
}else {_bcafa .First =_egedb ;_bcafa .Last =_dfcb ;};};};_bfcaf :=_bg .ResolveReference (_efadf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_caaaa :=_fgga [_bfcaf ];_bfcaf !=nil &&_bfcaf !=_becbc &&!_caaaa {if !_bg .IsNullObject (_bfcaf ){_cgbfb ,_fbgd ,_ccdae :=_afgbb .buildOutlineTree (_bfcaf ,_geceb ,&_bcafa .PdfOutlineTreeNode ,_fgga );
if _ccdae !=nil {_fa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ccdae );
}else {_bcafa .Next =_cgbfb ;return &_bcafa .PdfOutlineTreeNode ,_fbgd ,nil ;};};};return &_bcafa .PdfOutlineTreeNode ,&_bcafa .PdfOutlineTreeNode ,nil ;};_fagg ,_ddeea :=_acgag (_becbc );if _ddeea !=nil {return nil ,nil ,_ddeea ;};_fagg .Parent =_geceb ;
if _egdbb :=_efadf .Get ("\u0046\u0069\u0072s\u0074");_egdbb !=nil {_egdbb =_bg .ResolveReference (_egdbb );if _ ,_cegcd :=_fgga [_egdbb ];_egdbb !=nil &&_egdbb !=_becbc &&!_cegcd {_baddf :=_bg .TraceToDirectObject (_egdbb );if _ ,_cebcb :=_baddf .(*_bg .PdfObjectNull );
!_cebcb &&_baddf !=nil {_dfgc ,_dbdc ,_egcef :=_afgbb .buildOutlineTree (_egdbb ,&_fagg .PdfOutlineTreeNode ,nil ,_fgga );if _egcef !=nil {_fa .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_egcef );
}else {_fagg .First =_dfgc ;_fagg .Last =_dbdc ;};};};};return &_fagg .PdfOutlineTreeNode ,&_fagg .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aee *PdfAnnotationLine )ToPdfObject ()_bg .PdfObject {_aee .PdfAnnotation .ToPdfObject ();_adgg :=_aee ._cdcf ;_ecfbg :=_adgg .PdfObject .(*_bg .PdfObjectDictionary );_aee .PdfAnnotationMarkup .appendToPdfDictionary (_ecfbg );_ecfbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u004c\u0069\u006e\u0065"));
_ecfbg .SetIfNotNil ("\u004c",_aee .L );_ecfbg .SetIfNotNil ("\u0042\u0053",_aee .BS );_ecfbg .SetIfNotNil ("\u004c\u0045",_aee .LE );_ecfbg .SetIfNotNil ("\u0049\u0043",_aee .IC );_ecfbg .SetIfNotNil ("\u004c\u004c",_aee .LL );_ecfbg .SetIfNotNil ("\u004c\u004c\u0045",_aee .LLE );
_ecfbg .SetIfNotNil ("\u0043\u0061\u0070",_aee .Cap );_ecfbg .SetIfNotNil ("\u0049\u0054",_aee .IT );_ecfbg .SetIfNotNil ("\u004c\u004c\u004f",_aee .LLO );_ecfbg .SetIfNotNil ("\u0043\u0050",_aee .CP );_ecfbg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aee .Measure );
_ecfbg .SetIfNotNil ("\u0043\u004f",_aee .CO );return _adgg ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gfbca *modelManager )GetPrimitiveFromModel (model PdfModel )_bg .PdfObject {_dfacg ,_fedd :=_gfbca ._feaa [model ];if !_fedd {return nil ;};return _dfacg ;};func (_ageb *PdfReader )newPdfFieldFromIndirectObject (_bac *_bg .PdfIndirectObject ,_dcad *PdfField )(*PdfField ,error ){if _dcbgd ,_cbgea :=_ageb ._dgaed .GetModelFromPrimitive (_bac ).(*PdfField );
_cbgea {return _dcbgd ,nil ;};_fgaaed ,_fecg :=_bg .GetDict (_bac );if !_fecg {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fccbc :=NewPdfField ();_fccbc ._bggaa =_bac ;_fccbc ._bggaa .PdfObject =_fgaaed ;if _aeea ,_aeeb :=_bg .GetName (_fgaaed .Get ("\u0046\u0054"));_aeeb {_fccbc .FT =_aeea ;};if _dcad !=nil {_fccbc .Parent =_dcad ;};_fccbc .T ,_ =_fgaaed .Get ("\u0054").(*_bg .PdfObjectString );
_fccbc .TU ,_ =_fgaaed .Get ("\u0054\u0055").(*_bg .PdfObjectString );_fccbc .TM ,_ =_fgaaed .Get ("\u0054\u004d").(*_bg .PdfObjectString );_fccbc .Ff ,_ =_fgaaed .Get ("\u0046\u0066").(*_bg .PdfObjectInteger );_fccbc .V =_fgaaed .Get ("\u0056");_fccbc .DV =_fgaaed .Get ("\u0044\u0056");
_fccbc .AA =_fgaaed .Get ("\u0041\u0041");_caega :=_fccbc .FT ;if _caega ==nil &&_dcad !=nil {_caega =_dcad .FT ;};if _caega !=nil {switch *_caega {case "\u0054\u0078":_gea ,_ceaac :=_afbg (_fgaaed );if _ceaac !=nil {return nil ,_ceaac ;};_gea .PdfField =_fccbc ;
_fccbc ._ccgd =_gea ;case "\u0043\u0068":_bgab ,_acfd :=_beeg (_fgaaed );if _acfd !=nil {return nil ,_acfd ;};_bgab .PdfField =_fccbc ;_fccbc ._ccgd =_bgab ;case "\u0042\u0074\u006e":_agbf ,_gcea :=_agdg (_fgaaed );if _gcea !=nil {return nil ,_gcea ;};
_agbf .PdfField =_fccbc ;_fccbc ._ccgd =_agbf ;case "\u0053\u0069\u0067":_bbab ,_aebgb :=_ageb .newPdfFieldSignatureFromDict (_fgaaed );if _aebgb !=nil {return nil ,_aebgb ;};_bbab .PdfField =_fccbc ;_fccbc ._ccgd =_bbab ;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_fccbc .FT );
return nil ,_fff .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _dadff ,_bcgff :=_bg .GetName (_fgaaed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bcgff {if *_dadff =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bdga ,_ecbec :=_ageb .newPdfAnnotationFromIndirectObject (_bac );
if _ecbec !=nil {return nil ,_ecbec ;};_caffc ,_gaef :=_bdga .GetContext ().(*PdfAnnotationWidget );if !_gaef {return nil ,_fff .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_caffc ._ddgba =_fccbc ;_caffc .Parent =_fccbc ._bggaa ;_fccbc .Annotations =append (_fccbc .Annotations ,_caffc );return _fccbc ,nil ;};};_cbbg :=true ;if _bfge ,_caab :=_bg .GetArray (_fgaaed .Get ("\u004b\u0069\u0064\u0073"));_caab {_gebf :=make ([]*_bg .PdfIndirectObject ,0,_bfge .Len ());
for _ ,_afca :=range _bfge .Elements (){_cgcd ,_eadcg :=_bg .GetIndirect (_afca );if !_eadcg {_bbbc ,_dacb :=_bg .GetStream (_afca );if _dacb &&_bbbc .PdfObjectDictionary !=nil {_abefb ,_ccbecd :=_bg .GetNameVal (_bbbc .Get ("\u0054\u0079\u0070\u0065"));
if _ccbecd &&_abefb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fa .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fff .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_dcef ,_adge :=_bg .GetDict (_cgcd );
if !_adge {return nil ,ErrTypeCheck ;};if _cbbg {_cbbg =!_bafc (_dcef );};_gebf =append (_gebf ,_cgcd );};for _ ,_acgbf :=range _gebf {if _cbbg {_cfbg ,_dbfc :=_ageb .newPdfAnnotationFromIndirectObject (_acgbf );if _dbfc !=nil {_fa .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dbfc );
return nil ,_dbfc ;};_cgca ,_eagd :=_cfbg ._dcf .(*PdfAnnotationWidget );if !_eagd {return nil ,ErrTypeCheck ;};_cgca ._ddgba =_fccbc ;_fccbc .Annotations =append (_fccbc .Annotations ,_cgca );}else {_fbaa ,_egeb :=_ageb .newPdfFieldFromIndirectObject (_acgbf ,_fccbc );
if _egeb !=nil {_fa .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_egeb );return nil ,_egeb ;};_fccbc .Kids =append (_fccbc .Kids ,_fbaa );
};};};return _fccbc ,nil ;};func (_fgbe *PdfReader )newPdfActionGotoRFromDict (_edae *_bg .PdfObjectDictionary )(*PdfActionGoToR ,error ){_gec ,_fgc :=_gdf (_edae .Get ("\u0046"));if _fgc !=nil {return nil ,_fgc ;};return &PdfActionGoToR {D :_edae .Get ("\u0044"),NewWindow :_edae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gec },nil ;
};func _abebb (_aefbe _bg .PdfObject )(*PdfPattern ,error ){_aabd :=&PdfPattern {};var _dfbfc *_bg .PdfObjectDictionary ;if _cceda ,_gfeeb :=_bg .GetIndirect (_aefbe );_gfeeb {_aabd ._ededfe =_cceda ;_fafd ,_eeae :=_cceda .PdfObject .(*_bg .PdfObjectDictionary );
if !_eeae {_fa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cceda .PdfObject );
return nil ,_bg .ErrTypeError ;};_dfbfc =_fafd ;}else if _decec ,_gdafc :=_bg .GetStream (_aefbe );_gdafc {_aabd ._ededfe =_decec ;_dfbfc =_decec .PdfObjectDictionary ;}else {_fa .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_aefbe );
return nil ,_bg .ErrTypeError ;};_dcada :=_dfbfc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _dcada ==nil {_fa .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cgeef ,_aagd :=_dcada .(*_bg .PdfObjectInteger );if !_aagd {_fa .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dcada );
return nil ,_bg .ErrTypeError ;};if *_cgeef !=1&&*_cgeef !=2{_fa .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_cgeef );return nil ,_bg .ErrRangeError ;
};_aabd .PatternType =int64 (*_cgeef );switch *_cgeef {case 1:_gfafa ,_ffdb :=_ffdgf (_dfbfc );if _ffdb !=nil {return nil ,_ffdb ;};_gfafa .PdfPattern =_aabd ;_aabd ._eddc =_gfafa ;return _aabd ,nil ;case 2:_fgca ,_ddefd :=_abfa (_dfbfc );if _ddefd !=nil {return nil ,_ddefd ;
};_fgca .PdfPattern =_aabd ;_aabd ._eddc =_fgca ;return _aabd ,nil ;};return nil ,_fff .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _fcccc (_fffag _bg .PdfObject )(string ,error ){_fffag =_bg .TraceToDirectObject (_fffag );
switch _ffeg :=_fffag .(type ){case *_bg .PdfObjectString :return _ffeg .Str (),nil ;case *_bg .PdfObjectStream :_gage ,_ccbfg :=_bg .DecodeStream (_ffeg );if _ccbfg !=nil {return "",_ccbfg ;};return string (_gage ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fffag );
};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bg .PdfObject ;GetContainingPdfObject ()_bg .PdfObject ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_dabg *PdfAppender )UpdateObject (obj _bg .PdfObject ){_dabg .replaceObject (obj ,obj );if _ ,_abda :=_dabg ._geb [obj ];!_abda {_dabg ._egf =append (_dabg ._egf ,obj );_dabg ._geb [obj ]=struct{}{};};};func (_fbbc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};


// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bdda *PdfReader )Decrypt (password []byte )(bool ,error ){_gfcfc ,_efcg :=_bdda ._gbgb .Decrypt (password );if _efcg !=nil {return false ,_efcg ;};if !_gfcfc {return false ,nil ;};_efcg =_bdda .loadStructure ();if _efcg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_efcg );
return false ,_efcg ;};return true ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_dceae *LTV )EnableByName (name string ,extraCerts []*_b .Certificate )error {_adecd :=_dceae ._edefg ._dgfca .AcroForm ;for _ ,_fgdcg :=range _adecd .AllFields (){_bfegb ,_ :=_fgdcg .GetContext ().(*PdfFieldSignature );if _bfegb ==nil {continue ;
};if _cddaag :=_bfegb .PartialName ();_cddaag !=name {continue ;};return _dceae .Enable (_bfegb .V ,extraCerts );};return nil ;};func _ffacb (_fbgfd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_dccge ,_egaa :=_bg .GetDict (_fbgfd .AP );if !_egaa {return nil ,nil ,_fff .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _dccge ==nil {return nil ,nil ,nil ;};_fccbe ,_egaa :=_bg .GetArray (_fbgfd .Rect );if !_egaa ||_fccbe .Len ()!=4{return nil ,nil ,_fff .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fcga ,_cdfb :=NewPdfRectangle (*_fccbe );
if _cdfb !=nil {return nil ,nil ,_cdfb ;};_fceb :=_bg .TraceToDirectObject (_dccge .Get ("\u004e"));switch _eacae :=_fceb .(type ){case *_bg .PdfObjectStream :_gfff :=_eacae ;_afcc ,_ccbae :=NewXObjectFormFromStream (_gfff );return _afcc ,_fcga ,_ccbae ;
case *_bg .PdfObjectDictionary :_gfdg :=_eacae ;_cfdd ,_daec :=_bg .GetName (_fbgfd .AS );if !_daec {return nil ,nil ,nil ;};if _gfdg .Get (*_cfdd )==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_ddde ,_daec :=_bg .GetStream (_gfdg .Get (*_cfdd ));if !_daec {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cfdd );
return nil ,nil ,_fff .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fgcb ,_ddddd :=NewXObjectFormFromStream (_ddde );return _fgcb ,_fcga ,_ddddd ;};_fa .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fceb );
return nil ,nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func _agcga (_fdgb *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fdgb }};

// ToPdfObject implements interface PdfModel.
func (_fdc *PdfActionTrans )ToPdfObject ()_bg .PdfObject {_fdc .PdfAction .ToPdfObject ();_gff :=_fdc ._gfd ;_fee :=_gff .PdfObject .(*_bg .PdfObjectDictionary );_fee .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeTrans )));_fee .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fdc .Trans );
return _gff ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fgddg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fgddg ._fcafc .getFontDescriptor (),nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_efed *PdfAnnotation )GetContainingPdfObject ()_bg .PdfObject {return _efed ._cdcf };func (_abbfde *PdfWriter )writeBytes (_efeec []byte ){if _abbfde ._aafea !=nil {return ;};_ggdgd ,_gfcd :=_abbfde ._gbdcg .Write (_efeec );_abbfde ._dbfbf +=int64 (_ggdgd );
_abbfde ._aafea =_gfcd ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_ffcbb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_ffcbb .Mask ()&^fl .Mask ())};func (_bbdac *PdfReader )flattenFieldsWithOpts (_dbab bool ,_gfbab FieldAppearanceGenerator ,_ebfg *FieldFlattenOpts )error {if _ebfg ==nil {_ebfg =&FieldFlattenOpts {};
};var _bgdg bool ;_aaeacc :=map[*PdfAnnotation ]bool {};{var _fbac []*PdfField ;_ceda :=_bbdac .AcroForm ;if _ceda !=nil {if _ebfg .FilterFunc !=nil {_fbac =_ceda .filteredFields (_ebfg .FilterFunc ,true );_bgdg =_ceda .Fields !=nil &&len (*_ceda .Fields )> 0;
}else {_fbac =_ceda .AllFields ();};};for _ ,_eeee :=range _fbac {for _ ,_afefe :=range _eeee .Annotations {_aaeacc [_afefe .PdfAnnotation ]=_eeee .V !=nil ;if _gfbab !=nil {_ccgcc ,_gfbe :=_gfbab .GenerateAppearanceDict (_ceda ,_eeee ,_afefe );if _gfbe !=nil {return _gfbe ;
};_afefe .AP =_ccgcc ;};};};};if _dbab {for _ ,_fcdg :=range _bbdac .PageList {_eeeac ,_caag :=_fcdg .GetAnnotations ();if _caag !=nil {return _caag ;};for _ ,_ebbg :=range _eeeac {_aaeacc [_ebbg ]=true ;};};};for _ ,_bcfg :=range _bbdac .PageList {var _bbdbc []*PdfAnnotation ;
if _gfbab !=nil {if _ffab :=_gfbab .WrapContentStream (_bcfg );_ffab !=nil {return _ffab ;};};_ebdd ,_ceebb :=_bcfg .GetAnnotations ();if _ceebb !=nil {return _ceebb ;};for _ ,_edac :=range _ebdd {_ecec ,_dfeea :=_aaeacc [_edac ];if !_dfeea &&_ebfg .AnnotFilterFunc !=nil {if _ ,_gfbg :=_edac .GetContext ().(*PdfAnnotationWidget );
!_gfbg {_dfeea =_ebfg .AnnotFilterFunc (_edac );};};if !_dfeea {_bbdbc =append (_bbdbc ,_edac );continue ;};switch _edac .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dcfgg ,_ceab ,_beegg :=_ffacb (_edac );if _beegg !=nil {if !_ecec {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_beegg );
continue ;};if _dcfgg ==nil {continue ;};_gegde :=_bcfg .Resources .GenerateXObjectName ();_bcfg .Resources .SetXObjectFormByName (_gegde ,_dcfgg );_dcfa :=_dc .Min (_ceab .Llx ,_ceab .Urx );_bded :=_dc .Min (_ceab .Lly ,_ceab .Ury );var _efaf []string ;
_efaf =append (_efaf ,"\u0071");_efaf =append (_efaf ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_dcfa ,_bded ));
_efaf =append (_efaf ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gegde .String ()));_efaf =append (_efaf ,"\u0051");_ceba :=_ff .Join (_efaf ,"\u000a");_beegg =_bcfg .AppendContentStream (_ceba );if _beegg !=nil {return _beegg ;};if _dcfgg .Resources !=nil {_cacec ,_ffge :=_bg .GetDict (_dcfgg .Resources .Font );
if _ffge {for _ ,_aaab :=range _cacec .Keys (){if !_bcfg .Resources .HasFontByName (_aaab ){_bcfg .Resources .SetFontByName (_aaab ,_cacec .Get (_aaab ));};};};};};if len (_bbdbc )> 0{_bcfg ._facgg =_bbdbc ;}else {_bcfg ._facgg =[]*PdfAnnotation {};};};
if !_bgdg {_bbdac .AcroForm =nil ;};return nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fgeb *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func _bafc (_fgffd *_bg .PdfObjectDictionary )bool {for _ ,_gdagb :=range _fgffd .Keys (){if _ ,_gfec :=_gaed [_gdagb .String ()];_gfec {return true ;};};return false ;
};func _fbbg (_ffaa *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_ffaa }};

// HasFontByName checks if has font resource by name.
func (_ffdfg *PdfPage )HasFontByName (name _bg .PdfObjectName )bool {_fbefe ,_bdgd :=_ffdfg .Resources .Font .(*_bg .PdfObjectDictionary );if !_bdgd {return false ;};if _gdbf :=_fbefe .Get (name );_gdbf !=nil {return true ;};return false ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bg .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_dgaba *_bg .PdfIndirectObject ;};type pdfSignDictionary struct{*_bg .PdfObjectDictionary ;
_gdagf *SignatureHandler ;_eecf *PdfSignature ;_gcdda int64 ;_cebca int ;_efefbg int ;_ceff int ;_deaaa int ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bg .PdfObject ;Volume _bg .PdfObject ;Synchronous _bg .PdfObject ;Repeat _bg .PdfObject ;Mix _bg .PdfObject ;};

// ToInteger convert to an integer format.
func (_fegc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_bgef :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bgef *_fegc .R ()),uint32 (_bgef *_fegc .G ()),uint32 (_bgef *_fegc .B ())};};

// PartialName returns the partial name of the field.
func (_bfebf *PdfField )PartialName ()string {_fdcca :="";if _bfebf .T !=nil {_fdcca =_bfebf .T .Decoded ();}else {_fa .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _fdcca ;};func (_dffa *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// AddExtGState adds a graphics state to the XObject resources.
func (_efeaa *PdfPage )AddExtGState (name _bg .PdfObjectName ,egs *_bg .PdfObjectDictionary )error {if _efeaa .Resources ==nil {_efeaa .Resources =NewPdfPageResources ();};if _efeaa .Resources .ExtGState ==nil {_efeaa .Resources .ExtGState =_bg .MakeDict ();
};_fdadc ,_gbbaa :=_bg .TraceToDirectObject (_efeaa .Resources .ExtGState ).(*_bg .PdfObjectDictionary );if !_gbbaa {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bg .TraceToDirectObject (_efeaa .Resources .ExtGState ));
return _fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdadc .Set (name ,egs );return nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dfcc *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgaa ,_ggbegg :=color .(*PdfColorCalRGB );if !_ggbegg {_fa .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fegcc :=_bgaa .A ();_ffed :=_bgaa .B ();_cbacf :=_bgaa .C ();X :=_dfcc .Matrix [0]*_dc .Pow (_fegcc ,_dfcc .Gamma [0])+_dfcc .Matrix [3]*_dc .Pow (_ffed ,_dfcc .Gamma [1])+_dfcc .Matrix [6]*_dc .Pow (_cbacf ,_dfcc .Gamma [2]);
Y :=_dfcc .Matrix [1]*_dc .Pow (_fegcc ,_dfcc .Gamma [0])+_dfcc .Matrix [4]*_dc .Pow (_ffed ,_dfcc .Gamma [1])+_dfcc .Matrix [7]*_dc .Pow (_cbacf ,_dfcc .Gamma [2]);Z :=_dfcc .Matrix [2]*_dc .Pow (_fegcc ,_dfcc .Gamma [0])+_dfcc .Matrix [5]*_dc .Pow (_ffed ,_dfcc .Gamma [1])+_dfcc .Matrix [8]*_dc .Pow (_cbacf ,_dfcc .Gamma [2]);
_abeb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fccd :=-0.969256*X +1.875992*Y +0.041556*Z ;_ebdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_abeb =_dc .Min (_dc .Max (_abeb ,0),1.0);_fccd =_dc .Min (_dc .Max (_fccd ,0),1.0);_ebdb =_dc .Min (_dc .Max (_ebdb ,0),1.0);
return NewPdfColorDeviceRGB (_abeb ,_fccd ,_ebdb ),nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_ecgf *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_aaag :=_ecgf .GetContentStreamObjs ();wrapContents =wrapContents &&len (_aaag )> 0;_abgfa :=_bg .NewFlateEncoder ();_daffe :=_bg .MakeArray ();if wrapContents {_aagbb ,_bdffd :=_bg .MakeStream ([]byte ("\u0071\u000a"),_abgfa );
if _bdffd !=nil {return _bdffd ;};_daffe .Append (_aagbb );};_daffe .Append (_aaag ...);if wrapContents {_bdagf ,_fbgcf :=_bg .MakeStream ([]byte ("\u000a\u0051\u000a"),_abgfa );if _fbgcf !=nil {return _fbgcf ;};_daffe .Append (_bdagf );};_eged ,_edff :=_bg .MakeStream (cs ,_abgfa );
if _edff !=nil {return _edff ;};_daffe .Append (_eged );_ecgf .Contents =_daffe ;return nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bg .PdfObject ;B _bg .PdfObject ;};

// Items returns all children outline items.
func (_eefc *Outline )Items ()[]*OutlineItem {return _eefc .Entries };

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_efeeg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// Initialize initializes the PdfSignature.
func (_efddb *PdfSignature )Initialize ()error {if _efddb .Handler ==nil {return _fff .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _efddb .Handler .InitSignature (_efddb );};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_gfbae *PdfFont )ToPdfObject ()_bg .PdfObject {if _gfbae ._fcafc ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bg .MakeNull ();
};return _gfbae ._fcafc .ToPdfObject ();};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bg .PdfObjectArray ;TI *_bg .PdfObjectInteger ;I *_bg .PdfObjectArray ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gbddg *LTV )Enable (sig *PdfSignature ,extraCerts []*_b .Certificate )error {if _gcda :=_gbddg .validateSig (sig );_gcda !=nil {return _gcda ;};_ededf ,_ggdfc :=_gbddg .generateVRIKey (sig );if _ggdfc !=nil {return _ggdfc ;};if _ ,_ddbgag :=_gbddg ._agbea .VRI [_ededf ];
_ddbgag &&_gbddg .SkipExisting {return nil ;};_fgcf ,_ggdfc :=sig .GetCerts ();if _ggdfc !=nil {return _ggdfc ;};return _gbddg .enable (_fgcf ,extraCerts ,_ededf );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_affg *PdfColorspaceDeviceRGB )ToPdfObject ()_bg .PdfObject {return _bg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_fdga *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_cadb :=_dd .NewReader (img .getBase ());_fgaf :=_ggc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_fdga .AlternateSpace .GetNumComponents (),nil ,img ._gcfag ,nil );
_cfege :=_dd .NewWriter (_fgaf );_agbe :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_fa .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_fa .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_fdga .TintTransform );_gfaeb :=_fdga .AlternateSpace .DecodeArray ();var (_ebdg uint32 ;_acef error ;);for {_ebdg ,_acef =_cadb .ReadSample ();
if _acef ==_ab .EOF {break ;};if _acef !=nil {return img ,_acef ;};_dfg :=float64 (_ebdg )/_agbe ;_fcaaf ,_agag :=_fdga .TintTransform .Evaluate ([]float64 {_dfg });if _agag !=nil {return img ,_agag ;};for _dcdag ,_cdfd :=range _fcaaf {_daeg :=_ggc .LinearInterpolate (_cdfd ,_gfaeb [_dcdag *2],_gfaeb [_dcdag *2+1],0,1);
if _agag =_cfege .WriteSample (uint32 (_daeg *_agbe ));_agag !=nil {return img ,_agag ;};};};return _fdga .AlternateSpace .ImageToRGB (_bbace (&_fgaf ));};func (_gfcbc *PdfReader )newPdfAcroFormFromDict (_ffgga *_bg .PdfIndirectObject ,_gdagg *_bg .PdfObjectDictionary )(*PdfAcroForm ,error ){_beag :=NewPdfAcroForm ();
if _ffgga !=nil {_beag ._ffacc =_ffgga ;_ffgga .PdfObject =_bg .MakeDict ();};if _eecag :=_gdagg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_eecag !=nil {_defg ,_faaee :=_bg .GetArray (_eecag );if !_faaee {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eecag );
};var _afbf []*PdfField ;for _ ,_fegfg :=range _defg .Elements (){_bcbf ,_cbcef :=_bg .GetIndirect (_fegfg );if !_cbcef {if _ ,_cdgg :=_fegfg .(*_bg .PdfObjectNull );_cdgg {_fa .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_fa .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fegfg );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_acaea ,_egadf :=_gfcbc .newPdfFieldFromIndirectObject (_bcbf ,nil );
if _egadf !=nil {return nil ,_egadf ;};_fa .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_acaea );_afbf =append (_afbf ,_acaea );};_beag .Fields =&_afbf ;};if _bdfa :=_gdagg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bdfa !=nil {_ccced ,_ggfffa :=_bg .GetBool (_bdfa );if _ggfffa {_beag .NeedAppearances =_ccced ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bdfa );
};};if _ecfbb :=_gdagg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ecfbb !=nil {_cdaba ,_bbbfa :=_bg .GetInt (_ecfbb );if _bbbfa {_beag .SigFlags =_cdaba ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecfbb );
};};if _fdge :=_gdagg .Get ("\u0043\u004f");_fdge !=nil {_fcegc ,_ccdgf :=_bg .GetArray (_fdge );if _ccdgf {_beag .CO =_fcegc ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdge );
};};if _gagg :=_gdagg .Get ("\u0044\u0052");_gagg !=nil {if _dfae ,_ggcd :=_bg .GetDict (_gagg );_ggcd {_adafa ,_cgae :=NewPdfPageResourcesFromDict (_dfae );if _cgae !=nil {_fa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_cgae );
return nil ,_cgae ;};_beag .DR =_adafa ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gagg );};};if _ddda :=_gdagg .Get ("\u0044\u0041");
_ddda !=nil {_cadc ,_dedd :=_bg .GetString (_ddda );if _dedd {_beag .DA =_cadc ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ddda );
};};if _adgda :=_gdagg .Get ("\u0051");_adgda !=nil {_aaga ,_bfbff :=_bg .GetInt (_adgda );if _bfbff {_beag .Q =_aaga ;}else {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_adgda );
};};if _gdec :=_gdagg .Get ("\u0058\u0046\u0041");_gdec !=nil {_beag .XFA =_gdec ;};_beag .ToPdfObject ();return _beag ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_dfac *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};func _gdaeb (_fecee _ab .ReadSeeker ,_adbfe *ReaderOpts ,_fgdbc bool ,_dbcdc string )(*PdfReader ,error ){if _adbfe ==nil {_adbfe =NewReaderOpts ();
};_fegbe :=&PdfReader {_ebcba :_fecee ,_edaed :map[_bg .PdfObject ]struct{}{},_dgaed :_dcdcc (),_aaeef :_adbfe .LazyLoad };_egfdf ,_cgce :=_bfgde ("\u0072");if _cgce !=nil {return nil ,_cgce ;};_cgce =_ecb .Track (_egfdf ,_dbcdc );if _cgce !=nil {return nil ,_cgce ;
};_fegbe ._fced =_egfdf ;_ebfee ,_cgce :=_bg .NewParser (_fecee );if _cgce !=nil {return nil ,_cgce ;};_fegbe ._gbgb =_ebfee ;_efcaa ,_cgce :=_fegbe .IsEncrypted ();if _cgce !=nil {return nil ,_cgce ;};if !_efcaa {_cgce =_fegbe .loadStructure ();if _cgce !=nil {return nil ,_cgce ;
};}else if _fgdbc {_bffb ,_bdcc :=_fegbe .Decrypt ([]byte (_adbfe .Password ));if _bdcc !=nil {return nil ,_bdcc ;};if !_bffb {return nil ,_fff .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _fegbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcb *PdfActionGoToR )ToPdfObject ()_bg .PdfObject {_gcb .PdfAction .ToPdfObject ();_gce :=_gcb ._gfd ;_fbg :=_gce .PdfObject .(*_bg .PdfObjectDictionary );_fbg .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeGoToR )));if _gcb .F !=nil {_fbg .Set ("\u0046",_gcb .F .ToPdfObject ());
};_fbg .SetIfNotNil ("\u0044",_gcb .D );_fbg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gcb .NewWindow );return _gce ;};

// GetOptimizer returns current PDF optimizer.
func (_fcbfg *PdfWriter )GetOptimizer ()Optimizer {return _fcbfg ._cfbef };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cedaec .Lock ();defer _cedaec .Unlock ();_fbab =creator };func _bgdc (_dcebe _bg .PdfObject )[]*_bg .PdfObjectStream {if _dcebe ==nil {return nil ;};_cddaab ,_dcfbc :=_bg .GetArray (_dcebe );if !_dcfbc ||_cddaab .Len ()==0{return nil ;
};_ageed :=make ([]*_bg .PdfObjectStream ,0,_cddaab .Len ());for _ ,_gdabc :=range _cddaab .Elements (){if _fgade ,_ecfgge :=_bg .GetStream (_gdabc );_ecfgge {_ageed =append (_ageed ,_fgade );};};return _ageed ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_adga *PdfAnnotation )ToPdfObject ()_bg .PdfObject {_eebb :=_adga ._cdcf ;_dfbd :=_eebb .PdfObject .(*_bg .PdfObjectDictionary );_dfbd .Clear ();_dfbd .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0041\u006e\u006eo\u0074"));_dfbd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_adga .Rect );
_dfbd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_adga .Contents );_dfbd .SetIfNotNil ("\u0050",_adga .P );_dfbd .SetIfNotNil ("\u004e\u004d",_adga .NM );_dfbd .SetIfNotNil ("\u004d",_adga .M );_dfbd .SetIfNotNil ("\u0046",_adga .F );
_dfbd .SetIfNotNil ("\u0041\u0050",_adga .AP );_dfbd .SetIfNotNil ("\u0041\u0053",_adga .AS );_dfbd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_adga .Border );_dfbd .SetIfNotNil ("\u0043",_adga .C );_dfbd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_adga .StructParent );
_dfbd .SetIfNotNil ("\u004f\u0043",_adga .OC );return _eebb ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fegfd *PdfColorspaceLab )ToPdfObject ()_bg .PdfObject {_caae :=_bg .MakeArray ();_caae .Append (_bg .MakeName ("\u004c\u0061\u0062"));_cfcf :=_bg .MakeDict ();if _fegfd .WhitePoint !=nil {_faef :=_bg .MakeArray (_bg .MakeFloat (_fegfd .WhitePoint [0]),_bg .MakeFloat (_fegfd .WhitePoint [1]),_bg .MakeFloat (_fegfd .WhitePoint [2]));
_cfcf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_faef );}else {_fa .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fegfd .BlackPoint !=nil {_fgcga :=_bg .MakeArray (_bg .MakeFloat (_fegfd .BlackPoint [0]),_bg .MakeFloat (_fegfd .BlackPoint [1]),_bg .MakeFloat (_fegfd .BlackPoint [2]));_cfcf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fgcga );
};if _fegfd .Range !=nil {_badg :=_bg .MakeArray (_bg .MakeFloat (_fegfd .Range [0]),_bg .MakeFloat (_fegfd .Range [1]),_bg .MakeFloat (_fegfd .Range [2]),_bg .MakeFloat (_fegfd .Range [3]));_cfcf .Set ("\u0052\u0061\u006eg\u0065",_badg );};_caae .Append (_cfcf );
if _fegfd ._gbcdg !=nil {_fegfd ._gbcdg .PdfObject =_caae ;return _fegfd ._gbcdg ;};return _caae ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cafge *PdfFieldChoice )ToPdfObject ()_bg .PdfObject {_cafge .PdfField .ToPdfObject ();_cbfc :=_cafge ._bggaa ;_dfgg :=_cbfc .PdfObject .(*_bg .PdfObjectDictionary );_dfgg .Set ("\u0046\u0054",_bg .MakeName ("\u0043\u0068"));if _cafge .Opt !=nil {_dfgg .Set ("\u004f\u0070\u0074",_cafge .Opt );
};if _cafge .TI !=nil {_dfgg .Set ("\u0054\u0049",_cafge .TI );};if _cafge .I !=nil {_dfgg .Set ("\u0049",_cafge .I );};return _cbfc ;};type fontCommon struct{_ffgfd string ;_ccbf string ;_babbc string ;_ageeb _bg .PdfObject ;_ddddg *_bbg .CMap ;_abcd *PdfFontDescriptor ;
_gaaad int64 ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_eaca *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gee :=_dd .NewReader (img .getBase ());_cbab :=_ggc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ggff :=_dd .NewWriter (_cbab );
_eadc :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_bece :=make ([]uint32 ,3);var (_cceb uint32 ;ANorm ,X ,Y ,Z ,_bcee ,_cfae ,_egdb float64 ;_edag error ;);for {_cceb ,_edag =_gee .ReadSample ();if _edag ==_ab .EOF {break ;}else if _edag !=nil {return img ,_edag ;
};ANorm =float64 (_cceb )/_eadc ;X =_eaca .WhitePoint [0]*_dc .Pow (ANorm ,_eaca .Gamma );Y =_eaca .WhitePoint [1]*_dc .Pow (ANorm ,_eaca .Gamma );Z =_eaca .WhitePoint [2]*_dc .Pow (ANorm ,_eaca .Gamma );_bcee =3.240479*X +-1.537150*Y +-0.498535*Z ;_cfae =-0.969256*X +1.875992*Y +0.041556*Z ;
_egdb =0.055648*X +-0.204043*Y +1.057311*Z ;_bcee =_dc .Min (_dc .Max (_bcee ,0),1.0);_cfae =_dc .Min (_dc .Max (_cfae ,0),1.0);_egdb =_dc .Min (_dc .Max (_egdb ,0),1.0);_bece [0]=uint32 (_bcee *_eadc );_bece [1]=uint32 (_cfae *_eadc );_bece [2]=uint32 (_egdb *_eadc );
if _edag =_ggff .WriteSamples (_bece );_edag !=nil {return img ,_edag ;};};return _bbace (&_cbab ),nil ;};func _eggfd (_agbba []byte )(_agca ,_ffgg string ,_fddcd error ){_fa .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_agbba ));
_aegd :=_dfga .FindIndex (_agbba );if _aegd ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bg .ErrTypeError ;};_fgeba :=_aegd [1];_cddaa :=_ff .Index (string (_agbba [_fgeba :]),_acedg );if _cddaa < 0{_agca =string (_agbba [_fgeba :]);return _agca ,"",nil ;};_fgde :=_fgeba +_cddaa ;_agca =string (_agbba [_fgeba :_fgde ]);_cecb :=_fgde ;
_cddaa =_ff .Index (string (_agbba [_cecb :]),_ceac );if _cddaa < 0{_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fddcd );
return "","",_bg .ErrTypeError ;};_bfce :=_cecb +_cddaa ;_ffgg =string (_agbba [_cecb :_bfce ]);return _agca ,_ffgg ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gfae *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gfae .Base .GetNumComponents ();_ecegc :=int (vals [0])*N ;
if _ecegc < 0||(_ecegc +N -1)>=len (_gfae ._fdbbf ){return nil ,_fff .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_eegb :=_gfae ._fdbbf [_ecegc :_ecegc +N ];var _bcfee []float64 ;for _ ,_eccd :=range _eegb {_bcfee =append (_bcfee ,float64 (_eccd )/255.0);
};_fcgcf ,_eccae :=_gfae .Base .ColorFromFloats (_bcfee );if _eccae !=nil {return nil ,_eccae ;};return _fcgcf ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ecf *PdfAnnotation )GetContext ()PdfModel {if _ecf ==nil {return nil ;};return _ecf ._dcf ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_aaed *PdfColorspaceICCBased )ToPdfObject ()_bg .PdfObject {_ebcg :=&_bg .PdfObjectArray {};_ebcg .Append (_bg .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cebfb *_bg .PdfObjectStream ;if _aaed ._caba !=nil {_cebfb =_aaed ._caba ;
}else {_cebfb =&_bg .PdfObjectStream {};};_fgccg :=_bg .MakeDict ();_fgccg .Set ("\u004e",_bg .MakeInteger (int64 (_aaed .N )));if _aaed .Alternate !=nil {_fgccg .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_aaed .Alternate .ToPdfObject ());};if _aaed .Metadata !=nil {_fgccg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aaed .Metadata );
};if _aaed .Range !=nil {var _gcbbf []_bg .PdfObject ;for _ ,_ebeac :=range _aaed .Range {_gcbbf =append (_gcbbf ,_bg .MakeFloat (_ebeac ));};_fgccg .Set ("\u0052\u0061\u006eg\u0065",_bg .MakeArray (_gcbbf ...));};_fgccg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_aaed .Data ))));
_cebfb .Stream =_aaed .Data ;_cebfb .PdfObjectDictionary =_fgccg ;_ebcg .Append (_cebfb );if _aaed ._fafbc !=nil {_aaed ._fafbc .PdfObject =_ebcg ;return _aaed ._fafbc ;};return _ebcg ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_acfaf *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_acfaf .GetNumComponents (){return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbgba ,_dcbgg :=_acfaf .TintTransform .Evaluate (vals );
if _dcbgg !=nil {return nil ,_dcbgg ;};_cacfg ,_dcbgg :=_acfaf .AlternateSpace .ColorFromFloats (_bbgba );if _dcbgg !=nil {return nil ,_dcbgg ;};return _cacfg ,nil ;};func (_bcef *DSS )addOCSPs (_ccaea [][]byte )([]*_bg .PdfObjectStream ,error ){return _bcef .add (&_bcef .OCSPs ,_bcef ._cgfa ,_ccaea );
};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_efbab *OutlineItem )Insert (index uint ,item *OutlineItem ){_abee :=uint (len (_efbab .Entries ));if index > _abee {index =_abee ;};_efbab .Entries =append (_efbab .Entries [:index ],append ([]*OutlineItem {item },_efbab .Entries [index :]...)...);
};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_afgf *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=_afgf .GetNumComponents (){return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abace ,_efd :=_bg .GetNumbersAsFloat (objects );
if _efd !=nil {return nil ,_efd ;};return _afgf .ColorFromFloats (_abace );};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bg .PdfObject ;};func _fdbeb ()_ecg .Time {_cedaec .Lock ();defer _cedaec .Unlock ();return _ggfdd };

// ToPdfObject implements interface PdfModel.
func (_dafa *PdfAnnotationFileAttachment )ToPdfObject ()_bg .PdfObject {_dafa .PdfAnnotation .ToPdfObject ();_fgea :=_dafa ._cdcf ;_ffeb :=_fgea .PdfObject .(*_bg .PdfObjectDictionary );_dafa .PdfAnnotationMarkup .appendToPdfDictionary (_ffeb );_ffeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_ffeb .SetIfNotNil ("\u0046\u0053",_dafa .FS );_ffeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dafa .Name );return _fgea ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cggg *PdfPageResources )GetXObjectImageByName (keyName _bg .PdfObjectName )(*XObjectImage ,error ){_beagd ,_ffcecc :=_cggg .GetXObjectByName (keyName );if _beagd ==nil {return nil ,nil ;};if _ffcecc !=XObjectTypeImage {return nil ,_fff .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_egfee ,_bgaf :=NewXObjectImageFromStream (_beagd );if _bgaf !=nil {return nil ,_bgaf ;};return _egfee ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fagge *PdfShading )ToPdfObject ()_bg .PdfObject {_aaeba :=_fagge ._cabb ;_bbdeg ,_ddff :=_fagge .getShadingDict ();if _ddff !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fagge .ShadingType !=nil {_bbdeg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fagge .ShadingType );};if _fagge .ColorSpace !=nil {_bbdeg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fagge .ColorSpace .ToPdfObject ());
};if _fagge .Background !=nil {_bbdeg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_fagge .Background );};if _fagge .BBox !=nil {_bbdeg .Set ("\u0042\u0042\u006f\u0078",_fagge .BBox .ToPdfObject ());};if _fagge .AntiAlias !=nil {_bbdeg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_fagge .AntiAlias );
};return _aaeba ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bg .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_adfgg *PdfAcroForm )fill (_adgcf FieldValueProvider ,_fdbc FieldAppearanceGenerator )error {if _adfgg ==nil {return nil ;
};_gcgcf ,_cbcdf :=_adgcf .FieldValues ();if _cbcdf !=nil {return _cbcdf ;};for _ ,_gdga :=range _adfgg .AllFields (){_bfga :=_gdga .PartialName ();_ggec ,_daca :=_gcgcf [_bfga ];if !_daca {if _gfad ,_cddd :=_gdga .FullName ();_cddd ==nil {_ggec ,_daca =_gcgcf [_gfad ];
};};if !_daca {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bfga );
continue ;};if _bfcc :=_dbcde (_gdga ,_ggec );_bfcc !=nil {return _bfcc ;};if _fdbc ==nil {continue ;};for _ ,_gbeec :=range _gdga .Annotations {_ebgea ,_dafbd :=_fdbc .GenerateAppearanceDict (_adfgg ,_gdga ,_gbeec );if _dafbd !=nil {return _dafbd ;};_gbeec .AP =_ebgea ;
_gbeec .ToPdfObject ();};};return nil ;};

// SetLocation sets the `Location` field of the signature.
func (_abbbb *PdfSignature )SetLocation (location string ){_abbbb .Location =_bg .MakeString (location )};func (_ecggba *PdfReader )newPdfOutlineItemFromIndirectObject (_cebgc *_bg .PdfIndirectObject )(*PdfOutlineItem ,error ){_daebb ,_effa :=_cebgc .PdfObject .(*_bg .PdfObjectDictionary );
if !_effa {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_afdf :=NewPdfOutlineItem ();_cgdce :=_daebb .Get ("\u0054\u0069\u0074l\u0065");
if _cgdce ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_dfggd ,_bfgg :=_bg .GetString (_cgdce );if !_bfgg {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cgdce );};_afdf .Title =_dfggd ;if _fadaf :=_daebb .Get ("\u0043\u006f\u0075n\u0074");
_fadaf !=nil {_dfbe ,_gabab :=_fadaf .(*_bg .PdfObjectInteger );if !_gabab {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fadaf );};_ddbc :=int64 (*_dfbe );
_afdf .Count =&_ddbc ;};if _acgbd :=_daebb .Get ("\u0044\u0065\u0073\u0074");_acgbd !=nil {_afdf .Dest =_bg .ResolveReference (_acgbd );if !_ecggba ._aaeef {_daega :=_ecggba .traverseObjectData (_afdf .Dest );if _daega !=nil {return nil ,_daega ;};};};
if _fagf :=_daebb .Get ("\u0041");_fagf !=nil {_afdf .A =_bg .ResolveReference (_fagf );if !_ecggba ._aaeef {_cebc :=_ecggba .traverseObjectData (_afdf .A );if _cebc !=nil {return nil ,_cebc ;};};};if _dgeca :=_daebb .Get ("\u0053\u0045");_dgeca !=nil {_afdf .SE =nil ;
};if _edgeg :=_daebb .Get ("\u0043");_edgeg !=nil {_afdf .C =_bg .ResolveReference (_edgeg );};if _gecac :=_daebb .Get ("\u0046");_gecac !=nil {_afdf .F =_bg .ResolveReference (_gecac );};return _afdf ,nil ;};type fontFile struct{_ecge string ;_effb string ;
_abdgb _be .SimpleEncoder ;};

// String returns a string that describes `font`.
func (_gadbf *PdfFont )String ()string {_fffc :="";if _gadbf ._fcafc .Encoder ()!=nil {_fffc =_gadbf ._fcafc .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gadbf ._fcafc ,_gadbf .baseFields ().coreString (),_fffc );
};var (CourierName =_adb .CourierName ;CourierBoldName =_adb .CourierBoldName ;CourierObliqueName =_adb .CourierObliqueName ;CourierBoldObliqueName =_adb .CourierBoldObliqueName ;HelveticaName =_adb .HelveticaName ;HelveticaBoldName =_adb .HelveticaBoldName ;
HelveticaObliqueName =_adb .HelveticaObliqueName ;HelveticaBoldObliqueName =_adb .HelveticaBoldObliqueName ;SymbolName =_adb .SymbolName ;ZapfDingbatsName =_adb .ZapfDingbatsName ;TimesRomanName =_adb .TimesRomanName ;TimesBoldName =_adb .TimesBoldName ;
TimesItalicName =_adb .TimesItalicName ;TimesBoldItalicName =_adb .TimesBoldItalicName ;);

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gcdef *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aecc ,_cage :=_bg .GetNumbersAsFloat (objects );
if _cage !=nil {return nil ,_cage ;};return _gcdef .ColorFromFloats (_aecc );};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ecg .Time ){_cedaec .Lock ();defer _cedaec .Unlock ();_ggfdg =modifiedDate ;};func _acgag (_abafe *_bg .PdfIndirectObject )(*PdfOutline ,error ){_ccadfd ,_dcab :=_abafe .PdfObject .(*_bg .PdfObjectDictionary );if !_dcab {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bacd :=NewPdfOutline ();if _bcadc :=_ccadfd .Get ("\u0054\u0079\u0070\u0065");_bcadc !=nil {_bcgb ,_aacbd :=_bcadc .(*_bg .PdfObjectName );if _aacbd {if *_bcgb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_bcgb );
};};};if _ecadc :=_ccadfd .Get ("\u0043\u006f\u0075n\u0074");_ecadc !=nil {_bdcbd ,_fgfdd :=_bg .GetNumberAsInt64 (_ecadc );if _fgfdd !=nil {return nil ,_fgfdd ;};_bacd .Count =&_bdcbd ;};return _bacd ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_dcgef *PdfPattern )SetContext (ctx PdfModel ){_dcgef ._eddc =ctx };

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gfdf *PdfFieldText )ToPdfObject ()_bg .PdfObject {_gfdf .PdfField .ToPdfObject ();_gdda :=_gfdf ._bggaa ;_dedf :=_gdda .PdfObject .(*_bg .PdfObjectDictionary );_dedf .Set ("\u0046\u0054",_bg .MakeName ("\u0054\u0078"));if _gfdf .DA !=nil {_dedf .Set ("\u0044\u0041",_gfdf .DA );
};if _gfdf .Q !=nil {_dedf .Set ("\u0051",_gfdf .Q );};if _gfdf .DS !=nil {_dedf .Set ("\u0044\u0053",_gfdf .DS );};if _gfdf .RV !=nil {_dedf .Set ("\u0052\u0056",_gfdf .RV );};if _gfdf .MaxLen !=nil {_dedf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gfdf .MaxLen );
};return _gdda ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_cccag ,_eagg :=_adb .NewStdFontByName (HelveticaName );if !_eagg {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_aebaf :=_cgafc (_cccag );return &PdfFont {_fcafc :&_aebaf };};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ebgdf *_bg .PdfIndirectObject ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_dbgee *pdfCIDFontType0 )ToPdfObject ()_bg .PdfObject {return _bg .MakeNull ()};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_gaeag DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ddbed []byte ;_gfaebg []uint32 ;_edfc *_bg .PdfObjectStream ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bg .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bg .PdfObject ;A _bg .PdfObject ;SE _bg .PdfObject ;C _bg .PdfObject ;F _bg .PdfObject ;
_babc *_bg .PdfIndirectObject ;};var (_cedaec _cc .Mutex ;_afbea ="";_ggfdd _ecg .Time ;_fbab ="";_ccgga ="";_ggfdg _ecg .Time ;_gdcaf ="";_dadfd ="";_dcagb ="";);func (_bdf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ccgd PdfModel ;_bggaa *_bg .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bg .PdfObjectName ;T *_bg .PdfObjectString ;TU *_bg .PdfObjectString ;TM *_bg .PdfObjectString ;Ff *_bg .PdfObjectInteger ;
V _bg .PdfObject ;DV _bg .PdfObject ;AA _bg .PdfObject ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gagf *PdfPageResources )HasFontByName (keyName _bg .PdfObjectName )bool {_ ,_fdbfa :=_gagf .GetFontByName (keyName );return _fdbfa ;};

// ToPdfObject implements interface PdfModel.
func (_ggcc *PdfActionMovie )ToPdfObject ()_bg .PdfObject {_ggcc .PdfAction .ToPdfObject ();_ced :=_ggcc ._gfd ;_ged :=_ced .PdfObject .(*_bg .PdfObjectDictionary );_ged .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeMovie )));_ged .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ggcc .Annotation );
_ged .SetIfNotNil ("\u0054",_ggcc .T );_ged .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ggcc .Operation );return _ced ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_cfbbd :=&XObjectImage {};_bfba :=&_bg .PdfObjectStream {};_bfba .PdfObjectDictionary =_bg .MakeDict ();_cfbbd ._dbged =_bfba ;return _cfbbd ;};func _gddba ()_ecg .Time {_cedaec .Lock ();defer _cedaec .Unlock ();return _ggfdg };


// GetNumComponents returns the number of color components (3 for CalRGB).
func (_edaga *PdfColorCalRGB )GetNumComponents ()int {return 3};func _cegg (_bfeac _bg .PdfObject )(*PdfColorspaceDeviceN ,error ){_fgccb :=NewPdfColorspaceDeviceN ();if _cbee ,_geec :=_bfeac .(*_bg .PdfIndirectObject );_geec {_fgccb ._dgaba =_cbee ;};
_bfeac =_bg .TraceToDirectObject (_bfeac );_cbf ,_dcgf :=_bfeac .(*_bg .PdfObjectArray );if !_dcgf {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _cbf .Len ()!=4&&_cbf .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_bfeac =_cbf .Get (0);
_gedc ,_dcgf :=_bfeac .(*_bg .PdfObjectName );if !_dcgf {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gedc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_bfeac =_cbf .Get (1);
_bfeac =_bg .TraceToDirectObject (_bfeac );_edcg ,_dcgf :=_bfeac .(*_bg .PdfObjectArray );if !_dcgf {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_fgccb .ColorantNames =_edcg ;_bfeac =_cbf .Get (2);_cdad ,_bgbf :=NewPdfColorspaceFromPdfObject (_bfeac );if _bgbf !=nil {return nil ,_bgbf ;};_fgccb .AlternateSpace =_cdad ;_faeb ,_bgbf :=_egfbb (_cbf .Get (3));if _bgbf !=nil {return nil ,_bgbf ;};
_fgccb .TintTransform =_faeb ;if _cbf .Len ()==5{_gcbef ,_feedd :=_ccgee (_cbf .Get (4));if _feedd !=nil {return nil ,_feedd ;};_fgccb .Attributes =_gcbef ;};return _fgccb ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cbbgf pdfFontType0 )GetRuneMetrics (r rune )(_adb .CharMetrics ,bool ){if _cbbgf .DescendantFont ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cbbgf );
return _adb .CharMetrics {},false ;};return _cbbgf .DescendantFont .GetRuneMetrics (r );};func (_edca *PdfShading )getShadingDict ()(*_bg .PdfObjectDictionary ,error ){_fbegc :=_edca ._cabb ;if _gccb ,_abfcb :=_fbegc .(*_bg .PdfIndirectObject );_abfcb {_afadb ,_eabcf :=_gccb .PdfObject .(*_bg .PdfObjectDictionary );
if !_eabcf {return nil ,_bg .ErrTypeError ;};return _afadb ,nil ;}else if _ccecf ,_gaceg :=_fbegc .(*_bg .PdfObjectStream );_gaceg {return _ccecf .PdfObjectDictionary ,nil ;}else if _fffg ,_fgfa :=_fbegc .(*_bg .PdfObjectDictionary );_fgfa {return _fffg ,nil ;
}else {_fa .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bg .ErrTypeError ;};};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_gbbd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fff .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cdbf ,_fbdb :=_ggc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gcfag ,img ._bcfbf );if _fbdb !=nil {return img ,_fbdb ;};_cfgf ,_fbdb :=_ggc .NRGBAConverter .Convert (_cdbf );if _fbdb !=nil {return img ,_fbdb ;
};_cfed :=_bbace (_cfgf .Base ());_fa .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fa .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fa .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cfed .Data );
_fa .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cfed );return _cfed ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_eebc :=&PdfAppender {_ebaa :reader ._ebcba ,Reader :reader ,_cgeb :reader ._gbgb ,_ggbe :reader ._edaed };_dddg ,_afcd :=_eebc ._ebaa .Seek (0,_ab .SeekEnd );if _afcd !=nil {return nil ,_afcd ;
};_eebc ._dgce =_dddg ;if _ ,_afcd =_eebc ._ebaa .Seek (0,_ab .SeekStart );_afcd !=nil {return nil ,_afcd ;};_eebc ._dgfca ,_afcd =NewPdfReader (_eebc ._ebaa );if _afcd !=nil {return nil ,_afcd ;};for _ ,_ecbe :=range _eebc .Reader .GetObjectNums (){if _eebc ._bfef < _ecbe {_eebc ._bfef =_ecbe ;
};};_eebc ._becb =_eebc ._cgeb .GetXrefTable ();_eebc ._eacce =_eebc ._cgeb .GetXrefOffset ();_eebc ._dgec =append (_eebc ._dgec ,_eebc ._dgfca .PageList ...);_eebc ._geb =make (map[_bg .PdfObject ]struct{});_eebc ._dafc =make (map[_bg .PdfObject ]int64 );
_eebc ._faae =make (map[_bg .PdfObject ]struct{});_eebc ._egcb =_eebc ._dgfca .AcroForm ;_eebc ._gaac =_eebc ._dgfca .DSS ;return _eebc ,nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_eeb :=NewPdfAction ();_aca :=&PdfActionRendition {};_aca .PdfAction =_eeb ;_eeb .SetContext (_aca );return _aca ;};func (_ecdc fontCommon )asPdfObjectDictionary (_fgggf string )*_bg .PdfObjectDictionary {if _fgggf !=""&&_ecdc ._ccbf !=""&&_fgggf !=_ecdc ._ccbf {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fgggf ,_ecdc );
}else if _fgggf ==""&&_ecdc ._ccbf ==""{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ecdc );
}else if _ecdc ._ccbf ==""{_ecdc ._ccbf =_fgggf ;};_dgfb :=_bg .MakeDict ();_dgfb .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0046\u006f\u006e\u0074"));_dgfb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bg .MakeName (_ecdc ._ffgfd ));
_dgfb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName (_ecdc ._ccbf ));if _ecdc ._abcd !=nil {_dgfb .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_ecdc ._abcd .ToPdfObject ());};if _ecdc ._ageeb !=nil {_dgfb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ecdc ._ageeb );
}else if _ecdc ._ddddg !=nil {_aaae ,_acfec :=_ecdc ._ddddg .Stream ();if _acfec !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_acfec );
}else {_dgfb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_aaae );};};return _dgfb ;};func (_ffbd *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gcgf :=_ffbd .Parent ;for _gcgf !=nil {_abedc ,_bgcd :=_bg .GetDict (_gcgf );if !_bgcd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _fegdd :=_abedc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fegdd !=nil {_abgc ,_gcegb :=_bg .GetDict (_fegdd );
if !_gcegb {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_cdfgg ,_agfbf :=NewPdfPageResourcesFromDict (_abgc );if _agfbf !=nil {return nil ,_agfbf ;};return _cdfgg ,nil ;
};_gcgf =_abedc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_gebfd *PdfPage )setContainer (_accd *_bg .PdfIndirectObject ){_accd .PdfObject =_gebfd ._fcbg ;_gebfd ._eecd =_accd ;};func (_eebf *PdfReader )newPdfAnnotationSquareFromDict (_fbfc *_bg .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dee :=PdfAnnotationSquare {};
_cebg ,_eba :=_eebf .newPdfAnnotationMarkupFromDict (_fbfc );if _eba !=nil {return nil ,_eba ;};_dee .PdfAnnotationMarkup =_cebg ;_dee .BS =_fbfc .Get ("\u0042\u0053");_dee .IC =_fbfc .Get ("\u0049\u0043");_dee .BE =_fbfc .Get ("\u0042\u0045");_dee .RD =_fbfc .Get ("\u0052\u0044");
return &_dee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbfg *PdfAnnotationUnderline )ToPdfObject ()_bg .PdfObject {_fbfg .PdfAnnotation .ToPdfObject ();_ggdf :=_fbfg ._cdcf ;_eaafa :=_ggdf .PdfObject .(*_bg .PdfObjectDictionary );_fbfg .PdfAnnotationMarkup .appendToPdfDictionary (_eaafa );_eaafa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_eaafa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fbfg .QuadPoints );return _ggdf ;};

// ToPdfObject returns a stream object.
func (_cffae *XObjectForm )ToPdfObject ()_bg .PdfObject {_aaegb :=_cffae ._egfbg ;_bbcaf :=_aaegb .PdfObjectDictionary ;if _cffae .Filter !=nil {_bbcaf =_cffae .Filter .MakeStreamDict ();_aaegb .PdfObjectDictionary =_bbcaf ;};_bbcaf .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bbcaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0046\u006f\u0072\u006d"));_bbcaf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_cffae .FormType );_bbcaf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_cffae .BBox );_bbcaf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_cffae .Matrix );
if _cffae .Resources !=nil {_bbcaf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cffae .Resources .ToPdfObject ());};_bbcaf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cffae .Group );_bbcaf .SetIfNotNil ("\u0052\u0065\u0066",_cffae .Ref );
_bbcaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_cffae .MetaData );_bbcaf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cffae .PieceInfo );_bbcaf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cffae .LastModified );
_bbcaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cffae .StructParent );_bbcaf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cffae .StructParents );_bbcaf .SetIfNotNil ("\u004f\u0050\u0049",_cffae .OPI );
_bbcaf .SetIfNotNil ("\u004f\u0043",_cffae .OC );_bbcaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cffae .Name );_bbcaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_cffae .Stream ))));_aaegb .Stream =_cffae .Stream ;return _aaegb ;
};func _baffa ()string {_cedaec .Lock ();defer _cedaec .Unlock ();return _afbea };func (_cff *PdfReader )newPdfActionSoundFromDict (_eab *_bg .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_eab .Get ("\u0053\u006f\u0075n\u0064"),Volume :_eab .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_eab .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_eab .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_eab .Get ("\u004d\u0069\u0078")},nil ;
};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_aedg :=&PdfFieldSignature {};_aedg .PdfField =NewPdfField ();_aedg .PdfField .SetContext (_aedg );_aedg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_aedg .PdfAnnotationWidget .SetContext (_aedg );
_aedg .PdfAnnotationWidget ._cdcf =_aedg .PdfField ._bggaa ;_aedg .T =_bg .MakeString ("");_aedg .F =_bg .MakeInteger (132);_aedg .V =signature ;return _aedg ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_bgfcc *PdfFieldButton )IsCheckbox ()bool {return _bgfcc .GetType ()==ButtonTypeCheckbox };

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bg .PdfObject ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gacab :_bg .MakeIndirectObject (_bg .MakeDict ()),VRI :map[string ]*VRI {}};};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bbed *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// SetContentStream sets the pattern cell's content stream.
func (_ecdca *PdfTilingPattern )SetContentStream (content []byte ,encoder _bg .StreamEncoder )error {_ccddf ,_gggcf :=_ecdca ._ededfe .(*_bg .PdfObjectStream );if !_gggcf {_fa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecdca ._ededfe );
return _bg .ErrTypeError ;};if encoder ==nil {encoder =_bg .NewRawEncoder ();};_fbfa :=_ccddf .PdfObjectDictionary ;_gcbgg :=encoder .MakeStreamDict ();_fbfa .Merge (_gcbgg );_ddec ,_dabgbe :=encoder .EncodeBytes (content );if _dabgbe !=nil {return _dabgbe ;
};_fbfa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_ddec ))));_ccddf .Stream =_ddec ;return nil ;};func _afdc (_gfbef *_bg .PdfObjectDictionary ,_egfad *fontCommon )(*pdfFontType0 ,error ){_fcbf ,_cffgd :=_bg .GetArray (_gfbef .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_cffgd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_egfad );
return nil ,_bg .ErrRangeError ;};if _fcbf .Len ()!=1{_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_fcbf .Len ());return nil ,_bg .ErrRangeError ;
};_aaeag ,_aeee :=_bcfgg (_fcbf .Get (0),false );if _aeee !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_aeee ,_egfad );
return nil ,_aeee ;};_fgfce :=_fbbg (_egfad );_fgfce .DescendantFont =_aaeag ;_faegf ,_cffgd :=_bg .GetNameVal (_gfbef .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cffgd {if _faegf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_faegf =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_fgfce ._bgcf =_be .NewIdentityTextEncoder (_faegf );
}else if _bbg .IsPredefinedCMap (_faegf ){_fgfce ._fgccc ,_aeee =_bbg .LoadPredefinedCMap (_faegf );if _aeee !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_faegf ,_aeee );
};}else {_fa .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_faegf );};};if _gagc :=_aaeag .baseFields ()._ddddg ;_gagc !=nil {if _dece :=_gagc .Name ();_dece =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dece =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dece =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dece =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_fgfce ._bgcf =_be .NewCMapEncoder (_faegf ,_fgfce ._fgccc ,_gagc );
};};return _fgfce ,nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_adgd *PdfAcroForm ,_aage *PdfField ,_bdea *PdfAnnotationWidget )(*_bg .PdfObjectDictionary ,error );};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_egdfe *PdfTilingPattern )ToPdfObject ()_bg .PdfObject {_egdfe .PdfPattern .ToPdfObject ();_dfcag :=_egdfe .getDict ();if _egdfe .PaintType !=nil {_dfcag .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_egdfe .PaintType );};if _egdfe .TilingType !=nil {_dfcag .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_egdfe .TilingType );
};if _egdfe .BBox !=nil {_dfcag .Set ("\u0042\u0042\u006f\u0078",_egdfe .BBox .ToPdfObject ());};if _egdfe .XStep !=nil {_dfcag .Set ("\u0058\u0053\u0074e\u0070",_egdfe .XStep );};if _egdfe .YStep !=nil {_dfcag .Set ("\u0059\u0053\u0074e\u0070",_egdfe .YStep );
};if _egdfe .Resources !=nil {_dfcag .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_egdfe .Resources .ToPdfObject ());};if _egdfe .Matrix !=nil {_dfcag .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_egdfe .Matrix );};return _egdfe ._ededfe ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dccd DefaultImageHandler )NewGrayImageFromGoImage (goimg _gc .Image )(*Image ,error ){_ccgdg :=goimg .Bounds ();_dedgcf :=&Image {Width :int64 (_ccgdg .Dx ()),Height :int64 (_ccgdg .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dfffd :=goimg .(type ){case *_gc .Gray :if len (_dfffd .Pix )!=_ccgdg .Dx ()*_ccgdg .Dy (){_cbcg ,_bfgd :=_ggc .GrayConverter .Convert (goimg );
if _bfgd !=nil {return nil ,_bfgd ;};_dedgcf .Data =_cbcg .Pix ();}else {_dedgcf .Data =_dfffd .Pix ;};case *_gc .Gray16 :_dedgcf .BitsPerComponent =16;if len (_dfffd .Pix )!=_ccgdg .Dx ()*_ccgdg .Dy ()*2{_begfd ,_gfefa :=_ggc .Gray16Converter .Convert (goimg );
if _gfefa !=nil {return nil ,_gfefa ;};_dedgcf .Data =_begfd .Pix ();}else {_dedgcf .Data =_dfffd .Pix ;};case _ggc .Image :_bcbaf :=_dfffd .Base ();if _bcbaf .ColorComponents ==1{_dedgcf .BitsPerComponent =int64 (_bcbaf .BitsPerComponent );_dedgcf .Data =_bcbaf .Data ;
return _dedgcf ,nil ;};_ddcg ,_fcafe :=_ggc .GrayConverter .Convert (goimg );if _fcafe !=nil {return nil ,_fcafe ;};_dedgcf .Data =_ddcg .Pix ();default:_abebf ,_gadc :=_ggc .GrayConverter .Convert (goimg );if _gadc !=nil {return nil ,_gadc ;};_dedgcf .Data =_abebf .Pix ();
};return _dedgcf ,nil ;};func (_agbcc *PdfWriter )addObjects (_geac _bg .PdfObject )error {_fa .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _egeec ,_edebc :=_geac .(*_bg .PdfIndirectObject );_edebc {_fa .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_fa .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_geac ,_egeec );_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_egeec .PdfObject );if _agbcc .addObject (_egeec ){_addgb :=_agbcc .addObjects (_egeec .PdfObject );if _addgb !=nil {return _addgb ;
};};return nil ;};if _fbddc ,_ggab :=_geac .(*_bg .PdfObjectStream );_ggab {_fa .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fa .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_geac ,_geac );if _agbcc .addObject (_fbddc ){_fgdf :=_agbcc .addObjects (_fbddc .PdfObjectDictionary );
if _fgdf !=nil {return _fgdf ;};};return nil ;};if _bgfcb ,_bfdgb :=_geac .(*_bg .PdfObjectDictionary );_bfdgb {_fa .Log .Trace ("\u0044\u0069\u0063\u0074");_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_geac );for _ ,_eccdc :=range _bgfcb .Keys (){_ddae :=_bgfcb .Get (_eccdc );
if _gagfc ,_bbebc :=_ddae .(*_bg .PdfObjectReference );_bbebc {_ddae =_gagfc .Resolve ();_bgfcb .Set (_eccdc ,_ddae );};if _eccdc !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fffgb :=_agbcc .addObjects (_ddae );_fffgb !=nil {return _fffgb ;};}else {if _ ,_aecgc :=_ddae .(*_bg .PdfObjectNull );
_aecgc {continue ;};if _cgbaf :=_agbcc .hasObject (_ddae );!_cgbaf {_fa .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ddae ,_ddae ,_ddae );
_agbcc ._gfecc [_ddae ]=append (_agbcc ._gfecc [_ddae ],_bgfcb );};};};return nil ;};if _efgf ,_dgbac :=_geac .(*_bg .PdfObjectArray );_dgbac {_fa .Log .Trace ("\u0041\u0072\u0072a\u0079");_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_geac );if _efgf ==nil {return _fff .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _ecdeb ,_bbgcg :=range _efgf .Elements (){if _bfbbg ,_ccef :=_bbgcg .(*_bg .PdfObjectReference );_ccef {_bbgcg =_bfbbg .Resolve ();_efgf .Set (_ecdeb ,_bbgcg );};if _egagf :=_agbcc .addObjects (_bbgcg );_egagf !=nil {return _egagf ;};};return nil ;
};if _ ,_ccfde :=_geac .(*_bg .PdfObjectReference );_ccfde {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_geac );
return _fff .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_cefcb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _cefcb .Alternate ==nil {_fa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _cefcb .N ==1{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ggbcc :=NewPdfColorspaceDeviceGray ();return _ggbcc .ImageToRGB (img );}else if _cefcb .N ==3{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _cefcb .N ==4{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_debdg :=NewPdfColorspaceDeviceCMYK ();return _debdg .ImageToRGB (img );}else {return img ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cefcb );
_cfdeg ,_abef :=_cefcb .Alternate .ImageToRGB (img );_fa .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fa .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cfdeg );
return _cfdeg ,_abef ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ddbbe pdfCIDFontType0 )GetCharMetrics (code _be .CharCode )(_adb .CharMetrics ,bool ){_cefb :=_ddbbe ._bfdcg ;if _ebbfa ,_bfdf :=_ddbbe ._bbgadc [code ];_bfdf {_cefb =_ebbfa ;};return _adb .CharMetrics {Wx :_cefb },true ;};

// A returns the value of the A component of the color.
func (_dbccg *PdfColorCalRGB )A ()float64 {return _dbccg [0]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_eggac *PdfColorspaceLab )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efgg ,_aeaa :=_bg .GetNumbersAsFloat (objects );
if _aeaa !=nil {return nil ,_aeaa ;};return _eggac .ColorFromFloats (_efgg );};

// SetForms sets the Acroform for a PDF file.
func (_eadcfa *PdfWriter )SetForms (form *PdfAcroForm )error {_eadcfa ._eacgc =form ;return nil };

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ab .ReadSeeker )(*PdfReader ,error ){const _ebcd ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _gdaeb (rs ,&ReaderOpts {LazyLoad :true },false ,_ebcd );
};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_dfagg *XObjectImage )ToImage ()(*Image ,error ){_aabbbf :=&Image {};if _dfagg .Height ==nil {return nil ,_fff .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_aabbbf .Height =*_dfagg .Height ;if _dfagg .Width ==nil {return nil ,_fff .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aabbbf .Width =*_dfagg .Width ;if _dfagg .BitsPerComponent ==nil {switch _dfagg .Filter .(type ){case *_bg .CCITTFaxEncoder ,*_bg .JBIG2Encoder :_aabbbf .BitsPerComponent =1;
case *_bg .LZWEncoder ,*_bg .RunLengthEncoder :_aabbbf .BitsPerComponent =8;default:return nil ,_fff .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_aabbbf .BitsPerComponent =*_dfagg .BitsPerComponent ;};_aabbbf .ColorComponents =_dfagg .ColorSpace .GetNumComponents ();_dfagg ._dbged .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bg .MakeInteger (int64 (_aabbbf .ColorComponents )));
_bdaga ,_begdfb :=_bg .DecodeStream (_dfagg ._dbged );if _begdfb !=nil {return nil ,_begdfb ;};_aabbbf .Data =_bdaga ;if _dfagg .Decode !=nil {_ababce ,_ddged :=_dfagg .Decode .(*_bg .PdfObjectArray );if !_ddged {_fa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ffffg ,_gacea :=_ababce .ToFloat64Array ();if _gacea !=nil {return nil ,_gacea ;};_aabbbf ._bcfbf =_ffffg ;};return _aabbbf ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ecbcc *PdfReader )GetObjectNums ()[]int {return _ecbcc ._gbgb .GetObjectNums ()};func _cdge (_gcdd _bg .PdfObject ,_gdcbd *PdfReader )(*OutlineDest ,error ){_cacda ,_effbb :=_bg .GetArray (_gcdd );if !_effbb {return nil ,_fff .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_dagbg :=_cacda .Len ();if _dagbg < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_dagbg );
};_cacb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_abaa :=_cacda .Get (0);if _bfddc ,_gaba :=_bg .GetIndirect (_abaa );_gaba {if _ ,_bagdc ,_gecff :=_gdcbd .PageFromIndirectObject (_bfddc );_gecff ==nil {_cacb .Page =int64 (_bagdc -1);}else {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bfddc );
};_cacb .PageObj =_bfddc ;}else if _gdea ,_cfaag :=_bg .GetIntVal (_abaa );_cfaag {if _gdea >=0&&_gdea < len (_gdcbd .PageList ){_cacb .PageObj =_gdcbd .PageList [_gdea ].GetPageAsIndirectObject ();}else {_fa .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gdea );
};_cacb .Page =int64 (_gdea );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_abaa );};_dfdea ,_effbb :=_bg .GetNameVal (_cacda .Get (1));
if !_effbb {_fa .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cacda .Get (1));
return _cacb ,nil ;};switch _dfdea {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _dagbg > 2{_cacb .Y ,_ =_bg .GetNumberAsFloat (_bg .TraceToDirectObject (_cacda .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _dagbg > 2{_cacb .X ,_ =_bg .GetNumberAsFloat (_bg .TraceToDirectObject (_cacda .Get (2)));
};case "\u0058\u0059\u005a":if _dagbg > 4{_cacb .X ,_ =_bg .GetNumberAsFloat (_bg .TraceToDirectObject (_cacda .Get (2)));_cacb .Y ,_ =_bg .GetNumberAsFloat (_bg .TraceToDirectObject (_cacda .Get (3)));_cacb .Zoom ,_ =_bg .GetNumberAsFloat (_bg .TraceToDirectObject (_cacda .Get (4)));
};default:_dfdea ="\u0046\u0069\u0074";};_cacb .Mode =_dfdea ;return _cacb ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_edad *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dec ,_fabc :=_bg .GetNumbersAsFloat (objects );
if _fabc !=nil {return nil ,_fabc ;};return _edad .ColorFromFloats (_dec );};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bg .PdfObject ;FontFamily _bg .PdfObject ;FontStretch _bg .PdfObject ;FontWeight _bg .PdfObject ;Flags _bg .PdfObject ;FontBBox _bg .PdfObject ;ItalicAngle _bg .PdfObject ;Ascent _bg .PdfObject ;Descent _bg .PdfObject ;
Leading _bg .PdfObject ;CapHeight _bg .PdfObject ;XHeight _bg .PdfObject ;StemV _bg .PdfObject ;StemH _bg .PdfObject ;AvgWidth _bg .PdfObject ;MaxWidth _bg .PdfObject ;MissingWidth _bg .PdfObject ;FontFile _bg .PdfObject ;FontFile2 _bg .PdfObject ;FontFile3 _bg .PdfObject ;
CharSet _bg .PdfObject ;_beceg int ;_fcfga float64 ;*fontFile ;_ebfd *_adb .TtfType ;

// Additional entries for CIDFonts
Style _bg .PdfObject ;Lang _bg .PdfObject ;FD _bg .PdfObject ;CIDSet _bg .PdfObject ;_ffff *_bg .PdfIndirectObject ;};func _bfde (_gegbg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gegbg }};func (_cccfc *PdfWriter )addObject (_bcgdg _bg .PdfObject )bool {_agfaf :=_cccfc .hasObject (_bcgdg );
if !_agfaf {_cbcge :=_bg .ResolveReferencesDeep (_bcgdg ,_cccfc ._dcdefd );if _cbcge !=nil {_fa .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_cbcge );};_cccfc ._fdeeb =append (_cccfc ._fdeeb ,_bcgdg );
_cccfc ._eccf [_bcgdg ]=struct{}{};return true ;};return false ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_eagc *Outline )Insert (index uint ,item *OutlineItem ){_bfgcg :=uint (len (_eagc .Entries ));if index > _bfgcg {index =_bfgcg ;};_eagc .Entries =append (_eagc .Entries [:index ],append ([]*OutlineItem {item },_eagc .Entries [index :]...)...);};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cbgcd *pdfCIDFontType2 )ToPdfObject ()_bg .PdfObject {if _cbgcd ._decd ==nil {_cbgcd ._decd =&_bg .PdfIndirectObject {};};_agfe :=_cbgcd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_cbgcd ._decd .PdfObject =_agfe ;if _cbgcd .CIDSystemInfo !=nil {_agfe .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cbgcd .CIDSystemInfo );};if _cbgcd .DW !=nil {_agfe .Set ("\u0044\u0057",_cbgcd .DW );};if _cbgcd .DW2 !=nil {_agfe .Set ("\u0044\u0057\u0032",_cbgcd .DW2 );
};if _cbgcd .W !=nil {_agfe .Set ("\u0057",_cbgcd .W );};if _cbgcd .W2 !=nil {_agfe .Set ("\u0057\u0032",_cbgcd .W2 );};if _cbgcd .CIDToGIDMap !=nil {_agfe .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cbgcd .CIDToGIDMap );};return _cbgcd ._decd ;
};func _agdg (_geba *_bg .PdfObjectDictionary )(*PdfFieldButton ,error ){_cgbe :=&PdfFieldButton {};_cgbe .Opt ,_ =_bg .GetArray (_geba .Get ("\u004f\u0070\u0074"));return _cgbe ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_eafdg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ebcc []*PdfField ;_abdde :=map[*_bg .PdfIndirectObject ]struct{}{};for _ ,_aaffc :=range _eafdg .PageList {_abfe ,_cgff :=_aaffc .GetAnnotations ();if _cgff !=nil {return _cgff ;
};for _ ,_fdbg :=range _abfe {var _cdbdg *PdfField ;switch _edegf :=_fdbg .GetContext ().(type ){case *PdfAnnotationWidget :if _edegf ._ddgba !=nil {_cdbdg =_edegf ._ddgba ;break ;};if _gdgcf ,_fgaad :=_bg .GetIndirect (_edegf .Parent );_fgaad {_cdbdg ,_cgff =_eafdg .newPdfFieldFromIndirectObject (_gdgcf ,nil );
if _cgff ==nil {break ;};_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gdgcf ,_cgff );
};if _edegf ._cdcf !=nil {_cdbdg ,_cgff =_eafdg .newPdfFieldFromIndirectObject (_edegf ._cdcf ,nil );if _cgff ==nil {break ;};_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_edegf ._cdcf ,_cgff );
};};if _cdbdg ==nil {continue ;};if _ ,_adgge :=_abdde [_cdbdg ._bggaa ];_adgge {continue ;};_abdde [_cdbdg ._bggaa ]=struct{}{};_ebcc =append (_ebcc ,_cdbdg );};};if len (_ebcc )==0{return nil ;};if _eafdg .AcroForm ==nil {_eafdg .AcroForm =NewPdfAcroForm ();
};_eafdg .AcroForm .Fields =&_ebcc ;return nil ;};func _bggca ()string {_fadb :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _fgdb _bb .Buffer ;
for _eccg :=0;_eccg < 6;_eccg ++{_fgdb .WriteRune (rune (_fadb [_ga .Intn (len (_fadb ))]));};return _fgdb .String ();};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_edcf :=NewPdfAnnotation ();_ega :=&PdfAnnotationSquare {};_ega .PdfAnnotation =_edcf ;_ega .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edcf .SetContext (_ega );return _ega ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_degfa :=PdfColorCalGray (grayVal );return &_degfa ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bg .PdfObjectInteger ;BitsPerComponent *_bg .PdfObjectInteger ;BitsPerFlag *_bg .PdfObjectInteger ;Decode *_bg .PdfObjectArray ;Function []PdfFunction ;};func (_aeb *PdfReader )newPdfAnnotationSoundFromDict (_fdd *_bg .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dfdc :=PdfAnnotationSound {};
_adaf ,_gbdd :=_aeb .newPdfAnnotationMarkupFromDict (_fdd );if _gbdd !=nil {return nil ,_gbdd ;};_dfdc .PdfAnnotationMarkup =_adaf ;_dfdc .Name =_fdd .Get ("\u004e\u0061\u006d\u0065");_dfdc .Sound =_fdd .Get ("\u0053\u006f\u0075n\u0064");return &_dfdc ,nil ;
};

// String returns the name of the colorspace (DeviceN).
func (_feebc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bg .PdfObject ;LE _bg .PdfObject ;BS _bg .PdfObject ;IC _bg .PdfObject ;BE _bg .PdfObject ;IT _bg .PdfObject ;Measure _bg .PdfObject ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_daga _bg .PdfObject ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bg .PdfObject ;MK _bg .PdfObject ;A _bg .PdfObject ;AA _bg .PdfObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_dfgef *PdfFunctionType3 )ToPdfObject ()_bg .PdfObject {_bbcfg :=_bg .MakeDict ();_bbcfg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bg .MakeInteger (3));_fbge :=&_bg .PdfObjectArray {};for _ ,_gebac :=range _dfgef .Domain {_fbge .Append (_bg .MakeFloat (_gebac ));
};_bbcfg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbge );if _dfgef .Range !=nil {_dgabf :=&_bg .PdfObjectArray {};for _ ,_gbfd :=range _dfgef .Range {_dgabf .Append (_bg .MakeFloat (_gbfd ));};_bbcfg .Set ("\u0052\u0061\u006eg\u0065",_dgabf );};if _dfgef .Functions !=nil {_ageeg :=&_bg .PdfObjectArray {};
for _ ,_cfeec :=range _dfgef .Functions {_ageeg .Append (_cfeec .ToPdfObject ());};_bbcfg .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ageeg );};if _dfgef .Bounds !=nil {_egffeg :=&_bg .PdfObjectArray {};for _ ,_acfae :=range _dfgef .Bounds {_egffeg .Append (_bg .MakeFloat (_acfae ));
};_bbcfg .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_egffeg );};if _dfgef .Encode !=nil {_ebbcgd :=&_bg .PdfObjectArray {};for _ ,_fafa :=range _dfgef .Encode {_ebbcgd .Append (_bg .MakeFloat (_fafa ));};_bbcfg .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ebbcgd );
};if _dfgef ._defa !=nil {_dfgef ._defa .PdfObject =_bbcfg ;return _dfgef ._defa ;};return _bbcfg ;};func _agbb (_bebb *PdfPage )map[_bg .PdfObjectName ]_bg .PdfObject {_efgd :=make (map[_bg .PdfObjectName ]_bg .PdfObject );if _bebb .Resources ==nil {return _efgd ;
};if _bebb .Resources .Font !=nil {if _gaaf ,_fdbb :=_bg .GetDict (_bebb .Resources .Font );_fdbb {for _ ,_acgga :=range _gaaf .Keys (){_efgd [_acgga ]=_gaaf .Get (_acgga );};};};if _bebb .Resources .ExtGState !=nil {if _dfdcb ,_gge :=_bg .GetDict (_bebb .Resources .ExtGState );
_gge {for _ ,_cbce :=range _dfdcb .Keys (){_efgd [_cbce ]=_dfdcb .Get (_cbce );};};};if _bebb .Resources .XObject !=nil {if _cdcc ,_bbdag :=_bg .GetDict (_bebb .Resources .XObject );_bbdag {for _ ,_bggb :=range _cdcc .Keys (){_efgd [_bggb ]=_cdcc .Get (_bggb );
};};};if _bebb .Resources .Pattern !=nil {if _cgdb ,_bfg :=_bg .GetDict (_bebb .Resources .Pattern );_bfg {for _ ,_edab :=range _cgdb .Keys (){_efgd [_edab ]=_cgdb .Get (_edab );};};};if _bebb .Resources .Shading !=nil {if _dcffe ,_fefb :=_bg .GetDict (_bebb .Resources .Shading );
_fefb {for _ ,_aadc :=range _dcffe .Keys (){_efgd [_aadc ]=_dcffe .Get (_aadc );};};};if _bebb .Resources .ProcSet !=nil {if _geg ,_agcg :=_bg .GetDict (_bebb .Resources .ProcSet );_agcg {for _ ,_adbec :=range _geg .Keys (){_efgd [_adbec ]=_geg .Get (_adbec );
};};};if _bebb .Resources .Properties !=nil {if _bfed ,_acfc :=_bg .GetDict (_bebb .Resources .Properties );_acfc {for _ ,_debd :=range _bfed .Keys (){_efgd [_debd ]=_bfed .Get (_debd );};};};return _efgd ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dac :=NewPdfAnnotation ();_dfe :=&PdfAnnotationFileAttachment {};_dfe .PdfAnnotation =_dac ;_dfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dac .SetContext (_dfe );return _dfe ;};


// ToPdfObject returns the PDF representation of the colorspace.
func (_dbdbc *PdfColorspaceSpecialSeparation )ToPdfObject ()_bg .PdfObject {_gcge :=_bg .MakeArray (_bg .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_gcge .Append (_dbdbc .ColorantName );_gcge .Append (_dbdbc .AlternateSpace .ToPdfObject ());
_gcge .Append (_dbdbc .TintTransform .ToPdfObject ());if _dbdbc ._bbage !=nil {_dbdbc ._bbage .PdfObject =_gcge ;return _dbdbc ._bbage ;};return _gcge ;};func (_fbgb *fontFile )loadFromSegments (_dceab ,_fdba []byte )error {_fa .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_dceab ),len (_fdba ));
_cabeb :=_fbgb .parseASCIIPart (_dceab );if _cabeb !=nil {return _cabeb ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fbgb );if len (_fdba )==0{return nil ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fbgb );
return nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bg .PdfObject ;Name _bg .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bfag *PdfFilespec )GetContainingPdfObject ()_bg .PdfObject {return _bfag ._cdfaf };func (_gaea *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _gaea ._abcd };func _fba (_ceafg _bg .PdfObject )(*PdfColorspaceCalGray ,error ){_gdag :=NewPdfColorspaceCalGray ();
if _fbfcd ,_fgfb :=_ceafg .(*_bg .PdfIndirectObject );_fgfb {_gdag ._bggd =_fbfcd ;};_ceafg =_bg .TraceToDirectObject (_ceafg );_ggbc ,_dffe :=_ceafg .(*_bg .PdfObjectArray );if !_dffe {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ggbc .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ceafg =_bg .TraceToDirectObject (_ggbc .Get (0));_dddgb ,_dffe :=_ceafg .(*_bg .PdfObjectName );
if !_dffe {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_dddgb !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_ceafg =_bg .TraceToDirectObject (_ggbc .Get (1));_gabd ,_dffe :=_ceafg .(*_bg .PdfObjectDictionary );if !_dffe {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_ceafg =_gabd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ceafg =_bg .TraceToDirectObject (_ceafg );_cfea ,_dffe :=_ceafg .(*_bg .PdfObjectArray );if !_dffe {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cfea .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dgea ,_dbad :=_cfea .GetAsFloat64Slice ();
if _dbad !=nil {return nil ,_dbad ;};_gdag .WhitePoint =_dgea ;_ceafg =_gabd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ceafg !=nil {_ceafg =_bg .TraceToDirectObject (_ceafg );_abce ,_ffgb :=_ceafg .(*_bg .PdfObjectArray );
if !_ffgb {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _abce .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_ceaff ,_bddg :=_abce .GetAsFloat64Slice ();if _bddg !=nil {return nil ,_bddg ;};_gdag .BlackPoint =_ceaff ;};_ceafg =_gabd .Get ("\u0047\u0061\u006dm\u0061");if _ceafg !=nil {_ceafg =_bg .TraceToDirectObject (_ceafg );_dgg ,_eacca :=_bg .GetNumberAsFloat (_ceafg );
if _eacca !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_gdag .Gamma =_dgg ;};return _gdag ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bg .PdfObject ;BS _bg .PdfObject ;LE _bg .PdfObject ;IC _bg .PdfObject ;LL _bg .PdfObject ;LLE _bg .PdfObject ;Cap _bg .PdfObject ;IT _bg .PdfObject ;LLO _bg .PdfObject ;CP _bg .PdfObject ;
Measure _bg .PdfObject ;CO _bg .PdfObject ;};func (_dcbf *PdfReader )newPdfAnnotationFromIndirectObject (_fgbg *_bg .PdfIndirectObject )(*PdfAnnotation ,error ){_dcbd ,_bca :=_fgbg .PdfObject .(*_bg .PdfObjectDictionary );if !_bca {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dcbf ._dgaed .GetModelFromPrimitive (_dcbd );model !=nil {_bccc ,_gcce :=model .(*PdfAnnotation );if !_gcce {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _bccc ,nil ;};_fgda :=&PdfAnnotation {};_fgda ._cdcf =_fgbg ;_dcbf ._dgaed .Register (_dcbd ,_fgda );if _dcfc :=_dcbd .Get ("\u0054\u0079\u0070\u0065");_dcfc !=nil {_aea ,_agf :=_dcfc .(*_bg .PdfObjectName );if !_agf {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dcfc );
}else {if *_aea !="\u0041\u006e\u006eo\u0074"{_fa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_aea );};};};if _fgba :=_dcbd .Get ("\u0052\u0065\u0063\u0074");
_fgba !=nil {_fgda .Rect =_fgba ;};if _bagd :=_dcbd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bagd !=nil {_fgda .Contents =_bagd ;};if _cbg :=_dcbd .Get ("\u0050");_cbg !=nil {_fgda .P =_cbg ;};if _adc :=_dcbd .Get ("\u004e\u004d");_adc !=nil {_fgda .NM =_adc ;
};if _cafcg :=_dcbd .Get ("\u004d");_cafcg !=nil {_fgda .M =_cafcg ;};if _eee :=_dcbd .Get ("\u0046");_eee !=nil {_fgda .F =_eee ;};if _bbe :=_dcbd .Get ("\u0041\u0050");_bbe !=nil {_fgda .AP =_bbe ;};if _eea :=_dcbd .Get ("\u0041\u0053");_eea !=nil {_fgda .AS =_eea ;
};if _adce :=_dcbd .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_adce !=nil {_fgda .Border =_adce ;};if _fda :=_dcbd .Get ("\u0043");_fda !=nil {_fgda .C =_fda ;};if _afc :=_dcbd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_afc !=nil {_fgda .StructParent =_afc ;};if _edg :=_dcbd .Get ("\u004f\u0043");_edg !=nil {_fgda .OC =_edg ;};_cbd :=_dcbd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _cbd ==nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_fgda ._dcf =nil ;return _fgda ,nil ;};_cfa ,_fac :=_cbd .(*_bg .PdfObjectName );if !_fac {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbd );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_cbd );};switch *_cfa {case "\u0054\u0065\u0078\u0074":_gcgb ,_dgb :=_dcbf .newPdfAnnotationTextFromDict (_dcbd );
if _dgb !=nil {return nil ,_dgb ;};_gcgb .PdfAnnotation =_fgda ;_fgda ._dcf =_gcgb ;return _fgda ,nil ;case "\u004c\u0069\u006e\u006b":_ccb ,_abd :=_dcbf .newPdfAnnotationLinkFromDict (_dcbd );if _abd !=nil {return nil ,_abd ;};_ccb .PdfAnnotation =_fgda ;
_fgda ._dcf =_ccb ;return _fgda ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gggf ,_fec :=_dcbf .newPdfAnnotationFreeTextFromDict (_dcbd );if _fec !=nil {return nil ,_fec ;};_gggf .PdfAnnotation =_fgda ;_fgda ._dcf =_gggf ;return _fgda ,nil ;
case "\u004c\u0069\u006e\u0065":_ccbe ,_dcbfe :=_dcbf .newPdfAnnotationLineFromDict (_dcbd );if _dcbfe !=nil {return nil ,_dcbfe ;};_ccbe .PdfAnnotation =_fgda ;_fgda ._dcf =_ccbe ;_fa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_fgda ,_fgda );
_fa .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ccbe ,_ccbe );_fa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ccbe .PdfAnnotationMarkup ,_ccbe .PdfAnnotationMarkup );
return _fgda ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_ddbd ,_effg :=_dcbf .newPdfAnnotationSquareFromDict (_dcbd );if _effg !=nil {return nil ,_effg ;};_ddbd .PdfAnnotation =_fgda ;_fgda ._dcf =_ddbd ;return _fgda ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ecd ,_gbd :=_dcbf .newPdfAnnotationCircleFromDict (_dcbd );
if _gbd !=nil {return nil ,_gbd ;};_ecd .PdfAnnotation =_fgda ;_fgda ._dcf =_ecd ;return _fgda ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cacc ,_gfgf :=_dcbf .newPdfAnnotationPolygonFromDict (_dcbd );if _gfgf !=nil {return nil ,_gfgf ;};_cacc .PdfAnnotation =_fgda ;
_fgda ._dcf =_cacc ;return _fgda ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bcb ,_ffbg :=_dcbf .newPdfAnnotationPolyLineFromDict (_dcbd );if _ffbg !=nil {return nil ,_ffbg ;};_bcb .PdfAnnotation =_fgda ;_fgda ._dcf =_bcb ;return _fgda ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ddd ,_cab :=_dcbf .newPdfAnnotationHighlightFromDict (_dcbd );if _cab !=nil {return nil ,_cab ;};_ddd .PdfAnnotation =_fgda ;_fgda ._dcf =_ddd ;return _fgda ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_fad ,_gab :=_dcbf .newPdfAnnotationUnderlineFromDict (_dcbd );
if _gab !=nil {return nil ,_gab ;};_fad .PdfAnnotation =_fgda ;_fgda ._dcf =_fad ;return _fgda ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ggfb ,_bfee :=_dcbf .newPdfAnnotationSquigglyFromDict (_dcbd );if _bfee !=nil {return nil ,_bfee ;
};_ggfb .PdfAnnotation =_fgda ;_fgda ._dcf =_ggfb ;return _fgda ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_cfe ,_dgd :=_dcbf .newPdfAnnotationStrikeOut (_dcbd );if _dgd !=nil {return nil ,_dgd ;};_cfe .PdfAnnotation =_fgda ;_fgda ._dcf =_cfe ;
return _fgda ,nil ;case "\u0043\u0061\u0072e\u0074":_cbb ,_afgc :=_dcbf .newPdfAnnotationCaretFromDict (_dcbd );if _afgc !=nil {return nil ,_afgc ;};_cbb .PdfAnnotation =_fgda ;_fgda ._dcf =_cbb ;return _fgda ,nil ;case "\u0053\u0074\u0061m\u0070":_fgfg ,_ffadc :=_dcbf .newPdfAnnotationStampFromDict (_dcbd );
if _ffadc !=nil {return nil ,_ffadc ;};_fgfg .PdfAnnotation =_fgda ;_fgda ._dcf =_fgfg ;return _fgda ,nil ;case "\u0049\u006e\u006b":_acg ,_fdcg :=_dcbf .newPdfAnnotationInkFromDict (_dcbd );if _fdcg !=nil {return nil ,_fdcg ;};_acg .PdfAnnotation =_fgda ;
_fgda ._dcf =_acg ;return _fgda ,nil ;case "\u0050\u006f\u0070u\u0070":_aegb ,_agb :=_dcbf .newPdfAnnotationPopupFromDict (_dcbd );if _agb !=nil {return nil ,_agb ;};_aegb .PdfAnnotation =_fgda ;_fgda ._dcf =_aegb ;return _fgda ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_edd ,_aacb :=_dcbf .newPdfAnnotationFileAttachmentFromDict (_dcbd );
if _aacb !=nil {return nil ,_aacb ;};_edd .PdfAnnotation =_fgda ;_fgda ._dcf =_edd ;return _fgda ,nil ;case "\u0053\u006f\u0075n\u0064":_cabg ,_gad :=_dcbf .newPdfAnnotationSoundFromDict (_dcbd );if _gad !=nil {return nil ,_gad ;};_cabg .PdfAnnotation =_fgda ;
_fgda ._dcf =_cabg ;return _fgda ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_cgefd ,_bcd :=_dcbf .newPdfAnnotationRichMediaFromDict (_dcbd );if _bcd !=nil {return nil ,_bcd ;};_cgefd .PdfAnnotation =_fgda ;_fgda ._dcf =_cgefd ;return _fgda ,nil ;
case "\u004d\u006f\u0076i\u0065":_cafd ,_dgc :=_dcbf .newPdfAnnotationMovieFromDict (_dcbd );if _dgc !=nil {return nil ,_dgc ;};_cafd .PdfAnnotation =_fgda ;_fgda ._dcf =_cafd ;return _fgda ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ccba ,_ebea :=_dcbf .newPdfAnnotationScreenFromDict (_dcbd );
if _ebea !=nil {return nil ,_ebea ;};_ccba .PdfAnnotation =_fgda ;_fgda ._dcf =_ccba ;return _fgda ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_dagdb ,_ffc :=_dcbf .newPdfAnnotationWidgetFromDict (_dcbd );if _ffc !=nil {return nil ,_ffc ;};_dagdb .PdfAnnotation =_fgda ;
_fgda ._dcf =_dagdb ;return _fgda ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_daf ,_caeg :=_dcbf .newPdfAnnotationPrinterMarkFromDict (_dcbd );if _caeg !=nil {return nil ,_caeg ;};_daf .PdfAnnotation =_fgda ;_fgda ._dcf =_daf ;
return _fgda ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fgfe ,_eeed :=_dcbf .newPdfAnnotationTrapNetFromDict (_dcbd );if _eeed !=nil {return nil ,_eeed ;};_fgfe .PdfAnnotation =_fgda ;_fgda ._dcf =_fgfe ;return _fgda ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gdb ,_fde :=_dcbf .newPdfAnnotationWatermarkFromDict (_dcbd );
if _fde !=nil {return nil ,_fde ;};_gdb .PdfAnnotation =_fgda ;_fgda ._dcf =_gdb ;return _fgda ,nil ;case "\u0033\u0044":_dgbe ,_gbe :=_dcbf .newPdfAnnotation3DFromDict (_dcbd );if _gbe !=nil {return nil ,_gbe ;};_dgbe .PdfAnnotation =_fgda ;_fgda ._dcf =_dgbe ;
return _fgda ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_afaa ,_bad :=_dcbf .newPdfAnnotationProjectionFromDict (_dcbd );if _bad !=nil {return nil ,_bad ;};_afaa .PdfAnnotation =_fgda ;_fgda ._dcf =_afaa ;return _fgda ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_dcff ,_cfg :=_dcbf .newPdfAnnotationRedactFromDict (_dcbd );if _cfg !=nil {return nil ,_cfg ;};_dcff .PdfAnnotation =_fgda ;_fgda ._dcf =_dcff ;return _fgda ,nil ;};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_cfa );
return nil ,nil ;};type pdfFontSimple struct{fontCommon ;_dbdbac *_bg .PdfIndirectObject ;_cccaa map[_be .CharCode ]float64 ;_cbdd _be .TextEncoder ;_dbfd _be .TextEncoder ;_aeaf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bg .PdfObject ;LastChar _bg .PdfObject ;Widths _bg .PdfObject ;Encoding _bg .PdfObject ;_eggd *_adb .RuneCharSafeMap ;};

// ToPdfObject implements interface PdfModel.
func (_afa *PdfActionLaunch )ToPdfObject ()_bg .PdfObject {_afa .PdfAction .ToPdfObject ();_cge :=_afa ._gfd ;_dde :=_cge .PdfObject .(*_bg .PdfObjectDictionary );_dde .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeLaunch )));if _afa .F !=nil {_dde .Set ("\u0046",_afa .F .ToPdfObject ());
};_dde .SetIfNotNil ("\u0057\u0069\u006e",_afa .Win );_dde .SetIfNotNil ("\u004d\u0061\u0063",_afa .Mac );_dde .SetIfNotNil ("\u0055\u006e\u0069\u0078",_afa .Unix );_dde .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_afa .NewWindow );return _cge ;
};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_dbcc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_dbcc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_dbcc ._egcb =acroForm ;};func (_acae *PdfReader )newPdfAnnotationTrapNetFromDict (_aba *_bg .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_aged :=PdfAnnotationTrapNet {};
return &_aged ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_agdce *XObjectForm )GetContainingPdfObject ()_bg .PdfObject {return _agdce ._egfbg };

// ToPdfObject implements interface PdfModel.
func (_fadc *PdfAnnotationScreen )ToPdfObject ()_bg .PdfObject {_fadc .PdfAnnotation .ToPdfObject ();_ageg :=_fadc ._cdcf ;_bfae :=_ageg .PdfObject .(*_bg .PdfObjectDictionary );_bfae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_bfae .SetIfNotNil ("\u0054",_fadc .T );_bfae .SetIfNotNil ("\u004d\u004b",_fadc .MK );_bfae .SetIfNotNil ("\u0041",_fadc .A );_bfae .SetIfNotNil ("\u0041\u0041",_fadc .AA );return _ageg ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ecad *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _fggec []_be .TextEncoder ;var _dbge _be .CMapEncoder ;if _aeef :=_ecad .baseFields ()._ddddg ;_aeef !=nil {_dbge =_be .NewCMapEncoder ("",nil ,_aeef );};_dcdb :=_ecad .Encoder ();
if _dcdb !=nil {switch _agabb :=_dcdb .(type ){case _be .SimpleEncoder :_gbbc :=_agabb .BaseName ();if _ ,_aeae :=_ebgbd [_gbbc ];_aeae {_fggec =append (_fggec ,_dcdb );};};};if len (_fggec )==0{if _ecad .baseFields ()._ddddg !=nil {_fggec =append (_fggec ,_dbge );
};if _dcdb !=nil {_fggec =append (_fggec ,_dcdb );};};var _cfdg _bb .Buffer ;var _gebgf int ;for _ ,_dbed :=range data {var _dcaee bool ;for _ ,_ecfa :=range _fggec {if _cddf :=_ecfa .Encode (string (_dbed ));len (_cddf )> 0{_cfdg .Write (_cddf );_dcaee =true ;
break ;};};if !_dcaee {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dbed );
_gebgf ++;};};if _gebgf !=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_gebgf ,_ecad ,_fggec );
};return _cfdg .Bytes (),_gebgf ;};func (_cfba *PdfAnnotation )String ()string {_acag :="";_cacaf ,_gbfe :=_cfba .ToPdfObject ().(*_bg .PdfIndirectObject );if _gbfe {_acag =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cfba ._dcf ,_cacaf .PdfObject .String ());
};return _acag ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_da :=NewPdfAction ();_gb :=&PdfActionURI {};_gb .PdfAction =_da ;_da .SetContext (_gb );return _gb ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_cgffc *PdfPageResources )GetExtGState (keyName _bg .PdfObjectName )(_bg .PdfObject ,bool ){if _cgffc .ExtGState ==nil {return nil ,false ;};_dbbdc ,_cfbaf :=_bg .TraceToDirectObject (_cgffc .ExtGState ).(*_bg .PdfObjectDictionary );if !_cfbaf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgffc .ExtGState );
return nil ,false ;};if _ecde :=_dbbdc .Get (keyName );_ecde !=nil {return _ecde ,true ;};return nil ,false ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bg .PdfObjectStream )(*XObjectForm ,error ){_beecd :=&XObjectForm {};_beecd ._egfbg =stream ;_afbad :=*(stream .PdfObjectDictionary );_eggfa ,_cbabb :=_bg .NewEncoderFromStream (stream );if _cbabb !=nil {return nil ,_cbabb ;
};_beecd .Filter =_eggfa ;if _caac :=_afbad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_caac !=nil {_fgfccf ,_fcfge :=_caac .(*_bg .PdfObjectName );if !_fcfge {return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_fgfccf !="\u0046\u006f\u0072\u006d"{_fa .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _aagce :=_afbad .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_aagce !=nil {_beecd .FormType =_aagce ;};if _cfeac :=_afbad .Get ("\u0042\u0042\u006f\u0078");_cfeac !=nil {_beecd .BBox =_cfeac ;};if _abcab :=_afbad .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_abcab !=nil {_beecd .Matrix =_abcab ;};if _dbagd :=_afbad .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dbagd !=nil {_dbagd =_bg .TraceToDirectObject (_dbagd );_gaccb ,_bdfb :=_dbagd .(*_bg .PdfObjectDictionary );if !_bdfb {_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bg .ErrTypeError ;};_agdcg ,_dcdfg :=NewPdfPageResourcesFromDict (_gaccb );if _dcdfg !=nil {_fa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dcdfg ;};_beecd .Resources =_agdcg ;_fa .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_beecd .Resources );};_beecd .Group =_afbad .Get ("\u0047\u0072\u006fu\u0070");
_beecd .Ref =_afbad .Get ("\u0052\u0065\u0066");_beecd .MetaData =_afbad .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_beecd .PieceInfo =_afbad .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_beecd .LastModified =_afbad .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_beecd .StructParent =_afbad .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_beecd .StructParents =_afbad .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_beecd .OPI =_afbad .Get ("\u004f\u0050\u0049");
_beecd .OC =_afbad .Get ("\u004f\u0043");_beecd .Name =_afbad .Get ("\u004e\u0061\u006d\u0065");_beecd .Stream =stream .Stream ;return _beecd ,nil ;};func (_bdbgd *PdfWriter )writeObject (_fcbfc int ,_aefgc _bg .PdfObject ){_fa .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_fcbfc );
if _edcaa ,_ggafd :=_aefgc .(*_bg .PdfIndirectObject );_ggafd {_bdbgd ._ddfce [_fcbfc ]=crossReference {Type :1,Offset :_bdbgd ._dbfbf ,Generation :_edcaa .GenerationNumber };_bfcb :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fcbfc );
if _fdec ,_babcg :=_edcaa .PdfObject .(*pdfSignDictionary );_babcg {_fdec ._gcdda =_bdbgd ._dbfbf +int64 (len (_bfcb ));};if _edcaa .PdfObject ==nil {_fa .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_edcaa .PdfObject =_bg .MakeNull ();};_bfcb +=_edcaa .PdfObject .WriteString ();_bfcb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bdbgd .writeString (_bfcb );return ;};if _dfecbg ,_fcfef :=_aefgc .(*_bg .PdfObjectStream );_fcfef {_bdbgd ._ddfce [_fcbfc ]=crossReference {Type :1,Offset :_bdbgd ._dbfbf ,Generation :_dfecbg .GenerationNumber };
_abeafd :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fcbfc );_abeafd +=_dfecbg .PdfObjectDictionary .WriteString ();_abeafd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdbgd .writeString (_abeafd );_bdbgd .writeBytes (_dfecbg .Stream );
_bdbgd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _eagggd ,_adggfg :=_aefgc .(*_bg .PdfObjectStreams );_adggfg {_bdbgd ._ddfce [_fcbfc ]=crossReference {Type :1,Offset :_bdbgd ._dbfbf ,Generation :_eagggd .GenerationNumber };
_fadfa :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fcbfc );var _bbdca []string ;var _abgaa string ;var _badge int64 ;for _eacbgg ,_daef :=range _eagggd .Elements (){_bcfef ,_gaafg :=_daef .(*_bg .PdfIndirectObject );if !_gaafg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_fcbfc ,_daef );
continue ;};_dbac :=_bcfef .PdfObject .WriteString ()+"\u0020";_abgaa =_abgaa +_dbac ;_bbdca =append (_bbdca ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_bcfef .ObjectNumber ,_badge ));_bdbgd ._ddfce [int (_bcfef .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_fcbfc ,Index :_eacbgg };
_badge =_badge +int64 (len ([]byte (_dbac )));};_bbdf :=_ff .Join (_bbdca ,"\u0020")+"\u0020";_efagc :=_bg .NewFlateEncoder ();_gbgbg :=_efagc .MakeStreamDict ();_gbgbg .Set (_bg .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bg .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_baee :=int64 (_eagggd .Len ());_gbgbg .Set (_bg .PdfObjectName ("\u004e"),_bg .MakeInteger (_baee ));_efcda :=int64 (len (_bbdf ));_gbgbg .Set (_bg .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bg .MakeInteger (_efcda ));_dgdaa ,_ :=_efagc .EncodeBytes ([]byte (_bbdf +_abgaa ));
_dabde :=int64 (len (_dgdaa ));_gbgbg .Set (_bg .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bg .MakeInteger (_dabde ));_fadfa +=_gbgbg .WriteString ();_fadfa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bdbgd .writeString (_fadfa );
_bdbgd .writeBytes (_dgdaa );_bdbgd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bdbgd .writeString (_aefgc .WriteString ());};

// GetDescent returns the Descent of the font `descriptor`.
func (_bbgda *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bg .GetNumberAsFloat (_bbgda .Descent );};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bg .PdfIndirectObject )*PdfOutlineItem {_ecaa :=PdfOutlineItem {};_ecaa ._baag =&_ecaa ;_ecaa .Title =_bg .MakeString (title );_dgcba :=_bg .MakeArray ();_dgcba .Append (page );_dgcba .Append (_bg .MakeName ("\u0046\u0069\u0074"));
_ecaa .Dest =_dgcba ;return &_ecaa ;};

// ToPdfObject implements interface PdfModel.
func (_gacd *PdfAnnotationWatermark )ToPdfObject ()_bg .PdfObject {_gacd .PdfAnnotation .ToPdfObject ();_acgg :=_gacd ._cdcf ;_cdgc :=_acgg .PdfObject .(*_bg .PdfObjectDictionary );_cdgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_cdgc .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gacd .FixedPrint );return _acgg ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_cagbb *PdfPageResources )SetColorspaceByName (keyName _bg .PdfObjectName ,cs PdfColorspace )error {_cbba ,_fdfbd :=_cagbb .GetColorspaces ();if _fdfbd !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fdfbd );
return _fdfbd ;};if _cbba ==nil {_cbba =NewPdfPageResourcesColorspaces ();_cagbb .SetColorSpace (_cbba );};_cbba .Set (keyName ,cs );return nil ;};func (_dadee *pdfFontSimple )updateStandard14Font (){_efage ,_cdccg :=_dadee .Encoder ().(_be .SimpleEncoder );
if !_cdccg {_fa .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dadee .Encoder (),_dadee );return ;};
_becf :=_efage .Charcodes ();_dadee ._cccaa =make (map[_be .CharCode ]float64 ,len (_becf ));for _ ,_egba :=range _becf {_fgbgb ,_ :=_efage .CharcodeToRune (_egba );_baacc ,_ :=_dadee ._eggd .Read (_fgbgb );_dadee ._cccaa [_egba ]=_baacc .Wx ;};};

// ToInteger convert to an integer format.
func (_ccgc *PdfColorDeviceGray )ToInteger (bits int )uint32 {_eag :=_dc .Pow (2,float64 (bits ))-1;return uint32 (_eag *_ccgc .Val ());};

// ToPdfObject implements interface PdfModel.
func (_ef *PdfActionGoToE )ToPdfObject ()_bg .PdfObject {_ef .PdfAction .ToPdfObject ();_cfc :=_ef ._gfd ;_gcg :=_cfc .PdfObject .(*_bg .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeGoToE )));if _ef .F !=nil {_gcg .Set ("\u0046",_ef .F .ToPdfObject ());
};_gcg .SetIfNotNil ("\u0044",_ef .D );_gcg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ef .NewWindow );_gcg .SetIfNotNil ("\u0054",_ef .T );return _cfc ;};

// GetBorderWidth returns the border style's width.
func (_bge *PdfBorderStyle )GetBorderWidth ()float64 {if _bge .W ==nil {return 1;};return *_bge .W ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ecg .Time )(PdfDate ,error ){_dgac :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gdce ,_ :=_af .ParseInt (_dgac [1:3],10,32);_cdgac ,_ :=_af .ParseInt (_dgac [4:6],10,32);return PdfDate {_fcdcf :int64 (timeObj .Year ()),_ecdcd :int64 (timeObj .Month ()),_dcagc :int64 (timeObj .Day ()),_cacfd :int64 (timeObj .Hour ()),_fdbfb :int64 (timeObj .Minute ()),_aggabf :int64 (timeObj .Second ()),_adbdf :_dgac [0],_bged :_gdce ,_debc :_cdgac },nil ;
};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bg .PdfObject ;T _bg .PdfObject ;Operation _bg .PdfObject ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bfbbgg *XObjectImage )SetFilter (encoder _bg .StreamEncoder )error {_ggffcg :=_bfbbgg .Stream ;_dbcadd ,_feddc :=_bfbbgg .Filter .DecodeBytes (_ggffcg );if _feddc !=nil {return _feddc ;};_bfbbgg .Filter =encoder ;encoder .UpdateParams (_bfbbgg .getParamsDict ());
_ggffcg ,_feddc =encoder .EncodeBytes (_dbcadd );if _feddc !=nil {return _feddc ;};_bfbbgg .Stream =_ggffcg ;return nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_fdceb *XObjectForm )GetContentStream ()([]byte ,error ){_adfbg ,_febag :=_bg .DecodeStream (_fdceb ._egfbg );if _febag !=nil {return nil ,_febag ;};return _adfbg ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_efbbc *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gddd ,_dace :=_bg .GetNumbersAsFloat (objects );
if _dace !=nil {return nil ,_dace ;};return _efbbc .ColorFromFloats (_gddd );};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_cdcfc :=PdfColorCalRGB {a ,b ,c };return &_cdcfc ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_eg :=NewPdfAction ();_ffd :=&PdfActionGoTo {};_ffd .PdfAction =_eg ;_eg .SetContext (_ffd );return _ffd ;};func _cgdc (_edfe _bg .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gcbe :=NewPdfColorspaceSpecialSeparation ();
if _gacba ,_eddd :=_edfe .(*_bg .PdfIndirectObject );_eddd {_gcbe ._bbage =_gacba ;};_edfe =_bg .TraceToDirectObject (_edfe );_edfbb ,_bgcc :=_edfe .(*_bg .PdfObjectArray );if !_bgcc {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _edfbb .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_edfe =_edfbb .Get (0);
_cdceb ,_bgcc :=_edfe .(*_bg .PdfObjectName );if !_bgcc {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cdceb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_edfe =_edfbb .Get (1);_cdceb ,_bgcc =_edfe .(*_bg .PdfObjectName );if !_bgcc {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gcbe .ColorantName =_cdceb ;_edfe =_edfbb .Get (2);_cagd ,_bbgb :=NewPdfColorspaceFromPdfObject (_edfe );if _bbgb !=nil {return nil ,_bbgb ;};_gcbe .AlternateSpace =_cagd ;_bbaa ,_bbgb :=_egfbb (_edfbb .Get (3));if _bbgb !=nil {return nil ,_bbgb ;};
_gcbe .TintTransform =_bbaa ;return _gcbe ,nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_egc :=NewPdfAnnotation ();_fge :=&PdfAnnotationSquiggly {};_fge .PdfAnnotation =_egc ;_fge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egc .SetContext (_fge );return _fge ;};

// Encoder returns the font's text encoder.
func (_aeec pdfCIDFontType0 )Encoder ()_be .TextEncoder {return _aeec ._cgbee };

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_agcfc FieldFlag )Has (fl FieldFlag )bool {return (_agcfc .Mask ()&fl .Mask ())> 0};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bdgc :=appender .Reader .DSS ;if _bdgc ==nil {_bdgc =NewDSS ();};if _fefdd :=_bdgc .generateHashMaps ();_fefdd !=nil {return nil ,_fefdd ;};return &LTV {CertClient :_cg .NewCertClient (),OCSPClient :_cg .NewOCSPClient (),CRLClient :_cg .NewCRLClient (),SkipExisting :true ,_edefg :appender ,_agbea :_bdgc },nil ;
};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bg .PdfObject ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// String returns a string that describes `base`.
func (_fabbg fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_fabbg .coreString ());};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_egaca *PdfPageResources )GetXObjectFormByName (keyName _bg .PdfObjectName )(*XObjectForm ,error ){_cggfc ,_eaba :=_egaca .GetXObjectByName (keyName );if _cggfc ==nil {return nil ,nil ;};if _eaba !=XObjectTypeForm {return nil ,_fff .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_agedd ,_bedfg :=NewXObjectFormFromStream (_cggfc );if _bedfg !=nil {return nil ,_bedfg ;};return _agedd ,nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bggdb :=&PdfColorspaceDeviceN {};return _bggdb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acfbe *PdfShadingType2 )ToPdfObject ()_bg .PdfObject {_acfbe .PdfShading .ToPdfObject ();_bddgf ,_abeg :=_acfbe .getShadingDict ();if _abeg !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bddgf ==nil {_fa .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _acfbe .Coords !=nil {_bddgf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_acfbe .Coords );
};if _acfbe .Domain !=nil {_bddgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acfbe .Domain );};if _acfbe .Function !=nil {if len (_acfbe .Function )==1{_bddgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acfbe .Function [0].ToPdfObject ());
}else {_fcfca :=_bg .MakeArray ();for _ ,_dgagf :=range _acfbe .Function {_fcfca .Append (_dgagf .ToPdfObject ());};_bddgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fcfca );};};if _acfbe .Extend !=nil {_bddgf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_acfbe .Extend );
};return _acfbe ._cabb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fcee *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acba ,_fdgd :=_bg .GetNumbersAsFloat (objects );
if _fdgd !=nil {return nil ,_fdgd ;};return _fcee .ColorFromFloats (_acba );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aedab *PdfShadingType6 )ToPdfObject ()_bg .PdfObject {_aedab .PdfShading .ToPdfObject ();_eeggb ,_febfa :=_aedab .getShadingDict ();if _febfa !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aedab .BitsPerCoordinate !=nil {_eeggb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aedab .BitsPerCoordinate );};if _aedab .BitsPerComponent !=nil {_eeggb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aedab .BitsPerComponent );
};if _aedab .BitsPerFlag !=nil {_eeggb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aedab .BitsPerFlag );};if _aedab .Decode !=nil {_eeggb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aedab .Decode );};if _aedab .Function !=nil {if len (_aedab .Function )==1{_eeggb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aedab .Function [0].ToPdfObject ());
}else {_gcbgcb :=_bg .MakeArray ();for _ ,_cfceb :=range _aedab .Function {_gcbgcb .Append (_cfceb .ToPdfObject ());};_eeggb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcbgcb );};};return _aedab ._cabb ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cb :=NewPdfAnnotation ();_gag :=&PdfAnnotationLine {};_gag .PdfAnnotation =_cb ;_gag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cb .SetContext (_gag );return _gag ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fbcbf *PdfWriter )SetPageLabels (pageLabels _bg .PdfObject )error {if pageLabels ==nil {return nil ;};_fa .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fbcbf ._gcff .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fbcbf .addObjects (pageLabels );};

// ToPdfObject implements interface PdfModel.
func (_dcbg *PdfActionSubmitForm )ToPdfObject ()_bg .PdfObject {_dcbg .PdfAction .ToPdfObject ();_cgg :=_dcbg ._gfd ;_cac :=_cgg .PdfObject .(*_bg .PdfObjectDictionary );_cac .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeSubmitForm )));if _dcbg .F !=nil {_cac .Set ("\u0046",_dcbg .F .ToPdfObject ());
};_cac .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dcbg .Fields );_cac .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dcbg .Flags );return _cgg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ecgde *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aacfg :=vals [0];if _aacfg < 0.0||_aacfg > 100.0{_fa .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_aacfg );
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgfg :=vals [1];_fgfc :=float64 (-100);_bcbb :=float64 (100);if len (_ecgde .Range )> 1{_fgfc =_ecgde .Range [0];_bcbb =_ecgde .Range [1];};if _cgfg < _fgfc ||_cgfg > _bcbb {_fa .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cgfg ,_fgfc ,_bcbb );
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acbf :=vals [2];_eceed :=float64 (-100);_fdcf :=float64 (100);if len (_ecgde .Range )> 3{_eceed =_ecgde .Range [2];_fdcf =_ecgde .Range [3];};if _acbf < _eceed ||_acbf > _fdcf {_fa .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_acbf ,_eceed ,_fdcf );
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daaca :=NewPdfColorLab (_aacfg ,_cgfg ,_acbf );return _daaca ,nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cedaec .Lock ();defer _cedaec .Unlock ();_dadfd =subject };var _fccdf =_aa .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bdb :=NewPdfAnnotation ();_dagd :=&PdfAnnotationTrapNet {};_dagd .PdfAnnotation =_bdb ;_bdb .SetContext (_dagd );return _dagd ;};var _gaed =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fg :=&PdfAction {};_fg ._gfd =_bg .MakeIndirectObject (_bg .MakeDict ());return _fg ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bg .PdfObject ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_adb .CharMetrics ;func _abacad (_efce *_bg .PdfObjectDictionary )(*PdfShadingType2 ,error ){_fgaea :=PdfShadingType2 {};_fefg :=_efce .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fefg ==nil {_fa .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aebf ,_gegbd :=_fefg .(*_bg .PdfObjectArray );if !_gegbd {_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fefg );
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aebf .Len ()!=4{_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aebf .Len ());
return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_fgaea .Coords =_aebf ;if _gcaff :=_efce .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gcaff !=nil {_gcaff =_bg .TraceToDirectObject (_gcaff );
_dccfe ,_edece :=_gcaff .(*_bg .PdfObjectArray );if !_edece {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcaff );return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgaea .Domain =_dccfe ;};_fefg =_efce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fefg ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fgaea .Function =[]PdfFunction {};if _dabf ,_bffcg :=_fefg .(*_bg .PdfObjectArray );_bffcg {for _ ,_bgafb :=range _dabf .Elements (){_agfed ,_febd :=_egfbb (_bgafb );if _febd !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_febd );
return nil ,_febd ;};_fgaea .Function =append (_fgaea .Function ,_agfed );};}else {_bcca ,_dbfgd :=_egfbb (_fefg );if _dbfgd !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbfgd );
return nil ,_dbfgd ;};_fgaea .Function =append (_fgaea .Function ,_bcca );};if _ecdf :=_efce .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ecdf !=nil {_ecdf =_bg .TraceToDirectObject (_ecdf );_gcgeg ,_deebb :=_ecdf .(*_bg .PdfObjectArray );if !_deebb {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecdf );
return nil ,_bg .ErrTypeError ;};if _gcgeg .Len ()!=2{_fa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gcgeg .Len ());return nil ,ErrInvalidAttribute ;
};_fgaea .Extend =_gcgeg ;};return &_fgaea ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bg .PdfObject ;};

// Encoder returns the font's text encoder.
func (_ecgce *PdfFont )Encoder ()_be .TextEncoder {_gecg :=_ecgce .actualFont ();if _gecg ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ecgce ._fcafc );
return nil ;};return _gecg .Encoder ();};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_ccag *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ebce ,_ ,_aeaaa :=_ccag .CharcodesToUnicodeWithStats (_ccag .BytesToCharcodes (data ));_gbgfe :=_be .ExpandLigatures (_ebce );return _gbgfe ,_cf .RuneCountInString (_gbgfe ),_aeaaa ;
};

// Subtype returns the font's "Subtype" field.
func (_bdfe *PdfFont )Subtype ()string {_cdgff :=_bdfe .baseFields ()._ccbf ;if _geffe ,_cdef :=_bdfe ._fcafc .(*pdfFontType0 );_cdef {_cdgff =_cdgff +"\u003a"+_geffe .DescendantFont .Subtype ();};return _cdgff ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fgdc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fgdc .UnderlyingCS ==nil {return nil ,_fff .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fgdc .UnderlyingCS .ColorFromFloats (vals );};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_fcfdd *PdfPage )error ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgad *PdfShadingType7 )ToPdfObject ()_bg .PdfObject {_cgad .PdfShading .ToPdfObject ();_bgaad ,_bagba :=_cgad .getShadingDict ();if _bagba !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgad .BitsPerCoordinate !=nil {_bgaad .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgad .BitsPerCoordinate );};if _cgad .BitsPerComponent !=nil {_bgaad .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgad .BitsPerComponent );
};if _cgad .BitsPerFlag !=nil {_bgaad .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cgad .BitsPerFlag );};if _cgad .Decode !=nil {_bgaad .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgad .Decode );};if _cgad .Function !=nil {if len (_cgad .Function )==1{_bgaad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgad .Function [0].ToPdfObject ());
}else {_ecgef :=_bg .MakeArray ();for _ ,_ggeaa :=range _cgad .Function {_ecgef .Append (_ggeaa .ToPdfObject ());};_bgaad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecgef );};};return _cgad ._cabb ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bg .PdfObjectString ;Author *_bg .PdfObjectString ;Subject *_bg .PdfObjectString ;Keywords *_bg .PdfObjectString ;Creator *_bg .PdfObjectString ;Producer *_bg .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_bg .PdfObjectName ;
_eeac *_bg .PdfObjectDictionary ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bg .PdfObject )(*PdfFilespec ,error ){_febcg :=&PdfFilespec {};var _aecb *_bg .PdfObjectDictionary ;if _dgee ,_dgfcea :=_bg .GetIndirect (obj );_dgfcea {_febcg ._cdfaf =_dgee ;_ecfbge ,_dgeag :=_bg .GetDict (_dgee .PdfObject );
if !_dgeag {_fa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bg .ErrTypeError ;};_aecb =_ecfbge ;}else if _cacea ,_acaed :=_bg .GetDict (obj );
_acaed {_febcg ._cdfaf =_cacea ;_aecb =_cacea ;}else {_fa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bg .ErrTypeError ;};if _aecb ==nil {_fa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bddb :=_aecb .Get ("\u0054\u0079\u0070\u0065");_bddb !=nil {_cbffa ,_edead :=_bddb .(*_bg .PdfObjectName );if !_edead {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bddb );
}else {if *_cbffa !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_cbffa );
};};};if _cebd :=_aecb .Get ("\u0046\u0053");_cebd !=nil {_febcg .FS =_cebd ;};if _faeg :=_aecb .Get ("\u0046");_faeg !=nil {_febcg .F =_faeg ;};if _ffac :=_aecb .Get ("\u0055\u0046");_ffac !=nil {_febcg .UF =_ffac ;};if _dbcb :=_aecb .Get ("\u0044\u004f\u0053");
_dbcb !=nil {_febcg .DOS =_dbcb ;};if _babbd :=_aecb .Get ("\u004d\u0061\u0063");_babbd !=nil {_febcg .Mac =_babbd ;};if _fbef :=_aecb .Get ("\u0055\u006e\u0069\u0078");_fbef !=nil {_febcg .Unix =_fbef ;};if _cbdf :=_aecb .Get ("\u0049\u0044");_cbdf !=nil {_febcg .ID =_cbdf ;
};if _caeab :=_aecb .Get ("\u0056");_caeab !=nil {_febcg .V =_caeab ;};if _efgdc :=_aecb .Get ("\u0045\u0046");_efgdc !=nil {_febcg .EF =_efgdc ;};if _dgfcab :=_aecb .Get ("\u0052\u0046");_dgfcab !=nil {_febcg .RF =_dgfcab ;};if _ebbd :=_aecb .Get ("\u0044\u0065\u0073\u0063");
_ebbd !=nil {_febcg .Desc =_ebbd ;};if _fcca :=_aecb .Get ("\u0043\u0049");_fcca !=nil {_febcg .CI =_fcca ;};return _febcg ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ffg .PSProgram ;_dfadc *_ffg .PSExecutor ;_gdcde []byte ;_daeb *_bg .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_bab *PdfAnnotationInk )ToPdfObject ()_bg .PdfObject {_bab .PdfAnnotation .ToPdfObject ();_fcba :=_bab ._cdcf ;_fdcdc :=_fcba .PdfObject .(*_bg .PdfObjectDictionary );_bab .PdfAnnotationMarkup .appendToPdfDictionary (_fdcdc );_fdcdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0049\u006e\u006b"));
_fdcdc .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_bab .InkList );_fdcdc .SetIfNotNil ("\u0042\u0053",_bab .BS );return _fcba ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bg .PdfObject ;BS _bg .PdfObject ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_dgca *DSS )GetContainingPdfObject ()_bg .PdfObject {return _dgca ._gacab };

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bg .PdfObjectInteger ;BitsPerComponent *_bg .PdfObjectInteger ;BitsPerFlag *_bg .PdfObjectInteger ;Decode *_bg .PdfObjectArray ;Function []PdfFunction ;};

// Items returns all children outline items.
func (_gefce *OutlineItem )Items ()[]*OutlineItem {return _gefce .Entries };func (_ead *PdfReader )newPdfAnnotationPopupFromDict (_adbg *_bg .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bggc :=PdfAnnotationPopup {};_bggc .Parent =_adbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_bggc .Open =_adbg .Get ("\u004f\u0070\u0065\u006e");return &_bggc ,nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_dbcg *PdfPageResources )GetColorspaceByName (keyName _bg .PdfObjectName )(PdfColorspace ,bool ){_edga ,_ecbbc :=_dbcg .GetColorspaces ();if _ecbbc !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ecbbc );
return nil ,false ;};if _edga ==nil {return nil ,false ;};_daceg ,_bbfeg :=_edga .Colorspaces [string (keyName )];if !_bbfeg {return nil ,false ;};return _daceg ,true ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cdcga *PdfField )SetContext (ctx PdfModel ){_cdcga ._ccgd =ctx };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_eggg :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_eggg ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dfdaa *PdfFont )ToUnicode ()string {if _dfdaa .baseFields ()._ddddg ==nil {return "";};return _dfdaa .baseFields ()._ddddg .Name ();};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_bggd *_bg .PdfIndirectObject ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_fgfbd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bg .PdfObject {_dfcfe :=_bg .MakeDict ();if _fgfbd .Subtype !=nil {_dfcfe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fgfbd .Subtype );};_dfcfe .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_fgfbd .Colorants );
_dfcfe .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_fgfbd .Process );_dfcfe .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_fgfbd .MixingHints );if _fgfbd ._dgebb !=nil {_fgfbd ._dgebb .PdfObject =_dfcfe ;return _fgfbd ._dgebb ;
};return _dfcfe ;};func _dgff ()string {_cedaec .Lock ();defer _cedaec .Unlock ();return _dadfd };

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_cedae :=map[rune ]int {};for _ ,_cbffd :=range text {_cedae [_cbffd ]++;};return _cedae ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_fea *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ebaa _ab .ReadSeeker ;_cgeb *_bg .PdfParser ;_dgfca *PdfReader ;Reader *PdfReader ;_dgec []*PdfPage ;_egcb *PdfAcroForm ;_gaac *DSS ;_becb _bg .XrefTable ;_eacce int64 ;_bfef int ;_egf []_bg .PdfObject ;_geb map[_bg .PdfObject ]struct{};
_dafc map[_bg .PdfObject ]int64 ;_faae map[_bg .PdfObject ]struct{};_ggbe map[_bg .PdfObject ]struct{};_dgce int64 ;_dbaf bool ;};func (_cgf *PdfReader )newPdfActionFromIndirectObject (_beaf *_bg .PdfIndirectObject )(*PdfAction ,error ){_bffg ,_affa :=_beaf .PdfObject .(*_bg .PdfObjectDictionary );
if !_affa {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cgf ._dgaed .GetModelFromPrimitive (_bffg );model !=nil {_dcc ,_ffe :=model .(*PdfAction );if !_ffe {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dcc ,nil ;};_fdce :=&PdfAction {};_fdce ._gfd =_beaf ;_cgf ._dgaed .Register (_bffg ,_fdce );if _cfcc :=_bffg .Get ("\u0054\u0079\u0070\u0065");_cfcc !=nil {_adba ,_dca :=_cfcc .(*_bg .PdfObjectName );if !_dca {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cfcc );
}else {if *_adba !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fa .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_adba );
};_fdce .Type =_adba ;};};if _eefb :=_bffg .Get ("\u004e\u0065\u0078\u0074");_eefb !=nil {_fdce .Next =_eefb ;};if _dfc :=_bffg .Get ("\u0053");_dfc !=nil {_fdce .S =_dfc ;};_bfbf ,_cafc :=_fdce .S .(*_bg .PdfObjectName );if !_cafc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fdce .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fdce .S );};_gbf :=PdfActionType (_bfbf .String ());
switch _gbf {case ActionTypeGoTo :_gcgg ,_affe :=_cgf .newPdfActionGotoFromDict (_bffg );if _affe !=nil {return nil ,_affe ;};_gcgg .PdfAction =_fdce ;_fdce ._gd =_gcgg ;return _fdce ,nil ;case ActionTypeGoToR :_dbc ,_fgf :=_cgf .newPdfActionGotoRFromDict (_bffg );
if _fgf !=nil {return nil ,_fgf ;};_dbc .PdfAction =_fdce ;_fdce ._gd =_dbc ;return _fdce ,nil ;case ActionTypeGoToE :_fgb ,_aaee :=_cgf .newPdfActionGotoEFromDict (_bffg );if _aaee !=nil {return nil ,_aaee ;};_fgb .PdfAction =_fdce ;_fdce ._gd =_fgb ;
return _fdce ,nil ;case ActionTypeLaunch :_gbg ,_fgd :=_cgf .newPdfActionLaunchFromDict (_bffg );if _fgd !=nil {return nil ,_fgd ;};_gbg .PdfAction =_fdce ;_fdce ._gd =_gbg ;return _fdce ,nil ;case ActionTypeThread :_deb ,_bbge :=_cgf .newPdfActionThreadFromDict (_bffg );
if _bbge !=nil {return nil ,_bbge ;};_deb .PdfAction =_fdce ;_fdce ._gd =_deb ;return _fdce ,nil ;case ActionTypeURI :_bc ,_cca :=_cgf .newPdfActionURIFromDict (_bffg );if _cca !=nil {return nil ,_cca ;};_bc .PdfAction =_fdce ;_fdce ._gd =_bc ;return _fdce ,nil ;
case ActionTypeSound :_caca ,_dfcd :=_cgf .newPdfActionSoundFromDict (_bffg );if _dfcd !=nil {return nil ,_dfcd ;};_caca .PdfAction =_fdce ;_fdce ._gd =_caca ;return _fdce ,nil ;case ActionTypeMovie :_aec ,_fccb :=_cgf .newPdfActionMovieFromDict (_bffg );
if _fccb !=nil {return nil ,_fccb ;};_aec .PdfAction =_fdce ;_fdce ._gd =_aec ;return _fdce ,nil ;case ActionTypeHide :_gccd ,_ddg :=_cgf .newPdfActionHideFromDict (_bffg );if _ddg !=nil {return nil ,_ddg ;};_gccd .PdfAction =_fdce ;_fdce ._gd =_gccd ;
return _fdce ,nil ;case ActionTypeNamed :_bfe ,_ddgb :=_cgf .newPdfActionNamedFromDict (_bffg );if _ddgb !=nil {return nil ,_ddgb ;};_bfe .PdfAction =_fdce ;_fdce ._gd =_bfe ;return _fdce ,nil ;case ActionTypeSubmitForm :_ggde ,_dg :=_cgf .newPdfActionSubmitFormFromDict (_bffg );
if _dg !=nil {return nil ,_dg ;};_ggde .PdfAction =_fdce ;_fdce ._gd =_ggde ;return _fdce ,nil ;case ActionTypeResetForm :_eda ,_aaea :=_cgf .newPdfActionResetFormFromDict (_bffg );if _aaea !=nil {return nil ,_aaea ;};_eda .PdfAction =_fdce ;_fdce ._gd =_eda ;
return _fdce ,nil ;case ActionTypeImportData :_fcf ,_ebe :=_cgf .newPdfActionImportDataFromDict (_bffg );if _ebe !=nil {return nil ,_ebe ;};_fcf .PdfAction =_fdce ;_fdce ._gd =_fcf ;return _fdce ,nil ;case ActionTypeSetOCGState :_dgf ,_fcab :=_cgf .newPdfActionSetOCGStateFromDict (_bffg );
if _fcab !=nil {return nil ,_fcab ;};_dgf .PdfAction =_fdce ;_fdce ._gd =_dgf ;return _fdce ,nil ;case ActionTypeRendition :_cae ,_dba :=_cgf .newPdfActionRenditionFromDict (_bffg );if _dba !=nil {return nil ,_dba ;};_cae .PdfAction =_fdce ;_fdce ._gd =_cae ;
return _fdce ,nil ;case ActionTypeTrans :_adg ,_gbc :=_cgf .newPdfActionTransFromDict (_bffg );if _gbc !=nil {return nil ,_gbc ;};_adg .PdfAction =_fdce ;_fdce ._gd =_adg ;return _fdce ,nil ;case ActionTypeGoTo3DView :_fga ,_dfb :=_cgf .newPdfActionGoTo3DViewFromDict (_bffg );
if _dfb !=nil {return nil ,_dfb ;};_fga .PdfAction =_fdce ;_fdce ._gd =_fga ;return _fdce ,nil ;case ActionTypeJavaScript :_cgef ,_dfd :=_cgf .newPdfActionJavaScriptFromDict (_bffg );if _dfd !=nil {return nil ,_dfd ;};_cgef .PdfAction =_fdce ;_fdce ._gd =_cgef ;
return _fdce ,nil ;};_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gbf );return nil ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_daae *PdfFont )CharcodesToStrings (charcodes []_be .CharCode )([]string ,int ,int ){_gddf :=_daae .baseFields ();_cbade :=make ([]string ,0,len (charcodes ));_fcgba :=0;_bcaca :=_daae .Encoder ();if _bcaca !=nil {switch _gbdf :=_bcaca .(type ){case _be .SimpleEncoder :_dcfff :=_gbdf .BaseName ();
if _ ,_baddg :=_ebgbd [_dcfff ];_baddg {for _ ,_cdba :=range charcodes {if _badde ,_cfcb :=_bcaca .CharcodeToRune (_cdba );_cfcb {_cbade =append (_cbade ,string (_badde ));}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cdba ,charcodes ,_gddf .isCIDFont (),_daae ,_bcaca );
_fcgba ++;_cbade =append (_cbade ,_bbg .MissingCodeString );};};return _cbade ,len (_cbade ),_fcgba ;};};};for _ ,_ebgfa :=range charcodes {if _gddf ._ddddg !=nil {if _gcfa ,_faba :=_gddf ._ddddg .CharcodeToUnicode (_bbg .CharCode (_ebgfa ));_faba {_cbade =append (_cbade ,_gcfa );
continue ;};};if _bcaca !=nil {if _efdb ,_ffdf :=_bcaca .CharcodeToRune (_ebgfa );_ffdf {_cbade =append (_cbade ,string (_efdb ));continue ;};};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ebgfa ,charcodes ,_gddf .isCIDFont (),_daae ,_bcaca );
_fcgba ++;_cbade =append (_cbade ,_bbg .MissingCodeString );};if _fcgba !=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fcgba ,_daae );
};return _cbade ,len (_cbade ),_fcgba ;};func _begd (_dbbbf *_bg .PdfObjectDictionary ,_ggef *fontCommon )(*pdfFontType3 ,error ){_bbae :=_dbgb (_ggef );_ggddd :=_dbbbf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ggddd ==nil {_ggddd =_bg .MakeInteger (0);
};_bbae .FirstChar =_ggddd ;_eceef ,_acadg :=_bg .GetIntVal (_ggddd );if !_acadg {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ggddd );
return nil ,_bg .ErrTypeError ;};_fged :=_be .CharCode (_eceef );_ggddd =_dbbbf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ggddd ==nil {_ggddd =_bg .MakeInteger (255);};_bbae .LastChar =_ggddd ;_eceef ,_acadg =_bg .GetIntVal (_ggddd );
if !_acadg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ggddd );return nil ,_bg .ErrTypeError ;
};_eacbg :=_be .CharCode (_eceef );_ggddd =_dbbbf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ggddd !=nil {_bbae .Resources =_ggddd ;};_ggddd =_dbbbf .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _ggddd ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_ggddd );
return nil ,_bg .ErrNotSupported ;};_bbae .CharProcs =_ggddd ;_ggddd =_dbbbf .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _ggddd ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_ggddd );
return nil ,_bg .ErrNotSupported ;};_bbae .FontMatrix =_ggddd ;_bbae ._aafe =make (map[_be .CharCode ]float64 );_ggddd =_dbbbf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ggddd !=nil {_bbae .Widths =_ggddd ;_cbbda ,_ggfffd :=_bg .GetArray (_ggddd );
if !_ggfffd {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ggddd );return nil ,_bg .ErrTypeError ;
};_bcgcd ,_agbbg :=_cbbda .ToFloat64Array ();if _agbbg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_agbbg ;};if len (_bcgcd )!=int (_eacbg -_fged +1){_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_eacbg -_fged +1,len (_bcgcd ));
return nil ,_bg .ErrRangeError ;};_dceaf ,_ggfffd :=_bg .GetArray (_bbae .FontMatrix );if !_ggfffd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dceaf );
return nil ,_agbbg ;};_cfaeg ,_agbbg :=_dceaf .ToFloat64Array ();if _agbbg !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_agbbg ;};_fdggd :=_gf .NewMatrix (_cfaeg [0],_cfaeg [1],_cfaeg [2],_cfaeg [3],_cfaeg [4],_cfaeg [5]);for _ebdgb ,_gbcfb :=range _bcgcd {_gefcf ,_ :=_fdggd .Transform (_gbcfb ,_gbcfb );_bbae ._aafe [_fged +_be .CharCode (_ebdgb )]=_gefcf ;};
};_bbae .Encoding =_bg .TraceToDirectObject (_dbbbf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_dcbfc :=_dbbbf .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dcbfc !=nil {_bbae ._ageeb =_bg .TraceToDirectObject (_dcbfc );_cedaea ,_feggb :=_agaag (_bbae ._ageeb ,&_bbae .fontCommon );
if _feggb !=nil {return nil ,_feggb ;};_bbae ._ddddg =_cedaea ;};if _fbfde :=_bbae ._ddddg ;_fbfde !=nil {_bbae ._fgbbe =_be .NewCMapEncoder ("",nil ,_fbfde );}else {_bbae ._fgbbe =_be .NewPdfDocEncoder ();};return _bbae ,nil ;};

// Y returns the value of the yellow component of the color.
func (_faaba *PdfColorDeviceCMYK )Y ()float64 {return _faaba [2]};

// PdfVersion returns version of the PDF file.
func (_cfgdf *PdfReader )PdfVersion ()_bg .Version {return _cfgdf ._gbgb .PdfVersion ()};

// AddWatermarkImage adds a watermark to the page.
func (_bebe *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cfbf ,_cdeda :=_bebe .GetMediaBox ();if _cdeda !=nil {return _cdeda ;};_cdfaa :=_cfbf .Urx -_cfbf .Llx ;_fgfcc :=_cfbf .Ury -_cfbf .Lly ;_cbcb :=float64 (*ximg .Width );
_bgbe :=(_cdfaa -_cbcb )/2;if opt .FitToWidth {_cbcb =_cdfaa ;_bgbe =0;};_gadac :=_fgfcc ;_fddgd :=float64 (0);if opt .PreserveAspectRatio {_gadac =_cbcb *float64 (*ximg .Height )/float64 (*ximg .Width );_fddgd =(_fgfcc -_gadac )/2;};if _bebe .Resources ==nil {_bebe .Resources =NewPdfPageResources ();
};_cfcbb :=0;_efdbf :=_bg .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_cfcbb ));for _bebe .Resources .HasXObjectByName (_efdbf ){_cfcbb ++;_efdbf =_bg .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_cfcbb ));};_cdeda =_bebe .AddImageResource (_efdbf ,ximg );
if _cdeda !=nil {return _cdeda ;};_cfcbb =0;_dfba :=_bg .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_cfcbb ));for _bebe .HasExtGState (_dfba ){_cfcbb ++;_dfba =_bg .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_cfcbb ));};_gacbc :=_bg .MakeDict ();
_gacbc .Set ("\u0042\u004d",_bg .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gacbc .Set ("\u0043\u0041",_bg .MakeFloat (opt .Alpha ));_gacbc .Set ("\u0063\u0061",_bg .MakeFloat (opt .Alpha ));_cdeda =_bebe .AddExtGState (_dfba ,_gacbc );if _cdeda !=nil {return _cdeda ;
};_efgbe :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dfba ,_cbcb ,_gadac ,_bgbe ,_fddgd ,_efdbf );
_bebe .AddContentStreamByString (_efgbe );return nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cdbfa *PdfAcroForm )ToPdfObject ()_bg .PdfObject {_ccgcf :=_cdbfa ._ffacc ;_cecde :=_ccgcf .PdfObject .(*_bg .PdfObjectDictionary );if _cdbfa .Fields !=nil {_dadb :=_bg .PdfObjectArray {};for _ ,_bagad :=range *_cdbfa .Fields {_fabg :=_bagad .GetContext ();
if _fabg !=nil {_dadb .Append (_fabg .ToPdfObject ());}else {_dadb .Append (_bagad .ToPdfObject ());};};_cecde .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dadb );};if _cdbfa .NeedAppearances !=nil {_cecde .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cdbfa .NeedAppearances );
};if _cdbfa .SigFlags !=nil {_cecde .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cdbfa .SigFlags );};if _cdbfa .CO !=nil {_cecde .Set ("\u0043\u004f",_cdbfa .CO );};if _cdbfa .DR !=nil {_cecde .Set ("\u0044\u0052",_cdbfa .DR .ToPdfObject ());
};if _cdbfa .DA !=nil {_cecde .Set ("\u0044\u0041",_cdbfa .DA );};if _cdbfa .Q !=nil {_cecde .Set ("\u0051",_cdbfa .Q );};if _cdbfa .XFA !=nil {_cecde .Set ("\u0058\u0046\u0041",_cdbfa .XFA );};return _ccgcf ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_dgbd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_dcfb :=&PdfFilespec {};_dcfb ._cdfaf =_bg .MakeIndirectObject (_bg .MakeDict ());return _dcfb ;};

// L returns the value of the L component of the color.
func (_gcbc *PdfColorLab )L ()float64 {return _gcbc [0]};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_eebaa :=&PdfOutlineItem {_babc :_bg .MakeIndirectObject (_bg .MakeDict ())};_eebaa ._baag =_eebaa ;return _eebaa ;};

// SetDate sets the `M` field of the signature.
func (_fdedc *PdfSignature )SetDate (date _ecg .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fdedc .M =_bg .MakeString (date .Format (format ));
};type pdfFontType3 struct{fontCommon ;_fbdc *_bg .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bg .PdfObject ;Encoding _bg .PdfObject ;FontBBox _bg .PdfObject ;FontMatrix _bg .PdfObject ;FirstChar _bg .PdfObject ;LastChar _bg .PdfObject ;Widths _bg .PdfObject ;Resources _bg .PdfObject ;_aafe map[_be .CharCode ]float64 ;_fgbbe _be .TextEncoder ;
};

// SetFontByName sets the font specified by keyName to the given object.
func (_ddfb *PdfPageResources )SetFontByName (keyName _bg .PdfObjectName ,obj _bg .PdfObject )error {if _ddfb .Font ==nil {_ddfb .Font =_bg .MakeDict ();};_cbabe ,_fcfag :=_bg .TraceToDirectObject (_ddfb .Font ).(*_bg .PdfObjectDictionary );if !_fcfag {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bg .TraceToDirectObject (_ddfb .Font ));
return _bg .ErrTypeError ;};_cbabe .Set (keyName ,obj );return nil ;};func (_cead *PdfReader )newPdfAnnotationWatermarkFromDict (_dfa *_bg .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fgbd :=PdfAnnotationWatermark {};_fgbd .FixedPrint =_dfa .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_fgbd ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bg .PdfObjectName ;};func (_ggce *PdfReader )newPdfActionResetFormFromDict (_afd *_bg .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_afd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_afd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func (_aaeab *Image )samplesTrimPadding (_gbgdg []uint32 )[]uint32 {_cfebb :=_aaeab .ColorComponents *int (_aaeab .Width )*int (_aaeab .Height );if len (_gbgdg )==_cfebb {return _gbgdg ;};_fddgg :=make ([]uint32 ,_cfebb );_fbeedg :=int (_aaeab .Width )*_aaeab .ColorComponents ;
var _ddaa ,_bgfaf ,_debb ,_edfbba int ;_cfebf :=_ggc .BytesPerLine (int (_aaeab .Width ),int (_aaeab .BitsPerComponent ),_aaeab .ColorComponents );for _ddaa =0;_ddaa < int (_aaeab .Height );_ddaa ++{_bgfaf =_ddaa *int (_aaeab .Width );_debb =_ddaa *_cfebf ;
for _edfbba =0;_edfbba < _fbeedg ;_edfbba ++{_fddgg [_bgfaf +_edfbba ]=_gbgdg [_debb +_edfbba ];};};return _fddgg ;};func (_fbcb *PdfReader )loadAction (_fdcd _bg .PdfObject )(*PdfAction ,error ){if _fccf ,_gabc :=_bg .GetIndirect (_fdcd );_gabc {_deag ,_ccab :=_fbcb .newPdfActionFromIndirectObject (_fccf );
if _ccab !=nil {return nil ,_ccab ;};return _deag ,nil ;}else if !_bg .IsNullObject (_fdcd ){return nil ,_fff .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// SetDecode sets the decode image float slice.
func (_ecdb *Image )SetDecode (decode []float64 ){_ecdb ._bcfbf =decode };

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bggbd :=PdfColorDeviceRGB {r ,g ,b };return &_bggbd ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gege *PdfFont )CharcodesToUnicodeWithStats (charcodes []_be .CharCode )(_ffba []rune ,_eacde ,_ccece int ){_fgad ,_eacde ,_ccece :=_gege .CharcodesToStrings (charcodes );return []rune (_ff .Join (_fgad ,"")),_eacde ,_ccece ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_cbfd *VRI )ToPdfObject ()*_bg .PdfObjectDictionary {_deba :=_bg .MakeDict ();_deba .SetIfNotNil (_bg .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ccbfgb (_cbfd .Cert ));_deba .SetIfNotNil (_bg .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ccbfgb (_cbfd .OCSP ));
_deba .SetIfNotNil (_bg .PdfObjectName ("\u0043\u0052\u004c"),_ccbfgb (_cbfd .CRL ));_deba .SetIfNotNil ("\u0054\u0055",_cbfd .TU );_deba .SetIfNotNil ("\u0054\u0053",_cbfd .TS );return _deba ;};func (_cabf *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gfda *_bg .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_acf :=PdfAnnotationFileAttachment {};
_acee ,_eaab :=_cabf .newPdfAnnotationMarkupFromDict (_gfda );if _eaab !=nil {return nil ,_eaab ;};_acf .PdfAnnotationMarkup =_acee ;_acf .FS =_gfda .Get ("\u0046\u0053");_acf .Name =_gfda .Get ("\u004e\u0061\u006d\u0065");return &_acf ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);

// ToPdfObject implements interface PdfModel.
func (_bfca *PdfAnnotationProjection )ToPdfObject ()_bg .PdfObject {_bfca .PdfAnnotation .ToPdfObject ();_ccbc :=_bfca ._cdcf ;_eacc :=_ccbc .PdfObject .(*_bg .PdfObjectDictionary );_bfca .PdfAnnotationMarkup .appendToPdfDictionary (_eacc );return _ccbc ;
};func _ccbfgb (_bdgfe []*_bg .PdfObjectStream )*_bg .PdfObjectArray {if len (_bdgfe )==0{return nil ;};_bggee :=make ([]_bg .PdfObject ,0,len (_bdgfe ));for _ ,_baeb :=range _bdgfe {_bggee =append (_bggee ,_baeb );};return _bg .MakeArray (_bggee ...);
};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_cdfbc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _dfade ,_cddb :=range _cdfbc ._gcfag {_cdfbc ._gcfag [_dfade ]=mapFunc (_cddb );};};var _agece =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_cgefb *LTV )getOCSPs (_acdg []*_b .Certificate ,_dedgd map[string ]*_b .Certificate )([][]byte ,error ){_ggea :=make ([][]byte ,0,len (_acdg ));for _ ,_febf :=range _acdg {for _ ,_ggda :=range _febf .OCSPServer {if _cgefb .CertClient .IsCA (_febf ){continue ;
};_bacc ,_deaec :=_dedgd [_febf .Issuer .CommonName ];if !_deaec {_fa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bgdaf ,_adeae :=_cgefb .OCSPClient .MakeRequest (_ggda ,_febf ,_bacc );if _adeae !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_adeae );
continue ;};_ggea =append (_ggea ,_bgdaf );};};return _ggea ,nil ;};func (_agbcd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _agbcd ._abcd };func (_ddcb *PdfReader )newPdfAnnotationTextFromDict (_ece *_bg .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gced :=PdfAnnotationText {};
_ddbdf ,_faab :=_ddcb .newPdfAnnotationMarkupFromDict (_ece );if _faab !=nil {return nil ,_faab ;};_gced .PdfAnnotationMarkup =_ddbdf ;_gced .Open =_ece .Get ("\u004f\u0070\u0065\u006e");_gced .Name =_ece .Get ("\u004e\u0061\u006d\u0065");_gced .State =_ece .Get ("\u0053\u0074\u0061t\u0065");
_gced .StateModel =_ece .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gced ,nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_degce *PdfPageResources )HasColorspaceByName (keyName _bg .PdfObjectName )bool {_babca ,_bcgg :=_degce .GetColorspaces ();if _bcgg !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bcgg );
return false ;};if _babca ==nil {return false ;};_ ,_gcabg :=_babca .Colorspaces [string (keyName )];return _gcabg ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bg .PdfObject ;Open _bg .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_degeg pdfCIDFontType2 )GetCharMetrics (code _be .CharCode )(_adb .CharMetrics ,bool ){if _dgbda ,_cgbb :=_degeg ._cfeab [code ];_cgbb {return _adb .CharMetrics {Wx :_dgbda },true ;};_egbcg :=rune (code );_agad ,_dfcdc :=_degeg ._efag [_egbcg ];if !_dfcdc {_agad =int (_degeg ._dfge );
};return _adb .CharMetrics {Wx :float64 (_agad )},true ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ffbc :=&PdfBorderStyle {};return _ffbc };

// Encoder returns the font's text encoder.
func (_gfbf pdfFontType0 )Encoder ()_be .TextEncoder {return _gfbf ._bgcf };

// GetContentStreams returns the content stream as an array of strings.
func (_ddcea *PdfPage )GetContentStreams ()([]string ,error ){_ccdag :=_ddcea .GetContentStreamObjs ();var _cabac []string ;for _ ,_gdbgd :=range _ccdag {_bbaad ,_gffa :=_fcccc (_gdbgd );if _gffa !=nil {return nil ,_gffa ;};_cabac =append (_cabac ,_bbaad );
};return _cabac ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afae *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggba :=vals [0];if _ggba < 0.0||_ggba > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cbbc :=NewPdfColorCalGray (_ggba );return _cbbc ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cdgbf *PdfPage )Duplicate ()*PdfPage {_bcbba :=*_cdgbf ;_bcbba ._fcbg =_bg .MakeDict ();_bcbba ._eecd =_bg .MakeIndirectObject (_bcbba ._fcbg );return &_bcbba ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bg .PdfObjectArray ;};func (_bae *DSS )generateHashMap (_cfcce []*_bg .PdfObjectStream )(map[string ]*_bg .PdfObjectStream ,error ){_bega :=map[string ]*_bg .PdfObjectStream {};for _ ,_dbbg :=range _cfcce {_cgaa ,_gdgc :=_bg .DecodeStream (_dbbg );
if _gdgc !=nil {return nil ,_gdgc ;};_dbg ,_gdgc :=_ecbff (_cgaa );if _gdgc !=nil {return nil ,_gdgc ;};_bega [string (_dbg )]=_dbbg ;};return _bega ,nil ;};func (_gcad *PdfReader )newPdfAnnotationRedactFromDict (_ccc *_bg .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_ddcc :=PdfAnnotationRedact {};
_geca ,_adea :=_gcad .newPdfAnnotationMarkupFromDict (_ccc );if _adea !=nil {return nil ,_adea ;};_ddcc .PdfAnnotationMarkup =_geca ;_ddcc .QuadPoints =_ccc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ddcc .IC =_ccc .Get ("\u0049\u0043");
_ddcc .RO =_ccc .Get ("\u0052\u004f");_ddcc .OverlayText =_ccc .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_ddcc .Repeat =_ccc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_ddcc .DA =_ccc .Get ("\u0044\u0041");_ddcc .Q =_ccc .Get ("\u0051");
return &_ddcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fgdd *PdfBorderStyle )ToPdfObject ()_bg .PdfObject {_aabc :=_bg .MakeDict ();if _fgdd ._daga !=nil {if _bafa ,_bbec :=_fgdd ._daga .(*_bg .PdfIndirectObject );_bbec {_bafa .PdfObject =_aabc ;};};_aabc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fgdd .W !=nil {_aabc .Set ("\u0057",_bg .MakeFloat (*_fgdd .W ));};if _fgdd .S !=nil {_aabc .Set ("\u0053",_bg .MakeName (_fgdd .S .GetPdfName ()));};if _fgdd .D !=nil {_aabc .Set ("\u0044",_bg .MakeArrayFromIntegers (*_fgdd .D ));};if _fgdd ._daga !=nil {return _fgdd ._daga ;
};return _aabc ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ea :=NewPdfAction ();_gfe :=&PdfActionMovie {};_gfe .PdfAction =_ea ;_ea .SetContext (_gfe );return _gfe ;};var _dedbb =false ;

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bbdef *PdfColorspaceCalRGB )ToPdfObject ()_bg .PdfObject {_caff :=&_bg .PdfObjectArray {};_caff .Append (_bg .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fegg :=_bg .MakeDict ();if _bbdef .WhitePoint !=nil {_fccg :=_bg .MakeArray (_bg .MakeFloat (_bbdef .WhitePoint [0]),_bg .MakeFloat (_bbdef .WhitePoint [1]),_bg .MakeFloat (_bbdef .WhitePoint [2]));
_fegg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fccg );}else {_fa .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _bbdef .BlackPoint !=nil {_ebbf :=_bg .MakeArray (_bg .MakeFloat (_bbdef .BlackPoint [0]),_bg .MakeFloat (_bbdef .BlackPoint [1]),_bg .MakeFloat (_bbdef .BlackPoint [2]));_fegg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ebbf );
};if _bbdef .Gamma !=nil {_bbecc :=_bg .MakeArray (_bg .MakeFloat (_bbdef .Gamma [0]),_bg .MakeFloat (_bbdef .Gamma [1]),_bg .MakeFloat (_bbdef .Gamma [2]));_fegg .Set ("\u0047\u0061\u006dm\u0061",_bbecc );};if _bbdef .Matrix !=nil {_afde :=_bg .MakeArray (_bg .MakeFloat (_bbdef .Matrix [0]),_bg .MakeFloat (_bbdef .Matrix [1]),_bg .MakeFloat (_bbdef .Matrix [2]),_bg .MakeFloat (_bbdef .Matrix [3]),_bg .MakeFloat (_bbdef .Matrix [4]),_bg .MakeFloat (_bbdef .Matrix [5]),_bg .MakeFloat (_bbdef .Matrix [6]),_bg .MakeFloat (_bbdef .Matrix [7]),_bg .MakeFloat (_bbdef .Matrix [8]));
_fegg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afde );};_caff .Append (_fegg );if _bbdef ._bggaf !=nil {_bbdef ._bggaf .PdfObject =_caff ;return _bbdef ._bggaf ;};return _caff ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dcdfa *PdfColorspaceCalGray )ToPdfObject ()_bg .PdfObject {_gfbad :=&_bg .PdfObjectArray {};_gfbad .Append (_bg .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_dafb :=_bg .MakeDict ();if _dcdfa .WhitePoint !=nil {_dafb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bg .MakeArray (_bg .MakeFloat (_dcdfa .WhitePoint [0]),_bg .MakeFloat (_dcdfa .WhitePoint [1]),_bg .MakeFloat (_dcdfa .WhitePoint [2])));
}else {_fa .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dcdfa .BlackPoint !=nil {_dafb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bg .MakeArray (_bg .MakeFloat (_dcdfa .BlackPoint [0]),_bg .MakeFloat (_dcdfa .BlackPoint [1]),_bg .MakeFloat (_dcdfa .BlackPoint [2])));
};_dafb .Set ("\u0047\u0061\u006dm\u0061",_bg .MakeFloat (_dcdfa .Gamma ));_gfbad .Append (_dafb );if _dcdfa ._bggd !=nil {_dcdfa ._bggd .PdfObject =_gfbad ;return _dcdfa ._bggd ;};return _gfbad ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_ccddd *PdfPageResources )SetShadingByName (keyName _bg .PdfObjectName ,shadingObj _bg .PdfObject )error {if _ccddd .Shading ==nil {_ccddd .Shading =_bg .MakeDict ();};_fgfdb ,_dcfcc :=_ccddd .Shading .(*_bg .PdfObjectDictionary );if !_dcfcc {return _bg .ErrTypeError ;
};_fgfdb .Set (keyName ,shadingObj );return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_eecec *Image )SetAlpha (alpha []byte ){_eecec ._gcfag =alpha };const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ca :=NewPdfAction ();_bbd :=&PdfActionHide {};_bbd .PdfAction =_ca ;_ca .SetContext (_bbd );return _bbd ;};

// SetReason sets the `Reason` field of the signature.
func (_bbcfb *PdfSignature )SetReason (reason string ){_bbcfb .Reason =_bg .MakeString (reason )};

// ToPdfObject converts the font to a PDF representation.
func (_gfcb *pdfFontType0 )ToPdfObject ()_bg .PdfObject {if _gfcb ._fgeeb ==nil {_gfcb ._fgeeb =&_bg .PdfIndirectObject {};};_aebd :=_gfcb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gfcb ._fgeeb .PdfObject =_aebd ;if _gfcb .Encoding !=nil {_aebd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfcb .Encoding );
}else if _gfcb ._bgcf !=nil {_aebd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gfcb ._bgcf .ToPdfObject ());};if _gfcb .DescendantFont !=nil {_aebd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bg .MakeArray (_gfcb .DescendantFont .ToPdfObject ()));
};return _gfcb ._fgeeb ;};func (_daa *PdfReader )newPdfActionNamedFromDict (_afg *_bg .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_afg .Get ("\u004e")},nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_cddc *PdfPage )GetAllContentStreams ()(string ,error ){_ceeag ,_fbfdeb :=_cddc .GetContentStreams ();if _fbfdeb !=nil {return "",_fbfdeb ;};return _ff .Join (_ceeag ,"\u0020"),nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_abbc ,_fdadb :=_ee .Open (filePath );if _fdadb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fdadb );
return nil ,_fdadb ;};defer _abbc .Close ();return NewCompositePdfFontFromTTF (_abbc );};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_bccgd *_bg .PdfIndirectObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_egfg *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ce :=NewPdfAction ();_bea :=&PdfActionResetForm {};_bea .PdfAction =_ce ;_ce .SetContext (_bea );return _bea ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_eac :=NewPdfAnnotation ();_ddcf :=&PdfAnnotationSound {};_ddcf .PdfAnnotation =_eac ;_ddcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eac .SetContext (_ddcf );return _ddcf ;};func (_cgdde *pdfFontType3 )baseFields ()*fontCommon {return &_cgdde .fontCommon };


// WriteToFile writes the output PDF to file.
func (_geaeb *PdfWriter )WriteToFile (outputFilePath string )error {_bcbea ,_cged :=_ee .Create (outputFilePath );if _cged !=nil {return _cged ;};defer _bcbea .Close ();return _geaeb .Write (_bcbea );};

// ToPdfObject implements interface PdfModel.
func (_ecdg *PdfAnnotationMovie )ToPdfObject ()_bg .PdfObject {_ecdg .PdfAnnotation .ToPdfObject ();_fedb :=_ecdg ._cdcf ;_abea :=_fedb .PdfObject .(*_bg .PdfObjectDictionary );_abea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u004d\u006f\u0076i\u0065"));
_abea .SetIfNotNil ("\u0054",_ecdg .T );_abea .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ecdg .Movie );_abea .SetIfNotNil ("\u0041",_ecdg .A );return _fedb ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);
FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);
FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);
FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cdb :=NewPdfAction ();_dab :=&PdfActionTrans {};_dab .PdfAction =_cdb ;_cdb .SetContext (_dab );return _dab ;};

// ToInteger convert to an integer format.
func (_bbdg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gfcf :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gfcf *_bbdg .A ()),uint32 (_gfcf *_bbdg .B ()),uint32 (_gfcf *_bbdg .C ())};};func _fdbf (_dgdb string )map[string ]string {_badag :=_fccdf .Split (_dgdb ,-1);
_eded :=map[string ]string {};for _ ,_bbce :=range _badag {_eceb :=_eaaeb .FindStringSubmatch (_bbce );if _eceb ==nil {continue ;};_bcfd ,_bafb :=_eceb [1],_eceb [2];_eded [_bcfd ]=_bafb ;};return _eded ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_gdeab *PdfPageResourcesColorspaces )Set (key _bg .PdfObjectName ,val PdfColorspace ){if _ ,_afcbb :=_gdeab .Colorspaces [string (key )];!_afcbb {_gdeab .Names =append (_gdeab .Names ,string (key ));};_gdeab .Colorspaces [string (key )]=val ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gcdb *PdfField )GetContainingPdfObject ()_bg .PdfObject {return _gcdb ._bggaa };

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bggaa :_bg .MakeIndirectObject (_bg .MakeDict ())}};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_beab :=NewPdfAnnotation ();_cece :=&PdfAnnotationMovie {};_cece .PdfAnnotation =_beab ;_beab .SetContext (_cece );return _cece ;};

// GetPage returns the PdfPage model for the specified page number.
func (_fggb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fggb ._gbgb .GetCrypter ()!=nil &&!_fggb ._gbgb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fggb ._abcee )< pageNumber {return nil ,_fff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_afcbf :=pageNumber -1;if _afcbf < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_dgece :=_fggb .PageList [_afcbf ];
return _dgece ,nil ;};

// SetAnnotations sets the annotations list.
func (_cbcag *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cbcag ._facgg =annotations };

// SetFlag sets the flag for the field.
func (_edfd *PdfField )SetFlag (flag FieldFlag ){_edfd .Ff =_bg .MakeInteger (int64 (flag ))};

// Add appends a top level outline item to the outline.
func (_bdce *Outline )Add (item *OutlineItem ){_bdce .Entries =append (_bdce .Entries ,item )};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cacefa *PdfWriter )SetNameDictionary (names _bg .PdfObject )error {if names ==nil {return nil ;};_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_cacefa ._gcff .Set ("\u004e\u0061\u006de\u0073",names );return _cacefa .addObjects (names );};

// SetVersion sets the PDF version of the output file.
func (_aadgd *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_aadgd ._afee =majorVersion ;_aadgd ._ceced =minorVersion ;};

// AddOutlineTree adds outlines to a PDF file.
func (_baddd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_baddd ._eedg =outlineTree };func (_dgfd *PdfAnnotationMarkup )appendToPdfDictionary (_fgfd *_bg .PdfObjectDictionary ){_fgfd .SetIfNotNil ("\u0054",_dgfd .T );if _dgfd .Popup !=nil {_fgfd .Set ("\u0050\u006f\u0070u\u0070",_dgfd .Popup .ToPdfObject ());
};_fgfd .SetIfNotNil ("\u0043\u0041",_dgfd .CA );_fgfd .SetIfNotNil ("\u0052\u0043",_dgfd .RC );_fgfd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dgfd .CreationDate );_fgfd .SetIfNotNil ("\u0049\u0052\u0054",_dgfd .IRT );
_fgfd .SetIfNotNil ("\u0053\u0075\u0062\u006a",_dgfd .Subj );_fgfd .SetIfNotNil ("\u0052\u0054",_dgfd .RT );_fgfd .SetIfNotNil ("\u0049\u0054",_dgfd .IT );_fgfd .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_dgfd .ExData );};func _ccgee (_bgca _bg .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_aacfe :=&PdfColorspaceDeviceNAttributes {};
var _cege *_bg .PdfObjectDictionary ;switch _cdcg :=_bgca .(type ){case *_bg .PdfIndirectObject :_aacfe ._dgebb =_cdcg ;var _ccde bool ;_cege ,_ccde =_cdcg .PdfObject .(*_bg .PdfObjectDictionary );if !_ccde {_fa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bg .PdfObjectDictionary :_cege =_cdcg ;case *_bg .PdfObjectReference :_gbdg :=_cdcg .Resolve ();return _ccgee (_gbdg );default:_fa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _babbf :=_cege .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_babbf !=nil {_gada ,_ccdf :=_bg .TraceToDirectObject (_babbf ).(*_bg .PdfObjectName );if !_ccdf {_fa .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_aacfe .Subtype =_gada ;};if _efea :=_cege .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_efea !=nil {_aacfe .Colorants =_efea ;};if _ccded :=_cege .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_ccded !=nil {_aacfe .Process =_ccded ;};if _efa :=_cege .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_efa !=nil {_aacfe .MixingHints =_efa ;};return _aacfe ,nil ;};func _egdd (_ccbecdg _bg .PdfObject ){_fa .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ccbecdg ,_ccbecdg .String ());
if _gaccee ,_gaabf :=_ccbecdg .(*_bg .PdfObjectStream );_gaabf {_eegd ,_bfadb :=_bg .DecodeStream (_gaccee );if _bfadb !=nil {_fa .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bfadb );return ;};_fa .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_eegd );
}else if _bdafb ,_cbef :=_ccbecdg .(*_bg .PdfIndirectObject );_cbef {_fa .Log .Debug ("\u0025\u0054\u0020%\u0076",_bdafb .PdfObject ,_bdafb .PdfObject );_fa .Log .Debug ("\u0025\u0073",_bdafb .PdfObject .String ());};};

// Encoder returns the font's text encoder.
func (_fdccd pdfFontType3 )Encoder ()_be .TextEncoder {return _fdccd ._fgbbe };

// HasXObjectByName checks if has XObject resource by name.
func (_adfd *PdfPage )HasXObjectByName (name _bg .PdfObjectName )bool {_dadfg ,_fcdga :=_adfd .Resources .XObject .(*_bg .PdfObjectDictionary );if !_fcdga {return false ;};if _bafgg :=_dadfg .Get (name );_bafgg !=nil {return true ;};return false ;};func (_bbbbb *pdfFontType0 )baseFields ()*fontCommon {return &_bbbbb .fontCommon };


// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_acebf *PdfPageResources )GetShadingByName (keyName _bg .PdfObjectName )(*PdfShading ,bool ){if _acebf .Shading ==nil {return nil ,false ;};_dbabg ,_eaaec :=_bg .TraceToDirectObject (_acebf .Shading ).(*_bg .PdfObjectDictionary );if !_eaaec {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acebf .Shading );
return nil ,false ;};if _cdebe :=_dbabg .Get (keyName );_cdebe !=nil {_eaff ,_edfadc :=_gccef (_cdebe );if _edfadc !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_edfadc );
return nil ,false ;};return _eaff ,true ;};return nil ,false ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bg .PdfObject ;AN _bg .PdfObject ;OP _bg .PdfObject ;JS _bg .PdfObject ;};func (_bcea *LTV )enable (_agge ,_dfbf []*_b .Certificate ,_deeab string )error {_cceba ,_ccbbe ,_gdgfa :=_bcea .buildCertChain (_agge ,_dfbf );
if _gdgfa !=nil {return _gdgfa ;};_abga ,_gdgfa :=_bcea .getCerts (_cceba );if _gdgfa !=nil {return _gdgfa ;};_fdegb ,_gdgfa :=_bcea .getOCSPs (_cceba ,_ccbbe );if _gdgfa !=nil {return _gdgfa ;};_beafe ,_gdgfa :=_bcea .getCRLs (_cceba );if _gdgfa !=nil {return _gdgfa ;
};_daegd :=_bcea ._agbea ;_cgccd ,_gdgfa :=_daegd .addCerts (_abga );if _gdgfa !=nil {return _gdgfa ;};_ccbac ,_gdgfa :=_daegd .addOCSPs (_fdegb );if _gdgfa !=nil {return _gdgfa ;};_fabcc ,_gdgfa :=_daegd .addCRLs (_beafe );if _gdgfa !=nil {return _gdgfa ;
};if _deeab !=""{_daegd .VRI [_deeab ]=&VRI {Cert :_cgccd ,OCSP :_ccbac ,CRL :_fabcc };};_bcea ._edefg .SetDSS (_daegd );return nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetContainingPdfObject implements interface PdfModel.
func (_fd *PdfAction )GetContainingPdfObject ()_bg .PdfObject {return _fd ._gfd };

// ToPdfObject implements interface PdfModel.
func (_aad *PdfAnnotationWidget )ToPdfObject ()_bg .PdfObject {_aad .PdfAnnotation .ToPdfObject ();_gbfa :=_aad ._cdcf ;_fecf :=_gbfa .PdfObject .(*_bg .PdfObjectDictionary );if _aad ._cgb {return _gbfa ;};_aad ._cgb =true ;_fecf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_fecf .SetIfNotNil ("\u0048",_aad .H );_fecf .SetIfNotNil ("\u004d\u004b",_aad .MK );_fecf .SetIfNotNil ("\u0041",_aad .A );_fecf .SetIfNotNil ("\u0041\u0041",_aad .AA );_fecf .SetIfNotNil ("\u0042\u0053",_aad .BS );_ecgaf :=_aad .Parent ;if _aad ._ddgba !=nil {if _aad ._ddgba ._bggaa ==_aad ._cdcf {_aad ._ddgba .ToPdfObject ();
};_ecgaf =_aad ._ddgba .GetContainingPdfObject ();};if _ecgaf !=_gbfa {_fecf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecgaf );};_aad ._cgb =false ;return _gbfa ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bcdb *PdfColorspaceLab )DecodeArray ()[]float64 {_agab :=[]float64 {0,100};if _bcdb .Range !=nil &&len (_bcdb .Range )==4{_agab =append (_agab ,_bcdb .Range ...);}else {_agab =append (_agab ,-100,100,-100,100);};return _agab ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_eddc PdfModel ;_ededfe _bg .PdfObject ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_cbbd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bg .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gcgd []_bg .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_ceef []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_gbdc *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ffacc :_bg .MakeIndirectObject (_bg .MakeDict ())};};

// IsColored specifies if the pattern is colored.
func (_eacaf *PdfTilingPattern )IsColored ()bool {if _eacaf .PaintType !=nil &&*_eacaf .PaintType ==1{return true ;};return false ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_cecfg *PdfPattern )ToPdfObject ()_bg .PdfObject {_fbdfd :=_cecfg .getDict ();_fbdfd .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fbdfd .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bg .MakeInteger (_cecfg .PatternType ));
return _cecfg ._ededfe ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdee *PdfColorspaceDeviceGray )ToPdfObject ()_bg .PdfObject {return _bg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_deea *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _deea .Range };func (_adeea *PdfWriter )hasObject (_ggecd _bg .PdfObject )bool {_ ,_edba :=_adeea ._eccf [_ggecd ];return _edba ;};func _eaegb (_bace *_bg .PdfObjectStream )(*PdfFunctionType0 ,error ){_afcec :=&PdfFunctionType0 {};
_afcec ._edfc =_bace ;_abacf :=_bace .PdfObjectDictionary ;_bdbd ,_eeeed :=_bg .TraceToDirectObject (_abacf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bg .PdfObjectArray );if !_eeeed {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bdbd .Len ()< 0||_bdbd .Len ()%2!=0{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_afcec .NumInputs =_bdbd .Len ()/2;_fafbg ,_dgdbb :=_bdbd .ToFloat64Array ();if _dgdbb !=nil {return nil ,_dgdbb ;};_afcec .Domain =_fafbg ;
_bdbd ,_eeeed =_bg .TraceToDirectObject (_abacf .Get ("\u0052\u0061\u006eg\u0065")).(*_bg .PdfObjectArray );if !_eeeed {_fa .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bdbd .Len ()< 0||_bdbd .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_afcec .NumOutputs =_bdbd .Len ()/2;_fbbca ,_dgdbb :=_bdbd .ToFloat64Array ();if _dgdbb !=nil {return nil ,_dgdbb ;
};_afcec .Range =_fbbca ;_bdbd ,_eeeed =_bg .TraceToDirectObject (_abacf .Get ("\u0053\u0069\u007a\u0065")).(*_bg .PdfObjectArray );if !_eeeed {_fa .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gafb ,_dgdbb :=_bdbd .ToIntegerArray ();
if _dgdbb !=nil {return nil ,_dgdbb ;};if len (_gafb )!=_afcec .NumInputs {_fa .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afcec .Size =_gafb ;_cgaee ,_eeeed :=_bg .TraceToDirectObject (_abacf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bg .PdfObjectInteger );
if !_eeeed {_fa .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_cgaee !=1&&*_cgaee !=2&&*_cgaee !=4&&*_cgaee !=8&&*_cgaee !=12&&*_cgaee !=16&&*_cgaee !=24&&*_cgaee !=32{_fa .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cgaee );
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afcec .BitsPerSample =int (*_cgaee );_afcec .Order =1;_fabaa ,_eeeed :=_bg .TraceToDirectObject (_abacf .Get ("\u004f\u0072\u0064e\u0072")).(*_bg .PdfObjectInteger );
if _eeeed {if *_fabaa !=1&&*_fabaa !=3{_fa .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_fabaa );return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afcec .Order =int (*_fabaa );
};_bdbd ,_eeeed =_bg .TraceToDirectObject (_abacf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bg .PdfObjectArray );if _eeeed {_cedaf ,_ffcec :=_bdbd .ToFloat64Array ();if _ffcec !=nil {return nil ,_ffcec ;};_afcec .Encode =_cedaf ;};_bdbd ,_eeeed =_bg .TraceToDirectObject (_abacf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bg .PdfObjectArray );
if _eeeed {_afaab ,_bfdbab :=_bdbd .ToFloat64Array ();if _bfdbab !=nil {return nil ,_bfdbab ;};_afcec .Decode =_afaab ;};_aggab ,_dgdbb :=_bg .DecodeStream (_bace );if _dgdbb !=nil {return nil ,_dgdbb ;};_afcec ._ddbed =_aggab ;return _afcec ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_adefg *PdfShadingType4 )ToPdfObject ()_bg .PdfObject {_adefg .PdfShading .ToPdfObject ();_bdadb ,_gdbgda :=_adefg .getShadingDict ();if _gdbgda !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _adefg .BitsPerCoordinate !=nil {_bdadb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_adefg .BitsPerCoordinate );};if _adefg .BitsPerComponent !=nil {_bdadb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_adefg .BitsPerComponent );
};if _adefg .BitsPerFlag !=nil {_bdadb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_adefg .BitsPerFlag );};if _adefg .Decode !=nil {_bdadb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_adefg .Decode );};if _adefg .Function !=nil {if len (_adefg .Function )==1{_bdadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adefg .Function [0].ToPdfObject ());
}else {_gbdcf :=_bg .MakeArray ();for _ ,_eaabf :=range _adefg .Function {_gbdcf .Append (_eaabf .ToPdfObject ());};_bdadb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbdcf );};};return _adefg ._cabb ;};func _edegc (_agfab *_bg .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ebfb :=PdfShadingType6 {};
_acbcb :=_agfab .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _acbcb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eagf ,_baecd :=_acbcb .(*_bg .PdfObjectInteger );if !_baecd {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acbcb );
return nil ,_bg .ErrTypeError ;};_ebfb .BitsPerCoordinate =_eagf ;_acbcb =_agfab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _acbcb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eagf ,_baecd =_acbcb .(*_bg .PdfObjectInteger );if !_baecd {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_acbcb );
return nil ,_bg .ErrTypeError ;};_ebfb .BitsPerComponent =_eagf ;_acbcb =_agfab .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _acbcb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eagf ,_baecd =_acbcb .(*_bg .PdfObjectInteger );if !_baecd {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_acbcb );
return nil ,_bg .ErrTypeError ;};_ebfb .BitsPerComponent =_eagf ;_acbcb =_agfab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _acbcb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_addbg ,_baecd :=_acbcb .(*_bg .PdfObjectArray );if !_baecd {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acbcb );
return nil ,_bg .ErrTypeError ;};_ebfb .Decode =_addbg ;if _acedf :=_agfab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_acedf !=nil {_ebfb .Function =[]PdfFunction {};if _ddagb ,_abccc :=_acedf .(*_bg .PdfObjectArray );_abccc {for _ ,_bagcc :=range _ddagb .Elements (){_fddgdg ,_gbaeg :=_egfbb (_bagcc );
if _gbaeg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbaeg );return nil ,_gbaeg ;};_ebfb .Function =append (_ebfb .Function ,_fddgdg );
};}else {_dgcbg ,_bfeeg :=_egfbb (_acedf );if _bfeeg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfeeg );return nil ,_bfeeg ;
};_ebfb .Function =append (_ebfb .Function ,_dgcbg );};};return &_ebfb ,nil ;};

// SetOCProperties sets the optional content properties.
func (_abbaa *PdfWriter )SetOCProperties (ocProperties _bg .PdfObject )error {_bdcg :=_abbaa ._gcff ;if ocProperties !=nil {_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bdcg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _abbaa .addObjects (ocProperties );};return nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bg .PdfObject ;Movie _bg .PdfObject ;A _bg .PdfObject ;};type pdfCIDFontType0 struct{fontCommon ;_ecafb *_bg .PdfIndirectObject ;_cgbee _be .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bg .PdfObject ;W _bg .PdfObject ;DW2 _bg .PdfObject ;W2 _bg .PdfObject ;_bbgadc map[_be .CharCode ]float64 ;_bfdcg float64 ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_be .SimpleEncoder ,error ){_cade ,_cggbb :=_afcac (basefont );if _cggbb !=nil {return nil ,nil ,_cggbb ;};_adbb ,_cfaea :=_cade .Encoder ().(_be .SimpleEncoder );
if !_cfaea {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cade .Encoder ());
};_bbcf :=make (map[rune ]_be .GlyphName );for _gcdf :=range alphabet {if _ ,_aabcg :=_adbb .RuneToCharcode (_gcdf );!_aabcg {_ ,_dbcd :=_cade ._eggd .Read (_gcdf );if !_dbcd {_fa .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gcdf ,_gcdf );
continue ;};_eedaf ,_dbcd :=_be .RuneToGlyph (_gcdf );if !_dbcd {_fa .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gcdf ,_gcdf );continue ;};if len (_bbcf )>=255{return nil ,nil ,_fff .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bbcf [_gcdf ]=_eedaf ;};};var (_abfdb []_be .CharCode ;_egdef []_be .CharCode ;);for _baaed :=_be .CharCode (1);_baaed <=0xff;_baaed ++{_aaaa ,_bfgb :=_adbb .CharcodeToRune (_baaed );if !_bfgb {_abfdb =append (_abfdb ,_baaed );continue ;};if _ ,_bfgb =alphabet [_aaaa ];
!_bfgb {_egdef =append (_egdef ,_baaed );};};_fcfg :=append (_abfdb ,_egdef ...);if len (_fcfg )< len (_bbcf ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bbcf ),len (_fcfg ));
};_daad :=make ([]rune ,0,len (_bbcf ));for _fdda :=range _bbcf {_daad =append (_daad ,_fdda );};_ad .Slice (_daad ,func (_ebdgg ,_bbgad int )bool {return _daad [_ebdgg ]< _daad [_bbgad ]});_aaaaf :=make (map[_be .CharCode ]_be .GlyphName ,len (_daad ));
for _ ,_caaa :=range _daad {_ageab :=_fcfg [0];_fcfg =_fcfg [1:];_aaaaf [_ageab ]=_bbcf [_caaa ];};_adbb =_be .ApplyDifferences (_adbb ,_aaaaf );_cade .SetEncoder (_adbb );return &PdfFont {_fcafc :&_cade },_adbb ,nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bafgb *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_feg *PdfReader )newPdfActionRenditionFromDict (_ada *_bg .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ada .Get ("\u0052"),AN :_ada .Get ("\u0041\u004e"),OP :_ada .Get ("\u004f\u0050"),JS :_ada .Get ("\u004a\u0053")},nil ;
};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dbagcb :=&PdfSignature {Type :_bg .MakeName ("\u0053\u0069\u0067"),Handler :handler };_dfcfd :=&pdfSignDictionary {PdfObjectDictionary :_bg .MakeDict (),_gdagf :&handler ,_eecf :_dbagcb };
_dbagcb ._gbaa =_bg .MakeIndirectObject (_dfcfd );return _dbagcb ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ecg .Time ){_cedaec .Lock ();defer _cedaec .Unlock ();_ggfdd =creationDate ;};

// C returns the value of the C component of the color.
func (_ccbaa *PdfColorCalRGB )C ()float64 {return _ccbaa [2]};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_defa *_bg .PdfIndirectObject ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_edaed :map[_bg .PdfObject ]struct{}{},_dgaed :_dcdcc (),_gbgb :_bg .NewParserFromString (txt )};};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_dcfga *LTV )EnableChain (chain []*_b .Certificate )error {return _dcfga .enable (nil ,chain ,"")};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject returns the PDF representation of the function.
func (_dfedc *PdfFunctionType4 )ToPdfObject ()_bg .PdfObject {_gfaa :=_dfedc ._daeb ;if _gfaa ==nil {_dfedc ._daeb =&_bg .PdfObjectStream {};_gfaa =_dfedc ._daeb ;};_cdcd :=_bg .MakeDict ();_cdcd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bg .MakeInteger (4));
_egfd :=&_bg .PdfObjectArray {};for _ ,_becgf :=range _dfedc .Domain {_egfd .Append (_bg .MakeFloat (_becgf ));};_cdcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egfd );_beac :=&_bg .PdfObjectArray {};for _ ,_ceafc :=range _dfedc .Range {_beac .Append (_bg .MakeFloat (_ceafc ));
};_cdcd .Set ("\u0052\u0061\u006eg\u0065",_beac );if _dfedc ._gdcde ==nil &&_dfedc .Program !=nil {_dfedc ._gdcde =[]byte (_dfedc .Program .String ());};_cdcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_dfedc ._gdcde ))));
_gfaa .Stream =_dfedc ._gdcde ;_gfaa .PdfObjectDictionary =_cdcd ;return _gfaa ;};func (_acacg *LTV )validateSig (_dadg *PdfSignature )error {if _dadg ==nil ||_dadg .Contents ==nil ||len (_dadg .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_dadg );
};return nil ;};func _ccdfc (_dagde *_bg .PdfObjectArray )(float64 ,error ){_ebbdd ,_fdadbf :=_dagde .ToFloat64Array ();if _fdadbf !=nil {_fa .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dagde ,_fdadbf );
};switch len (_ebbdd ){case 1:return _ebbdd [0],nil ;case 3:_ebecb :=PdfColorspaceDeviceRGB {};_gcdbdd ,_dabgd :=_ebecb .ColorFromFloats (_ebbdd );if _dabgd !=nil {return 0.0,_dabgd ;};return _gcdbdd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_cagdd :=PdfColorspaceDeviceCMYK {};
_egadb ,_adccc :=_cagdd .ColorFromFloats (_ebbdd );if _adccc !=nil {return 0.0,_adccc ;};_gfeg ,_adccc :=_cagdd .ColorToRGB (_egadb .(*PdfColorDeviceCMYK ));if _adccc !=nil {return 0.0,_adccc ;};return _gfeg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_fdadbf =_fff .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_fa .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dagde ,_fdadbf );
return 0.0,_fdadbf ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_bgcb *Image )samplesAddPadding (_fcabf []uint32 )[]uint32 {_adgcg :=_ggc .BytesPerLine (int (_bgcb .Width ),int (_bgcb .BitsPerComponent ),_bgcb .ColorComponents )*(8/int (_bgcb .BitsPerComponent ));
_efbbd :=_adgcg *int (_bgcb .Height );if len (_fcabf )==_efbbd {return _fcabf ;};_dddee :=make ([]uint32 ,_efbbd );_adedg :=int (_bgcb .Width )*_bgcb .ColorComponents ;for _bcada :=0;_bcada < int (_bgcb .Height );_bcada ++{_bgcg :=_bcada *int (_bgcb .Width );
_ebad :=_bcada *_adgcg ;for _acbfa :=0;_acbfa < _adedg ;_acbfa ++{_dddee [_ebad +_acbfa ]=_fcabf [_bgcg +_acbfa ];};};return _dddee ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fabd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dccf ,_fagda :=color .(*PdfColorDeviceRGB );if !_fagda {_fa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dccf ,nil ;};func (_fddg *PdfReader )newPdfAnnotationRichMediaFromDict (_eaaf *_bg .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ffbga :=&PdfAnnotationRichMedia {};
_ffbga .RichMediaSettings =_eaaf .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_ffbga .RichMediaContent =_eaaf .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _ffbga ,nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_dgbebg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _dgbebg ._bdaa !=nil {return _dgbebg ._bdaa ,nil ;};if _dgbebg .ColorSpace ==nil {return nil ,nil ;};_fffcd ,_aaceb :=_cabed (_dgbebg .ColorSpace );if _aaceb !=nil {return nil ,_aaceb ;
};_dgbebg ._bdaa =_fffcd ;return _dgbebg ._bdaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdge *PdfAnnotationStamp )ToPdfObject ()_bg .PdfObject {_gdge .PdfAnnotation .ToPdfObject ();_agea :=_gdge ._cdcf ;_eadd :=_agea .PdfObject .(*_bg .PdfObjectDictionary );_gdge .PdfAnnotationMarkup .appendToPdfDictionary (_eadd );_eadd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0053\u0074\u0061m\u0070"));
_eadd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gdge .Name );return _agea ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bg .StreamEncoder ;Intent _bg .PdfObject ;ImageMask _bg .PdfObject ;Mask _bg .PdfObject ;Matte _bg .PdfObject ;Decode _bg .PdfObject ;Interpolate _bg .PdfObject ;Alternatives _bg .PdfObject ;
SMask _bg .PdfObject ;SMaskInData _bg .PdfObject ;Name _bg .PdfObject ;StructParent _bg .PdfObject ;ID _bg .PdfObject ;OPI _bg .PdfObject ;Metadata _bg .PdfObject ;OC _bg .PdfObject ;Stream []byte ;_dbged *_bg .PdfObjectStream ;};

// WriteString outputs the object as it is to be written to file.
func (_cbbbd *pdfSignDictionary )WriteString ()string {_cbbbd ._cebca =0;_cbbbd ._efefbg =0;_cbbbd ._ceff =0;_cbbbd ._deaaa =0;_fadca :=_bb .NewBuffer (nil );_fadca .WriteString ("\u003c\u003c");for _ ,_edcd :=range _cbbbd .Keys (){_bgbde :=_cbbbd .Get (_edcd );
switch _edcd {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fadca .WriteString (_edcd .WriteString ());_fadca .WriteString ("\u0020");_cbbbd ._ceff =_fadca .Len ();_fadca .WriteString (_bgbde .WriteString ());_fadca .WriteString ("\u0020");_cbbbd ._deaaa =_fadca .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fadca .WriteString (_edcd .WriteString ());_fadca .WriteString ("\u0020");_cbbbd ._cebca =_fadca .Len ();_fadca .WriteString (_bgbde .WriteString ());_fadca .WriteString ("\u0020");_cbbbd ._efefbg =_fadca .Len ()-1;
default:_fadca .WriteString (_edcd .WriteString ());_fadca .WriteString ("\u0020");_fadca .WriteString (_bgbde .WriteString ());};};_fadca .WriteString ("\u003e\u003e");return _fadca .String ();};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_cegad *PdfPattern )GetContainingPdfObject ()_bg .PdfObject {return _cegad ._ededfe };func _dgbf (_fdacb *PdfField )[]*PdfField {_eeeg :=[]*PdfField {_fdacb };for _ ,_ceeff :=range _fdacb .Kids {_eeeg =append (_eeeg ,_dgbf (_ceeff )...);};return _eeeg ;
};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_cggec *PdfReader )GetOutlines ()(*Outline ,error ){if _cggec ==nil {return nil ,_fff .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_dcdcb :=_cggec .GetOutlineTree ();if _dcdcb ==nil {return nil ,_fff .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _cccff func (_bgeaa *PdfOutlineTreeNode ,_cbaae *[]*OutlineItem );_cccff =func (_fcgbg *PdfOutlineTreeNode ,_daaef *[]*OutlineItem ){if _fcgbg ==nil {return ;};if _fcgbg ._baag ==nil {_fa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _gaabg *OutlineItem ;if _baabb ,_ffbebe :=_fcgbg ._baag .(*PdfOutlineItem );_ffbebe {_effbbc :=_baabb .Dest ;if (_effbbc ==nil ||_bg .IsNullObject (_effbbc ))&&_baabb .A !=nil {if _eabgg ,_ddge :=_bg .GetDict (_baabb .A );_ddge {_effbbc ,_ =_bg .GetArray (_eabgg .Get ("\u0044"));
};};var _agabbb OutlineDest ;if _effbbc !=nil &&!_bg .IsNullObject (_effbbc ){if _ddade ,_ddgc :=_cdge (_effbbc ,_cggec );_ddgc ==nil {_agabbb =*_ddade ;}else {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_effbbc ,_ddgc );
};};_gaabg =NewOutlineItem (_baabb .Title .Decoded (),_agabbb );*_daaef =append (*_daaef ,_gaabg );if _baabb .Next !=nil {_cccff (_baabb .Next ,_daaef );};};if _fcgbg .First !=nil {if _gaabg !=nil {_daaef =&_gaabg .Entries ;};_cccff (_fcgbg .First ,_daaef );
};};_accg :=NewOutline ();_cccff (_dcdcb ,&_accg .Entries );return _accg ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_ffbe :=NewPdfAction ();_bag :=&PdfActionGoTo3DView {};_bag .PdfAction =_ffbe ;_ffbe .SetContext (_bag );return _bag ;};func (_egbb *PdfReader )newPdfActionHideFromDict (_ceg *_bg .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ceg .Get ("\u0054"),H :_ceg .Get ("\u0048")},nil ;
};type pdfFont interface{_adb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bg .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _afcac (_baff StdFontName )(pdfFontSimple ,error ){_fefde ,_gcgcd :=_adb .NewStdFontByName (_baff );if !_gcgcd {return pdfFontSimple {},ErrFontNotSupported ;
};_bfdaf :=_cgafc (_fefde );return _bfdaf ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bdeeg *PdfOutlineTreeNode )GetContainingPdfObject ()_bg .PdfObject {return _bdeeg .GetContext ().GetContainingPdfObject ();};

// GetOCProperties returns the optional content properties PdfObject.
func (_fcde *PdfReader )GetOCProperties ()(_bg .PdfObject ,error ){_afbaa :=_fcde ._daagd ;_acbfd :=_afbaa .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_acbfd =_bg .ResolveReference (_acbfd );if !_fcde ._aaeef {_babgb :=_fcde .traverseObjectData (_acbfd );
if _babgb !=nil {return nil ,_babgb ;};};return _acbfd ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_bcac *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_gedf :=func (_gdgd float64 )float64 {if _gdgd >=6.0/29{return _gdgd *_gdgd *_gdgd ;};return 108.0/841*(_gdgd -4/29);};_ecfe ,_fbcfe :=color .(*PdfColorLab );if !_fbcfe {_fa .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ecfe .L ();AStar :=_ecfe .A ();BStar :=_ecfe .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_bcac .WhitePoint [0]*_gedf (L );Y :=_bcac .WhitePoint [1]*_gedf (M );Z :=_bcac .WhitePoint [2]*_gedf (N );_ebgd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eedf :=-0.969256*X +1.875992*Y +0.041556*Z ;_gcbf :=0.055648*X +-0.204043*Y +1.057311*Z ;_ebgd =_dc .Min (_dc .Max (_ebgd ,0),1.0);
_eedf =_dc .Min (_dc .Max (_eedf ,0),1.0);_gcbf =_dc .Min (_dc .Max (_gcbf ,0),1.0);return NewPdfColorDeviceRGB (_ebgd ,_eedf ,_gcbf ),nil ;};var _ pdfFont =(*pdfFontType0 )(nil );func _agaag (_dgagb _bg .PdfObject ,_fffee *fontCommon )(*_bbg .CMap ,error ){_ceae ,_eedac :=_bg .GetStream (_dgagb );
if !_eedac {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dgagb );
return nil ,_bg .ErrTypeError ;};_adfg ,_bbfe :=_bg .DecodeStream (_ceae );if _bbfe !=nil {return nil ,_bbfe ;};_gdca ,_bbfe :=_bbg .LoadCmapFromData (_adfg ,!_fffee .isCIDFont ());if _bbfe !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_ceae .ObjectNumber ,_bbfe );
};return _gdca ,_bbfe ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );func (_cabag *PdfAcroForm )filteredFields (_bbfb FieldFilterFunc ,_ccebc bool )[]*PdfField {if _cabag ==nil {return nil ;};return _ebagg (_cabag .Fields ,_bbfb ,_ccebc );};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_cbad *PdfFieldButton )GetType ()ButtonType {_ffafd :=ButtonTypeCheckbox ;if _cbad .Ff !=nil {if (uint32 (*_cbad .Ff )&FieldFlagPushbutton .Mask ())> 0{_ffafd =ButtonTypePush ;}else if (uint32 (*_cbad .Ff )&FieldFlagRadio .Mask ())> 0{_ffafd =ButtonTypeRadio ;
};};return _ffafd ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_acbe :=&PdfColorspaceCalRGB {};_acbe .BlackPoint =[]float64 {0.0,0.0,0.0};_acbe .Gamma =[]float64 {1.0,1.0,1.0};_acbe .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _acbe ;};type pdfFontType0 struct{fontCommon ;
_fgeeb *_bg .PdfIndirectObject ;_bgcf _be .TextEncoder ;Encoding _bg .PdfObject ;DescendantFont *PdfFont ;_fgccc *_bbg .CMap ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fbfe *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _fbfe .fill (provider ,appGen );};

// ToGoTime returns the date in time.Time format.
func (_daabeb PdfDate )ToGoTime ()_ecg .Time {_dafe :=int (_daabeb ._bged *60*60+_daabeb ._debc *60);switch _daabeb ._adbdf {case '-':_dafe =-_dafe ;case 'Z':_dafe =0;};_feedde :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_daabeb ._adbdf ,_daabeb ._bged ,_daabeb ._debc );
_afgfg :=_ecg .FixedZone (_feedde ,_dafe );return _ecg .Date (int (_daabeb ._fcdcf ),_ecg .Month (_daabeb ._ecdcd ),int (_daabeb ._dcagc ),int (_daabeb ._cacfd ),int (_daabeb ._fdbfb ),int (_daabeb ._aggabf ),0,_afgfg );};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_gbadb *PdfFieldButton )ToPdfObject ()_bg .PdfObject {_gbadb .PdfField .ToPdfObject ();_agegf :=_gbadb ._bggaa ;_dcde :=_agegf .PdfObject .(*_bg .PdfObjectDictionary );_dcde .Set ("\u0046\u0054",_bg .MakeName ("\u0042\u0074\u006e"));if _gbadb .Opt !=nil {_dcde .Set ("\u004f\u0070\u0074",_gbadb .Opt );
};return _agegf ;};func _ebcege ()string {_cedaec .Lock ();defer _cedaec .Unlock ();return _dcagb };

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cedaec .Lock ();defer _cedaec .Unlock ();_afbea =author };

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cecc *PdfWriter )SetOpenAction (dest _bg .PdfObject )error {if dest ==nil ||_bg .IsNullObject (dest ){return nil ;};_cecc ._gcff .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cecc .addObjects (dest );};

// IsShading specifies if the pattern is a shading pattern.
func (_ggbfaa *PdfPattern )IsShading ()bool {return _ggbfaa .PatternType ==2};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_gcbg *PdfReader )newPdfAnnotationFreeTextFromDict (_acd *_bg .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fef :=PdfAnnotationFreeText {};_cgab ,_cgda :=_gcbg .newPdfAnnotationMarkupFromDict (_acd );
if _cgda !=nil {return nil ,_cgda ;};_fef .PdfAnnotationMarkup =_cgab ;_fef .DA =_acd .Get ("\u0044\u0041");_fef .Q =_acd .Get ("\u0051");_fef .RC =_acd .Get ("\u0052\u0043");_fef .DS =_acd .Get ("\u0044\u0053");_fef .CL =_acd .Get ("\u0043\u004c");_fef .IT =_acd .Get ("\u0049\u0054");
_fef .BE =_acd .Get ("\u0042\u0045");_fef .RD =_acd .Get ("\u0052\u0044");_fef .BS =_acd .Get ("\u0042\u0053");_fef .LE =_acd .Get ("\u004c\u0045");return &_fef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffgeg *PdfSignature )ToPdfObject ()_bg .PdfObject {_cbggb :=_ffgeg ._gbaa ;var _acce *_bg .PdfObjectDictionary ;if _gabde ,_cgegc :=_cbggb .PdfObject .(*pdfSignDictionary );_cgegc {_acce =_gabde .PdfObjectDictionary ;}else {_acce =_cbggb .PdfObject .(*_bg .PdfObjectDictionary );
};_acce .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ffgeg .Type );_acce .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ffgeg .Filter );_acce .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ffgeg .SubFilter );_acce .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ffgeg .ByteRange );
_acce .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ffgeg .Contents );_acce .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ffgeg .Cert );_acce .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffgeg .Name );_acce .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ffgeg .Reason );
_acce .SetIfNotNil ("\u004d",_ffgeg .M );_acce .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ffgeg .Reference );_acce .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ffgeg .Changes );_acce .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ffgeg .ContactInfo );
return _cbggb ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cedaec .Lock ();defer _cedaec .Unlock ();_ccgga =keywords };

// ColorToRGB converts gray -> rgb for a single color component.
func (_ecbc *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fgbfd ,_fbbf :=color .(*PdfColorDeviceGray );if !_fbbf {_fa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_fgbfd ),float64 (*_fgbfd ),float64 (*_fgbfd )),nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_dbec *pdfFontSimple )addEncoding ()error {var (_eggb string ;_bfcd map[_be .CharCode ]_be .GlyphName ;_becgcb _be .SimpleEncoder ;);if _dbec .Encoder ()!=nil {_ddag ,_bgbfc :=_dbec .Encoder ().(_be .SimpleEncoder );
if _bgbfc &&_ddag !=nil {_eggb =_ddag .BaseName ();};};if _dbec .Encoding !=nil {_fdfa ,_bdggg ,_bgddc :=_dbec .getFontEncoding ();if _bgddc !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbec ._ffgfd ,_dbec ._ccbf ,_dbec .Encoding ,_dbec .Encoding ,_bgddc );
return _bgddc ;};if _fdfa !=""{_eggb =_fdfa ;};_bfcd =_bdggg ;_becgcb ,_bgddc =_be .NewSimpleTextEncoder (_eggb ,_bfcd );if _bgddc !=nil {return _bgddc ;};};if _becgcb ==nil {_adgec :=_dbec ._abcd ;if _adgec !=nil {switch _dbec ._ccbf {case "\u0054\u0079\u0070e\u0031":if _adgec .fontFile !=nil &&_adgec .fontFile ._abdgb !=nil {_fa .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_becgcb =_adgec .fontFile ._abdgb ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _adgec ._ebfd !=nil {_fa .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ccdb ,_fcfb :=_adgec ._ebfd .MakeEncoder ();
if _fcfb ==nil {_becgcb =_ccdb ;};};};};};if _becgcb !=nil {if _bfcd !=nil {_fa .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bfcd ,_dbec .baseFields ());
_becgcb =_be .ApplyDifferences (_becgcb ,_bfcd );};_dbec .SetEncoder (_becgcb );};return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_aecf *pdfFontType3 )ToPdfObject ()_bg .PdfObject {if _aecf ._fbdc ==nil {_aecf ._fbdc =&_bg .PdfIndirectObject {};};_bgbg :=_aecf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_aecf ._fbdc .PdfObject =_bgbg ;if _aecf .FirstChar !=nil {_bgbg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aecf .FirstChar );
};if _aecf .LastChar !=nil {_bgbg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aecf .LastChar );};if _aecf .Widths !=nil {_bgbg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aecf .Widths );};if _aecf .Encoding !=nil {_bgbg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aecf .Encoding );
}else if _aecf ._fgbbe !=nil {_gccae :=_aecf ._fgbbe .ToPdfObject ();if _gccae !=nil {_bgbg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccae );};};if _aecf .FontBBox !=nil {_bgbg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_aecf .FontBBox );
};if _aecf .FontMatrix !=nil {_bgbg .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_aecf .FontMatrix );};if _aecf .CharProcs !=nil {_bgbg .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_aecf .CharProcs );};if _aecf .Resources !=nil {_bgbg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_aecf .Resources );
};return _aecf ._fbdc ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_aceb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gbafd :=NewPdfOutlineItem ();_gbafd .Title =_bg .MakeEncodedString (_aceb .Title ,true );_gbafd .Dest =_aceb .Dest .ToPdfObject ();var _edbe []*PdfOutlineItem ;var _cecfb int64 ;var _gcead *PdfOutlineItem ;
for _ ,_eccde :=range _aceb .Entries {_gaafe ,_aeaee :=_eccde .ToPdfOutlineItem ();_gaafe .Parent =&_gbafd .PdfOutlineTreeNode ;if _gcead !=nil {_gcead .Next =&_gaafe .PdfOutlineTreeNode ;_gaafe .Prev =&_gcead .PdfOutlineTreeNode ;};_edbe =append (_edbe ,_gaafe );
_cecfb +=_aeaee ;_gcead =_gaafe ;};_cadcc :=len (_edbe );_cecfb +=int64 (_cadcc );if _cadcc > 0{_gbafd .First =&_edbe [0].PdfOutlineTreeNode ;_gbafd .Last =&_edbe [_cadcc -1].PdfOutlineTreeNode ;_gbafd .Count =&_cecfb ;};return _gbafd ,_cecfb ;};func (_cfeeg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_cfeeg .fontCommon };


// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bg .PdfObjectArray ;ExtGState _bg .PdfObject ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_faad *PdfPageResources )GetContainingPdfObject ()_bg .PdfObject {return _faad ._dcedc };func (_daebg *PdfReader )loadAnnotations (_abdaf _bg .PdfObject )([]*PdfAnnotation ,error ){_efac ,_fdafe :=_bg .GetArray (_abdaf );if !_fdafe {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gdagc []*PdfAnnotation ;for _ ,_ecabg :=range _efac .Elements (){_ecabg =_bg .ResolveReference (_ecabg );if _ ,_cbddd :=_ecabg .(*_bg .PdfObjectNull );_cbddd {continue ;};_cbbf ,_cbaf :=_ecabg .(*_bg .PdfObjectDictionary );_bfffa ,_fdgdc :=_ecabg .(*_bg .PdfIndirectObject );
if _cbaf {_bfffa =&_bg .PdfIndirectObject {};_bfffa .PdfObject =_cbbf ;}else {if !_fdgdc {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_edaf ,_eaaed :=_daebg .newPdfAnnotationFromIndirectObject (_bfffa );if _eaaed !=nil {return nil ,_eaaed ;};switch _bbagg :=_edaf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dceg :=range _daebg .AcroForm .AllFields (){if _dceg ._bggaa ==_bbagg .Parent {_bbagg ._ddgba =_dceg ;
break ;};};};if _edaf !=nil {_gdagc =append (_gdagc ,_edaf );};};return _gdagc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcd *PdfActionNamed )ToPdfObject ()_bg .PdfObject {_dcd .PdfAction .ToPdfObject ();_ebg :=_dcd ._gfd ;_bbb :=_ebg .PdfObject .(*_bg .PdfObjectDictionary );_bbb .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeNamed )));_bbb .SetIfNotNil ("\u004e",_dcd .N );
return _ebg ;};func (_ddcag *DSS )generateHashMaps ()error {_dbead ,_eacb :=_ddcag .generateHashMap (_ddcag .Certs );if _eacb !=nil {return _eacb ;};_egee ,_eacb :=_ddcag .generateHashMap (_ddcag .OCSPs );if _eacb !=nil {return _eacb ;};_dcfe ,_eacb :=_ddcag .generateHashMap (_ddcag .CRLs );
if _eacb !=nil {return _eacb ;};_ddcag ._gefg =_dbead ;_ddcag ._cgfa =_egee ;_ddcag ._gffbf =_dcfe ;return nil ;};

// SetName sets the `Name` field of the signature.
func (_dafbf *PdfSignature )SetName (name string ){_dafbf .Name =_bg .MakeString (name )};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bg .PdfObjectArray ;Matrix *_bg .PdfObjectArray ;Function []PdfFunction ;};func (_gbfca *fontFile )parseASCIIPart (_caee []byte )error {if len (_caee )< 2||string (_caee [:2])!="\u0025\u0021"{return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_egfe ,_fgef ,_dabd :=_eggfd (_caee );if _dabd !=nil {return _dabd ;};_bbadd :=_fdbf (_egfe );_gbfca ._ecge =_bbadd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gbfca ._ecge ==""{_fa .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fgef !=""{_beeaf ,_cfdce :=_cfcbd (_fgef );if _cfdce !=nil {return _cfdce ;};_affba ,_cfdce :=_be .NewCustomSimpleTextEncoder (_beeaf ,nil );if _cfdce !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_cfdce );
return nil ;};_gbfca ._abdgb =_affba ;};return nil ;};func _bgffe (_ddbea *_bg .PdfObjectDictionary )(*PdfShadingType1 ,error ){_abbb :=PdfShadingType1 {};if _cddag :=_ddbea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cddag !=nil {_cddag =_bg .TraceToDirectObject (_cddag );
_ddagg ,_cefgg :=_cddag .(*_bg .PdfObjectArray );if !_cefgg {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cddag );return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_abbb .Domain =_ddagg ;};if _fbgbb :=_ddbea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fbgbb !=nil {_fbgbb =_bg .TraceToDirectObject (_fbgbb );_geeb ,_dgef :=_fbgbb .(*_bg .PdfObjectArray );if !_dgef {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbgbb );
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abbb .Matrix =_geeb ;};_ffefa :=_ddbea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ffefa ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abbb .Function =[]PdfFunction {};if _agaf ,_cfbfg :=_ffefa .(*_bg .PdfObjectArray );_cfbfg {for _ ,_cbcdb :=range _agaf .Elements (){_ebfeb ,_fdee :=_egfbb (_cbcdb );if _fdee !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdee );
return nil ,_fdee ;};_abbb .Function =append (_abbb .Function ,_ebfeb );};}else {_fdcgd ,_beeec :=_egfbb (_ffefa );if _beeec !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beeec );
return nil ,_beeec ;};_abbb .Function =append (_abbb .Function ,_fdcgd );};return &_abbb ,nil ;};func (_ggg *PdfReader )newPdfActionGoTo3DViewFromDict (_bdc *_bg .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bdc .Get ("\u0054\u0041"),V :_bdc .Get ("\u0056")},nil ;
};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gfg *PdfAnnotationWidget )Field ()*PdfField {return _gfg ._ddgba };func _afbg (_fcdd *_bg .PdfObjectDictionary )(*PdfFieldText ,error ){_abff :=&PdfFieldText {};_abff .DA ,_ =_bg .GetString (_fcdd .Get ("\u0044\u0041"));_abff .Q ,_ =_bg .GetInt (_fcdd .Get ("\u0051"));
_abff .DS ,_ =_bg .GetString (_fcdd .Get ("\u0044\u0053"));_abff .RV =_fcdd .Get ("\u0052\u0056");_abff .MaxLen ,_ =_bg .GetInt (_fcdd .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _abff ,nil ;};func (_efbg *PdfAppender )addNewObject (_ffag _bg .PdfObject ){if _ ,_gabf :=_efbg ._geb [_ffag ];
!_gabf {_efbg ._egf =append (_efbg ._egf ,_ffag );_efbg ._geb [_ffag ]=struct{}{};};};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_aacdc *PdfOutline )GetContainingPdfObject ()_bg .PdfObject {return _aacdc ._bdeaa };func (_adbbg *PdfReader )buildPageList (_eggfc *_bg .PdfIndirectObject ,_gbdfa *_bg .PdfIndirectObject ,_agcad map[_bg .PdfObject ]struct{})error {if _eggfc ==nil {return nil ;
};if _ ,_gfgcb :=_agcad [_eggfc ];_gfgcb {_fa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eggfc .ObjectNumber );
return nil ;};_agcad [_eggfc ]=struct{}{};_eebaaf ,_ddfdbb :=_eggfc .PdfObject .(*_bg .PdfObjectDictionary );if !_ddfdbb {return _fff .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_afgag ,_ddfdbb :=(*_eebaaf ).Get ("\u0054\u0079\u0070\u0065").(*_bg .PdfObjectName );
if !_ddfdbb {if _eebaaf .Get ("\u004b\u0069\u0064\u0073")==nil {return _fff .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_afgag =_bg .MakeName ("\u0050\u0061\u0067e\u0073");_eebaaf .Set ("\u0054\u0079\u0070\u0065",_afgag );};_fa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_afgag ,_eggfc );
if *_afgag =="\u0050\u0061\u0067\u0065"{_agbca ,_gcabc :=_adbbg .newPdfPageFromDict (_eebaaf );if _gcabc !=nil {return _gcabc ;};_agbca .setContainer (_eggfc );if _gbdfa !=nil {_eebaaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbdfa );};_adbbg ._abcee =append (_adbbg ._abcee ,_eggfc );
_adbbg .PageList =append (_adbbg .PageList ,_agbca );return nil ;};if *_afgag !="\u0050\u0061\u0067e\u0073"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_afgag );
return _fff .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gbdfa !=nil {_eebaaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbdfa );};if !_adbbg ._aaeef {_badab :=_adbbg .traverseObjectData (_eggfc );if _badab !=nil {return _badab ;};};_cagf ,_eefbe :=_adbbg ._gbgb .Resolve (_eebaaf .Get ("\u004b\u0069\u0064\u0073"));
if _eefbe !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _eefbe ;};var _ebee *_bg .PdfObjectArray ;
_ebee ,_ddfdbb =_cagf .(*_bg .PdfObjectArray );if !_ddfdbb {_cefad ,_baefa :=_cagf .(*_bg .PdfIndirectObject );if !_baefa {return _fff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebee ,_ddfdbb =_cefad .PdfObject .(*_bg .PdfObjectArray );
if !_ddfdbb {return _fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ebee );
for _ddbgc ,_efcd :=range _ebee .Elements (){_bgdbf ,_fdcge :=_bg .GetIndirect (_efcd );if !_fdcge {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_bgdbf );
return _fff .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ebee .Set (_ddbgc ,_bgdbf );_eefbe =_adbbg .buildPageList (_bgdbf ,_eggfc ,_agcad );if _eefbe !=nil {return _eefbe ;
};};return nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_cba :=NewPdfAnnotation ();_bfc :=&PdfAnnotationPopup {};_bfc .PdfAnnotation =_cba ;_cba .SetContext (_bfc );return _bfc ;};func (_gcgc *PdfReader )newPdfActionJavaScriptFromDict (_ade *_bg .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_ade .Get ("\u004a\u0053")},nil ;
};func (_beec *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _beec ._gbgb .GetCrypter ()!=nil &&!_beec ._gbgb .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_egffb :=_beec ._daagd ;_dabge :=_egffb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _dabge ==nil {return nil ,nil ;};_eedb ,_ :=_bg .GetIndirect (_dabge );_dabge =_bg .TraceToDirectObject (_dabge );if _bg .IsNullObject (_dabge ){_fa .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_fdff ,_dacaf :=_bg .GetDict (_dabge );if !_dacaf {_fa .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dabge );_fa .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dabge );};_fa .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_fa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_beec ._aaeef {_gbbfb :=_beec .traverseObjectData (_fdff );
if _gbbfb !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gbbfb );
return nil ,_gbbfb ;};};_bbeb ,_gdead :=_beec .newPdfAcroFormFromDict (_eedb ,_fdff );if _gdead !=nil {return nil ,_gdead ;};return _bbeb ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_egfbd *PdfPage )GetContentStreamObjs ()[]_bg .PdfObject {if _egfbd .Contents ==nil {return nil ;};_bbadfb :=_bg .TraceToDirectObject (_egfbd .Contents );if _efcf ,_edcc :=_bbadfb .(*_bg .PdfObjectArray );_edcc {return _efcf .Elements ();};return []_bg .PdfObject {_bbadfb };
};

// ToPdfObject returns the PDF representation of the page resources.
func (_afbed *PdfPageResources )ToPdfObject ()_bg .PdfObject {_cdbfad :=_afbed ._dcedc ;_cdbfad .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_afbed .ExtGState );if _afbed ._bdaa !=nil {_afbed .ColorSpace =_afbed ._bdaa .ToPdfObject ();};
_cdbfad .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_afbed .ColorSpace );_cdbfad .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_afbed .Pattern );_cdbfad .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_afbed .Shading );
_cdbfad .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_afbed .XObject );_cdbfad .SetIfNotNil ("\u0046\u006f\u006e\u0074",_afbed .Font );_cdbfad .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_afbed .ProcSet );_cdbfad .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_afbed .Properties );
return _cdbfad ;};var _ebgbd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dfdfa *Image )GetParamsDict ()*_bg .PdfObjectDictionary {_gafab :=_bg .MakeDict ();_gafab .Set ("\u0057\u0069\u0064t\u0068",_bg .MakeInteger (_dfdfa .Width ));_gafab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bg .MakeInteger (_dfdfa .Height ));
_gafab .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bg .MakeInteger (int64 (_dfdfa .ColorComponents )));_gafab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bg .MakeInteger (_dfdfa .BitsPerComponent ));
return _gafab ;};func _debge (_dagdd *_bg .PdfObjectDictionary )(*PdfShadingType3 ,error ){_egdbbd :=PdfShadingType3 {};_fbdce :=_dagdd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fbdce ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ccfb ,_cegac :=_fbdce .(*_bg .PdfObjectArray );if !_cegac {_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbdce );
return nil ,_bg .ErrTypeError ;};if _ccfb .Len ()!=6{_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ccfb .Len ());return nil ,ErrInvalidAttribute ;
};_egdbbd .Coords =_ccfb ;if _ceegd :=_dagdd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ceegd !=nil {_ceegd =_bg .TraceToDirectObject (_ceegd );_bgafe ,_fabdc :=_ceegd .(*_bg .PdfObjectArray );if !_fabdc {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceegd );
return nil ,_bg .ErrTypeError ;};_egdbbd .Domain =_bgafe ;};_fbdce =_dagdd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbdce ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_egdbbd .Function =[]PdfFunction {};if _gdfc ,_egaggd :=_fbdce .(*_bg .PdfObjectArray );_egaggd {for _ ,_ggbgc :=range _gdfc .Elements (){_baaea ,_dcadab :=_egfbb (_ggbgc );if _dcadab !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcadab );
return nil ,_dcadab ;};_egdbbd .Function =append (_egdbbd .Function ,_baaea );};}else {_gcdbb ,_bdde :=_egfbb (_fbdce );if _bdde !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdde );
return nil ,_bdde ;};_egdbbd .Function =append (_egdbbd .Function ,_gcdbb );};if _fdgce :=_dagdd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fdgce !=nil {_fdgce =_bg .TraceToDirectObject (_fdgce );_efgga ,_gcedcc :=_fdgce .(*_bg .PdfObjectArray );if !_gcedcc {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdgce );
return nil ,_bg .ErrTypeError ;};if _efgga .Len ()!=2{_fa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efgga .Len ());return nil ,ErrInvalidAttribute ;
};_egdbbd .Extend =_efgga ;};return &_egdbbd ,nil ;};func (_aaba *PdfReader )newPdfActionMovieFromDict (_eed *_bg .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_eed .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_eed .Get ("\u0054"),Operation :_eed .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToInteger convert to an integer format.
func (_adfb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gbbdc :=_dc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gbbdc *_adfb .C ()),uint32 (_gbbdc *_adfb .M ()),uint32 (_gbbdc *_adfb .Y ()),uint32 (_gbbdc *_adfb .K ())};};func (_ccadg *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _ccadg ._abcd };


// DecodeArray returns the component range values for the Indexed colorspace.
func (_ccge *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_ccge .HiVal )};};func (_cgc *PdfReader )newPdfAnnotationMovieFromDict (_cafb *_bg .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cbag :=PdfAnnotationMovie {};
_cbag .T =_cafb .Get ("\u0054");_cbag .Movie =_cafb .Get ("\u004d\u006f\u0076i\u0065");_cbag .A =_cafb .Get ("\u0041");return &_cbag ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_gcgge *PdfColorDeviceGray )GetNumComponents ()int {return 1};func _bbgbae (_agdda *_bg .PdfObjectDictionary )(*PdfShadingType5 ,error ){_eecg :=PdfShadingType5 {};_gabbb :=_agdda .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gabbb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgbg ,_bagb :=_gabbb .(*_bg .PdfObjectInteger );if !_bagb {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gabbb );
return nil ,_bg .ErrTypeError ;};_eecg .BitsPerCoordinate =_dgbg ;_gabbb =_agdda .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gabbb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dgbg ,_bagb =_gabbb .(*_bg .PdfObjectInteger );if !_bagb {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gabbb );
return nil ,_bg .ErrTypeError ;};_eecg .BitsPerComponent =_dgbg ;_gabbb =_agdda .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gabbb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_dgbg ,_bagb =_gabbb .(*_bg .PdfObjectInteger );if !_bagb {_fa .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gabbb );
return nil ,_bg .ErrTypeError ;};_eecg .VerticesPerRow =_dgbg ;_gabbb =_agdda .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gabbb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbegg ,_bagb :=_gabbb .(*_bg .PdfObjectArray );if !_bagb {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gabbb );
return nil ,_bg .ErrTypeError ;};_eecg .Decode =_dbegg ;if _dfadg :=_agdda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dfadg !=nil {_eecg .Function =[]PdfFunction {};if _dgfba ,_ggffe :=_dfadg .(*_bg .PdfObjectArray );_ggffe {for _ ,_bbbec :=range _dgfba .Elements (){_bagaeb ,_gffea :=_egfbb (_bbbec );
if _gffea !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gffea );return nil ,_gffea ;};_eecg .Function =append (_eecg .Function ,_bagaeb );
};}else {_eaag ,_geaa :=_egfbb (_dfadg );if _geaa !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_geaa );return nil ,_geaa ;};
_eecg .Function =append (_eecg .Function ,_eaag );};};return &_eecg ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_bdg :=NewPdfAction ();_ae :=&PdfActionGoToE {};_ae .PdfAction =_bdg ;_bdg .SetContext (_ae );return _ae ;};

// SetContext set the sub annotation (context).
func (_dbae *PdfShading )SetContext (ctx PdfModel ){_dbae ._baffd =ctx };

// ToPdfObject returns a PDF object representation of the outline item.
func (_dbfef *OutlineItem )ToPdfObject ()_bg .PdfObject {_egadg ,_ :=_dbfef .ToPdfOutlineItem ();return _egadg .ToPdfObject ();};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ddeeg *Image )Resample (targetBitsPerComponent int64 ){if _ddeeg .BitsPerComponent ==targetBitsPerComponent {return ;};_fdggb :=_ddeeg .GetSamples ();if targetBitsPerComponent < _ddeeg .BitsPerComponent {_bfad :=_ddeeg .BitsPerComponent -targetBitsPerComponent ;
for _dagdba :=range _fdggb {_fdggb [_dagdba ]>>=uint (_bfad );};}else if targetBitsPerComponent > _ddeeg .BitsPerComponent {_agdaf :=targetBitsPerComponent -_ddeeg .BitsPerComponent ;for _beccb :=range _fdggb {_fdggb [_beccb ]<<=uint (_agdaf );};};_ddeeg .BitsPerComponent =targetBitsPerComponent ;
if _ddeeg .BitsPerComponent < 8{_ddeeg .resampleLowBits (_fdggb );return ;};_gedd :=_ggc .BytesPerLine (int (_ddeeg .Width ),int (_ddeeg .BitsPerComponent ),_ddeeg .ColorComponents );_acfg :=make ([]byte ,_gedd *int (_ddeeg .Height ));var (_bggg ,_bdddd ,_cbegc ,_ageff int ;
_cdgcb uint32 ;);for _cbegc =0;_cbegc < int (_ddeeg .Height );_cbegc ++{_bggg =_cbegc *_gedd ;_bdddd =(_cbegc +1)*_gedd -1;_adcb :=_dd .ResampleUint32 (_fdggb [_bggg :_bdddd ],int (targetBitsPerComponent ),8);for _ageff ,_cdgcb =range _adcb {_acfg [_ageff +_bggg ]=byte (_cdgcb );
};};_ddeeg .Data =_acfg ;};

// ToPdfObject implements interface PdfModel.
func (_ecga *PdfActionGoTo3DView )ToPdfObject ()_bg .PdfObject {_ecga .PdfAction .ToPdfObject ();_eaf :=_ecga ._gfd ;_fdg :=_eaf .PdfObject .(*_bg .PdfObjectDictionary );_fdg .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeGoTo3DView )));_fdg .SetIfNotNil ("\u0054\u0041",_ecga .TA );
_fdg .SetIfNotNil ("\u0056",_ecga .V );return _eaf ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_geecg *PdfField )ToPdfObject ()_bg .PdfObject {_gcca :=_geecg ._bggaa ;_ggcb :=_gcca .PdfObject .(*_bg .PdfObjectDictionary );_fega :=_bg .MakeArray ();for _ ,_addb :=range _geecg .Kids {_fega .Append (_addb .ToPdfObject ());};for _ ,_adef :=range _geecg .Annotations {if _adef ._cdcf !=_geecg ._bggaa {_fega .Append (_adef .GetContext ().ToPdfObject ());
};};if _geecg .Parent !=nil {_ggcb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_geecg .Parent .GetContainingPdfObject ());};if _fega .Len ()> 0{_ggcb .Set ("\u004b\u0069\u0064\u0073",_fega );};_ggcb .SetIfNotNil ("\u0046\u0054",_geecg .FT );_ggcb .SetIfNotNil ("\u0054",_geecg .T );
_ggcb .SetIfNotNil ("\u0054\u0055",_geecg .TU );_ggcb .SetIfNotNil ("\u0054\u004d",_geecg .TM );_ggcb .SetIfNotNil ("\u0046\u0066",_geecg .Ff );_ggcb .SetIfNotNil ("\u0056",_geecg .V );_ggcb .SetIfNotNil ("\u0044\u0056",_geecg .DV );_ggcb .SetIfNotNil ("\u0041\u0041",_geecg .AA );
return _gcca ;};

// ToPdfObject implements interface PdfModel.
func (_fca *PdfActionSetOCGState )ToPdfObject ()_bg .PdfObject {_fca .PdfAction .ToPdfObject ();_fdb :=_fca ._gfd ;_bba :=_fdb .PdfObject .(*_bg .PdfObjectDictionary );_bba .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeSetOCGState )));_bba .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fca .State );
_bba .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_fca .PreserveRB );return _fdb ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cbgg :=PdfPage {};_cbgg ._fcbg =_bg .MakeDict ();_cbgg .Resources =NewPdfPageResources ();_ecfdg :=_bg .PdfIndirectObject {};_ecfdg .PdfObject =_cbgg ._fcbg ;_cbgg ._eecd =&_ecfdg ;return &_cbgg ;};

// ToPdfObject implements interface PdfModel.
func (_cebf *PdfAnnotationStrikeOut )ToPdfObject ()_bg .PdfObject {_cebf .PdfAnnotation .ToPdfObject ();_ggfd :=_cebf ._cdcf ;_gcbb :=_ggfd .PdfObject .(*_bg .PdfObjectDictionary );_cebf .PdfAnnotationMarkup .appendToPdfDictionary (_gcbb );_gcbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_gcbb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cebf .QuadPoints );return _ggfd ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_eaga *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfeb ,_bcbd :=color .(*PdfColorCalGray );if !_bcbd {_fa .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_bfeb .Val ();X :=_eaga .WhitePoint [0]*_dc .Pow (ANorm ,_eaga .Gamma );Y :=_eaga .WhitePoint [1]*_dc .Pow (ANorm ,_eaga .Gamma );
Z :=_eaga .WhitePoint [2]*_dc .Pow (ANorm ,_eaga .Gamma );_bbef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gbeb :=-0.969256*X +1.875992*Y +0.041556*Z ;_fffb :=0.055648*X +-0.204043*Y +1.057311*Z ;_bbef =_dc .Min (_dc .Max (_bbef ,0),1.0);_gbeb =_dc .Min (_dc .Max (_gbeb ,0),1.0);
_fffb =_dc .Min (_dc .Max (_fffb ,0),1.0);return NewPdfColorDeviceRGB (_bbef ,_gbeb ,_fffb ),nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dcb :=NewPdfAction ();_egd :=&PdfActionSetOCGState {};_egd .PdfAction =_dcb ;_dcb .SetContext (_egd );return _egd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ebfff pdfFontType3 )GetCharMetrics (code _be .CharCode )(_adb .CharMetrics ,bool ){if _bgdgd ,_ffafe :=_ebfff ._aafe [code ];_ffafe {return _adb .CharMetrics {Wx :_bgdgd },true ;};if _adb .IsStdFont (_adb .StdFontName (_ebfff ._ffgfd )){return _adb .CharMetrics {Wx :250},true ;
};return _adb .CharMetrics {},false ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gbgb *_bg .PdfParser ;_cgcce _bg .PdfObject ;_aefa *_bg .PdfIndirectObject ;_ccaf *_bg .PdfObjectDictionary ;_abcee []*_bg .PdfIndirectObject ;PageList []*PdfPage ;_afcg int ;_daagd *_bg .PdfObjectDictionary ;_bggdde *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dgaed *modelManager ;_aaeef bool ;_edaed map[_bg .PdfObject ]struct{};_ebcba _ab .ReadSeeker ;_fced string ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_aeegg *PdfReader )CheckAccessRights (password []byte )(bool ,_ffb .Permissions ,error ){return _aeegg ._gbgb .CheckAccessRights (password );};

// MergePageWith appends page content to source Pdf file page content.
func (_gacb *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cace :=pageNum -1;var _ebb *PdfPage ;for _ebcb ,_aded :=range _gacb ._dgec {if _ebcb ==_cace {_ebb =_aded ;};};if _ebb ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _ebb ._eecd !=nil &&_ebb ._eecd .GetParser ()==_gacb ._dgfca ._gbgb {_ebb =_ebb .Duplicate ();_gacb ._dgec [_cace ]=_ebb ;};page =page .Duplicate ();_cgada (page );_befg :=_agbb (_ebb );_bdad :=_agbb (page );_cacaff :=make (map[_bg .PdfObjectName ]_bg .PdfObjectName );
for _gbddf :=range _bdad {if _ ,_bbde :=_befg [_gbddf ];_bbde {for _bdef :=1;true ;_bdef ++{_gafgf :=_bg .PdfObjectName (string (_gbddf )+_af .Itoa (_bdef ));if _ ,_fbb :=_befg [_gafgf ];!_fbb {_cacaff [_gbddf ]=_gafgf ;break ;};};};};_febc ,_dede :=page .GetContentStreams ();
if _dede !=nil {return _dede ;};_dgfg ,_dede :=_ebb .GetContentStreams ();if _dede !=nil {return _dede ;};for _bggcf ,_gdcb :=range _febc {for _cbage ,_daaa :=range _cacaff {_gdcb =_ff .Replace (_gdcb ,"\u002f"+string (_cbage ),"\u002f"+string (_daaa ),-1);
};_febc [_bggcf ]=_gdcb ;};_dgfg =append (_dgfg ,_febc ...);if _adaec :=_ebb .SetContentStreams (_dgfg ,_bg .NewFlateEncoder ());_adaec !=nil {return _adaec ;};_ebb ._facgg =append (_ebb ._facgg ,page ._facgg ...);if _ebb .Resources ==nil {_ebb .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_ebb .Resources .Font =_gacb .mergeResources (_ebb .Resources .Font ,page .Resources .Font ,_cacaff );_ebb .Resources .XObject =_gacb .mergeResources (_ebb .Resources .XObject ,page .Resources .XObject ,_cacaff );_ebb .Resources .Properties =_gacb .mergeResources (_ebb .Resources .Properties ,page .Resources .Properties ,_cacaff );
if _ebb .Resources .ProcSet ==nil {_ebb .Resources .ProcSet =page .Resources .ProcSet ;};_ebb .Resources .Shading =_gacb .mergeResources (_ebb .Resources .Shading ,page .Resources .Shading ,_cacaff );_ebb .Resources .ExtGState =_gacb .mergeResources (_ebb .Resources .ExtGState ,page .Resources .ExtGState ,_cacaff );
};_ecbee ,_dede :=_ebb .GetMediaBox ();if _dede !=nil {return _dede ;};_fcdb ,_dede :=page .GetMediaBox ();if _dede !=nil {return _dede ;};var _bafg bool ;if _ecbee .Llx > _fcdb .Llx {_ecbee .Llx =_fcdb .Llx ;_bafg =true ;};if _ecbee .Lly > _fcdb .Lly {_ecbee .Lly =_fcdb .Lly ;
_bafg =true ;};if _ecbee .Urx < _fcdb .Urx {_ecbee .Urx =_fcdb .Urx ;_bafg =true ;};if _ecbee .Ury < _fcdb .Ury {_ecbee .Ury =_fcdb .Ury ;_bafg =true ;};if _bafg {_ebb .MediaBox =_ecbee ;};return nil ;};var (ErrRequiredAttributeMissing =_fff .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_agbef =_fff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fff .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fff .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_eb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bg .ErrNotSupported );ErrType1CFontNotSupported =_eb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bg .ErrNotSupported );
ErrType3FontNotSupported =_eb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bg .ErrNotSupported );
ErrTTCmapNotSupported =_eb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bg .ErrNotSupported );
ErrSignNotEnoughSpace =_eb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_eb .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aadb *PdfFieldSignature )ToPdfObject ()_bg .PdfObject {if _aadb .PdfAnnotationWidget !=nil {_aadb .PdfAnnotationWidget .ToPdfObject ();};_aadb .PdfField .ToPdfObject ();_dbbd :=_aadb ._bggaa ;_aafc :=_dbbd .PdfObject .(*_bg .PdfObjectDictionary );
_aafc .SetIfNotNil ("\u0046\u0054",_bg .MakeName ("\u0053\u0069\u0067"));_aafc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aadb .Lock );_aafc .SetIfNotNil ("\u0053\u0056",_aadb .SV );if _aadb .V !=nil {_aafc .SetIfNotNil ("\u0056",_aadb .V .ToPdfObject ());
};return _dbbd ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ecg .Time ;};func (_bec *PdfReader )newPdfActionThreadFromDict (_ffa *_bg .PdfObjectDictionary )(*PdfActionThread ,error ){_abg ,_edc :=_gdf (_ffa .Get ("\u0046"));if _edc !=nil {return nil ,_edc ;};return &PdfActionThread {D :_ffa .Get ("\u0044"),B :_ffa .Get ("\u0042"),F :_abg },nil ;
};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_aceed :=&XObjectForm {};_aafcf :=&_bg .PdfObjectStream {};_aafcf .PdfObjectDictionary =_bg .MakeDict ();_aceed ._egfbg =_aafcf ;return _aceed ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_eagbf *PdfPage )Size ()(float64 ,float64 ,error ){_cdgggg ,_gdde :=_eagbf .GetMediaBox ();if _gdde !=nil {return 0,0,_gdde ;};_aefe ,_eeead :=_cdgggg .Width (),_cdgggg .Height ();if _aceeb :=_eagbf .Rotate ;_aceeb !=nil &&*_aceeb %360!=0&&*_aceeb %90==0{if _gged :=(360+*_aceeb %360)%360;
_gged ==90||_gged ==270{_aefe ,_eeead =_eeead ,_aefe ;};};return _aefe ,_eeead ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_beb *PdfAnnotationPrinterMark )ToPdfObject ()_bg .PdfObject {_beb .PdfAnnotation .ToPdfObject ();_agg :=_beb ._cdcf ;_cbae :=_agg .PdfObject .(*_bg .PdfObjectDictionary );_cbae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_cbae .SetIfNotNil ("\u004d\u004e",_beb .MN );return _agg ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_aeded *PdfField )IsTerminal ()bool {return len (_aeded .Kids )==0};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bg .PdfObject ;IC _bg .PdfObject ;RO _bg .PdfObject ;OverlayText _bg .PdfObject ;Repeat _bg .PdfObject ;DA _bg .PdfObject ;Q _bg .PdfObject ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ffb .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gbaa *_bg .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bg .PdfObjectName ;Filter *_bg .PdfObjectName ;SubFilter *_bg .PdfObjectName ;Contents *_bg .PdfObjectString ;Cert _bg .PdfObject ;ByteRange *_bg .PdfObjectArray ;Reference *_bg .PdfObjectArray ;Changes *_bg .PdfObjectArray ;Name *_bg .PdfObjectString ;
M *_bg .PdfObjectString ;Location *_bg .PdfObjectString ;Reason *_bg .PdfObjectString ;ContactInfo *_bg .PdfObjectString ;R *_bg .PdfObjectInteger ;V *_bg .PdfObjectInteger ;PropBuild *_bg .PdfObjectDictionary ;PropAuthTime *_bg .PdfObjectInteger ;PropAuthType *_bg .PdfObjectName ;
};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cedaec .Lock ();defer _cedaec .Unlock ();_dcagb =title };

// ValidateSignatures validates digital signatures in the document.
func (_ebdeg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ebdeg .AcroForm ==nil {return nil ,nil ;};if _ebdeg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ffgcg *PdfSignature ;
_fdaa *PdfField ;_fdfd SignatureHandler ;};var _ceec []*sigFieldPair ;for _ ,_afabd :=range _ebdeg .AcroForm .AllFields (){if _afabd .V ==nil {continue ;};if _efeae ,_gacae :=_bg .GetDict (_afabd .V );_gacae {if _dcgaa ,_ceed :=_bg .GetNameVal (_efeae .Get ("\u0054\u0079\u0070\u0065"));
_ceed &&_dcgaa =="\u0053\u0069\u0067"{_ceada ,_fffeef :=_bg .GetIndirect (_afabd .V );if !_fffeef {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cdgcba ,_ccdcf :=_ebdeg .newPdfSignatureFromIndirect (_ceada );if _ccdcf !=nil {return nil ,_ccdcf ;};var _bdedc SignatureHandler ;for _ ,_dgfe :=range handlers {if _dgfe .IsApplicable (_cdgcba ){_bdedc =_dgfe ;break ;};};_ceec =append (_ceec ,&sigFieldPair {_ffgcg :_cdgcba ,_fdaa :_afabd ,_fdfd :_bdedc });
};};};var _aecbc []SignatureValidationResult ;for _ ,_gcgdb :=range _ceec {_eggc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gcgdb ._fdaa }};if _gcgdb ._fdfd ==nil {_eggc .Errors =append (_eggc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_aecbc =append (_aecbc ,_eggc );continue ;};_fbdeb ,_dfadd :=_gcgdb ._fdfd .NewDigest (_gcgdb ._ffgcg );if _dfadd !=nil {_eggc .Errors =append (_eggc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_dfadd .Error ());_aecbc =append (_aecbc ,_eggc );
continue ;};_gggdgg :=_gcgdb ._ffgcg .ByteRange ;if _gggdgg ==nil {_eggc .Errors =append (_eggc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_aecbc =append (_aecbc ,_eggc );continue ;};for _ccgdb :=0;
_ccgdb < _gggdgg .Len ();_ccgdb =_ccgdb +2{_abafeb ,_ :=_bg .GetNumberAsInt64 (_gggdgg .Get (_ccgdb ));_cbabg ,_ :=_bg .GetIntVal (_gggdgg .Get (_ccgdb +1));if _ ,_cdag :=_ebdeg ._ebcba .Seek (_abafeb ,_ab .SeekStart );_cdag !=nil {return nil ,_cdag ;};
_gbede :=make ([]byte ,_cbabg );if _ ,_ebcgd :=_ebdeg ._ebcba .Read (_gbede );_ebcgd !=nil {return nil ,_ebcgd ;};_fbdeb .Write (_gbede );};_aeaag ,_dfadd :=_gcgdb ._fdfd .Validate (_gcgdb ._ffgcg ,_fbdeb );if _dfadd !=nil {return nil ,_dfadd ;};_aeaag .Name =_gcgdb ._ffgcg .Name .Decoded ();
_aeaag .Reason =_gcgdb ._ffgcg .Reason .Decoded ();if _gcgdb ._ffgcg .M !=nil {_ceeagd ,_faggc :=NewPdfDate (_gcgdb ._ffgcg .M .String ());if _faggc !=nil {_aeaag .Errors =append (_aeaag .Errors ,_faggc .Error ());continue ;};_aeaag .Date =_ceeagd ;};_aeaag .ContactInfo =_gcgdb ._ffgcg .ContactInfo .Decoded ();
_aeaag .Location =_gcgdb ._ffgcg .Location .Decoded ();_aeaag .Fields =_eggc .Fields ;_aecbc =append (_aecbc ,_aeaag );};return _aecbc ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cdg :=NewPdfAction ();_fcg :=&PdfActionSubmitForm {};_fcg .PdfAction =_cdg ;_cdg .SetContext (_fcg );return _fcg ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gaf :=NewPdfAnnotation ();_efb :=&PdfAnnotationCaret {};_efb .PdfAnnotation =_gaf ;_efb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaf .SetContext (_efb );return _efb ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gac :=NewPdfAnnotation ();_fege :=&PdfAnnotation3D {};_fege .PdfAnnotation =_gac ;_gac .SetContext (_fege );return _fege ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_gdd :=NewPdfAction ();_cde :=&PdfActionThread {};_cde .PdfAction =_gdd ;_gdd .SetContext (_cde );return _cde ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cfbc pdfFontSimple )GetRuneMetrics (r rune )(_adb .CharMetrics ,bool ){if _cfbc ._eggd !=nil {_ggbfa ,_gacg :=_cfbc ._eggd .Read (r );if _gacg {return _ggbfa ,true ;};};_abacef :=_cfbc .Encoder ();if _abacef ==nil {_fa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cfbc );
return _adb .CharMetrics {},false ;};_ccgfe ,_dcgdg :=_abacef .RuneToCharcode (r );if !_dcgdg {if r !=' '{_fa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cfbc );
};return _adb .CharMetrics {},false ;};_agfdd ,_cecd :=_cfbc .GetCharMetrics (_ccgfe );return _agfdd ,_cecd ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;
BorderStyleUnderline BorderStyle =iota ;);

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gecbc :=NewPdfOutline ();_gecbc ._baag =&_gecbc ;return _gecbc ;};func _dbcde (_eagda *PdfField ,_daff _bg .PdfObject )error {switch _eagda .GetContext ().(type ){case *PdfFieldText :switch _fgagd :=_daff .(type ){case *_bg .PdfObjectName :_ffefe :=_fgagd ;
_fa .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ffefe .String ());
_eagda .V =_bg .MakeEncodedString (_fgagd .String (),true );case *_bg .PdfObjectString :_eagda .V =_bg .MakeEncodedString (_fgagd .String (),true );default:_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fgagd ,_fgagd );
};case *PdfFieldButton :switch _daff .(type ){case *_bg .PdfObjectName :if len (_daff .String ())> 0{_eagda .V =_daff ;_ddef (_eagda ,_daff );};case *_bg .PdfObjectString :if len (_daff .String ())> 0{_eagda .V =_bg .MakeName (_daff .String ());_ddef (_eagda ,_eagda .V );
};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_eagda .PartialName (),_daff );_eagda .V =_daff ;};case *PdfFieldChoice :switch _daff .(type ){case *_bg .PdfObjectName :if len (_daff .String ())> 0{_eagda .V =_bg .MakeString (_daff .String ());
_ddef (_eagda ,_daff );};case *_bg .PdfObjectString :if len (_daff .String ())> 0{_eagda .V =_daff ;_ddef (_eagda ,_bg .MakeName (_daff .String ()));};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_eagda .PartialName (),_daff );
_eagda .V =_daff ;};case *PdfFieldSignature :_fa .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_eagda .PartialName (),_daff );
};return nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_bdeaa *_bg .PdfIndirectObject ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cedaec .Lock ();defer _cedaec .Unlock ();_gdcaf =producer };

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_eggab *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ebdbg :=_dd .NewReader (img .getBase ());_bcge :=_ggc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_eeca :=_dd .NewWriter (_bcge );
_bdcb :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_ccec :=make ([]uint32 ,3);var (_daac error ;_aga ,_egada ,_gegf ,_cgcg ,_dceb ,_gffe float64 ;);for {_daac =_ebdbg .ReadSamples (_ccec );if _daac ==_ab .EOF {break ;}else if _daac !=nil {return img ,_daac ;
};_aga =float64 (_ccec [0])/_bdcb ;_egada =float64 (_ccec [1])/_bdcb ;_gegf =float64 (_ccec [2])/_bdcb ;_cgcg =_eggab .Matrix [0]*_dc .Pow (_aga ,_eggab .Gamma [0])+_eggab .Matrix [3]*_dc .Pow (_egada ,_eggab .Gamma [1])+_eggab .Matrix [6]*_dc .Pow (_gegf ,_eggab .Gamma [2]);
_dceb =_eggab .Matrix [1]*_dc .Pow (_aga ,_eggab .Gamma [0])+_eggab .Matrix [4]*_dc .Pow (_egada ,_eggab .Gamma [1])+_eggab .Matrix [7]*_dc .Pow (_gegf ,_eggab .Gamma [2]);_gffe =_eggab .Matrix [2]*_dc .Pow (_aga ,_eggab .Gamma [0])+_eggab .Matrix [5]*_dc .Pow (_egada ,_eggab .Gamma [1])+_eggab .Matrix [8]*_dc .Pow (_gegf ,_eggab .Gamma [2]);
_aga =3.240479*_cgcg +-1.537150*_dceb +-0.498535*_gffe ;_egada =-0.969256*_cgcg +1.875992*_dceb +0.041556*_gffe ;_gegf =0.055648*_cgcg +-0.204043*_dceb +1.057311*_gffe ;_aga =_dc .Min (_dc .Max (_aga ,0),1.0);_egada =_dc .Min (_dc .Max (_egada ,0),1.0);
_gegf =_dc .Min (_dc .Max (_gegf ,0),1.0);_ccec [0]=uint32 (_aga *_bdcb );_ccec [1]=uint32 (_egada *_bdcb );_ccec [2]=uint32 (_gegf *_bdcb );if _daac =_eeca .WriteSamples (_ccec );_daac !=nil {return img ,_daac ;};};return _bbace (&_bcge ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgd *PdfActionURI )ToPdfObject ()_bg .PdfObject {_cgd .PdfAction .ToPdfObject ();_dbe :=_cgd ._gfd ;_eff :=_dbe .PdfObject .(*_bg .PdfObjectDictionary );_eff .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeURI )));_eff .SetIfNotNil ("\u0055\u0052\u0049",_cgd .URI );
_eff .SetIfNotNil ("\u0049\u0073\u004da\u0070",_cgd .IsMap );return _dbe ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_defea *PdfSignature )bool ;Validate (_gcgbe *PdfSignature ,_bbgcc Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_bbacb *PdfSignature )(Hasher ,error );Sign (_cdcb *PdfSignature ,_egebf Hasher )error ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dbea *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func _bfea (_dcge _bg .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fa .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dcge .String (),_dcge );
_bgag :=NewPdfColorspaceSpecialPattern ();if _eebd ,_ggcg :=_dcge .(*_bg .PdfIndirectObject );_ggcg {_bgag ._cgcf =_eebd ;};_dcge =_bg .TraceToDirectObject (_dcge );if _aecgg ,_bcgf :=_dcge .(*_bg .PdfObjectName );_bcgf {if *_aecgg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _bgag ,nil ;};_effd ,_caed :=_dcge .(*_bg .PdfObjectArray );if !_caed {_fa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dcge );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _effd .Len ()!=1&&_effd .Len ()!=2{_fa .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_effd );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dcge =_effd .Get (0);if _baae ,_fbdd :=_dcge .(*_bg .PdfObjectName );_fbdd {if *_baae !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fa .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_baae );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _effd .Len ()> 1{_dcge =_effd .Get (1);_dcge =_bg .TraceToDirectObject (_dcge );_ebab ,_efc :=NewPdfColorspaceFromPdfObject (_dcge );if _efc !=nil {return nil ,_efc ;
};_bgag .UnderlyingCS =_ebab ;};_fa .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_bgag .UnderlyingCS );
return _bgag ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func (_ccdad *PdfField )inherit (_gdba func (*PdfField )bool )(bool ,error ){_fefbb :=map[*PdfField ]bool {};_aafcc :=false ;_aedce :=_ccdad ;for _aedce !=nil {if _ ,_fbee :=_fefbb [_aedce ];
_fbee {return false ,_fff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_ebeg :=_gdba (_aedce );if _ebeg {_aafcc =true ;break ;};_fefbb [_aedce ]=true ;_aedce =_aedce .Parent ;};return _aafcc ,nil ;
};

// AddPages adds pages to be appended to the end of the source PDF.
func (_bccdg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_gcag :=range pages {_gcag =_gcag .Duplicate ();_cgada (_gcag );_bccdg ._dgec =append (_bccdg ._dgec ,_gcag );};};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_adae *PdfReader )newPdfAnnotationProjectionFromDict (_aacf *_bg .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fgaa :=&PdfAnnotationProjection {};_dcdf ,_bgd :=_adae .newPdfAnnotationMarkupFromDict (_aacf );
if _bgd !=nil {return nil ,_bgd ;};_fgaa .PdfAnnotationMarkup =_dcdf ;return _fgaa ,nil ;};func _edgf ()string {_cedaec .Lock ();defer _cedaec .Unlock ();_gdaca :=_ecb .GetLicenseKey ();if len (_gdcaf )> 0&&(_gdaca .IsLicensed ()||_dedbb ){return _gdcaf ;
};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cggbf (),_gdaca .TypeToString ());};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_baa :=NewPdfAction ();_bf :=&PdfActionGoToR {};_bf .PdfAction =_baa ;_baa .SetContext (_bf );return _bf ;};

// Write writes out the PDF.
func (_caecf *PdfWriter )Write (writer _ab .Writer )error {_fa .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_edfdf :=_ecb .GetLicenseKey ();if (_edfdf ==nil ||!_edfdf .IsLicensed ())&&!_dedbb {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fff .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _caecf ._eedg !=nil {_fa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_caecf ._eedg );
_ffacea :=_caecf ._eedg .ToPdfObject ();_fa .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ffacea ,_ffacea ,_ffacea );_caecf ._gcff .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ffacea );
_bcabd :=_caecf .addObjects (_ffacea );if _bcabd !=nil {return _bcabd ;};};if _caecf ._eacgc !=nil {_fa .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_effgd :=_caecf ._eacgc .ToPdfObject ();_fa .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_effgd );
_caecf ._gcff .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_effgd );_afda :=_caecf .addObjects (_effgd );if _afda !=nil {return _afda ;};};for _bgedg ,_addca :=range _caecf ._gfecc {if !_caecf .hasObject (_bgedg ){_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_bgedg ,_bgedg ,_bgedg );
for _ ,_bfded :=range _addca {for _ ,_gecbcf :=range _bfded .Keys (){_baade :=_bfded .Get (_gecbcf );if _baade ==_bgedg {_fa .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_bfded .Set (_gecbcf ,_bg .MakeNull ());break ;};};};};};_caecf ._gcff .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bg .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_caecf ._afee ,_caecf ._ceced )));_caecf .copyObjects ();if _caecf ._cfbef !=nil {var _bfgca error ;
_caecf ._fdeeb ,_bfgca =_caecf ._cfbef .Optimize (_caecf ._fdeeb );if _bfgca !=nil {return _bfgca ;};_fagfa :=make (map[_bg .PdfObject ]struct{},len (_caecf ._fdeeb ));for _ ,_ddcef :=range _caecf ._fdeeb {_fagfa [_ddcef ]=struct{}{};};_caecf ._eccf =_fagfa ;
};_caecf ._dbfbf =_caecf ._accgd ;_caecf ._gbdcg =_ec .NewWriter (writer );_egfbbg :=_caecf ._afee > 1||(_caecf ._afee ==1&&_caecf ._ceced > 4);if _caecf ._fedaag !=nil {_egfbbg =*_caecf ._fedaag ;};_fdeac :=make (map[_bg .PdfObject ]bool );for _ ,_cadcf :=range _caecf ._fdeeb {if _egdeg ,_fafbf :=_cadcf .(*_bg .PdfObjectStreams );
_fafbf {_egfbbg =true ;for _ ,_aadbg :=range _egdeg .Elements (){_fdeac [_aadbg ]=true ;if _gegfa ,_gdbbd :=_aadbg .(*_bg .PdfIndirectObject );_gdbbd {_fdeac [_gegfa .PdfObject ]=true ;};};};};if _egfbbg &&_caecf ._afee ==1&&_caecf ._ceced < 5{_caecf ._ceced =5;
};if _caecf ._efbcc {_caecf .writeString ("\u000a");}else {_caecf .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_caecf ._afee ,_caecf ._ceced ));_caecf .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_caecf .updateObjectNumbers ();_fa .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_caecf ._fdeeb ));_caecf ._ddfce =make (map[int ]crossReference );_caecf ._ddfce [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _caecf ._bddec .ObjectMap !=nil {for _cecfba ,_aeabg :=range _caecf ._bddec .ObjectMap {if _cecfba ==0{continue ;};if _aeabg .XType ==_bg .XrefTypeObjectStream {_fcag :=crossReference {Type :2,ObjectNumber :_aeabg .OsObjNumber ,Index :_aeabg .OsObjIndex };
_caecf ._ddfce [_cecfba ]=_fcag ;};if _aeabg .XType ==_bg .XrefTypeTableEntry {_cada :=crossReference {Type :1,ObjectNumber :_aeabg .ObjectNumber ,Offset :_aeabg .Offset };_caecf ._ddfce [_cecfba ]=_cada ;};};};for _ ,_ecebf :=range _caecf ._fdeeb {if _bddag :=_fdeac [_ecebf ];
_bddag {continue ;};_eggeb :=int64 (0);switch _ccgdc :=_ecebf .(type ){case *_bg .PdfIndirectObject :_eggeb =_ccgdc .ObjectNumber ;case *_bg .PdfObjectStream :_eggeb =_ccgdc .ObjectNumber ;case *_bg .PdfObjectStreams :_eggeb =_ccgdc .ObjectNumber ;default:_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_ecebf );
return ErrTypeCheck ;};if _caecf ._accb !=nil &&_ecebf !=_caecf ._bbfcc {_bafcd :=_caecf ._accb .Encrypt (_ecebf ,_eggeb ,0);if _bafcd !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bafcd );
return _bafcd ;};};_caecf .writeObject (int (_eggeb ),_ecebf );};_ecffb :=_caecf ._dbfbf ;var _cdfgf int ;for _dbefc :=range _caecf ._ddfce {if _dbefc > _cdfgf {_cdfgf =_dbefc ;};};if _egfbbg {_ceccb :=_cdfgf +1;_caecf ._ddfce [_ceccb ]=crossReference {Type :1,ObjectNumber :_ceccb ,Offset :_ecffb };
_dgcfc :=_bb .NewBuffer (nil );_ddab :=_bg .MakeArray ();for _eceda :=0;_eceda <=_cdfgf ;{for ;_eceda <=_cdfgf ;_eceda ++{_cebcg ,_begfg :=_caecf ._ddfce [_eceda ];if _begfg &&(!_caecf ._efbcc ||_caecf ._efbcc &&(_cebcg .Type ==1&&_cebcg .Offset >=_caecf ._bfegf ||_cebcg .Type ==0)){break ;
};};var _bcgce int ;for _bcgce =_eceda +1;_bcgce <=_cdfgf ;_bcgce ++{_accae ,_fdedb :=_caecf ._ddfce [_bcgce ];if _fdedb &&(!_caecf ._efbcc ||_caecf ._efbcc &&(_accae .Type ==1&&_accae .Offset > _caecf ._bfegf )){continue ;};break ;};_ddab .Append (_bg .MakeInteger (int64 (_eceda )),_bg .MakeInteger (int64 (_bcgce -_eceda )));
for _accaa :=_eceda ;_accaa < _bcgce ;_accaa ++{_dabc :=_caecf ._ddfce [_accaa ];switch _dabc .Type {case 0:_gg .Write (_dgcfc ,_gg .BigEndian ,byte (0));_gg .Write (_dgcfc ,_gg .BigEndian ,uint32 (0));_gg .Write (_dgcfc ,_gg .BigEndian ,uint16 (0xFFFF));
case 1:_gg .Write (_dgcfc ,_gg .BigEndian ,byte (1));_gg .Write (_dgcfc ,_gg .BigEndian ,uint32 (_dabc .Offset ));_gg .Write (_dgcfc ,_gg .BigEndian ,uint16 (_dabc .Generation ));case 2:_gg .Write (_dgcfc ,_gg .BigEndian ,byte (2));_gg .Write (_dgcfc ,_gg .BigEndian ,uint32 (_dabc .ObjectNumber ));
_gg .Write (_dgcfc ,_gg .BigEndian ,uint16 (_dabc .Index ));};};_eceda =_bcgce +1;};_ebgbg ,_bgefdf :=_bg .MakeStream (_dgcfc .Bytes (),_bg .NewFlateEncoder ());if _bgefdf !=nil {return _bgefdf ;};_ebgbg .ObjectNumber =int64 (_ceccb );_ebgbg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0058\u0052\u0065\u0066"));
_ebgbg .PdfObjectDictionary .Set ("\u0057",_bg .MakeArray (_bg .MakeInteger (1),_bg .MakeInteger (4),_bg .MakeInteger (2)));_ebgbg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_ddab );_ebgbg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bg .MakeInteger (int64 (_ceccb +1)));
_ebgbg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_caecf ._cedg );_ebgbg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_caecf ._cdbe );if _caecf ._efbcc &&_caecf ._dgffd > 0{_ebgbg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bg .MakeInteger (_caecf ._dgffd ));
};if _caecf ._accb !=nil {_ebgbg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_caecf ._bbfcc );_ebgbg .Set ("\u0049\u0044",_caecf ._bfffac );_fa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_caecf ._bfffac );};_caecf .writeObject (int (_ebgbg .ObjectNumber ),_ebgbg );
}else {_caecf .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _fedeg :=0;_fedeg <=_cdfgf ;{for ;_fedeg <=_cdfgf ;_fedeg ++{_gbcad ,_caebf :=_caecf ._ddfce [_fedeg ];if _caebf &&(!_caecf ._efbcc ||_caecf ._efbcc &&(_gbcad .Type ==1&&_gbcad .Offset >=_caecf ._bfegf ||_gbcad .Type ==0)){break ;
};};var _cdefa int ;for _cdefa =_fedeg +1;_cdefa <=_cdfgf ;_cdefa ++{_gggfe ,_eaecc :=_caecf ._ddfce [_cdefa ];if _eaecc &&(!_caecf ._efbcc ||_caecf ._efbcc &&(_gggfe .Type ==1&&_gggfe .Offset > _caecf ._bfegf )){continue ;};break ;};_bgffd :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_fedeg ,_cdefa -_fedeg );
_caecf .writeString (_bgffd );for _gdaef :=_fedeg ;_gdaef < _cdefa ;_gdaef ++{_aageaf :=_caecf ._ddfce [_gdaef ];switch _aageaf .Type {case 0:_bgffd =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_caecf .writeString (_bgffd );case 1:_bgffd =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_aageaf .Offset ,0);_caecf .writeString (_bgffd );};};_fedeg =_cdefa +1;};_cegbd :=_bg .MakeDict ();_cegbd .Set ("\u0049\u006e\u0066\u006f",_caecf ._cedg );
_cegbd .Set ("\u0052\u006f\u006f\u0074",_caecf ._cdbe );_cegbd .Set ("\u0053\u0069\u007a\u0065",_bg .MakeInteger (int64 (_cdfgf +1)));if _caecf ._efbcc &&_caecf ._dgffd > 0{_cegbd .Set ("\u0050\u0072\u0065\u0076",_bg .MakeInteger (_caecf ._dgffd ));};if _caecf ._accb !=nil {_cegbd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_caecf ._bbfcc );
_cegbd .Set ("\u0049\u0044",_caecf ._bfffac );_fa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_caecf ._bfffac );};_caecf .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_caecf .writeString (_cegbd .WriteString ());_caecf .writeString ("\u000a");
};_bfggb :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ecffb );_caecf .writeString (_bfggb );_caecf .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _caecf ._aafea ==nil {_caecf ._aafea =_caecf ._gbdcg .Flush ();
};return _caecf ._aafea ;};func (_acgb *DSS )add (_afab *[]*_bg .PdfObjectStream ,_daabe map[string ]*_bg .PdfObjectStream ,_dfec [][]byte )([]*_bg .PdfObjectStream ,error ){_ebecc :=make ([]*_bg .PdfObjectStream ,0,len (_dfec ));for _ ,_cfgg :=range _dfec {_eeff ,_dbda :=_ecbff (_cfgg );
if _dbda !=nil {return nil ,_dbda ;};_cdca ,_afec :=_daabe [string (_eeff )];if !_afec {_cdca ,_dbda =_bg .MakeStream (_cfgg ,_bg .NewRawEncoder ());if _dbda !=nil {return nil ,_dbda ;};_daabe [string (_eeff )]=_cdca ;*_afab =append (*_afab ,_cdca );};
_ebecc =append (_ebecc ,_cdca );};return _ebecc ,nil ;};

// Width returns the width of `rect`.
func (_deec *PdfRectangle )Width ()float64 {return _dc .Abs (_deec .Urx -_deec .Llx )};func (_cgbg *PdfReader )newPdfAnnotation3DFromDict (_fbgc *_bg .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_gecf :=PdfAnnotation3D {};_gecf .T3DD =_fbgc .Get ("\u0033\u0044\u0044");
_gecf .T3DV =_fbgc .Get ("\u0033\u0044\u0056");_gecf .T3DA =_fbgc .Get ("\u0033\u0044\u0041");_gecf .T3DI =_fbgc .Get ("\u0033\u0044\u0049");_gecf .T3DB =_fbgc .Get ("\u0033\u0044\u0042");return &_gecf ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ccdfd *PdfPageResources )HasExtGState (keyName _bg .PdfObjectName )bool {_ ,_gfefd :=_ccdfd .GetFontByName (keyName );return _gfefd ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _gdf (_ggf _bg .PdfObject )(*PdfFilespec ,error ){if _ggf ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ggf );};func (_gfga fontCommon )fontFlags ()int {if _gfga ._abcd ==nil {return 0;
};return _gfga ._abcd ._beceg ;};func _cgafc (_cbacd _adb .StdFont )pdfFontSimple {_fceg :=_cbacd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ccbf :"\u0054\u0079\u0070e\u0031",_ffgfd :_cbacd .Name ()},_eggd :_cbacd .GetMetricsTable (),_aeaf :&PdfFontDescriptor {FontName :_bg .MakeName (string (_fceg .Name )),FontFamily :_bg .MakeName (_fceg .Family ),FontWeight :_bg .MakeFloat (float64 (_fceg .Weight )),Flags :_bg .MakeInteger (int64 (_fceg .Flags )),FontBBox :_bg .MakeArrayFromFloats (_fceg .BBox [:]),ItalicAngle :_bg .MakeFloat (_fceg .ItalicAngle ),Ascent :_bg .MakeFloat (_fceg .Ascent ),Descent :_bg .MakeFloat (_fceg .Descent ),CapHeight :_bg .MakeFloat (_fceg .CapHeight ),XHeight :_bg .MakeFloat (_fceg .XHeight ),StemV :_bg .MakeFloat (_fceg .StemV ),StemH :_bg .MakeFloat (_fceg .StemH )},_dbfd :_cbacd .Encoder ()};
};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_edee :=NewPdfAnnotation ();_cec :=&PdfAnnotationUnderline {};_cec .PdfAnnotation =_edee ;_cec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edee .SetContext (_cec );return _cec ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bg .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bg .PdfObject ;Contents _bg .PdfObject ;
Rotate *int64 ;Group _bg .PdfObject ;Thumb _bg .PdfObject ;B _bg .PdfObject ;Dur _bg .PdfObject ;Trans _bg .PdfObject ;AA _bg .PdfObject ;Metadata _bg .PdfObject ;PieceInfo _bg .PdfObject ;StructParents _bg .PdfObject ;ID _bg .PdfObject ;PZ _bg .PdfObject ;
SeparationInfo _bg .PdfObject ;Tabs _bg .PdfObject ;TemplateInstantiated _bg .PdfObject ;PresSteps _bg .PdfObject ;UserUnit _bg .PdfObject ;VP _bg .PdfObject ;Annots _bg .PdfObject ;_facgg []*PdfAnnotation ;_fcbg *_bg .PdfObjectDictionary ;_eecd *_bg .PdfIndirectObject ;
_cdbd *PdfReader ;};func (_dagdf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func (_fadec *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bg .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bg .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_efggf ,_eaafb :=encoder .EncodeBytes (img .Data );
if _eaafb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_eaafb );return nil ,_eaafb ;};_addbe :=NewXObjectImage ();_dega :=img .Width ;_deeea :=img .Height ;
_addbe .Width =&_dega ;_addbe .Height =&_deeea ;_bfcg :=img .BitsPerComponent ;_addbe .BitsPerComponent =&_bfcg ;_addbe .Filter =encoder ;_addbe .Stream =_efggf ;if cs ==nil {if img .ColorComponents ==1{_addbe .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_addbe .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_addbe .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_addbe .ColorSpace =cs ;};if len (img ._gcfag )!=0{_cdcbc :=NewXObjectImage ();_cdcbc .Filter =encoder ;_cccea ,_fggf :=encoder .EncodeBytes (img ._gcfag );if _fggf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fggf );
return nil ,_fggf ;};_cdcbc .Stream =_cccea ;_cdcbc .BitsPerComponent =_addbe .BitsPerComponent ;_cdcbc .Width =&img .Width ;_cdcbc .Height =&img .Height ;_cdcbc .ColorSpace =NewPdfColorspaceDeviceGray ();_addbe .SMask =_cdcbc .ToPdfObject ();}else {_addbe .SMask =xobjIn .SMask ;
_addbe .ImageMask =xobjIn .ImageMask ;if _addbe .ColorSpace .GetNumComponents ()==1{_cfgfd (_addbe );};};return _addbe ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_daab :=&PdfColorspaceSpecialSeparation {};return _daab ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bcf :=NewPdfAnnotation ();_abf :=&PdfAnnotationHighlight {};_abf .PdfAnnotation =_bcf ;_abf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcf .SetContext (_abf );return _abf ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_acfe :=&PdfColorspaceCalGray {};_acfe .BlackPoint =[]float64 {0.0,0.0,0.0};_acfe .Gamma =1;return _acfe ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ceggb []byte )(_dbcaf int ,_adbef error );};type modelManager struct{_feaa map[PdfModel ]_bg .PdfObject ;_cgccg map[_bg .PdfObject ]PdfModel ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_fbd :=NewPdfAnnotation ();_gedb :=&PdfAnnotationText {};_gedb .PdfAnnotation =_fbd ;_gedb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbd .SetContext (_gedb );return _gedb ;};func _faafd (_dbga map[_adb .GID ]int ,_gdaf uint16 )*_bg .PdfObjectArray {_ebba :=&_bg .PdfObjectArray {};
_ecfdc :=_adb .GID (_gdaf );for _fbeea :=_adb .GID (0);_fbeea < _ecfdc ;{_geeff ,_aaeaa :=_dbga [_fbeea ];if !_aaeaa {_fbeea ++;continue ;};_gegg :=_fbeea ;for _fcebc :=_gegg +1;_fcebc < _ecfdc ;_fcebc ++{if _gbdb ,_cgebd :=_dbga [_fcebc ];!_cgebd ||_geeff !=_gbdb {break ;
};_gegg =_fcebc ;};_ebba .Append (_bg .MakeInteger (int64 (_fbeea )));_ebba .Append (_bg .MakeInteger (int64 (_gegg )));_ebba .Append (_bg .MakeInteger (int64 (_geeff )));_fbeea =_gegg +1;};return _ebba ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bg .PdfObject ;Flags _bg .PdfObject ;};func (_dfff *PdfReader )newPdfAnnotationCircleFromDict (_cbge *_bg .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_gafg :=PdfAnnotationCircle {};_ecgg ,_ebf :=_dfff .newPdfAnnotationMarkupFromDict (_cbge );
if _ebf !=nil {return nil ,_ebf ;};_gafg .PdfAnnotationMarkup =_ecgg ;_gafg .BS =_cbge .Get ("\u0042\u0053");_gafg .IC =_cbge .Get ("\u0049\u0043");_gafg .BE =_cbge .Get ("\u0042\u0045");_gafg .RD =_cbge .Get ("\u0052\u0044");return &_gafg ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_dfbdba *PdfAcroForm )GetContainingPdfObject ()_bg .PdfObject {return _dfbdba ._ffacc };

// AddFont adds a font dictionary to the Font resources.
func (_gbaff *PdfPage )AddFont (name _bg .PdfObjectName ,font _bg .PdfObject )error {if _gbaff .Resources ==nil {_gbaff .Resources =NewPdfPageResources ();};if _gbaff .Resources .Font ==nil {_gbaff .Resources .Font =_bg .MakeDict ();};_edddb ,_bdag :=_bg .TraceToDirectObject (_gbaff .Resources .Font ).(*_bg .PdfObjectDictionary );
if !_bdag {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bg .TraceToDirectObject (_gbaff .Resources .Font ));
return _fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edddb .Set (name ,font );return nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ecbf :=NewPdfAnnotation ();_bgge :=&PdfAnnotationPolygon {};_bgge .PdfAnnotation =_ecbf ;_bgge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecbf .SetContext (_bgge );return _bgge ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_cfd :=NewPdfAnnotation ();_aeg :=&PdfAnnotationRichMedia {};_aeg .PdfAnnotation =_cfd ;_cfd .SetContext (_aeg );return _aeg ;};

// ToPdfObject implements interface PdfModel.
func (_cfec *PdfAnnotationPolyLine )ToPdfObject ()_bg .PdfObject {_cfec .PdfAnnotation .ToPdfObject ();_dgeb :=_cfec ._cdcf ;_dddd :=_dgeb .PdfObject .(*_bg .PdfObjectDictionary );_cfec .PdfAnnotationMarkup .appendToPdfDictionary (_dddd );_dddd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_dddd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cfec .Vertices );_dddd .SetIfNotNil ("\u004c\u0045",_cfec .LE );_dddd .SetIfNotNil ("\u0042\u0053",_cfec .BS );_dddd .SetIfNotNil ("\u0049\u0043",_cfec .IC );_dddd .SetIfNotNil ("\u0042\u0045",_cfec .BE );
_dddd .SetIfNotNil ("\u0049\u0054",_cfec .IT );_dddd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cfec .Measure );return _dgeb ;};func (_ebfbe *PdfWriter )writeString (_gadcf string ){if _ebfbe ._aafea !=nil {return ;};_gbcde ,_aceba :=_ebfbe ._gbdcg .WriteString (_gadcf );
_ebfbe ._dbfbf +=int64 (_gbcde );_ebfbe ._aafea =_aceba ;};func (_deg *PdfReader )newPdfActionTransFromDict (_dge *_bg .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dge .Get ("\u0054\u0072\u0061n\u0073")},nil ;};func (_fcb *PdfReader )newPdfAnnotationWidgetFromDict (_cbbe *_bg .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_bga :=PdfAnnotationWidget {};
_bga .H =_cbbe .Get ("\u0048");_bga .MK =_cbbe .Get ("\u004d\u004b");_bga .A =_cbbe .Get ("\u0041");_bga .AA =_cbbe .Get ("\u0041\u0041");_bga .BS =_cbbe .Get ("\u0042\u0053");_bga .Parent =_cbbe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_bga ,nil ;
};

// GetCerts returns the signature certificate chain.
func (_egdec *PdfSignature )GetCerts ()([]*_b .Certificate ,error ){var _dgeaa []func ()([]*_b .Certificate ,error );switch _geae ,_ :=_bg .GetNameVal (_egdec .SubFilter );_geae {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_dgeaa =append (_dgeaa ,_egdec .extractChainFromPKCS7 ,_egdec .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_dgeaa =append (_dgeaa ,_egdec .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_dgeaa =append (_dgeaa ,_egdec .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_geae );};for _ ,_egbe :=range _dgeaa {_faccc ,_acgaa :=_egbe ();if _acgaa !=nil {return nil ,_acgaa ;
};if len (_faccc )> 0{return _faccc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gdabg *PdfPage )GetContainingPdfObject ()_bg .PdfObject {return _gdabg ._eecd };

// ToPdfObject implements interface PdfModel.
func (_bcfc *PdfAnnotationText )ToPdfObject ()_bg .PdfObject {_bcfc .PdfAnnotation .ToPdfObject ();_ggdb :=_bcfc ._cdcf ;_bcfe :=_ggdb .PdfObject .(*_bg .PdfObjectDictionary );if _bcfc .PdfAnnotationMarkup !=nil {_bcfc .PdfAnnotationMarkup .appendToPdfDictionary (_bcfe );
};_bcfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0054\u0065\u0078\u0074"));_bcfe .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bcfc .Open );_bcfe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcfc .Name );_bcfe .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bcfc .State );
_bcfe .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_bcfc .StateModel );return _ggdb ;};

// String returns a string representation of what flags are set.
func (_cfdcc FieldFlag )String ()string {_abfc :="";if _cfdcc ==FieldFlagClear {_abfc ="\u0043\u006c\u0065a\u0072";return _abfc ;};if _cfdcc &FieldFlagReadOnly > 0{_abfc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cfdcc &FieldFlagRequired > 0{_abfc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _cfdcc &FieldFlagNoExport > 0{_abfc +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cfdcc &FieldFlagNoToggleToOff > 0{_abfc +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cfdcc &FieldFlagRadio > 0{_abfc +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _cfdcc &FieldFlagPushbutton > 0{_abfc +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cfdcc &FieldFlagRadiosInUnision > 0{_abfc +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cfdcc &FieldFlagMultiline > 0{_abfc +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _cfdcc &FieldFlagPassword > 0{_abfc +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cfdcc &FieldFlagFileSelect > 0{_abfc +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cfdcc &FieldFlagDoNotScroll > 0{_abfc +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _cfdcc &FieldFlagComb > 0{_abfc +="\u007c\u0043\u006fm\u0062";};if _cfdcc &FieldFlagRichText > 0{_abfc +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cfdcc &FieldFlagDoNotSpellCheck > 0{_abfc +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _cfdcc &FieldFlagCombo > 0{_abfc +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cfdcc &FieldFlagEdit > 0{_abfc +="\u007c\u0045\u0064i\u0074";};if _cfdcc &FieldFlagSort > 0{_abfc +="\u007c\u0053\u006fr\u0074";};if _cfdcc &FieldFlagMultiSelect > 0{_abfc +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _cfdcc &FieldFlagCommitOnSelChange > 0{_abfc +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ff .Trim (_abfc ,"\u007c");};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bg .PdfObject ;Sy _bg .PdfObject ;};

// ReplacePage replaces the original page to a new page.
func (_gfba *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_bgf :=pageNum -1;for _gbfg :=range _gfba ._dgec {if _gbfg ==_bgf {_gabfd :=page .Duplicate ();_cgada (_gabfd );_gfba ._dgec [_gbfg ]=_gabfd ;};};};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_aada *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _dadeb (_gdcbg *_bg .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dfbde :=PdfShadingType7 {};_bgbdf :=_gdcbg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bgbdf ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aedb ,_aeddf :=_bgbdf .(*_bg .PdfObjectInteger );if !_aeddf {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgbdf );
return nil ,_bg .ErrTypeError ;};_dfbde .BitsPerCoordinate =_aedb ;_bgbdf =_gdcbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bgbdf ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aedb ,_aeddf =_bgbdf .(*_bg .PdfObjectInteger );if !_aeddf {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bgbdf );
return nil ,_bg .ErrTypeError ;};_dfbde .BitsPerComponent =_aedb ;_bgbdf =_gdcbg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bgbdf ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aedb ,_aeddf =_bgbdf .(*_bg .PdfObjectInteger );if !_aeddf {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bgbdf );
return nil ,_bg .ErrTypeError ;};_dfbde .BitsPerComponent =_aedb ;_bgbdf =_gdcbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bgbdf ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cfggg ,_aeddf :=_bgbdf .(*_bg .PdfObjectArray );if !_aeddf {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgbdf );
return nil ,_bg .ErrTypeError ;};_dfbde .Decode =_cfggg ;if _efdd :=_gdcbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_efdd !=nil {_dfbde .Function =[]PdfFunction {};if _cfac ,_cacga :=_efdd .(*_bg .PdfObjectArray );_cacga {for _ ,_bcbdg :=range _cfac .Elements (){_gcbgb ,_ddcad :=_egfbb (_bcbdg );
if _ddcad !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcad );return nil ,_ddcad ;};_dfbde .Function =append (_dfbde .Function ,_gcbgb );
};}else {_aabfc ,_dbaea :=_egfbb (_efdd );if _dbaea !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbaea );return nil ,_dbaea ;
};_dfbde .Function =append (_dfbde .Function ,_aabfc );};};return &_dfbde ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bg .PdfObject ;PreserveRB _bg .PdfObject ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gfcad *PdfPage )GetPageAsIndirectObject ()*_bg .PdfIndirectObject {return _gfcad ._eecd };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_abc :=&PdfAnnotation {};_abc ._cdcf =_bg .MakeIndirectObject (_bg .MakeDict ());return _abc ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_gdfe *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _gdfe ._facgg ==nil {_gdfe .GetAnnotations ();};_gdfe ._facgg =append (_gdfe ._facgg ,annot );};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_adbcg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_adbcg ._bdaa =colorspace ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dfag *modelManager )GetModelFromPrimitive (primitive _bg .PdfObject )PdfModel {model ,_eedc :=_dfag ._cgccg [primitive ];if !_eedc {return nil ;};return model ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_faa *PdfReader )newPdfActionGotoEFromDict (_ag *_bg .PdfObjectDictionary )(*PdfActionGoToE ,error ){_cdce ,_gdc :=_gdf (_ag .Get ("\u0046"));if _gdc !=nil {return nil ,_gdc ;};return &PdfActionGoToE {D :_ag .Get ("\u0044"),NewWindow :_ag .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ag .Get ("\u0054"),F :_cdce },nil ;
};func (_bfedd *PdfReader )resolveReference (_afaed *_bg .PdfObjectReference )(_bg .PdfObject ,bool ,error ){_dgcg ,_caeaa :=_bfedd ._gbgb .ObjCache [int (_afaed .ObjectNumber )];if !_caeaa {_fa .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_afaed );
_faebe ,_decce :=_bfedd ._gbgb .LookupByReference (*_afaed );if _decce !=nil {return nil ,false ,_decce ;};_bfedd ._gbgb .ObjCache [int (_afaed .ObjectNumber )]=_faebe ;return _faebe ,false ,nil ;};return _dgcg ,true ,nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dgdc *PdfColorLab )GetNumComponents ()int {return 3};func _fcaa (_cacd _bg .PdfObject )(*PdfColorspaceCalRGB ,error ){_ebfc :=NewPdfColorspaceCalRGB ();if _eeea ,_dcae :=_cacd .(*_bg .PdfIndirectObject );_dcae {_ebfc ._bggaf =_eeea ;};_cacd =_bg .TraceToDirectObject (_cacd );
_gbgdd ,_ebbb :=_cacd .(*_bg .PdfObjectArray );if !_ebbb {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbgdd .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cacd =_bg .TraceToDirectObject (_gbgdd .Get (0));_bfgfd ,_ebbb :=_cacd .(*_bg .PdfObjectName );if !_ebbb {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_bfgfd !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cacd =_bg .TraceToDirectObject (_gbgdd .Get (1));
_aecae ,_ebbb :=_cacd .(*_bg .PdfObjectDictionary );if !_ebbb {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_cacd =_aecae .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cacd =_bg .TraceToDirectObject (_cacd );_dgba ,_ebbb :=_cacd .(*_bg .PdfObjectArray );if !_ebbb {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _dgba .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ddac ,_fafb :=_dgba .GetAsFloat64Slice ();
if _fafb !=nil {return nil ,_fafb ;};_ebfc .WhitePoint =_ddac ;_cacd =_aecae .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cacd !=nil {_cacd =_bg .TraceToDirectObject (_cacd );_gcbd ,_baab :=_cacd .(*_bg .PdfObjectArray );if !_baab {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _gcbd .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gadf ,_edeg :=_gcbd .GetAsFloat64Slice ();
if _edeg !=nil {return nil ,_edeg ;};_ebfc .BlackPoint =_gadf ;};_cacd =_aecae .Get ("\u0047\u0061\u006dm\u0061");if _cacd !=nil {_cacd =_bg .TraceToDirectObject (_cacd );_gadb ,_bgdd :=_cacd .(*_bg .PdfObjectArray );if !_bgdd {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _gadb .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_bcba ,_dgbec :=_gadb .GetAsFloat64Slice ();if _dgbec !=nil {return nil ,_dgbec ;
};_ebfc .Gamma =_bcba ;};_cacd =_aecae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cacd !=nil {_cacd =_bg .TraceToDirectObject (_cacd );_cffc ,_dege :=_cacd .(*_bg .PdfObjectArray );if !_dege {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _cffc .Len ()!=9{_fa .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cffc .String ());return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_dfab ,_dae :=_cffc .GetAsFloat64Slice ();if _dae !=nil {return nil ,_dae ;};_ebfc .Matrix =_dfab ;};return _ebfc ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dded *PdfShadingType5 )ToPdfObject ()_bg .PdfObject {_dded .PdfShading .ToPdfObject ();_fdgeb ,_dgefb :=_dded .getShadingDict ();if _dgefb !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dded .BitsPerCoordinate !=nil {_fdgeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dded .BitsPerCoordinate );};if _dded .BitsPerComponent !=nil {_fdgeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dded .BitsPerComponent );
};if _dded .VerticesPerRow !=nil {_fdgeb .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_dded .VerticesPerRow );};if _dded .Decode !=nil {_fdgeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dded .Decode );};if _dded .Function !=nil {if len (_dded .Function )==1{_fdgeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dded .Function [0].ToPdfObject ());
}else {_fdcdcc :=_bg .MakeArray ();for _ ,_gebfb :=range _dded .Function {_fdcdcc .Append (_gebfb .ToPdfObject ());};_fdgeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdcdcc );};};return _dded ._cabb ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bg .PdfObject ;RichMediaContent _bg .PdfObject ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_dcfgc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_gacbcg :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_bgbaf ,_deef :=_dcfgc .GetNumPages ();if _deef !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deef );
return nil ,_deef ;};for _gbce :=1;_gbce <=_bgbaf ;_gbce ++{_ebca ,_degg :=_dcfgc .GetPage (_gbce );if _degg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_degg );return nil ,_degg ;};if opts .PageProcessCallback !=nil {_degg =opts .PageProcessCallback (_gbce ,_ebca );
if _degg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_degg );return nil ,_degg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_gbce ,_ebca );};_degg =_gacbcg .AddPage (_ebca );if _degg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_degg );
return nil ,_degg ;};};_gacbcg ._afee =_dcfgc .PdfVersion ().Major ;_gacbcg ._ceced =_dcfgc .PdfVersion ().Minor ;if !opts .SkipInfo {_fdgfb ,_fdbe :=_dcfgc .GetPdfInfo ();if _fdbe !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fdbe );
}else {_gacbcg ._cedg .PdfObject =_fdgfb .ToPdfObject ();};};if !opts .SkipAcroForm {_gaaag :=_gacbcg .SetForms (_dcfgc .AcroForm );if _gaaag !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaaag );return nil ,_gaaag ;};};if !opts .SkipOutlines {_gacbcg .AddOutlineTree (_dcfgc .GetOutlineTree ());
};if !opts .SkipOCProperties {_bgfag ,_bccdd :=_dcfgc .GetOCProperties ();if _bccdd !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bccdd );}else {_bccdd =_gacbcg .SetOCProperties (_bgfag );if _bccdd !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bccdd );
};};};if !opts .SkipPageLabels {_abde ,_ccdeg :=_dcfgc .GetPageLabels ();if _ccdeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccdeg );}else {_ccdeg =_gacbcg .SetPageLabels (_abde );if _ccdeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccdeg );
};};};if !opts .SkipNamedDests {_bgbfa ,_dbabe :=_dcfgc .GetNamedDestinations ();if _dbabe !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbabe );}else {_dbabe =_gacbcg .SetNamedDestinations (_bgbfa );if _dbabe !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbabe );
};};};if !opts .SkipNameDictionary {_dcded ,_fegddc :=_dcfgc .GetNameDictionary ();if _fegddc !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fegddc );}else {_fegddc =_gacbcg .SetNameDictionary (_dcded );if _fegddc !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fegddc );
};};};if !opts .SkipRotation &&_dcfgc .Rotate !=nil {if _aface :=_gacbcg .SetRotation (*_dcfgc .Rotate );_aface !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aface );};};return &_gacbcg ,nil ;};func (_egdc *PdfSignature )extractChainFromCert ()([]*_b .Certificate ,error ){var _deeec *_bg .PdfObjectArray ;
switch _gadg :=_egdc .Cert .(type ){case *_bg .PdfObjectString :_deeec =_bg .MakeArray (_gadg );case *_bg .PdfObjectArray :_deeec =_gadg ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gadg );
};var _afbb _bb .Buffer ;for _ ,_beda :=range _deeec .Elements (){_dabff ,_defdd :=_bg .GetString (_beda );if !_defdd {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_beda );
};if _ ,_deeg :=_afbb .Write (_dabff .Bytes ());_deeg !=nil {return nil ,_deeg ;};};return _b .ParseCertificates (_afbb .Bytes ());};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_geeeg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _geeeg .Alternate ==nil {_fa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _geeeg .N ==1{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_afgb :=NewPdfColorspaceDeviceGray ();return _afgb .ColorToRGB (color );}else if _geeeg .N ==3{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _geeeg .N ==4{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_abbf :=NewPdfColorspaceDeviceCMYK ();return _abbf .ColorToRGB (color );}else {return nil ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_geeeg );
return _geeeg .Alternate .ColorToRGB (color );};

// GetOutlineTree returns the outline tree.
func (_beabcg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _beabcg ._bggdde };

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_geaad *XObjectImage )GetContainingPdfObject ()_bg .PdfObject {return _geaad ._dbged };

// Encrypt encrypts the output file with a specified user/owner password.
func (_cbbbdc *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_beacd :=RC4_128bit ;if options !=nil {_beacd =options .Algorithm ;};_dbbbc :=_ffb .PermOwner ;if options !=nil {_dbbbc =options .Permissions ;};var _ggbdd _fb .Filter ;
switch _beacd {case RC4_128bit :_ggbdd =_fb .NewFilterV2 (16);case AES_128bit :_ggbdd =_fb .NewFilterAESV2 ();case AES_256bit :_ggbdd =_fb .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_dfeg ,_bcdag ,_bffed :=_bg .PdfCryptNewEncrypt (_ggbdd ,userPass ,ownerPass ,_dbbbc );if _bffed !=nil {return _bffed ;};_cbbbdc ._accb =_dfeg ;if _bcdag .Major !=0{_cbbbdc .SetVersion (_bcdag .Major ,_bcdag .Minor );};_cbbbdc ._cedd =_bcdag .Encrypt ;
_cbbbdc ._bfffac =_bg .MakeArray (_bg .MakeHexString (_bcdag .ID0 ),_bg .MakeHexString (_bcdag .ID1 ));_dgcdg :=_bg .MakeIndirectObject (_bcdag .Encrypt );_cbbbdc ._bbfcc =_dgcdg ;_cbbbdc .addObject (_dgcdg );return nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func (_fdgg *PdfReader )newPdfAnnotationSquigglyFromDict (_gbgf *_bg .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bbdb :=PdfAnnotationSquiggly {};_age ,_gedbg :=_fdgg .newPdfAnnotationMarkupFromDict (_gbgf );if _gedbg !=nil {return nil ,_gedbg ;
};_bbdb .PdfAnnotationMarkup =_age ;_bbdb .QuadPoints =_gbgf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbdb ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bg .PdfObject ;H _bg .PdfObject ;};

// GetXObjectByName gets XObject by name.
func (_bgggc *PdfPage )GetXObjectByName (name _bg .PdfObjectName )(_bg .PdfObject ,bool ){_ddaca ,_gdbc :=_bgggc .Resources .XObject .(*_bg .PdfObjectDictionary );if !_gdbc {return nil ,false ;};if _agdc :=_ddaca .Get (name );_agdc !=nil {return _agdc ,true ;
};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_defd *PdfAnnotationSound )ToPdfObject ()_bg .PdfObject {_defd .PdfAnnotation .ToPdfObject ();_adgc :=_defd ._cdcf ;_gaeb :=_adgc .PdfObject .(*_bg .PdfObjectDictionary );_defd .PdfAnnotationMarkup .appendToPdfDictionary (_gaeb );_gaeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0053\u006f\u0075n\u0064"));
_gaeb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_defd .Sound );_gaeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_defd .Name );return _adgc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gefa *PdfPageResourcesColorspaces )ToPdfObject ()_bg .PdfObject {_afcdd :=_bg .MakeDict ();for _ ,_ffgd :=range _gefa .Names {_afcdd .Set (_bg .PdfObjectName (_ffgd ),_gefa .Colorspaces [_ffgd ].ToPdfObject ());};if _gefa ._bccgd !=nil {_gefa ._bccgd .PdfObject =_afcdd ;
return _gefa ._bccgd ;};return _afcdd ;};func (_agggb *PdfWriter )updateObjectNumbers (){_bdcag :=_agggb .ObjNumOffset ;_eabgb :=0;for _ ,_gfbfb :=range _agggb ._fdeeb {_afdd :=int64 (_eabgb +1+_bdcag );_baecb :=true ;if _agggb ._efbcc {if _gcecd ,_caeee :=_agggb ._fgefc [_gfbfb ];
_caeee {_afdd =_gcecd ;_baecb =false ;};};switch _deeaa :=_gfbfb .(type ){case *_bg .PdfIndirectObject :_deeaa .ObjectNumber =_afdd ;_deeaa .GenerationNumber =0;case *_bg .PdfObjectStream :_deeaa .ObjectNumber =_afdd ;_deeaa .GenerationNumber =0;case *_bg .PdfObjectStreams :_deeaa .ObjectNumber =_afdd ;
_deeaa .GenerationNumber =0;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_deeaa );continue ;
};if _baecb {_eabgb ++;};};_dacfb :=func (_cfgbb _bg .PdfObject )int64 {switch _abacb :=_cfgbb .(type ){case *_bg .PdfIndirectObject :return _abacb .ObjectNumber ;case *_bg .PdfObjectStream :return _abacb .ObjectNumber ;case *_bg .PdfObjectStreams :return _abacb .ObjectNumber ;
};return 0;};_ad .SliceStable (_agggb ._fdeeb ,func (_ebeee ,_gbbef int )bool {return _dacfb (_agggb ._fdeeb [_ebeee ])< _dacfb (_agggb ._fdeeb [_gbbef ])});};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cffa *PdfReader )GetEncryptionMethod ()string {_gddc :=_cffa ._gbgb .GetCrypter ();return _gddc .String ();};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_aac :=NewPdfAnnotation ();_dcgg :=&PdfAnnotationFreeText {};_dcgg .PdfAnnotation =_aac ;_dcgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aac .SetContext (_dcgg );return _dcgg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_egbcc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afbe :=vals [0];if _afbe < 0.0||_afbe > 1.0{_fa .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _afbe < 0.0{_afbe =0.0;}else if _afbe > 1.0{_afbe =1.0;};return NewPdfColorDeviceGray (_afbe ),nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bg .PdfObject ;Dest _bg .PdfObject ;H _bg .PdfObject ;PA _bg .PdfObject ;QuadPoints _bg .PdfObject ;BS _bg .PdfObject ;_dbd *PdfAction ;_ffad *PdfReader ;};func (_ecfg *PdfReader )newPdfAnnotationStampFromDict (_gbcf *_bg .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ege :=PdfAnnotationStamp {};
_cce ,_abca :=_ecfg .newPdfAnnotationMarkupFromDict (_gbcf );if _abca !=nil {return nil ,_abca ;};_ege .PdfAnnotationMarkup =_cce ;_ege .Name =_gbcf .Get ("\u004e\u0061\u006d\u0065");return &_ege ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eeec *PdfAnnotationPopup )ToPdfObject ()_bg .PdfObject {_eeec .PdfAnnotation .ToPdfObject ();_cbbb :=_eeec ._cdcf ;_abcc :=_cbbb .PdfObject .(*_bg .PdfObjectDictionary );_abcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0050\u006f\u0070u\u0070"));
_abcc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eeec .Parent );_abcc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eeec .Open );return _cbbb ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cegacb *XObjectForm )SetContentStream (content []byte ,encoder _bg .StreamEncoder )error {_gbbab :=content ;if encoder ==nil {if _cegacb .Filter !=nil {encoder =_cegacb .Filter ;}else {encoder =_bg .NewRawEncoder ();};};_efdfa ,_bcabb :=encoder .EncodeBytes (_gbbab );
if _bcabb !=nil {return _bcabb ;};_gbbab =_efdfa ;_cegacb .Stream =_gbbab ;_cegacb .Filter =encoder ;return nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bg .PdfObject ;V _bg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aff *PdfActionThread )ToPdfObject ()_bg .PdfObject {_aff .PdfAction .ToPdfObject ();_gfb :=_aff ._gfd ;_ace :=_gfb .PdfObject .(*_bg .PdfObjectDictionary );_ace .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeThread )));if _aff .F !=nil {_ace .Set ("\u0046",_aff .F .ToPdfObject ());
};_ace .SetIfNotNil ("\u0044",_aff .D );_ace .SetIfNotNil ("\u0042",_aff .B );return _gfb ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bg .PdfObject ;NewWindow _bg .PdfObject ;T _bg .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fccge pdfCIDFontType2 )GetRuneMetrics (r rune )(_adb .CharMetrics ,bool ){_fbae ,_ebgg :=_fccge ._efag [r ];if !_ebgg {_dbbb ,_cfbge :=_bg .GetInt (_fccge .DW );if !_cfbge {return _adb .CharMetrics {},false ;};_fbae =int (*_dbbb );};return _adb .CharMetrics {Wx :float64 (_fbae )},true ;
};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bg .PdfObject ;MK _bg .PdfObject ;A _bg .PdfObject ;AA _bg .PdfObject ;BS _bg .PdfObject ;Parent _bg .PdfObject ;_ddgba *PdfField ;_cgb bool ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_agefg *PdfColorspaceLab )GetNumComponents ()int {return 3};func _bcfgg (_bfeg _bg .PdfObject ,_fffa bool )(*PdfFont ,error ){_dafda ,_ddea ,_cafdg :=_baac (_bfeg );if _cafdg !=nil {if _cafdg ==ErrType1CFontNotSupported {_bdec ,_fegd :=_cebbe (_dafda ,_ddea ,nil );
if _fegd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ddea ,_fegd );
return nil ,_cafdg ;};return &PdfFont {_fcafc :_bdec },_cafdg ;};return nil ,_cafdg ;};_bbbfd :=&PdfFont {};switch _ddea ._ccbf {case "\u0054\u0079\u0070e\u0030":if !_fffa {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ddea );
return nil ,_fff .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dfgge ,_gadfd :=_afdc (_dafda ,_ddea );if _gadfd !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ddea ,_gadfd );
return nil ,_gadfd ;};_bbbfd ._fcafc =_dfgge ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _aagef *pdfFontSimple ;_abgd ,_gaaa :=_adb .NewStdFontByName (_adb .StdFontName (_ddea ._ffgfd ));
if _gaaa {_aacd :=_cgafc (_abgd );_bbbfd ._fcafc =&_aacd ;_cabfg :=_bg .TraceToDirectObject (_aacd .ToPdfObject ());_gagb ,_fbddd ,_dcaeb :=_baac (_cabfg );if _dcaeb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ddea ,_aacd );
return nil ,_dcaeb ;};for _ ,_cefg :=range _dafda .Keys (){_gagb .Set (_cefg ,_dafda .Get (_cefg ));};_aagef ,_dcaeb =_cebbe (_gagb ,_fbddd ,_aacd ._dbfd );if _dcaeb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_ddea ,_aacd );
return nil ,_dcaeb ;};_aagef ._cccaa =_aacd ._cccaa ;_aagef ._eggd =_aacd ._eggd ;}else {_aagef ,_cafdg =_cebbe (_dafda ,_ddea ,nil );if _cafdg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_ddea ,_cafdg );
return nil ,_cafdg ;};};_cafdg =_aagef .addEncoding ();if _cafdg !=nil {return nil ,_cafdg ;};if _gaaa {_aagef .updateStandard14Font ();};if _gaaa &&_aagef ._cbdd ==nil &&_aagef ._dbfd ==nil {_fa .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aagef );
_fa .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_abgd );};if len (_aagef ._cccaa )==0{_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_aagef );};_bbbfd ._fcafc =_aagef ;
case "\u0054\u0079\u0070e\u0033":_eegg ,_bbbff :=_begd (_dafda ,_ddea );if _bbbff !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bbbff );
return nil ,_bbbff ;};_bbbfd ._fcafc =_eegg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_dgdg ,_baeg :=_cdbfe (_dafda ,_ddea );if _baeg !=nil {_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_baeg );
return nil ,_baeg ;};_bbbfd ._fcafc =_dgdg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bbca ,_baba :=_fadg (_dafda ,_ddea );if _baba !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ddea ,_baba );
return nil ,_baba ;};_bbbfd ._fcafc =_bbca ;default:_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_ddea );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ddea );};return _bbbfd ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bg .PdfObjectArray ;Domain *_bg .PdfObjectArray ;Function []PdfFunction ;Extend *_bg .PdfObjectArray ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_begae *PdfPageResources )GetPatternByName (keyName _bg .PdfObjectName )(*PdfPattern ,bool ){if _begae .Pattern ==nil {return nil ,false ;};_ecgb ,_cagbe :=_bg .TraceToDirectObject (_begae .Pattern ).(*_bg .PdfObjectDictionary );if !_cagbe {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_begae .Pattern );
return nil ,false ;};if _bccec :=_ecgb .Get (keyName );_bccec !=nil {_dbaa ,_dcdfc :=_abebb (_bccec );if _dcdfc !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dcdfc );
return nil ,false ;};return _dbaa ,true ;};return nil ,false ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_bbeae *PdfColorspaceDeviceN )GetNumComponents ()int {return _bbeae .ColorantNames .Len ()};type pdfCIDFontType2 struct{fontCommon ;_decd *_bg .PdfIndirectObject ;_cbgc _be .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bg .PdfObject ;W _bg .PdfObject ;DW2 _bg .PdfObject ;W2 _bg .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bg .PdfObject ;_cfeab map[_be .CharCode ]float64 ;_dfge float64 ;_efag map[rune ]int ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bg .PdfObject ;ColorSpace _bg .PdfObject ;Pattern _bg .PdfObject ;Shading _bg .PdfObject ;XObject _bg .PdfObject ;Font _bg .PdfObject ;ProcSet _bg .PdfObject ;Properties _bg .PdfObject ;_dcedc *_bg .PdfObjectDictionary ;
_bdaa *PdfPageResourcesColorspaces ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gdbdf *PdfPageResources )GetFontByName (keyName _bg .PdfObjectName )(_bg .PdfObject ,bool ){if _gdbdf .Font ==nil {return nil ,false ;};_afaf ,_cccde :=_bg .TraceToDirectObject (_gdbdf .Font ).(*_bg .PdfObjectDictionary );if !_cccde {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bg .TraceToDirectObject (_gdbdf .Font ));
return nil ,false ;};if _dcdbd :=_afaf .Get (keyName );_dcdbd !=nil {return _dcdbd ,true ;};return nil ,false ;};func (_bcccd *PdfReader )newPdfFieldSignatureFromDict (_ffcc *_bg .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gdgca :=&PdfFieldSignature {};
_ecfef ,_gdgg :=_bg .GetIndirect (_ffcc .Get ("\u0056"));if _gdgg {var _bgaac error ;_gdgca .V ,_bgaac =_bcccd .newPdfSignatureFromIndirect (_ecfef );if _bgaac !=nil {return nil ,_bgaac ;};};_gdgca .Lock ,_ =_bg .GetIndirect (_ffcc .Get ("\u004c\u006f\u0063\u006b"));
_gdgca .SV ,_ =_bg .GetIndirect (_ffcc .Get ("\u0053\u0056"));return _gdgca ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_baegd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_ecbfb :=PdfInfo {};_dbfg ,_bcbeb :=_baegd .GetTrailer ();if _bcbeb !=nil {return nil ,_bcbeb ;};var _efcdb *_bg .PdfObjectDictionary ;_ceag :=_dbfg .Get ("\u0049\u006e\u0066\u006f");switch _acca :=_ceag .(type ){case *_bg .PdfObjectReference :_aeebf :=_acca ;
_ceag ,_bcbeb =_baegd .GetIndirectObjectByNumber (int (_aeebf .ObjectNumber ));_ceag =_bg .TraceToDirectObject (_ceag );if _bcbeb !=nil {return nil ,_bcbeb ;};_efcdb ,_ =_ceag .(*_bg .PdfObjectDictionary );case *_bg .PdfObjectDictionary :_efcdb =_acca ;
};if _efcdb ==nil {return nil ,_fff .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_ggffa :=range _efcdb .Keys (){switch _ggffa {case "\u0054\u0069\u0074l\u0065":_ecbfb .Title ,_ =_bg .GetString (_efcdb .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_ecbfb .Author ,_ =_bg .GetString (_efcdb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_ecbfb .Subject ,_ =_bg .GetString (_efcdb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_ecbfb .Keywords ,_ =_bg .GetString (_efcdb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_ecbfb .Creator ,_ =_bg .GetString (_efcdb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_ecbfb .Producer ,_ =_bg .GetString (_efcdb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_ecbfb .Trapped ,_ =_bg .GetName (_efcdb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _ageec ,_caec :=_bg .GetString (_efcdb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_caec &&_ageec .String ()!=""{_aedga ,_ggdbg :=NewPdfDate (_ageec .String ());
if _ggdbg !=nil {return nil ,_ggdbg ;};_ecbfb .CreationDate =&_aedga ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _eefe ,_egbfbd :=_bg .GetString (_efcdb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_egbfbd &&_eefe .String ()!=""{_gaad ,_cddce :=NewPdfDate (_eefe .String ());
if _cddce !=nil {return nil ,_cddce ;};_ecbfb .ModifiedDate =&_gaad ;};default:_bfead ,_ :=_bg .GetString (_efcdb .Get (_ggffa ));if _ecbfb ._eeac ==nil {_ecbfb ._eeac =_bg .MakeDict ();};_ecbfb ._eeac .Set (_ggffa ,_bfead );};};return &_ecbfb ,nil ;};
func _bfaea ()string {_cedaec .Lock ();defer _cedaec .Unlock ();return _ccgga };

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_afdb :=NewPdfAnnotation ();_cbc :=&PdfAnnotationScreen {};_cbc .PdfAnnotation =_afdb ;_afdb .SetContext (_cbc );return _cbc ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_bbede *PdfReader )loadStructure ()error {if _bbede ._gbgb .GetCrypter ()!=nil &&!_bbede ._gbgb .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ffacca :=_bbede ._gbgb .GetTrailer ();if _ffacca ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eaaa ,_fgcdc :=_ffacca .Get ("\u0052\u006f\u006f\u0074").(*_bg .PdfObjectReference );if !_fgcdc {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ffacca );
};_ccee ,_ecdba :=_bbede ._gbgb .LookupByReference (*_eaaa );if _ecdba !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ecdba );
return _ecdba ;};_adbfa ,_fgcdc :=_ccee .(*_bg .PdfIndirectObject );if !_fgcdc {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ccee ,*_ffacca );
return _fff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bedece ,_fgcdc :=(*_adbfa ).PdfObject .(*_bg .PdfObjectDictionary );if !_fgcdc {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_adbfa .PdfObject );
return _fff .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fa .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bedece );_ddeedg ,_fgcdc :=_bedece .Get ("\u0050\u0061\u0067e\u0073").(*_bg .PdfObjectReference );
if !_fgcdc {return _fff .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_dedfcd ,_ecdba :=_bbede ._gbgb .LookupByReference (*_ddeedg );
if _ecdba !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _ecdba ;};_gbcc ,_fgcdc :=_dedfcd .(*_bg .PdfIndirectObject );if !_fgcdc {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_fa .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_gbcc );return _fff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ceegb ,_fgcdc :=_gbcc .PdfObject .(*_bg .PdfObjectDictionary );if !_fgcdc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_gbcc );
return _fff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cfgcg ,_fgcdc :=_bg .GetInt (_ceegb .Get ("\u0043\u006f\u0075n\u0074"));if !_fgcdc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fff .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_fgcdc =_bg .GetName (_ceegb .Get ("\u0054\u0079\u0070\u0065"));!_fgcdc {_fa .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_ceegb .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0050\u0061\u0067e\u0073"));};if _efae ,_addc :=_bg .GetInt (_ceegb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_addc {_cacfb :=int64 (*_efae );_bbede .Rotate =&_cacfb ;};_bbede ._cgcce =_eaaa ;
_bbede ._daagd =_bedece ;_bbede ._ccaf =_ceegb ;_bbede ._aefa =_gbcc ;_bbede ._afcg =int (*_cfgcg );_bbede ._abcee =[]*_bg .PdfIndirectObject {};_edeb :=map[_bg .PdfObject ]struct{}{};_ecdba =_bbede .buildPageList (_gbcc ,nil ,_edeb );if _ecdba !=nil {return _ecdba ;
};_fa .Log .Trace ("\u002d\u002d\u002d");_fa .Log .Trace ("\u0054\u004f\u0043");_fa .Log .Trace ("\u0050\u0061\u0067e\u0073");_fa .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bbede ._abcee ),_bbede ._abcee );_bbede ._bggdde ,_ecdba =_bbede .loadOutlines ();
if _ecdba !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_ecdba );
return _ecdba ;};_bbede .AcroForm ,_ecdba =_bbede .loadForms ();if _ecdba !=nil {return _ecdba ;};_bbede .DSS ,_ecdba =_bbede .loadDSS ();if _ecdba !=nil {return _ecdba ;};return nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_ebag *PdfFont )SubsetRegistered ()error {switch _gefc :=_ebag ._fcafc .(type ){case *pdfFontType0 :_eaeg :=_gefc .subsetRegistered ();if _eaeg !=nil {_fa .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eaeg );
return _eaeg ;};if _gefc ._fgeeb !=nil {if _gefc ._bgcf !=nil {_gefc ._bgcf .ToPdfObject ();};_gefc .ToPdfObject ();};default:_fa .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gefc );
};return nil ;};const (_egffef =0x00001;_cgccb =0x00002;_gabfg =0x00004;_gabb =0x00008;_cfddg =0x00020;_faac =0x00040;_cbbce =0x10000;_gdaba =0x20000;_cacef =0x40000;);func (_ageda *PdfReader )newPdfSignatureFromIndirect (_bebca *_bg .PdfIndirectObject )(*PdfSignature ,error ){_fcdgb ,_fdebb :=_bebca .PdfObject .(*_bg .PdfObjectDictionary );
if !_fdebb {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _gagac ,_eaac :=_ageda ._dgaed .GetModelFromPrimitive (_bebca ).(*PdfSignature );_eaac {return _gagac ,nil ;};_dacfc :=&PdfSignature {};_dacfc ._gbaa =_bebca ;_dacfc .Type ,_ =_bg .GetName (_fcdgb .Get ("\u0054\u0079\u0070\u0065"));
_dacfc .Filter ,_fdebb =_bg .GetName (_fcdgb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_fdebb {_fa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dacfc .SubFilter ,_ =_bg .GetName (_fcdgb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_dacfc .Contents ,_fdebb =_bg .GetString (_fcdgb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_fdebb {_fa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_dacfc .Cert =_fcdgb .Get ("\u0043\u0065\u0072\u0074");_dacfc .ByteRange ,_ =_bg .GetArray (_fcdgb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_dacfc .Reference ,_ =_bg .GetArray (_fcdgb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_dacfc .Changes ,_ =_bg .GetArray (_fcdgb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_dacfc .Name ,_ =_bg .GetString (_fcdgb .Get ("\u004e\u0061\u006d\u0065"));_dacfc .M ,_ =_bg .GetString (_fcdgb .Get ("\u004d"));_dacfc .Location ,_ =_bg .GetString (_fcdgb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_dacfc .Reason ,_ =_bg .GetString (_fcdgb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_dacfc .ContactInfo ,_ =_bg .GetString (_fcdgb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_dacfc .R ,_ =_bg .GetInt (_fcdgb .Get ("\u0052"));
_dacfc .V ,_ =_bg .GetInt (_fcdgb .Get ("\u0056"));_dacfc .PropBuild ,_ =_bg .GetDict (_fcdgb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_dacfc .PropAuthTime ,_ =_bg .GetInt (_fcdgb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_dacfc .PropAuthType ,_ =_bg .GetName (_fcdgb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _dacfc ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fgge *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egdg :=vals [0];_becg :=[]float64 {_egdg };_eaafc ,_ceeg :=_fgge .TintTransform .Evaluate (_becg );
if _ceeg !=nil {_fa .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ceeg );_fa .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fgge .TintTransform );
return nil ,_ceeg ;};_fa .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_eaafc ,_fgge .AlternateSpace );
_bfac ,_ceeg :=_fgge .AlternateSpace .ColorFromFloats (_eaafc );if _ceeg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ceeg );
return nil ,_ceeg ;};return _bfac ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bg .PdfObject ;_fdbbf []byte ;_cgefa *_bg .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_gfa *PdfColorCalGray )ToInteger (bits int )uint32 {_cgddf :=_dc .Pow (2,float64 (bits ))-1;return uint32 (_cgddf *_gfa .Val ());};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_abgfb *Image )SetSamples (samples []uint32 ){if _abgfb .BitsPerComponent < 8{samples =_abgfb .samplesAddPadding (samples );};_bbdce :=_dd .ResampleUint32 (samples ,int (_abgfb .BitsPerComponent ),8);_dced :=make ([]byte ,len (_bbdce ));for _bbcd ,_cdgfe :=range _bbdce {_dced [_bbcd ]=byte (_cdgfe );
};_abgfb .Data =_dced ;};var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bg .PdfObjectDictionary )(*PdfPageResources ,error ){_dcbfa :=NewPdfPageResources ();if _afacc :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_afacc !=nil {_dcbfa .ExtGState =_afacc ;};if _fcgae :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fcgae !=nil &&!_bg .IsNullObject (_fcgae ){_dcbfa .ColorSpace =_fcgae ;};if _becaf :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_becaf !=nil {_dcbfa .Pattern =_becaf ;};if _edecb :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_edecb !=nil {_dcbfa .Shading =_edecb ;
};if _fadf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fadf !=nil {_dcbfa .XObject =_fadf ;};if _fcbdc :=_bg .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fcbdc !=nil {_dcbfa .Font =_fcbdc ;};if _caddc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_caddc !=nil {_dcbfa .ProcSet =_caddc ;};if _fabf :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fabf !=nil {_dcbfa .Properties =_fabf ;};return _dcbfa ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bccb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffbb ,_acgc :=_bg .GetNumbersAsFloat (objects );
if _acgc !=nil {return nil ,_acgc ;};return _bccb .ColorFromFloats (_ffbb );};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_acbd *PdfPattern )GetContext ()PdfModel {return _acbd ._eddc };

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fedaa *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dbffe *PdfOutlineTreeNode )ToPdfObject ()_bg .PdfObject {return _dbffe .GetContext ().ToPdfObject ();};func _gccef (_afbcb _bg .PdfObject )(*PdfShading ,error ){_dddgg :=&PdfShading {};var _cafbb *_bg .PdfObjectDictionary ;if _bebcde ,_dcee :=_bg .GetIndirect (_afbcb );
_dcee {_dddgg ._cabb =_bebcde ;_dadbd ,_fdbed :=_bebcde .PdfObject .(*_bg .PdfObjectDictionary );if !_fdbed {_fa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_bg .ErrTypeError ;};_cafbb =_dadbd ;}else if _dgge ,_adbae :=_bg .GetStream (_afbcb );_adbae {_dddgg ._cabb =_dgge ;_cafbb =_dgge .PdfObjectDictionary ;}else if _eage ,_cagea :=_bg .GetDict (_afbcb );_cagea {_dddgg ._cabb =_eage ;_cafbb =_eage ;
}else {_fa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_afbcb );return nil ,_bg .ErrTypeError ;};if _cafbb ==nil {_fa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_fff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_afbcb =_cafbb .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _afbcb ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_afbcb =_bg .TraceToDirectObject (_afbcb );_fabaf ,_caedb :=_afbcb .(*_bg .PdfObjectInteger );if !_caedb {_fa .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_afbcb );
return nil ,_bg .ErrTypeError ;};if *_fabaf < 1||*_fabaf > 7{_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fabaf );
return nil ,_bg .ErrTypeError ;};_dddgg .ShadingType =_fabaf ;_afbcb =_cafbb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _afbcb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbedc ,_bade :=NewPdfColorspaceFromPdfObject (_afbcb );if _bade !=nil {_fa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bade );
return nil ,_bade ;};_dddgg .ColorSpace =_dbedc ;_afbcb =_cafbb .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _afbcb !=nil {_afbcb =_bg .TraceToDirectObject (_afbcb );_efeac ,_bgfg :=_afbcb .(*_bg .PdfObjectArray );if !_bgfg {_fa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_afbcb );
return nil ,_bg .ErrTypeError ;};_dddgg .Background =_efeac ;};_afbcb =_cafbb .Get ("\u0042\u0042\u006f\u0078");if _afbcb !=nil {_afbcb =_bg .TraceToDirectObject (_afbcb );_deebd ,_cadegf :=_afbcb .(*_bg .PdfObjectArray );if !_cadegf {_fa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_afbcb );
return nil ,_bg .ErrTypeError ;};_fffdd ,_bgfce :=NewPdfRectangle (*_deebd );if _bgfce !=nil {_fa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bgfce );return nil ,_bgfce ;};_dddgg .BBox =_fffdd ;};_afbcb =_cafbb .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _afbcb !=nil {_afbcb =_bg .TraceToDirectObject (_afbcb );_cdabg ,_faca :=_afbcb .(*_bg .PdfObjectBool );if !_faca {_fa .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afbcb );
return nil ,_bg .ErrTypeError ;};_dddgg .AntiAlias =_cdabg ;};switch *_fabaf {case 1:_fdgec ,_baed :=_bgffe (_cafbb );if _baed !=nil {return nil ,_baed ;};_fdgec .PdfShading =_dddgg ;_dddgg ._baffd =_fdgec ;return _dddgg ,nil ;case 2:_ebagb ,_fgfgd :=_abacad (_cafbb );
if _fgfgd !=nil {return nil ,_fgfgd ;};_ebagb .PdfShading =_dddgg ;_dddgg ._baffd =_ebagb ;return _dddgg ,nil ;case 3:_ddecd ,_ggcge :=_debge (_cafbb );if _ggcge !=nil {return nil ,_ggcge ;};_ddecd .PdfShading =_dddgg ;_dddgg ._baffd =_ddecd ;return _dddgg ,nil ;
case 4:_gcgcde ,_bdgdf :=_aaceg (_cafbb );if _bdgdf !=nil {return nil ,_bdgdf ;};_gcgcde .PdfShading =_dddgg ;_dddgg ._baffd =_gcgcde ;return _dddgg ,nil ;case 5:_aefce ,_deged :=_bbgbae (_cafbb );if _deged !=nil {return nil ,_deged ;};_aefce .PdfShading =_dddgg ;
_dddgg ._baffd =_aefce ;return _dddgg ,nil ;case 6:_fdbce ,_adcea :=_edegc (_cafbb );if _adcea !=nil {return nil ,_adcea ;};_fdbce .PdfShading =_dddgg ;_dddgg ._baffd =_fdbce ;return _dddgg ,nil ;case 7:_ccadfc ,_gcdff :=_dadeb (_cafbb );if _gcdff !=nil {return nil ,_gcdff ;
};_ccadfc .PdfShading =_dddgg ;_dddgg ._baffd =_ccadfc ;return _dddgg ,nil ;};return nil ,_fff .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_feaf *PdfFieldButton )IsRadio ()bool {return _feaf .GetType ()==ButtonTypeRadio };

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_edfad *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _decef []*PdfOutlineTreeNode ;var _dbba []string ;var _cfdgc func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_cfdgc =func (_gcab *PdfOutlineTreeNode ,_bcagab *[]*PdfOutlineTreeNode ,_befeg *[]string ,_gcbde int ){if _gcab ==nil {return ;
};if _gcab ._baag ==nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_egbcf ,_dagdbc :=_gcab ._baag .(*PdfOutlineItem );if _dagdbc {*_bcagab =append (*_bcagab ,&_egbcf .PdfOutlineTreeNode );
_ccdef :=_ff .Repeat ("\u0020",_gcbde *2)+_egbcf .Title .Decoded ();*_befeg =append (*_befeg ,_ccdef );};if _gcab .First !=nil {_caffd :=_ff .Repeat ("\u0020",_gcbde *2)+"\u002b";*_befeg =append (*_befeg ,_caffd );_cfdgc (_gcab .First ,_bcagab ,_befeg ,_gcbde +1);
};if _dagdbc &&_egbcf .Next !=nil {_cfdgc (_egbcf .Next ,_bcagab ,_befeg ,_gcbde );};};_cfdgc (_edfad ._bggdde ,&_decef ,&_dbba ,0);return _decef ,_dbba ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fe :=NewPdfAction ();_ccg :=&PdfActionSound {};_ccg .PdfAction =_fe ;_fe .SetContext (_ccg );return _ccg ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_dfdcg *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fa .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fa .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_fa .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fa .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_egad ,_aaebg :=_ggc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gcfag ,img ._bcfbf );if _aaebg !=nil {return Image {},_aaebg ;};_ffgc ,_aaebg :=_ggc .NRGBAConverter .Convert (_egad );
if _aaebg !=nil {return Image {},_aaebg ;};return _bbace (_ffgc .Base ()),nil ;};func _cdbfe (_fbacd *_bg .PdfObjectDictionary ,_dbdba *fontCommon )(*pdfCIDFontType0 ,error ){if _dbdba ._ccbf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dbdba );
return nil ,_bg .ErrRangeError ;};_ggfff :=_bfgfe (_dbdba );_bfgfea ,_ggbcf :=_bg .GetDict (_fbacd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ggbcf {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbdba );
return nil ,ErrRequiredAttributeMissing ;};_ggfff .CIDSystemInfo =_bfgfea ;_ggfff .DW =_fbacd .Get ("\u0044\u0057");_ggfff .W =_fbacd .Get ("\u0057");_ggfff .DW2 =_fbacd .Get ("\u0044\u0057\u0032");_ggfff .W2 =_fbacd .Get ("\u0057\u0032");_ggfff ._bfdcg =1000.0;
if _ccdg ,_bfbed :=_bg .GetNumberAsFloat (_ggfff .DW );_bfbed ==nil {_ggfff ._bfdcg =_ccdg ;};_bcce ,_bgff :=_efafg (_ggfff .W );if _bgff !=nil {return nil ,_bgff ;};if _bcce ==nil {_bcce =map[_be .CharCode ]float64 {};};_ggfff ._bbgadc =_bcce ;return _ggfff ,nil ;
};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_cfef *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bbga :=0.3*_cfef .R ()+0.59*_cfef .G ()+0.11*_cfef .B ();_bbga =_dc .Min (_dc .Max (_bbga ,0.0),1.0);return NewPdfColorDeviceGray (_bbga );};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_aebbg *PdfPage )SetContentStreams (cStreams []string ,encoder _bg .StreamEncoder )error {if len (cStreams )==0{_aebbg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bg .NewRawEncoder ();};var _aagea []*_bg .PdfObjectStream ;for _ ,_ggfg :=range cStreams {_gdcda :=&_bg .PdfObjectStream {};
_cbfg :=encoder .MakeStreamDict ();_bebcc ,_dgecd :=encoder .EncodeBytes ([]byte (_ggfg ));if _dgecd !=nil {return _dgecd ;};_cbfg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_bebcc ))));_gdcda .PdfObjectDictionary =_cbfg ;
_gdcda .Stream =_bebcc ;_aagea =append (_aagea ,_gdcda );};if len (_aagea )==1{_aebbg .Contents =_aagea [0];}else {_bfgbg :=_bg .MakeArray ();for _ ,_bdagc :=range _aagea {_bfgbg .Append (_bdagc );};_aebbg .Contents =_bfgbg ;};return nil ;};func _ecbff (_fcfcaa []byte )([]byte ,error ){_dbecg :=_bd .New ();
if _ ,_eedad :=_ab .Copy (_dbecg ,_bb .NewReader (_fcfcaa ));_eedad !=nil {return nil ,_eedad ;};return _dbecg .Sum (nil ),nil ;};func _fdfb (_abfb _bg .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_abab :=NewPdfColorspaceSpecialIndexed ();if _ffbcf ,_eeef :=_abfb .(*_bg .PdfIndirectObject );
_eeef {_abab ._cgefa =_ffbcf ;};_abfb =_bg .TraceToDirectObject (_abfb );_daea ,_fffbd :=_abfb .(*_bg .PdfObjectArray );if !_fffbd {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _daea .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_abfb =_daea .Get (0);_gbbe ,_fffbd :=_abfb .(*_bg .PdfObjectName );if !_fffbd {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_gbbe !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_abfb =_daea .Get (1);_aedf ,_dbfa :=DetermineColorspaceNameFromPdfObject (_abfb );if _dbfa !=nil {return nil ,_dbfa ;};if _aedf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_aedf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fa .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_aedf );
return nil ,_agbef ;};_feee ,_dbfa :=NewPdfColorspaceFromPdfObject (_abfb );if _dbfa !=nil {return nil ,_dbfa ;};_abab .Base =_feee ;_abfb =_daea .Get (2);_efga ,_dbfa :=_bg .GetNumberAsInt64 (_abfb );if _dbfa !=nil {return nil ,_dbfa ;};if _efga > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_abab .HiVal =int (_efga );_abfb =_daea .Get (3);_abab .Lookup =_abfb ;_abfb =_bg .TraceToDirectObject (_abfb );var _aced []byte ;if _egaf ,_abbg :=_abfb .(*_bg .PdfObjectString );_abbg {_aced =_egaf .Bytes ();_fa .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_aced );
}else if _dagca ,_addf :=_abfb .(*_bg .PdfObjectStream );_addf {_fa .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_abfb .String ());_fa .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dagca .Stream ),_dagca .Stream );
_efbd ,_gaca :=_bg .DecodeStream (_dagca );if _gaca !=nil {return nil ,_gaca ;};_fa .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_efbd ),_efbd );_aced =_efbd ;}else {_fa .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_abfb );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_aced )< _abab .Base .GetNumComponents ()*(_abab .HiVal +1){_fa .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_fa .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_aced ),_abab .Base .GetNumComponents (),_abab .HiVal );
}else {_aced =_aced [:_abab .Base .GetNumComponents ()*(_abab .HiVal +1)];};_abab ._fdbbf =_aced ;return _abab ,nil ;};

// G returns the value of the green component of the color.
func (_eaad *PdfColorDeviceRGB )G ()float64 {return _eaad [1]};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cegga *PdfReader )GetNameDictionary ()(_bg .PdfObject ,error ){_fbdgf :=_bg .ResolveReference (_cegga ._daagd .Get ("\u004e\u0061\u006de\u0073"));if _fbdgf ==nil {return nil ,nil ;};if !_cegga ._aaeef {_eecc :=_cegga .traverseObjectData (_fbdgf );
if _eecc !=nil {return nil ,_eecc ;};};return _fbdgf ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_decb _ab .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_cbabc _gc .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dbfb _gc .Image )(*Image ,error );

// Compress an image.
Compress (_deff *Image ,_fbeb int64 )(*Image ,error );};func _aaceg (_fded *_bg .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ebgcf :=PdfShadingType4 {};_fbgab :=_fded .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fbgab ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_adee ,_daaea :=_fbgab .(*_bg .PdfObjectInteger );if !_daaea {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbgab );
return nil ,_bg .ErrTypeError ;};_ebgcf .BitsPerCoordinate =_adee ;_fbgab =_fded .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fbgab ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_adee ,_daaea =_fbgab .(*_bg .PdfObjectInteger );if !_daaea {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fbgab );
return nil ,_bg .ErrTypeError ;};_ebgcf .BitsPerComponent =_adee ;_fbgab =_fded .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fbgab ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_adee ,_daaea =_fbgab .(*_bg .PdfObjectInteger );if !_daaea {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fbgab );
return nil ,_bg .ErrTypeError ;};_ebgcf .BitsPerComponent =_adee ;_fbgab =_fded .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fbgab ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fdbcc ,_daaea :=_fbgab .(*_bg .PdfObjectArray );if !_daaea {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbgab );
return nil ,_bg .ErrTypeError ;};_ebgcf .Decode =_fdbcc ;_fbgab =_fded .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbgab ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ebgcf .Function =[]PdfFunction {};if _fbeff ,_ffggf :=_fbgab .(*_bg .PdfObjectArray );_ffggf {for _ ,_gdade :=range _fbeff .Elements (){_gfde ,_agegbg :=_egfbb (_gdade );if _agegbg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agegbg );
return nil ,_agegbg ;};_ebgcf .Function =append (_ebgcf .Function ,_gfde );};}else {_bdfg ,_dddba :=_egfbb (_fbgab );if _dddba !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dddba );
return nil ,_dddba ;};_ebgcf .Function =append (_ebgcf .Function ,_bdfg );};return &_ebgcf ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fdafd pdfFontType0 )GetCharMetrics (code _be .CharCode )(_adb .CharMetrics ,bool ){if _fdafd .DescendantFont ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fdafd );
return _adb .CharMetrics {},false ;};return _fdafd .DescendantFont .GetCharMetrics (code );};

// B returns the value of the B component of the color.
func (_ggdc *PdfColorCalRGB )B ()float64 {return _ggdc [1]};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bg .PdfObjectBool ;SigFlags *_bg .PdfObjectInteger ;CO *_bg .PdfObjectArray ;DR *PdfPageResources ;DA *_bg .PdfObjectString ;Q *_bg .PdfObjectInteger ;XFA _bg .PdfObject ;_ffacc *_bg .PdfIndirectObject ;
};func _cfcbd (_daadb string )(map[_be .CharCode ]_be .GlyphName ,error ){_cfbbb :=_ff .Split (_daadb ,"\u000a");_cced :=make (map[_be .CharCode ]_be .GlyphName );for _ ,_ebbe :=range _cfbbb {_gccc :=_gdcc .FindStringSubmatch (_ebbe );if _gccc ==nil {continue ;
};_accf ,_aecbb :=_gccc [1],_gccc [2];_cffeg ,_dfccb :=_af .Atoi (_accf );if _dfccb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ebbe );
return nil ,_bg .ErrTypeError ;};_cced [_be .CharCode (_cffeg )]=_be .GlyphName (_aecbb );};_fa .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cced );
return _cced ,nil ;};func _egfbb (_fgdbd _bg .PdfObject )(PdfFunction ,error ){_fgdbd =_bg .ResolveReference (_fgdbd );if _eegcg ,_geggg :=_fgdbd .(*_bg .PdfObjectStream );_geggg {_ebfffe :=_eegcg .PdfObjectDictionary ;_afccc ,_dbecd :=_ebfffe .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bg .PdfObjectInteger );
if !_dbecd {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_afccc ==0{return _eaegb (_eegcg );}else if *_afccc ==4{return _defc (_eegcg );}else {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cfefca ,_eacdfc :=_fgdbd .(*_bg .PdfIndirectObject );
_eacdfc {_adbf ,_fcda :=_cfefca .PdfObject .(*_bg .PdfObjectDictionary );if !_fcda {_fa .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_fbga ,_fcda :=_adbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bg .PdfObjectInteger );
if !_fcda {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_fbga ==2{return _eace (_cfefca );}else if *_fbga ==3{return _eagad (_cfefca );}else {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bdcbf ,_egdgg :=_fgdbd .(*_bg .PdfObjectDictionary );
_egdgg {_dedde ,_aafce :=_bdcbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bg .PdfObjectInteger );if !_aafce {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dedde ==2{return _eace (_bdcbf );}else if *_dedde ==3{return _eagad (_bdcbf );
}else {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fa .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fgdbd );
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bg .PdfObject ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_befff *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _fddbc []*PdfField ;if _befff .AcroForm !=nil {_fddbc =_befff .AcroForm .AllFields ();};_edfgf :=make (map[*PdfField ]struct{},len (_fddbc ));for _ ,_begdf :=range _fddbc {_edfgf [_begdf ]=struct{}{};
};for _ ,_bdca :=range _befff .PageList {_gegggf ,_gcdca :=_bdca .GetAnnotations ();if _gcdca !=nil {return false ,_gcdca ;};for _ ,_baacbg :=range _gegggf {_afea ,_fgaeb :=_baacbg .GetContext ().(*PdfAnnotationWidget );if !_fgaeb {continue ;};_adcdd :=_afea .Field ();
if _adcdd ==nil {return true ,nil ;};if _ ,_gfgc :=_edfgf [_adcdd ];!_gfgc {return true ,nil ;};};};return false ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_gcfag []byte ;_bcfbf []float64 ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gbgae *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bg .StreamEncoder ,error ){_dcac ,_dcaga :=_gbgae ._ededfe .(*_bg .PdfObjectStream );if !_dcaga {_fa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbgae ._ededfe );
return nil ,nil ,_bg .ErrTypeError ;};_dfafc ,_ebade :=_bg .DecodeStream (_dcac );if _ebade !=nil {_fa .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ebade );
return nil ,nil ,_ebade ;};_adgcea ,_ebade :=_bg .NewEncoderFromStream (_dcac );if _ebade !=nil {_fa .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ebade );
return nil ,nil ,_ebade ;};return _dfafc ,_adgcea ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bg .PdfObjectArray ;Domain *_bg .PdfObjectArray ;Function []PdfFunction ;Extend *_bg .PdfObjectArray ;};

// Add appends an outline item as a child of the current outline item.
func (_acfbb *OutlineItem )Add (item *OutlineItem ){_acfbb .Entries =append (_acfbb .Entries ,item )};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gaaaf *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fff .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_edcfb *PdfColorspaceDeviceN )ToPdfObject ()_bg .PdfObject {_bfdg :=_bg .MakeArray (_bg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bfdg .Append (_edcfb .ColorantNames );_bfdg .Append (_edcfb .AlternateSpace .ToPdfObject ());_bfdg .Append (_edcfb .TintTransform .ToPdfObject ());
if _edcfb .Attributes !=nil {_bfdg .Append (_edcfb .Attributes .ToPdfObject ());};if _edcfb ._dgaba !=nil {_edcfb ._dgaba .PdfObject =_bfdg ;return _edcfb ._dgaba ;};return _bfdg ;};

// Encoder returns the font's text encoder.
func (_bafab pdfCIDFontType2 )Encoder ()_be .TextEncoder {return _bafab ._cbgc };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bg .PdfObjectStream ;Data []byte ;_fafbc *_bg .PdfIndirectObject ;_caba *_bg .PdfObjectStream ;};

// ToPdfObject returns a stream object.
func (_fbaad *XObjectImage )ToPdfObject ()_bg .PdfObject {_gdecd :=_fbaad ._dbged ;_dfffa :=_gdecd .PdfObjectDictionary ;if _fbaad .Filter !=nil {_dfffa =_fbaad .Filter .MakeStreamDict ();_gdecd .PdfObjectDictionary =_dfffa ;};_dfffa .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dfffa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0049\u006d\u0061g\u0065"));_dfffa .Set ("\u0057\u0069\u0064t\u0068",_bg .MakeInteger (*(_fbaad .Width )));_dfffa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bg .MakeInteger (*(_fbaad .Height )));
if _fbaad .BitsPerComponent !=nil {_dfffa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bg .MakeInteger (*(_fbaad .BitsPerComponent )));};if _fbaad .ColorSpace !=nil {_dfffa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fbaad .ColorSpace .ToPdfObject ());
};_dfffa .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fbaad .Intent );_dfffa .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fbaad .ImageMask );_dfffa .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fbaad .Mask );_abdc :=_dfffa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _fbaad .Decode ==nil &&_abdc {_dfffa .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _fbaad .Decode !=nil {_dfffa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fbaad .Decode );};_dfffa .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fbaad .Interpolate );
_dfffa .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fbaad .Alternatives );_dfffa .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fbaad .SMask );_dfffa .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fbaad .SMaskInData );
_dfffa .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fbaad .Matte );_dfffa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbaad .Name );_dfffa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fbaad .StructParent );_dfffa .SetIfNotNil ("\u0049\u0044",_fbaad .ID );
_dfffa .SetIfNotNil ("\u004f\u0050\u0049",_fbaad .OPI );_dfffa .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fbaad .Metadata );_dfffa .SetIfNotNil ("\u004f\u0043",_fbaad .OC );_dfffa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bg .MakeInteger (int64 (len (_fbaad .Stream ))));
_gdecd .Stream =_fbaad .Stream ;return _gdecd ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// Mask returns the uin32 bitmask for the specific flag.
func (_cdda FieldFlag )Mask ()uint32 {return uint32 (_cdda )};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _cebbe (_dbdae *_bg .PdfObjectDictionary ,_bggdd *fontCommon ,_dgbeb _be .TextEncoder )(*pdfFontSimple ,error ){_afbgg :=_bfde (_bggdd );_afbgg ._dbfd =_dgbeb ;if _dgbeb ==nil {_deagd :=_dbdae .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _deagd ==nil {_deagd =_bg .MakeInteger (0);};_afbgg .FirstChar =_deagd ;_gddg ,_eadcge :=_bg .GetIntVal (_deagd );if !_eadcge {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_deagd );
return nil ,_bg .ErrTypeError ;};_ddaf :=_be .CharCode (_gddg );_deagd =_dbdae .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _deagd ==nil {_deagd =_bg .MakeInteger (255);};_afbgg .LastChar =_deagd ;_gddg ,_eadcge =_bg .GetIntVal (_deagd );
if !_eadcge {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_deagd );return nil ,_bg .ErrTypeError ;
};_afbc :=_be .CharCode (_gddg );_afbgg ._cccaa =make (map[_be .CharCode ]float64 );_deagd =_dbdae .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _deagd !=nil {_afbgg .Widths =_deagd ;_dggb ,_bdbcf :=_bg .GetArray (_deagd );if !_bdbcf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_deagd );
return nil ,_bg .ErrTypeError ;};_gdad ,_babg :=_dggb .ToFloat64Array ();if _babg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_babg ;};if len (_gdad )!=int (_afbc -_ddaf +1){_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_afbc -_ddaf +1,len (_gdad ));
return nil ,_bg .ErrRangeError ;};for _cfab ,_cfcfb :=range _gdad {_afbgg ._cccaa [_ddaf +_be .CharCode (_cfab )]=_cfcfb ;};};};_afbgg .Encoding =_bg .TraceToDirectObject (_dbdae .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _afbgg ,nil ;
};func _cabed (_fedf _bg .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bead :=&PdfPageResourcesColorspaces {};if _gfcbb ,_dfgaf :=_fedf .(*_bg .PdfIndirectObject );_dfgaf {_bead ._bccgd =_gfcbb ;_fedf =_gfcbb .PdfObject ;};_fcaac ,_ddfeg :=_bg .GetDict (_fedf );
if !_ddfeg {return nil ,_fff .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bead .Names =[]string {};_bead .Colorspaces =map[string ]PdfColorspace {};for _ ,_cbfdc :=range _fcaac .Keys (){_cbega :=_fcaac .Get (_cbfdc );
_bead .Names =append (_bead .Names ,string (_cbfdc ));_cdee ,_eegcf :=NewPdfColorspaceFromPdfObject (_cbega );if _eegcf !=nil {return nil ,_eegcf ;};_bead .Colorspaces [string (_cbfdc )]=_cdee ;};return _bead ,nil ;};func (_cbbee Image )getBase ()_ggc .ImageBase {return _ggc .NewImageBase (int (_cbbee .Width ),int (_cbbee .Height ),int (_cbbee .BitsPerComponent ),_cbbee .ColorComponents ,_cbbee .Data ,_cbbee ._gcfag ,_cbbee ._bcfbf );
};func (_agc *PdfReader )newPdfActionLaunchFromDict (_fdf *_bg .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bgg ,_fbgf :=_gdf (_fdf .Get ("\u0046"));if _fbgf !=nil {return nil ,_fbgf ;};return &PdfActionLaunch {Win :_fdf .Get ("\u0057\u0069\u006e"),Mac :_fdf .Get ("\u004d\u0061\u0063"),Unix :_fdf .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fdf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bgg },nil ;
};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bg .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bg .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bg .PdfObjectBool ;_baffd PdfModel ;_cabb _bg .PdfObject ;};func (_edede *Image )resampleLowBits (_fbce []uint32 ){_cgacd :=_ggc .BytesPerLine (int (_edede .Width ),int (_edede .BitsPerComponent ),_edede .ColorComponents );
_dgbdag :=make ([]byte ,_edede .ColorComponents *_cgacd *int (_edede .Height ));_acfbg :=int (_edede .BitsPerComponent )*_edede .ColorComponents *int (_edede .Width );_gdedd :=uint8 (8);var (_dcead ,_eaee int ;_eabfe uint32 ;);for _ceee :=0;_ceee < int (_edede .Height );
_ceee ++{_eaee =_ceee *_cgacd ;for _fbefb :=0;_fbefb < _acfbg ;_fbefb ++{_eabfe =_fbce [_dcead ];_gdedd -=uint8 (_edede .BitsPerComponent );_dgbdag [_eaee ]|=byte (_eabfe )<<_gdedd ;if _gdedd ==0{_gdedd =8;_eaee ++;};_dcead ++;};};_edede .Data =_dgbdag ;
};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gacab *_bg .PdfIndirectObject ;Certs []*_bg .PdfObjectStream ;OCSPs []*_bg .PdfObjectStream ;CRLs []*_bg .PdfObjectStream ;VRI map[string ]*VRI ;_gefg map[string ]*_bg .PdfObjectStream ;_cgfa map[string ]*_bg .PdfObjectStream ;_gffbf map[string ]*_bg .PdfObjectStream ;
};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_deffc *PdfShading )GetContext ()PdfModel {return _deffc ._baffd };func (_adbcf *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _eadg :=_adbcf ._abcd ;_eadg !=nil {return _eadg ;};return _adbcf ._aeaf ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_afaea *PdfWriter )SetNamedDestinations (dests _bg .PdfObject )error {if dests ==nil {return nil ;};_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_afaea ._gcff .Set ("\u0044\u0065\u0073t\u0073",dests );return _afaea .addObjects (dests );};

// ToPdfObject implements interface PdfModel.
func (_gdg *PdfActionRendition )ToPdfObject ()_bg .PdfObject {_gdg .PdfAction .ToPdfObject ();_bgc :=_gdg ._gfd ;_efe :=_bgc .PdfObject .(*_bg .PdfObjectDictionary );_efe .SetIfNotNil ("\u0053",_bg .MakeName (string (ActionTypeRendition )));_efe .SetIfNotNil ("\u0052",_gdg .R );
_efe .SetIfNotNil ("\u0041\u004e",_gdg .AN );_efe .SetIfNotNil ("\u004f\u0050",_gdg .OP );_efe .SetIfNotNil ("\u004a\u0053",_gdg .JS );return _bgc ;};

// C returns the value of the cyan component of the color.
func (_dagf *PdfColorDeviceCMYK )C ()float64 {return _dagf [0]};

// StdFontName represents name of a standard font.
type StdFontName =_adb .StdFontName ;func (_ggb *PdfReader )newPdfAnnotationStrikeOut (_eabg *_bg .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_edf :=PdfAnnotationStrikeOut {};_ccdd ,_cdgb :=_ggb .newPdfAnnotationMarkupFromDict (_eabg );if _cdgb !=nil {return nil ,_cdgb ;
};_edf .PdfAnnotationMarkup =_ccdd ;_edf .QuadPoints =_eabg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_edf ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bg .PdfObject ;IC _bg .PdfObject ;BE _bg .PdfObject ;RD _bg .PdfObject ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bg .PdfObject ;};func _ddef (_bedg *PdfField ,_cbegf _bg .PdfObject ){for _ ,_bedd :=range _bedg .Annotations {_bedd .AS =_cbegf ;_bedd .ToPdfObject ();};};func (_dbfe *PdfAppender )replaceObject (_acgd ,_begc _bg .PdfObject ){switch _cefe :=_acgd .(type ){case *_bg .PdfIndirectObject :_dbfe ._dafc [_begc ]=_cefe .ObjectNumber ;
case *_bg .PdfObjectStream :_dbfe ._dafc [_begc ]=_cefe .ObjectNumber ;};};func _fadg (_dfecb *_bg .PdfObjectDictionary ,_bgfa *fontCommon )(*pdfCIDFontType2 ,error ){if _bgfa ._ccbf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bgfa );
return nil ,_bg .ErrRangeError ;};_gbfc :=_agcga (_bgfa );_dagcag ,_aefd :=_bg .GetDict (_dfecb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aefd {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bgfa );
return nil ,ErrRequiredAttributeMissing ;};_gbfc .CIDSystemInfo =_dagcag ;_gbfc .DW =_dfecb .Get ("\u0044\u0057");_gbfc .W =_dfecb .Get ("\u0057");_gbfc .DW2 =_dfecb .Get ("\u0044\u0057\u0032");_gbfc .W2 =_dfecb .Get ("\u0057\u0032");_gbfc .CIDToGIDMap =_dfecb .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gbfc ._dfge =1000.0;if _abaca ,_eebba :=_bg .GetNumberAsFloat (_gbfc .DW );_eebba ==nil {_gbfc ._dfge =_abaca ;};_dcccc ,_aggb :=_efafg (_gbfc .W );if _aggb !=nil {return nil ,_aggb ;};if _dcccc ==nil {_dcccc =map[_be .CharCode ]float64 {};};_gbfc ._cfeab =_dcccc ;
return _gbfc ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_bbfc *PdfRectangle )Normalize (){if _bbfc .Llx > _bbfc .Urx {_bbfc .Llx ,_bbfc .Urx =_bbfc .Urx ,_bbfc .Llx ;};if _bbfc .Lly > _bbfc .Ury {_bbfc .Lly ,_bbfc .Ury =_bbfc .Ury ,_bbfc .Lly ;};};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_aedaf *Image )ConvertToBinary ()error {if _aedaf .ColorComponents ==1&&_aedaf .BitsPerComponent ==1{return nil ;};_edfcb ,_ccff :=_aedaf .ToGoImage ();if _ccff !=nil {return _ccff ;};_ecbac ,_ccff :=_ggc .MonochromeConverter .Convert (_edfcb );if _ccff !=nil {return _ccff ;
};_aedaf .Data =_ecbac .Base ().Data ;_aedaf ._gcfag ,_ccff =_ggc .ScaleAlphaToMonochrome (_aedaf ._gcfag ,int (_aedaf .Width ),int (_aedaf .Height ));if _ccff !=nil {return _ccff ;};_aedaf .BitsPerComponent =1;_aedaf .ColorComponents =1;_aedaf ._bcfbf =nil ;
return nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_afcea *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_fdgf :=&PdfColorPattern {};_bgdad ,_gace :=objects [len (objects )-1].(*_bg .PdfObjectName );if !_gace {_fa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_fdgf .PatternName =*_bgdad ;if len (objects )> 1{_aebb :=objects [0:len (objects )-1];if _afcea .UnderlyingCS ==nil {_fa .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ddbdd ,_dgag :=_afcea .UnderlyingCS .ColorFromPdfObjects (_aebb );if _dgag !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dgag );
return nil ,_dgag ;};_fdgf .Color =_ddbdd ;};return _fdgf ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bfb :=NewPdfAction ();_aab :=&PdfActionImportData {};_aab .PdfAction =_bfb ;_bfb .SetContext (_aab );return _aab ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ab .ReadSeeker )(*PdfFont ,error ){_fcbc ,_gdgf :=_df .ReadAll (r );if _gdgf !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gdgf );
return nil ,_gdgf ;};_bbcb ,_gdgf :=_adb .TtfParse (_bb .NewReader (_fcbc ));if _gdgf !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gdgf );
return nil ,_gdgf ;};_dfbdb :=&pdfCIDFontType2 {fontCommon :fontCommon {_ccbf :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_bbcb .Widths )<=0{return nil ,_fff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fbeg :=1000.0/float64 (_bbcb .UnitsPerEm );_dedfc :=_fbeg *float64 (_bbcb .Widths [0]);_gaddb :=make (map[rune ]int );_eafaa :=make (map[_adb .GID ]int );_bfacf :=_adb .GID (len (_bbcb .Widths ));for _cbfdb ,_afgba :=range _bbcb .Chars {if _afgba > _bfacf -1{continue ;
};_cdeb :=int (_fbeg *float64 (_bbcb .Widths [_afgba ]));_gaddb [_cbfdb ]=_cdeb ;_eafaa [_afgba ]=_cdeb ;};_dfbdb ._efag =_gaddb ;_dfbdb .DW =_bg .MakeInteger (int64 (_dedfc ));_fddb :=_faafd (_eafaa ,uint16 (_bfacf ));_dfbdb .W =_bg .MakeIndirectObject (_fddb );
_gecc :=_bg .MakeDict ();_gecc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bg .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gecc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bg .MakeString ("\u0041\u0064\u006fb\u0065"));
_gecc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bg .MakeInteger (0));_dfbdb .CIDSystemInfo =_gecc ;_eadfd :=&PdfFontDescriptor {FontName :_bg .MakeName (_bbcb .PostScriptName ),Ascent :_bg .MakeFloat (_fbeg *float64 (_bbcb .TypoAscender )),Descent :_bg .MakeFloat (_fbeg *float64 (_bbcb .TypoDescender )),CapHeight :_bg .MakeFloat (_fbeg *float64 (_bbcb .CapHeight )),FontBBox :_bg .MakeArrayFromFloats ([]float64 {_fbeg *float64 (_bbcb .Xmin ),_fbeg *float64 (_bbcb .Ymin ),_fbeg *float64 (_bbcb .Xmax ),_fbeg *float64 (_bbcb .Ymax )}),ItalicAngle :_bg .MakeFloat (_bbcb .ItalicAngle ),MissingWidth :_bg .MakeFloat (_dedfc )};
_edge ,_gdgf :=_bg .MakeStream (_fcbc ,_bg .NewFlateEncoder ());if _gdgf !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gdgf );
return nil ,_gdgf ;};_edge .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bg .MakeInteger (int64 (len (_fcbc ))));_eadfd .FontFile2 =_edge ;if _bbcb .Bold {_eadfd .StemV =_bg .MakeInteger (120);}else {_eadfd .StemV =_bg .MakeInteger (70);
};_effc :=_gabfg ;if _bbcb .IsFixedPitch {_effc |=_egffef ;};if _bbcb .ItalicAngle !=0{_effc |=_faac ;};_eadfd .Flags =_bg .MakeInteger (int64 (_effc ));_dfbdb ._ffgfd =_bbcb .PostScriptName ;_dfbdb ._abcd =_eadfd ;_fbeed :=pdfFontType0 {fontCommon :fontCommon {_ccbf :"\u0054\u0079\u0070e\u0030",_ffgfd :_bbcb .PostScriptName },DescendantFont :&PdfFont {_fcafc :_dfbdb },Encoding :_bg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bgcf :_bbcb .NewEncoder ()};
if len (_bbcb .Chars )> 0{_aafcg :=make (map[_bbg .CharCode ]rune ,len (_bbcb .Chars ));for _bcbde ,_edfa :=range _bbcb .Chars {_ecccdg :=_bbg .CharCode (_edfa );if _adbc ,_cfbga :=_aafcg [_ecccdg ];!_cfbga ||(_cfbga &&_adbc > _bcbde ){_aafcg [_ecccdg ]=_bcbde ;
};};_fbeed ._ddddg =_bbg .NewToUnicodeCMap (_aafcg );};_ecbb :=PdfFont {_fcafc :&_fbeed };return &_ecbb ,nil ;};

// GetNumPages returns the number of pages in the document.
func (_dfefe *PdfReader )GetNumPages ()(int ,error ){if _dfefe ._gbgb .GetCrypter ()!=nil &&!_dfefe ._gbgb .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_dfefe ._abcee ),nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_bed *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_bed .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fcggc :=_ggc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._gcfag ,img ._bcfbf );_ggbeb :=_dd .NewReader (img .getBase ());_edde :=_dd .NewWriter (_fcggc );var (_dbbcb uint32 ;_fcaf int ;_cda error ;);for {_dbbcb ,_cda =_ggbeb .ReadSample ();
if _cda ==_ab .EOF {break ;}else if _cda !=nil {return img ,_cda ;};_fcaf =int (_dbbcb );_fa .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fcaf ,N ,len (_bed ._fdbbf ));
if (_fcaf +1)*N > len (_bed ._fdbbf ){_fcaf =len (_bed ._fdbbf )/N -1;_fa .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fcaf );if _fcaf < 0{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _cabcc :=_fcaf *N ;_cabcc < (_fcaf +1)*N ;_cabcc ++{if _cda =_edde .WriteSample (uint32 (_bed ._fdbbf [_cabcc ]));_cda !=nil {return img ,_cda ;};};};return _bed .Base .ImageToRGB (_bbace (&_fcggc ));};

// Height returns the height of `rect`.
func (_acdee *PdfRectangle )Height ()float64 {return _dc .Abs (_acdee .Ury -_acdee .Lly )};func (_gfgd *PdfSignature )extractChainFromPKCS7 ()([]*_b .Certificate ,error ){_aecag ,_cabbg :=_dcg .Parse (_gfgd .Contents .Bytes ());if _cabbg !=nil {return nil ,_cabbg ;
};return _aecag .Certificates ,nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ab .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fcbag ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _gdaeb (rs ,opts ,true ,_fcbag );
};func (_eagdb *pdfFontType0 )subsetRegistered ()error {_deda ,_ecbeca :=_eagdb .DescendantFont ._fcafc .(*pdfCIDFontType2 );if !_ecbeca {_fa .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_eagdb .DescendantFont );
return nil ;};if _deda ==nil {return nil ;};if _deda ._abcd ==nil {_fa .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _eagdb ._bgcf ==nil {_fa .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_beafg ,_ecbeca :=_bg .GetStream (_deda ._abcd .FontFile2 );if !_ecbeca {_fa .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fff .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dacc ,_ddgf :=_bg .DecodeStream (_beafg );if _ddgf !=nil {_fa .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ddgf );
return _ddgf ;};_fdfg ,_ddgf :=_ba .Parse (_bb .NewReader (_dacc ));if _ddgf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_beafg .Stream ));
return _ddgf ;};var _feeec []rune ;var _gfbc *_ba .Font ;switch _geded :=_eagdb ._bgcf .(type ){case *_be .TrueTypeFontEncoder :_feeec =_geded .RegisteredRunes ();_gfbc ,_ddgf =_fdfg .SubsetKeepRunes (_feeec );if _ddgf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddgf );
return _ddgf ;};_geded .SubsetRegistered ();case *_be .IdentityEncoder :_feeec =_geded .RegisteredRunes ();_dedgc :=make ([]_ba .GlyphIndex ,len (_feeec ));for _bbac ,_fagb :=range _feeec {_dedgc [_bbac ]=_ba .GlyphIndex (_fagb );};_gfbc ,_ddgf =_fdfg .SubsetKeepIndices (_dedgc );
if _ddgf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddgf );return _ddgf ;};case _be .SimpleEncoder :_gadd :=_geded .Charcodes ();for _ ,_bcgfb :=range _gadd {_fbfb ,_ccadf :=_geded .CharcodeToRune (_bcgfb );if !_ccadf {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bcgfb );
continue ;};_feeec =append (_feeec ,_fbfb );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_eagdb ._bgcf );
};var _fbea _bb .Buffer ;_ddgf =_gfbc .Write (&_fbea );if _ddgf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddgf );return _ddgf ;};if _eagdb ._ddddg !=nil {_bbcfd :=make (map[_bbg .CharCode ]rune ,len (_feeec ));for _ ,_acge :=range _feeec {_gga ,_dcbgc :=_eagdb ._bgcf .RuneToCharcode (_acge );
if !_dcbgc {continue ;};_bbcfd [_bbg .CharCode (_gga )]=_acge ;};_eagdb ._ddddg =_bbg .NewToUnicodeCMap (_bbcfd );};_beafg ,_ddgf =_bg .MakeStream (_fbea .Bytes (),_bg .NewFlateEncoder ());if _ddgf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddgf );
return _ddgf ;};_beafg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bg .MakeInteger (int64 (_fbea .Len ())));if _ddfdbg ,_decc :=_bg .GetStream (_deda ._abcd .FontFile2 );_decc {*_ddfdbg =*_beafg ;}else {_deda ._abcd .FontFile2 =_beafg ;};_fegfa :=_bggca ();
if len (_eagdb ._ffgfd )> 0{_eagdb ._ffgfd =_beef (_eagdb ._ffgfd ,_fegfa );};if len (_deda ._ffgfd )> 0{_deda ._ffgfd =_beef (_deda ._ffgfd ,_fegfa );};if len (_eagdb ._babbc )> 0{_eagdb ._babbc =_beef (_eagdb ._babbc ,_fegfa );};if _deda ._abcd !=nil {_bfagg ,_efead :=_bg .GetName (_deda ._abcd .FontName );
if _efead &&len (_bfagg .String ())> 0{_beca :=_beef (_bfagg .String (),_fegfa );_deda ._abcd .FontName =_bg .MakeName (_beca );};};return nil ;};func (_deee *PdfReader )newPdfAnnotationInkFromDict (_fffd *_bg .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_dedb :=PdfAnnotationInk {};
_egbf ,_gbda :=_deee .newPdfAnnotationMarkupFromDict (_fffd );if _gbda !=nil {return nil ,_gbda ;};_dedb .PdfAnnotationMarkup =_egbf ;_dedb .InkList =_fffd .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_dedb .BS =_fffd .Get ("\u0042\u0053");return &_dedb ,nil ;
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_aedc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ebbbe pdfFontType3 )GetRuneMetrics (r rune )(_adb .CharMetrics ,bool ){_bbcacg :=_ebbbe .Encoder ();if _bbcacg ==nil {_fa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ebbbe );
return _adb .CharMetrics {},false ;};_cbdbg ,_fgbgbc :=_bbcacg .RuneToCharcode (r );if !_fgbgbc {if r !=' '{_fa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ebbbe );
};return _adb .CharMetrics {},false ;};_faeeb ,_eccaf :=_ebbbe .GetCharMetrics (_cbdbg );return _faeeb ,_eccaf ;};

// ToPdfObject returns the PDF representation of the function.
func (_cefgf *PdfFunctionType2 )ToPdfObject ()_bg .PdfObject {_fgeda :=_bg .MakeDict ();_fgeda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bg .MakeInteger (2));_bfgfa :=&_bg .PdfObjectArray {};for _ ,_dgcad :=range _cefgf .Domain {_bfgfa .Append (_bg .MakeFloat (_dgcad ));
};_fgeda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bfgfa );if _cefgf .Range !=nil {_bedec :=&_bg .PdfObjectArray {};for _ ,_edef :=range _cefgf .Range {_bedec .Append (_bg .MakeFloat (_edef ));};_fgeda .Set ("\u0052\u0061\u006eg\u0065",_bedec );};if _cefgf .C0 !=nil {_feeecg :=&_bg .PdfObjectArray {};
for _ ,_fbedc :=range _cefgf .C0 {_feeecg .Append (_bg .MakeFloat (_fbedc ));};_fgeda .Set ("\u0043\u0030",_feeecg );};if _cefgf .C1 !=nil {_aegcg :=&_bg .PdfObjectArray {};for _ ,_bbfa :=range _cefgf .C1 {_aegcg .Append (_bg .MakeFloat (_bbfa ));};_fgeda .Set ("\u0043\u0031",_aegcg );
};_fgeda .Set ("\u004e",_bg .MakeFloat (_cefgf .N ));if _cefgf ._ebgdf !=nil {_cefgf ._ebgdf .PdfObject =_fgeda ;return _cefgf ._ebgdf ;};return _fgeda ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dedbg :=&PdfOutline {_bdeaa :_bg .MakeIndirectObject (_bg .MakeDict ())};_dedbg ._baag =_dedbg ;return _dedbg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bfdbc *PdfOutlineItem )ToPdfObject ()_bg .PdfObject {_begcg :=_bfdbc ._babc ;_egcba :=_begcg .PdfObject .(*_bg .PdfObjectDictionary );_egcba .Set ("\u0054\u0069\u0074l\u0065",_bfdbc .Title );if _bfdbc .A !=nil {_egcba .Set ("\u0041",_bfdbc .A );
};if _ffdfe :=_egcba .Get ("\u0053\u0045");_ffdfe !=nil {_egcba .Remove ("\u0053\u0045");};if _bfdbc .C !=nil {_egcba .Set ("\u0043",_bfdbc .C );};if _bfdbc .Dest !=nil {_egcba .Set ("\u0044\u0065\u0073\u0074",_bfdbc .Dest );};if _bfdbc .F !=nil {_egcba .Set ("\u0046",_bfdbc .F );
};if _bfdbc .Count !=nil {_egcba .Set ("\u0043\u006f\u0075n\u0074",_bg .MakeInteger (*_bfdbc .Count ));};if _bfdbc .Next !=nil {_egcba .Set ("\u004e\u0065\u0078\u0074",_bfdbc .Next .ToPdfObject ());};if _bfdbc .First !=nil {_egcba .Set ("\u0046\u0069\u0072s\u0074",_bfdbc .First .ToPdfObject ());
};if _bfdbc .Prev !=nil {_egcba .Set ("\u0050\u0072\u0065\u0076",_bfdbc .Prev .GetContext ().GetContainingPdfObject ());};if _bfdbc .Last !=nil {_egcba .Set ("\u004c\u0061\u0073\u0074",_bfdbc .Last .GetContext ().GetContainingPdfObject ());};if _bfdbc .Parent !=nil {_egcba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfdbc .Parent .GetContext ().GetContainingPdfObject ());
};return _begcg ;};func _cgada (_beffa *PdfPage ){_eaage :=_ecb .GetLicenseKey ();if _eaage !=nil &&_eaage .IsLicensed (){return ;};_bgddg :=_bg .PdfObjectName ("\u0055\u0046\u0031");if !_beffa .Resources .HasFontByName (_bgddg ){_beffa .Resources .SetFontByName (_bgddg ,DefaultFont ().ToPdfObject ());
};var _dabdg []string ;_dabdg =append (_dabdg ,"\u0071");_dabdg =append (_dabdg ,"\u0042\u0054");_dabdg =append (_dabdg ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bgddg .String ()));_dabdg =append (_dabdg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_dabdg =append (_dabdg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_ebac :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dabdg =append (_dabdg ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_ebac ));_dabdg =append (_dabdg ,"\u0045\u0054");_dabdg =append (_dabdg ,"\u0051");_geed :=_ff .Join (_dabdg ,"\u000a");_beffa .AddContentStreamByString (_geed );_beffa .ToPdfObject ();
};

// SetAction sets the PDF action for the annotation link.
func (_ebge *PdfAnnotationLink )SetAction (action *PdfAction ){_ebge ._dbd =action ;if action ==nil {_ebge .A =nil ;};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bg .PdfObject ;FS _bg .PdfObject ;F _bg .PdfObject ;UF _bg .PdfObject ;DOS _bg .PdfObject ;Mac _bg .PdfObject ;Unix _bg .PdfObject ;ID _bg .PdfObject ;V _bg .PdfObject ;EF _bg .PdfObject ;RF _bg .PdfObject ;Desc _bg .PdfObject ;
CI _bg .PdfObject ;_cdfaf _bg .PdfObject ;};func (_bcda *LTV )getCerts (_cbgd []*_b .Certificate )([][]byte ,error ){_gfffg :=make ([][]byte ,0,len (_cbgd ));for _ ,_gdaeg :=range _cbgd {_gfffg =append (_gfffg ,_gdaeg .Raw );};return _gfffg ,nil ;};func (_cea *PdfReader )newPdfActionImportDataFromDict (_ddb *_bg .PdfObjectDictionary )(*PdfActionImportData ,error ){_eggf ,_cgdd :=_gdf (_ddb .Get ("\u0046"));
if _cgdd !=nil {return nil ,_cgdd ;};return &PdfActionImportData {F :_eggf },nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bg .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_daaf *PdfAnnotation )SetContext (ctx PdfModel ){_daaf ._dcf =ctx };

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_cdgfd :=&PdfPageResourcesColorspaces {};_cdgfd .Names =[]string {};_cdgfd .Colorspaces =map[string ]PdfColorspace {};_cdgfd ._bccgd =&_bg .PdfIndirectObject {};return _cdgfd ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cdbe *_bg .PdfIndirectObject ;_bbadca *_bg .PdfIndirectObject ;_cdfde map[_bg .PdfObject ]struct{};_fdeeb []_bg .PdfObject ;_eccf map[_bg .PdfObject ]struct{};_dcaebg []*_bg .PdfIndirectObject ;_eedg *PdfOutlineTreeNode ;_gcff *_bg .PdfObjectDictionary ;
_ccfa []_bg .PdfObject ;_cedg *_bg .PdfIndirectObject ;_gbdcg *_ec .Writer ;_dbfbf int64 ;_aafea error ;_accb *_bg .PdfCrypt ;_cedd *_bg .PdfObjectDictionary ;_bbfcc *_bg .PdfIndirectObject ;_bfffac *_bg .PdfObjectArray ;_afee int ;_ceced int ;_fedaag *bool ;
_gfecc map[_bg .PdfObject ][]*_bg .PdfObjectDictionary ;_eacgc *PdfAcroForm ;_cfbef Optimizer ;_ddfce map[int ]crossReference ;_accgd int64 ;ObjNumOffset int ;_efbcc bool ;_bddec _bg .XrefTable ;_dgffd int64 ;_bfegf int64 ;_fgefc map[_bg .PdfObject ]int64 ;
_dcdefd map[_bg .PdfObject ]struct{};_aceca string ;};

// A returns the value of the A component of the color.
func (_gfea *PdfColorLab )A ()float64 {return _gfea [1]};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_afdca pdfFontSimple )GetCharMetrics (code _be .CharCode )(_adb .CharMetrics ,bool ){if _ebgfc ,_fegb :=_afdca ._cccaa [code ];_fegb {return _adb .CharMetrics {Wx :_ebgfc },true ;};if _adb .IsStdFont (_adb .StdFontName (_afdca ._ffgfd )){return _adb .CharMetrics {Wx :250},true ;
};return _adb .CharMetrics {},false ;};func (_fdde *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fdde .fontCommon };func _bfgfe (_bede *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_bede }};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_edagb *PdfPage )AddContentStreamByString (contentStr string )error {_fbba ,_dbagc :=_bg .MakeStream ([]byte (contentStr ),_bg .NewFlateEncoder ());if _dbagc !=nil {return _dbagc ;};if _edagb .Contents ==nil {_edagb .Contents =_fbba ;}else {_gaaea :=_bg .TraceToDirectObject (_edagb .Contents );
_dfbad ,_abgff :=_gaaea .(*_bg .PdfObjectArray );if !_abgff {_dfbad =_bg .MakeArray (_gaaea );};_dfbad .Append (_fbba );_edagb .Contents =_dfbad ;};return nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_dabb int ,_ebceg *PdfPage )error ;

// GetAction returns the PDF action for the annotation link.
func (_gca *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _gca ._dbd !=nil {return _gca ._dbd ,nil ;};if _gca .A ==nil {return nil ,nil ;};if _gca ._ffad ==nil {return nil ,nil ;};_dbeb ,_cded :=_gca ._ffad .loadAction (_gca .A );if _cded !=nil {return nil ,_cded ;
};_gca ._dbd =_dbeb ;return _gca ._dbd ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_baag interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func _caffb (_fgfff *_bg .PdfObjectDictionary )*VRI {_cebfbg ,_ :=_bg .GetString (_fgfff .Get ("\u0054\u0055"));_cgcc ,_ :=_bg .GetString (_fgfff .Get ("\u0054\u0053"));
return &VRI {Cert :_bgdc (_fgfff .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bgdc (_fgfff .Get ("\u004f\u0043\u0053\u0050")),CRL :_bgdc (_fgfff .Get ("\u0043\u0052\u004c")),TU :_cebfbg ,TS :_cgcc };};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_deab *PdfOutline )ToPdfObject ()_bg .PdfObject {_adgce :=_deab ._bdeaa ;_edage :=_adgce .PdfObject .(*_bg .PdfObjectDictionary );_edage .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _deab .First !=nil {_edage .Set ("\u0046\u0069\u0072s\u0074",_deab .First .ToPdfObject ());
};if _deab .Last !=nil {_edage .Set ("\u004c\u0061\u0073\u0074",_deab .Last .GetContext ().GetContainingPdfObject ());};if _deab .Parent !=nil {_edage .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_deab .Parent .GetContext ().GetContainingPdfObject ());
};if _deab .Count !=nil {_edage .Set ("\u0043\u006f\u0075n\u0074",_bg .MakeInteger (*_deab .Count ));};return _adgce ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_eaafad *BorderStyle )GetPdfName ()string {switch *_eaafad {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// SetPatternByName sets a pattern resource specified by keyName.
func (_bffe *PdfPageResources )SetPatternByName (keyName _bg .PdfObjectName ,pattern _bg .PdfObject )error {if _bffe .Pattern ==nil {_bffe .Pattern =_bg .MakeDict ();};_adca ,_cbgeaf :=_bffe .Pattern .(*_bg .PdfObjectDictionary );if !_cbgeaf {return _bg .ErrTypeError ;
};_adca .Set (keyName ,pattern );return nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bg .PdfObject ;Q _bg .PdfObject ;RC _bg .PdfObject ;DS _bg .PdfObject ;CL _bg .PdfObject ;IT _bg .PdfObject ;BE _bg .PdfObject ;RD _bg .PdfObject ;BS _bg .PdfObject ;LE _bg .PdfObject ;
};func (_ebfe *PdfReader )newPdfAnnotationPrinterMarkFromDict (_gcf *_bg .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_cfbd :=PdfAnnotationPrinterMark {};_cfbd .MN =_gcf .Get ("\u004d\u004e");return &_cfbd ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bgfe *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_baddec *PdfOutlineItem )GetContainingPdfObject ()_bg .PdfObject {return _baddec ._babc };func _beef (_faaa ,_cbeg string )string {if _ff .Contains (_faaa ,"\u002b"){_facf :=_ff .Split (_faaa ,"\u002b");if len (_facf )==2{_faaa =_facf [1];};};return _cbeg +"\u002b"+_faaa ;
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bg .PdfObject )(*PdfFont ,error ){return _bcfgg (fontObj ,true )};func (_abgg *PdfWriter )seekByName (_cgcfd _bg .PdfObject ,_fdacd []string ,_dgbfg string )([]_bg .PdfObject ,error ){_fa .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cgcfd );
var _fadecf []_bg .PdfObject ;if _baeca ,_cafdb :=_cgcfd .(*_bg .PdfIndirectObject );_cafdb {return _abgg .seekByName (_baeca .PdfObject ,_fdacd ,_dgbfg );};if _geda ,_cebab :=_cgcfd .(*_bg .PdfObjectStream );_cebab {return _abgg .seekByName (_geda .PdfObjectDictionary ,_fdacd ,_dgbfg );
};if _ccfddd ,_dcce :=_cgcfd .(*_bg .PdfObjectDictionary );_dcce {_fa .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_dgaac :=range _ccfddd .Keys (){_ggbca :=_ccfddd .Get (_dgaac );if string (_dgaac )==_dgbfg {_fadecf =append (_fadecf ,_ggbca );};for _ ,_bdbg :=range _fdacd {if string (_dgaac )==_bdbg {_fa .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_bdbg );
_ecfbd ,_gddac :=_abgg .seekByName (_ggbca ,_fdacd ,_dgbfg );if _gddac !=nil {return _fadecf ,_gddac ;};_fadecf =append (_fadecf ,_ecfbd ...);break ;};};};return _fadecf ,nil ;};return _fadecf ,nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bg .StreamEncoder )(*XObjectImage ,error ){_cdec :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cdec ,img ,cs ,encoder );};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_ebeae DefaultImageHandler )Read (reader _ab .Reader )(*Image ,error ){_bfege ,_ ,_cfebcb :=_gc .Decode (reader );if _cfebcb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cfebcb );
return nil ,_cfebcb ;};return _ebeae .NewImageFromGoImage (_bfege );};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ab .ReadSeeker )(*PdfReader ,error ){const _bbece ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _gdaeb (rs ,&ReaderOpts {},false ,_bbece );};func _aaeg ()string {_cedaec .Lock ();
defer _cedaec .Unlock ();if len (_fbab )> 0{return _fbab ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_feeda *Image )ToGoImage ()(_gc .Image ,error ){_fa .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_ddbba ,_bddbf :=_ggc .NewImage (int (_feeda .Width ),int (_feeda .Height ),int (_feeda .BitsPerComponent ),_feeda .ColorComponents ,_feeda .Data ,_feeda ._gcfag ,_feeda ._bcfbf );
if _bddbf !=nil {return nil ,_bddbf ;};return _ddbba ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_bcag *PdfFieldButton )IsPush ()bool {return _bcag .GetType ()==ButtonTypePush };

// XObjectType represents the type of an XObject.
type XObjectType int ;

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_aggc *PdfPageResources )GenerateXObjectName ()_bg .PdfObjectName {_ecaac :=1;for {_eacf :=_bg .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_ecaac ));if !_aggc .HasXObjectByName (*_eacf ){return *_eacf ;};_ecaac ++;};};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_dff :=NewPdfAction ();_fc :=&PdfActionNamed {};_fc .PdfAction =_dff ;_dff .SetContext (_fc );return _fc ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gd PdfModel ;Type _bg .PdfObject ;S _bg .PdfObject ;Next _bg .PdfObject ;_gfd *_bg .PdfIndirectObject ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_befd *Outline )ToPdfObject ()_bg .PdfObject {return _befd .ToPdfOutline ().ToPdfObject ()};var _ pdfFont =(*pdfFontType3 )(nil );

// ToPdfObject implements interface PdfModel.
func (_adbe *PdfAction )ToPdfObject ()_bg .PdfObject {_db :=_adbe ._gfd ;_ac :=_db .PdfObject .(*_bg .PdfObjectDictionary );_ac .Clear ();_ac .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ac .SetIfNotNil ("\u0053",_adbe .S );
_ac .SetIfNotNil ("\u004e\u0065\u0078\u0074",_adbe .Next );return _db ;};

// SetBorderWidth sets the style's border width.
func (_eadb *PdfBorderStyle )SetBorderWidth (width float64 ){_eadb .W =&width };

// AddImageResource adds an image to the XObject resources.
func (_eaed *PdfPage )AddImageResource (name _bg .PdfObjectName ,ximg *XObjectImage )error {var _effe *_bg .PdfObjectDictionary ;if _eaed .Resources .XObject ==nil {_effe =_bg .MakeDict ();_eaed .Resources .XObject =_effe ;}else {var _bbbfg bool ;_effe ,_bbbfg =(_eaed .Resources .XObject ).(*_bg .PdfObjectDictionary );
if !_bbbfg {return _fff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_effe .Set (name ,ximg .ToPdfObject ());return nil ;};

// SetContext sets the sub action (context).
func (_eef *PdfAction )SetContext (ctx PdfModel ){_eef ._gd =ctx };

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_ecffe ,_eccda :=_afcac (basefont );if _eccda !=nil {return nil ,_eccda ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_ecffe ._cbdd =_be .NewWinAnsiEncoder ();};return &PdfFont {_fcafc :&_ecffe },nil ;
};

// M returns the value of the magenta component of the color.
func (_dfee *PdfColorDeviceCMYK )M ()float64 {return _dfee [1]};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bg .PdfObject ;Flags _bg .PdfObject ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bg .PdfObject ;Name _bg .PdfObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bg .PdfObject ;LE _bg .PdfObject ;BS _bg .PdfObject ;IC _bg .PdfObject ;BE _bg .PdfObject ;IT _bg .PdfObject ;Measure _bg .PdfObject ;};

// Encoder returns the font's text encoder.
func (_fdcad *pdfFontSimple )Encoder ()_be .TextEncoder {if _fdcad ._cbdd !=nil {return _fdcad ._cbdd ;};if _fdcad ._dbfd !=nil {return _fdcad ._dbfd ;};_agda ,_ :=_be .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _agda ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_agfbe *PdfField )GetContext ()PdfModel {return _agfbe ._ccgd };func _badf (_eddeb []byte )bool {if len (_eddeb )< 4{return true ;};for _aagb :=range _eddeb [:4]{_fecgg :=rune (_aagb );if !_a .Is (_a .ASCII_Hex_Digit ,_fecgg )&&!_a .IsSpace (_fecgg ){return true ;
};};return false ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ecfd :=NewPdfAnnotation ();_egga :=&PdfAnnotationProjection {};_egga .PdfAnnotation =_ecfd ;_egga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecfd .SetContext (_egga );return _egga ;};

// ToPdfObject implements interface PdfModel.
func (_dade *PdfAnnotationTrapNet )ToPdfObject ()_bg .PdfObject {_dade .PdfAnnotation .ToPdfObject ();_cebb :=_dade ._cdcf ;_feeb :=_cebb .PdfObject .(*_bg .PdfObjectDictionary );_feeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cebb ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bg .PdfObjectStream )(*XObjectImage ,error ){_cfccg :=&XObjectImage {};_cfccg ._dbged =stream ;_cggdb :=*(stream .PdfObjectDictionary );_cfceg ,_abded :=_bg .NewEncoderFromStream (stream );if _abded !=nil {return nil ,_abded ;
};_cfccg .Filter =_cfceg ;if _adgcd :=_bg .TraceToDirectObject (_cggdb .Get ("\u0057\u0069\u0064t\u0068"));_adgcd !=nil {_aefba ,_bgcdb :=_adgcd .(*_bg .PdfObjectInteger );if !_bgcdb {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_gdaga :=int64 (*_aefba );_cfccg .Width =&_gdaga ;}else {return nil ,_fff .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fgaee :=_bg .TraceToDirectObject (_cggdb .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_fgaee !=nil {_gdgeb ,_eecab :=_fgaee .(*_bg .PdfObjectInteger );if !_eecab {return nil ,_fff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ggfgd :=int64 (*_gdgeb );
_cfccg .Height =&_ggfgd ;}else {return nil ,_fff .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gfdfa :=_bg .TraceToDirectObject (_cggdb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_gfdfa !=nil {_fbbgf ,_gdcec :=NewPdfColorspaceFromPdfObject (_gfdfa );if _gdcec !=nil {return nil ,_gdcec ;};_cfccg .ColorSpace =_fbbgf ;}else {_fa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_cfccg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _gcdcd :=_bg .TraceToDirectObject (_cggdb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_gcdcd !=nil {_febae ,_fcgbf :=_gcdcd .(*_bg .PdfObjectInteger );
if !_fcgbf {return nil ,_fff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ffgef :=int64 (*_febae );_cfccg .BitsPerComponent =&_ffgef ;};_cfccg .Intent =_cggdb .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_cfccg .ImageMask =_cggdb .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_cfccg .Mask =_cggdb .Get ("\u004d\u0061\u0073\u006b");_cfccg .Decode =_cggdb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_cfccg .Interpolate =_cggdb .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_cfccg .Alternatives =_cggdb .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_cfccg .SMask =_cggdb .Get ("\u0053\u004d\u0061s\u006b");_cfccg .SMaskInData =_cggdb .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_cfccg .Matte =_cggdb .Get ("\u004d\u0061\u0074t\u0065");_cfccg .Name =_cggdb .Get ("\u004e\u0061\u006d\u0065");_cfccg .StructParent =_cggdb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cfccg .ID =_cggdb .Get ("\u0049\u0044");
_cfccg .OPI =_cggdb .Get ("\u004f\u0050\u0049");_cfccg .Metadata =_cggdb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cfccg .OC =_cggdb .Get ("\u004f\u0043");_cfccg .Stream =stream .Stream ;return _cfccg ,nil ;};

// RemovePage removes a page by number.
func (_bbbe *PdfAppender )RemovePage (pageNum int ){_fdcc :=pageNum -1;_bbbe ._dgec =append (_bbbe ._dgec [0:_fdcc ],_bbbe ._dgec [pageNum :]...);};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_feea *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_ccda :=func (_fbdg float64 )float64 {if _fbdg >=6.0/29{return _fbdg *_fbdg *_fbdg ;};return 108.0/841*(_fbdg -4/29);};_efba :=img ._bcfbf ;if len (_efba )!=6{_fa .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_efba =_feea .DecodeArray ();};_dfcf :=_dd .NewReader (img .getBase ());_abcf :=_ggc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._gcfag ,img ._bcfbf );_feag :=_dd .NewWriter (_abcf );_ecgc :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;
_abdg :=make ([]uint32 ,3);var (_bfgc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ccfd ,_cebbd ,_ebffc float64 ;);for {_bfgc =_dfcf .ReadSamples (_abdg );if _bfgc ==_ab .EOF {break ;}else if _bfgc !=nil {return img ,_bfgc ;};Ls =float64 (_abdg [0])/_ecgc ;As =float64 (_abdg [1])/_ecgc ;
Bs =float64 (_abdg [2])/_ecgc ;Ls =_ggc .LinearInterpolate (Ls ,0.0,1.0,_efba [0],_efba [1]);As =_ggc .LinearInterpolate (As ,0.0,1.0,_efba [2],_efba [3]);Bs =_ggc .LinearInterpolate (Bs ,0.0,1.0,_efba [4],_efba [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_feea .WhitePoint [0]*_ccda (L );Y =_feea .WhitePoint [1]*_ccda (M );Z =_feea .WhitePoint [2]*_ccda (N );_ccfd =3.240479*X +-1.537150*Y +-0.498535*Z ;_cebbd =-0.969256*X +1.875992*Y +0.041556*Z ;_ebffc =0.055648*X +-0.204043*Y +1.057311*Z ;
_ccfd =_dc .Min (_dc .Max (_ccfd ,0),1.0);_cebbd =_dc .Min (_dc .Max (_cebbd ,0),1.0);_ebffc =_dc .Min (_dc .Max (_ebffc ,0),1.0);_abdg [0]=uint32 (_ccfd *_ecgc );_abdg [1]=uint32 (_cebbd *_ecgc );_abdg [2]=uint32 (_ebffc *_ecgc );if _bfgc =_feag .WriteSamples (_abdg );
_bfgc !=nil {return img ,_bfgc ;};};return _bbace (&_abcf ),nil ;};

// HasExtGState checks if ExtGState name is available.
func (_fcbbg *PdfPage )HasExtGState (name _bg .PdfObjectName )bool {if _fcbbg .Resources ==nil {return false ;};if _fcbbg .Resources .ExtGState ==nil {return false ;};_ecedb ,_cadd :=_bg .TraceToDirectObject (_fcbbg .Resources .ExtGState ).(*_bg .PdfObjectDictionary );
if !_cadd {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bg .TraceToDirectObject (_fcbbg .Resources .ExtGState ));
return false ;};_gbdaa :=_ecedb .Get (name );_dcadc :=_gbdaa !=nil ;return _dcadc ;};func _abgdb (_bbfea []byte )[]byte {const _edbg =52845;const _fbcfb =22719;_ddbe :=55665;for _ ,_gcdbc :=range _bbfea [:4]{_ddbe =(int (_gcdbc )+_ddbe )*_edbg +_fbcfb ;
};_cacg :=make ([]byte ,len (_bbfea )-4);for _bdbed ,_egbd :=range _bbfea [4:]{_cacg [_bdbed ]=byte (int (_egbd )^_ddbe >>8);_ddbe =(int (_egbd )+_ddbe )*_edbg +_fbcfb ;};return _cacg ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bg .PdfObjectArray )(*PdfRectangle ,error ){_abdfb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _fdea error ;_abdfb .Llx ,_fdea =_bg .GetNumberAsFloat (arr .Get (0));if _fdea !=nil {return nil ,_fdea ;};_abdfb .Lly ,_fdea =_bg .GetNumberAsFloat (arr .Get (1));if _fdea !=nil {return nil ,_fdea ;};_abdfb .Urx ,_fdea =_bg .GetNumberAsFloat (arr .Get (2));
if _fdea !=nil {return nil ,_fdea ;};_abdfb .Ury ,_fdea =_bg .GetNumberAsFloat (arr .Get (3));if _fdea !=nil {return nil ,_fdea ;};return &_abdfb ,nil ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_gede :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_gede .N =N ;return _gede ,nil ;};func (_agga *pdfFontSimple )getFontEncoding ()(_eeba string ,_gbfgf map[_be .CharCode ]_be .GlyphName ,_fgggd error ){_eeba ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _gbga ,_bedf :=_agece [_agga ._ffgfd ];
_bedf {_eeba =_gbga ;}else if _agga .fontFlags ()&_gabfg !=0{for _gefe ,_bgbd :=range _agece {if _ff .Contains (_agga ._ffgfd ,_gefe ){_eeba =_bgbd ;break ;};};};if _agga .Encoding ==nil {return _eeba ,nil ,nil ;};switch _abba :=_agga .Encoding .(type ){case *_bg .PdfObjectName :return string (*_abba ),nil ,nil ;
case *_bg .PdfObjectDictionary :_bdff ,_gaafc :=_bg .GetName (_abba .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _gaafc {_eeba =_bdff .String ();};if _faeef :=_abba .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_faeef !=nil {_cecf ,_ebcbe :=_bg .GetArray (_faeef );if !_ebcbe {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_abba ,_abba .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bg .ErrTypeError ;};_gbfgf ,_fgggd =_be .FromFontDifferences (_cecf );};return _eeba ,_gbfgf ,_fgggd ;default:_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_agga .Encoding ,_agga .Encoding );
return "",nil ,_bg .ErrTypeError ;};};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_caeb :=NewPdfAnnotation ();_ecfb :=&PdfAnnotationWidget {};_ecfb .PdfAnnotation =_caeb ;_caeb .SetContext (_ecfb );return _ecfb ;};func (_cfga *PdfReader )newPdfAnnotationLinkFromDict (_ceb *_bg .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_dea :=PdfAnnotationLink {};
_dea .A =_ceb .Get ("\u0041");_dea .Dest =_ceb .Get ("\u0044\u0065\u0073\u0074");_dea .H =_ceb .Get ("\u0048");_dea .PA =_ceb .Get ("\u0050\u0041");_dea .QuadPoints =_ceb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dea .BS =_ceb .Get ("\u0042\u0053");
return &_dea ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_effgg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _effgg .RunesToCharcodeBytes ([]rune (str ));};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gfffb *PdfPageResources )GetXObjectByName (keyName _bg .PdfObjectName )(*_bg .PdfObjectStream ,XObjectType ){if _gfffb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_ffbbc ,_bcdc :=_bg .TraceToDirectObject (_gfffb .XObject ).(*_bg .PdfObjectDictionary );
if !_bcdc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bg .TraceToDirectObject (_gfffb .XObject ));
return nil ,XObjectTypeUndefined ;};if _efdc :=_ffbbc .Get (keyName );_efdc !=nil {_ggeb ,_abbfb :=_bg .GetStream (_efdc );if !_abbfb {_fa .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_efdc );
return nil ,XObjectTypeUndefined ;};_eggace :=_ggeb .PdfObjectDictionary ;_bcga ,_abbfb :=_bg .TraceToDirectObject (_eggace .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bg .PdfObjectName );if !_abbfb {_fa .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_eggace .String ());
return nil ,XObjectTypeUndefined ;};if *_bcga =="\u0049\u006d\u0061g\u0065"{return _ggeb ,XObjectTypeImage ;}else if *_bcga =="\u0046\u006f\u0072\u006d"{return _ggeb ,XObjectTypeForm ;}else if *_bcga =="\u0050\u0053"{return _ggeb ,XObjectTypePS ;}else {_fa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bcga );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_gbbcd *Image )ToJBIG2Image ()(*_bg .JBIG2Image ,error ){_geea ,_defe :=_gbbcd .ToGoImage ();if _defe !=nil {return nil ,_defe ;};return _bg .GoImageToJBIG2 (_geea ,_bg .JB2ImageAutoThreshold );};

// ToPdfObject implements interface PdfModel.
func (_ggdeaa *PdfAnnotationRedact )ToPdfObject ()_bg .PdfObject {_ggdeaa .PdfAnnotation .ToPdfObject ();_edfg :=_ggdeaa ._cdcf ;_edfb :=_edfg .PdfObject .(*_bg .PdfObjectDictionary );_ggdeaa .PdfAnnotationMarkup .appendToPdfDictionary (_edfb );_edfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_edfb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ggdeaa .QuadPoints );_edfb .SetIfNotNil ("\u0049\u0043",_ggdeaa .IC );_edfb .SetIfNotNil ("\u0052\u004f",_ggdeaa .RO );_edfb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ggdeaa .OverlayText );
_edfb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ggdeaa .Repeat );_edfb .SetIfNotNil ("\u0044\u0041",_ggdeaa .DA );_edfb .SetIfNotNil ("\u0051",_ggdeaa .Q );return _edfg ;};

// R returns the value of the red component of the color.
func (_bcab *PdfColorDeviceRGB )R ()float64 {return _bcab [0]};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fafba int ,_bfeae *PdfPage );

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_afge *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_geef :=_afge .actualFont ();if _geef ==nil {_fa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_afge ._fcafc );
return _adb .CharMetrics {},false ;};if _cggeb ,_gdbb :=_geef .GetRuneMetrics (r );_gdbb {return _cggeb ,true ;};if _fcfe ,_ffebe :=_afge .GetFontDescriptor ();_ffebe ==nil &&_fcfe !=nil {return _adb .CharMetrics {Wx :_fcfe ._fcfga },true ;};_fa .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_afge );
return _adb .CharMetrics {},false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_cacf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffec :=vals [0];if _ffec < 0.0||_ffec > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_edabg :=vals [1];if _edabg < 0.0||_edabg > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecgdb :=vals [2];if _ecgdb < 0.0||_ecgdb > 1.0{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_abdf :=NewPdfColorCalRGB (_ffec ,_edabg ,_ecgdb );return _abdf ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_aece *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fff .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_acfb ,_faee :=_ggc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gcfag ,img ._bcfbf );if _faee !=nil {return img ,_faee ;};_cfeg ,_faee :=_ggc .GrayConverter .Convert (_acfb );if _faee !=nil {return img ,_faee ;
};return _bbace (_cfeg .Base ()),nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bg .PdfObjectInteger ;BitsPerComponent *_bg .PdfObjectInteger ;BitsPerFlag *_bg .PdfObjectInteger ;Decode *_bg .PdfObjectArray ;Function []PdfFunction ;};

// K returns the value of the key component of the color.
func (_bbaf *PdfColorDeviceCMYK )K ()float64 {return _bbaf [3]};func _cbe (_eceg _bg .PdfObject )(*PdfColorspaceICCBased ,error ){_bbag :=&PdfColorspaceICCBased {};if _fecb ,_dabgb :=_eceg .(*_bg .PdfIndirectObject );_dabgb {_bbag ._fafbc =_fecb ;};_eceg =_bg .TraceToDirectObject (_eceg );
_abac ,_cbed :=_eceg .(*_bg .PdfObjectArray );if !_cbed {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abac .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_eceg =_bg .TraceToDirectObject (_abac .Get (0));_afce ,_cbed :=_eceg .(*_bg .PdfObjectName );if !_cbed {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_afce !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_eceg =_abac .Get (1);
_edea ,_cbed :=_bg .GetStream (_eceg );if !_cbed {_fa .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_eceg );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fcgc :=_edea .PdfObjectDictionary ;_ggee ,_cbed :=_fcgc .Get ("\u004e").(*_bg .PdfObjectInteger );
if !_cbed {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ggee !=1&&*_ggee !=3&&*_ggee !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_bbag .N =int (*_ggee );if _dcfg :=_fcgc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dcfg !=nil {_agcf ,_beed :=NewPdfColorspaceFromPdfObject (_dcfg );if _beed !=nil {return nil ,_beed ;};_bbag .Alternate =_agcf ;};if _acac :=_fcgc .Get ("\u0052\u0061\u006eg\u0065");
_acac !=nil {_acac =_bg .TraceToDirectObject (_acac );_fdfe ,_ddfd :=_acac .(*_bg .PdfObjectArray );if !_ddfd {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _fdfe .Len ()!=2*_bbag .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_babb ,_ffaf :=_fdfe .GetAsFloat64Slice ();if _ffaf !=nil {return nil ,_ffaf ;};_bbag .Range =_babb ;}else {_bbag .Range =make ([]float64 ,2*_bbag .N );for _fbde :=0;_fbde < _bbag .N ;_fbde ++{_bbag .Range [2*_fbde ]=0.0;_bbag .Range [2*_fbde +1]=1.0;
};};if _fcgb :=_fcgc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fcgb !=nil {_ebcbc ,_ebgf :=_fcgb .(*_bg .PdfObjectStream );if !_ebgf {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_bbag .Metadata =_ebcbc ;};_agbd ,_cdfa :=_bg .DecodeStream (_edea );if _cdfa !=nil {return nil ,_cdfa ;};_bbag .Data =_agbd ;_bbag ._caba =_edea ;return _bbag ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_debeb *Image )GetSamples ()[]uint32 {_fgagb :=_dd .ResampleBytes (_debeb .Data ,int (_debeb .BitsPerComponent ));if _debeb .BitsPerComponent < 8{_fgagb =_debeb .samplesTrimPadding (_fgagb );};_fbedd :=int (_debeb .Width )*int (_debeb .Height )*_debeb .ColorComponents ;
if len (_fgagb )< _fbedd {_fa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fgagb ),_fbedd );
return _fgagb ;}else if len (_fgagb )> _fbedd {_fa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fgagb ),_fbedd );
_fgagb =_fgagb [:_fbedd ];};return _fgagb ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fab :=NewPdfAction ();_ecca :=&PdfActionLaunch {};_ecca .PdfAction =_fab ;_fab .SetContext (_ecca );return _ecca ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_eeaa byte )byte ;func (_eeaaa *PdfWriter )copyObject (_afecc _bg .PdfObject ,_gfefg map[_bg .PdfObject ]_bg .PdfObject ,_efeega map[_bg .PdfObject ]struct{},_aadae bool )_bg .PdfObject {_bbgfc :=!_eeaaa ._efbcc &&_efeega !=nil ;
if _fcabb ,_gfeb :=_gfefg [_afecc ];_gfeb {if _bbgfc &&!_aadae {delete (_efeega ,_afecc );};return _fcabb ;};_cedgf :=_afecc ;switch _cdbb :=_afecc .(type ){case *_bg .PdfObjectArray :_fegfc :=_bg .MakeArray ();_cedgf =_fegfc ;_gfefg [_afecc ]=_cedgf ;
for _ ,_ccfbg :=range _cdbb .Elements (){_fegfc .Append (_eeaaa .copyObject (_ccfbg ,_gfefg ,_efeega ,_aadae ));};case *_bg .PdfObjectStreams :_cdeg :=&_bg .PdfObjectStreams {PdfObjectReference :_cdbb .PdfObjectReference };_cedgf =_cdeg ;_gfefg [_afecc ]=_cedgf ;
for _ ,_ebccb :=range _cdbb .Elements (){_cdeg .Append (_eeaaa .copyObject (_ebccb ,_gfefg ,_efeega ,_aadae ));};case *_bg .PdfObjectStream :_dgcbgc :=&_bg .PdfObjectStream {Stream :_cdbb .Stream ,PdfObjectReference :_cdbb .PdfObjectReference };_cedgf =_dgcbgc ;
_gfefg [_afecc ]=_cedgf ;_dgcbgc .PdfObjectDictionary =_eeaaa .copyObject (_cdbb .PdfObjectDictionary ,_gfefg ,_efeega ,_aadae ).(*_bg .PdfObjectDictionary );case *_bg .PdfObjectDictionary :var _dcbfb bool ;if _bbgfc &&!_aadae {if _begb ,_ :=_bg .GetNameVal (_cdbb .Get ("\u0054\u0079\u0070\u0065"));
_begb =="\u0050\u0061\u0067\u0065"{_ ,_fbag :=_eeaaa ._cdfde [_cdbb ];_aadae =!_fbag ;_dcbfb =_aadae ;};};_aadfc :=_bg .MakeDict ();_cedgf =_aadfc ;_gfefg [_afecc ]=_cedgf ;for _ ,_aaef :=range _cdbb .Keys (){_aadfc .Set (_aaef ,_eeaaa .copyObject (_cdbb .Get (_aaef ),_gfefg ,_efeega ,_aadae ));
};if _dcbfb {_cedgf =_bg .MakeNull ();_aadae =false ;};case *_bg .PdfIndirectObject :_fgec :=&_bg .PdfIndirectObject {PdfObjectReference :_cdbb .PdfObjectReference };_cedgf =_fgec ;_gfefg [_afecc ]=_cedgf ;_fgec .PdfObject =_eeaaa .copyObject (_cdbb .PdfObject ,_gfefg ,_efeega ,_aadae );
case *_bg .PdfObjectString :_dffec :=*_cdbb ;_cedgf =&_dffec ;_gfefg [_afecc ]=_cedgf ;case *_bg .PdfObjectName :_faeeg :=*_cdbb ;_cedgf =&_faeeg ;_gfefg [_afecc ]=_cedgf ;case *_bg .PdfObjectNull :_cedgf =_bg .MakeNull ();_gfefg [_afecc ]=_cedgf ;case *_bg .PdfObjectInteger :_bbafe :=*_cdbb ;
_cedgf =&_bbafe ;_gfefg [_afecc ]=_cedgf ;case *_bg .PdfObjectReference :_gdee :=*_cdbb ;_cedgf =&_gdee ;_gfefg [_afecc ]=_cedgf ;case *_bg .PdfObjectFloat :_dafg :=*_cdbb ;_cedgf =&_dafg ;_gfefg [_afecc ]=_cedgf ;case *_bg .PdfObjectBool :_fgbga :=*_cdbb ;
_cedgf =&_fgbga ;_gfefg [_afecc ]=_cedgf ;case *pdfSignDictionary :_ggcde :=&pdfSignDictionary {PdfObjectDictionary :_bg .MakeDict (),_gdagf :_cdbb ._gdagf ,_eecf :_cdbb ._eecf };_cedgf =_ggcde ;_gfefg [_afecc ]=_cedgf ;for _ ,_dfdcf :=range _cdbb .Keys (){_ggcde .Set (_dfdcf ,_eeaaa .copyObject (_cdbb .Get (_dfdcf ),_gfefg ,_efeega ,_aadae ));
};default:_fa .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_afecc );
};if _bbgfc &&_aadae {_efeega [_afecc ]=struct{}{};};return _cedgf ;};func (_aagec *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _aadd []*PdfFieldSignature ;for _ ,_fggcf :=range _aagec .AllFields (){switch _ffgcb :=_fggcf .GetContext ().(type ){case *PdfFieldSignature :_efdf :=_ffgcb ;
_aadd =append (_aadd ,_efdf );};};return _aadd ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_cgcf *_bg .PdfIndirectObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_ggd :=NewPdfAction ();_bff :=&PdfActionJavaScript {};_bff .PdfAction =_ggd ;_ggd .SetContext (_bff );return _bff ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bg .PdfObject )(PdfColorspace ,error ){var _bcde *_bg .PdfIndirectObject ;var _deae *_bg .PdfObjectName ;var _bgfc *_bg .PdfObjectArray ;if _cdf ,_bgb :=obj .(*_bg .PdfIndirectObject );_bgb {_bcde =_cdf ;};obj =_bg .TraceToDirectObject (obj );
switch _gcde :=obj .(type ){case *_bg .PdfObjectArray :_bgfc =_gcde ;case *_bg .PdfObjectName :_deae =_gcde ;};if _deae !=nil {switch *_deae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_deae );return nil ,_agbef ;};};if _bgfc !=nil &&_bgfc .Len ()> 0{var _fefd _bg .PdfObject =_bcde ;
if _bcde ==nil {_fefd =_bgfc ;};if _facc ,_cabc :=_bg .GetName (_bgfc .Get (0));_cabc {switch _facc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bgfc .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bgfc .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bgfc .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fba (_fefd );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _fcaa (_fefd );
case "\u004c\u0061\u0062":return _fgfde (_fefd );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cbe (_fefd );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bfea (_fefd );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _fdfb (_fefd );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _cgdc (_fefd );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cegg (_fefd );default:_fa .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_facc );
};};};_fa .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_ddce *PdfFilespec )getDict ()*_bg .PdfObjectDictionary {if _abbfd ,_agee :=_ddce ._cdfaf .(*_bg .PdfIndirectObject );_agee {_cfefg ,_eabc :=_abbfd .PdfObject .(*_bg .PdfObjectDictionary );if !_eabc {return nil ;};return _cfefg ;
}else if _gbgc ,_ecdd :=_ddce ._cdfaf .(*_bg .PdfObjectDictionary );_ecdd {return _gbgc ;}else {_fa .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_ddce ._cdfaf );
return nil ;};};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_cccb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bg .PdfObject )(PdfColor ,error ){if _cccb .Alternate ==nil {if _cccb .N ==1{_eebfe :=NewPdfColorspaceDeviceGray ();return _eebfe .ColorFromPdfObjects (objects );}else if _cccb .N ==3{_dagbc :=NewPdfColorspaceDeviceRGB ();
return _dagbc .ColorFromPdfObjects (objects );}else if _cccb .N ==4{_eafa :=NewPdfColorspaceDeviceCMYK ();return _eafa .ColorFromPdfObjects (objects );}else {return nil ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cccb .Alternate .ColorFromPdfObjects (objects );};func _efafg (_geab _bg .PdfObject )(map[_be .CharCode ]float64 ,error ){if _geab ==nil {return nil ,nil ;};_bddf ,_fcfdf :=_bg .GetArray (_geab );if !_fcfdf {return nil ,nil ;};_fgeg :=map[_be .CharCode ]float64 {};
_bbged :=_bddf .Len ();for _ecggb :=0;_ecggb < _bbged -1;_ecggb ++{_gcef :=_bg .TraceToDirectObject (_bddf .Get (_ecggb ));_bbadc ,_ffdgc :=_bg .GetIntVal (_gcef );if !_ffdgc {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ecggb ,_gcef );
};_ecggb ++;if _ecggb > _bbged -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bddf );};_dbcad :=_bg .TraceToDirectObject (_bddf .Get (_ecggb ));
switch _dbcad .(type ){case *_bg .PdfObjectArray :_fbdf ,_ :=_bg .GetArray (_dbcad );if _eabcd ,_ddgac :=_fbdf .ToFloat64Array ();_ddgac ==nil {for _aadbb :=0;_aadbb < len (_eabcd );_aadbb ++{_fgeg [_be .CharCode (_bbadc +_aadbb )]=_eabcd [_aadbb ];};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ecggb ,_dbcad );
};case *_bg .PdfObjectInteger :_bagff ,_bbgaa :=_bg .GetIntVal (_dbcad );if !_bbgaa {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ecggb ,_dbcad );
};_ecggb ++;if _ecggb > _bbged -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bddf );};_fbdgg :=_bddf .Get (_ecggb );_cecac ,_cdab :=_bg .GetNumberAsFloat (_fbdgg );
if _cdab !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ecggb ,_fbdgg );};for _baad :=_bbadc ;_baad <=_bagff ;
_baad ++{_fgeg [_be .CharCode (_baad )]=_cecac ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ecggb ,_dbcad );
};};return _fgeg ,nil ;};func (_egagg fontCommon )coreString ()string {_dcbdb :="";if _egagg ._abcd !=nil {_dcbdb =_egagg ._abcd .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_egagg ._ccbf ,_egagg ._ffgfd ,_egagg ._babbc ,_egagg ._gaaad ,_egagg ._ageeb !=nil ,_egagg .fontFlags (),_dcbdb );
};

// GetNumComponents returns the number of color components.
func (_aaeac *PdfColorspaceICCBased )GetNumComponents ()int {return _aaeac .N };

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_dcf PdfModel ;Rect _bg .PdfObject ;Contents _bg .PdfObject ;P _bg .PdfObject ;NM _bg .PdfObject ;M _bg .PdfObject ;F _bg .PdfObject ;AP _bg .PdfObject ;AS _bg .PdfObject ;Border _bg .PdfObject ;C _bg .PdfObject ;StructParent _bg .PdfObject ;
OC _bg .PdfObject ;_cdcf *_bg .PdfIndirectObject ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_fgee *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bg .GetNumberAsFloat (_fgee .Ascent );};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bg .PdfObjectString ;Q *_bg .PdfObjectInteger ;DS *_bg .PdfObjectString ;RV _bg .PdfObject ;MaxLen *_bg .PdfObjectInteger ;};

// Val returns the value of the color.
func (_fddc *PdfColorCalGray )Val ()float64 {return float64 (*_fddc )};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_aaa *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_aaa .updateObjectsDeep (dss .ToPdfObject (),nil );};_aaa ._gaac =dss ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_cbagc *PdfPattern )IsTiling ()bool {return _cbagc .PatternType ==1};

// IsEncrypted returns true if the PDF file is encrypted.
func (_faabg *PdfReader )IsEncrypted ()(bool ,error ){return _faabg ._gbgb .IsEncrypted ()};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_aabf *PdfPageResources )AddExtGState (gsName _bg .PdfObjectName ,gsDict _bg .PdfObject )error {if _aabf .ExtGState ==nil {_aabf .ExtGState =_bg .MakeDict ();};_ebeaa :=_aabf .ExtGState ;_gfgga ,_gdafe :=_bg .TraceToDirectObject (_ebeaa ).(*_bg .PdfObjectDictionary );
if !_gdafe {_fa .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ebeaa ,_bg .TraceToDirectObject (_ebeaa ));
return _bg .ErrTypeError ;};_gfgga .Set (gsName ,gsDict );return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dfcca pdfCIDFontType0 )GetRuneMetrics (r rune )(_adb .CharMetrics ,bool ){return _adb .CharMetrics {Wx :_dfcca ._bfdcg },true ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bfacb ,_gaae :=NewStandard14Font (basefont );if _gaae !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bfacb ;};

// GetContentStream returns the pattern cell's content stream
func (_dcdg *PdfTilingPattern )GetContentStream ()([]byte ,error ){_dddbe ,_ ,_gaga :=_dcdg .GetContentStreamWithEncoder ();return _dddbe ,_gaga ;};var _gffgg =_aa .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");


// B returns the value of the blue component of the color.
func (_dbebg *PdfColorDeviceRGB )B ()float64 {return _dbebg [2]};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_ggfe :=PdfWriter {};_ggfe ._eccf =map[_bg .PdfObject ]struct{}{};_ggfe ._fdeeb =[]_bg .PdfObject {};_ggfe ._gfecc =map[_bg .PdfObject ][]*_bg .PdfObjectDictionary {};_ggfe ._dcdefd =map[_bg .PdfObject ]struct{}{};_ggfe ._afee =1;
_ggfe ._ceced =3;_fcece :=_bg .MakeDict ();_ebgcfd :=[]struct{_fface _bg .PdfObjectName ;_bcfgb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_edgf ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_aaeg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_baffa ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_dgff ()},{"\u0054\u0069\u0074l\u0065",_ebcege ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bfaea ()}};
for _ ,_adeed :=range _ebgcfd {if _adeed ._bcfgb !=""{_fcece .Set (_adeed ._fface ,_bg .MakeString (_adeed ._bcfgb ));};};if _bdcdf :=_fdbeb ();!_bdcdf .IsZero (){if _gfbd ,_cgacf :=NewPdfDateFromTime (_bdcdf );_cgacf ==nil {_fcece .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gfbd .ToPdfObject ());
};};if _ccbbb :=_gddba ();!_ccbbb .IsZero (){if _gaeg ,_ccfdd :=NewPdfDateFromTime (_ccbbb );_ccfdd ==nil {_fcece .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gaeg .ToPdfObject ());};};_bgee :=_bg .PdfIndirectObject {};_bgee .PdfObject =_fcece ;_ggfe ._cedg =&_bgee ;
_ggfe .addObject (&_bgee );_ddffg :=_bg .PdfIndirectObject {};_cfafd :=_bg .MakeDict ();_cfafd .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ddffg .PdfObject =_cfafd ;_ggfe ._cdbe =&_ddffg ;_ggfe .addObject (_ggfe ._cdbe );
_caaeg ,_bcdf :=_bfgde ("\u0077");if _bcdf !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bcdf );};_ggfe ._aceca =_caaeg ;_adeag :=_bg .PdfIndirectObject {};_ffaccaf :=_bg .MakeDict ();_ffaccaf .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0050\u0061\u0067e\u0073"));
_acdeg :=_bg .PdfObjectArray {};_ffaccaf .Set ("\u004b\u0069\u0064\u0073",&_acdeg );_ffaccaf .Set ("\u0043\u006f\u0075n\u0074",_bg .MakeInteger (0));_adeag .PdfObject =_ffaccaf ;_ggfe ._bbadca =&_adeag ;_ggfe ._cdfde =map[_bg .PdfObject ]struct{}{};_ggfe .addObject (_ggfe ._bbadca );
_cfafd .Set ("\u0050\u0061\u0067e\u0073",&_adeag );_ggfe ._gcff =_cfafd ;_fa .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ddffg );return _ggfe ;};

// GetSubFilter returns SubFilter value or empty string.
func (_dgcd *pdfSignDictionary )GetSubFilter ()string {_dafcf :=_dgcd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dafcf ==nil {return "";};if _dfaeb ,_deage :=_bg .GetNameVal (_dafcf );_deage {return _dfaeb ;};return "";};func (_bbf fontCommon )isCIDFont ()bool {if _bbf ._ccbf ==""{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbf );
};_dedbd :=false ;switch _bbf ._ccbf {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dedbd =true ;};_fa .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_dedbd ,_bbf );
return _dedbd ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_dfaef *Outline )ToPdfOutline ()*PdfOutline {_acga :=NewPdfOutline ();var _ggcgf []*PdfOutlineItem ;var _afabf int64 ;var _aacc *PdfOutlineItem ;for _ ,_fgae :=range _dfaef .Entries {_caeef ,_bcgd :=_fgae .ToPdfOutlineItem ();_caeef .Parent =&_acga .PdfOutlineTreeNode ;
if _aacc !=nil {_aacc .Next =&_caeef .PdfOutlineTreeNode ;_caeef .Prev =&_aacc .PdfOutlineTreeNode ;};_ggcgf =append (_ggcgf ,_caeef );_afabf +=_bcgd ;_aacc =_caeef ;};_facg :=int64 (len (_ggcgf ));_afabf +=_facg ;if _facg > 0{_acga .First =&_ggcgf [0].PdfOutlineTreeNode ;
_acga .Last =&_ggcgf [_facg -1].PdfOutlineTreeNode ;_acga .Count =&_afabf ;};return _acga ;};func _cfgfd (_eeffe *XObjectImage )error {if _eeffe .SMask ==nil {return nil ;};_ecgee ,_befc :=_eeffe .SMask .(*_bg .PdfObjectStream );if !_befc {_fa .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bg .ErrTypeError ;};_bacda :=_ecgee .PdfObjectDictionary ;_ddeca :=_bacda .Get ("\u004d\u0061\u0074t\u0065");if _ddeca ==nil {return nil ;};_fbded ,_edda :=_ccdfc (_ddeca .(*_bg .PdfObjectArray ));if _edda !=nil {return _edda ;};_acedc :=_bg .MakeArrayFromFloats ([]float64 {_fbded });
_bacda .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_acedc );return nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bbdc *_bg .PdfObjectDictionary ;_bggaf *_bg .PdfIndirectObject ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_ccad *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_eadcf :=_dd .NewReader (img .getBase ());_fgaae :=_ggc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._gcfag ,img ._bcfbf );
_fggcb :=_dd .NewWriter (_fgaae );_dgdcc :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_ceeb :=_ccad .GetNumComponents ();_ebae :=make ([]uint32 ,_ceeb );_daeab :=make ([]float64 ,_ceeb );for {_baddb :=_eadcf .ReadSamples (_ebae );if _baddb ==_ab .EOF {break ;
}else if _baddb !=nil {return img ,_baddb ;};for _bcgeg :=0;_bcgeg < _ceeb ;_bcgeg ++{_bfaefc :=float64 (_ebae [_bcgeg ])/_dgdcc ;_daeab [_bcgeg ]=_bfaefc ;};_eabf ,_baddb :=_ccad .TintTransform .Evaluate (_daeab );if _baddb !=nil {return img ,_baddb ;
};for _ ,_acff :=range _eabf {_acff =_dc .Min (_dc .Max (0,_acff ),1.0);if _baddb =_fggcb .WriteSample (uint32 (_acff *_dgdcc ));_baddb !=nil {return img ,_baddb ;};};};return _ccad .AlternateSpace .ImageToRGB (_bbace (&_fgaae ));};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_dafd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_eece ,_cfegc :=color .(*PdfColorDeviceCMYK );if !_cfegc {_fa .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdaf :=_eece .C ();_cfede :=_eece .M ();_fdca :=_eece .Y ();_eegc :=_eece .K ();_fdaf =_fdaf *(1-_eegc )+_eegc ;_cfede =_cfede *(1-_eegc )+_eegc ;
_fdca =_fdca *(1-_eegc )+_eegc ;_dddb :=1-_fdaf ;_bbgd :=1-_cfede ;_gcggg :=1-_fdca ;return NewPdfColorDeviceRGB (_dddb ,_bbgd ,_gcggg ),nil ;};func _bfgde (_acbb string )(string ,error ){var _daeaa _bb .Buffer ;_daeaa .WriteString (_acbb );_gebd :=make ([]byte ,8+16);
_bgbbb :=_ecg .Now ().UTC ().UnixNano ();_gg .BigEndian .PutUint64 (_gebd ,uint64 (_bgbbb ));_ ,_agabf :=_f .Read (_gebd [8:]);if _agabf !=nil {return "",_agabf ;};_daeaa .WriteString (_g .EncodeToString (_gebd ));return _daeaa .String (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdae *PdfAnnotationPolygon )ToPdfObject ()_bg .PdfObject {_gdae .PdfAnnotation .ToPdfObject ();_fabe :=_gdae ._cdcf ;_aaeb :=_fabe .PdfObject .(*_bg .PdfObjectDictionary );_gdae .PdfAnnotationMarkup .appendToPdfDictionary (_aaeb );_aaeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_aaeb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gdae .Vertices );_aaeb .SetIfNotNil ("\u004c\u0045",_gdae .LE );_aaeb .SetIfNotNil ("\u0042\u0053",_gdae .BS );_aaeb .SetIfNotNil ("\u0049\u0043",_gdae .IC );_aaeb .SetIfNotNil ("\u0042\u0045",_gdae .BE );
_aaeb .SetIfNotNil ("\u0049\u0054",_gdae .IT );_aaeb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gdae .Measure );return _fabe ;};

// ToPdfObject implements interface PdfModel.
func (_caa *PdfAnnotationRichMedia )ToPdfObject ()_bg .PdfObject {_caa .PdfAnnotation .ToPdfObject ();_gae :=_caa ._cdcf ;_dcggd :=_gae .PdfObject .(*_bg .PdfObjectDictionary );_dcggd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_dcggd .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_caa .RichMediaSettings );_dcggd .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_caa .RichMediaContent );
return _gae ;};