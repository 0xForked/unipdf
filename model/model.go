//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_e "bufio";_gbe "bytes";_gg "crypto/md5";_ff "crypto/rand";_ae "crypto/sha1";_a "crypto/x509";_eb "encoding/binary";_bd "encoding/hex";_fff "errors";_g "fmt";_ca "github.com/unidoc/pkcs7";_aefb "github.com/unidoc/unipdf/v3/common";
_cg "github.com/unidoc/unipdf/v3/core";_ab "github.com/unidoc/unipdf/v3/core/security";_ba "github.com/unidoc/unipdf/v3/core/security/crypt";_cb "github.com/unidoc/unipdf/v3/internal/cmap";_cc "github.com/unidoc/unipdf/v3/internal/imageutil";_db "github.com/unidoc/unipdf/v3/internal/license";
_ggc "github.com/unidoc/unipdf/v3/internal/sampling";_eba "github.com/unidoc/unipdf/v3/internal/textencoding";_aa "github.com/unidoc/unipdf/v3/internal/timeutils";_bca "github.com/unidoc/unipdf/v3/internal/transform";_fc "github.com/unidoc/unipdf/v3/model/internal/docutil";
_egg "github.com/unidoc/unipdf/v3/model/internal/fonts";_bf "github.com/unidoc/unipdf/v3/model/mdp";_bda "github.com/unidoc/unipdf/v3/model/sigutil";_cab "github.com/unidoc/unipdf/v3/ps";_cd "github.com/unidoc/unitype";_aefg "golang.org/x/xerrors";_f "hash";
_bdg "image";_ag "image/color";_ "image/gif";_ "image/png";_ef "io";_d "io/ioutil";_be "math";_bc "math/rand";_ad "os";_eg "regexp";_c "sort";_aef "strconv";_gb "strings";_ge "sync";_bb "time";_bbg "unicode";_fbb "unicode/utf8";);

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cg .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_fcdd *_cg .PdfIndirectObject ;};func (_deeab *PdfWriter )writeDocumentVersion (){if _deeab ._dagdb {_deeab .writeString ("\u000a");
}else {_deeab .writeString (_g .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_deeab ._cdadd .Major ,_deeab ._cdadd .Minor ));_deeab .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_beeb *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _beeb .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_ddad *PdfFieldButton )IsCheckbox ()bool {return _ddad .GetType ()==ButtonTypeCheckbox };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_gbaee *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_geee :=func (_aegc float64 )float64 {if _aegc >=6.0/29{return _aegc *_aegc *_aegc ;};return 108.0/841*(_aegc -4/29);};_gaad :=img ._gegd ;if len (_gaad )!=6{_aefb .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_gaad =_gbaee .DecodeArray ();};_gega :=_ggc .NewReader (img .getBase ());_egeb :=_cc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._dbcf ,img ._gegd );_dcac :=_ggc .NewWriter (_egeb );_bgbfd :=_be .Pow (2,float64 (img .BitsPerComponent ))-1;
_cccd :=make ([]uint32 ,3);var (_babd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_acdg ,_bebc ,_aeee float64 ;);for {_babd =_gega .ReadSamples (_cccd );if _babd ==_ef .EOF {break ;}else if _babd !=nil {return img ,_babd ;};Ls =float64 (_cccd [0])/_bgbfd ;As =float64 (_cccd [1])/_bgbfd ;
Bs =float64 (_cccd [2])/_bgbfd ;Ls =_cc .LinearInterpolate (Ls ,0.0,1.0,_gaad [0],_gaad [1]);As =_cc .LinearInterpolate (As ,0.0,1.0,_gaad [2],_gaad [3]);Bs =_cc .LinearInterpolate (Bs ,0.0,1.0,_gaad [4],_gaad [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_gbaee .WhitePoint [0]*_geee (L );Y =_gbaee .WhitePoint [1]*_geee (M );Z =_gbaee .WhitePoint [2]*_geee (N );_acdg =3.240479*X +-1.537150*Y +-0.498535*Z ;_bebc =-0.969256*X +1.875992*Y +0.041556*Z ;_aeee =0.055648*X +-0.204043*Y +1.057311*Z ;
_acdg =_be .Min (_be .Max (_acdg ,0),1.0);_bebc =_be .Min (_be .Max (_bebc ,0),1.0);_aeee =_be .Min (_be .Max (_aeee ,0),1.0);_cccd [0]=uint32 (_acdg *_bgbfd );_cccd [1]=uint32 (_bebc *_bgbfd );_cccd [2]=uint32 (_aeee *_bgbfd );if _babd =_dcac .WriteSamples (_cccd );
_babd !=nil {return img ,_babd ;};};return _fddbb (&_egeb ),nil ;};func (_daagf *PdfReader )newPdfAnnotationFreeTextFromDict (_gad *_cg .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_ddbb :=PdfAnnotationFreeText {};_ceeg ,_cda :=_daagf .newPdfAnnotationMarkupFromDict (_gad );
if _cda !=nil {return nil ,_cda ;};_ddbb .PdfAnnotationMarkup =_ceeg ;_ddbb .DA =_gad .Get ("\u0044\u0041");_ddbb .Q =_gad .Get ("\u0051");_ddbb .RC =_gad .Get ("\u0052\u0043");_ddbb .DS =_gad .Get ("\u0044\u0053");_ddbb .CL =_gad .Get ("\u0043\u004c");
_ddbb .IT =_gad .Get ("\u0049\u0054");_ddbb .BE =_gad .Get ("\u0042\u0045");_ddbb .RD =_gad .Get ("\u0052\u0044");_ddbb .BS =_gad .Get ("\u0042\u0053");_ddbb .LE =_gad .Get ("\u004c\u0045");return &_ddbb ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_afeb *PdfPage )AppendContentStream (contentStr string )error {_eadd ,_fagc :=_afeb .GetContentStreams ();if _fagc !=nil {return _fagc ;};if len (_eadd )==0{_eadd =[]string {contentStr };return _afeb .SetContentStreams (_eadd ,_cg .NewFlateEncoder ());
};var _fdcg _gbe .Buffer ;_fdcg .WriteString (_eadd [len (_eadd )-1]);_fdcg .WriteString ("\u000a");_fdcg .WriteString (contentStr );_eadd [len (_eadd )-1]=_fdcg .String ();return _afeb .SetContentStreams (_eadd ,_cg .NewFlateEncoder ());};

// ToPdfObject implements interface PdfModel.
func (_gcf *PdfAnnotationPolygon )ToPdfObject ()_cg .PdfObject {_gcf .PdfAnnotation .ToPdfObject ();_gbga :=_gcf ._bed ;_dbeeb :=_gbga .PdfObject .(*_cg .PdfObjectDictionary );_gcf .PdfAnnotationMarkup .appendToPdfDictionary (_dbeeb );_dbeeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_dbeeb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gcf .Vertices );_dbeeb .SetIfNotNil ("\u004c\u0045",_gcf .LE );_dbeeb .SetIfNotNil ("\u0042\u0053",_gcf .BS );_dbeeb .SetIfNotNil ("\u0049\u0043",_gcf .IC );_dbeeb .SetIfNotNil ("\u0042\u0045",_gcf .BE );
_dbeeb .SetIfNotNil ("\u0049\u0054",_gcf .IT );_dbeeb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gcf .Measure );return _gbga ;};func (_dabb fontCommon )asPdfObjectDictionary (_dgab string )*_cg .PdfObjectDictionary {if _dgab !=""&&_dabb ._agbd !=""&&_dgab !=_dabb ._agbd {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_dgab ,_dabb );
}else if _dgab ==""&&_dabb ._agbd ==""{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dabb );
}else if _dabb ._agbd ==""{_dabb ._agbd =_dgab ;};_dfdc :=_cg .MakeDict ();_dfdc .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u006e\u0074"));_dfdc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cg .MakeName (_dabb ._fbdedg ));
_dfdc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName (_dabb ._agbd ));if _dabb ._bfggb !=nil {_dfdc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dabb ._bfggb .ToPdfObject ());};if _dabb ._gdaff !=nil {_dfdc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dabb ._gdaff );
}else if _dabb ._dcded !=nil {_caea ,_dfgfe :=_dabb ._dcded .Stream ();if _dfgfe !=nil {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dfgfe );
}else {_dfdc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_caea );};};return _dfdc ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_efegd *PdfPage )GetAllContentStreams ()(string ,error ){_gaceg ,_affgb :=_efegd .GetContentStreams ();if _affgb !=nil {return "",_affgb ;};return _gb .Join (_gaceg ,"\u0020"),nil ;};

// B returns the value of the B component of the color.
func (_gaaa *PdfColorCalRGB )B ()float64 {return _gaaa [1]};

// ToPdfObject implements interface PdfModel.
func (_eaga *PdfAnnotationFileAttachment )ToPdfObject ()_cg .PdfObject {_eaga .PdfAnnotation .ToPdfObject ();_cfba :=_eaga ._bed ;_bdfe :=_cfba .PdfObject .(*_cg .PdfObjectDictionary );_eaga .PdfAnnotationMarkup .appendToPdfDictionary (_bdfe );_bdfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_bdfe .SetIfNotNil ("\u0046\u0053",_eaga .FS );_bdfe .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eaga .Name );return _cfba ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdbg *PdfColorspaceSpecialSeparation )ToPdfObject ()_cg .PdfObject {_eeeg :=_cg .MakeArray (_cg .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_eeeg .Append (_gdbg .ColorantName );_eeeg .Append (_gdbg .AlternateSpace .ToPdfObject ());
_eeeg .Append (_gdbg .TintTransform .ToPdfObject ());if _gdbg ._fcdd !=nil {_gdbg ._fcdd .PdfObject =_eeeg ;return _gdbg ._fcdd ;};return _eeeg ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_fadg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_gecfa :=&PdfColorPattern {};_eged ,_gedb :=objects [len (objects )-1].(*_cg .PdfObjectName );if !_gedb {_aefb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_gecfa .PatternName =*_eged ;if len (objects )> 1{_ffgf :=objects [0:len (objects )-1];if _fadg .UnderlyingCS ==nil {_aefb .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_fff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_aeec ,_fbged :=_fadg .UnderlyingCS .ColorFromPdfObjects (_ffgf );if _fbged !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_fbged );
return nil ,_fbged ;};_gecfa .Color =_aeec ;};return _gecfa ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_aaad *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _aaad ._ebca .(*PdfShadingPattern );};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ggf :=NewPdfAnnotation ();_cdf :=&PdfAnnotationHighlight {};_cdf .PdfAnnotation =_ggf ;_cdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggf .SetContext (_cdf );return _cdf ;};func _ceag (_fgeag *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_fgeag }};


// ToPdfObject returns the PDF representation of the function.
func (_bgga *PdfFunctionType3 )ToPdfObject ()_cg .PdfObject {_fabc :=_cg .MakeDict ();_fabc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (3));_gfaba :=&_cg .PdfObjectArray {};for _ ,_dedec :=range _bgga .Domain {_gfaba .Append (_cg .MakeFloat (_dedec ));
};_fabc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfaba );if _bgga .Range !=nil {_gbgbea :=&_cg .PdfObjectArray {};for _ ,_edeee :=range _bgga .Range {_gbgbea .Append (_cg .MakeFloat (_edeee ));};_fabc .Set ("\u0052\u0061\u006eg\u0065",_gbgbea );};
if _bgga .Functions !=nil {_acffc :=&_cg .PdfObjectArray {};for _ ,_ebfg :=range _bgga .Functions {_acffc .Append (_ebfg .ToPdfObject ());};_fabc .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_acffc );};if _bgga .Bounds !=nil {_gcdb :=&_cg .PdfObjectArray {};
for _ ,_fdafc :=range _bgga .Bounds {_gcdb .Append (_cg .MakeFloat (_fdafc ));};_fabc .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_gcdb );};if _bgga .Encode !=nil {_adaaf :=&_cg .PdfObjectArray {};for _ ,_dbdce :=range _bgga .Encode {_adaaf .Append (_cg .MakeFloat (_dbdce ));
};_fabc .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_adaaf );};if _bgga ._eeaff !=nil {_bgga ._eeaff .PdfObject =_fabc ;return _bgga ._eeaff ;};return _fabc ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cg .PdfObject ;IsMap _cg .PdfObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_cccbc *DSS )ToPdfObject ()_cg .PdfObject {_bgaa :=_cccbc ._gbde .PdfObject .(*_cg .PdfObjectDictionary );_bgaa .Clear ();_bbce :=_cg .MakeDict ();for _fdaec ,_fefdg :=range _cccbc .VRI {_bbce .Set (*_cg .MakeName (_fdaec ),_fefdg .ToPdfObject ());
};_bgaa .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_feacc (_cccbc .Certs ));_bgaa .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_feacc (_cccbc .OCSPs ));_bgaa .SetIfNotNil ("\u0043\u0052\u004c\u0073",_feacc (_cccbc .CRLs ));_bgaa .Set ("\u0056\u0052\u0049",_bbce );
return _cccbc ._gbde ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cg .PdfObject ;LE _cg .PdfObject ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;IT _cg .PdfObject ;Measure _cg .PdfObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cg .PdfObject ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bde *PdfAnnotationWidget )Field ()*PdfField {return _bde ._fag };

// GetFontDescriptor returns the font descriptor for `font`.
func (_gdde PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gdde ._cgdd .getFontDescriptor (),nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bbef *_cg .PdfObjectDictionary ;_bdbc *_cg .PdfIndirectObject ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ecfff DefaultImageHandler )NewGrayImageFromGoImage (goimg _bdg .Image )(*Image ,error ){_bbcad :=goimg .Bounds ();_gagbf :=&Image {Width :int64 (_bbcad .Dx ()),Height :int64 (_bbcad .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bbacb :=goimg .(type ){case *_bdg .Gray :if len (_bbacb .Pix )!=_bbcad .Dx ()*_bbcad .Dy (){_bafce ,_aeafb :=_cc .GrayConverter .Convert (goimg );
if _aeafb !=nil {return nil ,_aeafb ;};_gagbf .Data =_bafce .Pix ();}else {_gagbf .Data =_bbacb .Pix ;};case *_bdg .Gray16 :_gagbf .BitsPerComponent =16;if len (_bbacb .Pix )!=_bbcad .Dx ()*_bbcad .Dy ()*2{_aecg ,_bfggf :=_cc .Gray16Converter .Convert (goimg );
if _bfggf !=nil {return nil ,_bfggf ;};_gagbf .Data =_aecg .Pix ();}else {_gagbf .Data =_bbacb .Pix ;};case _cc .Image :_fdea :=_bbacb .Base ();if _fdea .ColorComponents ==1{_gagbf .BitsPerComponent =int64 (_fdea .BitsPerComponent );_gagbf .Data =_fdea .Data ;
return _gagbf ,nil ;};_abca ,_aeddga :=_cc .GrayConverter .Convert (goimg );if _aeddga !=nil {return nil ,_aeddga ;};_gagbf .Data =_abca .Pix ();default:_fbdg ,_febdd :=_cc .GrayConverter .Convert (goimg );if _febdd !=nil {return nil ,_febdd ;};_gagbf .Data =_fbdg .Pix ();
};return _gagbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efba *PdfAnnotationFreeText )ToPdfObject ()_cg .PdfObject {_efba .PdfAnnotation .ToPdfObject ();_fefe :=_efba ._bed ;_eac :=_fefe .PdfObject .(*_cg .PdfObjectDictionary );_efba .PdfAnnotationMarkup .appendToPdfDictionary (_eac );_eac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_eac .SetIfNotNil ("\u0044\u0041",_efba .DA );_eac .SetIfNotNil ("\u0051",_efba .Q );_eac .SetIfNotNil ("\u0052\u0043",_efba .RC );_eac .SetIfNotNil ("\u0044\u0053",_efba .DS );_eac .SetIfNotNil ("\u0043\u004c",_efba .CL );_eac .SetIfNotNil ("\u0049\u0054",_efba .IT );
_eac .SetIfNotNil ("\u0042\u0045",_efba .BE );_eac .SetIfNotNil ("\u0052\u0044",_efba .RD );_eac .SetIfNotNil ("\u0042\u0053",_efba .BS );_eac .SetIfNotNil ("\u004c\u0045",_efba .LE );return _fefe ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cg .PdfObjectArray )(*PdfRectangle ,error ){_eaebd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _agcb error ;_eaebd .Llx ,_agcb =_cg .GetNumberAsFloat (arr .Get (0));if _agcb !=nil {return nil ,_agcb ;};_eaebd .Lly ,_agcb =_cg .GetNumberAsFloat (arr .Get (1));if _agcb !=nil {return nil ,_agcb ;};_eaebd .Urx ,_agcb =_cg .GetNumberAsFloat (arr .Get (2));
if _agcb !=nil {return nil ,_agcb ;};_eaebd .Ury ,_agcb =_cg .GetNumberAsFloat (arr .Get (3));if _agcb !=nil {return nil ,_agcb ;};return &_eaebd ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_efad *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// Encoder returns the font's text encoder.
func (_bgdgd pdfCIDFontType0 )Encoder ()_eba .TextEncoder {return _bgdgd ._ddcfc };

// ToPdfObject implements interface PdfModel.
func (_fca *PdfActionNamed )ToPdfObject ()_cg .PdfObject {_fca .PdfAction .ToPdfObject ();_eed :=_fca ._ebd ;_ede :=_eed .PdfObject .(*_cg .PdfObjectDictionary );_ede .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeNamed )));_ede .SetIfNotNil ("\u004e",_fca .N );
return _eed ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_deace ,_fgdgg :=NewStandard14Font (basefont );if _fgdgg !=nil {panic (_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _deace ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ccdcb *Image )ToJBIG2Image ()(*_cg .JBIG2Image ,error ){_dddfc ,_bfcaa :=_ccdcb .ToGoImage ();if _bfcaa !=nil {return nil ,_bfcaa ;};return _cg .GoImageToJBIG2 (_dddfc ,_cg .JB2ImageAutoThreshold );};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_edac *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_edac .updateObjectsDeep (dss .ToPdfObject (),nil );};_edac ._ddagb =dss ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cg .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cg .PdfObject ;Contents _cg .PdfObject ;
Rotate *int64 ;Group _cg .PdfObject ;Thumb _cg .PdfObject ;B _cg .PdfObject ;Dur _cg .PdfObject ;Trans _cg .PdfObject ;AA _cg .PdfObject ;Metadata _cg .PdfObject ;PieceInfo _cg .PdfObject ;StructParents _cg .PdfObject ;ID _cg .PdfObject ;PZ _cg .PdfObject ;
SeparationInfo _cg .PdfObject ;Tabs _cg .PdfObject ;TemplateInstantiated _cg .PdfObject ;PresSteps _cg .PdfObject ;UserUnit _cg .PdfObject ;VP _cg .PdfObject ;Annots _cg .PdfObject ;_adga []*PdfAnnotation ;_edcag *_cg .PdfObjectDictionary ;_aegd *_cg .PdfIndirectObject ;
_abeaf *PdfReader ;};

// ToPdfObject converts the font to a PDF representation.
func (_fcggb *pdfFontType3 )ToPdfObject ()_cg .PdfObject {if _fcggb ._eegg ==nil {_fcggb ._eegg =&_cg .PdfIndirectObject {};};_adad :=_fcggb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_fcggb ._eegg .PdfObject =_adad ;if _fcggb .FirstChar !=nil {_adad .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fcggb .FirstChar );
};if _fcggb .LastChar !=nil {_adad .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fcggb .LastChar );};if _fcggb .Widths !=nil {_adad .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fcggb .Widths );};if _fcggb .Encoding !=nil {_adad .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcggb .Encoding );
}else if _fcggb ._abcca !=nil {_faeea :=_fcggb ._abcca .ToPdfObject ();if _faeea !=nil {_adad .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_faeea );};};if _fcggb .FontBBox !=nil {_adad .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fcggb .FontBBox );
};if _fcggb .FontMatrix !=nil {_adad .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_fcggb .FontMatrix );};if _fcggb .CharProcs !=nil {_adad .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_fcggb .CharProcs );};if _fcggb .Resources !=nil {_adad .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fcggb .Resources );
};return _fcggb ._eegg ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_egbba *_cg .PdfObjectDictionary ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gdeb :=&PdfColorspaceCalRGB {};_gdeb .BlackPoint =[]float64 {0.0,0.0,0.0};_gdeb .Gamma =[]float64 {1.0,1.0,1.0};_gdeb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gdeb ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cg .PdfObject ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gcbg *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_eagaf :=_ggc .NewReader (img .getBase ());_eagc :=_cc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_abcd :=_ggc .NewWriter (_eagc );
_ecgc :=_be .Pow (2,float64 (img .BitsPerComponent ))-1;_eaab :=make ([]uint32 ,3);var (_bbga error ;_dgbf ,_ggea ,_bcef ,_bcgga ,_gfdd ,_fcbf float64 ;);for {_bbga =_eagaf .ReadSamples (_eaab );if _bbga ==_ef .EOF {break ;}else if _bbga !=nil {return img ,_bbga ;
};_dgbf =float64 (_eaab [0])/_ecgc ;_ggea =float64 (_eaab [1])/_ecgc ;_bcef =float64 (_eaab [2])/_ecgc ;_bcgga =_gcbg .Matrix [0]*_be .Pow (_dgbf ,_gcbg .Gamma [0])+_gcbg .Matrix [3]*_be .Pow (_ggea ,_gcbg .Gamma [1])+_gcbg .Matrix [6]*_be .Pow (_bcef ,_gcbg .Gamma [2]);
_gfdd =_gcbg .Matrix [1]*_be .Pow (_dgbf ,_gcbg .Gamma [0])+_gcbg .Matrix [4]*_be .Pow (_ggea ,_gcbg .Gamma [1])+_gcbg .Matrix [7]*_be .Pow (_bcef ,_gcbg .Gamma [2]);_fcbf =_gcbg .Matrix [2]*_be .Pow (_dgbf ,_gcbg .Gamma [0])+_gcbg .Matrix [5]*_be .Pow (_ggea ,_gcbg .Gamma [1])+_gcbg .Matrix [8]*_be .Pow (_bcef ,_gcbg .Gamma [2]);
_dgbf =3.240479*_bcgga +-1.537150*_gfdd +-0.498535*_fcbf ;_ggea =-0.969256*_bcgga +1.875992*_gfdd +0.041556*_fcbf ;_bcef =0.055648*_bcgga +-0.204043*_gfdd +1.057311*_fcbf ;_dgbf =_be .Min (_be .Max (_dgbf ,0),1.0);_ggea =_be .Min (_be .Max (_ggea ,0),1.0);
_bcef =_be .Min (_be .Max (_bcef ,0),1.0);_eaab [0]=uint32 (_dgbf *_ecgc );_eaab [1]=uint32 (_ggea *_ecgc );_eaab [2]=uint32 (_bcef *_ecgc );if _bbga =_abcd .WriteSamples (_eaab );_bbga !=nil {return img ,_bbga ;};};return _fddbb (&_eagc ),nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;VerticesPerRow *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_geca :=NewPdfAnnotation ();_bfbc :=&PdfAnnotation3D {};_bfbc .PdfAnnotation =_geca ;_geca .SetContext (_bfbc );return _bfbc ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_daa *PdfReader )newPdfAnnotationMarkupFromDict (_fgd *_cg .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_egf :=&PdfAnnotationMarkup {};if _adbcc :=_fgd .Get ("\u0054");_adbcc !=nil {_egf .T =_adbcc ;};if _abbf :=_fgd .Get ("\u0050\u006f\u0070u\u0070");
_abbf !=nil {_fga ,_daag :=_abbf .(*_cg .PdfIndirectObject );if !_daag {if _ ,_cdc :=_abbf .(*_cg .PdfObjectNull );!_cdc {return nil ,_fff .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_deb ,_fcfg :=_daa .newPdfAnnotationFromIndirectObject (_fga );if _fcfg !=nil {return nil ,_fcfg ;};if _deb !=nil {_fcaf ,_ccb :=_deb ._addda .(*PdfAnnotationPopup );if !_ccb {return nil ,_fff .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_egf .Popup =_fcaf ;};};};if _cgfg :=_fgd .Get ("\u0043\u0041");_cgfg !=nil {_egf .CA =_cgfg ;};if _fdcf :=_fgd .Get ("\u0052\u0043");_fdcf !=nil {_egf .RC =_fdcf ;};if _gea :=_fgd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_gea !=nil {_egf .CreationDate =_gea ;};if _aggc :=_fgd .Get ("\u0049\u0052\u0054");_aggc !=nil {_egf .IRT =_aggc ;};if _afee :=_fgd .Get ("\u0053\u0075\u0062\u006a");_afee !=nil {_egf .Subj =_afee ;};if _ddaf :=_fgd .Get ("\u0052\u0054");_ddaf !=nil {_egf .RT =_ddaf ;
};if _beb :=_fgd .Get ("\u0049\u0054");_beb !=nil {_egf .IT =_beb ;};if _dbeg :=_fgd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_dbeg !=nil {_egf .ExData =_dbeg ;};return _egf ,nil ;};func _gagb (_cdfe *_cg .PdfObjectDictionary ,_bcgae *fontCommon )(*pdfCIDFontType0 ,error ){if _bcgae ._agbd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_aefb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bcgae );
return nil ,_cg .ErrRangeError ;};_fbad :=_gaecg (_bcgae );_cagc ,_dfeb :=_cg .GetDict (_cdfe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dfeb {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bcgae );
return nil ,ErrRequiredAttributeMissing ;};_fbad .CIDSystemInfo =_cagc ;_fbad .DW =_cdfe .Get ("\u0044\u0057");_fbad .W =_cdfe .Get ("\u0057");_fbad .DW2 =_cdfe .Get ("\u0044\u0057\u0032");_fbad .W2 =_cdfe .Get ("\u0057\u0032");_fbad ._adfdf =1000.0;if _cedbd ,_dfecf :=_cg .GetNumberAsFloat (_fbad .DW );
_dfecf ==nil {_fbad ._adfdf =_cedbd ;};_gfbf ,_defd :=_cefb (_fbad .W );if _defd !=nil {return nil ,_defd ;};if _gfbf ==nil {_gfbf =map[_eba .CharCode ]float64 {};};_fbad ._gecd =_gfbf ;return _fbad ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_cfdg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_deaf :=pageNum -1;var _beaa *PdfPage ;for _fdaef ,_egcc :=range _cfdg ._fgcg {if _fdaef ==_deaf {_beaa =_egcc ;};};if _beaa ==nil {return _g .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _beaa ._aegd !=nil &&_beaa ._aegd .GetParser ()==_cfdg ._afa ._bafg {_beaa =_beaa .Duplicate ();_cfdg ._fgcg [_deaf ]=_beaa ;};page =page .Duplicate ();_cgccf (page );_gbdd :=_caff (_beaa );_fcb :=_caff (page );_cfea :=make (map[_cg .PdfObjectName ]_cg .PdfObjectName );
for _fbfb :=range _fcb {if _ ,_gaef :=_gbdd [_fbfb ];_gaef {for _cbaf :=1;true ;_cbaf ++{_fbgd :=_cg .PdfObjectName (string (_fbfb )+_aef .Itoa (_cbaf ));if _ ,_fddab :=_gbdd [_fbgd ];!_fddab {_cfea [_fbfb ]=_fbgd ;break ;};};};};_aecf ,_fdgb :=page .GetContentStreams ();
if _fdgb !=nil {return _fdgb ;};_ccab ,_fdgb :=_beaa .GetContentStreams ();if _fdgb !=nil {return _fdgb ;};for _edgf ,_fcfge :=range _aecf {for _dec ,_fbgac :=range _cfea {_fcfge =_gb .Replace (_fcfge ,"\u002f"+string (_dec ),"\u002f"+string (_fbgac ),-1);
};_aecf [_edgf ]=_fcfge ;};_ccab =append (_ccab ,_aecf ...);if _dbeda :=_beaa .SetContentStreams (_ccab ,_cg .NewFlateEncoder ());_dbeda !=nil {return _dbeda ;};_beaa ._adga =append (_beaa ._adga ,page ._adga ...);if _beaa .Resources ==nil {_beaa .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_beaa .Resources .Font =_cfdg .mergeResources (_beaa .Resources .Font ,page .Resources .Font ,_cfea );_beaa .Resources .XObject =_cfdg .mergeResources (_beaa .Resources .XObject ,page .Resources .XObject ,_cfea );_beaa .Resources .Properties =_cfdg .mergeResources (_beaa .Resources .Properties ,page .Resources .Properties ,_cfea );
if _beaa .Resources .ProcSet ==nil {_beaa .Resources .ProcSet =page .Resources .ProcSet ;};_beaa .Resources .Shading =_cfdg .mergeResources (_beaa .Resources .Shading ,page .Resources .Shading ,_cfea );_beaa .Resources .ExtGState =_cfdg .mergeResources (_beaa .Resources .ExtGState ,page .Resources .ExtGState ,_cfea );
};_gebge ,_fdgb :=_beaa .GetMediaBox ();if _fdgb !=nil {return _fdgb ;};_cgdee ,_fdgb :=page .GetMediaBox ();if _fdgb !=nil {return _fdgb ;};var _daca bool ;if _gebge .Llx > _cgdee .Llx {_gebge .Llx =_cgdee .Llx ;_daca =true ;};if _gebge .Lly > _cgdee .Lly {_gebge .Lly =_cgdee .Lly ;
_daca =true ;};if _gebge .Urx < _cgdee .Urx {_gebge .Urx =_cgdee .Urx ;_daca =true ;};if _gebge .Ury < _cgdee .Ury {_gebge .Ury =_cgdee .Ury ;_daca =true ;};if _daca {_beaa .MediaBox =_gebge ;};return nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_bbffe *PdfReader )GetCatalogMetadata ()(_cg .PdfObject ,bool ){if _bbffe ._fbggd ==nil {return nil ,false ;};_bffff :=_bbffe ._fbggd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bffff ,_bffff !=nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_caag :=PdfColorCalRGB {a ,b ,c };return &_caag ;};func _fedc (_bbefb string )map[string ]string {_edffa :=_fdacg .Split (_bbefb ,-1);_cffaa :=map[string ]string {};for _ ,_gdac :=range _edffa {_ffcgf :=_cgcc .FindStringSubmatch (_gdac );
if _ffcgf ==nil {continue ;};_dffb ,_ddea :=_ffcgf [1],_ffcgf [2];_cffaa [_dffb ]=_ddea ;};return _cffaa ;};

// ToPdfObject implements interface PdfModel.
func (_dcgg *PdfAnnotationRedact )ToPdfObject ()_cg .PdfObject {_dcgg .PdfAnnotation .ToPdfObject ();_bacd :=_dcgg ._bed ;_aed :=_bacd .PdfObject .(*_cg .PdfObjectDictionary );_dcgg .PdfAnnotationMarkup .appendToPdfDictionary (_aed );_aed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_aed .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcgg .QuadPoints );_aed .SetIfNotNil ("\u0049\u0043",_dcgg .IC );_aed .SetIfNotNil ("\u0052\u004f",_dcgg .RO );_aed .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dcgg .OverlayText );
_aed .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dcgg .Repeat );_aed .SetIfNotNil ("\u0044\u0041",_dcgg .DA );_aed .SetIfNotNil ("\u0051",_dcgg .Q );return _bacd ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_ebecf .Lock ();defer _ebecf .Unlock ();_gfefa =author };

// SetAnnotations sets the annotations list.
func (_gdgca *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gdgca ._adga =annotations };

// IsShading specifies if the pattern is a shading pattern.
func (_dadb *PdfPattern )IsShading ()bool {return _dadb .PatternType ==2};func (_abb *PdfReader )newPdfActionGotoFromDict (_aee *_cg .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_aee .Get ("\u0044")},nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_cefcf *PdfShading )GetContainingPdfObject ()_cg .PdfObject {return _cefcf ._ceabf };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_eebec :map[_cg .PdfObject ]struct{}{},_eggbd :_egggc (),_bafg :_cg .NewParserFromString (txt )};};

// ToPdfObject implements interface PdfModel.
func (_fdbg *PdfAnnotationInk )ToPdfObject ()_cg .PdfObject {_fdbg .PdfAnnotation .ToPdfObject ();_ddd :=_fdbg ._bed ;_abff :=_ddd .PdfObject .(*_cg .PdfObjectDictionary );_fdbg .PdfAnnotationMarkup .appendToPdfDictionary (_abff );_abff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0049\u006e\u006b"));
_abff .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fdbg .InkList );_abff .SetIfNotNil ("\u0042\u0053",_fdbg .BS );return _ddd ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_egdc *_cg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbeb *PdfAnnotationStamp )ToPdfObject ()_cg .PdfObject {_bbeb .PdfAnnotation .ToPdfObject ();_dega :=_bbeb ._bed ;_faaa :=_dega .PdfObject .(*_cg .PdfObjectDictionary );_bbeb .PdfAnnotationMarkup .appendToPdfDictionary (_faaa );_faaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0074\u0061m\u0070"));
_faaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbeb .Name );return _dega ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fg *PdfAction )GetContainingPdfObject ()_cg .PdfObject {return _fg ._ebd };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bdgf :=NewPdfAnnotation ();_ceg :=&PdfAnnotationSquare {};_ceg .PdfAnnotation =_bdgf ;_ceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdgf .SetContext (_ceg );return _ceg ;};func (_gcga *PdfReader )newPdfAnnotationScreenFromDict (_bba *_cg .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_eefc :=PdfAnnotationScreen {};
_eefc .T =_bba .Get ("\u0054");_eefc .MK =_bba .Get ("\u004d\u004b");_eefc .A =_bba .Get ("\u0041");_eefc .AA =_bba .Get ("\u0041\u0041");return &_eefc ,nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_agea :=NewPdfAnnotation ();_bcda :=&PdfAnnotationSound {};_bcda .PdfAnnotation =_agea ;_bcda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agea .SetContext (_bcda );return _bcda ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_ccef *PdfColorspaceICCBased )ToPdfObject ()_cg .PdfObject {_fbgde :=&_cg .PdfObjectArray {};_fbgde .Append (_cg .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ddege *_cg .PdfObjectStream ;if _ccef ._fgdfa !=nil {_ddege =_ccef ._fgdfa ;
}else {_ddege =&_cg .PdfObjectStream {};};_bead :=_cg .MakeDict ();_bead .Set ("\u004e",_cg .MakeInteger (int64 (_ccef .N )));if _ccef .Alternate !=nil {_bead .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_ccef .Alternate .ToPdfObject ());};if _ccef .Metadata !=nil {_bead .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ccef .Metadata );
};if _ccef .Range !=nil {var _aggdd []_cg .PdfObject ;for _ ,_begdf :=range _ccef .Range {_aggdd =append (_aggdd ,_cg .MakeFloat (_begdf ));};_bead .Set ("\u0052\u0061\u006eg\u0065",_cg .MakeArray (_aggdd ...));};_bead .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_ccef .Data ))));
_ddege .Stream =_ccef .Data ;_ddege .PdfObjectDictionary =_bead ;_fbgde .Append (_ddege );if _ccef ._agbc !=nil {_ccef ._agbc .PdfObject =_fbgde ;return _ccef ._agbc ;};return _fbgde ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_efda *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_efda .GetNumComponents (){return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fefad ,_effa :=_efda .TintTransform .Evaluate (vals );
if _effa !=nil {return nil ,_effa ;};_ccbfg ,_effa :=_efda .AlternateSpace .ColorFromFloats (_fefad );if _effa !=nil {return nil ,_effa ;};return _ccbfg ,nil ;};func (_egege *LTV )validateSig (_gbee *PdfSignature )error {if _gbee ==nil ||_gbee .Contents ==nil ||len (_gbee .Contents .Bytes ())==0{return _g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_gbee );
};return nil ;};

// C returns the value of the cyan component of the color.
func (_ddegf *PdfColorDeviceCMYK )C ()float64 {return _ddegf [0]};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cae :=NewPdfAnnotation ();_bcg :=&PdfAnnotationLine {};_bcg .PdfAnnotation =_cae ;_bcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cae .SetContext (_bcg );return _bcg ;};func (_feaec *PdfReader )newPdfSignatureReferenceFromDict (_gceef *_cg .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _acgaa ,_bgce :=_feaec ._eggbd .GetModelFromPrimitive (_gceef ).(*PdfSignatureReference );
_bgce {return _acgaa ,nil ;};_aadeb :=&PdfSignatureReference {_agbaa :_gceef ,Data :_gceef .Get ("\u0044\u0061\u0074\u0061")};var _fggdfa bool ;_aadeb .Type ,_ =_cg .GetName (_gceef .Get ("\u0054\u0079\u0070\u0065"));_aadeb .TransformMethod ,_fggdfa =_cg .GetName (_gceef .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_fggdfa {_aefb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_aadeb .TransformParams ,_ =_cg .GetDict (_gceef .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_aadeb .DigestMethod ,_ =_cg .GetName (_gceef .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _aadeb ,nil ;};

// GetBorderWidth returns the border style's width.
func (_fgcec *PdfBorderStyle )GetBorderWidth ()float64 {if _fgcec .W ==nil {return 1;};return *_fgcec .W ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_affdb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _affdb .AlternateSpace ==nil {return nil ,_fff .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _affdb .AlternateSpace .ColorToRGB (color );};

// String implements interface PdfObject.
func (_dbe *PdfAction )String ()string {_fd ,_ed :=_dbe .ToPdfObject ().(*_cg .PdfIndirectObject );if _ed {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dbe ._dbf ,_fd .PdfObject .String ());};return "";};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_agbaa *_cg .PdfObjectDictionary ;Type *_cg .PdfObjectName ;TransformMethod *_cg .PdfObjectName ;TransformParams _cg .PdfObject ;Data _cg .PdfObject ;DigestMethod *_cg .PdfObjectName ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_bfbfc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _bfbfc .MediaBox !=nil {return _bfbfc .MediaBox ,nil ;};_aeaga :=_bfbfc .Parent ;for _aeaga !=nil {_fdbaf ,_cdbd :=_cg .GetDict (_aeaga );if !_cdbd {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dffeg :=_fdbaf .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dffeg !=nil {_geegf ,_cdad :=_cg .GetArray (_dffeg );if !_cdad {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_ddgge ,_befg :=NewPdfRectangle (*_geegf );if _befg !=nil {return nil ,_befg ;};return _ddgge ,nil ;};_aeaga =_fdbaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fff .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _bb .Time )(PdfDate ,error ){_abfcd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ceac ,_ :=_aef .ParseInt (_abfcd [1:3],10,32);_gcfc ,_ :=_aef .ParseInt (_abfcd [4:6],10,32);return PdfDate {_gbgef :int64 (timeObj .Year ()),_gbace :int64 (timeObj .Month ()),_bacec :int64 (timeObj .Day ()),_ecdbf :int64 (timeObj .Hour ()),_degbg :int64 (timeObj .Minute ()),_gfaed :int64 (timeObj .Second ()),_gabde :_abfcd [0],_bdcac :_ceac ,_bbded :_gcfc },nil ;
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_deef *PdfWriter )SetNamedDestinations (dests _cg .PdfObject )error {if dests ==nil {return nil ;};_aefb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_deef ._adafd .Set ("\u0044\u0065\u0073t\u0073",dests );return _deef .addObjects (dests );};func (_aafbf *PdfWriter )writeString (_bcgb string ){if _aafbf ._dcge !=nil {return ;};_cgbbd ,_bfdea :=_aafbf ._ebdegf .WriteString (_bcgb );_aafbf ._befaf +=int64 (_cgbbd );
_aafbf ._dcge =_bfdea ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fdaeb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcgd ,_ffdd :=_cg .GetNumbersAsFloat (objects );
if _ffdd !=nil {return nil ,_ffdd ;};return _fdaeb .ColorFromFloats (_gcgd );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gbde *_cg .PdfIndirectObject ;Certs []*_cg .PdfObjectStream ;OCSPs []*_cg .PdfObjectStream ;CRLs []*_cg .PdfObjectStream ;VRI map[string ]*VRI ;_dagc map[string ]*_cg .PdfObjectStream ;_ccag map[string ]*_cg .PdfObjectStream ;_bfcdf map[string ]*_cg .PdfObjectStream ;
};func (_eaffc *PdfWriter )writeTrailer (_gbefe int ){_eaffc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _defee :=0;_defee <=_gbefe ;{for ;_defee <=_gbefe ;_defee ++{_cecba ,_edbdea :=_eaffc ._ggaccb [_defee ];if _edbdea &&(!_eaffc ._dagdb ||_eaffc ._dagdb &&(_cecba .Type ==1&&_cecba .Offset >=_eaffc ._dggdf ||_cecba .Type ==0)){break ;
};};var _fcfffe int ;for _fcfffe =_defee +1;_fcfffe <=_gbefe ;_fcfffe ++{_dgbbe ,_ddfac :=_eaffc ._ggaccb [_fcfffe ];if _ddfac &&(!_eaffc ._dagdb ||_eaffc ._dagdb &&(_dgbbe .Type ==1&&_dgbbe .Offset > _eaffc ._dggdf )){continue ;};break ;};_dadbb :=_g .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_defee ,_fcfffe -_defee );
_eaffc .writeString (_dadbb );for _abedf :=_defee ;_abedf < _fcfffe ;_abedf ++{_eafebb :=_eaffc ._ggaccb [_abedf ];switch _eafebb .Type {case 0:_dadbb =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_eaffc .writeString (_dadbb );case 1:_dadbb =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_eafebb .Offset ,0);_eaffc .writeString (_dadbb );};};_defee =_fcfffe +1;};_dadea :=_cg .MakeDict ();_dadea .Set ("\u0049\u006e\u0066\u006f",_eaffc ._aeea );
_dadea .Set ("\u0052\u006f\u006f\u0074",_eaffc ._dfacgd );_dadea .Set ("\u0053\u0069\u007a\u0065",_cg .MakeInteger (int64 (_gbefe +1)));if _eaffc ._dagdb &&_eaffc ._caede > 0{_dadea .Set ("\u0050\u0072\u0065\u0076",_cg .MakeInteger (_eaffc ._caede ));};
if _eaffc ._dfeee !=nil {_dadea .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_eaffc ._gddd );};if _eaffc ._bbcgc ==nil &&_eaffc ._cfga !=""&&_eaffc ._befdb !=""{_eaffc ._bbcgc =_cg .MakeArray (_cg .MakeHexString (_eaffc ._cfga ),_cg .MakeHexString (_eaffc ._befdb ));
};if _eaffc ._bbcgc !=nil {_dadea .Set ("\u0049\u0044",_eaffc ._bbcgc );_aefb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_eaffc ._bbcgc );};_eaffc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_eaffc .writeString (_dadea .WriteString ());
_eaffc .writeString ("\u000a");};func (_cabg *PdfWriter )setHashIDs (_fecgda _f .Hash )error {_bfcfb :=_fecgda .Sum (nil );if _cabg ._cfga ==""{_cabg ._cfga =_bd .EncodeToString (_bfcfb [:8]);};_cabg .setDocumentIDs (_cabg ._cfga ,_bd .EncodeToString (_bfcfb [8:]));
return nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_bdbd :=NewPdfAnnotation ();_fefa :=&PdfAnnotationStrikeOut {};_fefa .PdfAnnotation =_bdbd ;_fefa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdbd .SetContext (_fefa );return _fefa ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_deeb *PdfReader )GetOCProperties ()(_cg .PdfObject ,error ){_ebagd :=_deeb ._fbggd ;_fggcg :=_ebagd .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fggcg =_cg .ResolveReference (_fggcg );if !_deeb ._ddae {_ecbca :=_deeb .traverseObjectData (_fggcg );
if _ecbca !=nil {return nil ,_ecbca ;};};return _fggcg ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_affee *_cg .PdfIndirectObject ;};func _feacc (_ebgad []*_cg .PdfObjectStream )*_cg .PdfObjectArray {if len (_ebgad )==0{return nil ;};_gbcdc :=make ([]_cg .PdfObject ,0,len (_ebgad ));
for _ ,_fdbgce :=range _ebgad {_gbcdc =append (_gbcdc ,_fdbgce );};return _cg .MakeArray (_gbcdc ...);};func (_aacc *PdfReader )newPdfActionThreadFromDict (_ffd *_cg .PdfObjectDictionary )(*PdfActionThread ,error ){_dba ,_fba :=_eda (_ffd .Get ("\u0046"));
if _fba !=nil {return nil ,_fba ;};return &PdfActionThread {D :_ffd .Get ("\u0044"),B :_ffd .Get ("\u0042"),F :_dba },nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fbcb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_cege *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gcea :=0.3*_cege .R ()+0.59*_cege .G ()+0.11*_cege .B ();_gcea =_be .Min (_be .Max (_gcea ,0.0),1.0);return NewPdfColorDeviceGray (_gcea );};func _gaea (_fedcc *_cg .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ggabd :=PdfShadingType5 {};
_aebfg :=_fedcc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aebfg ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdfdf ,_aaeec :=_aebfg .(*_cg .PdfObjectInteger );if !_aaeec {_aefb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aebfg );
return nil ,_cg .ErrTypeError ;};_ggabd .BitsPerCoordinate =_bdfdf ;_aebfg =_fedcc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aebfg ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bdfdf ,_aaeec =_aebfg .(*_cg .PdfObjectInteger );if !_aaeec {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aebfg );
return nil ,_cg .ErrTypeError ;};_ggabd .BitsPerComponent =_bdfdf ;_aebfg =_fedcc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _aebfg ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_bdfdf ,_aaeec =_aebfg .(*_cg .PdfObjectInteger );if !_aaeec {_aefb .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aebfg );
return nil ,_cg .ErrTypeError ;};_ggabd .VerticesPerRow =_bdfdf ;_aebfg =_fedcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aebfg ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_daecf ,_aaeec :=_aebfg .(*_cg .PdfObjectArray );if !_aaeec {_aefb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aebfg );
return nil ,_cg .ErrTypeError ;};_ggabd .Decode =_daecf ;if _agcab :=_fedcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_agcab !=nil {_ggabd .Function =[]PdfFunction {};if _eggbc ,_caffa :=_agcab .(*_cg .PdfObjectArray );_caffa {for _ ,_eaaaad :=range _eggbc .Elements (){_bfdbc ,_bgaab :=_eeafe (_eaaaad );
if _bgaab !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgaab );return nil ,_bgaab ;};_ggabd .Function =append (_ggabd .Function ,_bfdbc );
};}else {_defg ,_afcbd :=_eeafe (_agcab );if _afcbd !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afcbd );return nil ,_afcbd ;
};_ggabd .Function =append (_ggabd .Function ,_defg );};};return &_ggabd ,nil ;};func _fgbgg (_gcaab _cg .PdfObject )(*PdfFunctionType3 ,error ){_edacg :=&PdfFunctionType3 {};var _dfge *_cg .PdfObjectDictionary ;if _abag ,_dfaa :=_gcaab .(*_cg .PdfIndirectObject );
_dfaa {_cbbfg ,_dfdba :=_abag .PdfObject .(*_cg .PdfObjectDictionary );if !_dfdba {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_edacg ._eeaff =_abag ;_dfge =_cbbfg ;}else if _eeffb ,_gaadf :=_gcaab .(*_cg .PdfObjectDictionary );
_gaadf {_dfge =_eeffb ;}else {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffgdb ,_bbbec :=_cg .TraceToDirectObject (_dfge .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );
if !_bbbec {_aefb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ffgdb .Len ()!=2{_aefb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eeca ,_bgbfc :=_ffgdb .ToFloat64Array ();
if _bgbfc !=nil {return nil ,_bgbfc ;};_edacg .Domain =_eeca ;_ffgdb ,_bbbec =_cg .TraceToDirectObject (_dfge .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );if _bbbec {if _ffgdb .Len ()< 0||_ffgdb .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_effb ,_abagd :=_ffgdb .ToFloat64Array ();if _abagd !=nil {return nil ,_abagd ;};_edacg .Range =_effb ;};_ffgdb ,_bbbec =_cg .TraceToDirectObject (_dfge .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cg .PdfObjectArray );if !_bbbec {_aefb .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_edacg .Functions =[]PdfFunction {};
for _ ,_bcbf :=range _ffgdb .Elements (){_defec ,_ecbg :=_eeafe (_bcbf );if _ecbg !=nil {return nil ,_ecbg ;};_edacg .Functions =append (_edacg .Functions ,_defec );};_ffgdb ,_bbbec =_cg .TraceToDirectObject (_dfge .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cg .PdfObjectArray );
if !_bbbec {_aefb .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_cagba ,_bgbfc :=_ffgdb .ToFloat64Array ();if _bgbfc !=nil {return nil ,_bgbfc ;};_edacg .Bounds =_cagba ;if len (_edacg .Bounds )!=len (_edacg .Functions )-1{_aefb .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_edacg .Bounds ),len (_edacg .Functions ));
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgdb ,_bbbec =_cg .TraceToDirectObject (_dfge .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cg .PdfObjectArray );if !_bbbec {_aefb .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cbea ,_bgbfc :=_ffgdb .ToFloat64Array ();
if _bgbfc !=nil {return nil ,_bgbfc ;};_edacg .Encode =_cbea ;if len (_edacg .Encode )!=2*len (_edacg .Functions ){_aefb .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_edacg .Encode ),len (_edacg .Functions ));
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _edacg ,nil ;};func (_acf *PdfReader )newPdfAnnotationRedactFromDict (_gag *_cg .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_bbf :=PdfAnnotationRedact {};
_egdf ,_gbc :=_acf .newPdfAnnotationMarkupFromDict (_gag );if _gbc !=nil {return nil ,_gbc ;};_bbf .PdfAnnotationMarkup =_egdf ;_bbf .QuadPoints =_gag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bbf .IC =_gag .Get ("\u0049\u0043");
_bbf .RO =_gag .Get ("\u0052\u004f");_bbf .OverlayText =_gag .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_bbf .Repeat =_gag .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_bbf .DA =_gag .Get ("\u0044\u0041");_bbf .Q =_gag .Get ("\u0051");
return &_bbf ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cagff *PdfField )SetContext (ctx PdfModel ){_cagff ._bcgd =ctx };

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_egbba :_cg .MakeDict (),ColorComponents :colorComponents };
};func _geaab (_ebaa *_cg .PdfObjectDictionary ,_bgeg *fontCommon ,_ggfec _eba .TextEncoder )(*pdfFontSimple ,error ){_fadff :=_eacbf (_bgeg );_fadff ._ebedb =_ggfec ;if _ggfec ==nil {_fcfgg :=_ebaa .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _fcfgg ==nil {_fcfgg =_cg .MakeInteger (0);};_fadff .FirstChar =_fcfgg ;_dggfgf ,_aeadd :=_cg .GetIntVal (_fcfgg );if !_aeadd {_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fcfgg );
return nil ,_cg .ErrTypeError ;};_adcde :=_eba .CharCode (_dggfgf );_fcfgg =_ebaa .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fcfgg ==nil {_fcfgg =_cg .MakeInteger (255);};_fadff .LastChar =_fcfgg ;_dggfgf ,_aeadd =_cg .GetIntVal (_fcfgg );
if !_aeadd {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fcfgg );return nil ,_cg .ErrTypeError ;
};_ccfc :=_eba .CharCode (_dggfgf );_fadff ._bdbde =make (map[_eba .CharCode ]float64 );_fcfgg =_ebaa .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fcfgg !=nil {_fadff .Widths =_fcfgg ;_edddd ,_ggfa :=_cg .GetArray (_fcfgg );if !_ggfa {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fcfgg );
return nil ,_cg .ErrTypeError ;};_cbfg ,_cegbc :=_edddd .ToFloat64Array ();if _cegbc !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cegbc ;};if len (_cbfg )!=int (_ccfc -_adcde +1){_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ccfc -_adcde +1,len (_cbfg ));
return nil ,_cg .ErrRangeError ;};for _abdfa ,_dcfag :=range _cbfg {_fadff ._bdbde [_adcde +_eba .CharCode (_abdfa )]=_dcfag ;};};};_fadff .Encoding =_cg .TraceToDirectObject (_ebaa .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _fadff ,nil ;
};func (_ffdf *PdfReader )newPdfAnnotationTextFromDict (_cegg *_cg .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fed :=PdfAnnotationText {};_cbcd ,_gggg :=_ffdf .newPdfAnnotationMarkupFromDict (_cegg );if _gggg !=nil {return nil ,_gggg ;};_fed .PdfAnnotationMarkup =_cbcd ;
_fed .Open =_cegg .Get ("\u004f\u0070\u0065\u006e");_fed .Name =_cegg .Get ("\u004e\u0061\u006d\u0065");_fed .State =_cegg .Get ("\u0053\u0074\u0061t\u0065");_fed .StateModel =_cegg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_fed ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cg .PdfObject ;Name _cg .PdfObject ;};

// ToPdfObject implements model.PdfModel interface.
func (_aagd *PdfOutputIntent )ToPdfObject ()_cg .PdfObject {if _aagd ._egbba ==nil {_aagd ._egbba =_cg .MakeDict ();};_edcda :=_aagd ._egbba ;if _aagd .Type !=""{_edcda .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName (_aagd .Type ));};_edcda .Set ("\u0053",_cg .MakeName (_aagd .S .String ()));
if _aagd .OutputCondition !=""{_edcda .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_cg .MakeString (_aagd .OutputCondition ));};_edcda .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_cg .MakeString (_aagd .OutputConditionIdentifier ));
_edcda .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_cg .MakeString (_aagd .RegistryName ));if _aagd .Info !=""{_edcda .Set ("\u0049\u006e\u0066\u006f",_cg .MakeString (_aagd .Info ));};if len (_aagd .DestOutputProfile )!=0{_efgf ,_bebg :=_cg .MakeStream (_aagd .DestOutputProfile ,_cg .NewFlateEncoder ());
if _bebg !=nil {_aefb .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bebg );
};_efgf .PdfObjectDictionary .Set ("\u004e",_cg .MakeInteger (int64 (_aagd .ColorComponents )));_bdbbf :=make ([]float64 ,_aagd .ColorComponents *2);for _eadf :=0;_eadf < _aagd .ColorComponents *2;_eadf ++{_gbgagf :=0.0;if _eadf %2!=0{_gbgagf =1.0;};_bdbbf [_eadf ]=_gbgagf ;
};_efgf .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_cg .MakeArrayFromFloats (_bdbbf ));_edcda .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_efgf );};return _edcda ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cg .PdfObject ;AN _cg .PdfObject ;OP _cg .PdfObject ;JS _cg .PdfObject ;};

// ToPdfObject converts the font to a PDF representation.
func (_ebfae *pdfFontType0 )ToPdfObject ()_cg .PdfObject {if _ebfae ._ceca ==nil {_ebfae ._ceca =&_cg .PdfIndirectObject {};};_beebe :=_ebfae .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_ebfae ._ceca .PdfObject =_beebe ;if _ebfae .Encoding !=nil {_beebe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebfae .Encoding );
}else if _ebfae ._befcb !=nil {_beebe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebfae ._befcb .ToPdfObject ());};if _ebfae .DescendantFont !=nil {_beebe .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cg .MakeArray (_ebfae .DescendantFont .ToPdfObject ()));
};return _ebfae ._ceca ;};func (_fbef *PdfAnnotationMarkup )appendToPdfDictionary (_adcb *_cg .PdfObjectDictionary ){_adcb .SetIfNotNil ("\u0054",_fbef .T );if _fbef .Popup !=nil {_adcb .Set ("\u0050\u006f\u0070u\u0070",_fbef .Popup .ToPdfObject ());};
_adcb .SetIfNotNil ("\u0043\u0041",_fbef .CA );_adcb .SetIfNotNil ("\u0052\u0043",_fbef .RC );_adcb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fbef .CreationDate );_adcb .SetIfNotNil ("\u0049\u0052\u0054",_fbef .IRT );
_adcb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_fbef .Subj );_adcb .SetIfNotNil ("\u0052\u0054",_fbef .RT );_adcb .SetIfNotNil ("\u0049\u0054",_fbef .IT );_adcb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_fbef .ExData );};

// ToPdfObject implements interface PdfModel.
func (_efd *PdfActionResetForm )ToPdfObject ()_cg .PdfObject {_efd .PdfAction .ToPdfObject ();_add :=_efd ._ebd ;_dd :=_add .PdfObject .(*_cg .PdfObjectDictionary );_dd .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeResetForm )));_dd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_efd .Fields );
_dd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_efd .Flags );return _add ;};type pdfCIDFontType0 struct{fontCommon ;_fceg *_cg .PdfIndirectObject ;_ddcfc _eba .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cg .PdfObject ;W _cg .PdfObject ;DW2 _cg .PdfObject ;W2 _cg .PdfObject ;_gecd map[_eba .CharCode ]float64 ;_adfdf float64 ;};func (_aeab *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// SetOCProperties sets the optional content properties.
func (_dggdfb *PdfWriter )SetOCProperties (ocProperties _cg .PdfObject )error {_cfgca :=_dggdfb ._adafd ;if ocProperties !=nil {_aefb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_cfgca .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dggdfb .addObjects (ocProperties );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aaca *PdfAnnotationStrikeOut )ToPdfObject ()_cg .PdfObject {_aaca .PdfAnnotation .ToPdfObject ();_cebf :=_aaca ._bed ;_dbgc :=_cebf .PdfObject .(*_cg .PdfObjectDictionary );_aaca .PdfAnnotationMarkup .appendToPdfDictionary (_dbgc );_dbgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dbgc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aaca .QuadPoints );return _cebf ;};

// ToPdfObject implements interface PdfModel.
func (_gga *PdfAction )ToPdfObject ()_cg .PdfObject {_gab :=_gga ._ebd ;_gf :=_gab .PdfObject .(*_cg .PdfObjectDictionary );_gf .Clear ();_gf .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_gf .SetIfNotNil ("\u0053",_gga .S );
_gf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gga .Next );return _gab ;};func (_gcba *LTV )enable (_bcbgb ,_cgedc []*_a .Certificate ,_egcdb string )error {_bceba ,_cadgg ,_fgfbc :=_gcba .buildCertChain (_bcbgb ,_cgedc );if _fgfbc !=nil {return _fgfbc ;
};_abgf ,_fgfbc :=_gcba .getCerts (_bceba );if _fgfbc !=nil {return _fgfbc ;};_ebgaca ,_fgfbc :=_gcba .getOCSPs (_bceba ,_cadgg );if _fgfbc !=nil {return _fgfbc ;};_fggdf ,_fgfbc :=_gcba .getCRLs (_bceba );if _fgfbc !=nil {return _fgfbc ;};_gfbg :=_gcba ._ggfebf ;
_aebgf ,_fgfbc :=_gfbg .addCerts (_abgf );if _fgfbc !=nil {return _fgfbc ;};_ecfg ,_fgfbc :=_gfbg .addOCSPs (_ebgaca );if _fgfbc !=nil {return _fgfbc ;};_edacdg ,_fgfbc :=_gfbg .addCRLs (_fggdf );if _fgfbc !=nil {return _fgfbc ;};if _egcdb !=""{_gfbg .VRI [_egcdb ]=&VRI {Cert :_aebgf ,OCSP :_ecfg ,CRL :_edacdg };
};_gcba ._edge .SetDSS (_gfbg );return nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_aaf :=NewPdfAnnotation ();_gcac :=&PdfAnnotationMovie {};_gcac .PdfAnnotation =_aaf ;_aaf .SetContext (_gcac );return _gcac ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gcb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfde ,_fegf :=_cg .GetNumbersAsFloat (objects );
if _fegf !=nil {return nil ,_fegf ;};return _gcb .ColorFromFloats (_bfde );};func _ceff (_gege *_cg .PdfObjectDictionary )(*PdfFieldButton ,error ){_fadf :=&PdfFieldButton {};_fadf .PdfField =NewPdfField ();_fadf .PdfField .SetContext (_fadf );_fadf .Opt ,_ =_cg .GetArray (_gege .Get ("\u004f\u0070\u0074"));
_daga :=NewPdfAnnotationWidget ();_daga .A ,_ =_cg .GetDict (_gege .Get ("\u0041"));_daga .AP ,_ =_cg .GetDict (_gege .Get ("\u0041\u0050"));_daga .SetContext (_fadf );_fadf .PdfField .Annotations =append (_fadf .PdfField .Annotations ,_daga );return _fadf ,nil ;
};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func _dffe (_ecgde *_cg .PdfObjectDictionary ){_cdaaa ,_cbbab :=_cg .GetArray (_ecgde .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_ddga ,_fffga :=_cg .GetIntVal (_ecgde .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_dcgb ,_fadgg :=_cg .GetIntVal (_ecgde .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _cbbab &&_fffga &&_fadgg {_dgae :=_cdaaa .Len ();if _dgae !=_dcgb -_ddga +1{_aefb .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_dgae ,_dcgb );
_dcbcbf :=_cg .PdfObjectInteger (_ddga +_dgae -1);_ecgde .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_dcbcbf );};};};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ggcda *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_eeeec ,_adddg :=color .(*PdfColorDeviceRGB );if !_adddg {_aefb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _eeeec ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_edegb pdfCIDFontType2 )GetRuneMetrics (r rune )(_egg .CharMetrics ,bool ){_beba ,_cbbf :=_edegb ._dbfe [r ];if !_cbbf {_gbaf ,_aceg :=_cg .GetInt (_edegb .DW );if !_aceg {return _egg .CharMetrics {},false ;};_beba =int (*_gbaf );};return _egg .CharMetrics {Wx :float64 (_beba )},true ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ggb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bacef ,_eccfa :=_cg .GetNumbersAsFloat (objects );
if _eccfa !=nil {return nil ,_eccfa ;};return _ggb .ColorFromFloats (_bacef );};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_abfgf *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _abfgf .baseFields ()._bfggb !=nil {return _abfgf .baseFields ()._bfggb ;};if _aaef :=_abfgf ._cgdd .getFontDescriptor ();_aaef !=nil {return _aaef ;};_aefb .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_abfgf );
return nil ;};func _gage (_dddcg _cg .PdfObject )(*PdfFontDescriptor ,error ){_bfbg :=&PdfFontDescriptor {};_dddcg =_cg .ResolveReference (_dddcg );if _cceb ,_gdbfc :=_dddcg .(*_cg .PdfIndirectObject );_gdbfc {_bfbg ._fabf =_cceb ;_dddcg =_cceb .PdfObject ;
};_dfdg ,_agfe :=_cg .GetDict (_dddcg );if !_agfe {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dddcg );
return nil ,_cg .ErrTypeError ;};if _fbgdd :=_dfdg .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_fbgdd !=nil {_bfbg .FontName =_fbgdd ;}else {_aefb .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_cdgfc ,_ :=_cg .GetName (_bfbg .FontName );if _bbea :=_dfdg .Get ("\u0054\u0079\u0070\u0065");_bbea !=nil {_fecge ,_fgbc :=_bbea .(*_cg .PdfObjectName );if !_fgbc ||string (*_fecge )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_aefb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bbea ,_cdgfc ,_bfbg .FontName );
};}else {_aefb .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cdgfc ,_bfbg .FontName );
};_bfbg .FontFamily =_dfdg .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_bfbg .FontStretch =_dfdg .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_bfbg .FontWeight =_dfdg .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_bfbg .Flags =_dfdg .Get ("\u0046\u006c\u0061g\u0073");_bfbg .FontBBox =_dfdg .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_bfbg .ItalicAngle =_dfdg .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_bfbg .Ascent =_dfdg .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_bfbg .Descent =_dfdg .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_bfbg .Leading =_dfdg .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_bfbg .CapHeight =_dfdg .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_bfbg .XHeight =_dfdg .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_bfbg .StemV =_dfdg .Get ("\u0053\u0074\u0065m\u0056");_bfbg .StemH =_dfdg .Get ("\u0053\u0074\u0065m\u0048");_bfbg .AvgWidth =_dfdg .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_bfbg .MaxWidth =_dfdg .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_bfbg .MissingWidth =_dfdg .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_bfbg .FontFile =_dfdg .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_bfbg .FontFile2 =_dfdg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_bfbg .FontFile3 =_dfdg .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_bfbg .CharSet =_dfdg .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_bfbg .Style =_dfdg .Get ("\u0053\u0074\u0079l\u0065");_bfbg .Lang =_dfdg .Get ("\u004c\u0061\u006e\u0067");
_bfbg .FD =_dfdg .Get ("\u0046\u0044");_bfbg .CIDSet =_dfdg .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _bfbg .Flags !=nil {if _dgaaa ,_ccde :=_cg .GetIntVal (_bfbg .Flags );_ccde {_bfbg ._debc =_dgaaa ;};};if _bfbg .MissingWidth !=nil {if _ggebg ,_bbfdd :=_cg .GetNumberAsFloat (_bfbg .MissingWidth );
_bbfdd ==nil {_bfbg ._edgb =_ggebg ;};};if _bfbg .FontFile !=nil {_cccf ,_dabbc :=_gebfcb (_bfbg .FontFile );if _dabbc !=nil {return _bfbg ,_dabbc ;};_aefb .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_cccf );_bfbg .fontFile =_cccf ;
};if _bfbg .FontFile2 !=nil {_eede ,_bacae :=_egg .NewFontFile2FromPdfObject (_bfbg .FontFile2 );if _bacae !=nil {return _bfbg ,_bacae ;};_aefb .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_eede .String ());_bfbg ._gfcea =&_eede ;
};return _bfbg ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_ggace *PdfReader )PageFromIndirectObject (ind *_cg .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_ggace .PageList )!=len (_ggace ._agdec ){return nil ,0,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dgdeg ,_ebdae :=range _ggace ._agdec {if _ebdae ==ind {return _ggace .PageList [_dgdeg ],_dgdeg +1,nil ;};};return nil ,0,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};const (_ddda =0x00001;_edgdd =0x00002;
_decg =0x00004;_eabg =0x00008;_aceag =0x00020;_gfca =0x00040;_accbc =0x10000;_cddgc =0x20000;_adaa =0x40000;);func (_accb *PdfAppender )addNewObject (_bfcd _cg .PdfObject ){if _ ,_fce :=_accb ._fage [_bfcd ];!_fce {_accb ._gdd =append (_accb ._gdd ,_bfcd );
_accb ._fage [_bfcd ]=struct{}{};};};

// ToInteger convert to an integer format.
func (_eefged *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_cffa :=_be .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cffa *_eefged .A ()),uint32 (_cffa *_eefged .B ()),uint32 (_cffa *_eefged .C ())};};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_acba *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fff .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ebfe :=field .V ;if _ebfe ==nil {return _fff .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_debda :=pageNum -1;
if _debda < 0||_debda > len (_acba ._fgcg )-1{return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_fbcge :=_acba .Reader .PageList [_debda ];field .P =_fbcge .ToPdfObject ();
if field .T ==nil ||field .T .String ()==""{field .T =_cg .MakeString (_g .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_fbcge .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _acba ._aagf ==_acba ._afa .AcroForm {_acba ._aagf =_acba .Reader .AcroForm ;
};_acbad :=_acba ._aagf ;if _acbad ==nil {_acbad =NewPdfAcroForm ();};_acbad .SigFlags =_cg .MakeInteger (3);_afag :=append (_acbad .AllFields (),field .PdfField );_acbad .Fields =&_afag ;_acba .ReplaceAcroForm (_acbad );_acba .UpdatePage (_fbcge );_acba ._fgcg [_debda ]=_fbcge ;
if _ ,_cbbb :=field .V .GetDocMDPPermission ();_cbbb {_acba ._geeg =NewPermissions (field .V );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_eeac *PdfSignature )ToPdfObject ()_cg .PdfObject {_eggf :=_eeac ._aagbgc ;var _dfadea *_cg .PdfObjectDictionary ;if _bccfb ,_fffaa :=_eggf .PdfObject .(*pdfSignDictionary );_fffaa {_dfadea =_bccfb .PdfObjectDictionary ;}else {_dfadea =_eggf .PdfObject .(*_cg .PdfObjectDictionary );
};_dfadea .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eeac .Type );_dfadea .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_eeac .Filter );_dfadea .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_eeac .SubFilter );_dfadea .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_eeac .ByteRange );
_dfadea .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eeac .Contents );_dfadea .SetIfNotNil ("\u0043\u0065\u0072\u0074",_eeac .Cert );_dfadea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eeac .Name );_dfadea .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_eeac .Reason );
_dfadea .SetIfNotNil ("\u004d",_eeac .M );_dfadea .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_eeac .Reference );_dfadea .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_eeac .Changes );_dfadea .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_eeac .ContactInfo );
return _eggf ;};func (_cgdge *Image )samplesTrimPadding (_caagc []uint32 )[]uint32 {_bbcac :=_cgdge .ColorComponents *int (_cgdge .Width )*int (_cgdge .Height );if len (_caagc )==_bbcac {return _caagc ;};_ggfeb :=make ([]uint32 ,_bbcac );_cfeea :=int (_cgdge .Width )*_cgdge .ColorComponents ;
var _bdda ,_bcada ,_baga ,_ggbe int ;_dbff :=_cc .BytesPerLine (int (_cgdge .Width ),int (_cgdge .BitsPerComponent ),_cgdge .ColorComponents );for _bdda =0;_bdda < int (_cgdge .Height );_bdda ++{_bcada =_bdda *int (_cgdge .Width );_baga =_bdda *_dbff ;
for _ggbe =0;_ggbe < _cfeea ;_ggbe ++{_ggfeb [_bcada +_ggbe ]=_caagc [_baga +_ggbe ];};};return _ggfeb ;};

// ToPdfObject implements interface PdfModel.
func (_bag *PdfActionJavaScript )ToPdfObject ()_cg .PdfObject {_bag .PdfAction .ToPdfObject ();_adf :=_bag ._ebd ;_bcb :=_adf .PdfObject .(*_cg .PdfObjectDictionary );_bcb .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeJavaScript )));_bcb .SetIfNotNil ("\u004a\u0053",_bag .JS );
return _adf ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_eddac *Image )GetSamples ()[]uint32 {_baacb :=_ggc .ResampleBytes (_eddac .Data ,int (_eddac .BitsPerComponent ));if _eddac .BitsPerComponent < 8{_baacb =_eddac .samplesTrimPadding (_baacb );};_fgaaf :=int (_eddac .Width )*int (_eddac .Height )*_eddac .ColorComponents ;
if len (_baacb )< _fgaaf {_aefb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_baacb ),_fgaaf );
return _baacb ;}else if len (_baacb )> _fgaaf {_aefb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_baacb ),_fgaaf );
_baacb =_baacb [:_fgaaf ];};return _baacb ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_daccgg *PdfAcroForm )filteredFields (_bbde FieldFilterFunc ,_baag bool )[]*PdfField {if _daccgg ==nil {return nil ;};return _aegac (_daccgg .Fields ,_bbde ,_baag );};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_faeee *pdfFontSimple )ToPdfObject ()_cg .PdfObject {if _faeee ._cdgcc ==nil {_faeee ._cdgcc =&_cg .PdfIndirectObject {};};_efcac :=_faeee .baseFields ().asPdfObjectDictionary ("");_faeee ._cdgcc .PdfObject =_efcac ;if _faeee .FirstChar !=nil {_efcac .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_faeee .FirstChar );
};if _faeee .LastChar !=nil {_efcac .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_faeee .LastChar );};if _faeee .Widths !=nil {_efcac .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_faeee .Widths );};if _faeee .Encoding !=nil {_efcac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_faeee .Encoding );
}else if _faeee ._edbda !=nil {_gbabc :=_faeee ._edbda .ToPdfObject ();if _gbabc !=nil {_efcac .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbabc );};};return _faeee ._cdgcc ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ef .ReadSeeker )(*PdfFont ,error ){_adbdge ,_bfeea :=_d .ReadAll (r );if _bfeea !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bfeea );
return nil ,_bfeea ;};_dagea ,_bfeea :=_egg .TtfParse (_gbe .NewReader (_adbdge ));if _bfeea !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bfeea );
return nil ,_bfeea ;};_ffddg :=&pdfCIDFontType2 {fontCommon :fontCommon {_agbd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dagea .Widths )<=0{return nil ,_fff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gebe :=1000.0/float64 (_dagea .UnitsPerEm );_fbgf :=_gebe *float64 (_dagea .Widths [0]);_fcade :=make (map[rune ]int );_cadac :=make (map[_egg .GID ]int );_dgced :=_egg .GID (len (_dagea .Widths ));for _faeeb ,_gcecbg :=range _dagea .Chars {if _gcecbg > _dgced -1{continue ;
};_ccfb :=int (_gebe *float64 (_dagea .Widths [_gcecbg ]));_fcade [_faeeb ]=_ccfb ;_cadac [_gcecbg ]=_ccfb ;};_ffddg ._dbfe =_fcade ;_ffddg .DW =_cg .MakeInteger (int64 (_fbgf ));_fagdg :=_eagb (_cadac ,uint16 (_dgced ));_ffddg .W =_cg .MakeIndirectObject (_fagdg );
_cebba :=_cg .MakeDict ();_cebba .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cg .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cebba .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cg .MakeString ("\u0041\u0064\u006fb\u0065"));
_cebba .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cg .MakeInteger (0));_ffddg .CIDSystemInfo =_cebba ;_cgdag :=&PdfFontDescriptor {FontName :_cg .MakeName (_dagea .PostScriptName ),Ascent :_cg .MakeFloat (_gebe *float64 (_dagea .TypoAscender )),Descent :_cg .MakeFloat (_gebe *float64 (_dagea .TypoDescender )),CapHeight :_cg .MakeFloat (_gebe *float64 (_dagea .CapHeight )),FontBBox :_cg .MakeArrayFromFloats ([]float64 {_gebe *float64 (_dagea .Xmin ),_gebe *float64 (_dagea .Ymin ),_gebe *float64 (_dagea .Xmax ),_gebe *float64 (_dagea .Ymax )}),ItalicAngle :_cg .MakeFloat (_dagea .ItalicAngle ),MissingWidth :_cg .MakeFloat (_fbgf )};
_ebgdc ,_bfeea :=_cg .MakeStream (_adbdge ,_cg .NewFlateEncoder ());if _bfeea !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bfeea );
return nil ,_bfeea ;};_ebgdc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cg .MakeInteger (int64 (len (_adbdge ))));_cgdag .FontFile2 =_ebgdc ;if _dagea .Bold {_cgdag .StemV =_cg .MakeInteger (120);}else {_cgdag .StemV =_cg .MakeInteger (70);
};_defef :=_decg ;if _dagea .IsFixedPitch {_defef |=_ddda ;};if _dagea .ItalicAngle !=0{_defef |=_gfca ;};_cgdag .Flags =_cg .MakeInteger (int64 (_defef ));_ffddg ._fbdedg =_dagea .PostScriptName ;_ffddg ._bfggb =_cgdag ;_afgge :=pdfFontType0 {fontCommon :fontCommon {_agbd :"\u0054\u0079\u0070e\u0030",_fbdedg :_dagea .PostScriptName },DescendantFont :&PdfFont {_cgdd :_ffddg },Encoding :_cg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_befcb :_dagea .NewEncoder ()};
if len (_dagea .Chars )> 0{_egdg :=make (map[_cb .CharCode ]rune ,len (_dagea .Chars ));for _edfeg ,_ebafc :=range _dagea .Chars {_dgfge :=_cb .CharCode (_ebafc );if _fagbc ,_aeeb :=_egdg [_dgfge ];!_aeeb ||(_aeeb &&_fagbc > _edfeg ){_egdg [_dgfge ]=_edfeg ;
};};_afgge ._dcded =_cb .NewToUnicodeCMap (_egdg );};_bffb :=PdfFont {_cgdd :&_afgge };return &_bffb ,nil ;};func (_ega *PdfReader )newPdfAnnotationPolygonFromDict (_daaa *_cg .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_geccd :=PdfAnnotationPolygon {};
_cef ,_ceb :=_ega .newPdfAnnotationMarkupFromDict (_daaa );if _ceb !=nil {return nil ,_ceb ;};_geccd .PdfAnnotationMarkup =_cef ;_geccd .Vertices =_daaa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_geccd .LE =_daaa .Get ("\u004c\u0045");_geccd .BS =_daaa .Get ("\u0042\u0053");
_geccd .IC =_daaa .Get ("\u0049\u0043");_geccd .BE =_daaa .Get ("\u0042\u0045");_geccd .IT =_daaa .Get ("\u0049\u0054");_geccd .Measure =_daaa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_geccd ,nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_daab *PdfReader )newPdfAnnotationMovieFromDict (_fbgad *_cg .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ggfg :=PdfAnnotationMovie {};_ggfg .T =_fbgad .Get ("\u0054");_ggfg .Movie =_fbgad .Get ("\u004d\u006f\u0076i\u0065");
_ggfg .A =_fbgad .Get ("\u0041");return &_ggfg ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_efaf ,_eefb :=_egg .NewStdFontByName (HelveticaName );if !_eefb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_abfeg :=_dbgce (_efaf );return &PdfFont {_cgdd :&_abfeg };};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dcbed *PdfPageResources )SetColorspaceByName (keyName _cg .PdfObjectName ,cs PdfColorspace )error {_faeeaf ,_gcfbc :=_dcbed .GetColorspaces ();if _gcfbc !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gcfbc );
return _gcfbc ;};if _faeeaf ==nil {_faeeaf =NewPdfPageResourcesColorspaces ();_dcbed .SetColorSpace (_faeeaf );};_faeeaf .Set (keyName ,cs );return nil ;};func (_ebdba *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// ToPdfObject returns the PDF representation of the page resources.
func (_adfgd *PdfPageResources )ToPdfObject ()_cg .PdfObject {_fggff :=_adfgd ._daacc ;_fggff .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_adfgd .ExtGState );if _adfgd ._efbc !=nil {_adfgd .ColorSpace =_adfgd ._efbc .ToPdfObject ();};_fggff .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_adfgd .ColorSpace );
_fggff .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_adfgd .Pattern );_fggff .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_adfgd .Shading );_fggff .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_adfgd .XObject );_fggff .SetIfNotNil ("\u0046\u006f\u006e\u0074",_adfgd .Font );
_fggff .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_adfgd .ProcSet );_fggff .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_adfgd .Properties );return _fggff ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetContentStream returns the pattern cell's content stream
func (_bgac *PdfTilingPattern )GetContentStream ()([]byte ,error ){_eeae ,_ ,_bfeeg :=_bgac .GetContentStreamWithEncoder ();return _eeae ,_bfeeg ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ggacc *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gdgb :=_ggc .NewReader (img .getBase ());_bfga :=_cc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cdgd :=_ggc .NewWriter (_bfga );
_gace :=_be .Pow (2,float64 (img .BitsPerComponent ))-1;_aefd :=make ([]uint32 ,3);var (_fgca uint32 ;ANorm ,X ,Y ,Z ,_dfced ,_acea ,_deaa float64 ;_cefc error ;);for {_fgca ,_cefc =_gdgb .ReadSample ();if _cefc ==_ef .EOF {break ;}else if _cefc !=nil {return img ,_cefc ;
};ANorm =float64 (_fgca )/_gace ;X =_ggacc .WhitePoint [0]*_be .Pow (ANorm ,_ggacc .Gamma );Y =_ggacc .WhitePoint [1]*_be .Pow (ANorm ,_ggacc .Gamma );Z =_ggacc .WhitePoint [2]*_be .Pow (ANorm ,_ggacc .Gamma );_dfced =3.240479*X +-1.537150*Y +-0.498535*Z ;
_acea =-0.969256*X +1.875992*Y +0.041556*Z ;_deaa =0.055648*X +-0.204043*Y +1.057311*Z ;_dfced =_be .Min (_be .Max (_dfced ,0),1.0);_acea =_be .Min (_be .Max (_acea ,0),1.0);_deaa =_be .Min (_be .Max (_deaa ,0),1.0);_aefd [0]=uint32 (_dfced *_gace );_aefd [1]=uint32 (_acea *_gace );
_aefd [2]=uint32 (_deaa *_gace );if _cefc =_cdgd .WriteSamples (_aefd );_cefc !=nil {return img ,_cefc ;};};return _fddbb (&_bfga ),nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cg .PdfIndirectObject )*PdfOutlineItem {_fdaea :=PdfOutlineItem {};_fdaea ._gegde =&_fdaea ;_fdaea .Title =_cg .MakeString (title );_gccac :=_cg .MakeArray ();_gccac .Append (page );_gccac .Append (_cg .MakeName ("\u0046\u0069\u0074"));
_fdaea .Dest =_gccac ;return &_fdaea ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ebe *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// DecodeArray returns the component range values for the Indexed colorspace.
func (_befc *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_befc .HiVal )};};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bgfaf *PdfPage )GetContainingPdfObject ()_cg .PdfObject {return _bgfaf ._aegd };

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_acfbe *PdfFieldSignature )ToPdfObject ()_cg .PdfObject {if _acfbe .PdfAnnotationWidget !=nil {_acfbe .PdfAnnotationWidget .ToPdfObject ();};_acfbe .PdfField .ToPdfObject ();_agege :=_acfbe ._gecee ;_bfccb :=_agege .PdfObject .(*_cg .PdfObjectDictionary );
_bfccb .SetIfNotNil ("\u0046\u0054",_cg .MakeName ("\u0053\u0069\u0067"));_bfccb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_acfbe .Lock );_bfccb .SetIfNotNil ("\u0053\u0056",_acfbe .SV );if _acfbe .V !=nil {_bfccb .SetIfNotNil ("\u0056",_acfbe .V .ToPdfObject ());
};return _agege ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cg .PdfObject ;BS _cg .PdfObject ;LE _cg .PdfObject ;IC _cg .PdfObject ;LL _cg .PdfObject ;LLE _cg .PdfObject ;Cap _cg .PdfObject ;IT _cg .PdfObject ;LLO _cg .PdfObject ;CP _cg .PdfObject ;
Measure _cg .PdfObject ;CO _cg .PdfObject ;};func (_cfb *PdfReader )newPdfActionLaunchFromDict (_bdge *_cg .PdfObjectDictionary )(*PdfActionLaunch ,error ){_cbg ,_cca :=_eda (_bdge .Get ("\u0046"));if _cca !=nil {return nil ,_cca ;};return &PdfActionLaunch {Win :_bdge .Get ("\u0057\u0069\u006e"),Mac :_bdge .Get ("\u004d\u0061\u0063"),Unix :_bdge .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bdge .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cbg },nil ;
};

// String returns a string that describes `base`.
func (_gdbad fontCommon )String ()string {return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gdbad .coreString ());};

// ToPdfObject returns the PDF representation of the colorspace.
func (_begg *PdfColorspaceDeviceGray )ToPdfObject ()_cg .PdfObject {return _cg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gdb *PdfAppender )UpdateObject (obj _cg .PdfObject ){_gdb .replaceObject (obj ,obj );if _ ,_bgbf :=_gdb ._fage [obj ];!_bgbf {_gdb ._gdd =append (_gdb ._gdd ,obj );_gdb ._fage [obj ]=struct{}{};};};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cgb :=NewPdfAnnotation ();_agd :=&PdfAnnotationWatermark {};_agd .PdfAnnotation =_cgb ;_cgb .SetContext (_agd );return _agd ;};func (_eefcd *PdfReader )newPdfSignatureFromIndirect (_fdacf *_cg .PdfIndirectObject )(*PdfSignature ,error ){_bdcece ,_daeed :=_fdacf .PdfObject .(*_cg .PdfObjectDictionary );
if !_daeed {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _dbegc ,_dfgeb :=_eefcd ._eggbd .GetModelFromPrimitive (_fdacf ).(*PdfSignature );_dfgeb {return _dbegc ,nil ;};_deccg :=&PdfSignature {};_deccg ._aagbgc =_fdacf ;_deccg .Type ,_ =_cg .GetName (_bdcece .Get ("\u0054\u0079\u0070\u0065"));
_deccg .Filter ,_daeed =_cg .GetName (_bdcece .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_daeed {_aefb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_deccg .SubFilter ,_ =_cg .GetName (_bdcece .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_deccg .Contents ,_daeed =_cg .GetString (_bdcece .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_daeed {_aefb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _ecfgf ,_cefeg :=_cg .GetArray (_bdcece .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_cefeg {_deccg .Reference =_cg .MakeArray ();for _ ,_bbbg :=range _ecfgf .Elements (){_ddefd ,_gafee :=_cg .GetDict (_bbbg );
if !_gafee {_aefb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cedgf ,_dgac :=_eefcd .newPdfSignatureReferenceFromDict (_ddefd );if _dgac !=nil {return nil ,_dgac ;};_deccg .Reference .Append (_cedgf .ToPdfObject ());};};_deccg .Cert =_bdcece .Get ("\u0043\u0065\u0072\u0074");_deccg .ByteRange ,_ =_cg .GetArray (_bdcece .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_deccg .Changes ,_ =_cg .GetArray (_bdcece .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_deccg .Name ,_ =_cg .GetString (_bdcece .Get ("\u004e\u0061\u006d\u0065"));_deccg .M ,_ =_cg .GetString (_bdcece .Get ("\u004d"));_deccg .Location ,_ =_cg .GetString (_bdcece .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_deccg .Reason ,_ =_cg .GetString (_bdcece .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_deccg .ContactInfo ,_ =_cg .GetString (_bdcece .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_deccg .R ,_ =_cg .GetInt (_bdcece .Get ("\u0052"));
_deccg .V ,_ =_cg .GetInt (_bdcece .Get ("\u0056"));_deccg .PropBuild ,_ =_cg .GetDict (_bdcece .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_deccg .PropAuthTime ,_ =_cg .GetInt (_bdcece .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_deccg .PropAuthType ,_ =_cg .GetName (_bdcece .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_eefcd ._eggbd .Register (_fdacf ,_deccg );return _deccg ,nil ;};func (_ebfa *PdfReader )newPdfAnnotationStrikeOut (_bbbe *_cg .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_deff :=PdfAnnotationStrikeOut {};
_baeg ,_ecg :=_ebfa .newPdfAnnotationMarkupFromDict (_bbbe );if _ecg !=nil {return nil ,_ecg ;};_deff .PdfAnnotationMarkup =_baeg ;_deff .QuadPoints =_bbbe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_deff ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_aecdg *PdfOutlineTreeNode )GetContainingPdfObject ()_cg .PdfObject {return _aecdg .GetContext ().GetContainingPdfObject ();};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cg .PdfObject ;Name _cg .PdfObject ;State _cg .PdfObject ;StateModel _cg .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acdbf *PdfShadingType7 )ToPdfObject ()_cg .PdfObject {_acdbf .PdfShading .ToPdfObject ();_acdgc ,_edcfd :=_acdbf .getShadingDict ();if _edcfd !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acdbf .BitsPerCoordinate !=nil {_acdgc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_acdbf .BitsPerCoordinate );};if _acdbf .BitsPerComponent !=nil {_acdgc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_acdbf .BitsPerComponent );
};if _acdbf .BitsPerFlag !=nil {_acdgc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_acdbf .BitsPerFlag );};if _acdbf .Decode !=nil {_acdgc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_acdbf .Decode );};if _acdbf .Function !=nil {if len (_acdbf .Function )==1{_acdgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acdbf .Function [0].ToPdfObject ());
}else {_fgfgd :=_cg .MakeArray ();for _ ,_edcad :=range _acdbf .Function {_fgfgd .Append (_edcad .ToPdfObject ());};_acdgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgfgd );};};return _acdbf ._ceabf ;};func (_gdgc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};func (_effea *PdfWriter )copyObjects (){_gcbce :=make (map[_cg .PdfObject ]_cg .PdfObject );_debce :=make ([]_cg .PdfObject ,0,len (_effea ._gegb ));_adddd :=make (map[_cg .PdfObject ]struct{},len (_effea ._gegb ));_gdcfg :=make (map[_cg .PdfObject ]struct{});
for _ ,_dedg :=range _effea ._gegb {_cfdda :=_effea .copyObject (_dedg ,_gcbce ,_gdcfg ,false );if _ ,_ccefg :=_gdcfg [_dedg ];_ccefg {continue ;};_debce =append (_debce ,_cfdda );_adddd [_cfdda ]=struct{}{};};_effea ._gegb =_debce ;_effea ._dcage =_adddd ;
_effea ._aeea =_effea .copyObject (_effea ._aeea ,_gcbce ,nil ,false ).(*_cg .PdfIndirectObject );_effea ._dfacgd =_effea .copyObject (_effea ._dfacgd ,_gcbce ,nil ,false ).(*_cg .PdfIndirectObject );if _effea ._gddd !=nil {_effea ._gddd =_effea .copyObject (_effea ._gddd ,_gcbce ,nil ,false ).(*_cg .PdfIndirectObject );
};if _effea ._dagdb {_baacc :=make (map[_cg .PdfObject ]int64 );for _baee ,_fgfc :=range _effea ._eeaca {if _cedgdf ,_fafec :=_gcbce [_baee ];_fafec {_baacc [_cedgdf ]=_fgfc ;}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_effea ._eeaca =_baacc ;};};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cg .PdfObject ;H _cg .PdfObject ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_ebbe *PdfInfo )AddCustomInfo (name string ,value string )error {if _ebbe ._ffga ==nil {_ebbe ._ffga =_cg .MakeDict ();};if _ ,_ggfe :=_badb [name ];_ggfe {return _g .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ebbe ._ffga .SetIfNotNil (*_cg .MakeName (name ),_cg .MakeString (value ));return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fdfe pdfFontType0 )GetCharMetrics (code _eba .CharCode )(_egg .CharMetrics ,bool ){if _fdfe .DescendantFont ==nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fdfe );
return _egg .CharMetrics {},false ;};return _fdfe .DescendantFont .GetCharMetrics (code );};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_geeeg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bdbcd :=_ggc .NewReader (img .getBase ());_abbed :=_cc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._dbcf ,img ._gegd );
_ebba :=_ggc .NewWriter (_abbed );_egcaf :=_be .Pow (2,float64 (img .BitsPerComponent ))-1;_fade :=_geeeg .GetNumComponents ();_gbdf :=make ([]uint32 ,_fade );_aaee :=make ([]float64 ,_fade );for {_fbec :=_bdbcd .ReadSamples (_gbdf );if _fbec ==_ef .EOF {break ;
}else if _fbec !=nil {return img ,_fbec ;};for _fbae :=0;_fbae < _fade ;_fbae ++{_cbab :=float64 (_gbdf [_fbae ])/_egcaf ;_aaee [_fbae ]=_cbab ;};_bcfe ,_fbec :=_geeeg .TintTransform .Evaluate (_aaee );if _fbec !=nil {return img ,_fbec ;};for _ ,_ccgef :=range _bcfe {_ccgef =_be .Min (_be .Max (0,_ccgef ),1.0);
if _fbec =_ebba .WriteSample (uint32 (_ccgef *_egcaf ));_fbec !=nil {return img ,_fbec ;};};};return _geeeg .AlternateSpace .ImageToRGB (_fddbb (&_abbed ));};

// GetCustomInfo returns a custom info value for the specified name.
func (_ecgb *PdfInfo )GetCustomInfo (name string )*_cg .PdfObjectString {var _ebed *_cg .PdfObjectString ;if _ecgb ._ffga ==nil {return _ebed ;};if _badc ,_cgbc :=_ecgb ._ffga .Get (*_cg .MakeName (name )).(*_cg .PdfObjectString );_cgbc {_ebed =_badc ;
};return _ebed ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_cecb *PdfAppender )updateObjectsDeep (_geba _cg .PdfObject ,_dcbb map[_cg .PdfObject ]struct{}){if _dcbb ==nil {_dcbb =map[_cg .PdfObject ]struct{}{};};if _ ,_edbe :=_dcbb [_geba ];_edbe ||_geba ==nil {return ;
};_dcbb [_geba ]=struct{}{};_bbebe :=_cg .ResolveReferencesDeep (_geba ,_cecb ._eead );if _bbebe !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbebe );};switch _acff :=_geba .(type ){case *_cg .PdfIndirectObject :switch {case _acff .GetParser ()==_cecb ._afa ._bafg :return ;
case _acff .GetParser ()==_cecb .Reader ._bafg :_eagge ,_ :=_cecb ._afa .GetIndirectObjectByNumber (int (_acff .ObjectNumber ));_efea ,_bgff :=_eagge .(*_cg .PdfIndirectObject );if _bgff &&_efea !=nil {if _efea .PdfObject !=_acff .PdfObject &&_efea .PdfObject .WriteString ()!=_acff .PdfObject .WriteString (){_cecb .addNewObject (_geba );
_cecb ._eddf [_geba ]=_acff .ObjectNumber ;};};default:_cecb .addNewObject (_geba );};_cecb .updateObjectsDeep (_acff .PdfObject ,_dcbb );case *_cg .PdfObjectArray :for _ ,_fgf :=range _acff .Elements (){_cecb .updateObjectsDeep (_fgf ,_dcbb );};case *_cg .PdfObjectDictionary :for _ ,_ddfa :=range _acff .Keys (){_cecb .updateObjectsDeep (_acff .Get (_ddfa ),_dcbb );
};case *_cg .PdfObjectStreams :if _acff .GetParser ()!=_cecb ._afa ._bafg {for _ ,_edga :=range _acff .Elements (){_cecb .updateObjectsDeep (_edga ,_dcbb );};};case *_cg .PdfObjectStream :switch {case _acff .GetParser ()==_cecb ._afa ._bafg :return ;case _acff .GetParser ()==_cecb .Reader ._bafg :if _ggcc ,_dcdf :=_cecb ._afa ._bafg .LookupByReference (_acff .PdfObjectReference );
_dcdf ==nil {var _affb bool ;if _abed ,_eagd :=_cg .GetStream (_ggcc );_eagd &&_gbe .Equal (_abed .Stream ,_acff .Stream ){_affb =true ;};if _acfg ,_adee :=_cg .GetDict (_ggcc );_affb &&_adee {_affb =_acfg .WriteString ()==_acff .PdfObjectDictionary .WriteString ();
};if _affb {return ;};};if _acff .ObjectNumber !=0{_cecb ._eddf [_geba ]=_acff .ObjectNumber ;};default:if _ ,_bfc :=_cecb ._fage [_geba ];!_bfc {_cecb .addNewObject (_geba );};};_cecb .updateObjectsDeep (_acff .PdfObjectDictionary ,_dcbb );};};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _bf .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_cg .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_cg .MakeInteger (int64 (permission )),V :_cg .MakeName ("\u0031\u002e\u0032")};
};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_dfgd *PdfPattern )GetContext ()PdfModel {return _dfgd ._ebca };

// G returns the value of the green component of the color.
func (_dcbbf *PdfColorDeviceRGB )G ()float64 {return _dcbbf [1]};

// IsTiling specifies if the pattern is a tiling pattern.
func (_eebb *PdfPattern )IsTiling ()bool {return _eebb .PatternType ==1};func (_caec *DSS )addCerts (_gabf [][]byte )([]*_cg .PdfObjectStream ,error ){return _caec .add (&_caec .Certs ,_caec ._dagc ,_gabf );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cecaa *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cg .StreamEncoder ,error ){_cgfcb ,_dccag :=_cecaa ._bcafe .(*_cg .PdfObjectStream );if !_dccag {_aefb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cecaa ._bcafe );
return nil ,nil ,_cg .ErrTypeError ;};_facaf ,_dceb :=_cg .DecodeStream (_cgfcb );if _dceb !=nil {_aefb .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dceb );
return nil ,nil ,_dceb ;};_cadacf ,_dceb :=_cg .NewEncoderFromStream (_cgfcb );if _dceb !=nil {_aefb .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dceb );
return nil ,nil ,_dceb ;};return _facaf ,_cadacf ,nil ;};func _gebfcb (_ggdaf _cg .PdfObject )(*fontFile ,error ){_aefb .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ggdaf );
_bgdad :=&fontFile {};_ggdaf =_cg .TraceToDirectObject (_ggdaf );_cbdda ,_bdgeaf :=_ggdaf .(*_cg .PdfObjectStream );if !_bdgeaf {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ggdaf );
return nil ,_cg .ErrTypeError ;};_bdddf :=_cbdda .PdfObjectDictionary ;_aecef ,_debe :=_cg .DecodeStream (_cbdda );if _debe !=nil {return nil ,_debe ;};_caacd ,_bdgeaf :=_cg .GetNameVal (_bdddf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bdgeaf {_bgdad ._eacf =_caacd ;
if _caacd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_aefb .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_afcbg ,_ :=_cg .GetIntVal (_bdddf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ddcdd ,_ :=_cg .GetIntVal (_bdddf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _afcbg > len (_aecef ){_afcbg =len (_aecef );
};if _afcbg +_ddcdd > len (_aecef ){_ddcdd =len (_aecef )-_afcbg ;};_bdca :=_aecef [:_afcbg ];var _deded []byte ;if _ddcdd > 0{_deded =_aecef [_afcbg :_afcbg +_ddcdd ];};if _afcbg > 0&&_ddcdd > 0{_gacfg :=_bgdad .loadFromSegments (_bdca ,_deded );if _gacfg !=nil {return nil ,_gacfg ;
};};return _bgdad ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_cfgcg PdfDate )ToGoTime ()_bb .Time {_dcfaf :=int (_cfgcg ._bdcac *60*60+_cfgcg ._bbded *60);switch _cfgcg ._gabde {case '-':_dcfaf =-_dcfaf ;case 'Z':_dcfaf =0;};_dcdeda :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cfgcg ._gabde ,_cfgcg ._bdcac ,_cfgcg ._bbded );
_bacca :=_bb .FixedZone (_dcdeda ,_dcfaf );return _bb .Date (int (_cfgcg ._gbgef ),_bb .Month (_cfgcg ._gbace ),int (_cfgcg ._bacec ),int (_cfgcg ._ecdbf ),int (_cfgcg ._degbg ),int (_cfgcg ._gfaed ),0,_bacca );};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_cagg *BorderStyle )GetPdfName ()string {switch *_cagg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func (_cged *PdfReader )newPdfAnnotationSoundFromDict (_cceg *_cg .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_eeda :=PdfAnnotationSound {};_cgg ,_dgfe :=_cged .newPdfAnnotationMarkupFromDict (_cceg );if _dgfe !=nil {return nil ,_dgfe ;
};_eeda .PdfAnnotationMarkup =_cgg ;_eeda .Name =_cceg .Get ("\u004e\u0061\u006d\u0065");_eeda .Sound =_cceg .Get ("\u0053\u006f\u0075n\u0064");return &_eeda ,nil ;};func _daef (_adagd _cg .PdfObject )(*PdfColorspaceDeviceN ,error ){_fegg :=NewPdfColorspaceDeviceN ();
if _egbb ,_fccg :=_adagd .(*_cg .PdfIndirectObject );_fccg {_fegg ._fcgd =_egbb ;};_adagd =_cg .TraceToDirectObject (_adagd );_bdfbf ,_cgae :=_adagd .(*_cg .PdfObjectArray );if !_cgae {return nil ,_g .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bdfbf .Len ()!=4&&_bdfbf .Len ()!=5{return nil ,_g .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_adagd =_bdfbf .Get (0);
_abec ,_cgae :=_adagd .(*_cg .PdfObjectName );if !_cgae {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_abec !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_g .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_adagd =_bdfbf .Get (1);
_adagd =_cg .TraceToDirectObject (_adagd );_aeac ,_cgae :=_adagd .(*_cg .PdfObjectArray );if !_cgae {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_fegg .ColorantNames =_aeac ;_adagd =_bdfbf .Get (2);_bfbca ,_cgdf :=NewPdfColorspaceFromPdfObject (_adagd );if _cgdf !=nil {return nil ,_cgdf ;};_fegg .AlternateSpace =_bfbca ;_begf ,_cgdf :=_eeafe (_bdfbf .Get (3));if _cgdf !=nil {return nil ,_cgdf ;
};_fegg .TintTransform =_begf ;if _bdfbf .Len ()==5{_adbdd ,_gcecb :=_cfec (_bdfbf .Get (4));if _gcecb !=nil {return nil ,_gcecb ;};_fegg .Attributes =_adbdd ;};return _fegg ,nil ;};func (_dafg *DSS )addOCSPs (_ebgc [][]byte )([]*_cg .PdfObjectStream ,error ){return _dafg .add (&_dafg .OCSPs ,_dafg ._ccag ,_ebgc );
};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gbde :_cg .MakeIndirectObject (_cg .MakeDict ()),VRI :map[string ]*VRI {}};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cg .PdfObject ;FS _cg .PdfObject ;F _cg .PdfObject ;UF _cg .PdfObject ;DOS _cg .PdfObject ;Mac _cg .PdfObject ;Unix _cg .PdfObject ;ID _cg .PdfObject ;V _cg .PdfObject ;EF _cg .PdfObject ;RF _cg .PdfObject ;Desc _cg .PdfObject ;
CI _cg .PdfObject ;_gdgcb _cg .PdfObject ;};func _cbba (_egee *_cg .PdfObjectDictionary )(*PdfFieldText ,error ){_adfa :=&PdfFieldText {};_adfa .DA ,_ =_cg .GetString (_egee .Get ("\u0044\u0041"));_adfa .Q ,_ =_cg .GetInt (_egee .Get ("\u0051"));_adfa .DS ,_ =_cg .GetString (_egee .Get ("\u0044\u0053"));
_adfa .RV =_egee .Get ("\u0052\u0056");_adfa .MaxLen ,_ =_cg .GetInt (_egee .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _adfa ,nil ;};func (_cbfe *PdfReader )newPdfAnnotationPolyLineFromDict (_ggac *_cg .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dcce :=PdfAnnotationPolyLine {};
_fda ,_ggaa :=_cbfe .newPdfAnnotationMarkupFromDict (_ggac );if _ggaa !=nil {return nil ,_ggaa ;};_dcce .PdfAnnotationMarkup =_fda ;_dcce .Vertices =_ggac .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dcce .LE =_ggac .Get ("\u004c\u0045");
_dcce .BS =_ggac .Get ("\u0042\u0053");_dcce .IC =_ggac .Get ("\u0049\u0043");_dcce .BE =_ggac .Get ("\u0042\u0045");_dcce .IT =_ggac .Get ("\u0049\u0054");_dcce .Measure =_ggac .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dcce ,nil ;};

// Write writes out the PDF.
func (_dbbcc *PdfWriter )Write (writer _ef .Writer )error {_aefb .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_dafbb :=_dbbcc .checkLicense ();if _dafbb !=nil {return _dafbb ;};if _dafbb =_dbbcc .writeOutlines ();_dafbb !=nil {return _dafbb ;};
if _dafbb =_dbbcc .writeAcroFormFields ();_dafbb !=nil {return _dafbb ;};_dbbcc .checkPendingObjects ();if _dafbb =_dbbcc .writeOutputIntents ();_dafbb !=nil {return _dafbb ;};_dbbcc .setCatalogVersion ();_dbbcc .copyObjects ();if _dafbb =_dbbcc .optimize ();
_dafbb !=nil {return _dafbb ;};if _dafbb =_dbbcc .optimizeDocument ();_dafbb !=nil {return _dafbb ;};var _edgg _f .Hash ;if _dbbcc ._fgagd {_edgg =_gg .New ();writer =_ef .MultiWriter (_edgg ,writer );};_dbbcc .setWriter (writer );_bfcag :=_dbbcc .checkCrossReferenceStream ();
_fgdgf ,_bfcag :=_dbbcc .mapObjectStreams (_bfcag );_dbbcc .adjustXRefAffectedVersion (_bfcag );_dbbcc .writeDocumentVersion ();_dbbcc .updateObjectNumbers ();_dbbcc .writeObjects ();if _dafbb =_dbbcc .writeObjectsInStreams (_fgdgf );_dafbb !=nil {return _dafbb ;
};_cacbc :=_dbbcc ._befaf ;var _cefa int ;for _adecg :=range _dbbcc ._ggaccb {if _adecg > _cefa {_cefa =_adecg ;};};if _dbbcc ._fgagd {if _dafbb =_dbbcc .setHashIDs (_edgg );_dafbb !=nil {return _dafbb ;};};if _bfcag {if _dafbb =_dbbcc .writeXRefStreams (_cefa ,_cacbc );
_dafbb !=nil {return _dafbb ;};}else {_dbbcc .writeTrailer (_cefa );};_dbbcc .makeOffSetReference (_cacbc );if _dafbb =_dbbcc .flushWriter ();_dafbb !=nil {return _dafbb ;};return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fegda *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aefb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_fff .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_abce *pdfFontType0 )bytesToCharcodes (_gecg []byte )([]_eba .CharCode ,bool ){if _abce ._ddfb ==nil {return nil ,false ;
};_bbac ,_aagfg :=_abce ._ddfb .BytesToCharcodes (_gecg );if !_aagfg {return nil ,false ;};_eabfb :=make ([]_eba .CharCode ,len (_bbac ));for _dddad ,_cbce :=range _bbac {_eabfb [_dddad ]=_eba .CharCode (_cbce );};return _eabfb ,true ;};

// String returns a string representation of what flags are set.
func (_dcbca FieldFlag )String ()string {_dbdd :="";if _dcbca ==FieldFlagClear {_dbdd ="\u0043\u006c\u0065a\u0072";return _dbdd ;};if _dcbca &FieldFlagReadOnly > 0{_dbdd +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _dcbca &FieldFlagRequired > 0{_dbdd +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _dcbca &FieldFlagNoExport > 0{_dbdd +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _dcbca &FieldFlagNoToggleToOff > 0{_dbdd +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _dcbca &FieldFlagRadio > 0{_dbdd +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _dcbca &FieldFlagPushbutton > 0{_dbdd +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _dcbca &FieldFlagRadiosInUnision > 0{_dbdd +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _dcbca &FieldFlagMultiline > 0{_dbdd +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _dcbca &FieldFlagPassword > 0{_dbdd +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _dcbca &FieldFlagFileSelect > 0{_dbdd +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _dcbca &FieldFlagDoNotScroll > 0{_dbdd +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _dcbca &FieldFlagComb > 0{_dbdd +="\u007c\u0043\u006fm\u0062";};if _dcbca &FieldFlagRichText > 0{_dbdd +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _dcbca &FieldFlagDoNotSpellCheck > 0{_dbdd +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _dcbca &FieldFlagCombo > 0{_dbdd +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _dcbca &FieldFlagEdit > 0{_dbdd +="\u007c\u0045\u0064i\u0074";};if _dcbca &FieldFlagSort > 0{_dbdd +="\u007c\u0053\u006fr\u0074";};if _dcbca &FieldFlagMultiSelect > 0{_dbdd +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _dcbca &FieldFlagCommitOnSelChange > 0{_dbdd +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _gb .Trim (_dbdd ,"\u007c");};

// ToPdfObject returns the PDF representation of the function.
func (_geaf *PdfFunctionType2 )ToPdfObject ()_cg .PdfObject {_abcgd :=_cg .MakeDict ();_abcgd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (2));_aefa :=&_cg .PdfObjectArray {};for _ ,_efbgcb :=range _geaf .Domain {_aefa .Append (_cg .MakeFloat (_efbgcb ));
};_abcgd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aefa );if _geaf .Range !=nil {_dbbea :=&_cg .PdfObjectArray {};for _ ,_bgdb :=range _geaf .Range {_dbbea .Append (_cg .MakeFloat (_bgdb ));};_abcgd .Set ("\u0052\u0061\u006eg\u0065",_dbbea );};if _geaf .C0 !=nil {_aaggg :=&_cg .PdfObjectArray {};
for _ ,_cacbb :=range _geaf .C0 {_aaggg .Append (_cg .MakeFloat (_cacbb ));};_abcgd .Set ("\u0043\u0030",_aaggg );};if _geaf .C1 !=nil {_fege :=&_cg .PdfObjectArray {};for _ ,_aafb :=range _geaf .C1 {_fege .Append (_cg .MakeFloat (_aafb ));};_abcgd .Set ("\u0043\u0031",_fege );
};_abcgd .Set ("\u004e",_cg .MakeFloat (_geaf .N ));if _geaf ._gfddd !=nil {_geaf ._gfddd .PdfObject =_abcgd ;return _geaf ._gfddd ;};return _abcgd ;};

// B returns the value of the B component of the color.
func (_abbcc *PdfColorLab )B ()float64 {return _abbcc [2]};

// Encrypt encrypts the output file with a specified user/owner password.
func (_agdbg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_bcbge :=RC4_128bit ;if options !=nil {_bcbge =options .Algorithm ;};_abfgdg :=_ab .PermOwner ;if options !=nil {_abfgdg =options .Permissions ;};var _cabb _ba .Filter ;
switch _bcbge {case RC4_128bit :_cabb =_ba .NewFilterV2 (16);case AES_128bit :_cabb =_ba .NewFilterAESV2 ();case AES_256bit :_cabb =_ba .NewFilterAESV3 ();default:return _g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_geda ,_eddddb ,_ageac :=_cg .PdfCryptNewEncrypt (_cabb ,userPass ,ownerPass ,_abfgdg );if _ageac !=nil {return _ageac ;};_agdbg ._dfeee =_geda ;if _eddddb .Major !=0{_agdbg .SetVersion (_eddddb .Major ,_eddddb .Minor );};_agdbg ._ceafg =_eddddb .Encrypt ;
_agdbg ._cfga ,_agdbg ._befdb =_eddddb .ID0 ,_eddddb .ID1 ;_ccdae :=_cg .MakeIndirectObject (_eddddb .Encrypt );_agdbg ._gddd =_ccdae ;_agdbg .addObject (_ccdae );return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cg .PdfObject ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cg .PdfObject )(*PdfFont ,error ){return _ecdb (fontObj ,true )};

// ColorToRGB converts an Indexed color to an RGB color.
func (_fgad *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fgad .Base ==nil {return nil ,_fff .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fgad .Base .ColorToRGB (color );};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_fcff *PdfAppender )SetDocInfo (info *PdfInfo ){_fcff ._bbbb =info };func (_gefe fontCommon )coreString ()string {_cdebf :="";if _gefe ._bfggb !=nil {_cdebf =_gefe ._bfggb .String ();};return _g .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gefe ._agbd ,_gefe ._fbdedg ,_gefe ._dfae ,_gefe ._gafcg ,_gefe ._gdaff !=nil ,_gefe .fontFlags (),_cdebf );
};func (_cebg *PdfReader )newPdfAnnotationProjectionFromDict (_fefb *_cg .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_baba :=&PdfAnnotationProjection {};_fgg ,_fbf :=_cebg .newPdfAnnotationMarkupFromDict (_fefb );if _fbf !=nil {return nil ,_fbf ;
};_baba .PdfAnnotationMarkup =_fgg ;return _baba ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eaecf ,_bdbgf :=_ad .Open (filePath );if _bdbgf !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bdbgf );
return nil ,_bdbgf ;};defer _eaecf .Close ();return NewCompositePdfFontFromTTF (_eaecf );};func (_ggdc *LTV )getCerts (_deece []*_a .Certificate )([][]byte ,error ){_bdgda :=make ([][]byte ,0,len (_deece ));for _ ,_cfae :=range _deece {_bdgda =append (_bdgda ,_cfae .Raw );
};return _bdgda ,nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_fffd *PdfReader )GetCatalogMarkInfo ()(_cg .PdfObject ,bool ){if _fffd ._fbggd ==nil {return nil ,false ;};_faegd :=_fffd ._fbggd .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _faegd ,_faegd !=nil ;};

// Encoder returns the font's text encoder.
func (_edff *pdfFontSimple )Encoder ()_eba .TextEncoder {if _edff ._edbda !=nil {return _edff ._edbda ;};if _edff ._ebedb !=nil {return _edff ._ebedb ;};_ecdgf ,_ :=_eba .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ecdgf ;};func (_eaea *XObjectImage )getParamsDict ()*_cg .PdfObjectDictionary {_eagedd :=_cg .MakeDict ();_eagedd .Set ("\u0057\u0069\u0064t\u0068",_cg .MakeInteger (*_eaea .Width ));_eagedd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cg .MakeInteger (*_eaea .Height ));
_eagedd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cg .MakeInteger (int64 (_eaea .ColorSpace .GetNumComponents ())));_eagedd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cg .MakeInteger (*_eaea .BitsPerComponent ));
return _eagedd ;};func (_adbbfa *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _eddea :=_adbbfa ._bfggb ;_eddea !=nil {return _eddea ;};return _adbbfa ._cgdad ;};func (_eddfe *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_dbcf []byte ;_gegd []float64 ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_dggfg *PdfAppender )UpdatePage (page *PdfPage ){_dggfg .updateObjectsDeep (page .ToPdfObject (),nil );};

// ToPdfObject returns the PDF representation of the function.
func (_begcb *PdfFunctionType4 )ToPdfObject ()_cg .PdfObject {_ddbagc :=_begcb ._eabe ;if _ddbagc ==nil {_begcb ._eabe =&_cg .PdfObjectStream {};_ddbagc =_begcb ._eabe ;};_dgaf :=_cg .MakeDict ();_dgaf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (4));
_gcfb :=&_cg .PdfObjectArray {};for _ ,_afbd :=range _begcb .Domain {_gcfb .Append (_cg .MakeFloat (_afbd ));};_dgaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcfb );_ceabc :=&_cg .PdfObjectArray {};for _ ,_bced :=range _begcb .Range {_ceabc .Append (_cg .MakeFloat (_bced ));
};_dgaf .Set ("\u0052\u0061\u006eg\u0065",_ceabc );if _begcb ._aadfb ==nil &&_begcb .Program !=nil {_begcb ._aadfb =[]byte (_begcb .Program .String ());};_dgaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_begcb ._aadfb ))));
_ddbagc .Stream =_begcb ._aadfb ;_ddbagc .PdfObjectDictionary =_dgaf ;return _ddbagc ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cg .PdfObject ;Q _cg .PdfObject ;RC _cg .PdfObject ;DS _cg .PdfObject ;CL _cg .PdfObject ;IT _cg .PdfObject ;BE _cg .PdfObject ;RD _cg .PdfObject ;BS _cg .PdfObject ;LE _cg .PdfObject ;
};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aeedd *PdfPageResources )GetColorspaceByName (keyName _cg .PdfObjectName )(PdfColorspace ,bool ){_gbfa ,_aadfa :=_aeedd .GetColorspaces ();if _aadfa !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_aadfa );
return nil ,false ;};if _gbfa ==nil {return nil ,false ;};_acfe ,_ebff :=_gbfa .Colorspaces [string (keyName )];if !_ebff {return nil ,false ;};return _acfe ,true ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cfeec :=PdfPage {};_cfeec ._edcag =_cg .MakeDict ();_cfeec .Resources =NewPdfPageResources ();_decb :=_cg .PdfIndirectObject {};_decb .PdfObject =_cfeec ._edcag ;_cfeec ._aegd =&_decb ;return &_cfeec ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_cbddf *PdfColorLab )GetNumComponents ()int {return 3};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_agcf *DSS )addCRLs (_decf [][]byte )([]*_cg .PdfObjectStream ,error ){return _agcf .add (&_agcf .CRLs ,_agcf ._bfcdf ,_decf );
};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ecece :=&PdfColorspaceDeviceN {};return _ecece ;};func _faebg ()string {_ebecf .Lock ();defer _ebecf .Unlock ();return _daabb };func _bfdb (_befa *_cg .PdfObjectStream )(*PdfFunctionType4 ,error ){_cfgc :=&PdfFunctionType4 {};
_cfgc ._eabe =_befa ;_dgfed :=_befa .PdfObjectDictionary ;_fddbg ,_fbcc :=_cg .TraceToDirectObject (_dgfed .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );if !_fbcc {_aefb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fddbg .Len ()%2!=0{_aefb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fgeac ,_ebeaf :=_fddbg .ToFloat64Array ();if _ebeaf !=nil {return nil ,_ebeaf ;};_cfgc .Domain =_fgeac ;_fddbg ,_fbcc =_cg .TraceToDirectObject (_dgfed .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );
if _fbcc {if _fddbg .Len ()< 0||_fddbg .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fegga ,_ddgd :=_fddbg .ToFloat64Array ();if _ddgd !=nil {return nil ,_ddgd ;};_cfgc .Range =_fegga ;
};_bdcgf ,_ebeaf :=_cg .DecodeStream (_befa );if _ebeaf !=nil {return nil ,_ebeaf ;};_cfgc ._aadfb =_bdcgf ;_ddbde :=_cab .NewPSParser (_bdcgf );_baac ,_ebeaf :=_ddbde .Parse ();if _ebeaf !=nil {return nil ,_ebeaf ;};_cfgc .Program =_baac ;return _cfgc ,nil ;
};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ccgc pdfFontType0 )GetRuneMetrics (r rune )(_egg .CharMetrics ,bool ){if _ccgc .DescendantFont ==nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ccgc );
return _egg .CharMetrics {},false ;};return _ccgc .DescendantFont .GetRuneMetrics (r );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_geaaf pdfCIDFontType2 )GetCharMetrics (code _eba .CharCode )(_egg .CharMetrics ,bool ){if _cfcafd ,_accfe :=_geaaf ._fefaa [code ];_accfe {return _egg .CharMetrics {Wx :_cfcafd },true ;};_becga :=rune (code );_addcf ,_bade :=_geaaf ._dbfe [_becga ];
if !_bade {_addcf =int (_geaaf ._cddef );};return _egg .CharMetrics {Wx :float64 (_addcf )},true ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_ffge :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_ffge .N =N ;return _ffge ,nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_fbeea *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ffgad ,_aefeg :=_cg .GetDict (_fbeea ._adafd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_aefeg {_ffgad =_cg .MakeDict ();_fbeea ._adafd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ffgad );
};_dcaad ,_aefeg :=_cg .GetDict (_ffgad .Get (_cg .PdfObjectName (extName )));if !_aefeg {_dcaad =_cg .MakeDict ();_ffgad .Set (_cg .PdfObjectName (extName ),_dcaad );};if _ggaf ,_ :=_cg .GetNameVal (_dcaad .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ggaf !=baseVersion {_dcaad .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cg .MakeName (baseVersion ));};if _ceef ,_ :=_cg .GetIntVal (_dcaad .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_ceef !=extLevel {_dcaad .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cg .MakeInteger (int64 (extLevel )));};};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// Val returns the color value.
func (_baaf *PdfColorDeviceGray )Val ()float64 {return float64 (*_baaf )};

// B returns the value of the blue component of the color.
func (_fdbe *PdfColorDeviceRGB )B ()float64 {return _fdbe [2]};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cag :=NewPdfAction ();_dg :=&PdfActionURI {};_dg .PdfAction =_cag ;_cag .SetContext (_dg );return _dg ;};func _bgbg (_cggce _cg .PdfObject )(*PdfColorspaceLab ,error ){_fadc :=NewPdfColorspaceLab ();if _abcf ,_afdd :=_cggce .(*_cg .PdfIndirectObject );
_afdd {_fadc ._egdc =_abcf ;};_cggce =_cg .TraceToDirectObject (_cggce );_fbbe ,_cgag :=_cggce .(*_cg .PdfObjectArray );if !_cgag {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbbe .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cggce =_cg .TraceToDirectObject (_fbbe .Get (0));_cegf ,_cgag :=_cggce .(*_cg .PdfObjectName );if !_cgag {return nil ,_g .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_cegf !="\u004c\u0061\u0062"{return nil ,_g .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cggce =_cg .TraceToDirectObject (_fbbe .Get (1));_eaggd ,_cgag :=_cggce .(*_cg .PdfObjectDictionary );
if !_cgag {return nil ,_g .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cggce =_eaggd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_cggce =_cg .TraceToDirectObject (_cggce );_adgc ,_cgag :=_cggce .(*_cg .PdfObjectArray );if !_cgag {return nil ,_g .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _adgc .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_dage ,_dbaf :=_adgc .GetAsFloat64Slice ();if _dbaf !=nil {return nil ,_dbaf ;};_fadc .WhitePoint =_dage ;_cggce =_eaggd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cggce !=nil {_cggce =_cg .TraceToDirectObject (_cggce );
_cgce ,_eaege :=_cggce .(*_cg .PdfObjectArray );if !_eaege {return nil ,_g .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cgce .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_faed ,_bcfg :=_cgce .GetAsFloat64Slice ();if _bcfg !=nil {return nil ,_bcfg ;};_fadc .BlackPoint =_faed ;};_cggce =_eaggd .Get ("\u0052\u0061\u006eg\u0065");if _cggce !=nil {_cggce =_cg .TraceToDirectObject (_cggce );_fdac ,_bagb :=_cggce .(*_cg .PdfObjectArray );
if !_bagb {_aefb .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdac .Len ()!=4{_aefb .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cdee ,_eaegc :=_fdac .GetAsFloat64Slice ();if _eaegc !=nil {return nil ,_eaegc ;};_fadc .Range =_cdee ;};return _fadc ,nil ;};func (_egbbg *PdfPattern )getDict ()*_cg .PdfObjectDictionary {if _bdgcf ,_cfcgce :=_egbbg ._bcafe .(*_cg .PdfIndirectObject );
_cfcgce {_bcebg ,_adcfc :=_bdgcf .PdfObject .(*_cg .PdfObjectDictionary );if !_adcfc {return nil ;};return _bcebg ;}else if _beedg ,_gcgg :=_egbbg ._bcafe .(*_cg .PdfObjectStream );_gcgg {return _beedg .PdfObjectDictionary ;}else {_aefb .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_egbbg ._bcafe );
return nil ;};};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cg .PdfObjectArray ;Matrix *_cg .PdfObjectArray ;Function []PdfFunction ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_fdage *CompliancePdfReader )error ;};

// A returns the value of the A component of the color.
func (_gfd *PdfColorCalRGB )A ()float64 {return _gfd [0]};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cg .PdfObjectName ;};

// ToPdfObject returns the PDF representation of the function.
func (_gdbbf *PdfFunctionType0 )ToPdfObject ()_cg .PdfObject {if _gdbbf ._fcafb ==nil {_gdbbf ._fcafb =&_cg .PdfObjectStream {};};_cdec :=_cg .MakeDict ();_cdec .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (0));
_ccaaf :=&_cg .PdfObjectArray {};for _ ,_efbab :=range _gdbbf .Domain {_ccaaf .Append (_cg .MakeFloat (_efbab ));};_cdec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ccaaf );_bbabb :=&_cg .PdfObjectArray {};for _ ,_efffg :=range _gdbbf .Range {_bbabb .Append (_cg .MakeFloat (_efffg ));
};_cdec .Set ("\u0052\u0061\u006eg\u0065",_bbabb );_cgad :=&_cg .PdfObjectArray {};for _ ,_bffc :=range _gdbbf .Size {_cgad .Append (_cg .MakeInteger (int64 (_bffc )));};_cdec .Set ("\u0053\u0069\u007a\u0065",_cgad );_cdec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cg .MakeInteger (int64 (_gdbbf .BitsPerSample )));
if _gdbbf .Order !=1{_cdec .Set ("\u004f\u0072\u0064e\u0072",_cg .MakeInteger (int64 (_gdbbf .Order )));};_cdec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_gdbbf ._cdffe ))));_gdbbf ._fcafb .Stream =_gdbbf ._cdffe ;_gdbbf ._fcafb .PdfObjectDictionary =_cdec ;
return _gdbbf ._fcafb ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fbg :=NewPdfAction ();_aac :=&PdfActionThread {};_aac .PdfAction =_fbg ;_fbg .SetContext (_aac );return _aac ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ada :=NewPdfAnnotation ();_bae :=&PdfAnnotationRichMedia {};_bae .PdfAnnotation =_ada ;_ada .SetContext (_bae );return _bae ;};func _fbfge (_ageage *_cg .PdfObjectDictionary )(*PdfFieldChoice ,error ){_cbfeg :=&PdfFieldChoice {};
_cbfeg .Opt ,_ =_cg .GetArray (_ageage .Get ("\u004f\u0070\u0074"));_cbfeg .TI ,_ =_cg .GetInt (_ageage .Get ("\u0054\u0049"));_cbfeg .I ,_ =_cg .GetArray (_ageage .Get ("\u0049"));return _cbfeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cea *PdfActionGoToR )ToPdfObject ()_cg .PdfObject {_cea .PdfAction .ToPdfObject ();_cabab :=_cea ._ebd ;_fde :=_cabab .PdfObject .(*_cg .PdfObjectDictionary );_fde .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoToR )));if _cea .F !=nil {_fde .Set ("\u0046",_cea .F .ToPdfObject ());
};_fde .SetIfNotNil ("\u0044",_cea .D );_fde .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cea .NewWindow );return _cabab ;};func (_fcdae *PdfReader )newPdfPageFromDict (_dbgac *_cg .PdfObjectDictionary )(*PdfPage ,error ){_ebafe :=NewPdfPage ();
_ebafe ._edcag =_dbgac ;_dbgffa :=*_dbgac ;_abecg ,_adfge :=_dbgffa .Get ("\u0054\u0079\u0070\u0065").(*_cg .PdfObjectName );if !_adfge {return nil ,_fff .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_abecg !="\u0050\u0061\u0067\u0065"{return nil ,_fff .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _efeg :=_dbgffa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_efeg !=nil {_ebafe .Parent =_efeg ;};if _dbafd :=_dbgffa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_dbafd !=nil {_cabdc ,_cafd :=_cg .GetString (_dbafd );if !_cafd {return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gbeb ,_ecabg :=NewPdfDate (_cabdc .Str ());if _ecabg !=nil {return nil ,_ecabg ;};_ebafe .LastModified =&_gbeb ;};if _aagde :=_dbgffa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_aagde !=nil &&!_cg .IsNullObject (_aagde ){_cabee ,_abaf :=_cg .GetDict (_aagde );
if !_abaf {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aagde );};var _dbdgg error ;_ebafe .Resources ,_dbdgg =NewPdfPageResourcesFromDict (_cabee );
if _dbdgg !=nil {return nil ,_dbdgg ;};}else {_fgfd ,_daddf :=_ebafe .getParentResources ();if _daddf !=nil {return nil ,_daddf ;};if _fgfd ==nil {_fgfd =NewPdfPageResources ();};_ebafe .Resources =_fgfd ;};if _abgdg :=_dbgffa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_abgdg !=nil {_ebgdb ,_gdgfa :=_cg .GetArray (_abgdg );if !_gdgfa {return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _bdaed error ;
_ebafe .MediaBox ,_bdaed =NewPdfRectangle (*_ebgdb );if _bdaed !=nil {return nil ,_bdaed ;};};if _ffgag :=_dbgffa .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ffgag !=nil {_aefaa ,_gcdac :=_cg .GetArray (_ffgag );if !_gcdac {return nil ,_fff .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _egffc error ;_ebafe .CropBox ,_egffc =NewPdfRectangle (*_aefaa );if _egffc !=nil {return nil ,_egffc ;};};if _cacac :=_dbgffa .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cacac !=nil {_cdge ,_fddbgf :=_cg .GetArray (_cacac );if !_fddbgf {return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fdcag error ;_ebafe .BleedBox ,_fdcag =NewPdfRectangle (*_cdge );if _fdcag !=nil {return nil ,_fdcag ;};};if _efcg :=_dbgffa .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_efcg !=nil {_dffbg ,_adgca :=_cg .GetArray (_efcg );if !_adgca {return nil ,_fff .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _edgdc error ;_ebafe .TrimBox ,_edgdc =NewPdfRectangle (*_dffbg );if _edgdc !=nil {return nil ,_edgdc ;};};if _abda :=_dbgffa .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_abda !=nil {_ddgg ,_ddgc :=_cg .GetArray (_abda );if !_ddgc {return nil ,_fff .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bdbab error ;_ebafe .ArtBox ,_bdbab =NewPdfRectangle (*_ddgg );if _bdbab !=nil {return nil ,_bdbab ;};};if _bfdg :=_dbgffa .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_bfdg !=nil {_ebafe .BoxColorInfo =_bfdg ;};if _abedb :=_dbgffa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_abedb !=nil {_ebafe .Contents =_abedb ;};if _bfce :=_dbgffa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bfce !=nil {_geagc ,_egadb :=_cg .GetNumberAsInt64 (_bfce );if _egadb !=nil {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ebafe .Rotate =&_geagc ;};if _fggc :=_dbgffa .Get ("\u0047\u0072\u006fu\u0070");_fggc !=nil {_ebafe .Group =_fggc ;};if _geafc :=_dbgffa .Get ("\u0054\u0068\u0075m\u0062");_geafc !=nil {_ebafe .Thumb =_geafc ;};if _fdgc :=_dbgffa .Get ("\u0042");_fdgc !=nil {_ebafe .B =_fdgc ;
};if _eddfa :=_dbgffa .Get ("\u0044\u0075\u0072");_eddfa !=nil {_ebafe .Dur =_eddfa ;};if _agfag :=_dbgffa .Get ("\u0054\u0072\u0061n\u0073");_agfag !=nil {_ebafe .Trans =_agfag ;};if _eefgbb :=_dbgffa .Get ("\u0041\u0041");_eefgbb !=nil {_ebafe .AA =_eefgbb ;
};if _bbegd :=_dbgffa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bbegd !=nil {_ebafe .Metadata =_bbegd ;};if _eaggf :=_dbgffa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eaggf !=nil {_ebafe .PieceInfo =_eaggf ;};if _ddgad :=_dbgffa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_ddgad !=nil {_ebafe .StructParents =_ddgad ;};if _bbfee :=_dbgffa .Get ("\u0049\u0044");_bbfee !=nil {_ebafe .ID =_bbfee ;};if _feba :=_dbgffa .Get ("\u0050\u005a");_feba !=nil {_ebafe .PZ =_feba ;};if _bfaggd :=_dbgffa .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bfaggd !=nil {_ebafe .SeparationInfo =_bfaggd ;};if _fcgcdc :=_dbgffa .Get ("\u0054\u0061\u0062\u0073");_fcgcdc !=nil {_ebafe .Tabs =_fcgcdc ;};if _bfdge :=_dbgffa .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bfdge !=nil {_ebafe .TemplateInstantiated =_bfdge ;};if _cfgcf :=_dbgffa .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_cfgcf !=nil {_ebafe .PresSteps =_cfgcf ;};if _eggdd :=_dbgffa .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_eggdd !=nil {_ebafe .UserUnit =_eggdd ;
};if _ffefb :=_dbgffa .Get ("\u0056\u0050");_ffefb !=nil {_ebafe .VP =_ffefb ;};if _agge :=_dbgffa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_agge !=nil {_ebafe .Annots =_agge ;};_ebafe ._abeaf =_fcdae ;return _ebafe ,nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_cfdec DefaultImageHandler )Read (reader _ef .Reader )(*Image ,error ){_bgdce ,_ ,_dgfce :=_bdg .Decode (reader );if _dgfce !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_dgfce );
return nil ,_dgfce ;};return _cfdec .NewImageFromGoImage (_bgdce );};

// ToInteger convert to an integer format.
func (_fcgg *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_bceab :=_be .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_bceab *_fcgg .C ()),uint32 (_bceab *_fcgg .M ()),uint32 (_bceab *_fcgg .Y ()),uint32 (_bceab *_fcgg .K ())};};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cg .PdfObjectArray ;TI *_cg .PdfObjectInteger ;I *_cg .PdfObjectArray ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cffd *Permissions )GetContainingPdfObject ()_cg .PdfObject {return _cffd ._cagcg };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_dfec *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecag ,_bdd :=_cg .GetNumbersAsFloat (objects );
if _bdd !=nil {return nil ,_bdd ;};return _dfec .ColorFromFloats (_ecag );};

// GetXObjectByName gets XObject by name.
func (_bgec *PdfPage )GetXObjectByName (name _cg .PdfObjectName )(_cg .PdfObject ,bool ){_dcbe ,_fgagb :=_bgec .Resources .XObject .(*_cg .PdfObjectDictionary );if !_fgagb {return nil ,false ;};if _dgafc :=_dcbe .Get (name );_dgafc !=nil {return _dgafc ,true ;
};return nil ,false ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;RD _cg .PdfObject ;};func (_gagcb *PdfWriter )hasObject (_effgg _cg .PdfObject )bool {_ ,_acbg :=_gagcb ._dcage [_effgg ];return _acbg ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dagfc pdfFontType3 )GetCharMetrics (code _eba .CharCode )(_egg .CharMetrics ,bool ){if _adfb ,_gbfg :=_dagfc ._cabeg [code ];_gbfg {return _egg .CharMetrics {Wx :_adfb },true ;};if _egg .IsStdFont (_egg .StdFontName (_dagfc ._fbdedg )){return _egg .CharMetrics {Wx :250},true ;
};return _egg .CharMetrics {},false ;};func (_eegd *PdfReader )traverseObjectData (_gdcc _cg .PdfObject )error {return _cg .ResolveReferencesDeep (_gdcc ,_eegd ._eebec );};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// Add appends a top level outline item to the outline.
func (_eeffd *Outline )Add (item *OutlineItem ){_eeffd .Entries =append (_eeffd .Entries ,item )};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbebd *PdfShadingType2 )ToPdfObject ()_cg .PdfObject {_fbebd .PdfShading .ToPdfObject ();_dfacg ,_fbcgg :=_fbebd .getShadingDict ();if _fbcgg !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dfacg ==nil {_aefb .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fbebd .Coords !=nil {_dfacg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fbebd .Coords );
};if _fbebd .Domain !=nil {_dfacg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbebd .Domain );};if _fbebd .Function !=nil {if len (_fbebd .Function )==1{_dfacg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbebd .Function [0].ToPdfObject ());
}else {_egefe :=_cg .MakeArray ();for _ ,_fbdgf :=range _fbebd .Function {_egefe .Append (_fbdgf .ToPdfObject ());};_dfacg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egefe );};};if _fbebd .Extend !=nil {_dfacg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fbebd .Extend );
};return _fbebd ._ceabf ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_ffcga pdfFontSimple )GetCharMetrics (code _eba .CharCode )(_egg .CharMetrics ,bool ){if _cbgff ,_fcbb :=_ffcga ._bdbde [code ];_fcbb {return _egg .CharMetrics {Wx :_cbgff },true ;};if _egg .IsStdFont (_egg .StdFontName (_ffcga ._fbdedg )){return _egg .CharMetrics {Wx :250},true ;
};return _egg .CharMetrics {},false ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cg .PdfObjectInteger ;TilingType *_cg .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cg .PdfObjectFloat ;YStep *_cg .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cg .PdfObjectArray ;};func (_gdbb *fontFile )parseASCIIPart (_ccega []byte )error {if len (_ccega )< 2||string (_ccega [:2])!="\u0025\u0021"{return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_dggc ,_decca ,_adfe :=_gfffa (_ccega );if _adfe !=nil {return _adfe ;};_agbad :=_fedc (_dggc );_gdbb ._cacf =_agbad ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gdbb ._cacf ==""{_aefb .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _decca !=""{_eaadb ,_gfgcg :=_faeb (_decca );if _gfgcg !=nil {return _gfgcg ;};_edege ,_gfgcg :=_eba .NewCustomSimpleTextEncoder (_eaadb ,nil );if _gfgcg !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gfgcg );
return nil ;};_gdbb ._badefc =_edege ;};return nil ;};func (_bged *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_bfeb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_egfg ,_ ,_eaec :=_bfeb .CharcodesToUnicodeWithStats (_bfeb .BytesToCharcodes (data ));_bfab :=_eba .ExpandLigatures (_egfg );return _bfab ,_fbb .RuneCountInString (_bfab ),_eaec ;
};func (_gfbbf *PdfWriter )mapObjectStreams (_aaebd bool )(map[_cg .PdfObject ]bool ,bool ){_bfffg :=make (map[_cg .PdfObject ]bool );for _ ,_eefbbb :=range _gfbbf ._gegb {if _gfcab ,_fdgbbb :=_eefbbb .(*_cg .PdfObjectStreams );_fdgbbb {_aaebd =true ;for _ ,_cebdd :=range _gfcab .Elements (){_bfffg [_cebdd ]=true ;
if _cdcfg ,_dfcd :=_cebdd .(*_cg .PdfIndirectObject );_dfcd {_bfffg [_cdcfg .PdfObject ]=true ;};};};};return _bfffg ,_aaebd ;};func (_gfagg *pdfFontSimple )getFontEncoding ()(_fcfff string ,_addbg map[_eba .CharCode ]_eba .GlyphName ,_bcbb error ){_fcfff ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _degadb ,_abgd :=_cegfa [_gfagg ._fbdedg ];_abgd {_fcfff =_degadb ;}else if _gfagg .fontFlags ()&_decg !=0{for _gdafff ,_dcgdf :=range _cegfa {if _gb .Contains (_gfagg ._fbdedg ,_gdafff ){_fcfff =_dcgdf ;break ;};};};if _gfagg .Encoding ==nil {return _fcfff ,nil ,nil ;
};switch _cbcdd :=_gfagg .Encoding .(type ){case *_cg .PdfObjectName :return string (*_cbcdd ),nil ,nil ;case *_cg .PdfObjectDictionary :_dcbdf ,_feec :=_cg .GetName (_cbcdd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _feec {_fcfff =_dcbdf .String ();};if _cdfgg :=_cbcdd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_cdfgg !=nil {_ggecc ,_afdeg :=_cg .GetArray (_cdfgg );if !_afdeg {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cbcdd ,_cbcdd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cg .ErrTypeError ;};_addbg ,_bcbb =_eba .FromFontDifferences (_ggecc );};return _fcfff ,_addbg ,_bcbb ;default:_aefb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gfagg .Encoding ,_gfagg .Encoding );
return "",nil ,_cg .ErrTypeError ;};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_afdb *PdfColorspaceLab )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecfbc ,_ffgd :=_cg .GetNumbersAsFloat (objects );
if _ffgd !=nil {return nil ,_ffgd ;};return _afdb .ColorFromFloats (_ecfbc );};type pdfSignDictionary struct{*_cg .PdfObjectDictionary ;_gccd *SignatureHandler ;_bbfde *PdfSignature ;_edace int64 ;_eafa int ;_eccfc int ;_baggc int ;_degag int ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_eefce *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fegff ,_abae :=color .(*PdfColorPattern );if !_abae {_aefb .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _fegff .Color ==nil {return color ,nil ;};if _eefce .UnderlyingCS ==nil {return nil ,_fff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _eefce .UnderlyingCS .ColorToRGB (_fegff .Color );};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_aacac *PdfPageResources )GenerateXObjectName ()_cg .PdfObjectName {_dbbg :=1;for {_aacfg :=_cg .MakeName (_g .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dbbg ));if !_aacac .HasXObjectByName (*_aacfg ){return *_aacfg ;};_dbbg ++;};};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cddg :=NewPdfAnnotation ();_fgbf :=&PdfAnnotationTrapNet {};_fgbf .PdfAnnotation =_cddg ;_cddg .SetContext (_fgbf );return _fgbf ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_defc *PdfColorspaceLab )DecodeArray ()[]float64 {_dfad :=[]float64 {0,100};if _defc .Range !=nil &&len (_defc .Range )==4{_dfad =append (_dfad ,_defc .Range ...);}else {_dfad =append (_dfad ,-100,100,-100,100);};return _dfad ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ea :=NewPdfAction ();_ece :=&PdfActionRendition {};_ece .PdfAction =_ea ;_ea .SetContext (_ece );return _ece ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_cdeeg *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_efdea *PdfPageResources )HasExtGState (keyName _cg .PdfObjectName )bool {_ ,_aaabb :=_efdea .GetFontByName (keyName );return _aaabb ;};

// ParserMetadata gets the parser  metadata.
func (_fbdef *CompliancePdfReader )ParserMetadata ()_cg .ParserMetadata {if _fbdef ._feae ==(_cg .ParserMetadata {}){_fbdef ._feae ,_ =_fbdef ._bafg .ParserMetadata ();};return _fbdef ._feae ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_fagf :=map[rune ]int {};for _ ,_aggceg :=range text {_fagf [_aggceg ]++;};return _fagf ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cg .PdfObject ;FontFamily _cg .PdfObject ;FontStretch _cg .PdfObject ;FontWeight _cg .PdfObject ;Flags _cg .PdfObject ;FontBBox _cg .PdfObject ;ItalicAngle _cg .PdfObject ;Ascent _cg .PdfObject ;Descent _cg .PdfObject ;
Leading _cg .PdfObject ;CapHeight _cg .PdfObject ;XHeight _cg .PdfObject ;StemV _cg .PdfObject ;StemH _cg .PdfObject ;AvgWidth _cg .PdfObject ;MaxWidth _cg .PdfObject ;MissingWidth _cg .PdfObject ;FontFile _cg .PdfObject ;FontFile2 _cg .PdfObject ;FontFile3 _cg .PdfObject ;
CharSet _cg .PdfObject ;_debc int ;_edgb float64 ;*fontFile ;_gfcea *_egg .TtfType ;

// Additional entries for CIDFonts
Style _cg .PdfObject ;Lang _cg .PdfObject ;FD _cg .PdfObject ;CIDSet _cg .PdfObject ;_fabf *_cg .PdfIndirectObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bbcf *PdfAnnotation )GetContainingPdfObject ()_cg .PdfObject {return _bbcf ._bed };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dfeab *PdfPageResources )GetShadingByName (keyName _cg .PdfObjectName )(*PdfShading ,bool ){if _dfeab .Shading ==nil {return nil ,false ;};_bgcac ,_eaaad :=_cg .TraceToDirectObject (_dfeab .Shading ).(*_cg .PdfObjectDictionary );if !_eaaad {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfeab .Shading );
return nil ,false ;};if _agagf :=_bgcac .Get (keyName );_agagf !=nil {_aegaa ,_cfaca :=_bffaf (_agagf );if _cfaca !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cfaca );
return nil ,false ;};return _aegaa ,true ;};return nil ,false ;};

// C returns the value of the C component of the color.
func (_gaca *PdfColorCalRGB )C ()float64 {return _gaca [2]};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SetContext sets the sub action (context).
func (_ffc *PdfAction )SetContext (ctx PdfModel ){_ffc ._dbf =ctx };

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_feaee :=&PdfFilespec {};_feaee ._gdgcb =_cg .MakeIndirectObject (_cg .MakeDict ());return _feaee ;};

// GetPage returns the PdfPage model for the specified page number.
func (_feffd *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _feffd ._bafg .GetCrypter ()!=nil &&!_feffd ._bafg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_feffd ._agdec )< pageNumber {return nil ,_fff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_ddcgc :=pageNumber -1;if _ddcgc < 0{return nil ,_g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_gfeaf :=_feffd .PageList [_ddcgc ];
return _gfeaf ,nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_cg .PdfParser ;DiffPolicy _bf .DiffPolicy ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_aagbgc *_cg .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cg .PdfObjectName ;Filter *_cg .PdfObjectName ;SubFilter *_cg .PdfObjectName ;Contents *_cg .PdfObjectString ;Cert _cg .PdfObject ;ByteRange *_cg .PdfObjectArray ;Reference *_cg .PdfObjectArray ;Changes *_cg .PdfObjectArray ;Name *_cg .PdfObjectString ;
M *_cg .PdfObjectString ;Location *_cg .PdfObjectString ;Reason *_cg .PdfObjectString ;ContactInfo *_cg .PdfObjectString ;R *_cg .PdfObjectInteger ;V *_cg .PdfObjectInteger ;PropBuild *_cg .PdfObjectDictionary ;PropAuthTime *_cg .PdfObjectInteger ;PropAuthType *_cg .PdfObjectName ;
};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cg .StreamEncoder ;FormType _cg .PdfObject ;BBox _cg .PdfObject ;Matrix _cg .PdfObject ;Resources *PdfPageResources ;Group _cg .PdfObject ;Ref _cg .PdfObject ;MetaData _cg .PdfObject ;PieceInfo _cg .PdfObject ;LastModified _cg .PdfObject ;
StructParent _cg .PdfObject ;StructParents _cg .PdfObject ;OPI _cg .PdfObject ;OC _cg .PdfObject ;Name _cg .PdfObject ;

// Stream data.
Stream []byte ;_eeecdg *_cg .PdfObjectStream ;};type modelManager struct{_acbfc map[PdfModel ]_cg .PdfObject ;_dffca map[_cg .PdfObject ]PdfModel ;};func (_eeecd *PdfReader )buildPageList (_afdg *_cg .PdfIndirectObject ,_bfgcb *_cg .PdfIndirectObject ,_gfgdf map[_cg .PdfObject ]struct{})error {if _afdg ==nil {return nil ;
};if _ ,_ebdaa :=_gfgdf [_afdg ];_ebdaa {_aefb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_afdg .ObjectNumber );
return nil ;};_gfgdf [_afdg ]=struct{}{};_bbefbd ,_bbefc :=_afdg .PdfObject .(*_cg .PdfObjectDictionary );if !_bbefc {return _fff .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_fcffb ,_bbefc :=(*_bbefbd ).Get ("\u0054\u0079\u0070\u0065").(*_cg .PdfObjectName );
if !_bbefc {if _bbefbd .Get ("\u004b\u0069\u0064\u0073")==nil {return _fff .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_aefb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_fcffb =_cg .MakeName ("\u0050\u0061\u0067e\u0073");_bbefbd .Set ("\u0054\u0079\u0070\u0065",_fcffb );};_aefb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_fcffb ,_afdg );
if *_fcffb =="\u0050\u0061\u0067\u0065"{_caagd ,_fgaad :=_eeecd .newPdfPageFromDict (_bbefbd );if _fgaad !=nil {return _fgaad ;};_caagd .setContainer (_afdg );if _bfgcb !=nil {_bbefbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfgcb );};_eeecd ._agdec =append (_eeecd ._agdec ,_afdg );
_eeecd .PageList =append (_eeecd .PageList ,_caagd );return nil ;};if *_fcffb !="\u0050\u0061\u0067e\u0073"{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_fcffb );
return _fff .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _bfgcb !=nil {_bbefbd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfgcb );};if !_eeecd ._ddae {_dffbga :=_eeecd .traverseObjectData (_afdg );if _dffbga !=nil {return _dffbga ;};};_aeafc ,_gabbc :=_eeecd ._bafg .Resolve (_bbefbd .Get ("\u004b\u0069\u0064\u0073"));
if _gabbc !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gabbc ;};var _eeeeg *_cg .PdfObjectArray ;
_eeeeg ,_bbefc =_aeafc .(*_cg .PdfObjectArray );if !_bbefc {_dgaed ,_ccbc :=_aeafc .(*_cg .PdfIndirectObject );if !_ccbc {return _fff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_eeeeg ,_bbefc =_dgaed .PdfObject .(*_cg .PdfObjectArray );
if !_bbefc {return _fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_aefb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_eeeeg );
for _cacbe ,_ddbdee :=range _eeeeg .Elements (){_fecgeb ,_fcecd :=_cg .GetIndirect (_ddbdee );if !_fcecd {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_fecgeb );
return _fff .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_eeeeg .Set (_cacbe ,_fecgeb );_gabbc =_eeecd .buildPageList (_fecgeb ,_afdg ,_gfgdf );if _gabbc !=nil {return _gabbc ;
};};return nil ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _cg .PdfObject )(*PdfInfo ,error ){var _fbgae PdfInfo ;_acbba ,_fcef :=obj .(*_cg .PdfObjectDictionary );if !_fcef {return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_daaga :=range _acbba .Keys (){switch _daaga {case "\u0054\u0069\u0074l\u0065":_fbgae .Title ,_ =_cg .GetString (_acbba .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_fbgae .Author ,_ =_cg .GetString (_acbba .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_fbgae .Subject ,_ =_cg .GetString (_acbba .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_fbgae .Keywords ,_ =_cg .GetString (_acbba .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_fbgae .Creator ,_ =_cg .GetString (_acbba .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_fbgae .Producer ,_ =_cg .GetString (_acbba .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_fbgae .Trapped ,_ =_cg .GetName (_acbba .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _abfb ,_cebb :=_cg .GetString (_acbba .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_cebb &&_abfb .String ()!=""{_cbdg ,_abac :=NewPdfDate (_abfb .String ());if _abac !=nil {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_abac );
};_fbgae .CreationDate =&_cbdg ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _aega ,_eeegf :=_cg .GetString (_acbba .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_eeegf &&_aega .String ()!=""{_bgada ,_bagf :=NewPdfDate (_aega .String ());if _bagf !=nil {return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bagf );
};_fbgae .ModifiedDate =&_bgada ;};default:_dbc ,_ :=_cg .GetString (_acbba .Get (_daaga ));if _fbgae ._ffga ==nil {_fbgae ._ffga =_cg .MakeDict ();};_fbgae ._ffga .Set (_daaga ,_dbc );};};return &_fbgae ,nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_egaa *PdfAcroForm ,_acffa *PdfField ,_ebadb *PdfAnnotationWidget )(*_cg .PdfObjectDictionary ,error );};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bcgd PdfModel ;_gecee *_cg .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cg .PdfObjectName ;T *_cg .PdfObjectString ;TU *_cg .PdfObjectString ;TM *_cg .PdfObjectString ;Ff *_cg .PdfObjectInteger ;
V _cg .PdfObject ;DV _cg .PdfObject ;AA _cg .PdfObject ;VariableText *VariableText ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ebbd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_edddg *pdfFontSimple )SetEncoder (encoder _eba .TextEncoder ){_edddg ._edbda =encoder };

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};type fontFile struct{_cacf string ;_eacf string ;_badefc _eba .SimpleEncoder ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_dge :=&PdfAnnotation {};_dge ._bed =_cg .MakeIndirectObject (_cg .MakeDict ());return _dge ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cg .PdfObject ;MK _cg .PdfObject ;A _cg .PdfObject ;AA _cg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fee *PdfActionURI )ToPdfObject ()_cg .PdfObject {_fee .PdfAction .ToPdfObject ();_ffag :=_fee ._ebd ;_cgc :=_ffag .PdfObject .(*_cg .PdfObjectDictionary );_cgc .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeURI )));_cgc .SetIfNotNil ("\u0055\u0052\u0049",_fee .URI );
_cgc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fee .IsMap );return _ffag ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ffea *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bbefa []*PdfField ;if _ffea .AcroForm !=nil {_bbefa =_ffea .AcroForm .AllFields ();};_adcbf :=make (map[*PdfField ]struct{},len (_bbefa ));for _ ,_baafd :=range _bbefa {_adcbf [_baafd ]=struct{}{};
};for _ ,_bafde :=range _ffea .PageList {_ggfac ,_fdcaga :=_bafde .GetAnnotations ();if _fdcaga !=nil {return false ,_fdcaga ;};for _ ,_faef :=range _ggfac {_afebg ,_dacda :=_faef .GetContext ().(*PdfAnnotationWidget );if !_dacda {continue ;};_febg :=_afebg .Field ();
if _febg ==nil {return true ,nil ;};if _ ,_ecbc :=_adcbf [_febg ];!_ecbc {return true ,nil ;};};};return false ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_geag *_cg .PdfIndirectObject ;};

// ToPdfObject converts date to a PDF string object.
func (_ebcgde *PdfDate )ToPdfObject ()_cg .PdfObject {_effcc :=_g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ebcgde ._gbgef ,_ebcgde ._gbace ,_ebcgde ._bacec ,_ebcgde ._ecdbf ,_ebcgde ._degbg ,_ebcgde ._gfaed ,_ebcgde ._gabde ,_ebcgde ._bdcac ,_ebcgde ._bbded );
return _cg .MakeString (_effcc );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fgbfb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if _fgbfb .Alternate ==nil {if _fgbfb .N ==1{_afcaf :=NewPdfColorspaceDeviceGray ();return _afcaf .ColorFromPdfObjects (objects );}else if _fgbfb .N ==3{_ggdga :=NewPdfColorspaceDeviceRGB ();
return _ggdga .ColorFromPdfObjects (objects );}else if _fgbfb .N ==4{_eeef :=NewPdfColorspaceDeviceCMYK ();return _eeef .ColorFromPdfObjects (objects );}else {return nil ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fgbfb .Alternate .ColorFromPdfObjects (objects );};func _eagb (_aagb map[_egg .GID ]int ,_dbacg uint16 )*_cg .PdfObjectArray {_cddcg :=&_cg .PdfObjectArray {};_egad :=_egg .GID (_dbacg );for _fdgf :=_egg .GID (0);_fdgf < _egad ;{_cegeg ,_gacff :=_aagb [_fdgf ];
if !_gacff {_fdgf ++;continue ;};_dgedd :=_fdgf ;for _ebfcd :=_dgedd +1;_ebfcd < _egad ;_ebfcd ++{if _afde ,_edegg :=_aagb [_ebfcd ];!_edegg ||_cegeg !=_afde {break ;};_dgedd =_ebfcd ;};_cddcg .Append (_cg .MakeInteger (int64 (_fdgf )));_cddcg .Append (_cg .MakeInteger (int64 (_dgedd )));
_cddcg .Append (_cg .MakeInteger (int64 (_cegeg )));_fdgf =_dgedd +1;};return _cddcg ;};type pdfFontType0 struct{fontCommon ;_ceca *_cg .PdfIndirectObject ;_befcb _eba .TextEncoder ;Encoding _cg .PdfObject ;DescendantFont *PdfFont ;_ddfb *_cb .CMap ;};
var _acfa =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// AllFields returns a flattened list of all fields in the form.
func (_efbe *PdfAcroForm )AllFields ()[]*PdfField {if _efbe ==nil {return nil ;};var _daba []*PdfField ;if _efbe .Fields !=nil {for _ ,_fddg :=range *_efbe .Fields {_daba =append (_daba ,_bggg (_fddg )...);};};return _daba ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_aba *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_aefb .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_aefb .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_aefb .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_aefb .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_ccec ,_acbe :=_cc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbcf ,img ._gegd );if _acbe !=nil {return Image {},_acbe ;};_efdg ,_acbe :=_cc .NRGBAConverter .Convert (_ccec );if _acbe !=nil {return Image {},_acbe ;
};return _fddbb (_efdg .Base ()),nil ;};func (_bebf *PdfShading )getShadingDict ()(*_cg .PdfObjectDictionary ,error ){_aaaac :=_bebf ._ceabf ;if _dcbadg ,_acfff :=_aaaac .(*_cg .PdfIndirectObject );_acfff {_dfceb ,_babg :=_dcbadg .PdfObject .(*_cg .PdfObjectDictionary );
if !_babg {return nil ,_cg .ErrTypeError ;};return _dfceb ,nil ;}else if _cfebb ,_abbd :=_aaaac .(*_cg .PdfObjectStream );_abbd {return _cfebb .PdfObjectDictionary ,nil ;}else if _cffb ,_afbf :=_aaaac .(*_cg .PdfObjectDictionary );_afbf {return _cffb ,nil ;
}else {_aefb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_cg .ErrTypeError ;};};func (_ceggf *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_cbfde *PdfOutlineItem )GetContainingPdfObject ()_cg .PdfObject {return _cbfde ._adddga };

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gbgag PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cg .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fgbb []_cg .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_cdgc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_bdgea *PdfReader )newPdfActionSubmitFormFromDict (_ebc *_cg .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_fbdc ,_dbfa :=_eda (_ebc .Get ("\u0046"));if _dbfa !=nil {return nil ,_dbfa ;};return &PdfActionSubmitForm {F :_fbdc ,Fields :_ebc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ebc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _fbce ()string {_ebecf .Lock ();defer _ebecf .Unlock ();return _aafde };

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_abfgd :=PdfColorDeviceRGB {r ,g ,b };return &_abfgd ;};func (_cgfae *PdfWriter )setDocumentIDs (_eadfc ,_acgcb string ){_cgfae ._bbcgc =_cg .MakeArray (_cg .MakeHexString (_eadfc ),_cg .MakeHexString (_acgcb ));
};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cecbf *LTV )EnableAll (extraCerts []*_a .Certificate )error {_abfde :=_cecbf ._edge ._afa .AcroForm ;for _ ,_fggf :=range _abfde .AllFields (){_bgdeg ,_ :=_fggf .GetContext ().(*PdfFieldSignature );if _bgdeg ==nil {continue ;};_gfec :=_bgdeg .V ;
if _gfegd :=_cecbf .validateSig (_gfec );_gfegd !=nil {_aefb .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gfegd );
};if _afcae :=_cecbf .Enable (_gfec ,extraCerts );_afcae !=nil {return _afcae ;};};return nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gfeba *PdfPageResources )HasXObjectByName (keyName _cg .PdfObjectName )bool {_fbaef ,_ :=_gfeba .GetXObjectByName (keyName );return _fbaef !=nil ;};func (_aeg *PdfReader )newPdfActionJavaScriptFromDict (_gac *_cg .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_gac .Get ("\u004a\u0053")},nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aggce *PdfColorspaceSpecialPattern )ToPdfObject ()_cg .PdfObject {if _aggce .UnderlyingCS ==nil {return _cg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_bbca :=_cg .MakeArray (_cg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bbca .Append (_aggce .UnderlyingCS .ToPdfObject ());
if _aggce ._febc !=nil {_aggce ._febc .PdfObject =_bbca ;return _aggce ._febc ;};return _bbca ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bddg *PdfPage )Duplicate ()*PdfPage {_baagc :=*_bddg ;_baagc ._edcag =_cg .MakeDict ();_baagc ._aegd =_cg .MakeIndirectObject (_baagc ._edcag );return &_baagc ;};var _daff =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ecdf *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ecdf .Alternate ==nil {_aefb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ecdf .N ==1{_aefb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_gddfa :=NewPdfColorspaceDeviceGray ();return _gddfa .ImageToRGB (img );}else if _ecdf .N ==3{_aefb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ecdf .N ==4{_aefb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ceea :=NewPdfColorspaceDeviceCMYK ();return _ceea .ImageToRGB (img );}else {return img ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_aefb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ecdf );
_geegd ,_fcaa :=_ecdf .Alternate .ImageToRGB (img );_aefb .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_aefb .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_geegd );
return _geegd ,_fcaa ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_aad :=NewPdfAction ();_abf :=&PdfActionJavaScript {};_abf .PdfAction =_aad ;_aad .SetContext (_abf );return _abf ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_bgdfe byte )byte ;

// WriteToFile writes the Appender output to file specified by path.
func (_gdgg *PdfAppender )WriteToFile (outputPath string )error {_eafg ,_fec :=_ad .Create (outputPath );if _fec !=nil {return _fec ;};defer _eafg .Close ();return _gdgg .Write (_eafg );};func _ceee (_dbge *_cg .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bfega :=&PdfTilingPattern {};
_dgcg :=_dbge .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _dgcg ==nil {_aefb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gegad ,_efcd :=_dgcg .(*_cg .PdfObjectInteger );
if !_efcd {_aefb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dgcg );return nil ,_cg .ErrTypeError ;
};_bfega .PaintType =_gegad ;_dgcg =_dbge .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dgcg ==nil {_aefb .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_adcf ,_efcd :=_dgcg .(*_cg .PdfObjectInteger );if !_efcd {_aefb .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgcg );
return nil ,_cg .ErrTypeError ;};_bfega .TilingType =_adcf ;_dgcg =_dbge .Get ("\u0042\u0042\u006f\u0078");if _dgcg ==nil {_aefb .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dgcg =_cg .TraceToDirectObject (_dgcg );_gagf ,_efcd :=_dgcg .(*_cg .PdfObjectArray );if !_efcd {_aefb .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgcg );
return nil ,_cg .ErrTypeError ;};_bffce ,_ccfcd :=NewPdfRectangle (*_gagf );if _ccfcd !=nil {_aefb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ccfcd );return nil ,_ccfcd ;};_bfega .BBox =_bffce ;_dgcg =_dbge .Get ("\u0058\u0053\u0074e\u0070");
if _dgcg ==nil {_aefb .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cadb ,_ccfcd :=_cg .GetNumberAsFloat (_dgcg );if _ccfcd !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cadb );
return nil ,_ccfcd ;};_bfega .XStep =_cg .MakeFloat (_cadb );_dgcg =_dbge .Get ("\u0059\u0053\u0074e\u0070");if _dgcg ==nil {_aefb .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_aggab ,_ccfcd :=_cg .GetNumberAsFloat (_dgcg );if _ccfcd !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_aggab );
return nil ,_ccfcd ;};_bfega .YStep =_cg .MakeFloat (_aggab );_dgcg =_dbge .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _dgcg ==nil {_aefb .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbge ,_efcd =_cg .TraceToDirectObject (_dgcg ).(*_cg .PdfObjectDictionary );if !_efcd {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dgcg );
};_eagdc ,_ccfcd :=NewPdfPageResourcesFromDict (_dbge );if _ccfcd !=nil {return nil ,_ccfcd ;};_bfega .Resources =_eagdc ;if _dbdec :=_dbge .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dbdec !=nil {_aafbd ,_bcfbc :=_dbdec .(*_cg .PdfObjectArray );if !_bcfbc {_aefb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbdec );
return nil ,_cg .ErrTypeError ;};_bfega .Matrix =_aafbd ;};return _bfega ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cg .PdfObject ;};func _gfffa (_dddce []byte )(_cdded ,_gafd string ,_cdga error ){_aefb .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_dddce ));
_acbbge :=_gagaa .FindIndex (_dddce );if _acbbge ==nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_cg .ErrTypeError ;};_acac :=_acbbge [1];_eggg :=_gb .Index (string (_dddce [_acac :]),_bagc );if _eggg < 0{_cdded =string (_dddce [_acac :]);return _cdded ,"",nil ;};_bcaed :=_acac +_eggg ;_cdded =string (_dddce [_acac :_bcaed ]);_fdffbe :=_bcaed ;
_eggg =_gb .Index (string (_dddce [_fdffbe :]),_gdgcbb );if _eggg < 0{_aefb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdga );
return "","",_cg .ErrTypeError ;};_ceeb :=_fdffbe +_eggg ;_gafd =string (_dddce [_fdffbe :_ceeb ]);return _cdded ,_gafd ,nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_egg .CharMetrics ;

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_edbde *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _edbde .Alternate ==nil {if _edbde .N ==1{_gbgb :=NewPdfColorspaceDeviceGray ();return _gbgb .ColorFromFloats (vals );}else if _edbde .N ==3{_edde :=NewPdfColorspaceDeviceRGB ();
return _edde .ColorFromFloats (vals );}else if _edbde .N ==4{_afdc :=NewPdfColorspaceDeviceCMYK ();return _afdc .ColorFromFloats (vals );}else {return nil ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _edbde .Alternate .ColorFromFloats (vals );};var (_gagaa =_eg .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_cgcc =_eg .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_aeedg =_eg .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_bagc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gdgcbb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cgfe ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func _fgea (_ffgc _cg .PdfObject )(*PdfColorspaceICCBased ,error ){_cddc :=&PdfColorspaceICCBased {};if _ddec ,_acag :=_ffgc .(*_cg .PdfIndirectObject );_acag {_cddc ._agbc =_ddec ;};_ffgc =_cg .TraceToDirectObject (_ffgc );_fega ,_ceaad :=_ffgc .(*_cg .PdfObjectArray );
if !_ceaad {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fega .Len ()!=2{return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_ffgc =_cg .TraceToDirectObject (_fega .Get (0));_eece ,_ceaad :=_ffgc .(*_cg .PdfObjectName );if !_ceaad {return nil ,_g .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_eece !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_g .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ffgc =_fega .Get (1);
_eddd ,_ceaad :=_cg .GetStream (_ffgc );if !_ceaad {_aefb .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_ffgc );
return nil ,_g .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_egba :=_eddd .PdfObjectDictionary ;_efbg ,_ceaad :=_egba .Get ("\u004e").(*_cg .PdfObjectInteger );
if !_ceaad {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_efbg !=1&&*_efbg !=3&&*_efbg !=4{return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cddc .N =int (*_efbg );if _dbfbd :=_egba .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dbfbd !=nil {_facg ,_bedc :=NewPdfColorspaceFromPdfObject (_dbfbd );if _bedc !=nil {return nil ,_bedc ;};_cddc .Alternate =_facg ;};if _dacc :=_egba .Get ("\u0052\u0061\u006eg\u0065");
_dacc !=nil {_dacc =_cg .TraceToDirectObject (_dacc );_cbaa ,_dbga :=_dacc .(*_cg .PdfObjectArray );if !_dbga {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cbaa .Len ()!=2*_cddc .N {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_dcddc ,_fdbd :=_cbaa .GetAsFloat64Slice ();if _fdbd !=nil {return nil ,_fdbd ;};_cddc .Range =_dcddc ;}else {_cddc .Range =make ([]float64 ,2*_cddc .N );for _gacf :=0;_gacf < _cddc .N ;_gacf ++{_cddc .Range [2*_gacf ]=0.0;_cddc .Range [2*_gacf +1]=1.0;
};};if _geec :=_egba .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_geec !=nil {_bdbag ,_facc :=_geec .(*_cg .PdfObjectStream );if !_facc {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cddc .Metadata =_bdbag ;};_acgf ,_gdba :=_cg .DecodeStream (_eddd );if _gdba !=nil {return nil ,_gdba ;};_cddc .Data =_acgf ;_cddc ._fgdfa =_eddd ;return _cddc ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gbec _ef .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_acfbc _bdg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ggggc _bdg .Image )(*Image ,error );

// Compress an image.
Compress (_dgdg *Image ,_dfbae int64 )(*Image ,error );};

// SetForms sets the Acroform for a PDF file.
func (_dbfae *PdfWriter )SetForms (form *PdfAcroForm )error {_dbfae ._bddaa =form ;return nil };

// BaseFont returns the font's "BaseFont" field.
func (_gcee *PdfFont )BaseFont ()string {return _gcee .baseFields ()._fbdedg };

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_fabaf *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _fabaf ._bafg .GetRevisionNumber ()==0{return nil ,_fff .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _afbb ,_gfdcgg :=_fabaf ._cfddg [_fabaf ];_gfdcgg {return _afbb ,nil ;};_cgff ,_eeffg :=_fabaf ._bafg .GetPreviousRevisionReadSeeker ();if _eeffg !=nil {return nil ,_eeffg ;};_fbac ,_eeffg :=_dbafa (_cgff ,_fabaf ._fgcfe ,_fabaf ._eggbg ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _eeffg !=nil {return nil ,_eeffg ;};_fabaf ._ccaf [_fabaf ._bafg .GetRevisionNumber ()-1]=_fbac ;_fabaf ._cfddg [_fabaf ]=_fbac ;_fbac ._cfddg =_fabaf ._cfddg ;return _fbac ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_eaace :=&PdfSignature {Type :_cg .MakeName ("\u0053\u0069\u0067"),Handler :handler };_eadc :=&pdfSignDictionary {PdfObjectDictionary :_cg .MakeDict (),_gccd :&handler ,_bbfde :_eaace };_eaace ._aagbgc =_cg .MakeIndirectObject (_eadc );
return _eaace ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_fbag *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cedf :=func (_cffe float64 )float64 {if _cffe >=6.0/29{return _cffe *_cffe *_cffe ;};return 108.0/841*(_cffe -4/29);};_edcf ,_cbbc :=color .(*PdfColorLab );if !_cbbc {_aefb .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_edcf .L ();AStar :=_edcf .A ();BStar :=_edcf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_fbag .WhitePoint [0]*_cedf (L );Y :=_fbag .WhitePoint [1]*_cedf (M );Z :=_fbag .WhitePoint [2]*_cedf (N );_fdffb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gaeg :=-0.969256*X +1.875992*Y +0.041556*Z ;_eaaae :=0.055648*X +-0.204043*Y +1.057311*Z ;_fdffb =_be .Min (_be .Max (_fdffb ,0),1.0);
_gaeg =_be .Min (_be .Max (_gaeg ,0),1.0);_eaaae =_be .Min (_be .Max (_eaaae ,0),1.0);return NewPdfColorDeviceRGB (_fdffb ,_gaeg ,_eaaae ),nil ;};type pdfFont interface{_egg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cg .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// Fill populates `form` with values provided by `provider`.
func (_dfegd *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dfegd .fill (provider ,nil )};

// SetDecode sets the decode image float slice.
func (_cadca *Image )SetDecode (decode []float64 ){_cadca ._gegd =decode };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fecf *XObjectImage )ToImage ()(*Image ,error ){_bbabd :=&Image {};if _fecf .Height ==nil {return nil ,_fff .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bbabd .Height =*_fecf .Height ;if _fecf .Width ==nil {return nil ,_fff .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bbabd .Width =*_fecf .Width ;if _fecf .BitsPerComponent ==nil {switch _fecf .Filter .(type ){case *_cg .CCITTFaxEncoder ,*_cg .JBIG2Encoder :_bbabd .BitsPerComponent =1;
case *_cg .LZWEncoder ,*_cg .RunLengthEncoder :_bbabd .BitsPerComponent =8;default:return nil ,_fff .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bbabd .BitsPerComponent =*_fecf .BitsPerComponent ;};_bbabd .ColorComponents =_fecf .ColorSpace .GetNumComponents ();_fecf ._cbfff .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cg .MakeInteger (int64 (_bbabd .ColorComponents )));
_dfcda ,_dccg :=_cg .DecodeStream (_fecf ._cbfff );if _dccg !=nil {return nil ,_dccg ;};_bbabd .Data =_dfcda ;if _fecf .Decode !=nil {_gbafg ,_acgge :=_fecf .Decode .(*_cg .PdfObjectArray );if !_acgge {_aefb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_fff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_cbbag ,_cagfg :=_gbafg .ToFloat64Array ();if _cagfg !=nil {return nil ,_cagfg ;};_bbabd ._gegd =_cbbag ;};return _bbabd ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_egbfd *PdfWriter )updateObjectNumbers (){_bbgbf :=_egbfd .ObjNumOffset ;_ececf :=0;for _ ,_cgbdd :=range _egbfd ._gegb {_aaaab :=int64 (_ececf +1+_bbgbf );_gaff :=true ;if _egbfd ._dagdb {if _egddgg ,_cebd :=_egbfd ._eeaca [_cgbdd ];
_cebd {_aaaab =_egddgg ;_gaff =false ;};};switch _afbcd :=_cgbdd .(type ){case *_cg .PdfIndirectObject :_afbcd .ObjectNumber =_aaaab ;_afbcd .GenerationNumber =0;case *_cg .PdfObjectStream :_afbcd .ObjectNumber =_aaaab ;_afbcd .GenerationNumber =0;case *_cg .PdfObjectStreams :_afbcd .ObjectNumber =_aaaab ;
_afbcd .GenerationNumber =0;default:_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_afbcd );continue ;
};if _gaff {_ececf ++;};};_beebg :=func (_dbceg _cg .PdfObject )int64 {switch _dgbc :=_dbceg .(type ){case *_cg .PdfIndirectObject :return _dgbc .ObjectNumber ;case *_cg .PdfObjectStream :return _dgbc .ObjectNumber ;case *_cg .PdfObjectStreams :return _dgbc .ObjectNumber ;
};return 0;};_c .SliceStable (_egbfd ._gegb ,func (_abgbf ,_gdcfb int )bool {return _beebg (_egbfd ._gegb [_abgbf ])< _beebg (_egbfd ._gegb [_gdcfb ])});};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_eeadb *Outline )Insert (index uint ,item *OutlineItem ){_fgggd :=uint (len (_eeadb .Entries ));if index > _fgggd {index =_fgggd ;};_eeadb .Entries =append (_eeadb .Entries [:index ],append ([]*OutlineItem {item },_eeadb .Entries [index :]...)...);
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gedf *PdfOutline )ToPdfObject ()_cg .PdfObject {_cffaed :=_gedf ._affee ;_gegea :=_cffaed .PdfObject .(*_cg .PdfObjectDictionary );_gegea .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _gedf .First !=nil {_gegea .Set ("\u0046\u0069\u0072s\u0074",_gedf .First .ToPdfObject ());
};if _gedf .Last !=nil {_gegea .Set ("\u004c\u0061\u0073\u0074",_gedf .Last .GetContext ().GetContainingPdfObject ());};if _gedf .Parent !=nil {_gegea .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gedf .Parent .GetContext ().GetContainingPdfObject ());
};if _gedf .Count !=nil {_gegea .Set ("\u0043\u006f\u0075n\u0074",_cg .MakeInteger (*_gedf .Count ));};return _cffaed ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cg .StreamEncoder ;Intent _cg .PdfObject ;ImageMask _cg .PdfObject ;Mask _cg .PdfObject ;Matte _cg .PdfObject ;Decode _cg .PdfObject ;Interpolate _cg .PdfObject ;Alternatives _cg .PdfObject ;
SMask _cg .PdfObject ;SMaskInData _cg .PdfObject ;Name _cg .PdfObject ;StructParent _cg .PdfObject ;ID _cg .PdfObject ;OPI _cg .PdfObject ;Metadata _cg .PdfObject ;OC _cg .PdfObject ;Stream []byte ;_cbfff *_cg .PdfObjectStream ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dabeg *PdfReader )GetObjectNums ()[]int {return _dabeg ._bafg .GetObjectNums ()};func _caff (_feaf *PdfPage )map[_cg .PdfObjectName ]_cg .PdfObject {_geefg :=make (map[_cg .PdfObjectName ]_cg .PdfObject );if _feaf .Resources ==nil {return _geefg ;
};if _feaf .Resources .Font !=nil {if _dde ,_bdfb :=_cg .GetDict (_feaf .Resources .Font );_bdfb {for _ ,_dcddg :=range _dde .Keys (){_geefg [_dcddg ]=_dde .Get (_dcddg );};};};if _feaf .Resources .ExtGState !=nil {if _fbbbc ,_cbae :=_cg .GetDict (_feaf .Resources .ExtGState );
_cbae {for _ ,_aga :=range _fbbbc .Keys (){_geefg [_aga ]=_fbbbc .Get (_aga );};};};if _feaf .Resources .XObject !=nil {if _fbdb ,_dcfa :=_cg .GetDict (_feaf .Resources .XObject );_dcfa {for _ ,_bfaf :=range _fbdb .Keys (){_geefg [_bfaf ]=_fbdb .Get (_bfaf );
};};};if _feaf .Resources .Pattern !=nil {if _fbfg ,_agaa :=_cg .GetDict (_feaf .Resources .Pattern );_agaa {for _ ,_dabg :=range _fbfg .Keys (){_geefg [_dabg ]=_fbfg .Get (_dabg );};};};if _feaf .Resources .Shading !=nil {if _bbgfd ,_cfc :=_cg .GetDict (_feaf .Resources .Shading );
_cfc {for _ ,_edec :=range _bbgfd .Keys (){_geefg [_edec ]=_bbgfd .Get (_edec );};};};if _feaf .Resources .ProcSet !=nil {if _dgbe ,_egdag :=_cg .GetDict (_feaf .Resources .ProcSet );_egdag {for _ ,_fageg :=range _dgbe .Keys (){_geefg [_fageg ]=_dgbe .Get (_fageg );
};};};if _feaf .Resources .Properties !=nil {if _egbe ,_ddab :=_cg .GetDict (_feaf .Resources .Properties );_ddab {for _ ,_dabgd :=range _egbe .Keys (){_geefg [_dabgd ]=_egbe .Get (_dabgd );};};};return _geefg ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ddbdf *PdfPage )error ;};func (_aggfc *PdfReader )buildOutlineTree (_gecdd _cg .PdfObject ,_aeabe *PdfOutlineTreeNode ,_eeeb *PdfOutlineTreeNode ,_gaagb map[_cg .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gaagb ==nil {_gaagb =map[_cg .PdfObject ]struct{}{};
};_gaagb [_gecdd ]=struct{}{};_egbc ,_ecde :=_gecdd .(*_cg .PdfIndirectObject );if !_ecde {return nil ,nil ,_g .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gecdd );
};_bbgfa ,_fdcfg :=_egbc .PdfObject .(*_cg .PdfObjectDictionary );if !_fdcfg {return nil ,nil ,_fff .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aefb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bbgfa ,_egbc ,_egbc );
if _deag :=_bbgfa .Get ("\u0054\u0069\u0074l\u0065");_deag !=nil {_deea ,_gadc :=_aggfc .newPdfOutlineItemFromIndirectObject (_egbc );if _gadc !=nil {return nil ,nil ,_gadc ;};_deea .Parent =_aeabe ;_deea .Prev =_eeeb ;_gcbc :=_cg .ResolveReference (_bbgfa .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_ccfbc :=_gaagb [_gcbc ];_gcbc !=nil &&_gcbc !=_egbc &&!_ccfbc {if !_cg .IsNullObject (_gcbc ){_dfgcf ,_fedgg ,_gbce :=_aggfc .buildOutlineTree (_gcbc ,&_deea .PdfOutlineTreeNode ,nil ,_gaagb );if _gbce !=nil {_aefb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gbce );
}else {_deea .First =_dfgcf ;_deea .Last =_fedgg ;};};};_aagad :=_cg .ResolveReference (_bbgfa .Get ("\u004e\u0065\u0078\u0074"));if _ ,_acggf :=_gaagb [_aagad ];_aagad !=nil &&_aagad !=_egbc &&!_acggf {if !_cg .IsNullObject (_aagad ){_gbaa ,_fbafd ,_bgea :=_aggfc .buildOutlineTree (_aagad ,_aeabe ,&_deea .PdfOutlineTreeNode ,_gaagb );
if _bgea !=nil {_aefb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bgea );
}else {_deea .Next =_gbaa ;return &_deea .PdfOutlineTreeNode ,_fbafd ,nil ;};};};return &_deea .PdfOutlineTreeNode ,&_deea .PdfOutlineTreeNode ,nil ;};_dgfgf ,_afcaa :=_fabgb (_egbc );if _afcaa !=nil {return nil ,nil ,_afcaa ;};_dgfgf .Parent =_aeabe ;
if _bdbaf :=_bbgfa .Get ("\u0046\u0069\u0072s\u0074");_bdbaf !=nil {_bdbaf =_cg .ResolveReference (_bdbaf );if _ ,_fbggdg :=_gaagb [_bdbaf ];_bdbaf !=nil &&_bdbaf !=_egbc &&!_fbggdg {_aacb :=_cg .TraceToDirectObject (_bdbaf );if _ ,_ebgbg :=_aacb .(*_cg .PdfObjectNull );
!_ebgbg &&_aacb !=nil {_bgecb ,_bbgbb ,_bedd :=_aggfc .buildOutlineTree (_bdbaf ,&_dgfgf .PdfOutlineTreeNode ,nil ,_gaagb );if _bedd !=nil {_aefb .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bedd );
}else {_dgfgf .First =_bgecb ;_dgfgf .Last =_bbgbb ;};};};};return &_dgfgf .PdfOutlineTreeNode ,&_dgfgf .PdfOutlineTreeNode ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_eefg :=NewPdfAnnotation ();_fdc :=&PdfAnnotationStamp {};_fdc .PdfAnnotation =_eefg ;_fdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eefg .SetContext (_fdc );return _fdc ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cg .PdfObjectString ;Q *_cg .PdfObjectInteger ;DS *_cg .PdfObjectString ;RV _cg .PdfObject ;MaxLen *_cg .PdfObjectInteger ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_efgg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cagb ,_dacef :=_cg .GetNumbersAsFloat (objects );
if _dacef !=nil {return nil ,_dacef ;};return _efgg .ColorFromFloats (_cagb );};func _bcdfc (_aabcc string )(string ,error ){var _bcceb _gbe .Buffer ;_bcceb .WriteString (_aabcc );_bbfba :=make ([]byte ,8+16);_gfbcd :=_bb .Now ().UTC ().UnixNano ();_eb .BigEndian .PutUint64 (_bbfba ,uint64 (_gfbcd ));
_ ,_adgdf :=_ff .Read (_bbfba [8:]);if _adgdf !=nil {return "",_adgdf ;};_bcceb .WriteString (_bd .EncodeToString (_bbfba ));return _bcceb .String (),nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_dbdb FieldFlag )Mask ()uint32 {return uint32 (_dbdb )};func (_gabdga *PdfWriter )setDocInfo (_fcfad _cg .PdfObject ){if _gabdga .hasObject (_gabdga ._aeea ){delete (_gabdga ._dcage ,_gabdga ._aeea );delete (_gabdga ._aabff ,_gabdga ._aeea );for _eabcg ,_eadcc :=range _gabdga ._gegb {if _eadcc ==_gabdga ._aeea {copy (_gabdga ._gegb [_eabcg :],_gabdga ._gegb [_eabcg +1:]);
_gabdga ._gegb [len (_gabdga ._gegb )-1]=nil ;_gabdga ._gegb =_gabdga ._gegb [:len (_gabdga ._gegb )-1];break ;};};};_dgdag :=_cg .PdfIndirectObject {};_dgdag .PdfObject =_fcfad ;_gabdga ._aeea =&_dgdag ;_gabdga .addObject (&_dgdag );};func _gaecg (_fgace *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fgace }};


// CustomKeys returns all custom info keys as list.
func (_dbde *PdfInfo )CustomKeys ()[]string {if _dbde ._ffga ==nil {return nil ;};_beee :=make ([]string ,len (_dbde ._ffga .Keys ()));for _ ,_degad :=range _dbde ._ffga .Keys (){_beee =append (_beee ,_degad .String ());};return _beee ;};const (FieldFlagClear FieldFlag =0;
FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);
FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);
FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););func _ecdb (_eeaf _cg .PdfObject ,_bbaag bool )(*PdfFont ,error ){_bafc ,_acfba ,_bgdd :=_eecdg (_eeaf );
if _bafc !=nil {_dffe (_bafc );};if _bgdd !=nil {if _bgdd ==ErrType1CFontNotSupported {_fbfee ,_cegdg :=_geaab (_bafc ,_acfba ,nil );if _cegdg !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_acfba ,_cegdg );
return nil ,_bgdd ;};return &PdfFont {_cgdd :_fbfee },_bgdd ;};return nil ,_bgdd ;};_cgdcd :=&PdfFont {};switch _acfba ._agbd {case "\u0054\u0079\u0070e\u0030":if !_bbaag {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acfba );
return nil ,_fff .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_afaa ,_caecf :=_agebd (_bafc ,_acfba );if _caecf !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acfba ,_caecf );
return nil ,_caecf ;};_cgdcd ._cgdd =_afaa ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gecab *pdfFontSimple ;_gbdgf ,_effeb :=_egg .NewStdFontByName (_egg .StdFontName (_acfba ._fbdedg ));
if _effeb {_fdbc :=_dbgce (_gbdgf );_cgdcd ._cgdd =&_fdbc ;_eagab :=_cg .TraceToDirectObject (_fdbc .ToPdfObject ());_facgf ,_caaca ,_efag :=_eecdg (_eagab );if _efag !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_acfba ,_fdbc );
return nil ,_efag ;};for _ ,_adbff :=range _bafc .Keys (){_facgf .Set (_adbff ,_bafc .Get (_adbff ));};_gecab ,_efag =_geaab (_facgf ,_caaca ,_fdbc ._ebedb );if _efag !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_acfba ,_fdbc );
return nil ,_efag ;};_gecab ._bdbde =_fdbc ._bdbde ;_gecab ._fegab =_fdbc ._fegab ;if _gecab ._cgdad ==nil {_gecab ._cgdad =_fdbc ._cgdad ;};}else {_gecab ,_bgdd =_geaab (_bafc ,_acfba ,nil );if _bgdd !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_acfba ,_bgdd );
return nil ,_bgdd ;};};_bgdd =_gecab .addEncoding ();if _bgdd !=nil {return nil ,_bgdd ;};if _effeb {_gecab .updateStandard14Font ();};if _effeb &&_gecab ._edbda ==nil &&_gecab ._ebedb ==nil {_aefb .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gecab );
_aefb .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_gbdgf );};if len (_gecab ._bdbde )==0{_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gecab );};_cgdcd ._cgdd =_gecab ;
case "\u0054\u0079\u0070e\u0033":_gafc ,_fddc :=_feca (_bafc ,_acfba );if _fddc !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fddc );
return nil ,_fddc ;};_cgdcd ._cgdd =_gafc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_dffab ,_ggge :=_gagb (_bafc ,_acfba );if _ggge !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ggge );
return nil ,_ggge ;};_cgdcd ._cgdd =_dffab ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eeec ,_ecdd :=_beff (_bafc ,_acfba );if _ecdd !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acfba ,_ecdd );
return nil ,_ecdd ;};_cgdcd ._cgdd =_eeec ;default:_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_acfba );
return nil ,_g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acfba );};return _cgdcd ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fbd :=NewPdfAction ();_dfa :=&PdfActionSubmitForm {};_dfa .PdfAction =_fbd ;_fbd .SetContext (_dfa );return _dfa ;};

// String returns a human readable description of `fontfile`.
func (_ecgf *fontFile )String ()string {_cffag :="\u005b\u004e\u006f\u006e\u0065\u005d";if _ecgf ._badefc !=nil {_cffag =_ecgf ._badefc .String ();};return _g .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_ecgf ._cacf ,_cffag );
};

// ToPdfObject implements interface PdfModel.
func (_gabbg *PdfAnnotationLink )ToPdfObject ()_cg .PdfObject {_gabbg .PdfAnnotation .ToPdfObject ();_dace :=_gabbg ._bed ;_bdbb :=_dace .PdfObject .(*_cg .PdfObjectDictionary );_bdbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u004c\u0069\u006e\u006b"));
if _gabbg ._ac !=nil &&_gabbg ._ac ._dbf !=nil {_bdbb .Set ("\u0041",_gabbg ._ac ._dbf .ToPdfObject ());}else if _gabbg .A !=nil {_bdbb .Set ("\u0041",_gabbg .A );};_bdbb .SetIfNotNil ("\u0044\u0065\u0073\u0074",_gabbg .Dest );_bdbb .SetIfNotNil ("\u0048",_gabbg .H );
_bdbb .SetIfNotNil ("\u0050\u0041",_gabbg .PA );_bdbb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gabbg .QuadPoints );_bdbb .SetIfNotNil ("\u0042\u0053",_gabbg .BS );return _dace ;};

// SetLocation sets the `Location` field of the signature.
func (_bdabc *PdfSignature )SetLocation (location string ){_bdabc .Location =_cg .MakeString (location )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_aaaa *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_aebcc *Image )SetSamples (samples []uint32 ){if _aebcc .BitsPerComponent < 8{samples =_aebcc .samplesAddPadding (samples );};_gefed :=_ggc .ResampleUint32 (samples ,int (_aebcc .BitsPerComponent ),8);_gceb :=make ([]byte ,len (_gefed ));for _eaggdc ,_bdae :=range _gefed {_gceb [_eaggdc ]=byte (_bdae );
};_aebcc .Data =_gceb ;};

// ToPdfObject implements interface PdfModel.
func (_bbaa *PdfAnnotationLine )ToPdfObject ()_cg .PdfObject {_bbaa .PdfAnnotation .ToPdfObject ();_aca :=_bbaa ._bed ;_ecff :=_aca .PdfObject .(*_cg .PdfObjectDictionary );_bbaa .PdfAnnotationMarkup .appendToPdfDictionary (_ecff );_ecff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u004c\u0069\u006e\u0065"));
_ecff .SetIfNotNil ("\u004c",_bbaa .L );_ecff .SetIfNotNil ("\u0042\u0053",_bbaa .BS );_ecff .SetIfNotNil ("\u004c\u0045",_bbaa .LE );_ecff .SetIfNotNil ("\u0049\u0043",_bbaa .IC );_ecff .SetIfNotNil ("\u004c\u004c",_bbaa .LL );_ecff .SetIfNotNil ("\u004c\u004c\u0045",_bbaa .LLE );
_ecff .SetIfNotNil ("\u0043\u0061\u0070",_bbaa .Cap );_ecff .SetIfNotNil ("\u0049\u0054",_bbaa .IT );_ecff .SetIfNotNil ("\u004c\u004c\u004f",_bbaa .LLO );_ecff .SetIfNotNil ("\u0043\u0050",_bbaa .CP );_ecff .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bbaa .Measure );
_ecff .SetIfNotNil ("\u0043\u004f",_bbaa .CO );return _aca ;};

// GetStandardApplier gets currently used StandardApplier..
func (_eddddd *PdfWriter )GetStandardApplier ()StandardApplier {return _eddddd ._dfbga };func _gdffd (_ebgba []byte )([]byte ,error ){_fdcad :=_ae .New ();if _ ,_cegegf :=_ef .Copy (_fdcad ,_gbe .NewReader (_ebgba ));_cegegf !=nil {return nil ,_cegegf ;
};return _fdcad .Sum (nil ),nil ;};func _adcab (_eagdcb *_cg .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bbcab :=PdfShadingType7 {};_dfcf :=_eagdcb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dfcf ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aaffb ,_eagf :=_dfcf .(*_cg .PdfObjectInteger );if !_eagf {_aefb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfcf );
return nil ,_cg .ErrTypeError ;};_bbcab .BitsPerCoordinate =_aaffb ;_dfcf =_eagdcb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dfcf ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aaffb ,_eagf =_dfcf .(*_cg .PdfObjectInteger );if !_eagf {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dfcf );
return nil ,_cg .ErrTypeError ;};_bbcab .BitsPerComponent =_aaffb ;_dfcf =_eagdcb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dfcf ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aaffb ,_eagf =_dfcf .(*_cg .PdfObjectInteger );if !_eagf {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dfcf );
return nil ,_cg .ErrTypeError ;};_bbcab .BitsPerComponent =_aaffb ;_dfcf =_eagdcb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dfcf ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_adeegb ,_eagf :=_dfcf .(*_cg .PdfObjectArray );if !_eagf {_aefb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfcf );
return nil ,_cg .ErrTypeError ;};_bbcab .Decode =_adeegb ;if _dbeag :=_eagdcb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbeag !=nil {_bbcab .Function =[]PdfFunction {};if _dcced ,_bdagf :=_dbeag .(*_cg .PdfObjectArray );_bdagf {for _ ,_dcec :=range _dcced .Elements (){_feffbg ,_ababc :=_eeafe (_dcec );
if _ababc !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ababc );return nil ,_ababc ;};_bbcab .Function =append (_bbcab .Function ,_feffbg );
};}else {_acacb ,_aaeaa :=_eeafe (_dbeag );if _aaeaa !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaeaa );return nil ,_aaeaa ;
};_bbcab .Function =append (_bbcab .Function ,_acacb );};};return &_bbcab ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cg .PdfObjectArray ;_bcebf *Image ;};

// IsColored specifies if the pattern is colored.
func (_abad *PdfTilingPattern )IsColored ()bool {if _abad .PaintType !=nil &&*_abad .PaintType ==1{return true ;};return false ;};

// PartialName returns the partial name of the field.
func (_fgfb *PdfField )PartialName ()string {_bdbg :="";if _fgfb .T !=nil {_bdbg =_fgfb .T .Decoded ();}else {_aefb .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _bdbg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aeedb *PdfOutlineItem )ToPdfObject ()_cg .PdfObject {_aegcf :=_aeedb ._adddga ;_cfge :=_aegcf .PdfObject .(*_cg .PdfObjectDictionary );_cfge .Set ("\u0054\u0069\u0074l\u0065",_aeedb .Title );if _aeedb .A !=nil {_cfge .Set ("\u0041",_aeedb .A );};
if _afbag :=_cfge .Get ("\u0053\u0045");_afbag !=nil {_cfge .Remove ("\u0053\u0045");};if _aeedb .C !=nil {_cfge .Set ("\u0043",_aeedb .C );};if _aeedb .Dest !=nil {_cfge .Set ("\u0044\u0065\u0073\u0074",_aeedb .Dest );};if _aeedb .F !=nil {_cfge .Set ("\u0046",_aeedb .F );
};if _aeedb .Count !=nil {_cfge .Set ("\u0043\u006f\u0075n\u0074",_cg .MakeInteger (*_aeedb .Count ));};if _aeedb .Next !=nil {_cfge .Set ("\u004e\u0065\u0078\u0074",_aeedb .Next .ToPdfObject ());};if _aeedb .First !=nil {_cfge .Set ("\u0046\u0069\u0072s\u0074",_aeedb .First .ToPdfObject ());
};if _aeedb .Prev !=nil {_cfge .Set ("\u0050\u0072\u0065\u0076",_aeedb .Prev .GetContext ().GetContainingPdfObject ());};if _aeedb .Last !=nil {_cfge .Set ("\u004c\u0061\u0073\u0074",_aeedb .Last .GetContext ().GetContainingPdfObject ());};if _aeedb .Parent !=nil {_cfge .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aeedb .Parent .GetContext ().GetContainingPdfObject ());
};return _aegcf ;};func (_eag *PdfReader )newPdfActionMovieFromDict (_cgf *_cg .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cgf .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cgf .Get ("\u0054"),Operation :_cgf .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_aebe *fontFile )loadFromSegments (_befca ,_acga []byte )error {_aefb .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_befca ),len (_acga ));_dccfd :=_aebe .parseASCIIPart (_befca );
if _dccfd !=nil {return _dccfd ;};_aefb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aebe );if len (_acga )==0{return nil ;};_aefb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_aebe );return nil ;
};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cg .PdfObject ;NewWindow _cg .PdfObject ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_acb :=&PdfAppender {_fgeee :reader ._dgfb ,Reader :reader ,_gdec :reader ._bafg ,_eead :reader ._eebec };_geg ,_fgaa :=_acb ._fgeee .Seek (0,_ef .SeekEnd );if _fgaa !=nil {return nil ,_fgaa ;
};_acb ._gafg =_geg ;if _ ,_fgaa =_acb ._fgeee .Seek (0,_ef .SeekStart );_fgaa !=nil {return nil ,_fgaa ;};_acb ._afa ,_fgaa =NewPdfReader (_acb ._fgeee );if _fgaa !=nil {return nil ,_fgaa ;};for _ ,_fdae :=range _acb .Reader .GetObjectNums (){if _acb ._gagd < _fdae {_acb ._gagd =_fdae ;
};};_acb ._bgc =_acb ._gdec .GetXrefTable ();_acb ._gecf =_acb ._gdec .GetXrefOffset ();_acb ._fgcg =append (_acb ._fgcg ,_acb ._afa .PageList ...);_acb ._fage =make (map[_cg .PdfObject ]struct{});_acb ._eddf =make (map[_cg .PdfObject ]int64 );_acb ._eafe =make (map[_cg .PdfObject ]struct{});
_acb ._aagf =_acb ._afa .AcroForm ;_acb ._ddagb =_acb ._afa .DSS ;return _acb ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cg .PdfObject ;Volume _cg .PdfObject ;Synchronous _cg .PdfObject ;Repeat _cg .PdfObject ;Mix _cg .PdfObject ;};func (_cdfge *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gcbb :=_cdfge .Parent ;
for _gcbb !=nil {_fddadb ,_dbggea :=_cg .GetDict (_gcbb );if !_dbggea {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _cegc :=_fddadb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cegc !=nil {_eecce ,_dcedd :=_cg .GetDict (_cegc );if !_dcedd {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_aabcf ,_faeg :=NewPdfPageResourcesFromDict (_eecce );if _faeg !=nil {return nil ,_faeg ;};return _aabcf ,nil ;};_gcbb =_fddadb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_caggd :=PdfColorCalGray (grayVal );return &_caggd ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_bgaff int ,_feefb *PdfPage )error ;

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bfb :=NewPdfAction ();_df :=&PdfActionSound {};_df .PdfAction =_bfb ;_bfb .SetContext (_df );return _df ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_daebe *PdfOutlineTreeNode )ToPdfObject ()_cg .PdfObject {return _daebe .GetContext ().ToPdfObject ();};

// Initialize initializes the PdfSignature.
func (_ededg *PdfSignature )Initialize ()error {if _ededg .Handler ==nil {return _fff .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _ededg .Handler .InitSignature (_ededg );};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_cacef *PdfSignature ,_eacd Hasher ,_gfaf SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func _decgg ()string {_beea :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _gfgf _gbe .Buffer ;for _bfee :=0;_bfee < 6;_bfee ++{_gfgf .WriteRune (rune (_beea [_bc .Intn (len (_beea ))]));};return _gfgf .String ();};

// SetContentStream sets the pattern cell's content stream.
func (_cdce *PdfTilingPattern )SetContentStream (content []byte ,encoder _cg .StreamEncoder )error {_eaff ,_bcedc :=_cdce ._bcafe .(*_cg .PdfObjectStream );if !_bcedc {_aefb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdce ._bcafe );
return _cg .ErrTypeError ;};if encoder ==nil {encoder =_cg .NewRawEncoder ();};_dfade :=_eaff .PdfObjectDictionary ;_egag :=encoder .MakeStreamDict ();_dfade .Merge (_egag );_fgdb ,_fcgb :=encoder .EncodeBytes (content );if _fcgb !=nil {return _fcgb ;};
_dfade .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_fgdb ))));_eaff .Stream =_fgdb ;return nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_edf :=NewPdfAction ();_gd :=&PdfActionNamed {};_gd .PdfAction =_edf ;_edf .SetContext (_gd );return _gd ;};

// String returns the name of the colorspace (DeviceN).
func (_fbeab *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func _cdgdb (_abcda *_cg .PdfIndirectObject ,_gceg *_cg .PdfObjectDictionary )(*DSS ,error ){if _abcda ==nil {_abcda =_cg .MakeIndirectObject (nil );};
_abcda .PdfObject =_cg .MakeDict ();_fedga :=map[string ]*VRI {};if _gdabb ,_fagde :=_cg .GetDict (_gceg .Get ("\u0056\u0052\u0049"));_fagde {for _ ,_eecfe :=range _gdabb .Keys (){if _fgeaf ,_cfcf :=_cg .GetDict (_gdabb .Get (_eecfe ));_cfcf {_fedga [_gb .ToUpper (_eecfe .String ())]=_abfgc (_fgeaf );
};};};return &DSS {Certs :_acaga (_gceg .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_acaga (_gceg .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_acaga (_gceg .Get ("\u0043\u0052\u004c\u0073")),VRI :_fedga ,_gbde :_abcda },nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gegde interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_geaga *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _geaga ._cbabb ==nil {_geaga ._cbabb =_cab .NewPSExecutor (_geaga .Program );};var _bbebf []_cab .PSObject ;for _ ,_cfcc :=range xVec {_bbebf =append (_bbebf ,_cab .MakeReal (_cfcc ));
};_aagcg ,_bbefgb :=_geaga ._cbabb .Execute (_bbebf );if _bbefgb !=nil {return nil ,_bbefgb ;};_dbea ,_bbefgb :=_cab .PSObjectArrayToFloat64Array (_aagcg );if _bbefgb !=nil {return nil ,_bbefgb ;};return _dbea ,nil ;};

// GetPerms returns the Permissions dictionary
func (_bcbed *PdfReader )GetPerms ()*Permissions {return _bcbed ._dfbag };

// GetNumComponents returns the number of color components.
func (_gdgcd *PdfColorspaceICCBased )GetNumComponents ()int {return _gdgcd .N };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cg .PdfObject ;T _cg .PdfObject ;Operation _cg .PdfObject ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_bf .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _bb .Time ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_cdfbf *PdfPageResources )GetXObjectFormByName (keyName _cg .PdfObjectName )(*XObjectForm ,error ){_adege ,_bfegc :=_cdfbf .GetXObjectByName (keyName );if _adege ==nil {return nil ,nil ;};if _bfegc !=XObjectTypeForm {return nil ,_fff .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_baad ,_cage :=NewXObjectFormFromStream (_adege );if _cage !=nil {return nil ,_cage ;};return _baad ,nil ;};func (_aabad *PdfReader )newPdfFieldSignatureFromDict (_bbcaf *_cg .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ebaf :=&PdfFieldSignature {};
_dgaag ,_badbg :=_cg .GetIndirect (_bbcaf .Get ("\u0056"));if _badbg {var _fcefc error ;_ebaf .V ,_fcefc =_aabad .newPdfSignatureFromIndirect (_dgaag );if _fcefc !=nil {return nil ,_fcefc ;};};_ebaf .Lock ,_ =_cg .GetIndirect (_bbcaf .Get ("\u004c\u006f\u0063\u006b"));
_ebaf .SV ,_ =_cg .GetIndirect (_bbcaf .Get ("\u0053\u0056"));return _ebaf ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_eafgg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _eafgg ._adga ==nil {_eafgg .GetAnnotations ();};_eafgg ._adga =append (_eafgg ._adga ,annot );};

// AddExtGState adds a graphics state to the XObject resources.
func (_gafcb *PdfPage )AddExtGState (name _cg .PdfObjectName ,egs *_cg .PdfObjectDictionary )error {if _gafcb .Resources ==nil {_gafcb .Resources =NewPdfPageResources ();};if _gafcb .Resources .ExtGState ==nil {_gafcb .Resources .ExtGState =_cg .MakeDict ();
};_dfebg ,_dgcf :=_cg .TraceToDirectObject (_gafcb .Resources .ExtGState ).(*_cg .PdfObjectDictionary );if !_dgcf {_aefb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cg .TraceToDirectObject (_gafcb .Resources .ExtGState ));
return _fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfebg .Set (name ,egs );return nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bdgeag *XObjectImage )SetFilter (encoder _cg .StreamEncoder )error {_eddfg :=_bdgeag .Stream ;_ddbdd ,_ddaga :=_bdgeag .Filter .DecodeBytes (_eddfg );if _ddaga !=nil {return _ddaga ;};_bdgeag .Filter =encoder ;encoder .UpdateParams (_bdgeag .getParamsDict ());
_eddfg ,_ddaga =encoder .EncodeBytes (_ddbdd );if _ddaga !=nil {return _ddaga ;};_bdgeag .Stream =_eddfg ;return nil ;};

// SetName sets the `Name` field of the signature.
func (_bdadg *PdfSignature )SetName (name string ){_bdadg .Name =_cg .MakeString (name )};func (_ecgbb *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ecgbb ._bfggb };func (_cbgf *PdfFilespec )getDict ()*_cg .PdfObjectDictionary {if _agcg ,_fegd :=_cbgf ._gdgcb .(*_cg .PdfIndirectObject );
_fegd {_fcag ,_afcca :=_agcg .PdfObject .(*_cg .PdfObjectDictionary );if !_afcca {return nil ;};return _fcag ;}else if _bcaf ,_cdgg :=_cbgf ._gdgcb .(*_cg .PdfObjectDictionary );_cdgg {return _bcaf ;}else {_aefb .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cbgf ._gdgcb );
return nil ;};};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_cecc *PdfPage )AddContentStreamByString (contentStr string )error {_bdfab ,_addcg :=_cg .MakeStream ([]byte (contentStr ),_cg .NewFlateEncoder ());if _addcg !=nil {return _addcg ;};if _cecc .Contents ==nil {_cecc .Contents =_bdfab ;}else {_feeb :=_cg .TraceToDirectObject (_cecc .Contents );
_ebgeg ,_bdgga :=_feeb .(*_cg .PdfObjectArray );if !_bdgga {_ebgeg =_cg .MakeArray (_feeb );};_ebgeg .Append (_bdfab );_cecc .Contents =_ebgeg ;};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_afac pdfCIDFontType0 )GetCharMetrics (code _eba .CharCode )(_egg .CharMetrics ,bool ){_efggf :=_afac ._adfdf ;if _bfcfd ,_fdge :=_afac ._gecd [code ];_fdge {_efggf =_bfcfd ;};return _egg .CharMetrics {Wx :_efggf },true ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_fdaa *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gabc :=_fdaa .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gabc )> 0;_febb :=_cg .NewFlateEncoder ();_affcd :=_cg .MakeArray ();if wrapContents {_adfba ,_cdfeg :=_cg .MakeStream ([]byte ("\u0071\u000a"),_febb );
if _cdfeg !=nil {return _cdfeg ;};_affcd .Append (_adfba );};_affcd .Append (_gabc ...);if wrapContents {_ccgee ,_ggccb :=_cg .MakeStream ([]byte ("\u000a\u0051\u000a"),_febb );if _ggccb !=nil {return _ggccb ;};_affcd .Append (_ccgee );};_cgccd ,_dggge :=_cg .MakeStream (cs ,_febb );
if _dggge !=nil {return _dggge ;};_affcd .Append (_cgccd );_fdaa .Contents =_affcd ;return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gdbcce *PdfReader )GetNamedDestinations ()(_cg .PdfObject ,error ){_cdbdg :=_cg .ResolveReference (_gdbcce ._fbggd .Get ("\u0044\u0065\u0073t\u0073"));if _cdbdg ==nil {return nil ,nil ;};if !_gdbcce ._ddae {_gecea :=_gdbcce .traverseObjectData (_cdbdg );
if _gecea !=nil {return nil ,_gecea ;};};return _cdbdg ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cg .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _caa *_cg .PdfIndirectObject ;var _bgee *_cg .PdfObjectName ;var _aaab *_cg .PdfObjectArray ;if _aeb ,_daf :=obj .(*_cg .PdfIndirectObject );
_daf {_caa =_aeb ;};obj =_cg .TraceToDirectObject (obj );switch _dgee :=obj .(type ){case *_cg .PdfObjectArray :_aaab =_dgee ;case *_cg .PdfObjectName :_bgee =_dgee ;};if _bgee !=nil {switch *_bgee {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_aefb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bgee );return nil ,_gdfd ;};};if _aaab !=nil &&_aaab .Len ()> 0{var _gaga _cg .PdfObject =_caa ;
if _caa ==nil {_gaga =_aaab ;};if _bceb ,_ddeb :=_cg .GetName (_aaab .Get (0));_ddeb {switch _bceb .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _aaab .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _aaab .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _aaab .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _gbcfb (_gaga );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dfeg (_gaga );
case "\u004c\u0061\u0062":return _bgbg (_gaga );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _fgea (_gaga );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _cbbbc (_gaga );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eafeb (_gaga );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _eaaaa (_gaga );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _daef (_gaga );default:_aefb .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bceb );
};};};_aefb .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_eaeb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_afea ,_abg :=color .(*PdfColorCalRGB );if !_abg {_aefb .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bega :=_afea .A ();_bbda :=_afea .B ();_cgda :=_afea .C ();X :=_eaeb .Matrix [0]*_be .Pow (_bega ,_eaeb .Gamma [0])+_eaeb .Matrix [3]*_be .Pow (_bbda ,_eaeb .Gamma [1])+_eaeb .Matrix [6]*_be .Pow (_cgda ,_eaeb .Gamma [2]);
Y :=_eaeb .Matrix [1]*_be .Pow (_bega ,_eaeb .Gamma [0])+_eaeb .Matrix [4]*_be .Pow (_bbda ,_eaeb .Gamma [1])+_eaeb .Matrix [7]*_be .Pow (_cgda ,_eaeb .Gamma [2]);Z :=_eaeb .Matrix [2]*_be .Pow (_bega ,_eaeb .Gamma [0])+_eaeb .Matrix [5]*_be .Pow (_bbda ,_eaeb .Gamma [1])+_eaeb .Matrix [8]*_be .Pow (_cgda ,_eaeb .Gamma [2]);
_dgba :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eaeg :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdeba :=0.055648*X +-0.204043*Y +1.057311*Z ;_dgba =_be .Min (_be .Max (_dgba ,0),1.0);_eaeg =_be .Min (_be .Max (_eaeg ,0),1.0);_gdeba =_be .Min (_be .Max (_gdeba ,0),1.0);
return NewPdfColorDeviceRGB (_dgba ,_eaeg ,_gdeba ),nil ;};func _agebd (_afgg *_cg .PdfObjectDictionary ,_gbedg *fontCommon )(*pdfFontType0 ,error ){_effca ,_bccf :=_cg .GetArray (_afgg .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_bccf {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_gbedg );
return nil ,_cg .ErrRangeError ;};if _effca .Len ()!=1{_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_effca .Len ());
return nil ,_cg .ErrRangeError ;};_gfga ,_fcae :=_ecdb (_effca .Get (0),false );if _fcae !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_fcae ,_gbedg );
return nil ,_fcae ;};_dacg :=_ceag (_gbedg );_dacg .DescendantFont =_gfga ;_dbcc ,_bccf :=_cg .GetNameVal (_afgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bccf {if _dbcc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dbcc =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_dacg ._befcb =_eba .NewIdentityTextEncoder (_dbcc );
}else if _cb .IsPredefinedCMap (_dbcc ){_dacg ._ddfb ,_fcae =_cb .LoadPredefinedCMap (_dbcc );if _fcae !=nil {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dbcc ,_fcae );
};}else {_aefb .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dbcc );};};if _fbaf :=_gfga .baseFields ()._dcded ;_fbaf !=nil {if _acbbg :=_fbaf .Name ();_acbbg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_acbbg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_acbbg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_acbbg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_dacg ._befcb =_eba .NewCMapEncoder (_dbcc ,_dacg ._ddfb ,_fbaf );
};};return _dacg ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cg .PdfObject ;};func (_eef *PdfReader )newPdfActionGotoEFromDict (_bdcg *_cg .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dbg ,_cfa :=_eda (_bdcg .Get ("\u0046"));if _cfa !=nil {return nil ,_cfa ;};return &PdfActionGoToE {D :_bdcg .Get ("\u0044"),NewWindow :_bdcg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bdcg .Get ("\u0054"),F :_dbg },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_edfed *PdfAnnotationText )ToPdfObject ()_cg .PdfObject {_edfed .PdfAnnotation .ToPdfObject ();_defe :=_edfed ._bed ;_aaeb :=_defe .PdfObject .(*_cg .PdfObjectDictionary );if _edfed .PdfAnnotationMarkup !=nil {_edfed .PdfAnnotationMarkup .appendToPdfDictionary (_aaeb );
};_aaeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0054\u0065\u0078\u0074"));_aaeb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_edfed .Open );_aaeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edfed .Name );_aaeb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_edfed .State );
_aaeb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_edfed .StateModel );return _defe ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dfdbb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_bgaf :=NewPdfOutlineItem ();_bgaf .Title =_cg .MakeEncodedString (_dfdbb .Title ,true );_bgaf .Dest =_dfdbb .Dest .ToPdfObject ();var _geggd []*PdfOutlineItem ;var _gadg int64 ;var _efae *PdfOutlineItem ;
for _ ,_edcgf :=range _dfdbb .Entries {_gebgg ,_acdfa :=_edcgf .ToPdfOutlineItem ();_gebgg .Parent =&_bgaf .PdfOutlineTreeNode ;if _efae !=nil {_efae .Next =&_gebgg .PdfOutlineTreeNode ;_gebgg .Prev =&_efae .PdfOutlineTreeNode ;};_geggd =append (_geggd ,_gebgg );
_gadg +=_acdfa ;_efae =_gebgg ;};_gcgab :=len (_geggd );_gadg +=int64 (_gcgab );if _gcgab > 0{_bgaf .First =&_geggd [0].PdfOutlineTreeNode ;_bgaf .Last =&_geggd [_gcgab -1].PdfOutlineTreeNode ;_bgaf .Count =&_gadg ;};return _bgaf ,_gadg ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ffage *PdfPageResources )SetXObjectFormByName (keyName _cg .PdfObjectName ,xform *XObjectForm )error {_abde :=xform .ToPdfObject ().(*_cg .PdfObjectStream );_geeef :=_ffage .SetXObjectByName (keyName ,_abde );return _geeef ;};func _efab (_bcadef *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_cdfg ,_ggccf :=_cg .GetDict (_bcadef .AP );
if !_ggccf {return nil ,nil ,_fff .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _cdfg ==nil {return nil ,nil ,nil ;};_acdba ,_ggccf :=_cg .GetArray (_bcadef .Rect );
if !_ggccf ||_acdba .Len ()!=4{return nil ,nil ,_fff .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_aece ,_fgag :=NewPdfRectangle (*_acdba );if _fgag !=nil {return nil ,nil ,_fgag ;};_ccca :=_cg .TraceToDirectObject (_cdfg .Get ("\u004e"));
switch _bedgc :=_ccca .(type ){case *_cg .PdfObjectStream :_deeca :=_bedgc ;_dbgcb ,_bdac :=NewXObjectFormFromStream (_deeca );return _dbgcb ,_aece ,_bdac ;case *_cg .PdfObjectDictionary :_edecb :=_bedgc ;_eaba ,_agba :=_cg .GetName (_bcadef .AS );if !_agba {return nil ,nil ,nil ;
};if _edecb .Get (*_eaba )==nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_dgdb ,_agba :=_cg .GetStream (_edecb .Get (*_eaba ));if !_agba {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_eaba );
return nil ,nil ,_fff .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_ebea ,_ggbb :=NewXObjectFormFromStream (_dgdb );return _ebea ,_aece ,_ggbb ;};_aefb .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ccca );
return nil ,nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_fabgc *PdfWriter )getPdfVersion ()string {return _g .Sprintf ("\u0025\u0064\u002e%\u0064",_fabgc ._cdadd .Major ,_fabgc ._cdadd .Minor );
};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _bb .Time ){_ebecf .Lock ();defer _ebecf .Unlock ();_cgbeb =modifiedDate ;};func (_agdbf Image )getBase ()_cc .ImageBase {return _cc .NewImageBase (int (_agdbf .Width ),int (_agdbf .Height ),int (_agdbf .BitsPerComponent ),_agdbf .ColorComponents ,_agdbf .Data ,_agdbf ._dbcf ,_agdbf ._gegd );
};func _fgaea ()_bb .Time {_ebecf .Lock ();defer _ebecf .Unlock ();return _accfeg };

// String returns a string representation of the field.
func (_cdaaf *PdfField )String ()string {if _ageb ,_acgfa :=_cdaaf .ToPdfObject ().(*_cg .PdfIndirectObject );_acgfa {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cdaaf ._bcgd ,_ageb .PdfObject .String ());};return "";};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_decea *PdfPageResources )SetXObjectByName (keyName _cg .PdfObjectName ,stream *_cg .PdfObjectStream )error {if _decea .XObject ==nil {_decea .XObject =_cg .MakeDict ();};_cbddbc :=_cg .TraceToDirectObject (_decea .XObject );_fbdbg ,_edgdde :=_cbddbc .(*_cg .PdfObjectDictionary );
if !_edgdde {_aefb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_decea .XObject ,_cbddbc );return _fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fbdbg .Set (keyName ,stream );return nil ;};func (_eggfa *PdfWriter )checkPendingObjects (){for _agabc ,_cedaf :=range _eggfa ._cegde {if !_eggfa .hasObject (_agabc ){_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_agabc ,_agabc ,_agabc );
for _ ,_bdbbc :=range _cedaf {for _ ,_adcca :=range _bdbbc .Keys (){_gcbag :=_bdbbc .Get (_adcca );if _gcbag ==_agabc {_aefb .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_bdbbc .Set (_adcca ,_cg .MakeNull ());break ;};};};};};};

// ColorToRGB converts gray -> rgb for a single color component.
func (_bgdf *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_baead ,_cbfec :=color .(*PdfColorDeviceGray );if !_cbfec {_aefb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_baead ),float64 (*_baead ),float64 (*_baead )),nil ;};

// ToPdfObject implements interface PdfModel.
func (_bccc *PdfAnnotationScreen )ToPdfObject ()_cg .PdfObject {_bccc .PdfAnnotation .ToPdfObject ();_ggab :=_bccc ._bed ;_dfe :=_ggab .PdfObject .(*_cg .PdfObjectDictionary );_dfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dfe .SetIfNotNil ("\u0054",_bccc .T );_dfe .SetIfNotNil ("\u004d\u004b",_bccc .MK );_dfe .SetIfNotNil ("\u0041",_bccc .A );_dfe .SetIfNotNil ("\u0041\u0041",_bccc .AA );return _ggab ;};

// WriteToFile writes the output PDF to file.
func (_beeed *PdfWriter )WriteToFile (outputFilePath string )error {_adbcgg ,_gddea :=_ad .Create (outputFilePath );if _gddea !=nil {return _gddea ;};defer _adbcgg .Close ();return _beeed .Write (_adbcgg );};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_cagd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _cagd .RunesToCharcodeBytes ([]rune (str ));};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ecfc *PdfFont )GetCharMetrics (code _eba .CharCode )(CharMetrics ,bool ){var _gebfc _egg .CharMetrics ;switch _fcgcd :=_ecfc ._cgdd .(type ){case *pdfFontSimple :if _afga ,_efgb :=_fcgcd .GetCharMetrics (code );_efgb {return _afga ,_efgb ;};case *pdfFontType0 :if _bdga ,_fcadf :=_fcgcd .GetCharMetrics (code );
_fcadf {return _bdga ,_fcadf ;};case *pdfCIDFontType0 :if _aegb ,_gdaf :=_fcgcd .GetCharMetrics (code );_gdaf {return _aegb ,_gdaf ;};case *pdfCIDFontType2 :if _fgdeg ,_egcg :=_fcgcd .GetCharMetrics (code );_egcg {return _fgdeg ,_egcg ;};case *pdfFontType3 :if _fcfdf ,_ddba :=_fcgcd .GetCharMetrics (code );
_ddba {return _fcfdf ,_ddba ;};default:_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ecfc ._cgdd );
return _gebfc ,false ;};if _bdagc ,_bbefg :=_ecfc .GetFontDescriptor ();_bbefg ==nil &&_bdagc !=nil {return _egg .CharMetrics {Wx :_bdagc ._edgb },true ;};_aefb .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ecfc );
return _gebfc ,false ;};func _bffaf (_ebee _cg .PdfObject )(*PdfShading ,error ){_fgadba :=&PdfShading {};var _gdcf *_cg .PdfObjectDictionary ;if _fdgge ,_cbcg :=_cg .GetIndirect (_ebee );_cbcg {_fgadba ._ceabf =_fdgge ;_ffcag ,_cedde :=_fdgge .PdfObject .(*_cg .PdfObjectDictionary );
if !_cedde {_aefb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cg .ErrTypeError ;};_gdcf =_ffcag ;}else if _fdfb ,_egdff :=_cg .GetStream (_ebee );
_egdff {_fgadba ._ceabf =_fdfb ;_gdcf =_fdfb .PdfObjectDictionary ;}else if _becd ,_bcfa :=_cg .GetDict (_ebee );_bcfa {_fgadba ._ceabf =_becd ;_gdcf =_becd ;}else {_aefb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ebee );
return nil ,_cg .ErrTypeError ;};if _gdcf ==nil {_aefb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ebee =_gdcf .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ebee ==nil {_aefb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebee =_cg .TraceToDirectObject (_ebee );_bfef ,_efdf :=_ebee .(*_cg .PdfObjectInteger );if !_efdf {_aefb .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ebee );
return nil ,_cg .ErrTypeError ;};if *_bfef < 1||*_bfef > 7{_aefb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bfef );
return nil ,_cg .ErrTypeError ;};_fgadba .ShadingType =_bfef ;_ebee =_gdcf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ebee ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_edddgg ,_dabbcc :=NewPdfColorspaceFromPdfObject (_ebee );if _dabbcc !=nil {_aefb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_dabbcc );
return nil ,_dabbcc ;};_fgadba .ColorSpace =_edddgg ;_ebee =_gdcf .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ebee !=nil {_ebee =_cg .TraceToDirectObject (_ebee );_cdab ,_cdeda :=_ebee .(*_cg .PdfObjectArray );if !_cdeda {_aefb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebee );
return nil ,_cg .ErrTypeError ;};_fgadba .Background =_cdab ;};_ebee =_gdcf .Get ("\u0042\u0042\u006f\u0078");if _ebee !=nil {_ebee =_cg .TraceToDirectObject (_ebee );_dagcb ,_bcdf :=_ebee .(*_cg .PdfObjectArray );if !_bcdf {_aefb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ebee );
return nil ,_cg .ErrTypeError ;};_afbc ,_caecff :=NewPdfRectangle (*_dagcb );if _caecff !=nil {_aefb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_caecff );return nil ,_caecff ;};_fgadba .BBox =_afbc ;};
_ebee =_gdcf .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _ebee !=nil {_ebee =_cg .TraceToDirectObject (_ebee );_bfadg ,_daaca :=_ebee .(*_cg .PdfObjectBool );if !_daaca {_aefb .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebee );
return nil ,_cg .ErrTypeError ;};_fgadba .AntiAlias =_bfadg ;};switch *_bfef {case 1:_gebgea ,_decce :=_ecbfc (_gdcf );if _decce !=nil {return nil ,_decce ;};_gebgea .PdfShading =_fgadba ;_fgadba ._caeg =_gebgea ;return _fgadba ,nil ;case 2:_egaab ,_ffbeg :=_gfaea (_gdcf );
if _ffbeg !=nil {return nil ,_ffbeg ;};_egaab .PdfShading =_fgadba ;_fgadba ._caeg =_egaab ;return _fgadba ,nil ;case 3:_beada ,_aeeg :=_caffg (_gdcf );if _aeeg !=nil {return nil ,_aeeg ;};_beada .PdfShading =_fgadba ;_fgadba ._caeg =_beada ;return _fgadba ,nil ;
case 4:_aedb ,_gbdfc :=_febge (_gdcf );if _gbdfc !=nil {return nil ,_gbdfc ;};_aedb .PdfShading =_fgadba ;_fgadba ._caeg =_aedb ;return _fgadba ,nil ;case 5:_eeaef ,_ecae :=_gaea (_gdcf );if _ecae !=nil {return nil ,_ecae ;};_eeaef .PdfShading =_fgadba ;
_fgadba ._caeg =_eeaef ;return _fgadba ,nil ;case 6:_geeed ,_cafdb :=_fegfa (_gdcf );if _cafdb !=nil {return nil ,_cafdb ;};_geeed .PdfShading =_fgadba ;_fgadba ._caeg =_geeed ;return _fgadba ,nil ;case 7:_fbeac ,_baadg :=_adcab (_gdcf );if _baadg !=nil {return nil ,_baadg ;
};_fbeac .PdfShading =_fgadba ;_fgadba ._caeg =_fbeac ;return _fgadba ,nil ;};return nil ,_fff .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_fgef *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cgdac []*PdfFieldSignature ;
for _ ,_eeff :=range _fgef .AllFields (){switch _dbba :=_eeff .GetContext ().(type ){case *PdfFieldSignature :_bfea :=_dbba ;_cgdac =append (_cgdac ,_bfea );};};return _cgdac ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_dgec *PdfPageResources )HasColorspaceByName (keyName _cg .PdfObjectName )bool {_geaad ,_fcded :=_dgec .GetColorspaces ();if _fcded !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fcded );
return false ;};if _geaad ==nil {return false ;};_ ,_ffceg :=_geaad .Colorspaces [string (keyName )];return _ffceg ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cdffe []byte ;_daaae []uint32 ;_fcafb *_cg .PdfObjectStream ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_gbgf :_cg .MakeIndirectObject (_cg .MakeDict ())};};

// ToInteger convert to an integer format.
func (_cfcg *PdfColorLab )ToInteger (bits int )[3]uint32 {_ebgd :=_be .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ebgd *_cfcg .L ()),uint32 (_ebgd *_cfcg .A ()),uint32 (_ebgd *_cfcg .B ())};};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ffa :=NewPdfAction ();_gfg :=&PdfActionGoToR {};_gfg .PdfAction =_ffa ;_ffa .SetContext (_gfg );return _gfg ;};

// K returns the value of the key component of the color.
func (_cdba *PdfColorDeviceCMYK )K ()float64 {return _cdba [3]};func (_bbgd *PdfReader )newPdfActionURIFromDict (_addc *_cg .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_addc .Get ("\u0055\u0052\u0049"),IsMap :_addc .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_ccbe *PdfSignatureReference )GetContainingPdfObject ()_cg .PdfObject {return _ccbe ._agbaa };

// Items returns all children outline items.
func (_ggdf *OutlineItem )Items ()[]*OutlineItem {return _ggdf .Entries };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fagb :=NewPdfAnnotation ();_faga :=&PdfAnnotationPolygon {};_faga .PdfAnnotation =_fagb ;_faga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fagb .SetContext (_faga );return _faga ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fdba *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fdba .UnderlyingCS ==nil {return nil ,_fff .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fdba .UnderlyingCS .ColorFromFloats (vals );};func (_bbe *PdfReader )newPdfAnnotationWidgetFromDict (_fcfc *_cg .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gfad :=PdfAnnotationWidget {};_gfad .H =_fcfc .Get ("\u0048");_gfad .MK =_fcfc .Get ("\u004d\u004b");
_gfad .A =_fcfc .Get ("\u0041");_gfad .AA =_fcfc .Get ("\u0041\u0041");_gfad .BS =_fcfc .Get ("\u0042\u0053");_gfad .Parent =_fcfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_gfad ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_dadff *PdfPage )AddFont (name _cg .PdfObjectName ,font _cg .PdfObject )error {if _dadff .Resources ==nil {_dadff .Resources =NewPdfPageResources ();};if _dadff .Resources .Font ==nil {_dadff .Resources .Font =_cg .MakeDict ();};_fggb ,_fafgb :=_cg .TraceToDirectObject (_dadff .Resources .Font ).(*_cg .PdfObjectDictionary );
if !_fafgb {_aefb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cg .TraceToDirectObject (_dadff .Resources .Font ));
return _fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fggb .Set (name ,font );return nil ;};func _egggc ()*modelManager {_agbgbe :=modelManager {};_agbgbe ._acbfc =map[PdfModel ]_cg .PdfObject {};
_agbgbe ._dffca =map[_cg .PdfObject ]PdfModel {};return &_agbgbe ;};func (_fbcf *PdfWriter )adjustXRefAffectedVersion (_cgagc bool ){if _cgagc &&_fbcf ._cdadd .Major ==1&&_fbcf ._cdadd .Minor < 5{_fbcf ._cdadd .Minor =5;};};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_dcba :=NewPdfAnnotation ();_dfg :=&PdfAnnotationPopup {};_dfg .PdfAnnotation =_dcba ;_dcba .SetContext (_dfg );return _dfg ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_bbcd *PdfAcroForm )GetContainingPdfObject ()_cg .PdfObject {return _bbcd ._gbgf };

// ToPdfObject implements interface PdfModel.
func (_cfee *PdfAnnotationCaret )ToPdfObject ()_cg .PdfObject {_cfee .PdfAnnotation .ToPdfObject ();_efff :=_cfee ._bed ;_bfd :=_efff .PdfObject .(*_cg .PdfObjectDictionary );_cfee .PdfAnnotationMarkup .appendToPdfDictionary (_bfd );_bfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0043\u0061\u0072e\u0074"));
_bfd .SetIfNotNil ("\u0052\u0044",_cfee .RD );_bfd .SetIfNotNil ("\u0053\u0079",_cfee .Sy );return _efff ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_ebfb :=NewPdfAnnotation ();_eaf :=&PdfAnnotationFreeText {};_eaf .PdfAnnotation =_ebfb ;_eaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebfb .SetContext (_eaf );return _eaf ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cdbc *pdfCIDFontType2 )ToPdfObject ()_cg .PdfObject {if _cdbc ._fecgg ==nil {_cdbc ._fecgg =&_cg .PdfIndirectObject {};};_edcb :=_cdbc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_cdbc ._fecgg .PdfObject =_edcb ;
if _cdbc .CIDSystemInfo !=nil {_edcb .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cdbc .CIDSystemInfo );};if _cdbc .DW !=nil {_edcb .Set ("\u0044\u0057",_cdbc .DW );};if _cdbc .DW2 !=nil {_edcb .Set ("\u0044\u0057\u0032",_cdbc .DW2 );
};if _cdbc .W !=nil {_edcb .Set ("\u0057",_cdbc .W );};if _cdbc .W2 !=nil {_edcb .Set ("\u0057\u0032",_cdbc .W2 );};if _cdbc .CIDToGIDMap !=nil {_edcb .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cdbc .CIDToGIDMap );};return _cdbc ._fecgg ;
};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_afcd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// SetAction sets the PDF action for the annotation link.
func (_fcga *PdfAnnotationLink )SetAction (action *PdfAction ){_fcga ._ac =action ;if action ==nil {_fcga .A =nil ;};};func (_edcc *pdfFontType0 )subsetRegistered ()error {_fdbcd ,_cbdbgc :=_edcc .DescendantFont ._cgdd .(*pdfCIDFontType2 );if !_cbdbgc {_aefb .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_edcc .DescendantFont );
return nil ;};if _fdbcd ==nil {return nil ;};if _fdbcd ._bfggb ==nil {_aefb .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _edcc ._befcb ==nil {_aefb .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_becg ,_cbdbgc :=_cg .GetStream (_fdbcd ._bfggb .FontFile2 );if !_cbdbgc {_aefb .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _fff .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ffcc ,_aegcg :=_cg .DecodeStream (_becg );if _aegcg !=nil {_aefb .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_aegcg );
return _aegcg ;};_cbgc ,_aegcg :=_cd .Parse (_gbe .NewReader (_ffcc ));if _aegcg !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_becg .Stream ));
return _aegcg ;};var _dfaca []rune ;var _dfag *_cd .Font ;switch _gaage :=_edcc ._befcb .(type ){case *_eba .TrueTypeFontEncoder :_dfaca =_gaage .RegisteredRunes ();_dfag ,_aegcg =_cbgc .SubsetKeepRunes (_dfaca );if _aegcg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aegcg );
return _aegcg ;};_gaage .SubsetRegistered ();case *_eba .IdentityEncoder :_dfaca =_gaage .RegisteredRunes ();_gcgdg :=make ([]_cd .GlyphIndex ,len (_dfaca ));for _affce ,_dfdb :=range _dfaca {_gcgdg [_affce ]=_cd .GlyphIndex (_dfdb );};_dfag ,_aegcg =_cbgc .SubsetKeepIndices (_gcgdg );
if _aegcg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aegcg );return _aegcg ;};case _eba .SimpleEncoder :_ecgcg :=_gaage .Charcodes ();for _ ,_cffae :=range _ecgcg {_baddc ,_dgbfc :=_gaage .CharcodeToRune (_cffae );if !_dgbfc {_aefb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_cffae );
continue ;};_dfaca =append (_dfaca ,_baddc );};default:return _g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_edcc ._befcb );
};var _bgae _gbe .Buffer ;_aegcg =_dfag .Write (&_bgae );if _aegcg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aegcg );return _aegcg ;};if _edcc ._dcded !=nil {_cefd :=make (map[_cb .CharCode ]rune ,len (_dfaca ));for _ ,_fefg :=range _dfaca {_ecgcd ,_eaed :=_edcc ._befcb .RuneToCharcode (_fefg );
if !_eaed {continue ;};_cefd [_cb .CharCode (_ecgcd )]=_fefg ;};_edcc ._dcded =_cb .NewToUnicodeCMap (_cefd );};_becg ,_aegcg =_cg .MakeStream (_bgae .Bytes (),_cg .NewFlateEncoder ());if _aegcg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aegcg );
return _aegcg ;};_becg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cg .MakeInteger (int64 (_bgae .Len ())));if _cddd ,_gcaf :=_cg .GetStream (_fdbcd ._bfggb .FontFile2 );_gcaf {*_cddd =*_becg ;}else {_fdbcd ._bfggb .FontFile2 =_becg ;};_cgcd :=_decgg ();
if len (_edcc ._fbdedg )> 0{_edcc ._fbdedg =_egde (_edcc ._fbdedg ,_cgcd );};if len (_fdbcd ._fbdedg )> 0{_fdbcd ._fbdedg =_egde (_fdbcd ._fbdedg ,_cgcd );};if len (_edcc ._dfae )> 0{_edcc ._dfae =_egde (_edcc ._dfae ,_cgcd );};if _fdbcd ._bfggb !=nil {_dabgb ,_fggg :=_cg .GetName (_fdbcd ._bfggb .FontName );
if _fggg &&len (_dabgb .String ())> 0{_gcgae :=_egde (_dabgb .String (),_cgcd );_fdbcd ._bfggb .FontName =_cg .MakeName (_gcgae );};};return nil ;};func (_egce SignatureValidationResult )String ()string {var _cgdada _gbe .Buffer ;_cgdada .WriteString (_g .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_egce .Name ));
if _egce .Date ._gbgef > 0{_cgdada .WriteString (_g .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_egce .Date .ToGoTime ().String ()));}else {_cgdada .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_egce .Reason )> 0{_cgdada .WriteString (_g .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_egce .Reason ));}else {_cgdada .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_egce .Location )> 0{_cgdada .WriteString (_g .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_egce .Location ));}else {_cgdada .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_egce .ContactInfo )> 0{_cgdada .WriteString (_g .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_egce .ContactInfo ));}else {_cgdada .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_cgdada .WriteString (_g .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_egce .Fields )));if _egce .IsSigned {_cgdada .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_cgdada .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _egce .IsVerified {_cgdada .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_cgdada .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _egce .IsTrusted {_cgdada .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_cgdada .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_egce .GeneralizedTime .IsZero (){_cgdada .WriteString (_g .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_egce .GeneralizedTime .String ()));
};if _egce .DiffResults !=nil {_cgdada .WriteString (_g .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_egce .DiffResults .IsPermitted ()));if len (_egce .DiffResults .Warnings )> 0{_cgdada .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_bagfe :=range _egce .DiffResults .Warnings {_cgdada .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_bagfe ));};};if len (_egce .DiffResults .Errors )> 0{_cgdada .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_gedfb :=range _egce .DiffResults .Errors {_cgdada .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_gedfb ));};};};return _cgdada .String ();};

// RemovePage removes a page by number.
func (_ecab *PdfAppender )RemovePage (pageNum int ){_agec :=pageNum -1;_ecab ._fgcg =append (_ecab ._fgcg [0:_agec ],_ecab ._fgcg [pageNum :]...);};

// ToPdfObject implements interface PdfModel.
func (_cec *PdfActionGoToE )ToPdfObject ()_cg .PdfObject {_cec .PdfAction .ToPdfObject ();_gaf :=_cec ._ebd ;_fgc :=_gaf .PdfObject .(*_cg .PdfObjectDictionary );_fgc .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoToE )));if _cec .F !=nil {_fgc .Set ("\u0046",_cec .F .ToPdfObject ());
};_fgc .SetIfNotNil ("\u0044",_cec .D );_fgc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cec .NewWindow );_fgc .SetIfNotNil ("\u0054",_cec .T );return _gaf ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cg .PdfObject ;Mac _cg .PdfObject ;Unix _cg .PdfObject ;NewWindow _cg .PdfObject ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// HasFontByName checks if has font resource by name.
func (_bbebb *PdfPage )HasFontByName (name _cg .PdfObjectName )bool {_deae ,_fgdeb :=_bbebb .Resources .Font .(*_cg .PdfObjectDictionary );if !_fgdeb {return false ;};if _agae :=_deae .Get (name );_agae !=nil {return true ;};return false ;};func (_ffbe *PdfReader )newPdfOutlineItemFromIndirectObject (_adce *_cg .PdfIndirectObject )(*PdfOutlineItem ,error ){_bcfb ,_dcbad :=_adce .PdfObject .(*_cg .PdfObjectDictionary );
if !_dcbad {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ggaag :=NewPdfOutlineItem ();_fbgcg :=_bcfb .Get ("\u0054\u0069\u0074l\u0065");
if _fbgcg ==nil {return nil ,_g .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ecabc ,_feede :=_cg .GetString (_fbgcg );if !_feede {return nil ,_g .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_fbgcg );};_ggaag .Title =_ecabc ;if _cggcc :=_bcfb .Get ("\u0043\u006f\u0075n\u0074");
_cggcc !=nil {_cafff ,_gggbe :=_cggcc .(*_cg .PdfObjectInteger );if !_gggbe {return nil ,_g .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cggcc );};_dgafe :=int64 (*_cafff );
_ggaag .Count =&_dgafe ;};if _ggeg :=_bcfb .Get ("\u0044\u0065\u0073\u0074");_ggeg !=nil {_ggaag .Dest =_cg .ResolveReference (_ggeg );if !_ffbe ._ddae {_dfabd :=_ffbe .traverseObjectData (_ggaag .Dest );if _dfabd !=nil {return nil ,_dfabd ;};};};if _efcce :=_bcfb .Get ("\u0041");
_efcce !=nil {_ggaag .A =_cg .ResolveReference (_efcce );if !_ffbe ._ddae {_cbed :=_ffbe .traverseObjectData (_ggaag .A );if _cbed !=nil {return nil ,_cbed ;};};};if _dagg :=_bcfb .Get ("\u0053\u0045");_dagg !=nil {_ggaag .SE =nil ;};if _eebeg :=_bcfb .Get ("\u0043");
_eebeg !=nil {_ggaag .C =_cg .ResolveReference (_eebeg );};if _effcf :=_bcfb .Get ("\u0046");_effcf !=nil {_ggaag .F =_cg .ResolveReference (_effcf );};return _ggaag ,nil ;};func (_gda *PdfReader )newPdfActionFromIndirectObject (_fbcg *_cg .PdfIndirectObject )(*PdfAction ,error ){_gcdd ,_bce :=_fbcg .PdfObject .(*_cg .PdfObjectDictionary );
if !_bce {return nil ,_g .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gda ._eggbd .GetModelFromPrimitive (_gcdd );model !=nil {_cabe ,_eff :=model .(*PdfAction );if !_eff {return nil ,_g .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _cabe ,nil ;};_dgf :=&PdfAction {};_dgf ._ebd =_fbcg ;_gda ._eggbd .Register (_gcdd ,_dgf );if _efb :=_gcdd .Get ("\u0054\u0079\u0070\u0065");_efb !=nil {_ebde ,_cee :=_efb .(*_cg .PdfObjectName );if !_cee {_aefb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_efb );
}else {if *_ebde !="\u0041\u0063\u0074\u0069\u006f\u006e"{_aefb .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_ebde );
};_dgf .Type =_ebde ;};};if _cbd :=_gcdd .Get ("\u004e\u0065\u0078\u0074");_cbd !=nil {_dgf .Next =_cbd ;};if _afc :=_gcdd .Get ("\u0053");_afc !=nil {_dgf .S =_afc ;};_dgb ,_fcc :=_dgf .S .(*_cg .PdfObjectName );if !_fcc {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dgf .S );
return nil ,_g .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dgf .S );};_gfb :=PdfActionType (_dgb .String ());
switch _gfb {case ActionTypeGoTo :_fdeg ,_gca :=_gda .newPdfActionGotoFromDict (_gcdd );if _gca !=nil {return nil ,_gca ;};_fdeg .PdfAction =_dgf ;_dgf ._dbf =_fdeg ;return _dgf ,nil ;case ActionTypeGoToR :_gbb ,_ead :=_gda .newPdfActionGotoRFromDict (_gcdd );
if _ead !=nil {return nil ,_ead ;};_gbb .PdfAction =_dgf ;_dgf ._dbf =_gbb ;return _dgf ,nil ;case ActionTypeGoToE :_begc ,_gae :=_gda .newPdfActionGotoEFromDict (_gcdd );if _gae !=nil {return nil ,_gae ;};_begc .PdfAction =_dgf ;_dgf ._dbf =_begc ;return _dgf ,nil ;
case ActionTypeLaunch :_aec ,_bcd :=_gda .newPdfActionLaunchFromDict (_gcdd );if _bcd !=nil {return nil ,_bcd ;};_aec .PdfAction =_dgf ;_dgf ._dbf =_aec ;return _dgf ,nil ;case ActionTypeThread :_ddb ,_dfca :=_gda .newPdfActionThreadFromDict (_gcdd );if _dfca !=nil {return nil ,_dfca ;
};_ddb .PdfAction =_dgf ;_dgf ._dbf =_ddb ;return _dgf ,nil ;case ActionTypeURI :_ecc ,_ggd :=_gda .newPdfActionURIFromDict (_gcdd );if _ggd !=nil {return nil ,_ggd ;};_ecc .PdfAction =_dgf ;_dgf ._dbf =_ecc ;return _dgf ,nil ;case ActionTypeSound :_bdba ,_faa :=_gda .newPdfActionSoundFromDict (_gcdd );
if _faa !=nil {return nil ,_faa ;};_bdba .PdfAction =_dgf ;_dgf ._dbf =_bdba ;return _dgf ,nil ;case ActionTypeMovie :_dbee ,_fdb :=_gda .newPdfActionMovieFromDict (_gcdd );if _fdb !=nil {return nil ,_fdb ;};_dbee .PdfAction =_dgf ;_dgf ._dbf =_dbee ;return _dgf ,nil ;
case ActionTypeHide :_gfbb ,_aea :=_gda .newPdfActionHideFromDict (_gcdd );if _aea !=nil {return nil ,_aea ;};_gfbb .PdfAction =_dgf ;_dgf ._dbf =_gfbb ;return _dgf ,nil ;case ActionTypeNamed :_gfe ,_fccf :=_gda .newPdfActionNamedFromDict (_gcdd );if _fccf !=nil {return nil ,_fccf ;
};_gfe .PdfAction =_dgf ;_dgf ._dbf =_gfe ;return _dgf ,nil ;case ActionTypeSubmitForm :_cgde ,_fdf :=_gda .newPdfActionSubmitFormFromDict (_gcdd );if _fdf !=nil {return nil ,_fdf ;};_cgde .PdfAction =_dgf ;_dgf ._dbf =_cgde ;return _dgf ,nil ;case ActionTypeResetForm :_egc ,_abd :=_gda .newPdfActionResetFormFromDict (_gcdd );
if _abd !=nil {return nil ,_abd ;};_egc .PdfAction =_dgf ;_dgf ._dbf =_egc ;return _dgf ,nil ;case ActionTypeImportData :_ccg ,_fgbe :=_gda .newPdfActionImportDataFromDict (_gcdd );if _fgbe !=nil {return nil ,_fgbe ;};_ccg .PdfAction =_dgf ;_dgf ._dbf =_ccg ;
return _dgf ,nil ;case ActionTypeSetOCGState :_efg ,_bbd :=_gda .newPdfActionSetOCGStateFromDict (_gcdd );if _bbd !=nil {return nil ,_bbd ;};_efg .PdfAction =_dgf ;_dgf ._dbf =_efg ;return _dgf ,nil ;case ActionTypeRendition :_fccb ,_cbe :=_gda .newPdfActionRenditionFromDict (_gcdd );
if _cbe !=nil {return nil ,_cbe ;};_fccb .PdfAction =_dgf ;_dgf ._dbf =_fccb ;return _dgf ,nil ;case ActionTypeTrans :_fbga ,_ccf :=_gda .newPdfActionTransFromDict (_gcdd );if _ccf !=nil {return nil ,_ccf ;};_fbga .PdfAction =_dgf ;_dgf ._dbf =_fbga ;return _dgf ,nil ;
case ActionTypeGoTo3DView :_agg ,_dggg :=_gda .newPdfActionGoTo3DViewFromDict (_gcdd );if _dggg !=nil {return nil ,_dggg ;};_agg .PdfAction =_dgf ;_dgf ._dbf =_agg ;return _dgf ,nil ;case ActionTypeJavaScript :_addd ,_cce :=_gda .newPdfActionJavaScriptFromDict (_gcdd );
if _cce !=nil {return nil ,_cce ;};_addd .PdfAction =_dgf ;_dgf ._dbf =_addd ;return _dgf ,nil ;};_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gfb );
return nil ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_dcag *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aggd ,_egefc :=_cg .GetNumbersAsFloat (objects );
if _egefc !=nil {return nil ,_egefc ;};return _dcag .ColorFromFloats (_aggd );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ffacb *PdfPageResources )SetXObjectImageByName (keyName _cg .PdfObjectName ,ximg *XObjectImage )error {_fgfba :=ximg .ToPdfObject ().(*_cg .PdfObjectStream );_ccgce :=_ffacb .SetXObjectByName (keyName ,_fgfba );return _ccgce ;};

// ToPdfObject implements interface PdfModel.
func (_gcd *PdfActionRendition )ToPdfObject ()_cg .PdfObject {_gcd .PdfAction .ToPdfObject ();_edg :=_gcd ._ebd ;_bdb :=_edg .PdfObject .(*_cg .PdfObjectDictionary );_bdb .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeRendition )));_bdb .SetIfNotNil ("\u0052",_gcd .R );
_bdb .SetIfNotNil ("\u0041\u004e",_gcd .AN );_bdb .SetIfNotNil ("\u004f\u0050",_gcd .OP );_bdb .SetIfNotNil ("\u004a\u0053",_gcd .JS );return _edg ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_cfeg *PdfPageResources )SetShadingByName (keyName _cg .PdfObjectName ,shadingObj _cg .PdfObject )error {if _cfeg .Shading ==nil {_cfeg .Shading =_cg .MakeDict ();};_cgeea ,_fceb :=_cfeg .Shading .(*_cg .PdfObjectDictionary );if !_fceb {return _cg .ErrTypeError ;
};_cgeea .Set (keyName ,shadingObj );return nil ;};var ErrColorOutOfRange =_fff .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_adaafc *PdfTilingPattern )ToPdfObject ()_cg .PdfObject {_adaafc .PdfPattern .ToPdfObject ();_ffddeg :=_adaafc .getDict ();if _adaafc .PaintType !=nil {_ffddeg .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_adaafc .PaintType );};if _adaafc .TilingType !=nil {_ffddeg .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_adaafc .TilingType );
};if _adaafc .BBox !=nil {_ffddeg .Set ("\u0042\u0042\u006f\u0078",_adaafc .BBox .ToPdfObject ());};if _adaafc .XStep !=nil {_ffddeg .Set ("\u0058\u0053\u0074e\u0070",_adaafc .XStep );};if _adaafc .YStep !=nil {_ffddeg .Set ("\u0059\u0053\u0074e\u0070",_adaafc .YStep );
};if _adaafc .Resources !=nil {_ffddeg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_adaafc .Resources .ToPdfObject ());};if _adaafc .Matrix !=nil {_ffddeg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_adaafc .Matrix );};return _adaafc ._bcafe ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cdea *PdfColorspaceDeviceCMYK )ToPdfObject ()_cg .PdfObject {return _cg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;BitsPerFlag *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};func (_eeb *PdfReader )newPdfAnnotationLineFromDict (_afbe *_cg .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_eedga :=PdfAnnotationLine {};
_dgfc ,_debg :=_eeb .newPdfAnnotationMarkupFromDict (_afbe );if _debg !=nil {return nil ,_debg ;};_eedga .PdfAnnotationMarkup =_dgfc ;_eedga .L =_afbe .Get ("\u004c");_eedga .BS =_afbe .Get ("\u0042\u0053");_eedga .LE =_afbe .Get ("\u004c\u0045");_eedga .IC =_afbe .Get ("\u0049\u0043");
_eedga .LL =_afbe .Get ("\u004c\u004c");_eedga .LLE =_afbe .Get ("\u004c\u004c\u0045");_eedga .Cap =_afbe .Get ("\u0043\u0061\u0070");_eedga .IT =_afbe .Get ("\u0049\u0054");_eedga .LLO =_afbe .Get ("\u004c\u004c\u004f");_eedga .CP =_afbe .Get ("\u0043\u0050");
_eedga .Measure =_afbe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_eedga .CO =_afbe .Get ("\u0043\u004f");return &_eedga ,nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// ColorToRGB converts a CalGray color to an RGB color.
func (_bcbc *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfadf ,_affg :=color .(*PdfColorCalGray );if !_affg {_aefb .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gfadf .Val ();X :=_bcbc .WhitePoint [0]*_be .Pow (ANorm ,_bcbc .Gamma );Y :=_bcbc .WhitePoint [1]*_be .Pow (ANorm ,_bcbc .Gamma );
Z :=_bcbc .WhitePoint [2]*_be .Pow (ANorm ,_bcbc .Gamma );_gcae :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bgad :=-0.969256*X +1.875992*Y +0.041556*Z ;_ggec :=0.055648*X +-0.204043*Y +1.057311*Z ;_gcae =_be .Min (_be .Max (_gcae ,0),1.0);_bgad =_be .Min (_be .Max (_bgad ,0),1.0);
_ggec =_be .Min (_be .Max (_ggec ,0),1.0);return NewPdfColorDeviceRGB (_gcae ,_bgad ,_ggec ),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_eec *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgfg :=vals [0];if _fgfg < 0.0||_fgfg > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgfg );
return nil ,ErrColorOutOfRange ;};_bedg :=vals [1];if _bedg < 0.0||_bedg > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgfg );return nil ,ErrColorOutOfRange ;
};_addb :=vals [2];if _addb < 0.0||_addb > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgfg );return nil ,ErrColorOutOfRange ;};_dfdd :=NewPdfColorDeviceRGB (_fgfg ,_bedg ,_addb );
return _dfdd ,nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_ffafc *PdfReader )CheckAccessRights (password []byte )(bool ,_ab .Permissions ,error ){return _ffafc ._bafg .CheckAccessRights (password );};func (_cgfa *pdfFontSimple )updateStandard14Font (){_dbce ,_fbdce :=_cgfa .Encoder ().(_eba .SimpleEncoder );
if !_fbdce {_aefb .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cgfa .Encoder (),_cgfa );return ;};
_aafdd :=_dbce .Charcodes ();_cgfa ._bdbde =make (map[_eba .CharCode ]float64 ,len (_aafdd ));for _ ,_gfdc :=range _aafdd {_cdbca ,_ :=_dbce .CharcodeToRune (_gfdc );_fcgaa ,_ :=_cgfa ._fegab .Read (_cdbca );_cgfa ._bdbde [_gfdc ]=_fcgaa .Wx ;};};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_debb []_cg .PdfObject )([]_cg .PdfObject ,error );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dcbab *PdfPageResources )GetPatternByName (keyName _cg .PdfObjectName )(*PdfPattern ,bool ){if _dcbab .Pattern ==nil {return nil ,false ;};_ebccd ,_agbde :=_cg .TraceToDirectObject (_dcbab .Pattern ).(*_cg .PdfObjectDictionary );if !_agbde {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcbab .Pattern );
return nil ,false ;};if _efccd :=_ebccd .Get (keyName );_efccd !=nil {_gdae ,_bcfda :=_fbgb (_efccd );if _bcfda !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bcfda );
return nil ,false ;};return _gdae ,true ;};return nil ,false ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cg .PdfObjectName ;Colorants _cg .PdfObject ;Process _cg .PdfObject ;MixingHints _cg .PdfObject ;_eacb *_cg .PdfIndirectObject ;};

// GetFillImage get attached model.Image in push button.
func (_gacc *PdfFieldButton )GetFillImage ()*Image {if _gacc .IsPush (){return _gacc ._bcebf ;};return nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ageg :=&PdfFieldSignature {};_ageg .PdfField =NewPdfField ();_ageg .PdfField .SetContext (_ageg );_ageg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ageg .PdfAnnotationWidget .SetContext (_ageg );
_ageg .PdfAnnotationWidget ._bed =_ageg .PdfField ._gecee ;_ageg .T =_cg .MakeString ("");_ageg .F =_cg .MakeInteger (132);_ageg .V =signature ;return _ageg ;};func _bgcf (_ddefe []byte )bool {if len (_ddefe )< 4{return true ;};for _dfed :=range _ddefe [:4]{_cbddac :=rune (_dfed );
if !_bbg .Is (_bbg .ASCII_Hex_Digit ,_cbddac )&&!_bbg .IsSpace (_cbddac ){return true ;};};return false ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fgfe DefaultImageHandler )NewImageFromGoImage (goimg _bdg .Image )(*Image ,error ){_caecd ,_adfgb :=_cc .FromGoImage (goimg );if _adfgb !=nil {return nil ,_adfgb ;};_gfeg :=_fddbb (_caecd .Base ());return &_gfeg ,nil ;};

// SetVersion sets the PDF version of the output file.
func (_gefdf *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gefdf ._cdadd .Major =majorVersion ;_gefdf ._cdadd .Minor =minorVersion ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dbgf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetPdfVersion gets the version of the PDF used within this document.
func (_ebcdf *PdfWriter )GetPdfVersion ()string {return _ebcdf .getPdfVersion ()};func (_fge *PdfReader )newPdfAnnotationSquigglyFromDict (_dcgc *_cg .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_dcf :=PdfAnnotationSquiggly {};_gbba ,_fffg :=_fge .newPdfAnnotationMarkupFromDict (_dcgc );
if _fffg !=nil {return nil ,_fffg ;};_dcf .PdfAnnotationMarkup =_gbba ;_dcf .QuadPoints =_dcgc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dcf ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cg .PdfObject ;};func (_adbdc *PdfWriter )makeOffSetReference (_bcbbe int64 ){_deeeb :=_g .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_bcbbe );_adbdc .writeString (_deeeb );
_adbdc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_ccbda *PdfPage )Size ()(float64 ,float64 ,error ){_edag ,_aadc :=_ccbda .GetMediaBox ();if _aadc !=nil {return 0,0,_aadc ;};_dbdda ,_gccf :=_edag .Width (),_edag .Height ();_gfeab ,_aadc :=_ccbda .GetRotate ();if _aadc !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_aadc .Error ());
};if _eaged :=_gfeab ;_eaged %360!=0&&_eaged %90==0{if _afefc :=(360+_eaged %360)%360;_afefc ==90||_afefc ==270{_dbdda ,_gccf =_gccf ,_dbdda ;};};return _dbdda ,_gccf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cacb *PdfActionLaunch )ToPdfObject ()_cg .PdfObject {_cacb .PdfAction .ToPdfObject ();_gdg :=_cacb ._ebd ;_gec :=_gdg .PdfObject .(*_cg .PdfObjectDictionary );_gec .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeLaunch )));if _cacb .F !=nil {_gec .Set ("\u0046",_cacb .F .ToPdfObject ());
};_gec .SetIfNotNil ("\u0057\u0069\u006e",_cacb .Win );_gec .SetIfNotNil ("\u004d\u0061\u0063",_cacb .Mac );_gec .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cacb .Unix );_gec .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cacb .NewWindow );
return _gdg ;};

// ReplacePage replaces the original page to a new page.
func (_deacb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ebda :=pageNum -1;for _bgbd :=range _deacb ._fgcg {if _bgbd ==_ebda {_fbefd :=page .Duplicate ();_cgccf (_fbefd );_deacb ._fgcg [_bgbd ]=_fbefd ;};};};func (_dedc fontCommon )isCIDFont ()bool {if _dedc ._agbd ==""{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dedc );
};_dgdbe :=false ;switch _dedc ._agbd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dgdbe =true ;};_aefb .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_dgdbe ,_dedc );
return _dgdbe ;};func _aeffa ()string {_ebecf .Lock ();defer _ebecf .Unlock ();return _gfefa };

// ToPdfObject implements interface PdfModel.
func (_eage *PdfAnnotationHighlight )ToPdfObject ()_cg .PdfObject {_eage .PdfAnnotation .ToPdfObject ();_fbbba :=_eage ._bed ;_gfab :=_fbbba .PdfObject .(*_cg .PdfObjectDictionary );_eage .PdfAnnotationMarkup .appendToPdfDictionary (_gfab );_gfab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gfab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eage .QuadPoints );return _fbbba ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cgac *PdfFieldButton )ToPdfObject ()_cg .PdfObject {_cgac .PdfField .ToPdfObject ();_dgdeb :=_cgac ._gecee ;_bcgac :=_dgdeb .PdfObject .(*_cg .PdfObjectDictionary );_bcgac .Set ("\u0046\u0054",_cg .MakeName ("\u0042\u0074\u006e"));if _cgac .Opt !=nil {_bcgac .Set ("\u004f\u0070\u0074",_cgac .Opt );
};return _dgdeb ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cdbb :=NewPdfAnnotation ();_beed :=&PdfAnnotationFileAttachment {};_beed .PdfAnnotation =_cdbb ;_beed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdbb .SetContext (_beed );return _beed ;
};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cg .PdfObject ,error );};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fdda :=NewPdfAnnotation ();_ddc :=&PdfAnnotationLink {};_ddc .PdfAnnotation =_fdda ;_fdda .SetContext (_ddc );return _ddc ;};func (_cdg *PdfReader )newPdfActionHideFromDict (_addg *_cg .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_addg .Get ("\u0054"),H :_addg .Get ("\u0048")},nil ;
};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_gagaf *PdfColorspaceCalGray )ToPdfObject ()_cg .PdfObject {_dfcb :=&_cg .PdfObjectArray {};_dfcb .Append (_cg .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fgeea :=_cg .MakeDict ();if _gagaf .WhitePoint !=nil {_fgeea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cg .MakeArray (_cg .MakeFloat (_gagaf .WhitePoint [0]),_cg .MakeFloat (_gagaf .WhitePoint [1]),_cg .MakeFloat (_gagaf .WhitePoint [2])));
}else {_aefb .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gagaf .BlackPoint !=nil {_fgeea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cg .MakeArray (_cg .MakeFloat (_gagaf .BlackPoint [0]),_cg .MakeFloat (_gagaf .BlackPoint [1]),_cg .MakeFloat (_gagaf .BlackPoint [2])));
};_fgeea .Set ("\u0047\u0061\u006dm\u0061",_cg .MakeFloat (_gagaf .Gamma ));_dfcb .Append (_fgeea );if _gagaf ._geag !=nil {_gagaf ._geag .PdfObject =_dfcb ;return _gagaf ._geag ;};return _dfcb ;};func (_bgfb *Image )resampleLowBits (_dfebe []uint32 ){_dgdf :=_cc .BytesPerLine (int (_bgfb .Width ),int (_bgfb .BitsPerComponent ),_bgfb .ColorComponents );
_bffcd :=make ([]byte ,_bgfb .ColorComponents *_dgdf *int (_bgfb .Height ));_cbeg :=int (_bgfb .BitsPerComponent )*_bgfb .ColorComponents *int (_bgfb .Width );_dacgb :=uint8 (8);var (_dcbdfg ,_gdecd int ;_cgegf uint32 ;);for _gbfgc :=0;_gbfgc < int (_bgfb .Height );
_gbfgc ++{_gdecd =_gbfgc *_dgdf ;for _feedf :=0;_feedf < _cbeg ;_feedf ++{_cgegf =_dfebe [_dcbdfg ];_dacgb -=uint8 (_bgfb .BitsPerComponent );_bffcd [_gdecd ]|=byte (_cgegf )<<_dacgb ;if _dacgb ==0{_dacgb =8;_gdecd ++;};_dcbdfg ++;};};_bgfb .Data =_bffcd ;
};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bda .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bda .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bda .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_edge *PdfAppender ;_ggfebf *DSS ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_aacaa *PdfFieldButton )SetType (btype ButtonType ){_dfcaa :=uint32 (0);if _aacaa .Ff !=nil {_dfcaa =uint32 (*_aacaa .Ff );};switch btype {case ButtonTypePush :_dfcaa |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dfcaa |=FieldFlagRadio .Mask ();
};_aacaa .Ff =_cg .MakeInteger (int64 (_dfcaa ));};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_ebca PdfModel ;_bcafe _cg .PdfObject ;};

// GetAction returns the PDF action for the annotation link.
func (_bgeb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bgeb ._ac !=nil {return _bgeb ._ac ,nil ;};if _bgeb .A ==nil {return nil ,nil ;};if _bgeb ._aae ==nil {return nil ,nil ;};_fgbg ,_dcb :=_bgeb ._aae .loadAction (_bgeb .A );if _dcb !=nil {return nil ,_dcb ;
};_bgeb ._ac =_fgbg ;return _bgeb ._ac ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fdcd *PdfField )Flags ()FieldFlag {var _babe FieldFlag ;_efca ,_cgfb :=_fdcd .inherit (func (_dfbge *PdfField )bool {if _dfbge .Ff !=nil {_babe =FieldFlag (*_dfbge .Ff );return true ;};return false ;});if _cgfb !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_cgfb );
};if !_efca {_aefb .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _babe ;};

// ToPdfObject implements interface PdfModel.
func (_eaag *Permissions )ToPdfObject ()_cg .PdfObject {return _eaag ._cagcg };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bbc :=NewPdfAnnotation ();_cfd :=&PdfAnnotationUnderline {};_cfd .PdfAnnotation =_bbc ;_cfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbc .SetContext (_cfd );return _cfd ;};func (_aaebb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_aaebb .fontCommon };


// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fgdec :=&PdfPageResourcesColorspaces {};_fgdec .Names =[]string {};_fgdec .Colorspaces =map[string ]PdfColorspace {};_fgdec ._fgbda =&_cg .PdfIndirectObject {};return _fgdec ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cg .PdfObject ;Dest _cg .PdfObject ;H _cg .PdfObject ;PA _cg .PdfObject ;QuadPoints _cg .PdfObject ;BS _cg .PdfObject ;_ac *PdfAction ;_aae *PdfReader ;};

// GetContainingPdfObject implements interface PdfModel.
func (_adfcf *PdfSignature )GetContainingPdfObject ()_cg .PdfObject {return _adfcf ._aagbgc };func (_dbgb *PdfReader )newPdfAnnotationFileAttachmentFromDict (_fcad *_cg .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gge :=PdfAnnotationFileAttachment {};
_dbac ,_ddf :=_dbgb .newPdfAnnotationMarkupFromDict (_fcad );if _ddf !=nil {return nil ,_ddf ;};_gge .PdfAnnotationMarkup =_dbac ;_gge .FS =_fcad .Get ("\u0046\u0053");_gge .Name =_fcad .Get ("\u004e\u0061\u006d\u0065");return &_gge ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_fgcga FieldFlag )Has (fl FieldFlag )bool {return (_fgcga .Mask ()&fl .Mask ())> 0};

// GetDescent returns the Descent of the font `descriptor`.
func (_aabbb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cg .GetNumberAsFloat (_aabbb .Descent );};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cg .PdfObjectArray ;Domain *_cg .PdfObjectArray ;Function []PdfFunction ;Extend *_cg .PdfObjectArray ;};

// Add appends an outline item as a child of the current outline item.
func (_adcg *OutlineItem )Add (item *OutlineItem ){_adcg .Entries =append (_adcg .Entries ,item )};func (_eaaec *pdfFontType0 )baseFields ()*fontCommon {return &_eaaec .fontCommon };

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_afcdb *DSS )GetContainingPdfObject ()_cg .PdfObject {return _afcdb ._gbde };

// ColorToRGB converts a ICCBased color to an RGB color.
func (_aecc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aecc .Alternate ==nil {_aefb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _aecc .N ==1{_aefb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bbag :=NewPdfColorspaceDeviceGray ();return _bbag .ColorToRGB (color );}else if _aecc .N ==3{_aefb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _aecc .N ==4{_aefb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dfgf :=NewPdfColorspaceDeviceCMYK ();return _dfgf .ColorToRGB (color );}else {return nil ,_fff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_aefb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_aecc );
return _aecc .Alternate .ColorToRGB (color );};func (_ddbc *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _ddbc ._bfggb ==nil &&_ddbc .DescendantFont !=nil {return _ddbc .DescendantFont .FontDescriptor ();};return _ddbc ._bfggb ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_feae _cg .ParserMetadata ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ebfcf :=&PdfOutline {_affee :_cg .MakeIndirectObject (_cg .MakeDict ())};_ebfcf ._gegde =_ebfcf ;return _ebfcf ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_ebecf .Lock ();defer _ebecf .Unlock ();_fdgbd =creator };

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cg .PdfObject ;Sy _cg .PdfObject ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_defac *Image )ColorAt (x ,y int )(_ag .Color ,error ){_bfcfe :=_cc .BytesPerLine (int (_defac .Width ),int (_defac .BitsPerComponent ),_defac .ColorComponents );switch _defac .ColorComponents {case 1:return _cc .ColorAtGrayscale (x ,y ,int (_defac .BitsPerComponent ),_bfcfe ,_defac .Data ,_defac ._gegd );
case 3:return _cc .ColorAtNRGBA (x ,y ,int (_defac .Width ),_bfcfe ,int (_defac .BitsPerComponent ),_defac .Data ,_defac ._dbcf ,_defac ._gegd );case 4:return _cc .ColorAtCMYK (x ,y ,int (_defac .Width ),_defac .Data ,_defac ._gegd );};_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_defac .ColorComponents ,_defac .BitsPerComponent );
return nil ,_fff .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfActionGoTo )ToPdfObject ()_cg .PdfObject {_fcg .PdfAction .ToPdfObject ();_fdg :=_fcg ._ebd ;_cac :=_fdg .PdfObject .(*_cg .PdfObjectDictionary );_cac .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoTo )));_cac .SetIfNotNil ("\u0044",_fcg .D );
return _fdg ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cg .PdfObject ;Popup *PdfAnnotationPopup ;CA _cg .PdfObject ;RC _cg .PdfObject ;CreationDate _cg .PdfObject ;IRT _cg .PdfObject ;Subj _cg .PdfObject ;RT _cg .PdfObject ;IT _cg .PdfObject ;ExData _cg .PdfObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gfddd *_cg .PdfIndirectObject ;};func (_gbg *PdfReader )newPdfActionSoundFromDict (_da *_cg .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_da .Get ("\u0053\u006f\u0075n\u0064"),Volume :_da .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_da .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_da .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_da .Get ("\u004d\u0069\u0078")},nil ;
};func _gddff (_fbfae _cg .PdfObject ,_fgbdc *PdfReader )(*OutlineDest ,error ){_fdgd ,_cdgac :=_cg .GetArray (_fbfae );if !_cdgac {return nil ,_fff .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_bfbe :=_fdgd .Len ();if _bfbe < 2{return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_bfbe );
};_aceff :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gbddf :=_fdgd .Get (0);if _dfgc ,_ccdg :=_cg .GetIndirect (_gbddf );_ccdg {if _ ,_aagfe ,_eacag :=_fgbdc .PageFromIndirectObject (_dfgc );_eacag ==nil {_aceff .Page =int64 (_aagfe -1);}else {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dfgc );
};_aceff .PageObj =_dfgc ;}else if _bddb ,_ggaeb :=_cg .GetIntVal (_gbddf );_ggaeb {if _bddb >=0&&_bddb < len (_fgbdc .PageList ){_aceff .PageObj =_fgbdc .PageList [_bddb ].GetPageAsIndirectObject ();}else {_aefb .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_bddb );
};_aceff .Page =int64 (_bddb );}else {return nil ,_g .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gbddf );};_bcfdd ,_cdgac :=_cg .GetNameVal (_fdgd .Get (1));
if !_cdgac {_aefb .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fdgd .Get (1));
return _aceff ,nil ;};switch _bcfdd {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _bfbe > 2{_aceff .Y ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_fdgd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _bfbe > 2{_aceff .X ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_fdgd .Get (2)));
};case "\u0058\u0059\u005a":if _bfbe > 4{_aceff .X ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_fdgd .Get (2)));_aceff .Y ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_fdgd .Get (3)));_aceff .Zoom ,_ =_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_fdgd .Get (4)));
};default:_bcfdd ="\u0046\u0069\u0074";};_aceff .Mode =_bcfdd ;return _aceff ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ege :=NewPdfAnnotation ();_eded :=&PdfAnnotationScreen {};_eded .PdfAnnotation =_ege ;_ege .SetContext (_eded );return _eded ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_edcdf *PdfPageResources )SetFontByName (keyName _cg .PdfObjectName ,obj _cg .PdfObject )error {if _edcdf .Font ==nil {_edcdf .Font =_cg .MakeDict ();};_cefbf ,_aecda :=_cg .TraceToDirectObject (_edcdf .Font ).(*_cg .PdfObjectDictionary );if !_aecda {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cg .TraceToDirectObject (_edcdf .Font ));
return _cg .ErrTypeError ;};_cefbf .Set (keyName ,obj );return nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_feafg *PdfReader )Inspect ()(map[string ]int ,error ){return _feafg ._bafg .Inspect ()};func _caefe ()_bb .Time {_ebecf .Lock ();defer _ebecf .Unlock ();return _cgbeb };

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_ddgde *PdfSignature )GetDocMDPPermission ()(_bf .DocMDPPermission ,bool ){for _ ,_adcaa :=range _ddgde .Reference .Elements (){if _fafed ,_gccge :=_cg .GetDict (_adcaa );_gccge {if _adfed ,_dagdf :=_cg .GetNameVal (_fafed .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_dagdf &&_adfed =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _bfgb ,_ffebf :=_cg .GetDict (_fafed .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_ffebf {if P ,_gegca :=_cg .GetIntVal (_bfgb .Get ("\u0050"));_gegca {return _bf .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};func (_gafgc *PdfWriter )checkCrossReferenceStream ()bool {_fcggf :=_gafgc ._cdadd .Major > 1||(_gafgc ._cdadd .Major ==1&&_gafgc ._cdadd .Minor > 4);if _gafgc ._edeceg !=nil {_fcggf =*_gafgc ._edeceg ;};return _fcggf ;};func (_ecga *PdfReader )newPdfAnnotationStampFromDict (_cdeg *_cg .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_aead :=PdfAnnotationStamp {};
_ggdb ,_ffda :=_ecga .newPdfAnnotationMarkupFromDict (_cdeg );if _ffda !=nil {return nil ,_ffda ;};_aead .PdfAnnotationMarkup =_ggdb ;_aead .Name =_cdeg .Get ("\u004e\u0061\u006d\u0065");return &_aead ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbgaf *PdfAnnotationProjection )ToPdfObject ()_cg .PdfObject {_fbgaf .PdfAnnotation .ToPdfObject ();_fbee :=_fbgaf ._bed ;_bfe :=_fbee .PdfObject .(*_cg .PdfObjectDictionary );_fbgaf .PdfAnnotationMarkup .appendToPdfDictionary (_bfe );return _fbee ;
};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_dggb :=NewPdfAction ();_fe :=&PdfActionTrans {};_fe .PdfAction =_dggb ;_dggb .SetContext (_fe );return _fe ;};

// WriteString outputs the object as it is to be written to file.
func (_bgafe *PdfTransformParamsDocMDP )WriteString ()string {return _bgafe .ToPdfObject ().WriteString ();};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ccd *PdfAction )GetContext ()PdfModel {if _ccd ==nil {return nil ;};return _ccd ._dbf ;};

// Encoder returns the font's text encoder.
func (_ebbb pdfCIDFontType2 )Encoder ()_eba .TextEncoder {return _ebbb ._abfbf };

// HasFontByName checks whether a font is defined by the specified keyName.
func (_eeddd *PdfPageResources )HasFontByName (keyName _cg .PdfObjectName )bool {_ ,_cefba :=_eeddd .GetFontByName (keyName );return _cefba ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dbdf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_dgbef :=range pages {_dgbef =_dgbef .Duplicate ();_cgccf (_dgbef );_dbdf ._fgcg =append (_dbdf ._fgcg ,_dgbef );};};

// ToPdfObject convert PdfInfo to pdf object.
func (_dbfaf *PdfInfo )ToPdfObject ()_cg .PdfObject {_gcagc :=_cg .MakeDict ();_gcagc .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_dbfaf .Title );_gcagc .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_dbfaf .Author );_gcagc .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_dbfaf .Subject );
_gcagc .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_dbfaf .Keywords );_gcagc .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_dbfaf .Creator );_gcagc .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dbfaf .Producer );
_gcagc .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_dbfaf .Trapped );if _dbfaf .CreationDate !=nil {_gcagc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dbfaf .CreationDate .ToPdfObject ());};if _dbfaf .ModifiedDate !=nil {_gcagc .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_dbfaf .ModifiedDate .ToPdfObject ());
};for _ ,_aada :=range _dbfaf ._ffga .Keys (){_gcagc .SetIfNotNil (_aada ,_dbfaf ._ffga .Get (_aada ));};return _gcagc ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_baae *Image )ToGoImage ()(_bdg .Image ,error ){_aefb .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cabd ,_edbg :=_cc .NewImage (int (_baae .Width ),int (_baae .Height ),int (_baae .BitsPerComponent ),_baae .ColorComponents ,_baae .Data ,_baae ._dbcf ,_baae ._gegd );
if _edbg !=nil {return nil ,_edbg ;};return _cabd ,nil ;};func (_aedga *LTV )getCRLs (_gcbef []*_a .Certificate )([][]byte ,error ){_cafc :=make ([][]byte ,0,len (_gcbef ));for _ ,_aeafd :=range _gcbef {for _ ,_fccfa :=range _aeafd .CRLDistributionPoints {if _aedga .CertClient .IsCA (_aeafd ){continue ;
};_gfada ,_badad :=_aedga .CRLClient .MakeRequest (_fccfa ,_aeafd );if _badad !=nil {_aefb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_badad );
continue ;};_cafc =append (_cafc ,_gfada );};};return _cafc ,nil ;};func (_dfac *PdfReader )newPdfAnnotationRichMediaFromDict (_geb *_cg .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bgbc :=&PdfAnnotationRichMedia {};_bgbc .RichMediaSettings =_geb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_bgbc .RichMediaContent =_geb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bgbc ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cg .PdfObject ;Open _cg .PdfObject ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cg .PdfObject ;T3DV _cg .PdfObject ;T3DA _cg .PdfObject ;T3DI _cg .PdfObject ;T3DB _cg .PdfObject ;};func (_acbca *pdfCIDFontType2 )baseFields ()*fontCommon {return &_acbca .fontCommon };func _eafeb (_cbbe _cg .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ecfbg :=NewPdfColorspaceSpecialIndexed ();
if _fbgg ,_egdd :=_cbbe .(*_cg .PdfIndirectObject );_egdd {_ecfbg ._fgda =_fbgg ;};_cbbe =_cg .TraceToDirectObject (_cbbe );_acbc ,_dbeec :=_cbbe .(*_cg .PdfObjectArray );if !_dbeec {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _acbc .Len ()!=4{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_cbbe =_acbc .Get (0);
_fbde ,_dbeec :=_cbbe .(*_cg .PdfObjectName );if !_dbeec {return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fbde !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cbbe =_acbc .Get (1);_baf ,_bfcc :=DetermineColorspaceNameFromPdfObject (_cbbe );if _bfcc !=nil {return nil ,_bfcc ;};if _baf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_baf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aefb .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_baf );
return nil ,_gdfd ;};_agfbc ,_bfcc :=NewPdfColorspaceFromPdfObject (_cbbe );if _bfcc !=nil {return nil ,_bfcc ;};_ecfbg .Base =_agfbc ;_cbbe =_acbc .Get (2);_gebd ,_bfcc :=_cg .GetNumberAsInt64 (_cbbe );if _bfcc !=nil {return nil ,_bfcc ;};if _gebd > 255{return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_ecfbg .HiVal =int (_gebd );_cbbe =_acbc .Get (3);_ecfbg .Lookup =_cbbe ;_cbbe =_cg .TraceToDirectObject (_cbbe );var _cgca []byte ;if _gccc ,_aebd :=_cbbe .(*_cg .PdfObjectString );_aebd {_cgca =_gccc .Bytes ();_aefb .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_cgca );
}else if _ddagg ,_gaabg :=_cbbe .(*_cg .PdfObjectStream );_gaabg {_aefb .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cbbe .String ());_aefb .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_ddagg .Stream ),_ddagg .Stream );
_fdde ,_eagdg :=_cg .DecodeStream (_ddagg );if _eagdg !=nil {return nil ,_eagdg ;};_aefb .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_fdde ),_fdde );_cgca =_fdde ;}else {_aefb .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cbbe );
return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_cgca )< _ecfbg .Base .GetNumComponents ()*(_ecfbg .HiVal +1){_aefb .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_aefb .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_cgca ),_ecfbg .Base .GetNumComponents (),_ecfbg .HiVal );
}else {_cgca =_cgca [:_ecfbg .Base .GetNumComponents ()*(_ecfbg .HiVal +1)];};_ecfbg ._fbgafg =_cgca ;return _ecfbg ,nil ;};func (_ffba *PdfReader )newPdfAnnotationUnderlineFromDict (_cede *_cg .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_edbd :=PdfAnnotationUnderline {};
_cgeg ,_cfe :=_ffba .newPdfAnnotationMarkupFromDict (_cede );if _cfe !=nil {return nil ,_cfe ;};_edbd .PdfAnnotationMarkup =_cgeg ;_edbd .QuadPoints =_cede .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_edbd ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_geff *OutlineItem )Insert (index uint ,item *OutlineItem ){_gceab :=uint (len (_geff .Entries ));if index > _gceab {index =_gceab ;};_geff .Entries =append (_geff .Entries [:index ],append ([]*OutlineItem {item },_geff .Entries [index :]...)...);
};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_cab .PSProgram ;_cbabb *_cab .PSExecutor ;_aadfb []byte ;_eabe *_cg .PdfObjectStream ;};

// SetFillImage attach a model.Image to push button.
func (_bgfgb *PdfFieldButton )SetFillImage (image *Image ){if _bgfgb .IsPush (){_bgfgb ._bcebf =image ;};};func (_dbed *PdfReader )newPdfAnnotationCaretFromDict (_eabf *_cg .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_adfg :=PdfAnnotationCaret {};
_fea ,_dcbc :=_dbed .newPdfAnnotationMarkupFromDict (_eabf );if _dcbc !=nil {return nil ,_dcbc ;};_adfg .PdfAnnotationMarkup =_fea ;_adfg .RD =_eabf .Get ("\u0052\u0044");_adfg .Sy =_eabf .Get ("\u0053\u0079");return &_adfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abfg *PdfAnnotationRichMedia )ToPdfObject ()_cg .PdfObject {_abfg .PdfAnnotation .ToPdfObject ();_egb :=_abfg ._bed ;_agca :=_egb .PdfObject .(*_cg .PdfObjectDictionary );_agca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_agca .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_abfg .RichMediaSettings );_agca .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_abfg .RichMediaContent );
return _egb ;};

// SetReason sets the `Reason` field of the signature.
func (_fdgec *PdfSignature )SetReason (reason string ){_fdgec .Reason =_cg .MakeString (reason )};func (_cgef *PdfAcroForm )fillImageWithAppearance (_dbced FieldImageProvider ,_bdff FieldAppearanceGenerator )error {if _cgef ==nil {return nil ;};_ggead ,_dbgde :=_dbced .FieldImageValues ();
if _dbgde !=nil {return _dbgde ;};for _ ,_eaaaf :=range _cgef .AllFields (){_afdcb :=_eaaaf .PartialName ();_bffa ,_gdeg :=_ggead [_afdcb ];if !_gdeg {if _gdef ,_dgcc :=_eaaaf .FullName ();_dgcc ==nil {_bffa ,_gdeg =_ggead [_gdef ];};};if !_gdeg {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_afdcb );
continue ;};switch _afbeb :=_eaaaf .GetContext ().(type ){case *PdfFieldButton :if _afbeb .IsPush (){_afbeb .SetFillImage (_bffa );};};if _bdff ==nil {continue ;};for _ ,_fcbd :=range _eaaaf .Annotations {_cfdf ,_dggba :=_bdff .GenerateAppearanceDict (_cgef ,_eaaaf ,_fcbd );
if _dggba !=nil {return _dggba ;};_fcbd .AP =_cfdf ;_fcbd .ToPdfObject ();};};return nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cbeea ,_edffe :=_aa .ParsePdfTime (dateStr );if _edffe !=nil {return PdfDate {},_edffe ;};return NewPdfDateFromTime (_cbeea );};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cg .PdfObjectDictionary )(*PdfPageResources ,error ){_bdgdd :=NewPdfPageResources ();if _gbaed :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gbaed !=nil {_bdgdd .ExtGState =_gbaed ;};if _fbaa :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fbaa !=nil &&!_cg .IsNullObject (_fbaa ){_bdgdd .ColorSpace =_fbaa ;};if _cddeg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cddeg !=nil {_bdgdd .Pattern =_cddeg ;};if _gfagf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_gfagf !=nil {_bdgdd .Shading =_gfagf ;
};if _cegga :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cegga !=nil {_bdgdd .XObject =_cegga ;};if _bgggb :=_cg .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bgggb !=nil {_bdgdd .Font =_bgggb ;};if _gfdca :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_gfdca !=nil {_bdgdd .ProcSet =_gfdca ;};if _acbedf :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_acbedf !=nil {_bdgdd .Properties =_acbedf ;};return _bdgdd ,nil ;};func _eecdg (_babfb _cg .PdfObject )(*_cg .PdfObjectDictionary ,*fontCommon ,error ){_dccf :=&fontCommon {};
if _cada ,_dbfc :=_babfb .(*_cg .PdfIndirectObject );_dbfc {_dccf ._gafcg =_cada .ObjectNumber ;};_gaaeg ,_dccd :=_cg .GetDict (_babfb );if !_dccd {_aefb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_babfb );
return nil ,nil ,ErrFontNotSupported ;};_gbf ,_dccd :=_cg .GetNameVal (_gaaeg .Get ("\u0054\u0079\u0070\u0065"));if !_dccd {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gbf !="\u0046\u006f\u006e\u0074"{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gbf ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cg .ErrTypeError ;};_cgebf ,_dccd :=_cg .GetNameVal (_gaaeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dccd {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dccf ._agbd =_cgebf ;_cadg ,_dccd :=_cg .GetNameVal (_gaaeg .Get ("\u004e\u0061\u006d\u0065"));if _dccd {_dccf ._dfae =_cadg ;};_fcbgc :=_gaaeg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fcbgc !=nil {_dccf ._gdaff =_cg .TraceToDirectObject (_fcbgc );
_gggee ,_cgbd :=_dfbe (_dccf ._gdaff ,_dccf );if _cgbd !=nil {return _gaaeg ,_dccf ,_cgbd ;};_dccf ._dcded =_gggee ;}else if _cgebf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_cgebf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dcbf ,_aafe :=_cb .NewCIDSystemInfo (_gaaeg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _aafe !=nil {return _gaaeg ,_dccf ,_aafe ;};_dced :=_g .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dcbf .Registry ,_dcbf .Ordering );if _cb .IsPredefinedCMap (_dced ){_dccf ._dcded ,_aafe =_cb .LoadPredefinedCMap (_dced );
if _aafe !=nil {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dced ,_aafe );
};};};_gdgebg :=_gaaeg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gdgebg !=nil {_ggfed ,_gdag :=_gage (_gdgebg );if _gdag !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdag );
return _gaaeg ,_dccf ,_gdag ;};_dccf ._bfggb =_ggfed ;};if _cgebf !="\u0054\u0079\u0070e\u0033"{_ffgda ,_aggf :=_cg .GetNameVal (_gaaeg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_aggf {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _gaaeg ,_dccf ,ErrRequiredAttributeMissing ;};_dccf ._fbdedg =_ffgda ;};return _gaaeg ,_dccf ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bbegb *PdfPage )GetContentStreamObjs ()[]_cg .PdfObject {if _bbegb .Contents ==nil {return nil ;};_gabfe :=_cg .TraceToDirectObject (_bbegb .Contents );if _febfa ,_eadb :=_gabfe .(*_cg .PdfObjectArray );_eadb {return _febfa .Elements ();};return []_cg .PdfObject {_gabfe };
};func (_adgb *PdfField )inherit (_dcbcb func (*PdfField )bool )(bool ,error ){_fdbaa :=map[*PdfField ]bool {};_cbdbg :=false ;_ecdg :=_adgb ;for _ecdg !=nil {if _ ,_eccb :=_fdbaa [_ecdg ];_eccb {return false ,_fff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ggacb :=_dcbcb (_ecdg );if _ggacb {_cbdbg =true ;break ;};_fdbaa [_ecdg ]=true ;_ecdg =_ecdg .Parent ;};return _cbdbg ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_fgbdd *PdfPattern )SetContext (ctx PdfModel ){_fgbdd ._ebca =ctx };

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_bgebg *PdfSignatureReference )ToPdfObject ()_cg .PdfObject {_gabdg :=_cg .MakeDict ();_gabdg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bgebg .Type );_gabdg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_bgebg .TransformMethod );
_gabdg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_bgebg .TransformParams );_gabdg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_bgebg .Data );_gabdg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_bgebg .DigestMethod );
return _gabdg ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dcc :=NewPdfAnnotation ();_aaba :=&PdfAnnotationProjection {};_aaba .PdfAnnotation =_dcc ;_aaba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcc .SetContext (_aaba );return _aaba ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_adba *PdfPage )ToPdfObject ()_cg .PdfObject {_eabed :=_adba ._aegd ;_adba .GetPageDict ();return _eabed ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cg .PdfObject ;RichMediaContent _cg .PdfObject ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bcac :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bcac ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_bgadc *OutlineItem )ToPdfObject ()_cg .PdfObject {_ecfec ,_ :=_bgadc .ToPdfOutlineItem ();return _ecfec .ToPdfObject ();};func (_gdf *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func (_efegdg *PdfWriter )optimize ()error {if _efegdg ._fabb ==nil {return nil ;
};var _cfdbe error ;_efegdg ._gegb ,_cfdbe =_efegdg ._fabb .Optimize (_efegdg ._gegb );if _cfdbe !=nil {return _cfdbe ;};_bbdd :=make (map[_cg .PdfObject ]struct{},len (_efegdg ._gegb ));for _ ,_beade :=range _efegdg ._gegb {_bbdd [_beade ]=struct{}{};
};_efegdg ._dcage =_bbdd ;return nil ;};func (_dggd *PdfReader )newPdfActionRenditionFromDict (_gecc *_cg .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gecc .Get ("\u0052"),AN :_gecc .Get ("\u0041\u004e"),OP :_gecc .Get ("\u004f\u0050"),JS :_gecc .Get ("\u004a\u0053")},nil ;
};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_accbf *LTV )EnableChain (chain []*_a .Certificate )error {return _accbf .enable (nil ,chain ,"")};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_eefbb *PdfPageResources )GetXObjectByName (keyName _cg .PdfObjectName )(*_cg .PdfObjectStream ,XObjectType ){if _eefbb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_aedc ,_cadgd :=_cg .TraceToDirectObject (_eefbb .XObject ).(*_cg .PdfObjectDictionary );
if !_cadgd {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cg .TraceToDirectObject (_eefbb .XObject ));
return nil ,XObjectTypeUndefined ;};if _edgec :=_aedc .Get (keyName );_edgec !=nil {_ddgf ,_ggdfg :=_cg .GetStream (_edgec );if !_ggdfg {_aefb .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_edgec );
return nil ,XObjectTypeUndefined ;};_adec :=_ddgf .PdfObjectDictionary ;_cbbce ,_ggdfg :=_cg .TraceToDirectObject (_adec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cg .PdfObjectName );if !_ggdfg {_aefb .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_adec .String ());
return nil ,XObjectTypeUndefined ;};if *_cbbce =="\u0049\u006d\u0061g\u0065"{return _ddgf ,XObjectTypeImage ;}else if *_cbbce =="\u0046\u006f\u0072\u006d"{return _ddgf ,XObjectTypeForm ;}else if *_cbbce =="\u0050\u0053"{return _ddgf ,XObjectTypePS ;}else {_aefb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_cbbce );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// GetPageDict converts the Page to a PDF object dictionary.
func (_fbbegb *PdfPage )GetPageDict ()*_cg .PdfObjectDictionary {_afeef :=_fbbegb ._edcag ;_afeef .Clear ();_afeef .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050\u0061\u0067\u0065"));_afeef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbbegb .Parent );
if _fbbegb .LastModified !=nil {_afeef .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fbbegb .LastModified .ToPdfObject ());};if _fbbegb .Resources !=nil {_afeef .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fbbegb .Resources .ToPdfObject ());
};if _fbbegb .CropBox !=nil {_afeef .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_fbbegb .CropBox .ToPdfObject ());};if _fbbegb .MediaBox !=nil {_afeef .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_fbbegb .MediaBox .ToPdfObject ());};if _fbbegb .BleedBox !=nil {_afeef .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_fbbegb .BleedBox .ToPdfObject ());
};if _fbbegb .TrimBox !=nil {_afeef .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_fbbegb .TrimBox .ToPdfObject ());};if _fbbegb .ArtBox !=nil {_afeef .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_fbbegb .ArtBox .ToPdfObject ());};_afeef .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_fbbegb .BoxColorInfo );
_afeef .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fbbegb .Contents );if _fbbegb .Rotate !=nil {_afeef .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cg .MakeInteger (*_fbbegb .Rotate ));};_afeef .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fbbegb .Group );
_afeef .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_fbbegb .Thumb );_afeef .SetIfNotNil ("\u0042",_fbbegb .B );_afeef .SetIfNotNil ("\u0044\u0075\u0072",_fbbegb .Dur );_afeef .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fbbegb .Trans );_afeef .SetIfNotNil ("\u0041\u0041",_fbbegb .AA );
_afeef .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fbbegb .Metadata );_afeef .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fbbegb .PieceInfo );_afeef .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fbbegb .StructParents );
_afeef .SetIfNotNil ("\u0049\u0044",_fbbegb .ID );_afeef .SetIfNotNil ("\u0050\u005a",_fbbegb .PZ );_afeef .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_fbbegb .SeparationInfo );_afeef .SetIfNotNil ("\u0054\u0061\u0062\u0073",_fbbegb .Tabs );
_afeef .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_fbbegb .TemplateInstantiated );_afeef .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_fbbegb .PresSteps );_afeef .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_fbbegb .UserUnit );
_afeef .SetIfNotNil ("\u0056\u0050",_fbbegb .VP );if _fbbegb ._adga !=nil {_agaaf :=_cg .MakeArray ();for _ ,_gdcac :=range _fbbegb ._adga {if _badfe :=_gdcac .GetContext ();_badfe !=nil {_agaaf .Append (_badfe .ToPdfObject ());}else {_agaaf .Append (_gdcac .ToPdfObject ());
};};if _agaaf .Len ()> 0{_afeef .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_agaaf );};}else if _fbbegb .Annots !=nil {_afeef .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_fbbegb .Annots );};return _afeef ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_fbcd *PdfFont )CharcodesToUnicode (charcodes []_eba .CharCode )[]rune {_fada ,_ ,_ :=_fbcd .CharcodesToUnicodeWithStats (charcodes );return _fada ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gccb *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aefb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gfbd :=[]float64 {0.0};if _gccb .C0 !=nil {_gfbd =_gccb .C0 ;};_debge :=[]float64 {1.0};if _gccb .C1 !=nil {_debge =_gccb .C1 ;};var _fgae []float64 ;for _gcdfg :=0;_gcdfg < len (_gfbd );_gcdfg ++{_adeeg :=_gfbd [_gcdfg ]+_be .Pow (x [0],_gccb .N )*(_debge [_gcdfg ]-_gfbd [_gcdfg ]);
_fgae =append (_fgae ,_adeeg );};return _fgae ,nil ;};func (_cgdc *PdfReader )newPdfAnnotationLinkFromDict (_efe *_cg .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bfgc :=PdfAnnotationLink {};_bfgc .A =_efe .Get ("\u0041");_bfgc .Dest =_efe .Get ("\u0044\u0065\u0073\u0074");
_bfgc .H =_efe .Get ("\u0048");_bfgc .PA =_efe .Get ("\u0050\u0041");_bfgc .QuadPoints =_efe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bfgc .BS =_efe .Get ("\u0042\u0053");return &_bfgc ,nil ;};func (_abcee *pdfFontSimple )baseFields ()*fontCommon {return &_abcee .fontCommon };


// GetPdfInfo returns the PDF info dictionary.
func (_ffcgd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_geae ,_bbefad :=_ffcgd .GetTrailer ();if _bbefad !=nil {return nil ,_bbefad ;};var _aaafb *_cg .PdfObjectDictionary ;_ffacg :=_geae .Get ("\u0049\u006e\u0066\u006f");switch _cgcdd :=_ffacg .(type ){case *_cg .PdfObjectReference :_dfff :=_cgcdd ;
_ffacg ,_bbefad =_ffcgd .GetIndirectObjectByNumber (int (_dfff .ObjectNumber ));_ffacg =_cg .TraceToDirectObject (_ffacg );if _bbefad !=nil {return nil ,_bbefad ;};_aaafb ,_ =_ffacg .(*_cg .PdfObjectDictionary );case *_cg .PdfObjectDictionary :_aaafb =_cgcdd ;
};if _aaafb ==nil {return nil ,_fff .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_acefb ,_bbefad :=NewPdfInfoFromObject (_aaafb );if _bbefad !=nil {return nil ,_bbefad ;
};return _acefb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_deg *PdfActionSubmitForm )ToPdfObject ()_cg .PdfObject {_deg .PdfAction .ToPdfObject ();_afg :=_deg ._ebd ;_fa :=_afg .PdfObject .(*_cg .PdfObjectDictionary );_fa .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeSubmitForm )));if _deg .F !=nil {_fa .Set ("\u0046",_deg .F .ToPdfObject ());
};_fa .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_deg .Fields );_fa .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_deg .Flags );return _afg ;};

// ToInteger convert to an integer format.
func (_dfab *PdfColorDeviceGray )ToInteger (bits int )uint32 {_dfea :=_be .Pow (2,float64 (bits ))-1;return uint32 (_dfea *_dfab .Val ());};

// IsCID returns true if the underlying font is CID.
func (_dgfd *PdfFont )IsCID ()bool {return _dgfd .baseFields ().isCIDFont ()};

// Encoder returns the font's text encoder.
func (_gfbc pdfFontType0 )Encoder ()_eba .TextEncoder {return _gfbc ._befcb };

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_edfg *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ddbdfg []_eba .TextEncoder ;var _fgcfc _eba .CMapEncoder ;if _eagce :=_edfg .baseFields ()._dcded ;_eagce !=nil {_fgcfc =_eba .NewCMapEncoder ("",nil ,_eagce );};_agabb :=_edfg .Encoder ();
if _agabb !=nil {switch _abfd :=_agabb .(type ){case _eba .SimpleEncoder :_feedb :=_abfd .BaseName ();if _ ,_ggccd :=_daff [_feedb ];_ggccd {_ddbdfg =append (_ddbdfg ,_agabb );};};};if len (_ddbdfg )==0{if _edfg .baseFields ()._dcded !=nil {_ddbdfg =append (_ddbdfg ,_fgcfc );
};if _agabb !=nil {_ddbdfg =append (_ddbdfg ,_agabb );};};var _cdcf _gbe .Buffer ;var _aaafc int ;for _ ,_fcbe :=range data {var _gcce bool ;for _ ,_cedd :=range _ddbdfg {if _agfa :=_cedd .Encode (string (_fcbe ));len (_agfa )> 0{_cdcf .Write (_agfa );
_gcce =true ;break ;};};if !_gcce {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_fcbe );
_aaafc ++;};};if _aaafc !=0{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_aaafc ,_edfg ,_ddbdfg );
};return _cdcf .Bytes (),_aaafc ;};func (_gcfg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject implements interface PdfModel.
func (_cgdce *PdfAnnotationSquiggly )ToPdfObject ()_cg .PdfObject {_cgdce .PdfAnnotation .ToPdfObject ();_baa :=_cgdce ._bed ;_efgd :=_baa .PdfObject .(*_cg .PdfObjectDictionary );_cgdce .PdfAnnotationMarkup .appendToPdfDictionary (_efgd );_efgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_efgd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgdce .QuadPoints );return _baa ;};

// ImageToRGB convert an indexed image to RGB.
func (_effef *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_effef .Base .GetNumComponents ();if N < 1{return Image {},_g .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_eaaf :=_cc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._dbcf ,img ._gegd );_cgagd :=_ggc .NewReader (img .getBase ());_egefd :=_ggc .NewWriter (_eaaf );var (_efc uint32 ;_daec int ;_bdgee error ;);for {_efc ,_bdgee =_cgagd .ReadSample ();
if _bdgee ==_ef .EOF {break ;}else if _bdgee !=nil {return img ,_bdgee ;};_daec =int (_efc );_aefb .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_daec ,N ,len (_effef ._fbgafg ));
if (_daec +1)*N > len (_effef ._fbgafg ){_daec =len (_effef ._fbgafg )/N -1;_aefb .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_daec );if _daec < 0{_aefb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ccbf :=_daec *N ;_ccbf < (_daec +1)*N ;_ccbf ++{if _bdgee =_egefd .WriteSample (uint32 (_effef ._fbgafg [_ccbf ]));_bdgee !=nil {return img ,_bdgee ;};};};return _effef .Base .ImageToRGB (_fddbb (&_eaaf ));};

// SetImage updates XObject Image with new image data.
func (_faff *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_faff .Filter .UpdateParams (img .GetParamsDict ());_dcgbd ,_gbefg :=_faff .Filter .EncodeBytes (img .Data );if _gbefg !=nil {return _gbefg ;};_faff .Stream =_dcgbd ;_aadab :=img .Width ;
_faff .Width =&_aadab ;_faddg :=img .Height ;_faff .Height =&_faddg ;_ffegb :=img .BitsPerComponent ;_faff .BitsPerComponent =&_ffegb ;if cs ==nil {if img .ColorComponents ==1{_faff .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_faff .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_faff .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_faff .ColorSpace =cs ;};return nil ;
};

// ToPdfObject returns a PDF object representation of the outline.
func (_bbeaf *Outline )ToPdfObject ()_cg .PdfObject {return _bbeaf .ToPdfOutline ().ToPdfObject ()};

// GetContainingPdfObject implements interface PdfModel.
func (_dfcedd *PdfFilespec )GetContainingPdfObject ()_cg .PdfObject {return _dfcedd ._gdgcb };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cg .PdfObjectStream ;Data []byte ;_agbc *_cg .PdfIndirectObject ;_fgdfa *_cg .PdfObjectStream ;};func (_afda *PdfReader )flattenFieldsWithOpts (_cgbb bool ,_acad FieldAppearanceGenerator ,_gdbf *FieldFlattenOpts )error {if _gdbf ==nil {_gdbf =&FieldFlattenOpts {};
};var _ccba bool ;_eeab :=map[*PdfAnnotation ]bool {};{var _egbac []*PdfField ;_gaabc :=_afda .AcroForm ;if _gaabc !=nil {if _gdbf .FilterFunc !=nil {_egbac =_gaabc .filteredFields (_gdbf .FilterFunc ,true );_ccba =_gaabc .Fields !=nil &&len (*_gaabc .Fields )> 0;
}else {_egbac =_gaabc .AllFields ();};};for _ ,_fcge :=range _egbac {for _ ,_fgeae :=range _fcge .Annotations {_eeab [_fgeae .PdfAnnotation ]=_fcge .V !=nil ;if _acad !=nil {_adbe ,_degc :=_acad .GenerateAppearanceDict (_gaabc ,_fcge ,_fgeae );if _degc !=nil {return _degc ;
};_fgeae .AP =_adbe ;};};};};if _cgbb {for _ ,_daaf :=range _afda .PageList {_aacg ,_gbccb :=_daaf .GetAnnotations ();if _gbccb !=nil {return _gbccb ;};for _ ,_bgdaf :=range _aacg {_eeab [_bgdaf ]=true ;};};};for _ ,_dgbab :=range _afda .PageList {var _dbef []*PdfAnnotation ;
if _acad !=nil {if _cfg :=_acad .WrapContentStream (_dgbab );_cfg !=nil {return _cfg ;};};_ecgd ,_dafdg :=_dgbab .GetAnnotations ();if _dafdg !=nil {return _dafdg ;};for _ ,_ccgeb :=range _ecgd {_aaga ,_ggdefe :=_eeab [_ccgeb ];if !_ggdefe &&_gdbf .AnnotFilterFunc !=nil {if _ ,_cfdd :=_ccgeb .GetContext ().(*PdfAnnotationWidget );
!_cfdd {_ggdefe =_gdbf .AnnotFilterFunc (_ccgeb );};};if !_ggdefe {_dbef =append (_dbef ,_ccgeb );continue ;};switch _ccgeb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_bfca ,_bfcgg ,_abea :=_efab (_ccgeb );if _abea !=nil {if !_aaga {_aefb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_abea );
continue ;};if _bfca ==nil {continue ;};_dcggd :=_dgbab .Resources .GenerateXObjectName ();_dgbab .Resources .SetXObjectFormByName (_dcggd ,_bfca );_ggee :=_be .Min (_bfcgg .Llx ,_bfcgg .Urx );_bcdd :=_be .Min (_bfcgg .Lly ,_bfcgg .Ury );var _bfagc []string ;
_bfagc =append (_bfagc ,"\u0071");_bfagc =append (_bfagc ,_g .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ggee ,_bcdd ));
_bfagc =append (_bfagc ,_g .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_dcggd .String ()));_bfagc =append (_bfagc ,"\u0051");_dada :=_gb .Join (_bfagc ,"\u000a");_abea =_dgbab .AppendContentStream (_dada );if _abea !=nil {return _abea ;};if _bfca .Resources !=nil {_ffed ,_fbfe :=_cg .GetDict (_bfca .Resources .Font );
if _fbfe {for _ ,_gecaf :=range _ffed .Keys (){if !_dgbab .Resources .HasFontByName (_gecaf ){_dgbab .Resources .SetFontByName (_gecaf ,_ffed .Get (_gecaf ));};};};};};if len (_dbef )> 0{_dgbab ._adga =_dbef ;}else {_dgbab ._adga =[]*PdfAnnotation {};};
};if !_ccba {_afda .AcroForm =nil ;};return nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;IC _cg .PdfObject ;RO _cg .PdfObject ;OverlayText _cg .PdfObject ;Repeat _cg .PdfObject ;DA _cg .PdfObject ;Q _cg .PdfObject ;};

// StdFontName represents name of a standard font.
type StdFontName =_egg .StdFontName ;

// GetContainingPdfObject implements model.PdfModel interface.
func (_ggccg *PdfOutputIntent )GetContainingPdfObject ()_cg .PdfObject {return _ggccg ._egbba };func (_abdf *PdfReader )newPdfAnnotation3DFromDict (_effc *_cg .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ccga :=PdfAnnotation3D {};_ccga .T3DD =_effc .Get ("\u0033\u0044\u0044");
_ccga .T3DV =_effc .Get ("\u0033\u0044\u0056");_ccga .T3DA =_effc .Get ("\u0033\u0044\u0041");_ccga .T3DI =_effc .Get ("\u0033\u0044\u0049");_ccga .T3DB =_effc .Get ("\u0033\u0044\u0042");return &_ccga ,nil ;};func _aegac (_ecaf *[]*PdfField ,_cbaba FieldFilterFunc ,_faag bool )[]*PdfField {if _ecaf ==nil {return nil ;
};_aadg :=*_ecaf ;if len (*_ecaf )==0{return nil ;};_bdcgeg :=_aadg [:0];if _cbaba ==nil {_cbaba =func (*PdfField )bool {return true };};var _adcdb []*PdfField ;for _ ,_aeddf :=range _aadg {_abbca :=_cbaba (_aeddf );if _abbca {_adcdb =append (_adcdb ,_aeddf );
if len (_aeddf .Kids )> 0{_adcdb =append (_adcdb ,_aegac (&_aeddf .Kids ,_cbaba ,_faag )...);};};if !_faag ||!_abbca ||len (_aeddf .Kids )> 0{_bdcgeg =append (_bdcgeg ,_aeddf );};};*_ecaf =_bdcgeg ;return _adcdb ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ebecf .Lock ();defer _ebecf .Unlock ();_aafde =subject };

// GetNumComponents returns the number of color components (3 for RGB).
func (_ffae *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func (_gegcbg *PdfReader )loadPerms ()(*Permissions ,error ){if _dfbaf :=_gegcbg ._fbggd .Get ("\u0050\u0065\u0072m\u0073");_dfbaf !=nil {if _gafgg ,_facd :=_cg .GetDict (_dfbaf );_facd {_eddg :=_gafgg .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _eddg ==nil {return nil ,nil ;};if _edfa ,_ddgga :=_cg .GetIndirect (_eddg );_ddgga {_ebdcb ,_gfdcg :=_gegcbg .newPdfSignatureFromIndirect (_edfa );if _gfdcg !=nil {return nil ,_gfdcg ;};return NewPermissions (_ebdcb ),nil ;};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};func (_gcc *PdfReader )newPdfActionGoTo3DViewFromDict (_ccac *_cg .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_ccac .Get ("\u0054\u0041"),V :_ccac .Get ("\u0056")},nil ;
};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gbbd *PdfFieldText )ToPdfObject ()_cg .PdfObject {_gbbd .PdfField .ToPdfObject ();_fcddc :=_gbbd ._gecee ;_cddbe :=_fcddc .PdfObject .(*_cg .PdfObjectDictionary );_cddbe .Set ("\u0046\u0054",_cg .MakeName ("\u0054\u0078"));if _gbbd .DA !=nil {_cddbe .Set ("\u0044\u0041",_gbbd .DA );
};if _gbbd .Q !=nil {_cddbe .Set ("\u0051",_gbbd .Q );};if _gbbd .DS !=nil {_cddbe .Set ("\u0044\u0053",_gbbd .DS );};if _gbbd .RV !=nil {_cddbe .Set ("\u0052\u0056",_gbbd .RV );};if _gbbd .MaxLen !=nil {_cddbe .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gbbd .MaxLen );
};return _fcddc ;};

// ToPdfObject implements interface PdfModel.
func (_cdegf *PdfAnnotation3D )ToPdfObject ()_cg .PdfObject {_cdegf .PdfAnnotation .ToPdfObject ();_edda :=_cdegf ._bed ;_fddaa :=_edda .PdfObject .(*_cg .PdfObjectDictionary );_fddaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0033\u0044"));
_fddaa .SetIfNotNil ("\u0033\u0044\u0044",_cdegf .T3DD );_fddaa .SetIfNotNil ("\u0033\u0044\u0056",_cdegf .T3DV );_fddaa .SetIfNotNil ("\u0033\u0044\u0041",_cdegf .T3DA );_fddaa .SetIfNotNil ("\u0033\u0044\u0049",_cdegf .T3DI );_fddaa .SetIfNotNil ("\u0033\u0044\u0042",_cdegf .T3DB );
return _edda ;};

// ToPdfObject implements interface PdfModel.
func (_dcbg *PdfAnnotationWatermark )ToPdfObject ()_cg .PdfObject {_dcbg .PdfAnnotation .ToPdfObject ();_cafa :=_dcbg ._bed ;_ddbe :=_cafa .PdfObject .(*_cg .PdfObjectDictionary );_ddbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_ddbe .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dcbg .FixedPrint );return _cafa ;};func (_gbege fontCommon )fontFlags ()int {if _gbege ._bfggb ==nil {return 0;};return _gbege ._bfggb ._debc ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _bb .Time ){_ebecf .Lock ();defer _ebecf .Unlock ();_accfeg =creationDate ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gccg :=NewPdfAnnotation ();_effe :=&PdfAnnotationRedact {};_effe .PdfAnnotation =_gccg ;_effe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gccg .SetContext (_effe );return _effe ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gefd *modelManager )GetPrimitiveFromModel (model PdfModel )_cg .PdfObject {_gbdc ,_badfc :=_gefd ._acbfc [model ];if !_badfc {return nil ;};return _gbdc ;};type fontCommon struct{_fbdedg string ;_agbd string ;_dfae string ;_gdaff _cg .PdfObject ;
_dcded *_cb .CMap ;_bfggb *PdfFontDescriptor ;_gafcg int64 ;};func _eeafe (_ebcg _cg .PdfObject )(PdfFunction ,error ){_ebcg =_cg .ResolveReference (_ebcg );if _fegcg ,_cbgaf :=_ebcg .(*_cg .PdfObjectStream );_cbgaf {_bgcd :=_fegcg .PdfObjectDictionary ;
_agdd ,_gccgbf :=_bgcd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cg .PdfObjectInteger );if !_gccgbf {_aefb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_agdd ==0{return _cfgbe (_fegcg );}else if *_agdd ==4{return _bfdb (_fegcg );
}else {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ffbd ,_fabe :=_ebcg .(*_cg .PdfIndirectObject );_fabe {_aafaa ,_beef :=_ffbd .PdfObject .(*_cg .PdfObjectDictionary );
if !_beef {_aefb .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_eaafc ,_beef :=_aafaa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cg .PdfObjectInteger );
if !_beef {_aefb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_eaafc ==2{return _dfba (_ffbd );}else if *_eaafc ==3{return _fgbgg (_ffbd );}else {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gfcb ,_bgbdc :=_ebcg .(*_cg .PdfObjectDictionary );
_bgbdc {_dddcba ,_cedea :=_gfcb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cg .PdfObjectInteger );if !_cedea {_aefb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_fff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dddcba ==2{return _dfba (_gfcb );}else if *_dddcba ==3{return _fgbgg (_gfcb );
}else {return nil ,_fff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_aefb .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_ebcg );
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;BitsPerFlag *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};

// HasExtGState checks if ExtGState name is available.
func (_bcde *PdfPage )HasExtGState (name _cg .PdfObjectName )bool {if _bcde .Resources ==nil {return false ;};if _bcde .Resources .ExtGState ==nil {return false ;};_eecge ,_fgfge :=_cg .TraceToDirectObject (_bcde .Resources .ExtGState ).(*_cg .PdfObjectDictionary );
if !_fgfge {_aefb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cg .TraceToDirectObject (_bcde .Resources .ExtGState ));
return false ;};_gbcac :=_eecge .Get (name );_efde :=_gbcac !=nil ;return _efde ;};

// ToPdfObject implements interface PdfModel.
func (_debd *PdfAnnotationPrinterMark )ToPdfObject ()_cg .PdfObject {_debd .PdfAnnotation .ToPdfObject ();_ggde :=_debd ._bed ;_aefga :=_ggde .PdfObject .(*_cg .PdfObjectDictionary );_aefga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_aefga .SetIfNotNil ("\u004d\u004e",_debd .MN );return _ggde ;};

// Items returns all children outline items.
func (_bcdg *Outline )Items ()[]*OutlineItem {return _bcdg .Entries };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dccea *PdfColorspaceLab )GetNumComponents ()int {return 3};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_dege *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbbdd *PdfShadingType1 )ToPdfObject ()_cg .PdfObject {_bbbdd .PdfShading .ToPdfObject ();_adgd ,_daddb :=_bbbdd .getShadingDict ();if _daddb !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbbdd .Domain !=nil {_adgd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbbdd .Domain );};if _bbbdd .Matrix !=nil {_adgd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbbdd .Matrix );};if _bbbdd .Function !=nil {if len (_bbbdd .Function )==1{_adgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbbdd .Function [0].ToPdfObject ());
}else {_cfdbg :=_cg .MakeArray ();for _ ,_ddfc :=range _bbbdd .Function {_cfdbg .Append (_ddfc .ToPdfObject ());};_adgd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cfdbg );};};return _bbbdd ._ceabf ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_dcfe *PdfPageResourcesColorspaces )Set (key _cg .PdfObjectName ,val PdfColorspace ){if _ ,_cbcec :=_dcfe .Colorspaces [string (key )];!_cbcec {_dcfe .Names =append (_dcfe .Names ,string (key ));};_dcfe .Colorspaces [string (key )]=val ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_abeec *PdfPageResources )AddExtGState (gsName _cg .PdfObjectName ,gsDict _cg .PdfObject )error {if _abeec .ExtGState ==nil {_abeec .ExtGState =_cg .MakeDict ();};_dfef :=_abeec .ExtGState ;_deebe ,_gebae :=_cg .TraceToDirectObject (_dfef ).(*_cg .PdfObjectDictionary );
if !_gebae {_aefb .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_dfef ,_cg .TraceToDirectObject (_dfef ));
return _cg .ErrTypeError ;};_deebe .Set (gsName ,gsDict );return nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_adb :=NewPdfAction ();_adg :=&PdfActionLaunch {};_adg .PdfAction =_adb ;_adb .SetContext (_adg );return _adg ;};func _bdfda ()string {_ebecf .Lock ();defer _ebecf .Unlock ();if len (_fdgbd )> 0{return _fdgbd ;
};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cfabe *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcde *PdfShadingType6 )ToPdfObject ()_cg .PdfObject {_gcde .PdfShading .ToPdfObject ();_fadfa ,_cdfec :=_gcde .getShadingDict ();if _cdfec !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gcde .BitsPerCoordinate !=nil {_fadfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gcde .BitsPerCoordinate );};if _gcde .BitsPerComponent !=nil {_fadfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcde .BitsPerComponent );
};if _gcde .BitsPerFlag !=nil {_fadfa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gcde .BitsPerFlag );};if _gcde .Decode !=nil {_fadfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcde .Decode );};if _gcde .Function !=nil {if len (_gcde .Function )==1{_fadfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcde .Function [0].ToPdfObject ());
}else {_cbfgb :=_cg .MakeArray ();for _ ,_gbdbaa :=range _gcde .Function {_cbfgb .Append (_gbdbaa .ToPdfObject ());};_fadfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbfgb );};};return _gcde ._ceabf ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cg .PdfObject ;};

// SetContext set the sub annotation (context).
func (_eedf *PdfShading )SetContext (ctx PdfModel ){_eedf ._caeg =ctx };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_ggbd *PdfOutline )GetContainingPdfObject ()_cg .PdfObject {return _ggbd ._affee };func (_efgdc *PdfWriter )flushWriter ()error {if _efgdc ._dcge ==nil {_efgdc ._dcge =_efgdc ._ebdegf .Flush ();};return _efgdc ._dcge ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_adeg *PdfFont )CharcodesToStrings (charcodes []_eba .CharCode )([]string ,int ,int ){_fggd :=_adeg .baseFields ();_eefeb :=make ([]string ,0,len (charcodes ));_dagda :=0;_bgdg :=_adeg .Encoder ();_dgga :=_fggd ._dcded !=nil &&_adeg .IsSimple ()&&_adeg .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_gb .Contains (_fggd ._dcded .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_dgga &&_bgdg !=nil {switch _ebdg :=_bgdg .(type ){case _eba .SimpleEncoder :_dbbc :=_ebdg .BaseName ();if _ ,_dfcab :=_daff [_dbbc ];_dfcab {for _ ,_gcagb :=range charcodes {if _feaa ,_afae :=_bgdg .CharcodeToRune (_gcagb );_afae {_eefeb =append (_eefeb ,string (_feaa ));
}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gcagb ,charcodes ,_fggd .isCIDFont (),_adeg ,_bgdg );
_dagda ++;_eefeb =append (_eefeb ,_cb .MissingCodeString );};};return _eefeb ,len (_eefeb ),_dagda ;};};};for _ ,_dede :=range charcodes {if _fggd ._dcded !=nil {if _bfafd ,_fged :=_fggd ._dcded .CharcodeToUnicode (_cb .CharCode (_dede ));_fged {_eefeb =append (_eefeb ,_bfafd );
continue ;};};if _bgdg !=nil {if _geac ,_acfgd :=_bgdg .CharcodeToRune (_dede );_acfgd {_eefeb =append (_eefeb ,string (_geac ));continue ;};};_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dede ,charcodes ,_fggd .isCIDFont (),_adeg ,_bgdg );
_dagda ++;_eefeb =append (_eefeb ,_cb .MissingCodeString );};if _dagda !=0{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_dagda ,_adeg );
};return _eefeb ,len (_eefeb ),_dagda ;};func _dbafa (_gcffd _ef .ReadSeeker ,_cagcd *ReaderOpts ,_cfeab bool ,_agcad string )(*PdfReader ,error ){if _cagcd ==nil {_cagcd =NewReaderOpts ();};_fafd :=*_cagcd ;_bggfd :=&PdfReader {_dgfb :_gcffd ,_eebec :map[_cg .PdfObject ]struct{}{},_eggbd :_egggc (),_ddae :_cagcd .LazyLoad ,_caedg :_cagcd .ComplianceMode ,_eggbg :_cfeab ,_fgcfe :&_fafd };
_cdbg ,_gbac :=_bcdfc ("\u0072");if _gbac !=nil {return nil ,_gbac ;};_gbac =_db .Track (_cdbg ,_agcad );if _gbac !=nil {return nil ,_gbac ;};_bggfd ._cabdf =_cdbg ;var _cccbcc *_cg .PdfParser ;if !_bggfd ._caedg {_cccbcc ,_gbac =_cg .NewParser (_gcffd );
}else {_cccbcc ,_gbac =_cg .NewCompliancePdfParser (_gcffd );};if _gbac !=nil {return nil ,_gbac ;};_bggfd ._bafg =_cccbcc ;_bccad ,_gbac :=_bggfd .IsEncrypted ();if _gbac !=nil {return nil ,_gbac ;};if !_bccad {_gbac =_bggfd .loadStructure ();if _gbac !=nil {return nil ,_gbac ;
};}else if _cfeab {_cfbeg ,_cbffd :=_bggfd .Decrypt ([]byte (_cagcd .Password ));if _cbffd !=nil {return nil ,_cbffd ;};if !_cfbeg {return nil ,_fff .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_bggfd ._cfddg =make (map[*PdfReader ]*PdfReader );_bggfd ._ccaf =make ([]*PdfReader ,_cccbcc .GetRevisionNumber ());return _bggfd ,nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ef .ReadSeeker )(*PdfReader ,error ){const _cbegf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dbafa (rs ,&ReaderOpts {},false ,_cbegf );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_agfad *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cgdg :=_agfad .actualFont ();if _cgdg ==nil {_aefb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_agfad ._cgdd );
return _egg .CharMetrics {},false ;};if _eagdd ,_dabcd :=_cgdg .GetRuneMetrics (r );_dabcd {return _eagdd ,true ;};if _ceda ,_ddfec :=_agfad .GetFontDescriptor ();_ddfec ==nil &&_ceda !=nil {return _egg .CharMetrics {Wx :_ceda ._edgb },true ;};_aefb .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_agfad );
return _egg .CharMetrics {},false ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_edaab *PdfWriter )SetCatalogMetadata (meta _cg .PdfObject )error {if meta ==nil {_edaab ._adafd .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_dfedf ,_cffee :=_cg .GetStream (meta );if !_cffee {return _fff .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_edaab .addObject (_dfedf );_edaab ._adafd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dfedf );return nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ffef *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_fgbda *_cg .PdfIndirectObject ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_aeddg *PdfColorspaceDeviceN )ToPdfObject ()_cg .PdfObject {_aadf :=_cg .MakeArray (_cg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_aadf .Append (_aeddg .ColorantNames );_aadf .Append (_aeddg .AlternateSpace .ToPdfObject ());_aadf .Append (_aeddg .TintTransform .ToPdfObject ());
if _aeddg .Attributes !=nil {_aadf .Append (_aeddg .Attributes .ToPdfObject ());};if _aeddg ._fcgd !=nil {_aeddg ._fcgd .PdfObject =_aadf ;return _aeddg ._fcgd ;};return _aadf ;};func (_afaf *PdfWriter )copyObject (_febac _cg .PdfObject ,_fddf map[_cg .PdfObject ]_cg .PdfObject ,_dfbab map[_cg .PdfObject ]struct{},_edcae bool )_cg .PdfObject {_dafa :=!_afaf ._dagdb &&_dfbab !=nil ;
if _cagced ,_ffabb :=_fddf [_febac ];_ffabb {if _dafa &&!_edcae {delete (_dfbab ,_febac );};return _cagced ;};_dfagd :=_febac ;switch _ddfcb :=_febac .(type ){case *_cg .PdfObjectArray :_bacada :=_cg .MakeArray ();_dfagd =_bacada ;_fddf [_febac ]=_dfagd ;
for _ ,_ddaa :=range _ddfcb .Elements (){_bacada .Append (_afaf .copyObject (_ddaa ,_fddf ,_dfbab ,_edcae ));};case *_cg .PdfObjectStreams :_abdfcf :=&_cg .PdfObjectStreams {PdfObjectReference :_ddfcb .PdfObjectReference };_dfagd =_abdfcf ;_fddf [_febac ]=_dfagd ;
for _ ,_edbed :=range _ddfcb .Elements (){_abdfcf .Append (_afaf .copyObject (_edbed ,_fddf ,_dfbab ,_edcae ));};case *_cg .PdfObjectStream :_gdbac :=&_cg .PdfObjectStream {Stream :_ddfcb .Stream ,PdfObjectReference :_ddfcb .PdfObjectReference };_dfagd =_gdbac ;
_fddf [_febac ]=_dfagd ;_gdbac .PdfObjectDictionary =_afaf .copyObject (_ddfcb .PdfObjectDictionary ,_fddf ,_dfbab ,_edcae ).(*_cg .PdfObjectDictionary );case *_cg .PdfObjectDictionary :var _fdbafd bool ;if _dafa &&!_edcae {if _gbbef ,_ :=_cg .GetNameVal (_ddfcb .Get ("\u0054\u0079\u0070\u0065"));
_gbbef =="\u0050\u0061\u0067\u0065"{_ ,_gafb :=_afaf ._gddfd [_ddfcb ];_edcae =!_gafb ;_fdbafd =_edcae ;};};_adge :=_cg .MakeDict ();_dfagd =_adge ;_fddf [_febac ]=_dfagd ;for _ ,_ffefd :=range _ddfcb .Keys (){_adge .Set (_ffefd ,_afaf .copyObject (_ddfcb .Get (_ffefd ),_fddf ,_dfbab ,_edcae ));
};if _fdbafd {_dfagd =_cg .MakeNull ();_edcae =false ;};case *_cg .PdfIndirectObject :_abbfa :=&_cg .PdfIndirectObject {PdfObjectReference :_ddfcb .PdfObjectReference };_dfagd =_abbfa ;_fddf [_febac ]=_dfagd ;_abbfa .PdfObject =_afaf .copyObject (_ddfcb .PdfObject ,_fddf ,_dfbab ,_edcae );
case *_cg .PdfObjectString :_edefd :=*_ddfcb ;_dfagd =&_edefd ;_fddf [_febac ]=_dfagd ;case *_cg .PdfObjectName :_daggf :=*_ddfcb ;_dfagd =&_daggf ;_fddf [_febac ]=_dfagd ;case *_cg .PdfObjectNull :_dfagd =_cg .MakeNull ();_fddf [_febac ]=_dfagd ;case *_cg .PdfObjectInteger :_cfdgc :=*_ddfcb ;
_dfagd =&_cfdgc ;_fddf [_febac ]=_dfagd ;case *_cg .PdfObjectReference :_bggba :=*_ddfcb ;_dfagd =&_bggba ;_fddf [_febac ]=_dfagd ;case *_cg .PdfObjectFloat :_cefdb :=*_ddfcb ;_dfagd =&_cefdb ;_fddf [_febac ]=_dfagd ;case *_cg .PdfObjectBool :_deee :=*_ddfcb ;
_dfagd =&_deee ;_fddf [_febac ]=_dfagd ;case *pdfSignDictionary :_gdfb :=&pdfSignDictionary {PdfObjectDictionary :_cg .MakeDict (),_gccd :_ddfcb ._gccd ,_bbfde :_ddfcb ._bbfde };_dfagd =_gdfb ;_fddf [_febac ]=_dfagd ;for _ ,_aafga :=range _ddfcb .Keys (){_gdfb .Set (_aafga ,_afaf .copyObject (_ddfcb .Get (_aafga ),_fddf ,_dfbab ,_edcae ));
};default:_aefb .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_febac );
};if _dafa &&_edcae {_dfbab [_febac ]=struct{}{};};return _dfagd ;};func _dgdbc (_acegb *PdfField ,_ffcfe _cg .PdfObject ){for _ ,_cbfa :=range _acegb .Annotations {_cbfa .AS =_ffcfe ;_cbfa .ToPdfObject ();};};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject converts rectangle to a PDF object.
func (_accee *PdfRectangle )ToPdfObject ()_cg .PdfObject {return _cg .MakeArray (_cg .MakeFloat (_accee .Llx ),_cg .MakeFloat (_accee .Lly ),_cg .MakeFloat (_accee .Urx ),_cg .MakeFloat (_accee .Ury ));};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_cg .PdfObjectName ;P *_cg .PdfObjectInteger ;V *_cg .PdfObjectName ;};func _bgfgc (_dafdb []byte )[]byte {const _gdbgg =52845;const _aefec =22719;_gfba :=55665;for _ ,_fdbgg :=range _dafdb [:4]{_gfba =(int (_fdbgg )+_gfba )*_gdbgg +_aefec ;
};_ddcc :=make ([]byte ,len (_dafdb )-4);for _gecde ,_eecec :=range _dafdb [4:]{_ddcc [_gecde ]=byte (int (_eecec )^_gfba >>8);_gfba =(int (_eecec )+_gfba )*_gdbgg +_aefec ;};return _ddcc ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cg .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ec :=NewPdfAction ();_dgg :=&PdfActionHide {};_dgg .PdfAction =_ec ;_ec .SetContext (_dgg );return _dgg ;};

// SetAlpha sets the alpha layer for the image.
func (_bfadb *Image )SetAlpha (alpha []byte ){_bfadb ._dbcf =alpha };

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func (_efbf *PdfWriter )writeOutlines ()error {if _efbf ._bfec ==nil {return nil ;};_aefb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_efbf ._bfec );
_fgdag :=_efbf ._bfec .ToPdfObject ();_aefb .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fgdag ,_fgdag ,_fgdag );_efbf ._adafd .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fgdag );
_bdggf :=_efbf .addObjects (_fgdag );if _bdggf !=nil {return _bdggf ;};return nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_bfede *PdfRectangle )Normalize (){if _bfede .Llx > _bfede .Urx {_bfede .Llx ,_bfede .Urx =_bfede .Urx ,_bfede .Llx ;};if _bfede .Lly > _bfede .Ury {_bfede .Lly ,_bfede .Ury =_bfede .Ury ,_bfede .Lly ;};};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_afab *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_eefgd *PdfSignature ,_aeega Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_geed *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_ccagb *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_gbgd *PdfSignature ,_ebegc Hasher )error ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ffe :=&PdfBorderStyle {};return _ffe };

// AddImageResource adds an image to the XObject resources.
func (_fgeab *PdfPage )AddImageResource (name _cg .PdfObjectName ,ximg *XObjectImage )error {var _bcaa *_cg .PdfObjectDictionary ;if _fgeab .Resources .XObject ==nil {_bcaa =_cg .MakeDict ();_fgeab .Resources .XObject =_bcaa ;}else {var _aggg bool ;_bcaa ,_aggg =(_fgeab .Resources .XObject ).(*_cg .PdfObjectDictionary );
if !_aggg {return _fff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_bcaa .Set (name ,ximg .ToPdfObject ());return nil ;};func _cefb (_agfae _cg .PdfObject )(map[_eba .CharCode ]float64 ,error ){if _agfae ==nil {return nil ,nil ;
};_bafd ,_daeb :=_cg .GetArray (_agfae );if !_daeb {return nil ,nil ;};_dbgge :=map[_eba .CharCode ]float64 {};_cbaef :=_bafd .Len ();for _afef :=0;_afef < _cbaef -1;_afef ++{_fgbff :=_cg .TraceToDirectObject (_bafd .Get (_afef ));_dffg ,_aaebbg :=_cg .GetIntVal (_fgbff );
if !_aaebbg {return nil ,_g .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_afef ,_fgbff );};_afef ++;if _afef > _cbaef -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bafd );
};_fdcb :=_cg .TraceToDirectObject (_bafd .Get (_afef ));switch _fdcb .(type ){case *_cg .PdfObjectArray :_gfaee ,_ :=_cg .GetArray (_fdcb );if _abef ,_afcgc :=_gfaee .ToFloat64Array ();_afcgc ==nil {for _dcca :=0;_dcca < len (_abef );_dcca ++{_dbgge [_eba .CharCode (_dffg +_dcca )]=_abef [_dcca ];
};}else {return nil ,_g .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_afef ,_fdcb );};case *_cg .PdfObjectInteger :_fdfa ,_egff :=_cg .GetIntVal (_fdcb );
if !_egff {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_afef ,_fdcb );};_afef ++;if _afef > _cbaef -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bafd );
};_cfbc :=_bafd .Get (_afef );_abcdge ,_bbcfd :=_cg .GetNumberAsFloat (_cfbc );if _bbcfd !=nil {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_afef ,_cfbc );
};for _agbg :=_dffg ;_agbg <=_fdfa ;_agbg ++{_dbgge [_eba .CharCode (_agbg )]=_abcdge ;};default:return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_afef ,_fdcb );
};};return _dbgge ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_effab :=&PdfOutlineItem {_adddga :_cg .MakeIndirectObject (_cg .MakeDict ())};_effab ._gegde =_effab ;return _effab ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ffbgbd *PdfColorspaceLab )ToPdfObject ()_cg .PdfObject {_fcab :=_cg .MakeArray ();_fcab .Append (_cg .MakeName ("\u004c\u0061\u0062"));_bfcde :=_cg .MakeDict ();if _ffbgbd .WhitePoint !=nil {_bdef :=_cg .MakeArray (_cg .MakeFloat (_ffbgbd .WhitePoint [0]),_cg .MakeFloat (_ffbgbd .WhitePoint [1]),_cg .MakeFloat (_ffbgbd .WhitePoint [2]));
_bfcde .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bdef );}else {_aefb .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _ffbgbd .BlackPoint !=nil {_faca :=_cg .MakeArray (_cg .MakeFloat (_ffbgbd .BlackPoint [0]),_cg .MakeFloat (_ffbgbd .BlackPoint [1]),_cg .MakeFloat (_ffbgbd .BlackPoint [2]));_bfcde .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_faca );
};if _ffbgbd .Range !=nil {_fbfaa :=_cg .MakeArray (_cg .MakeFloat (_ffbgbd .Range [0]),_cg .MakeFloat (_ffbgbd .Range [1]),_cg .MakeFloat (_ffbgbd .Range [2]),_cg .MakeFloat (_ffbgbd .Range [3]));_bfcde .Set ("\u0052\u0061\u006eg\u0065",_fbfaa );};_fcab .Append (_bfcde );
if _ffbgbd ._egdc !=nil {_ffbgbd ._egdc .PdfObject =_fcab ;return _ffbgbd ._egdc ;};return _fcab ;};

// ToPdfObject implements interface PdfModel.
func (_beaf *PdfAnnotationCircle )ToPdfObject ()_cg .PdfObject {_beaf .PdfAnnotation .ToPdfObject ();_faaeg :=_beaf ._bed ;_bbge :=_faaeg .PdfObject .(*_cg .PdfObjectDictionary );_beaf .PdfAnnotationMarkup .appendToPdfDictionary (_bbge );_bbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_bbge .SetIfNotNil ("\u0042\u0053",_beaf .BS );_bbge .SetIfNotNil ("\u0049\u0043",_beaf .IC );_bbge .SetIfNotNil ("\u0042\u0045",_beaf .BE );_bbge .SetIfNotNil ("\u0052\u0044",_beaf .RD );return _faaeg ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cg .PdfObjectInteger ;BitsPerComponent *_cg .PdfObjectInteger ;BitsPerFlag *_cg .PdfObjectInteger ;Decode *_cg .PdfObjectArray ;Function []PdfFunction ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_ffafb *_fc .Document )error ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_ddge *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _ddge ._adga !=nil {return _ddge ._adga ,nil ;};if _ddge .Annots ==nil {_ddge ._adga =[]*PdfAnnotation {};return nil ,nil ;};if _ddge ._abeaf ==nil {_ddge ._adga =[]*PdfAnnotation {};
return nil ,nil ;};_afcga ,_efed :=_ddge ._abeaf .loadAnnotations (_ddge .Annots );if _efed !=nil {return nil ,_efed ;};if _afcga ==nil {_ddge ._adga =[]*PdfAnnotation {};};_ddge ._adga =_afcga ;return _ddge ._adga ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_adbbf FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_adbbf .Mask ()&^fl .Mask ())};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_ggcgg :=&PdfPageResources {};_ggcgg ._daacc =_cg .MakeDict ();return _ggcgg ;};

// ToPdfObject implements interface PdfModel.
func (_gbeg *PdfActionMovie )ToPdfObject ()_cg .PdfObject {_gbeg .PdfAction .ToPdfObject ();_bee :=_gbeg ._ebd ;_bgb :=_bee .PdfObject .(*_cg .PdfObjectDictionary );_bgb .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeMovie )));_bgb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gbeg .Annotation );
_bgb .SetIfNotNil ("\u0054",_gbeg .T );_bgb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gbeg .Operation );return _bee ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_defefg pdfFontSimple )GetRuneMetrics (r rune )(_egg .CharMetrics ,bool ){if _defefg ._fegab !=nil {_dccdb ,_bfagg :=_defefg ._fegab .Read (r );if _bfagg {return _dccdb ,true ;};};_bccb :=_defefg .Encoder ();if _bccb ==nil {_aefb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_defefg );
return _egg .CharMetrics {},false ;};_bdab ,_bacc :=_bccb .RuneToCharcode (r );if !_bacc {if r !=' '{_aefb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_defefg );
};return _egg .CharMetrics {},false ;};_aagba ,_abbg :=_defefg .GetCharMetrics (_bdab );return _aagba ,_abbg ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_bebcc *PdfReader )GetCatalogStructTreeRoot ()(_cg .PdfObject ,bool ){if _bebcc ._fbggd ==nil {return nil ,false ;};_bbdc :=_bebcc ._fbggd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _bbdc ,_bbdc !=nil ;
};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fgdf _cg .PdfObject ;};func _cbbbc (_gcecf _cg .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_aefb .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gcecf .String (),_gcecf );
_gbedd :=NewPdfColorspaceSpecialPattern ();if _agfg ,_ebgb :=_gcecf .(*_cg .PdfIndirectObject );_ebgb {_gbedd ._febc =_agfg ;};_gcecf =_cg .TraceToDirectObject (_gcecf );if _ddage ,_gdbae :=_gcecf .(*_cg .PdfObjectName );_gdbae {if *_ddage !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _gbedd ,nil ;};_fafe ,_cbde :=_gcecf .(*_cg .PdfObjectArray );if !_cbde {_aefb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gcecf );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _fafe .Len ()!=1&&_fafe .Len ()!=2{_aefb .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_fafe );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gcecf =_fafe .Get (0);if _bacda ,_dcfg :=_gcecf .(*_cg .PdfObjectName );_dcfg {if *_bacda !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aefb .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bacda );
return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _fafe .Len ()> 1{_gcecf =_fafe .Get (1);_gcecf =_cg .TraceToDirectObject (_gcecf );_gcaa ,_fdca :=NewPdfColorspaceFromPdfObject (_gcecf );if _fdca !=nil {return nil ,_fdca ;
};_gbedd .UnderlyingCS =_gcaa ;};_aefb .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_gbedd .UnderlyingCS );
return _gbedd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dae *PdfAnnotationPopup )ToPdfObject ()_cg .PdfObject {_dae .PdfAnnotation .ToPdfObject ();_cace :=_dae ._bed ;_cfac :=_cace .PdfObject .(*_cg .PdfObjectDictionary );_cfac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0050\u006f\u0070u\u0070"));
_cfac .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dae .Parent );_cfac .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dae .Open );return _cace ;};

// ToPdfObject implements interface PdfModel.
func (_gdge *PdfActionSound )ToPdfObject ()_cg .PdfObject {_gdge .PdfAction .ToPdfObject ();_eceg :=_gdge ._ebd ;_gde :=_eceg .PdfObject .(*_cg .PdfObjectDictionary );_gde .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeSound )));_gde .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gdge .Sound );
_gde .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gdge .Volume );_gde .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gdge .Synchronous );_gde .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gdge .Repeat );
_gde .SetIfNotNil ("\u004d\u0069\u0078",_gdge .Mix );return _eceg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_aebc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgdg :=vals [0];_affc :=[]float64 {_fgdg };_addgd ,_ggeaa :=_aebc .TintTransform .Evaluate (_affc );
if _ggeaa !=nil {_aefb .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ggeaa );_aefb .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_aebc .TintTransform );
return nil ,_ggeaa ;};_aefb .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_addgd ,_aebc .AlternateSpace );
_fcbg ,_ggeaa :=_aebc .AlternateSpace .ColorFromFloats (_addgd );if _ggeaa !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ggeaa );
return nil ,_ggeaa ;};return _fcbg ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gbfgb :=appender .Reader .DSS ;if _gbfgb ==nil {_gbfgb =NewDSS ();};if _abagde :=_gbfgb .generateHashMaps ();_abagde !=nil {return nil ,_abagde ;};return &LTV {CertClient :_bda .NewCertClient (),OCSPClient :_bda .NewOCSPClient (),CRLClient :_bda .NewCRLClient (),SkipExisting :true ,_edge :appender ,_ggfebf :_gbfgb },nil ;
};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";
ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject returns the PDF representation of the colorspace.
func (_eefge *PdfColorspaceDeviceRGB )ToPdfObject ()_cg .PdfObject {return _cg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_cabed *PdfWriter )SetOpenAction (dest _cg .PdfObject )error {if dest ==nil ||_cg .IsNullObject (dest ){return nil ;};_cabed ._adafd .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _cabed .addObjects (dest );};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cg .PdfObject ;};func (_deaca *PdfWriter )writeObject (_fdgdd int ,_aegg _cg .PdfObject ){_aefb .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_fdgdd );
if _daeecf ,_fbaab :=_aegg .(*_cg .PdfIndirectObject );_fbaab {_deaca ._ggaccb [_fdgdd ]=crossReference {Type :1,Offset :_deaca ._befaf ,Generation :_daeecf .GenerationNumber };_gdbfb :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fdgdd );
if _eafae ,_dcfac :=_daeecf .PdfObject .(*pdfSignDictionary );_dcfac {_eafae ._edace =_deaca ._befaf +int64 (len (_gdbfb ));};if _daeecf .PdfObject ==nil {_aefb .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_daeecf .PdfObject =_cg .MakeNull ();};_gdbfb +=_daeecf .PdfObject .WriteString ();_gdbfb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_deaca .writeString (_gdbfb );return ;};if _fffbc ,_gecfg :=_aegg .(*_cg .PdfObjectStream );_gecfg {_deaca ._ggaccb [_fdgdd ]=crossReference {Type :1,Offset :_deaca ._befaf ,Generation :_fffbc .GenerationNumber };
_acaf :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fdgdd );_acaf +=_fffbc .PdfObjectDictionary .WriteString ();_acaf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_deaca .writeString (_acaf );_deaca .writeBytes (_fffbc .Stream );
_deaca .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _faeeafa ,_dadaa :=_aegg .(*_cg .PdfObjectStreams );_dadaa {_deaca ._ggaccb [_fdgdd ]=crossReference {Type :1,Offset :_deaca ._befaf ,Generation :_faeeafa .GenerationNumber };
_bcfad :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_fdgdd );var _bgece []string ;var _eggdg string ;var _cbda int64 ;for _afefb ,_ebdf :=range _faeeafa .Elements (){_cbge ,_ebeab :=_ebdf .(*_cg .PdfIndirectObject );if !_ebeab {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_fdgdd ,_ebdf );
continue ;};_gfcfb :=_cbge .PdfObject .WriteString ()+"\u0020";_eggdg =_eggdg +_gfcfb ;_bgece =append (_bgece ,_g .Sprintf ("\u0025\u0064\u0020%\u0064",_cbge .ObjectNumber ,_cbda ));_deaca ._ggaccb [int (_cbge .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_fdgdd ,Index :_afefb };
_cbda =_cbda +int64 (len ([]byte (_gfcfb )));};_dfcafc :=_gb .Join (_bgece ,"\u0020")+"\u0020";_fdec :=_cg .NewFlateEncoder ();_cceff :=_fdec .MakeStreamDict ();_cceff .Set (_cg .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cg .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_cffed :=int64 (_faeeafa .Len ());_cceff .Set (_cg .PdfObjectName ("\u004e"),_cg .MakeInteger (_cffed ));_fccge :=int64 (len (_dfcafc ));_cceff .Set (_cg .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cg .MakeInteger (_fccge ));_cebgff ,_ :=_fdec .EncodeBytes ([]byte (_dfcafc +_eggdg ));
_bbec :=int64 (len (_cebgff ));_cceff .Set (_cg .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cg .MakeInteger (_bbec ));_bcfad +=_cceff .WriteString ();_bcfad +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_deaca .writeString (_bcfad );
_deaca .writeBytes (_cebgff );_deaca .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_deaca .writeString (_aegg .WriteString ());};func _dbgce (_cabfe _egg .StdFont )pdfFontSimple {_eade :=_cabfe .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_agbd :"\u0054\u0079\u0070e\u0031",_fbdedg :_cabfe .Name ()},_fegab :_cabfe .GetMetricsTable (),_cgdad :&PdfFontDescriptor {FontName :_cg .MakeName (string (_eade .Name )),FontFamily :_cg .MakeName (_eade .Family ),FontWeight :_cg .MakeFloat (float64 (_eade .Weight )),Flags :_cg .MakeInteger (int64 (_eade .Flags )),FontBBox :_cg .MakeArrayFromFloats (_eade .BBox [:]),ItalicAngle :_cg .MakeFloat (_eade .ItalicAngle ),Ascent :_cg .MakeFloat (_eade .Ascent ),Descent :_cg .MakeFloat (_eade .Descent ),CapHeight :_cg .MakeFloat (_eade .CapHeight ),XHeight :_cg .MakeFloat (_eade .XHeight ),StemV :_cg .MakeFloat (_eade .StemV ),StemH :_cg .MakeFloat (_eade .StemH )},_ebedb :_cabfe .Encoder ()};
};

// ToPdfObject implements interface PdfModel.
func (_bdbaa *PdfBorderStyle )ToPdfObject ()_cg .PdfObject {_dfcad :=_cg .MakeDict ();if _bdbaa ._fgdf !=nil {if _edca ,_egca :=_bdbaa ._fgdf .(*_cg .PdfIndirectObject );_egca {_edca .PdfObject =_dfcad ;};};_dfcad .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _bdbaa .W !=nil {_dfcad .Set ("\u0057",_cg .MakeFloat (*_bdbaa .W ));};if _bdbaa .S !=nil {_dfcad .Set ("\u0053",_cg .MakeName (_bdbaa .S .GetPdfName ()));};if _bdbaa .D !=nil {_dfcad .Set ("\u0044",_cg .MakeArrayFromIntegers (*_bdbaa .D ));};if _bdbaa ._fgdf !=nil {return _bdbaa ._fgdf ;
};return _dfcad ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ggbc *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ggbc .AlternateSpace ==nil {return nil ,_fff .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ggbc .AlternateSpace .ColorToRGB (color );};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_cdcff *PdfWriter )writeXRefStreams (_dggab int ,_afcec int64 )error {_dbgacd :=_dggab +1;_cdcff ._ggaccb [_dbgacd ]=crossReference {Type :1,ObjectNumber :_dbgacd ,Offset :_afcec };_gbbfa :=_gbe .NewBuffer (nil );_bebd :=_cg .MakeArray ();
for _egefb :=0;_egefb <=_dggab ;{for ;_egefb <=_dggab ;_egefb ++{_edbga ,_bcdge :=_cdcff ._ggaccb [_egefb ];if _bcdge &&(!_cdcff ._dagdb ||_cdcff ._dagdb &&(_edbga .Type ==1&&_edbga .Offset >=_cdcff ._dggdf ||_edbga .Type ==0)){break ;};};var _egge int ;
for _egge =_egefb +1;_egge <=_dggab ;_egge ++{_bgef ,_bcdce :=_cdcff ._ggaccb [_egge ];if _bcdce &&(!_cdcff ._dagdb ||_cdcff ._dagdb &&(_bgef .Type ==1&&_bgef .Offset > _cdcff ._dggdf )){continue ;};break ;};_bebd .Append (_cg .MakeInteger (int64 (_egefb )),_cg .MakeInteger (int64 (_egge -_egefb )));
for _fabd :=_egefb ;_fabd < _egge ;_fabd ++{_eebee :=_cdcff ._ggaccb [_fabd ];switch _eebee .Type {case 0:_eb .Write (_gbbfa ,_eb .BigEndian ,byte (0));_eb .Write (_gbbfa ,_eb .BigEndian ,uint32 (0));_eb .Write (_gbbfa ,_eb .BigEndian ,uint16 (0xFFFF));
case 1:_eb .Write (_gbbfa ,_eb .BigEndian ,byte (1));_eb .Write (_gbbfa ,_eb .BigEndian ,uint32 (_eebee .Offset ));_eb .Write (_gbbfa ,_eb .BigEndian ,uint16 (_eebee .Generation ));case 2:_eb .Write (_gbbfa ,_eb .BigEndian ,byte (2));_eb .Write (_gbbfa ,_eb .BigEndian ,uint32 (_eebee .ObjectNumber ));
_eb .Write (_gbbfa ,_eb .BigEndian ,uint16 (_eebee .Index ));};};_egefb =_egge +1;};_gdgac ,_acfgb :=_cg .MakeStream (_gbbfa .Bytes (),_cg .NewFlateEncoder ());if _acfgb !=nil {return _acfgb ;};_gdgac .ObjectNumber =int64 (_dbgacd );_gdgac .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0058\u0052\u0065\u0066"));
_gdgac .PdfObjectDictionary .Set ("\u0057",_cg .MakeArray (_cg .MakeInteger (1),_cg .MakeInteger (4),_cg .MakeInteger (2)));_gdgac .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bebd );_gdgac .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cg .MakeInteger (int64 (_dbgacd +1)));
_gdgac .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cdcff ._aeea );_gdgac .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cdcff ._dfacgd );if _cdcff ._dagdb &&_cdcff ._caede > 0{_gdgac .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cg .MakeInteger (_cdcff ._caede ));
};if _cdcff ._dfeee !=nil {_gdgac .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cdcff ._gddd );};if _cdcff ._bbcgc ==nil &&_cdcff ._cfga !=""&&_cdcff ._befdb !=""{_cdcff ._bbcgc =_cg .MakeArray (_cg .MakeHexString (_cdcff ._cfga ),_cg .MakeHexString (_cdcff ._befdb ));
};if _cdcff ._bbcgc !=nil {_aefb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cdcff ._bbcgc );_gdgac .Set ("\u0049\u0044",_cdcff ._bbcgc );};_cdcff .writeObject (int (_gdgac .ObjectNumber ),_gdgac );return nil ;};func (_ebfdd *PdfReader )newPdfAnnotationWatermarkFromDict (_ebdbb *_cg .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_aacf :=PdfAnnotationWatermark {};
_aacf .FixedPrint =_ebdbb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_aacf ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// Register registers (caches) a model to primitive object relationship.
func (_dbcg *modelManager )Register (primitive _cg .PdfObject ,model PdfModel ){_dbcg ._acbfc [model ]=primitive ;_dbcg ._dffca [primitive ]=model ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_fac *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_addbd ,_ebfc :=color .(*PdfColorDeviceCMYK );if !_ebfc {_aefb .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bace :=_addbd .C ();_acgc :=_addbd .M ();_gbef :=_addbd .Y ();_affe :=_addbd .K ();_bace =_bace *(1-_affe )+_affe ;_acgc =_acgc *(1-_affe )+_affe ;
_gbef =_gbef *(1-_affe )+_affe ;_cefea :=1-_bace ;_caca :=1-_acgc ;_dedb :=1-_gbef ;return NewPdfColorDeviceRGB (_cefea ,_caca ,_dedb ),nil ;};

// WriteString outputs the object as it is to be written to file.
func (_ceedbc *pdfSignDictionary )WriteString ()string {_ceedbc ._eafa =0;_ceedbc ._eccfc =0;_ceedbc ._baggc =0;_ceedbc ._degag =0;_fgcebe :=_gbe .NewBuffer (nil );_fgcebe .WriteString ("\u003c\u003c");for _ ,_gaccb :=range _ceedbc .Keys (){_dfcfe :=_ceedbc .Get (_gaccb );
switch _gaccb {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fgcebe .WriteString (_gaccb .WriteString ());_fgcebe .WriteString ("\u0020");_ceedbc ._baggc =_fgcebe .Len ();_fgcebe .WriteString (_dfcfe .WriteString ());_fgcebe .WriteString ("\u0020");
_ceedbc ._degag =_fgcebe .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fgcebe .WriteString (_gaccb .WriteString ());_fgcebe .WriteString ("\u0020");_ceedbc ._eafa =_fgcebe .Len ();_fgcebe .WriteString (_dfcfe .WriteString ());_fgcebe .WriteString ("\u0020");
_ceedbc ._eccfc =_fgcebe .Len ()-1;default:_fgcebe .WriteString (_gaccb .WriteString ());_fgcebe .WriteString ("\u0020");_fgcebe .WriteString (_dfcfe .WriteString ());};};_fgcebe .WriteString ("\u003e\u003e");return _fgcebe .String ();};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_dcceg *PdfPage )GetRotate ()(int64 ,error ){if _dcceg .Rotate !=nil {return *_dcceg .Rotate ,nil ;};_fedbf :=_dcceg .Parent ;for _fedbf !=nil {_bcba ,_bfbdb :=_cg .GetDict (_fedbf );if !_bfbdb {return 0,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _bgcc :=_bcba .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bgcc !=nil {_ebfge ,_bdcgde :=_cg .GetInt (_bgcc );if !_bdcgde {return 0,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _ebfge !=nil {return int64 (*_ebfge ),nil ;
};return 0,_fff .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_fedbf =_bcba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_fff .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bgbff pdfFontType3 )GetRuneMetrics (r rune )(_egg .CharMetrics ,bool ){_acdd :=_bgbff .Encoder ();if _acdd ==nil {_aefb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bgbff );
return _egg .CharMetrics {},false ;};_cbbba ,_cffc :=_acdd .RuneToCharcode (r );if !_cffc {if r !=' '{_aefb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bgbff );
};return _egg .CharMetrics {},false ;};_gdbcc ,_fcgf :=_bgbff .GetCharMetrics (_cbbba );return _gdbcc ,_fcgf ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ggggg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ggggg .NumInputs {_aefb .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_fff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ggggg ._daaae ==nil {_gdfag :=_ggggg .processSamples ();if _gdfag !=nil {return nil ,_gdfag ;};};_dgfcg :=_ggggg .Encode ;
if _dgfcg ==nil {_dgfcg =[]float64 {};for _cedeg :=0;_cedeg < len (_ggggg .Size );_cedeg ++{_dgfcg =append (_dgfcg ,0);_dgfcg =append (_dgfcg ,float64 (_ggggg .Size [_cedeg ]-1));};};_dggbg :=_ggggg .Decode ;if _dggbg ==nil {_dggbg =_ggggg .Range ;};_cdgga :=make ([]int ,len (x ));
for _adbcg :=0;_adbcg < len (x );_adbcg ++{_acddf :=x [_adbcg ];_cbffe :=_be .Min (_be .Max (_acddf ,_ggggg .Domain [2*_adbcg ]),_ggggg .Domain [2*_adbcg +1]);_baeag :=_cc .LinearInterpolate (_cbffe ,_ggggg .Domain [2*_adbcg ],_ggggg .Domain [2*_adbcg +1],_dgfcg [2*_adbcg ],_dgfcg [2*_adbcg +1]);
_aeagb :=_be .Min (_be .Max (_baeag ,0),float64 (_ggggg .Size [_adbcg ]-1));_ffagg :=int (_be .Floor (_aeagb +0.5));if _ffagg < 0{_ffagg =0;}else if _ffagg > _ggggg .Size [_adbcg ]{_ffagg =_ggggg .Size [_adbcg ]-1;};_cdgga [_adbcg ]=_ffagg ;};_fgcee :=_cdgga [0];
for _fdcbg :=1;_fdcbg < _ggggg .NumInputs ;_fdcbg ++{_egec :=_cdgga [_fdcbg ];for _baaga :=0;_baaga < _fdcbg ;_baaga ++{_egec *=_ggggg .Size [_baaga ];};_fgcee +=_egec ;};_fgcee *=_ggggg .NumOutputs ;var _efbgcg []float64 ;for _geeea :=0;_geeea < _ggggg .NumOutputs ;
_geeea ++{_fecea :=_fgcee +_geeea ;if _fecea >=len (_ggggg ._daaae ){_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_acec :=_ggggg ._daaae [_fecea ];_gdegg :=_cc .LinearInterpolate (float64 (_acec ),0,_be .Pow (2,float64 (_ggggg .BitsPerSample )),_dggbg [2*_geeea ],_dggbg [2*_geeea +1]);_bfggg :=_be .Min (_be .Max (_gdegg ,_ggggg .Range [2*_geeea ]),_ggggg .Range [2*_geeea +1]);
_efbgcg =append (_efbgcg ,_bfggg );};return _efbgcg ,nil ;};func (_abfac *PdfReader )loadAnnotations (_cfda _cg .PdfObject )([]*PdfAnnotation ,error ){_bgfbg ,_dbggad :=_cg .GetArray (_cfda );if !_dbggad {return nil ,_g .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bgdgc []*PdfAnnotation ;for _ ,_cbddb :=range _bgfbg .Elements (){_cbddb =_cg .ResolveReference (_cbddb );if _ ,_acaa :=_cbddb .(*_cg .PdfObjectNull );_acaa {continue ;};_ddead ,_fcefd :=_cbddb .(*_cg .PdfObjectDictionary );_bfbff ,_dcedc :=_cbddb .(*_cg .PdfIndirectObject );
if _fcefd {_bfbff =&_cg .PdfIndirectObject {};_bfbff .PdfObject =_ddead ;}else {if !_dcedc {return nil ,_g .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_addf ,_egecb :=_abfac .newPdfAnnotationFromIndirectObject (_bfbff );if _egecb !=nil {return nil ,_egecb ;};switch _bdfgf :=_addf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gebce :=range _abfac .AcroForm .AllFields (){if _gebce ._gecee ==_bdfgf .Parent {_bdfgf ._fag =_gebce ;
break ;};};};if _addf !=nil {_bgdgc =append (_bgdgc ,_addf );};};return _bgdgc ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_dddg *PdfWriter )seekByName (_cggcf _cg .PdfObject ,_gccbe []string ,_bfaaa string )([]_cg .PdfObject ,error ){_aefb .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cggcf );
var _fdbda []_cg .PdfObject ;if _gddgg ,_fbgbf :=_cggcf .(*_cg .PdfIndirectObject );_fbgbf {return _dddg .seekByName (_gddgg .PdfObject ,_gccbe ,_bfaaa );};if _gegec ,_ccgff :=_cggcf .(*_cg .PdfObjectStream );_ccgff {return _dddg .seekByName (_gegec .PdfObjectDictionary ,_gccbe ,_bfaaa );
};if _abfbe ,_bdcgc :=_cggcf .(*_cg .PdfObjectDictionary );_bdcgc {_aefb .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gaadfg :=range _abfbe .Keys (){_dbca :=_abfbe .Get (_gaadfg );if string (_gaadfg )==_bfaaa {_fdbda =append (_fdbda ,_dbca );};for _ ,_efcae :=range _gccbe {if string (_gaadfg )==_efcae {_aefb .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_efcae );
_ggdfa ,_cfaag :=_dddg .seekByName (_dbca ,_gccbe ,_bfaaa );if _cfaag !=nil {return _fdbda ,_cfaag ;};_fdbda =append (_fdbda ,_ggdfa ...);break ;};};};return _fdbda ,nil ;};return _fdbda ,nil ;};

// Width returns the width of `rect`.
func (_cafbc *PdfRectangle )Width ()float64 {return _be .Abs (_cafbc .Urx -_cafbc .Llx )};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_aeabfa :=NewPdfOutline ();_aeabfa ._gegde =&_aeabfa ;return _aeabfa ;};func (_acggd *PdfReader )lookupPageByObject (_bfffc _cg .PdfObject )(*PdfPage ,error ){return nil ,_fff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func _fbgb (_ffecb _cg .PdfObject )(*PdfPattern ,error ){_egggf :=&PdfPattern {};var _ceagc *_cg .PdfObjectDictionary ;if _fdgbb ,_ffgff :=_cg .GetIndirect (_ffecb );_ffgff {_egggf ._bcafe =_fdgbb ;_agac ,_gdgbe :=_fdgbb .PdfObject .(*_cg .PdfObjectDictionary );
if !_gdgbe {_aefb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fdgbb .PdfObject );
return nil ,_cg .ErrTypeError ;};_ceagc =_agac ;}else if _aaea ,_eabgc :=_cg .GetStream (_ffecb );_eabgc {_egggf ._bcafe =_aaea ;_ceagc =_aaea .PdfObjectDictionary ;}else {_aefb .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ffecb );
return nil ,_cg .ErrTypeError ;};_abdbg :=_ceagc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _abdbg ==nil {_aefb .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_egcge ,_bafbd :=_abdbg .(*_cg .PdfObjectInteger );if !_bafbd {_aefb .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_abdbg );
return nil ,_cg .ErrTypeError ;};if *_egcge !=1&&*_egcge !=2{_aefb .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_egcge );return nil ,_cg .ErrRangeError ;
};_egggf .PatternType =int64 (*_egcge );switch *_egcge {case 1:_aeefee ,_agbb :=_ceee (_ceagc );if _agbb !=nil {return nil ,_agbb ;};_aeefee .PdfPattern =_egggf ;_egggf ._ebca =_aeefee ;return _egggf ,nil ;case 2:_effcgd ,_gegf :=_dgdbg (_ceagc );if _gegf !=nil {return nil ,_gegf ;
};_effcgd .PdfPattern =_egggf ;_egggf ._ebca =_effcgd ;return _egggf ,nil ;};return nil ,_fff .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};type pdfFontType3 struct{fontCommon ;_eegg *_cg .PdfIndirectObject ;


// These fields are specific to Type 3 fonts.
CharProcs _cg .PdfObject ;Encoding _cg .PdfObject ;FontBBox _cg .PdfObject ;FontMatrix _cg .PdfObject ;FirstChar _cg .PdfObject ;LastChar _cg .PdfObject ;Widths _cg .PdfObject ;Resources _cg .PdfObject ;_cabeg map[_eba .CharCode ]float64 ;_abcca _eba .TextEncoder ;
};func (_aafc *LTV )getOCSPs (_acbag []*_a .Certificate ,_fefeg map[string ]*_a .Certificate )([][]byte ,error ){_geea :=make ([][]byte ,0,len (_acbag ));for _ ,_acagf :=range _acbag {for _ ,_aefae :=range _acagf .OCSPServer {if _aafc .CertClient .IsCA (_acagf ){continue ;
};_cbgacc ,_fedaf :=_fefeg [_acagf .Issuer .CommonName ];if !_fedaf {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_gggf ,_ebcdc :=_aafc .OCSPClient .MakeRequest (_aefae ,_acagf ,_cbgacc );if _ebcdc !=nil {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_ebcdc );
continue ;};_geea =append (_geea ,_gggf );};};return _geea ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gaeff *PdfReader )GetPageLabels ()(_cg .PdfObject ,error ){_cbfb :=_cg .ResolveReference (_gaeff ._fbggd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cbfb ==nil {return nil ,nil ;};if !_gaeff ._ddae {_cbccb :=_gaeff .traverseObjectData (_cbfb );
if _cbccb !=nil {return nil ,_cbccb ;};};return _cbfb ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_adgaf *PdfPageResources )GetFontByName (keyName _cg .PdfObjectName )(_cg .PdfObject ,bool ){if _adgaf .Font ==nil {return nil ,false ;};_fagg ,_gccca :=_cg .TraceToDirectObject (_adgaf .Font ).(*_cg .PdfObjectDictionary );if !_gccca {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cg .TraceToDirectObject (_adgaf .Font ));
return nil ,false ;};if _ggfef :=_fagg .Get (keyName );_ggfef !=nil {return _ggfef ,true ;};return nil ,false ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gff :=NewPdfAnnotation ();_fbe :=&PdfAnnotationText {};_fbe .PdfAnnotation =_gff ;_fbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gff .SetContext (_fbe );return _fbe ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cg .PdfObjectStream )(*XObjectForm ,error ){_dgbbeg :=&XObjectForm {};_dgbbeg ._eeecdg =stream ;_cggbd :=*(stream .PdfObjectDictionary );_daggfa ,_fgff :=_cg .NewEncoderFromStream (stream );if _fgff !=nil {return nil ,_fgff ;
};_dgbbeg .Filter =_daggfa ;if _egfc :=_cggbd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_egfc !=nil {_fbacb ,_efbcd :=_egfc .(*_cg .PdfObjectName );if !_efbcd {return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_fbacb !="\u0046\u006f\u0072\u006d"{_aefb .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _eecdd :=_cggbd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_eecdd !=nil {_dgbbeg .FormType =_eecdd ;};if _bgeced :=_cggbd .Get ("\u0042\u0042\u006f\u0078");_bgeced !=nil {_dgbbeg .BBox =_bgeced ;};if _bgfgd :=_cggbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bgfgd !=nil {_dgbbeg .Matrix =_bgfgd ;};if _eedc :=_cggbd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eedc !=nil {_eedc =_cg .TraceToDirectObject (_eedc );_dccedc ,_egcef :=_eedc .(*_cg .PdfObjectDictionary );if !_egcef {_aefb .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cg .ErrTypeError ;};_aeefb ,_cggcee :=NewPdfPageResourcesFromDict (_dccedc );if _cggcee !=nil {_aefb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_cggcee ;};_dgbbeg .Resources =_aeefb ;_aefb .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_dgbbeg .Resources );};_dgbbeg .Group =_cggbd .Get ("\u0047\u0072\u006fu\u0070");
_dgbbeg .Ref =_cggbd .Get ("\u0052\u0065\u0066");_dgbbeg .MetaData =_cggbd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_dgbbeg .PieceInfo =_cggbd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dgbbeg .LastModified =_cggbd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_dgbbeg .StructParent =_cggbd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dgbbeg .StructParents =_cggbd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_dgbbeg .OPI =_cggbd .Get ("\u004f\u0050\u0049");
_dgbbeg .OC =_cggbd .Get ("\u004f\u0043");_dgbbeg .Name =_cggbd .Get ("\u004e\u0061\u006d\u0065");_dgbbeg .Stream =stream .Stream ;return _dgbbeg ,nil ;};

// ToPdfObject returns a stream object.
func (_fagdb *XObjectForm )ToPdfObject ()_cg .PdfObject {_ccgg :=_fagdb ._eeecdg ;_gbdbg :=_ccgg .PdfObjectDictionary ;if _fagdb .Filter !=nil {_gbdbg =_fagdb .Filter .MakeStreamDict ();_ccgg .PdfObjectDictionary =_gbdbg ;};_gbdbg .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_gbdbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u0072\u006d"));_gbdbg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_fagdb .FormType );_gbdbg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_fagdb .BBox );_gbdbg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_fagdb .Matrix );
if _fagdb .Resources !=nil {_gbdbg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fagdb .Resources .ToPdfObject ());};_gbdbg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fagdb .Group );_gbdbg .SetIfNotNil ("\u0052\u0065\u0066",_fagdb .Ref );
_gbdbg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_fagdb .MetaData );_gbdbg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fagdb .PieceInfo );_gbdbg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fagdb .LastModified );
_gbdbg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fagdb .StructParent );_gbdbg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fagdb .StructParents );_gbdbg .SetIfNotNil ("\u004f\u0050\u0049",_fagdb .OPI );
_gbdbg .SetIfNotNil ("\u004f\u0043",_fagdb .OC );_gbdbg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fagdb .Name );_gbdbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_fagdb .Stream ))));_ccgg .Stream =_fagdb .Stream ;return _ccgg ;
};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_ddef *PdfFieldButton )GetType ()ButtonType {_fecgd :=ButtonTypeCheckbox ;if _ddef .Ff !=nil {if (uint32 (*_ddef .Ff )&FieldFlagPushbutton .Mask ())> 0{_fecgd =ButtonTypePush ;}else if (uint32 (*_ddef .Ff )&FieldFlagRadio .Mask ())> 0{_fecgd =ButtonTypeRadio ;
};};return _fecgd ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_eccd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fdfd :=_ggc .NewReader (img .getBase ());_cfef :=_cc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_eccd .AlternateSpace .GetNumComponents (),nil ,img ._dbcf ,nil );
_ecbfd :=_ggc .NewWriter (_cfef );_adbb :=_be .Pow (2,float64 (img .BitsPerComponent ))-1;_aefb .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_aefb .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_eccd .TintTransform );_acbb :=_eccd .AlternateSpace .DecodeArray ();var (_abab uint32 ;_acce error ;);for {_abab ,_acce =_fdfd .ReadSample ();
if _acce ==_ef .EOF {break ;};if _acce !=nil {return img ,_acce ;};_fabg :=float64 (_abab )/_adbb ;_babbf ,_bgfaa :=_eccd .TintTransform .Evaluate ([]float64 {_fabg });if _bgfaa !=nil {return img ,_bgfaa ;};for _fccc ,_bcccg :=range _babbf {_fdfdc :=_cc .LinearInterpolate (_bcccg ,_acbb [_fccc *2],_acbb [_fccc *2+1],0,1);
if _bgfaa =_ecbfd .WriteSample (uint32 (_fdfdc *_adbb ));_bgfaa !=nil {return img ,_bgfaa ;};};};return _eccd .AlternateSpace .ImageToRGB (_fddbb (&_cfef ));};

// ToPdfObject implements interface PdfModel.
func (_edd *PdfActionHide )ToPdfObject ()_cg .PdfObject {_edd .PdfAction .ToPdfObject ();_dfc :=_edd ._ebd ;_beg :=_dfc .PdfObject .(*_cg .PdfObjectDictionary );_beg .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeHide )));_beg .SetIfNotNil ("\u0054",_edd .T );
_beg .SetIfNotNil ("\u0048",_edd .H );return _dfc ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fdfg *XObjectForm )GetContainingPdfObject ()_cg .PdfObject {return _fdfg ._eeecdg };

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_caed *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetTrailer returns the PDF's trailer dictionary.
func (_agfdb *PdfReader )GetTrailer ()(*_cg .PdfObjectDictionary ,error ){_ccfcc :=_agfdb ._bafg .GetTrailer ();if _ccfcc ==nil {return nil ,_fff .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ccfcc ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_gfce *PdfFilespec )ToPdfObject ()_cg .PdfObject {_cagfc :=_gfce .getDict ();_cagfc .Clear ();_cagfc .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cagfc .SetIfNotNil ("\u0046\u0053",_gfce .FS );
_cagfc .SetIfNotNil ("\u0046",_gfce .F );_cagfc .SetIfNotNil ("\u0055\u0046",_gfce .UF );_cagfc .SetIfNotNil ("\u0044\u004f\u0053",_gfce .DOS );_cagfc .SetIfNotNil ("\u004d\u0061\u0063",_gfce .Mac );_cagfc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gfce .Unix );
_cagfc .SetIfNotNil ("\u0049\u0044",_gfce .ID );_cagfc .SetIfNotNil ("\u0056",_gfce .V );_cagfc .SetIfNotNil ("\u0045\u0046",_gfce .EF );_cagfc .SetIfNotNil ("\u0052\u0046",_gfce .RF );_cagfc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gfce .Desc );_cagfc .SetIfNotNil ("\u0043\u0049",_gfce .CI );
return _gfce ._gdgcb ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_bafg *_cg .PdfParser ;_cedef _cg .PdfObject ;_fbbf *_cg .PdfIndirectObject ;_cdgde *_cg .PdfObjectDictionary ;_agdec []*_cg .PdfIndirectObject ;PageList []*PdfPage ;_geffg int ;_fbggd *_cg .PdfObjectDictionary ;_cbbca *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dfbag *Permissions ;_cfddg map[*PdfReader ]*PdfReader ;_ccaf []*PdfReader ;_eggbd *modelManager ;_ddae bool ;_eebec map[_cg .PdfObject ]struct{};_dgfb _ef .ReadSeeker ;_cabdf string ;_caedg bool ;_fgcfe *ReaderOpts ;
_eggbg bool ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ef .ReadSeeker )(*PdfFont ,error ){const _baegg =_eba .CharCode (32);const _feffb =_eba .CharCode (255);_ffcd ,_fgfa :=_d .ReadAll (r );if _fgfa !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fgfa );
return nil ,_fgfa ;};_eagae ,_fgfa :=_egg .TtfParse (_gbe .NewReader (_ffcd ));if _fgfa !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_fgfa );
return nil ,_fgfa ;};_gbgbe :=&pdfFontSimple {_bdbde :make (map[_eba .CharCode ]float64 ),fontCommon :fontCommon {_agbd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gbgbe ._edbda =_eba .NewWinAnsiEncoder ();_gbgbe ._fbdedg =_eagae .PostScriptName ;
_gbgbe .FirstChar =_cg .MakeInteger (int64 (_baegg ));_gbgbe .LastChar =_cg .MakeInteger (int64 (_feffb ));_accg :=1000.0/float64 (_eagae .UnitsPerEm );if len (_eagae .Widths )<=0{return nil ,_fff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ffcfg :=_accg *float64 (_eagae .Widths [0]);_aeag :=make ([]float64 ,0,_feffb -_baegg +1);for _eddda :=_baegg ;_eddda <=_feffb ;_eddda ++{_agff ,_caae :=_gbgbe .Encoder ().CharcodeToRune (_eddda );if !_caae {_aefb .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_eddda );
_aeag =append (_aeag ,_ffcfg );continue ;};_edacd ,_ccfg :=_eagae .Chars [_agff ];if !_ccfg {_aefb .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_aeag =append (_aeag ,_ffcfg );continue ;
};_bbff :=_accg *float64 (_eagae .Widths [_edacd ]);_aeag =append (_aeag ,_bbff );};_gbgbe .Widths =_cg .MakeIndirectObject (_cg .MakeArrayFromFloats (_aeag ));if len (_aeag )< int (_feffb -_baegg +1){_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_aeag ),255-32+1);
return nil ,_cg .ErrRangeError ;};for _fece :=_baegg ;_fece <=_feffb ;_fece ++{_gbgbe ._bdbde [_fece ]=_aeag [_fece -_baegg ];};_gbgbe .Encoding =_cg .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dbgga :=&PdfFontDescriptor {};
_dbgga .FontName =_cg .MakeName (_eagae .PostScriptName );_dbgga .Ascent =_cg .MakeFloat (_accg *float64 (_eagae .TypoAscender ));_dbgga .Descent =_cg .MakeFloat (_accg *float64 (_eagae .TypoDescender ));_dbgga .CapHeight =_cg .MakeFloat (_accg *float64 (_eagae .CapHeight ));
_dbgga .FontBBox =_cg .MakeArrayFromFloats ([]float64 {_accg *float64 (_eagae .Xmin ),_accg *float64 (_eagae .Ymin ),_accg *float64 (_eagae .Xmax ),_accg *float64 (_eagae .Ymax )});_dbgga .ItalicAngle =_cg .MakeFloat (_eagae .ItalicAngle );_dbgga .MissingWidth =_cg .MakeFloat (_accg *float64 (_eagae .Widths [0]));
_cafbb ,_fgfa :=_cg .MakeStream (_ffcd ,_cg .NewFlateEncoder ());if _fgfa !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fgfa );
return nil ,_fgfa ;};_cafbb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cg .MakeInteger (int64 (len (_ffcd ))));_dbgga .FontFile2 =_cafbb ;if _eagae .Bold {_dbgga .StemV =_cg .MakeInteger (120);}else {_dbgga .StemV =_cg .MakeInteger (70);
};_bdgfe :=_aceag ;if _eagae .IsFixedPitch {_bdgfe |=_ddda ;};if _eagae .ItalicAngle !=0{_bdgfe |=_gfca ;};_dbgga .Flags =_cg .MakeInteger (int64 (_bdgfe ));_gbgbe ._bfggb =_dbgga ;_faged :=&PdfFont {_cgdd :_gbgbe };return _faged ,nil ;};

// GetCerts returns the signature certificate chain.
func (_cbbff *PdfSignature )GetCerts ()([]*_a .Certificate ,error ){var _gafa []func ()([]*_a .Certificate ,error );switch _cdcg ,_ :=_cg .GetNameVal (_cbbff .SubFilter );_cdcg {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gafa =append (_gafa ,_cbbff .extractChainFromPKCS7 ,_cbbff .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gafa =append (_gafa ,_cbbff .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gafa =append (_gafa ,_cbbff .extractChainFromPKCS7 );
default:return nil ,_g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_cdcg );};for _ ,_fgfdd :=range _gafa {_afge ,_fdbfa :=_fgfdd ();if _fdbfa !=nil {return nil ,_fdbfa ;
};if len (_afge )> 0{return _afge ,nil ;};};return nil ,ErrSignNoCertificates ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cg .PdfObject )(_cg .PdfObjectName ,error ){var _fdef *_cg .PdfObjectName ;var _edee *_cg .PdfObjectArray ;if _fgbga ,_cfde :=obj .(*_cg .PdfIndirectObject );_cfde {if _ffbgb ,_accf :=_fgbga .PdfObject .(*_cg .PdfObjectArray );
_accf {_edee =_ffbgb ;}else if _ffbb ,_egcdf :=_fgbga .PdfObject .(*_cg .PdfObjectName );_egcdf {_fdef =_ffbb ;};}else if _gedc ,_bbcfe :=obj .(*_cg .PdfObjectArray );_bbcfe {_edee =_gedc ;}else if _gacb ,_bga :=obj .(*_cg .PdfObjectName );_bga {_fdef =_gacb ;
};if _fdef !=nil {switch *_fdef {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fdef ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fdef ,nil ;
};};if _edee !=nil &&_edee .Len ()> 0{if _cbbbb ,_aadb :=_edee .Get (0).(*_cg .PdfObjectName );_aadb {switch *_cbbbb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _edee .Len ()==1{return *_cbbbb ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cbbbb ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cbbbb ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cbbbb ,nil ;};};};return "",nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ce :=&PdfAction {};_ce ._ebd =_cg .MakeIndirectObject (_cg .MakeDict ());return _ce ;};func (_aaff *DSS )generateHashMap (_gefg []*_cg .PdfObjectStream )(map[string ]*_cg .PdfObjectStream ,error ){_egbag :=map[string ]*_cg .PdfObjectStream {};
for _ ,_gdgdb :=range _gefg {_daccb ,_cafb :=_cg .DecodeStream (_gdgdb );if _cafb !=nil {return nil ,_cafb ;};_fdbac ,_cafb :=_gdffd (_daccb );if _cafb !=nil {return nil ,_cafb ;};_egbag [string (_fdbac )]=_gdgdb ;};return _egbag ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ccff *PdfFontDescriptor )ToPdfObject ()_cg .PdfObject {_efee :=_cg .MakeDict ();if _ccff ._fabf ==nil {_ccff ._fabf =&_cg .PdfIndirectObject {};};_ccff ._fabf .PdfObject =_efee ;_efee .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ccff .FontName !=nil {_efee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ccff .FontName );};if _ccff .FontFamily !=nil {_efee .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ccff .FontFamily );};if _ccff .FontStretch !=nil {_efee .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ccff .FontStretch );
};if _ccff .FontWeight !=nil {_efee .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ccff .FontWeight );};if _ccff .Flags !=nil {_efee .Set ("\u0046\u006c\u0061g\u0073",_ccff .Flags );};if _ccff .FontBBox !=nil {_efee .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ccff .FontBBox );
};if _ccff .ItalicAngle !=nil {_efee .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ccff .ItalicAngle );};if _ccff .Ascent !=nil {_efee .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ccff .Ascent );};if _ccff .Descent !=nil {_efee .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ccff .Descent );
};if _ccff .Leading !=nil {_efee .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ccff .Leading );};if _ccff .CapHeight !=nil {_efee .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ccff .CapHeight );};if _ccff .XHeight !=nil {_efee .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ccff .XHeight );
};if _ccff .StemV !=nil {_efee .Set ("\u0053\u0074\u0065m\u0056",_ccff .StemV );};if _ccff .StemH !=nil {_efee .Set ("\u0053\u0074\u0065m\u0048",_ccff .StemH );};if _ccff .AvgWidth !=nil {_efee .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ccff .AvgWidth );
};if _ccff .MaxWidth !=nil {_efee .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ccff .MaxWidth );};if _ccff .MissingWidth !=nil {_efee .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ccff .MissingWidth );};if _ccff .FontFile !=nil {_efee .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ccff .FontFile );
};if _ccff .FontFile2 !=nil {_efee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ccff .FontFile2 );};if _ccff .FontFile3 !=nil {_efee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ccff .FontFile3 );};if _ccff .CharSet !=nil {_efee .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ccff .CharSet );
};if _ccff .Style !=nil {_efee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ccff .FontName );};if _ccff .Lang !=nil {_efee .Set ("\u004c\u0061\u006e\u0067",_ccff .Lang );};if _ccff .FD !=nil {_efee .Set ("\u0046\u0044",_ccff .FD );};if _ccff .CIDSet !=nil {_efee .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ccff .CIDSet );
};return _ccff ._fabf ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_dded *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _dded .Range };func _efbaf (_eeee _cg .PdfObject )(*PdfBorderStyle ,error ){_acg :=&PdfBorderStyle {};_acg ._fgdf =_eeee ;var _agde *_cg .PdfObjectDictionary ;_eeee =_cg .TraceToDirectObject (_eeee );
_agde ,_ccae :=_eeee .(*_cg .PdfObjectDictionary );if !_ccae {return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ffcf :=_agde .Get ("\u0054\u0079\u0070\u0065");_ffcf !=nil {_dee ,_efac :=_ffcf .(*_cg .PdfObjectName );
if !_efac {_aefb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ffcf );
}else {if *_dee !="\u0042\u006f\u0072\u0064\u0065\u0072"{_aefb .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_dee );};};};if _adaf :=_agde .Get ("\u0057");
_adaf !=nil {_gbge ,_cff :=_cg .GetNumberAsFloat (_adaf );if _cff !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cff );return nil ,_cff ;};_acg .W =&_gbge ;
};if _eaac :=_agde .Get ("\u0053");_eaac !=nil {_egda ,_dbfb :=_eaac .(*_cg .PdfObjectName );if !_dbfb {return nil ,_fff .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _cefe BorderStyle ;switch *_egda {case "\u0053":_cefe =BorderStyleSolid ;case "\u0044":_cefe =BorderStyleDashed ;case "\u0042":_cefe =BorderStyleBeveled ;case "\u0049":_cefe =BorderStyleInset ;case "\u0055":_cefe =BorderStyleUnderline ;default:_aefb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_egda );
return nil ,_fff .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_acg .S =&_cefe ;};if _ceab :=_agde .Get ("\u0044");_ceab !=nil {_ccge ,_beecf :=_ceab .(*_cg .PdfObjectArray );
if !_beecf {_aefb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_ceab );return nil ,_fff .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_geef ,_aff :=_ccge .ToIntegerArray ();if _aff !=nil {_aefb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_aff );
return nil ,_aff ;};_acg .D =&_geef ;};return _acg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dgde *PdfAnnotationPolyLine )ToPdfObject ()_cg .PdfObject {_dgde .PdfAnnotation .ToPdfObject ();_feb :=_dgde ._bed ;_aeaa :=_feb .PdfObject .(*_cg .PdfObjectDictionary );_dgde .PdfAnnotationMarkup .appendToPdfDictionary (_aeaa );_aeaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_aeaa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dgde .Vertices );_aeaa .SetIfNotNil ("\u004c\u0045",_dgde .LE );_aeaa .SetIfNotNil ("\u0042\u0053",_dgde .BS );_aeaa .SetIfNotNil ("\u0049\u0043",_dgde .IC );_aeaa .SetIfNotNil ("\u0042\u0045",_dgde .BE );
_aeaa .SetIfNotNil ("\u0049\u0054",_dgde .IT );_aeaa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dgde .Measure );return _feb ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_cafac *PdfColorCalGray )GetNumComponents ()int {return 1};func _cgccf (_eaecfe *PdfPage ){_fcaab :=_db .GetLicenseKey ();if _fcaab !=nil &&_fcaab .IsLicensed (){return ;};_ggcdc :=_cg .PdfObjectName ("\u0055\u0046\u0031");if !_eaecfe .Resources .HasFontByName (_ggcdc ){_eaecfe .Resources .SetFontByName (_ggcdc ,DefaultFont ().ToPdfObject ());
};var _efdfd []string ;_efdfd =append (_efdfd ,"\u0071");_efdfd =append (_efdfd ,"\u0042\u0054");_efdfd =append (_efdfd ,_g .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ggcdc .String ()));_efdfd =append (_efdfd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_efdfd =append (_efdfd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_egbagc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_efdfd =append (_efdfd ,_g .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_egbagc ));_efdfd =append (_efdfd ,"\u0045\u0054");_efdfd =append (_efdfd ,"\u0051");_cacc :=_gb .Join (_efdfd ,"\u000a");_eaecfe .AddContentStreamByString (_cacc );_eaecfe .ToPdfObject ();
};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_aacfea *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _aacfea ._ebca .(*PdfTilingPattern );};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_ebaaga *PdfTransformParamsDocMDP )String ()string {return _g .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_ebaaga .Type ,_ebaaga .P ,_ebaaga .V );};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_cgd :=NewPdfAction ();_de :=&PdfActionResetForm {};_de .PdfAction =_cgd ;_cgd .SetContext (_de );return _de ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gbae *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdfa :=vals [0];if _cdfa < 0.0||_cdfa > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cdfa );
return nil ,ErrColorOutOfRange ;};_eeedd :=NewPdfColorCalGray (_cdfa );return _eeedd ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fcdef :=&XObjectImage {};_cebbad :=&_cg .PdfObjectStream {};_cebbad .PdfObjectDictionary =_cg .MakeDict ();_fcdef ._cbfff =_cebbad ;return _fcdef ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_edae *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func _eacbf (_eddc *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_eddc }};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_effcge *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_affbg :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_dafc ,_gdad :=_effcge .GetNumPages ();if _gdad !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdad );
return nil ,_gdad ;};for _abcge :=1;_abcge <=_dafc ;_abcge ++{_bfed ,_efaga :=_effcge .GetPage (_abcge );if _efaga !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efaga );return nil ,_efaga ;};if opts .PageProcessCallback !=nil {_efaga =opts .PageProcessCallback (_abcge ,_bfed );
if _efaga !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efaga );return nil ,_efaga ;};}else if opts .PageCallback !=nil {opts .PageCallback (_abcge ,_bfed );};_efaga =_affbg .AddPage (_bfed );if _efaga !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efaga );
return nil ,_efaga ;};};_affbg ._cdadd =_effcge .PdfVersion ();if !opts .SkipInfo {_begag ,_efbb :=_effcge .GetPdfInfo ();if _efbb !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efbb );}else {_affbg ._aeea .PdfObject =_begag .ToPdfObject ();
};};if !opts .SkipMetadata {if _eabef :=_effcge ._fbggd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eabef !=nil {if _ebcf :=_affbg .SetCatalogMetadata (_eabef );_ebcf !=nil {return nil ,_ebcf ;};};};if !opts .SkipAcroForm {_cbeda :=_affbg .SetForms (_effcge .AcroForm );
if _cbeda !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbeda );return nil ,_cbeda ;};};if !opts .SkipOutlines {_affbg .AddOutlineTree (_effcge .GetOutlineTree ());};if !opts .SkipOCProperties {_dcedb ,_agagg :=_effcge .GetOCProperties ();
if _agagg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agagg );}else {_agagg =_affbg .SetOCProperties (_dcedb );if _agagg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agagg );};};};if !opts .SkipPageLabels {_efddf ,_cacbd :=_effcge .GetPageLabels ();
if _cacbd !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacbd );}else {_cacbd =_affbg .SetPageLabels (_efddf );if _cacbd !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cacbd );};};};if !opts .SkipNamedDests {_dcfga ,_cbbaba :=_effcge .GetNamedDestinations ();
if _cbbaba !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbbaba );}else {_cbbaba =_affbg .SetNamedDestinations (_dcfga );if _cbbaba !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbbaba );};};};if !opts .SkipNameDictionary {_fgggg ,_gbcg :=_effcge .GetNameDictionary ();
if _gbcg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbcg );}else {_gbcg =_affbg .SetNameDictionary (_fgggg );if _gbcg !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbcg );};};};if !opts .SkipRotation &&_effcge .Rotate !=nil {if _dgfee :=_affbg .SetRotation (*_effcge .Rotate );
_dgfee !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgfee );};};return &_affbg ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ad .File ,error ){const _gfgec ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_ccbdaa ,_gfcd :=_ad .Open (pdfFile );if _gfcd !=nil {return nil ,nil ,_gfcd ;};_eeaee ,_gfcd :=_dbafa (_ccbdaa ,opts ,true ,_gfgec );if _gfcd !=nil {_ccbdaa .Close ();return nil ,nil ,_gfcd ;};return _eeaee ,_ccbdaa ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gacdg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _gfed []*PdfField ;_bddgb :=map[*_cg .PdfIndirectObject ]struct{}{};for _ ,_gbgeg :=range _gacdg .PageList {_adgab ,_eagbe :=_gbgeg .GetAnnotations ();if _eagbe !=nil {return _eagbe ;
};for _ ,_dcddd :=range _adgab {var _fdfc *PdfField ;switch _cfcge :=_dcddd .GetContext ().(type ){case *PdfAnnotationWidget :if _cfcge ._fag !=nil {_fdfc =_cfcge ._fag ;break ;};if _ebcc ,_bdfff :=_cg .GetIndirect (_cfcge .Parent );_bdfff {_fdfc ,_eagbe =_gacdg .newPdfFieldFromIndirectObject (_ebcc ,nil );
if _eagbe ==nil {break ;};_aefb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ebcc ,_eagbe );
};if _cfcge ._bed !=nil {_fdfc ,_eagbe =_gacdg .newPdfFieldFromIndirectObject (_cfcge ._bed ,nil );if _eagbe ==nil {break ;};_aefb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cfcge ._bed ,_eagbe );
};};if _fdfc ==nil {continue ;};if _ ,_gffcc :=_bddgb [_fdfc ._gecee ];_gffcc {continue ;};_bddgb [_fdfc ._gecee ]=struct{}{};_gfed =append (_gfed ,_fdfc );};};if len (_gfed )==0{return nil ;};if _gacdg .AcroForm ==nil {_gacdg .AcroForm =NewPdfAcroForm ();
};_gacdg .AcroForm .Fields =&_gfed ;return nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_adff *XObjectForm )GetContentStream ()([]byte ,error ){_fdged ,_egab :=_cg .DecodeStream (_adff ._eeecdg );if _egab !=nil {return nil ,_egab ;};return _fdged ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ffeg *PdfPageResourcesColorspaces )ToPdfObject ()_cg .PdfObject {_adgg :=_cg .MakeDict ();for _ ,_efgbc :=range _ffeg .Names {_adgg .Set (_cg .PdfObjectName (_efgbc ),_ffeg .Colorspaces [_efgbc ].ToPdfObject ());};if _ffeg ._fgbda !=nil {_ffeg ._fgbda .PdfObject =_adgg ;
return _ffeg ._fgbda ;};return _adgg ;};func (_fbafda *PdfWriter )setWriter (_aacaaf _ef .Writer ){_fbafda ._befaf =_fbafda ._bdgde ;_fbafda ._ebdegf =_e .NewWriter (_aacaaf );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cbbd *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_cbbd .Base .GetNumComponents ();_cdeaf :=int (vals [0])*N ;
if _cdeaf < 0||(_cdeaf +N -1)>=len (_cbbd ._fbgafg ){_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cdeaf );return nil ,ErrColorOutOfRange ;};_bbab :=_cbbd ._fbgafg [_cdeaf :_cdeaf +N ];
var _egddg []float64 ;for _ ,_bdad :=range _bbab {_egddg =append (_egddg ,float64 (_bdad )/255.0);};_fffa ,_geab :=_cbbd .Base .ColorFromFloats (_egddg );if _geab !=nil {return nil ,_geab ;};return _fffa ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_eacaa *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cg .GetNumberAsFloat (_eacaa .CapHeight );};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ddbba *PdfAnnotation )ToPdfObject ()_cg .PdfObject {_gfag :=_ddbba ._bed ;_ccbb :=_gfag .PdfObject .(*_cg .PdfObjectDictionary );_ccbb .Clear ();_ccbb .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0041\u006e\u006eo\u0074"));_ccbb .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ddbba .Rect );
_ccbb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ddbba .Contents );_ccbb .SetIfNotNil ("\u0050",_ddbba .P );_ccbb .SetIfNotNil ("\u004e\u004d",_ddbba .NM );_ccbb .SetIfNotNil ("\u004d",_ddbba .M );_ccbb .SetIfNotNil ("\u0046",_ddbba .F );
_ccbb .SetIfNotNil ("\u0041\u0050",_ddbba .AP );_ccbb .SetIfNotNil ("\u0041\u0053",_ddbba .AS );_ccbb .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ddbba .Border );_ccbb .SetIfNotNil ("\u0043",_ddbba .C );_ccbb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ddbba .StructParent );
_ccbb .SetIfNotNil ("\u004f\u0043",_ddbba .OC );return _gfag ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_agda *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_eefgbd :=_agda ._bafg .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _eefgbd {return nil ,_fff .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_eefgbd {return _agda ,nil ;};if _agda ._ccaf [revisionNumber ]!=nil {return _agda ._ccaf [revisionNumber ],nil ;};_bcfdb :=_agda ;for _gcbeg :=_eefgbd -1;_gcbeg >=revisionNumber ;_gcbeg --{_ebbfe ,_bgfdg :=_bcfdb .GetPreviousRevision ();
if _bgfdg !=nil {return nil ,_bgfdg ;};_agda ._ccaf [_gcbeg ]=_ebbfe ;_bcfdb =_ebbfe ;};return _bcfdb ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cg .PdfObjectString ;Author *_cg .PdfObjectString ;Subject *_cg .PdfObjectString ;Keywords *_cg .PdfObjectString ;Creator *_cg .PdfObjectString ;Producer *_cg .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_cg .PdfObjectName ;
_ffga *_cg .PdfObjectDictionary ;};

// GetOutlineTree returns the outline tree.
func (_aeeec *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _aeeec ._cbbca };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_feada *Image )ConvertToBinary ()error {if _feada .ColorComponents ==1&&_feada .BitsPerComponent ==1{return nil ;};_eabac ,_geacb :=_feada .ToGoImage ();if _geacb !=nil {return _geacb ;};_aacfe ,_geacb :=_cc .MonochromeConverter .Convert (_eabac );
if _geacb !=nil {return _geacb ;};_feada .Data =_aacfe .Base ().Data ;_feada ._dbcf ,_geacb =_cc .ScaleAlphaToMonochrome (_feada ._dbcf ,int (_feada .Width ),int (_feada .Height ));if _geacb !=nil {return _geacb ;};_feada .BitsPerComponent =1;_feada .ColorComponents =1;
_feada ._gegd =nil ;return nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gcdc *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gcdc .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_egbba :_cg .MakeDict ()};
};func (_caf *PdfReader )newPdfActionImportDataFromDict (_age *_cg .PdfObjectDictionary )(*PdfActionImportData ,error ){_gaec ,_bfgg :=_eda (_age .Get ("\u0046"));if _bfgg !=nil {return nil ,_bfgg ;};return &PdfActionImportData {F :_gaec },nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gecee :_cg .MakeIndirectObject (_cg .MakeDict ())}};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fffc *Image )Resample (targetBitsPerComponent int64 ){if _fffc .BitsPerComponent ==targetBitsPerComponent {return ;};_gaged :=_fffc .GetSamples ();if targetBitsPerComponent < _fffc .BitsPerComponent {_dcbac :=_fffc .BitsPerComponent -targetBitsPerComponent ;
for _ccegaa :=range _gaged {_gaged [_ccegaa ]>>=uint (_dcbac );};}else if targetBitsPerComponent > _fffc .BitsPerComponent {_befag :=targetBitsPerComponent -_fffc .BitsPerComponent ;for _bbced :=range _gaged {_gaged [_bbced ]<<=uint (_befag );};};_fffc .BitsPerComponent =targetBitsPerComponent ;
if _fffc .BitsPerComponent < 8{_fffc .resampleLowBits (_gaged );return ;};_fbfcc :=_cc .BytesPerLine (int (_fffc .Width ),int (_fffc .BitsPerComponent ),_fffc .ColorComponents );_cefed :=make ([]byte ,_fbfcc *int (_fffc .Height ));var (_fcgea ,_gfcbf ,_fdcaa ,_bada int ;
_dcddb uint32 ;);for _fdcaa =0;_fdcaa < int (_fffc .Height );_fdcaa ++{_fcgea =_fdcaa *_fbfcc ;_gfcbf =(_fdcaa +1)*_fbfcc -1;_bfff :=_ggc .ResampleUint32 (_gaged [_fcgea :_gfcbf ],int (targetBitsPerComponent ),8);for _bada ,_dcddb =range _bfff {_cefed [_bada +_fcgea ]=byte (_dcddb );
};};_fffc .Data =_cefed ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_beaff *PdfWriter )SetRotation (rotate int64 )error {_afce ,_egdcf :=_cg .GetDict (_beaff ._agacf );if !_egdcf {return ErrTypeCheck ;};_afce .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cg .MakeInteger (rotate ));return nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_badcc *PdfFieldButton )IsPush ()bool {return _badcc .GetType ()==ButtonTypePush };

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cg .PdfObject ;B _cg .PdfObject ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_fcecb *PdfAcroForm )ToPdfObject ()_cg .PdfObject {_geacf :=_fcecb ._gbgf ;_dfbdb :=_geacf .PdfObject .(*_cg .PdfObjectDictionary );if _fcecb .Fields !=nil {_cgccc :=_cg .PdfObjectArray {};for _ ,_afffc :=range *_fcecb .Fields {_bdbdd :=_afffc .GetContext ();
if _bdbdd !=nil {_cgccc .Append (_bdbdd .ToPdfObject ());}else {_cgccc .Append (_afffc .ToPdfObject ());};};_dfbdb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cgccc );};if _fcecb .NeedAppearances !=nil {_dfbdb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_fcecb .NeedAppearances );
};if _fcecb .SigFlags !=nil {_dfbdb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_fcecb .SigFlags );};if _fcecb .CO !=nil {_dfbdb .Set ("\u0043\u004f",_fcecb .CO );};if _fcecb .DR !=nil {_dfbdb .Set ("\u0044\u0052",_fcecb .DR .ToPdfObject ());
};if _fcecb .DA !=nil {_dfbdb .Set ("\u0044\u0041",_fcecb .DA );};if _fcecb .Q !=nil {_dfbdb .Set ("\u0051",_fcecb .Q );};if _fcecb .XFA !=nil {_dfbdb .Set ("\u0058\u0046\u0041",_fcecb .XFA );};return _geacf ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cgfd *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fff .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_bfegd ,_fffb :=_cc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbcf ,img ._gegd );if _fffb !=nil {return img ,_fffb ;};_bgde ,_fffb :=_cc .GrayConverter .Convert (_bfegd );if _fffb !=nil {return img ,_fffb ;
};return _fddbb (_bgde .Base ()),nil ;};func (_feeff *PdfReader )newPdfAnnotationTrapNetFromDict (_bbgc *_cg .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gfc :=PdfAnnotationTrapNet {};return &_gfc ,nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func _dfbe (_ebgg _cg .PdfObject ,_ebeg *fontCommon )(*_cb .CMap ,error ){_fbfbe ,_ggeae :=_cg .GetStream (_ebgg );if !_ggeae {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ebgg );
return nil ,_cg .ErrTypeError ;};_bddd ,_aggda :=_cg .DecodeStream (_fbfbe );if _aggda !=nil {return nil ,_aggda ;};_bdacd ,_aggda :=_cb .LoadCmapFromData (_bddd ,!_ebeg .isCIDFont ());if _aggda !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fbfbe .ObjectNumber ,_aggda );
};return _bdacd ,_aggda ;};func (_efgbd *PdfWriter )writeOutputIntents ()error {if len (_efgbd ._efafa )==0{return nil ;};_ddega :=make ([]_cg .PdfObject ,len (_efgbd ._efafa ));for _afcece ,_gcdg :=range _efgbd ._efafa {_agdf :=_gcdg .ToPdfObject ();_ddega [_afcece ]=_cg .MakeIndirectObject (_agdf );
};_badg :=_cg .MakeIndirectObject (_cg .MakeArray (_ddega ...));_efgbd ._adafd .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_badg );if _faaf :=_efgbd .addObjects (_badg );_faaf !=nil {return _faaf ;};return nil ;
};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_gfa :=NewPdfAnnotation ();_eae :=&PdfAnnotationWidget {};_eae .PdfAnnotation =_gfa ;_gfa .SetContext (_eae );return _eae ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_dddcb *PdfFont )BytesToCharcodes (data []byte )[]_eba .CharCode {_aefb .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cegb ,_gcgc :=_dddcb ._cgdd .(*pdfFontType0 );_gcgc &&_cegb ._ddfb !=nil {if _fbbc ,_bdfa :=_cegb .bytesToCharcodes (data );_bdfa {return _fbbc ;};};var (_dagd =make ([]_eba .CharCode ,0,len (data )+len (data )%2);_dafgcb =_dddcb .baseFields (););if _dafgcb ._dcded !=nil {if _feedd ,_edaf :=_dafgcb ._dcded .BytesToCharcodes (data );
_edaf {for _ ,_bgfag :=range _feedd {_dagd =append (_dagd ,_eba .CharCode (_bgfag ));};return _dagd ;};};if _dafgcb .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _eddfb :=0;_eddfb < len (data );_eddfb +=2{_gfff :=uint16 (data [_eddfb ])<<8|uint16 (data [_eddfb +1]);_dagd =append (_dagd ,_eba .CharCode (_gfff ));};}else {for _ ,_gfgde :=range data {_dagd =append (_dagd ,_eba .CharCode (_gfgde ));
};};return _dagd ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dgccf *PdfPage )GetContentStreams ()([]string ,error ){_dcab :=_dgccf .GetContentStreamObjs ();var _cfaa []string ;for _ ,_gedd :=range _dcab {_agfbf ,_debgf :=_babbe (_gedd );if _debgf !=nil {return nil ,_debgf ;};_cfaa =append (_cfaa ,_agfbf );
};return _cfaa ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_gagedb []byte )(_abddd int ,_fecb error );};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_cg .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fcgd *_cg .PdfIndirectObject ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cg .PdfIndirectObject ;SV *_cg .PdfIndirectObject ;};func _gbcfb (_cebcb _cg .PdfObject )(*PdfColorspaceCalGray ,error ){_ddee :=NewPdfColorspaceCalGray ();if _bcgg ,_ageag :=_cebcb .(*_cg .PdfIndirectObject );
_ageag {_ddee ._geag =_bcgg ;};_cebcb =_cg .TraceToDirectObject (_cebcb );_dafd ,_fae :=_cebcb .(*_cg .PdfObjectArray );if !_fae {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dafd .Len ()!=2{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cebcb =_cg .TraceToDirectObject (_dafd .Get (0));_bgda ,_fae :=_cebcb .(*_cg .PdfObjectName );if !_fae {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_bgda !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_g .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cebcb =_cg .TraceToDirectObject (_dafd .Get (1));
_cdde ,_fae :=_cebcb .(*_cg .PdfObjectDictionary );if !_fae {return nil ,_g .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_cebcb =_cdde .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cebcb =_cg .TraceToDirectObject (_cebcb );_aeff ,_fae :=_cebcb .(*_cg .PdfObjectArray );if !_fae {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _aeff .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cbff ,_ebad :=_aeff .GetAsFloat64Slice ();
if _ebad !=nil {return nil ,_ebad ;};_ddee .WhitePoint =_cbff ;_cebcb =_cdde .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cebcb !=nil {_cebcb =_cg .TraceToDirectObject (_cebcb );_cbaeb ,_ebcd :=_cebcb .(*_cg .PdfObjectArray );
if !_ebcd {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cbaeb .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_cecdg ,_agfc :=_cbaeb .GetAsFloat64Slice ();if _agfc !=nil {return nil ,_agfc ;};_ddee .BlackPoint =_cecdg ;};_cebcb =_cdde .Get ("\u0047\u0061\u006dm\u0061");if _cebcb !=nil {_cebcb =_cg .TraceToDirectObject (_cebcb );_abdb ,_gfgcd :=_cg .GetNumberAsFloat (_cebcb );
if _gfgcd !=nil {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ddee .Gamma =_abdb ;};return _ddee ,nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cecd :=NewPdfAnnotation ();_def :=&PdfAnnotationInk {};_def .PdfAnnotation =_cecd ;_def .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cecd .SetContext (_def );return _def ;};

// ToPdfObject implements interface PdfModel.
func (_afgd *PdfAnnotationUnderline )ToPdfObject ()_cg .PdfObject {_afgd .PdfAnnotation .ToPdfObject ();_bfag :=_afgd ._bed ;_fbfa :=_bfag .PdfObject .(*_cg .PdfObjectDictionary );_afgd .PdfAnnotationMarkup .appendToPdfDictionary (_fbfa );_fbfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_fbfa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_afgd .QuadPoints );return _bfag ;};func _dfba (_fbefc _cg .PdfObject )(*PdfFunctionType2 ,error ){_afdcf :=&PdfFunctionType2 {};var _agag *_cg .PdfObjectDictionary ;if _cecg ,_ecba :=_fbefc .(*_cg .PdfIndirectObject );
_ecba {_affa ,_adfab :=_cecg .PdfObject .(*_cg .PdfObjectDictionary );if !_adfab {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afdcf ._gfddd =_cecg ;_agag =_affa ;}else if _bbaf ,_bcaff :=_fbefc .(*_cg .PdfObjectDictionary );
_bcaff {_agag =_bbaf ;}else {return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aefb .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_agag .String ());_eccc ,_bcge :=_cg .TraceToDirectObject (_agag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );
if !_bcge {_aefb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eccc .Len ()< 0||_eccc .Len ()%2!=0{_aefb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ddfg ,_fecga :=_eccc .ToFloat64Array ();if _fecga !=nil {return nil ,_fecga ;};_afdcf .Domain =_ddfg ;_eccc ,_bcge =_cg .TraceToDirectObject (_agag .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );if _bcge {if _eccc .Len ()< 0||_eccc .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fecac ,_debf :=_eccc .ToFloat64Array ();if _debf !=nil {return nil ,_debf ;};_afdcf .Range =_fecac ;};_eccc ,_bcge =_cg .TraceToDirectObject (_agag .Get ("\u0043\u0030")).(*_cg .PdfObjectArray );if _bcge {_abdc ,_ebbc :=_eccc .ToFloat64Array ();if _ebbc !=nil {return nil ,_ebbc ;
};_afdcf .C0 =_abdc ;};_eccc ,_bcge =_cg .TraceToDirectObject (_agag .Get ("\u0043\u0031")).(*_cg .PdfObjectArray );if _bcge {_abfa ,_gfeea :=_eccc .ToFloat64Array ();if _gfeea !=nil {return nil ,_gfeea ;};_afdcf .C1 =_abfa ;};if len (_afdcf .C0 )!=len (_afdcf .C1 ){_aefb .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_cg .ErrRangeError ;};N ,_fecga :=_cg .GetNumberAsFloat (_cg .TraceToDirectObject (_agag .Get ("\u004e")));if _fecga !=nil {_aefb .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_agag .String ());
return nil ,_fecga ;};_afdcf .N =N ;return _afdcf ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_ddbeg *PdfPattern )ToPdfObject ()_cg .PdfObject {_abcdad :=_ddbeg .getDict ();_abcdad .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_abcdad .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cg .MakeInteger (_ddbeg .PatternType ));
return _ddbeg ._bcafe ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_cg .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_cg .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ef .ReadSeeker )(*PdfReader ,error ){const _cbbdc ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dbafa (rs ,&ReaderOpts {LazyLoad :true },false ,_cbbdc );
};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_cagcg *_cg .PdfObjectDictionary ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_fedf *PdfPage )GetPageAsIndirectObject ()*_cg .PdfIndirectObject {return _fedf ._aegd };

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cg .PdfObjectBool ;SigFlags *_cg .PdfObjectInteger ;CO *_cg .PdfObjectArray ;DR *PdfPageResources ;DA *_cg .PdfObjectString ;Q *_cg .PdfObjectInteger ;XFA _cg .PdfObject ;_gbgf *_cg .PdfIndirectObject ;
};func (_bccg *PdfReader )newPdfAcroFormFromDict (_dfda *_cg .PdfIndirectObject ,_feda *_cg .PdfObjectDictionary )(*PdfAcroForm ,error ){_ccce :=NewPdfAcroForm ();if _dfda !=nil {_ccce ._gbgf =_dfda ;_dfda .PdfObject =_cg .MakeDict ();};if _defed :=_feda .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");
_defed !=nil &&!_cg .IsNullObject (_defed ){_gcca ,_eebe :=_cg .GetArray (_defed );if !_eebe {return nil ,_g .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_defed );
};var _gdgf []*PdfField ;for _ ,_egfac :=range _gcca .Elements (){_cbef ,_bcdc :=_cg .GetIndirect (_egfac );if !_bcdc {if _ ,_aafeb :=_egfac .(*_cg .PdfObjectNull );_aafeb {_aefb .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_aefb .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_egfac );
return nil ,_g .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddfag ,_feaac :=_bccg .newPdfFieldFromIndirectObject (_cbef ,nil );
if _feaac !=nil {return nil ,_feaac ;};_aefb .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ddfag );_gdgf =append (_gdgf ,_ddfag );};_ccce .Fields =&_gdgf ;};if _ffaf :=_feda .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_ffaf !=nil {_cedfd ,_ffagf :=_cg .GetBool (_ffaf );if _ffagf {_ccce .NeedAppearances =_cedfd ;}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ffaf );
};};if _efcc :=_feda .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_efcc !=nil {_cagga ,_cbfdag :=_cg .GetInt (_efcc );if _cbfdag {_ccce .SigFlags =_cagga ;}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efcc );
};};if _dccff :=_feda .Get ("\u0043\u004f");_dccff !=nil {_fdaca ,_fdfee :=_cg .GetArray (_dccff );if _fdfee {_ccce .CO =_fdaca ;}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dccff );
};};if _gdabg :=_feda .Get ("\u0044\u0052");_gdabg !=nil {if _bcce ,_aedea :=_cg .GetDict (_gdabg );_aedea {_bcfc ,_bggf :=NewPdfPageResourcesFromDict (_bcce );if _bggf !=nil {_aefb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_bggf );
return nil ,_bggf ;};_ccce .DR =_bcfc ;}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gdabg );};};if _bddc :=_feda .Get ("\u0044\u0041");
_bddc !=nil {_dbfg ,_eccdf :=_cg .GetString (_bddc );if _eccdf {_ccce .DA =_dbfg ;}else {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bddc );
};};if _fabgf :=_feda .Get ("\u0051");_fabgf !=nil {_acdc ,_dffcc :=_cg .GetInt (_fabgf );if _dffcc {_ccce .Q =_acdc ;}else {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fabgf );
};};if _bccge :=_feda .Get ("\u0058\u0046\u0041");_bccge !=nil {_ccce .XFA =_bccge ;};_ccce .ToPdfObject ();return _ccce ,nil ;};func (_dab *PdfReader )newPdfAnnotationCircleFromDict (_cge *_cg .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bdgec :=PdfAnnotationCircle {};
_ddg ,_abbc :=_dab .newPdfAnnotationMarkupFromDict (_cge );if _abbc !=nil {return nil ,_abbc ;};_bdgec .PdfAnnotationMarkup =_ddg ;_bdgec .BS =_cge .Get ("\u0042\u0053");_bdgec .IC =_cge .Get ("\u0049\u0043");_bdgec .BE =_cge .Get ("\u0042\u0045");_bdgec .RD =_cge .Get ("\u0052\u0044");
return &_bdgec ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fbgbb *PdfShading )GetContext ()PdfModel {return _fbgbb ._caeg };func (_cfdc *PdfReader )loadAction (_fedb _cg .PdfObject )(*PdfAction ,error ){if _eefe ,_egef :=_cg .GetIndirect (_fedb );_egef {_bac ,_ecfb :=_cfdc .newPdfActionFromIndirectObject (_eefe );
if _ecfb !=nil {return nil ,_ecfb ;};return _bac ,nil ;}else if !_cg .IsNullObject (_fedb ){return nil ,_fff .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_afbda *Image )GetParamsDict ()*_cg .PdfObjectDictionary {_febff :=_cg .MakeDict ();_febff .Set ("\u0057\u0069\u0064t\u0068",_cg .MakeInteger (_afbda .Width ));_febff .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cg .MakeInteger (_afbda .Height ));
_febff .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cg .MakeInteger (int64 (_afbda .ColorComponents )));_febff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cg .MakeInteger (_afbda .BitsPerComponent ));
return _febff ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bceff *PdfShading )ToPdfObject ()_cg .PdfObject {_bfdee :=_bceff ._ceabf ;_gbabb ,_cadfc :=_bceff .getShadingDict ();if _cadfc !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bceff .ShadingType !=nil {_gbabb .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bceff .ShadingType );};if _bceff .ColorSpace !=nil {_gbabb .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bceff .ColorSpace .ToPdfObject ());
};if _bceff .Background !=nil {_gbabb .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bceff .Background );};if _bceff .BBox !=nil {_gbabb .Set ("\u0042\u0042\u006f\u0078",_bceff .BBox .ToPdfObject ());};if _bceff .AntiAlias !=nil {_gbabb .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bceff .AntiAlias );
};return _bfdee ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gfgeaa ,_bbgab :=_ad .Open (filePath );if _bbgab !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bbgab );
return nil ,_bbgab ;};defer _gfgeaa .Close ();return NewPdfFontFromTTF (_gfgeaa );};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_ffbbe *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetVersion gets the document version.
func (_bgfc *PdfWriter )GetVersion ()_cg .Version {return _bgfc ._cdadd };

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ffdbd *PdfReader )GetIndirectObjectByNumber (number int )(_cg .PdfObject ,error ){_bdcec ,_gaac :=_ffdbd ._bafg .LookupByNumber (number );return _bdcec ,_gaac ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_gddag *PdfWriter )SetOptimizer (optimizer Optimizer ){_gddag ._fabb =optimizer };func (_bbfb *DSS )generateHashMaps ()error {_fbgef ,_fbfgf :=_bbfb .generateHashMap (_bbfb .Certs );if _fbfgf !=nil {return _fbfgf ;};_eabc ,_fbfgf :=_bbfb .generateHashMap (_bbfb .OCSPs );
if _fbfgf !=nil {return _fbfgf ;};_bagg ,_fbfgf :=_bbfb .generateHashMap (_bbfb .CRLs );if _fbfgf !=nil {return _fbfgf ;};_bbfb ._dagc =_fbgef ;_bbfb ._ccag =_eabc ;_bbfb ._bfcdf =_bagg ;return nil ;};

// SetBorderWidth sets the style's border width.
func (_abc *PdfBorderStyle )SetBorderWidth (width float64 ){_abc .W =&width };

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_faac *PdfWriter )ApplyStandard (optimizer StandardApplier ){_faac ._dfbga =optimizer };func (_cbfeb *PdfFont )baseFields ()*fontCommon {if _cbfeb ._cgdd ==nil {_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _cbfeb ._cgdd .baseFields ();};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_agf :=&PdfAppender {_fgeee :reader ._dgfb ,Reader :reader ,_gdec :reader ._bafg ,_eead :reader ._eebec };_aege ,_dfd :=_agf ._fgeee .Seek (0,_ef .SeekEnd );
if _dfd !=nil {return nil ,_dfd ;};_agf ._gafg =_aege ;if _ ,_dfd =_agf ._fgeee .Seek (0,_ef .SeekStart );_dfd !=nil {return nil ,_dfd ;};_agf ._afa ,_dfd =NewPdfReaderWithOpts (_agf ._fgeee ,opts );if _dfd !=nil {return nil ,_dfd ;};for _ ,_gce :=range _agf .Reader .GetObjectNums (){if _agf ._gagd < _gce {_agf ._gagd =_gce ;
};};_agf ._bgc =_agf ._gdec .GetXrefTable ();_agf ._gecf =_agf ._gdec .GetXrefOffset ();_agf ._fgcg =append (_agf ._fgcg ,_agf ._afa .PageList ...);_agf ._fage =make (map[_cg .PdfObject ]struct{});_agf ._eddf =make (map[_cg .PdfObject ]int64 );_agf ._eafe =make (map[_cg .PdfObject ]struct{});
_agf ._aagf =_agf ._afa .AcroForm ;_agf ._ddagb =_agf ._afa .DSS ;if opts !=nil {_agf ._daad =opts .Password ;};if encryptOptions !=nil {_agf ._cgeb =encryptOptions ;};return _agf ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fdggb *LTV )Enable (sig *PdfSignature ,extraCerts []*_a .Certificate )error {if _cagce :=_fdggb .validateSig (sig );_cagce !=nil {return _cagce ;};_faea ,_agdeg :=_fdggb .generateVRIKey (sig );if _agdeg !=nil {return _agdeg ;};if _ ,_bbgef :=_fdggb ._ggfebf .VRI [_faea ];
_bbgef &&_fdggb .SkipExisting {return nil ;};_gecdb ,_agdeg :=sig .GetCerts ();if _agdeg !=nil {return _agdeg ;};return _fdggb .enable (_gecdb ,extraCerts ,_faea );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cg .PdfObjectStream )(*XObjectImage ,error ){_adcdd :=&XObjectImage {};_adcdd ._cbfff =stream ;_gdbfe :=*(stream .PdfObjectDictionary );_bcfef ,_baagce :=_cg .NewEncoderFromStream (stream );if _baagce !=nil {return nil ,_baagce ;
};_adcdd .Filter =_bcfef ;if _gdee :=_cg .TraceToDirectObject (_gdbfe .Get ("\u0057\u0069\u0064t\u0068"));_gdee !=nil {_dabff ,_cadbe :=_gdee .(*_cg .PdfObjectInteger );if !_cadbe {return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ffedg :=int64 (*_dabff );_adcdd .Width =&_ffedg ;}else {return nil ,_fff .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _abbcd :=_cg .TraceToDirectObject (_gdbfe .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_abbcd !=nil {_bedcg ,_bacac :=_abbcd .(*_cg .PdfObjectInteger );if !_bacac {return nil ,_fff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_feag :=int64 (*_bedcg );
_adcdd .Height =&_feag ;}else {return nil ,_fff .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _bggbb :=_cg .TraceToDirectObject (_gdbfe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_bggbb !=nil {_cdccf ,_accd :=NewPdfColorspaceFromPdfObject (_bggbb );if _accd !=nil {return nil ,_accd ;};_adcdd .ColorSpace =_cdccf ;}else {_aefb .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_adcdd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _bdabb :=_cg .TraceToDirectObject (_gdbfe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_bdabb !=nil {_ecgee ,_edgeca :=_bdabb .(*_cg .PdfObjectInteger );
if !_edgeca {return nil ,_fff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_afcdc :=int64 (*_ecgee );_adcdd .BitsPerComponent =&_afcdc ;};_adcdd .Intent =_gdbfe .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_adcdd .ImageMask =_gdbfe .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_adcdd .Mask =_gdbfe .Get ("\u004d\u0061\u0073\u006b");_adcdd .Decode =_gdbfe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_adcdd .Interpolate =_gdbfe .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_adcdd .Alternatives =_gdbfe .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_adcdd .SMask =_gdbfe .Get ("\u0053\u004d\u0061s\u006b");_adcdd .SMaskInData =_gdbfe .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_adcdd .Matte =_gdbfe .Get ("\u004d\u0061\u0074t\u0065");_adcdd .Name =_gdbfe .Get ("\u004e\u0061\u006d\u0065");_adcdd .StructParent =_gdbfe .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_adcdd .ID =_gdbfe .Get ("\u0049\u0044");
_adcdd .OPI =_gdbfe .Get ("\u004f\u0050\u0049");_adcdd .Metadata =_gdbfe .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adcdd .OC =_gdbfe .Get ("\u004f\u0043");_adcdd .Stream =stream .Stream ;return _adcdd ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ee :=NewPdfAction ();_dfb :=&PdfActionImportData {};_dfb .PdfAction =_ee ;_ee .SetContext (_dfb );return _dfb ;};func _cacg (_cfbb _cg .PdfObject )(*PdfPageResourcesColorspaces ,error ){_eggbe :=&PdfPageResourcesColorspaces {};
if _gbgbef ,_bbacg :=_cfbb .(*_cg .PdfIndirectObject );_bbacg {_eggbe ._fgbda =_gbgbef ;_cfbb =_gbgbef .PdfObject ;};_cegeb ,_daeec :=_cg .GetDict (_cfbb );if !_daeec {return nil ,_fff .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_eggbe .Names =[]string {};_eggbe .Colorspaces =map[string ]PdfColorspace {};for _ ,_ebdgb :=range _cegeb .Keys (){_defbe :=_cegeb .Get (_ebdgb );_eggbe .Names =append (_eggbe .Names ,string (_ebdgb ));_aebf ,_eegf :=NewPdfColorspaceFromPdfObject (_defbe );
if _eegf !=nil {return nil ,_eegf ;};_eggbe .Colorspaces [string (_ebdgb )]=_aebf ;};return _eggbe ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_adde *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _adde .flattenFieldsWithOpts (false ,appgen ,opts );};

// ToPdfObject implements interface PdfModel.
func (_afgf *PdfAnnotationSound )ToPdfObject ()_cg .PdfObject {_afgf .PdfAnnotation .ToPdfObject ();_bcdb :=_afgf ._bed ;_dggda :=_bcdb .PdfObject .(*_cg .PdfObjectDictionary );_afgf .PdfAnnotationMarkup .appendToPdfDictionary (_dggda );_dggda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u006f\u0075n\u0064"));
_dggda .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_afgf .Sound );_dggda .SetIfNotNil ("\u004e\u0061\u006d\u0065",_afgf .Name );return _bcdb ;};func _fegfa (_defcg *_cg .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ceabd :=PdfShadingType6 {};_ceec :=_defcg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ceec ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgaf ,_dfecfg :=_ceec .(*_cg .PdfObjectInteger );if !_dfecfg {_aefb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ceec );
return nil ,_cg .ErrTypeError ;};_ceabd .BitsPerCoordinate =_fgaf ;_ceec =_defcg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ceec ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fgaf ,_dfecfg =_ceec .(*_cg .PdfObjectInteger );if !_dfecfg {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ceec );
return nil ,_cg .ErrTypeError ;};_ceabd .BitsPerComponent =_fgaf ;_ceec =_defcg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ceec ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgaf ,_dfecfg =_ceec .(*_cg .PdfObjectInteger );if !_dfecfg {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ceec );
return nil ,_cg .ErrTypeError ;};_ceabd .BitsPerComponent =_fgaf ;_ceec =_defcg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ceec ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbgg ,_dfecfg :=_ceec .(*_cg .PdfObjectArray );if !_dfecfg {_aefb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceec );
return nil ,_cg .ErrTypeError ;};_ceabd .Decode =_gbgg ;if _ebeaeg :=_defcg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebeaeg !=nil {_ceabd .Function =[]PdfFunction {};if _abafg ,_baaed :=_ebeaeg .(*_cg .PdfObjectArray );_baaed {for _ ,_fecgdb :=range _abafg .Elements (){_bbfg ,_ggecg :=_eeafe (_fecgdb );
if _ggecg !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggecg );return nil ,_ggecg ;};_ceabd .Function =append (_ceabd .Function ,_bbfg );
};}else {_debga ,_cebgf :=_eeafe (_ebeaeg );if _cebgf !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cebgf );return nil ,_cebgf ;
};_ceabd .Function =append (_ceabd .Function ,_debga );};};return &_ceabd ,nil ;};func _dfeg (_gcbe _cg .PdfObject )(*PdfColorspaceCalRGB ,error ){_aedg :=NewPdfColorspaceCalRGB ();if _cdff ,_bdbf :=_gcbe .(*_cg .PdfIndirectObject );_bdbf {_aedg ._bdbc =_cdff ;
};_gcbe =_cg .TraceToDirectObject (_gcbe );_dgca ,_daadf :=_gcbe .(*_cg .PdfObjectArray );if !_daadf {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgca .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gcbe =_cg .TraceToDirectObject (_dgca .Get (0));_fcbc ,_daadf :=_gcbe .(*_cg .PdfObjectName );if !_daadf {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_fcbc !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_g .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gcbe =_cg .TraceToDirectObject (_dgca .Get (1));
_fcdc ,_daadf :=_gcbe .(*_cg .PdfObjectDictionary );if !_daadf {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_gcbe =_fcdc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gcbe =_cg .TraceToDirectObject (_gcbe );_cadf ,_daadf :=_gcbe .(*_cg .PdfObjectArray );if !_daadf {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _cadf .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_dcgd ,_begcf :=_cadf .GetAsFloat64Slice ();
if _begcf !=nil {return nil ,_begcf ;};_aedg .WhitePoint =_dcgd ;_gcbe =_fcdc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcbe !=nil {_gcbe =_cg .TraceToDirectObject (_gcbe );_ecda ,_aaac :=_gcbe .(*_cg .PdfObjectArray );if !_aaac {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _ecda .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gdbc ,_fecg :=_ecda .GetAsFloat64Slice ();
if _fecg !=nil {return nil ,_fecg ;};_aedg .BlackPoint =_gdbc ;};_gcbe =_fcdc .Get ("\u0047\u0061\u006dm\u0061");if _gcbe !=nil {_gcbe =_cg .TraceToDirectObject (_gcbe );_fefd ,_dag :=_gcbe .(*_cg .PdfObjectArray );if !_dag {return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _fefd .Len ()!=3{return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_ggabe ,_afca :=_fefd .GetAsFloat64Slice ();if _afca !=nil {return nil ,_afca ;
};_aedg .Gamma =_ggabe ;};_gcbe =_fcdc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _gcbe !=nil {_gcbe =_cg .TraceToDirectObject (_gcbe );_cdbbf ,_baefc :=_gcbe .(*_cg .PdfObjectArray );if !_baefc {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _cdbbf .Len ()!=9{_aefb .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cdbbf .String ());return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_afcg ,_ggda :=_cdbbf .GetAsFloat64Slice ();if _ggda !=nil {return nil ,_ggda ;};_aedg .Matrix =_afcg ;};return _aedg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddfe *PdfAnnotationWidget )ToPdfObject ()_cg .PdfObject {_ddfe .PdfAnnotation .ToPdfObject ();_adag :=_ddfe ._bed ;_agb :=_adag .PdfObject .(*_cg .PdfObjectDictionary );if _ddfe ._dbad {return _adag ;};_ddfe ._dbad =true ;_agb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_agb .SetIfNotNil ("\u0048",_ddfe .H );_agb .SetIfNotNil ("\u004d\u004b",_ddfe .MK );_agb .SetIfNotNil ("\u0041",_ddfe .A );_agb .SetIfNotNil ("\u0041\u0041",_ddfe .AA );_agb .SetIfNotNil ("\u0042\u0053",_ddfe .BS );_gfge :=_ddfe .Parent ;if _ddfe ._fag !=nil {if _ddfe ._fag ._gecee ==_ddfe ._bed {_ddfe ._fag .ToPdfObject ();
};_gfge =_ddfe ._fag .GetContainingPdfObject ();};if _gfge !=_adag {_agb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfge );};_ddfe ._dbad =false ;return _adag ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_dabde *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _daac []*PdfOutlineTreeNode ;var _dacb []string ;var _ecge func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_ecge =func (_fgedb *PdfOutlineTreeNode ,_adae *[]*PdfOutlineTreeNode ,_ggecd *[]string ,_bbgbbb int ){if _fgedb ==nil {return ;
};if _fgedb ._gegde ==nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_gddffe ,_fafgd :=_fgedb ._gegde .(*PdfOutlineItem );if _fafgd {*_adae =append (*_adae ,&_gddffe .PdfOutlineTreeNode );
_febdf :=_gb .Repeat ("\u0020",_bbgbbb *2)+_gddffe .Title .Decoded ();*_ggecd =append (*_ggecd ,_febdf );};if _fgedb .First !=nil {_efebe :=_gb .Repeat ("\u0020",_bbgbbb *2)+"\u002b";*_ggecd =append (*_ggecd ,_efebe );_ecge (_fgedb .First ,_adae ,_ggecd ,_bbgbbb +1);
};if _fafgd &&_gddffe .Next !=nil {_ecge (_gddffe .Next ,_adae ,_ggecd ,_bbgbbb );};};_ecge (_dabde ._cbbca ,&_daac ,&_dacb ,0);return _daac ,_dacb ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_egfeg *XObjectForm )SetContentStream (content []byte ,encoder _cg .StreamEncoder )error {_gdbbfg :=content ;if encoder ==nil {if _egfeg .Filter !=nil {encoder =_egfeg .Filter ;}else {encoder =_cg .NewRawEncoder ();};};_cddgeb ,_abeffc :=encoder .EncodeBytes (_gdbbfg );
if _abeffc !=nil {return _abeffc ;};_gdbbfg =_cddgeb ;_egfeg .Stream =_gdbbfg ;_egfeg .Filter =encoder ;return nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gfef OutlineDest )ToPdfObject ()_cg .PdfObject {if (_gfef .PageObj ==nil &&_gfef .Page < 0)||_gfef .Mode ==""{return _cg .MakeNull ();};_fafeg :=_cg .MakeArray ();if _gfef .PageObj !=nil {_fafeg .Append (_gfef .PageObj );}else {_fafeg .Append (_cg .MakeInteger (_gfef .Page ));
};_fafeg .Append (_cg .MakeName (_gfef .Mode ));switch _gfef .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_fafeg .Append (_cg .MakeFloat (_gfef .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_fafeg .Append (_cg .MakeFloat (_gfef .X ));
case "\u0058\u0059\u005a":_fafeg .Append (_cg .MakeFloat (_gfef .X ));_fafeg .Append (_cg .MakeFloat (_gfef .Y ));_fafeg .Append (_cg .MakeFloat (_gfef .Zoom ));default:_fafeg .Set (1,_cg .MakeName ("\u0046\u0069\u0074"));};return _fafeg ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ab .Permissions ;Algorithm EncryptionAlgorithm ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gfae *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddeg :=vals [0];if _ddeg < 0.0||_ddeg > 1.0{_aefb .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ddeg < 0.0{_ddeg =0.0;}else if _ddeg > 1.0{_ddeg =1.0;};return NewPdfColorDeviceGray (_ddeg ),nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_gcdad *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToPdfObject implements interface PdfModel.
func (_gdgeb *PdfAnnotationSquare )ToPdfObject ()_cg .PdfObject {_gdgeb .PdfAnnotation .ToPdfObject ();_fab :=_gdgeb ._bed ;_bbaac :=_fab .PdfObject .(*_cg .PdfObjectDictionary );if _gdgeb .PdfAnnotationMarkup !=nil {_gdgeb .PdfAnnotationMarkup .appendToPdfDictionary (_bbaac );
};_bbaac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bbaac .SetIfNotNil ("\u0042\u0053",_gdgeb .BS );_bbaac .SetIfNotNil ("\u0049\u0043",_gdgeb .IC );_bbaac .SetIfNotNil ("\u0042\u0045",_gdgeb .BE );
_bbaac .SetIfNotNil ("\u0052\u0044",_gdgeb .RD );return _fab ;};var (_ebecf _ge .Mutex ;_gfefa ="";_accfeg _bb .Time ;_fdgbd ="";_gbabf ="";_cgbeb _bb .Time ;_dddag ="";_aafde ="";_daabb ="";);

// SetFlag sets the flag for the field.
func (_dgbb *PdfField )SetFlag (flag FieldFlag ){_dgbb .Ff =_cg .MakeInteger (int64 (flag ))};func (_gbcge *PdfWriter )writeBytes (_bccac []byte ){if _gbcge ._dcge !=nil {return ;};_ccdcf ,_cdbef :=_gbcge ._ebdegf .Write (_bccac );_gbcge ._befaf +=int64 (_ccdcf );
_gbcge ._dcge =_cdbef ;};func _gbbg ()string {return _aefb .Version };func (_dfaaf *Image )samplesAddPadding (_egfga []uint32 )[]uint32 {_gbbec :=_cc .BytesPerLine (int (_dfaaf .Width ),int (_dfaaf .BitsPerComponent ),_dfaaf .ColorComponents )*(8/int (_dfaaf .BitsPerComponent ));
_becb :=_gbbec *int (_dfaaf .Height );if len (_egfga )==_becb {return _egfga ;};_ecbfe :=make ([]uint32 ,_becb );_adddgb :=int (_dfaaf .Width )*_dfaaf .ColorComponents ;for _eddcb :=0;_eddcb < int (_dfaaf .Height );_eddcb ++{_ebdag :=_eddcb *int (_dfaaf .Width );
_bgaea :=_eddcb *_gbbec ;for _gfde :=0;_gfde < _adddgb ;_gfde ++{_ecbfe [_bgaea +_gfde ]=_egfga [_ebdag +_gfde ];};};return _ecbfe ;};func (_beag *PdfWriter )writeAcroFormFields ()error {if _beag ._bddaa ==nil {return nil ;};_aefb .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_bdaea :=_beag ._bddaa .ToPdfObject ();_aefb .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_bdaea );_beag ._adafd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bdaea );_face :=_beag .addObjects (_bdaea );
if _face !=nil {return _face ;};return nil ;};

// ToInteger convert to an integer format.
func (_ecbf *PdfColorCalGray )ToInteger (bits int )uint32 {_afbg :=_be .Pow (2,float64 (bits ))-1;return uint32 (_afbg *_ecbf .Val ());};

// DecodeArray returns the component range values for the Separation colorspace.
func (_ffee *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bedaf *PdfPattern )GetContainingPdfObject ()_cg .PdfObject {return _bedaf ._bcafe };

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_beffc *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _beffc ._efbc !=nil {return _beffc ._efbc ,nil ;};if _beffc .ColorSpace ==nil {return nil ,nil ;};_dfaaa ,_fdafe :=_cacg (_beffc .ColorSpace );if _fdafe !=nil {return nil ,_fdafe ;
};_beffc ._efbc =_dfaaa ;return _beffc ._efbc ,nil ;};func (_abeb *PdfWriter )setCatalogVersion (){_abeb ._adafd .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cg .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_abeb ._cdadd .Major ,_abeb ._cdadd .Minor )));
};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_fagd *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bfcf []float64 ;for _daadb :=0;_daadb < _fagd .GetNumComponents ();_daadb ++{_bfcf =append (_bfcf ,0.0,1.0);};return _bfcf ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aab :=NewPdfAnnotation ();_aag :=&PdfAnnotationPrinterMark {};_aag .PdfAnnotation =_aab ;_aab .SetContext (_aag );return _aag ;};

// ToPdfObject implements interface PdfModel.
func (_cbb *PdfActionTrans )ToPdfObject ()_cg .PdfObject {_cbb .PdfAction .ToPdfObject ();_fbc :=_cbb ._ebd ;_fgb :=_fbc .PdfObject .(*_cg .PdfObjectDictionary );_fgb .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeTrans )));_fgb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cbb .Trans );
return _fbc ;};func _eabd (_dfecd StdFontName )(pdfFontSimple ,error ){_egeg ,_gdecc :=_egg .NewStdFontByName (_dfecd );if !_gdecc {return pdfFontSimple {},ErrFontNotSupported ;};_cdbe :=_dbgce (_egeg );return _cdbe ,nil ;};func (_ddbf *PdfReader )newPdfActionNamedFromDict (_abe *_cg .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_abe .Get ("\u004e")},nil ;
};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gc :=NewPdfAction ();_ccda :=&PdfActionGoToE {};_ccda .PdfAction =_gc ;_gc .SetContext (_ccda );return _ccda ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_gbefc *modelManager )GetModelFromPrimitive (primitive _cg .PdfObject )PdfModel {model ,_edbb :=_gbefc ._dffca [primitive ];if !_edbb {return nil ;};return model ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cg .PdfObject ;Movie _cg .PdfObject ;A _cg .PdfObject ;};func _eda (_eca _cg .PdfObject )(*PdfFilespec ,error ){if _eca ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_eca );};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cg .PdfObject ;V _cg .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_ffac *PdfAnnotation )SetContext (ctx PdfModel ){_ffac ._addda =ctx };

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_ebfddf *PdfColorspaceDeviceN )GetNumComponents ()int {return _ebfddf .ColorantNames .Len ()};func _egde (_bcab ,_efgdb string )string {if _gb .Contains (_bcab ,"\u002b"){_abcce :=_gb .Split (_bcab ,"\u002b");if len (_abcce )==2{_bcab =_abcce [1];
};};return _efgdb +"\u002b"+_bcab ;};

// GetOptimizer returns current PDF optimizer.
func (_bfdd *PdfWriter )GetOptimizer ()Optimizer {return _bfdd ._fabb };

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dfacgd *_cg .PdfIndirectObject ;_agacf *_cg .PdfIndirectObject ;_gddfd map[_cg .PdfObject ]struct{};_gegb []_cg .PdfObject ;_dcage map[_cg .PdfObject ]struct{};_dgdbb []*_cg .PdfIndirectObject ;_bfec *PdfOutlineTreeNode ;_adafd *_cg .PdfObjectDictionary ;
_gcdfd []_cg .PdfObject ;_aeea *_cg .PdfIndirectObject ;_ebdegf *_e .Writer ;_befaf int64 ;_dcge error ;_dfeee *_cg .PdfCrypt ;_ceafg *_cg .PdfObjectDictionary ;_gddd *_cg .PdfIndirectObject ;_bbcgc *_cg .PdfObjectArray ;_cdadd _cg .Version ;_edeceg *bool ;
_cegde map[_cg .PdfObject ][]*_cg .PdfObjectDictionary ;_bddaa *PdfAcroForm ;_fabb Optimizer ;_dfbga StandardApplier ;_ggaccb map[int ]crossReference ;_bdgde int64 ;ObjNumOffset int ;_dagdb bool ;_cegcg _cg .XrefTable ;_caede int64 ;_dggdf int64 ;_eeaca map[_cg .PdfObject ]int64 ;
_aabff map[_cg .PdfObject ]struct{};_egdda string ;_efafa []*PdfOutputIntent ;_fgagd bool ;_cfga ,_befdb string ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_eba .SimpleEncoder ,error ){_cgfc ,_eeeda :=_eabd (basefont );if _eeeda !=nil {return nil ,nil ,_eeeda ;};_ccgd ,_faee :=_cgfc .Encoder ().(_eba .SimpleEncoder );
if !_faee {return nil ,nil ,_g .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cgfc .Encoder ());
};_bdfg :=make (map[rune ]_eba .GlyphName );for _eaef :=range alphabet {if _ ,_fgcfg :=_ccgd .RuneToCharcode (_eaef );!_fgcfg {_ ,_defb :=_cgfc ._fegab .Read (_eaef );if !_defb {_aefb .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_eaef ,_eaef );
continue ;};_agab ,_defb :=_eba .RuneToGlyph (_eaef );if !_defb {_aefb .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_eaef ,_eaef );continue ;};if len (_bdfg )>=255{return nil ,nil ,_fff .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bdfg [_eaef ]=_agab ;};};var (_cbfdb []_eba .CharCode ;_dadd []_eba .CharCode ;);for _daae :=_eba .CharCode (1);_daae <=0xff;_daae ++{_fcde ,_egeef :=_ccgd .CharcodeToRune (_daae );if !_egeef {_cbfdb =append (_cbfdb ,_daae );continue ;};if _ ,_egeef =alphabet [_fcde ];
!_egeef {_dadd =append (_dadd ,_daae );};};_bafb :=append (_cbfdb ,_dadd ...);if len (_bafb )< len (_bdfg ){return nil ,nil ,_g .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bdfg ),len (_bafb ));
};_gacd :=make ([]rune ,0,len (_bdfg ));for _aebcg :=range _bdfg {_gacd =append (_gacd ,_aebcg );};_c .Slice (_gacd ,func (_edad ,_fcec int )bool {return _gacd [_edad ]< _gacd [_fcec ]});_agebe :=make (map[_eba .CharCode ]_eba .GlyphName ,len (_gacd ));
for _ ,_cabf :=range _gacd {_ceaf :=_bafb [0];_bafb =_bafb [1:];_agebe [_ceaf ]=_bdfg [_cabf ];};_ccgd =_eba .ApplyDifferences (_ccgd ,_agebe );_cgfc .SetEncoder (_ccgd );return &PdfFont {_cgdd :&_cgfc },_ccgd ,nil ;};type pdfCIDFontType2 struct{fontCommon ;
_fecgg *_cg .PdfIndirectObject ;_abfbf _eba .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cg .PdfObject ;W _cg .PdfObject ;DW2 _cg .PdfObject ;W2 _cg .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cg .PdfObject ;_fefaa map[_eba .CharCode ]float64 ;_cddef float64 ;_dbfe map[rune ]int ;};func (_fdd *PdfReader )newPdfActionGotoRFromDict (_adbd *_cg .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bdaa ,_cf :=_eda (_adbd .Get ("\u0046"));
if _cf !=nil {return nil ,_cf ;};return &PdfActionGoToR {D :_adbd .Get ("\u0044"),NewWindow :_adbd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bdaa },nil ;};func _bbcfef (_efdga *PdfField ,_gaega _cg .PdfObject )error {switch _efdga .GetContext ().(type ){case *PdfFieldText :switch _dbfdb :=_gaega .(type ){case *_cg .PdfObjectName :_edece :=_dbfdb ;
_aefb .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_edece .String ());
_efdga .V =_cg .MakeEncodedString (_dbfdb .String (),true );case *_cg .PdfObjectString :_efdga .V =_cg .MakeEncodedString (_dbfdb .String (),true );default:_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_dbfdb ,_dbfdb );
};case *PdfFieldButton :switch _gaega .(type ){case *_cg .PdfObjectName :if len (_gaega .String ())> 0{_efdga .V =_gaega ;_dgdbc (_efdga ,_gaega );};case *_cg .PdfObjectString :if len (_gaega .String ())> 0{_efdga .V =_cg .MakeName (_gaega .String ());
_dgdbc (_efdga ,_efdga .V );};default:_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_efdga .PartialName (),_gaega );_efdga .V =_gaega ;
};case *PdfFieldChoice :switch _gaega .(type ){case *_cg .PdfObjectName :if len (_gaega .String ())> 0{_efdga .V =_cg .MakeString (_gaega .String ());_dgdbc (_efdga ,_gaega );};case *_cg .PdfObjectString :if len (_gaega .String ())> 0{_efdga .V =_gaega ;
_dgdbc (_efdga ,_cg .MakeName (_gaega .String ()));};default:_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_efdga .PartialName (),_gaega );
_efdga .V =_gaega ;};case *PdfFieldSignature :_aefb .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_efdga .PartialName (),_gaega );
};return nil ;};

// AddWatermarkImage adds a watermark to the page.
func (_egcb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_eddef ,_cdgcd :=_egcb .GetMediaBox ();if _cdgcd !=nil {return _cdgcd ;};_dbcb :=_eddef .Urx -_eddef .Llx ;_efebdf :=_eddef .Ury -_eddef .Lly ;_fcecc :=float64 (*ximg .Width );
_ebaae :=(_dbcb -_fcecc )/2;if opt .FitToWidth {_fcecc =_dbcb ;_ebaae =0;};_egffa :=_efebdf ;_aeeea :=float64 (0);if opt .PreserveAspectRatio {_egffa =_fcecc *float64 (*ximg .Height )/float64 (*ximg .Width );_aeeea =(_efebdf -_egffa )/2;};if _egcb .Resources ==nil {_egcb .Resources =NewPdfPageResources ();
};_bedb :=0;_cgbcf :=_cg .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_bedb ));for _egcb .Resources .HasXObjectByName (_cgbcf ){_bedb ++;_cgbcf =_cg .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_bedb ));};_cdgcd =_egcb .AddImageResource (_cgbcf ,ximg );
if _cdgcd !=nil {return _cdgcd ;};_bedb =0;_bffag :=_cg .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_bedb ));for _egcb .HasExtGState (_bffag ){_bedb ++;_bffag =_cg .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_bedb ));};_eaceg :=_cg .MakeDict ();
_eaceg .Set ("\u0042\u004d",_cg .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_eaceg .Set ("\u0043\u0041",_cg .MakeFloat (opt .Alpha ));_eaceg .Set ("\u0063\u0061",_cg .MakeFloat (opt .Alpha ));_cdgcd =_egcb .AddExtGState (_bffag ,_eaceg );if _cdgcd !=nil {return _cdgcd ;
};_edfd :=_g .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_bffag ,_fcecc ,_egffa ,_ebaae ,_aeeea ,_cgbcf );
_egcb .AddContentStreamByString (_edfd );return nil ;};

// IsSimple returns true if `font` is a simple font.
func (_dbaa *PdfFont )IsSimple ()bool {_ ,_afeab :=_dbaa ._cgdd .(*pdfFontSimple );return _afeab };func _ecbfc (_cfddd *_cg .PdfObjectDictionary )(*PdfShadingType1 ,error ){_fgfdf :=PdfShadingType1 {};if _bcec :=_cfddd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_bcec !=nil {_bcec =_cg .TraceToDirectObject (_bcec );_deggc ,_eaffd :=_bcec .(*_cg .PdfObjectArray );if !_eaffd {_aefb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcec );
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgfdf .Domain =_deggc ;};if _fdegg :=_cfddd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fdegg !=nil {_fdegg =_cg .TraceToDirectObject (_fdegg );
_cbcga ,_fddgf :=_fdegg .(*_cg .PdfObjectArray );if !_fddgf {_aefb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdegg );return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fgfdf .Matrix =_cbcga ;};_faab :=_cfddd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _faab ==nil {_aefb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fgfdf .Function =[]PdfFunction {};if _bcdeg ,_dcfc :=_faab .(*_cg .PdfObjectArray );_dcfc {for _ ,_dgcef :=range _bcdeg .Elements (){_caagb ,_bfdf :=_eeafe (_dgcef );if _bfdf !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfdf );
return nil ,_bfdf ;};_fgfdf .Function =append (_fgfdf .Function ,_caagb );};}else {_degbc ,_ebaag :=_eeafe (_faab );if _ebaag !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebaag );
return nil ,_ebaag ;};_fgfdf .Function =append (_fgfdf .Function ,_degbc );};return &_fgfdf ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_febc *_cg .PdfIndirectObject ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_fdeb :=NewPdfAnnotation ();_edfe :=&PdfAnnotationSquiggly {};_edfe .PdfAnnotation =_fdeb ;_edfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdeb .SetContext (_edfe );return _edfe ;};func (_cbc *PdfReader )newPdfAnnotationFromIndirectObject (_eab *_cg .PdfIndirectObject )(*PdfAnnotation ,error ){_afeg ,_gffe :=_eab .PdfObject .(*_cg .PdfObjectDictionary );
if !_gffe {return nil ,_g .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_cbc ._eggbd .GetModelFromPrimitive (_afeg );model !=nil {_cba ,_adbc :=model .(*PdfAnnotation );if !_adbc {return nil ,_g .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cba ,nil ;};_ceaa :=&PdfAnnotation {};_ceaa ._bed =_eab ;_cbc ._eggbd .Register (_afeg ,_ceaa );if _fad :=_afeg .Get ("\u0054\u0079\u0070\u0065");_fad !=nil {_ebfd ,_fddad :=_fad .(*_cg .PdfObjectName );if !_fddad {_aefb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fad );
}else {if *_ebfd !="\u0041\u006e\u006eo\u0074"{_aefb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ebfd );};};
};if _cccb :=_afeg .Get ("\u0052\u0065\u0063\u0074");_cccb !=nil {_ceaa .Rect =_cccb ;};if _fbbb :=_afeg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fbbb !=nil {_ceaa .Contents =_fbbb ;};if _gbd :=_afeg .Get ("\u0050");_gbd !=nil {_ceaa .P =_gbd ;
};if _feg :=_afeg .Get ("\u004e\u004d");_feg !=nil {_ceaa .NM =_feg ;};if _bage :=_afeg .Get ("\u004d");_bage !=nil {_ceaa .M =_bage ;};if _ebg :=_afeg .Get ("\u0046");_ebg !=nil {_ceaa .F =_ebg ;};if _gdga :=_afeg .Get ("\u0041\u0050");_gdga !=nil {_ceaa .AP =_gdga ;
};if _gcddf :=_afeg .Get ("\u0041\u0053");_gcddf !=nil {_ceaa .AS =_gcddf ;};if _agdg :=_afeg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_agdg !=nil {_ceaa .Border =_agdg ;};if _bgd :=_afeg .Get ("\u0043");_bgd !=nil {_ceaa .C =_bgd ;};if _gee :=_afeg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gee !=nil {_ceaa .StructParent =_gee ;};if _ggg :=_afeg .Get ("\u004f\u0043");_ggg !=nil {_ceaa .OC =_ggg ;};_dea :=_afeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _dea ==nil {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_ceaa ._addda =nil ;return _ceaa ,nil ;};_gbbe ,_abee :=_dea .(*_cg .PdfObjectName );if !_abee {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dea );
return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_dea );};switch *_gbbe {case "\u0054\u0065\u0078\u0074":_fgbfa ,_bff :=_cbc .newPdfAnnotationTextFromDict (_afeg );
if _bff !=nil {return nil ,_bff ;};_fgbfa .PdfAnnotation =_ceaa ;_ceaa ._addda =_fgbfa ;return _ceaa ,nil ;case "\u004c\u0069\u006e\u006b":_edb ,_faae :=_cbc .newPdfAnnotationLinkFromDict (_afeg );if _faae !=nil {return nil ,_faae ;};_edb .PdfAnnotation =_ceaa ;
_ceaa ._addda =_edb ;return _ceaa ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_ggcg ,_efge :=_cbc .newPdfAnnotationFreeTextFromDict (_afeg );if _efge !=nil {return nil ,_efge ;};_ggcg .PdfAnnotation =_ceaa ;_ceaa ._addda =_ggcg ;return _ceaa ,nil ;
case "\u004c\u0069\u006e\u0065":_gbbb ,_ddcg :=_cbc .newPdfAnnotationLineFromDict (_afeg );if _ddcg !=nil {return nil ,_ddcg ;};_gbbb .PdfAnnotation =_ceaa ;_ceaa ._addda =_gbbb ;_aefb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_ceaa ,_ceaa );
_aefb .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_gbbb ,_gbbb );_aefb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_gbbb .PdfAnnotationMarkup ,_gbbb .PdfAnnotationMarkup );
return _ceaa ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cde ,_baea :=_cbc .newPdfAnnotationSquareFromDict (_afeg );if _baea !=nil {return nil ,_baea ;};_cde .PdfAnnotation =_ceaa ;_ceaa ._addda =_cde ;return _ceaa ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_fcf ,_gba :=_cbc .newPdfAnnotationCircleFromDict (_afeg );
if _gba !=nil {return nil ,_gba ;};_fcf .PdfAnnotation =_ceaa ;_ceaa ._addda =_fcf ;return _ceaa ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ace ,_gabb :=_cbc .newPdfAnnotationPolygonFromDict (_afeg );if _gabb !=nil {return nil ,_gabb ;};_ace .PdfAnnotation =_ceaa ;
_ceaa ._addda =_ace ;return _ceaa ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bdf ,_dgd :=_cbc .newPdfAnnotationPolyLineFromDict (_afeg );if _dgd !=nil {return nil ,_dgd ;};_bdf .PdfAnnotation =_ceaa ;_ceaa ._addda =_bdf ;return _ceaa ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ced ,_acef :=_cbc .newPdfAnnotationHighlightFromDict (_afeg );if _acef !=nil {return nil ,_acef ;};_ced .PdfAnnotation =_ceaa ;_ceaa ._addda =_ced ;return _ceaa ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dda ,_gaa :=_cbc .newPdfAnnotationUnderlineFromDict (_afeg );
if _gaa !=nil {return nil ,_gaa ;};_dda .PdfAnnotation =_ceaa ;_ceaa ._addda =_dda ;return _ceaa ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_dbd ,_ecf :=_cbc .newPdfAnnotationSquigglyFromDict (_afeg );if _ecf !=nil {return nil ,_ecf ;
};_dbd .PdfAnnotation =_ceaa ;_ceaa ._addda =_dbd ;return _ceaa ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_begd ,_aaaf :=_cbc .newPdfAnnotationStrikeOut (_afeg );if _aaaf !=nil {return nil ,_aaaf ;};_begd .PdfAnnotation =_ceaa ;_ceaa ._addda =_begd ;
return _ceaa ,nil ;case "\u0043\u0061\u0072e\u0074":_fbea ,_bcc :=_cbc .newPdfAnnotationCaretFromDict (_afeg );if _bcc !=nil {return nil ,_bcc ;};_fbea .PdfAnnotation =_ceaa ;_ceaa ._addda =_fbea ;return _ceaa ,nil ;case "\u0053\u0074\u0061m\u0070":_dca ,_beda :=_cbc .newPdfAnnotationStampFromDict (_afeg );
if _beda !=nil {return nil ,_beda ;};_dca .PdfAnnotation =_ceaa ;_ceaa ._addda =_dca ;return _ceaa ,nil ;case "\u0049\u006e\u006b":_bea ,_bdcge :=_cbc .newPdfAnnotationInkFromDict (_afeg );if _bdcge !=nil {return nil ,_bdcge ;};_bea .PdfAnnotation =_ceaa ;
_ceaa ._addda =_bea ;return _ceaa ,nil ;case "\u0050\u006f\u0070u\u0070":_gfee ,_dcd :=_cbc .newPdfAnnotationPopupFromDict (_afeg );if _dcd !=nil {return nil ,_dcd ;};_gfee .PdfAnnotation =_ceaa ;_ceaa ._addda =_gfee ;return _ceaa ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ffb ,_gfeb :=_cbc .newPdfAnnotationFileAttachmentFromDict (_afeg );
if _gfeb !=nil {return nil ,_gfeb ;};_ffb .PdfAnnotation =_ceaa ;_ceaa ._addda =_ffb ;return _ceaa ,nil ;case "\u0053\u006f\u0075n\u0064":_dgda ,_bbb :=_cbc .newPdfAnnotationSoundFromDict (_afeg );if _bbb !=nil {return nil ,_bbb ;};_dgda .PdfAnnotation =_ceaa ;
_ceaa ._addda =_dgda ;return _ceaa ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fegc ,_efa :=_cbc .newPdfAnnotationRichMediaFromDict (_afeg );if _efa !=nil {return nil ,_efa ;};_fegc .PdfAnnotation =_ceaa ;_ceaa ._addda =_fegc ;return _ceaa ,nil ;
case "\u004d\u006f\u0076i\u0065":_bdce ,_eea :=_cbc .newPdfAnnotationMovieFromDict (_afeg );if _eea !=nil {return nil ,_eea ;};_bdce .PdfAnnotation =_ceaa ;_ceaa ._addda =_bdce ;return _ceaa ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dcg ,_bgf :=_cbc .newPdfAnnotationScreenFromDict (_afeg );
if _bgf !=nil {return nil ,_bgf ;};_dcg .PdfAnnotation =_ceaa ;_ceaa ._addda =_dcg ;return _ceaa ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_ded ,_dged :=_cbc .newPdfAnnotationWidgetFromDict (_afeg );if _dged !=nil {return nil ,_dged ;};_ded .PdfAnnotation =_ceaa ;
_ceaa ._addda =_ded ;return _ceaa ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_ebga ,_bfa :=_cbc .newPdfAnnotationPrinterMarkFromDict (_afeg );if _bfa !=nil {return nil ,_bfa ;};_ebga .PdfAnnotation =_ceaa ;_ceaa ._addda =_ebga ;
return _ceaa ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fbed ,_dggf :=_cbc .newPdfAnnotationTrapNetFromDict (_afeg );if _dggf !=nil {return nil ,_dggf ;};_fbed .PdfAnnotation =_ceaa ;_ceaa ._addda =_fbed ;return _ceaa ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_cbec ,_gaab :=_cbc .newPdfAnnotationWatermarkFromDict (_afeg );
if _gaab !=nil {return nil ,_gaab ;};_cbec .PdfAnnotation =_ceaa ;_ceaa ._addda =_cbec ;return _ceaa ,nil ;case "\u0033\u0044":_ggdg ,_dfce :=_cbc .newPdfAnnotation3DFromDict (_afeg );if _dfce !=nil {return nil ,_dfce ;};_ggdg .PdfAnnotation =_ceaa ;_ceaa ._addda =_ggdg ;
return _ceaa ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_feef ,_ggfd :=_cbc .newPdfAnnotationProjectionFromDict (_afeg );if _ggfd !=nil {return nil ,_ggfd ;};_feef .PdfAnnotation =_ceaa ;_ceaa ._addda =_feef ;return _ceaa ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_ddbd ,_dcdd :=_cbc .newPdfAnnotationRedactFromDict (_afeg );if _dcdd !=nil {return nil ,_dcdd ;};_ddbd .PdfAnnotation =_ceaa ;_ceaa ._addda =_ddbd ;return _ceaa ,nil ;};_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gbbe );
return nil ,nil ;};var _badb =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// R returns the value of the red component of the color.
func (_egfb *PdfColorDeviceRGB )R ()float64 {return _egfb [0]};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_ddeab *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_ddeab ._efbc =colorspace ;};func _acaga (_affdc _cg .PdfObject )[]*_cg .PdfObjectStream {if _affdc ==nil {return nil ;};_ggdbg ,_facf :=_cg .GetArray (_affdc );if !_facf ||_ggdbg .Len ()==0{return nil ;
};_ddfd :=make ([]*_cg .PdfObjectStream ,0,_ggdbg .Len ());for _ ,_acdcf :=range _ggdbg .Elements (){if _efabd ,_geceac :=_cg .GetStream (_acdcf );_geceac {_ddfd =append (_ddfd ,_efabd );};};return _ddfd ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_edcd *PdfOutlineTreeNode )GetContext ()PdfModel {if _dbgff ,_gbdb :=_edcd ._gegde .(*PdfOutline );_gbdb {return _dbgff ;};if _eddag ,_daceb :=_edcd ._gegde .(*PdfOutlineItem );_daceb {return _eddag ;};_aefb .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fdgca *PdfShadingPattern )ToPdfObject ()_cg .PdfObject {_fdgca .PdfPattern .ToPdfObject ();_dafdc :=_fdgca .getDict ();if _fdgca .Shading !=nil {_dafdc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fdgca .Shading .ToPdfObject ());};if _fdgca .Matrix !=nil {_dafdc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fdgca .Matrix );
};if _fdgca .ExtGState !=nil {_dafdc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fdgca .ExtGState );};return _fdgca ._bcafe ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cg .PdfObject ;Name _cg .PdfObject ;};func _babbe (_ebce _cg .PdfObject )(string ,error ){_ebce =_cg .TraceToDirectObject (_ebce );switch _aeabd :=_ebce .(type ){case *_cg .PdfObjectString :return _aeabd .Str (),nil ;
case *_cg .PdfObjectStream :_fcafd ,_agcae :=_cg .DecodeStream (_aeabd );if _agcae !=nil {return "",_agcae ;};return string (_fcafd ),nil ;};return "",_g .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_ebce );
};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fcfe :=PdfColorLab {l ,a ,b };return &_fcfe };

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_ebecf .Lock ();defer _ebecf .Unlock ();_dddag =producer };

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cg .PdfObject )(*PdfFilespec ,error ){_bgg :=&PdfFilespec {};var _dfbc *_cg .PdfObjectDictionary ;if _gbag ,_adcd :=_cg .GetIndirect (obj );_adcd {_bgg ._gdgcb =_gbag ;_cceae ,_acbeb :=_cg .GetDict (_gbag .PdfObject );if !_acbeb {_aefb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_cg .ErrTypeError ;};_dfbc =_cceae ;}else if _bbgec ,_fbdcb :=_cg .GetDict (obj );_fbdcb {_bgg ._gdgcb =_bbgec ;_dfbc =_bbgec ;}else {_aefb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );
return nil ,_cg .ErrTypeError ;};if _dfbc ==nil {_aefb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};if _agdb :=_dfbc .Get ("\u0054\u0079\u0070\u0065");_agdb !=nil {_befcf ,_gdfdc :=_agdb .(*_cg .PdfObjectName );if !_gdfdc {_aefb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_agdb );
}else {if *_befcf !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_aefb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_befcf );
};};};if _cfbgd :=_dfbc .Get ("\u0046\u0053");_cfbgd !=nil {_bgg .FS =_cfbgd ;};if _bfgf :=_dfbc .Get ("\u0046");_bfgf !=nil {_bgg .F =_bfgf ;};if _ebbf :=_dfbc .Get ("\u0055\u0046");_ebbf !=nil {_bgg .UF =_ebbf ;};if _bgbe :=_dfbc .Get ("\u0044\u004f\u0053");
_bgbe !=nil {_bgg .DOS =_bgbe ;};if _geeca :=_dfbc .Get ("\u004d\u0061\u0063");_geeca !=nil {_bgg .Mac =_geeca ;};if _ffdbg :=_dfbc .Get ("\u0055\u006e\u0069\u0078");_ffdbg !=nil {_bgg .Unix =_ffdbg ;};if _cgga :=_dfbc .Get ("\u0049\u0044");_cgga !=nil {_bgg .ID =_cgga ;
};if _bfad :=_dfbc .Get ("\u0056");_bfad !=nil {_bgg .V =_bfad ;};if _fdab :=_dfbc .Get ("\u0045\u0046");_fdab !=nil {_bgg .EF =_fdab ;};if _bacaf :=_dfbc .Get ("\u0052\u0046");_bacaf !=nil {_bgg .RF =_bacaf ;};if _bdbe :=_dfbc .Get ("\u0044\u0065\u0073\u0063");
_bdbe !=nil {_bgg .Desc =_bdbe ;};if _dbbe :=_dfbc .Get ("\u0043\u0049");_dbbe !=nil {_bgg .CI =_dbbe ;};return _bgg ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_dcea *LTV )EnableByName (name string ,extraCerts []*_a .Certificate )error {_edfgf :=_dcea ._edge ._afa .AcroForm ;for _ ,_eagad :=range _edfgf .AllFields (){_ddeaa ,_ :=_eagad .GetContext ().(*PdfFieldSignature );if _ddeaa ==nil {continue ;};if _aagbg :=_ddeaa .PartialName ();
_aagbg !=name {continue ;};return _dcea .Enable (_ddeaa .V ,extraCerts );};return nil ;};func (_egebd *PdfReader )newPdfFieldFromIndirectObject (_ecbd *_cg .PdfIndirectObject ,_afagd *PdfField )(*PdfField ,error ){if _dagf ,_ffbf :=_egebd ._eggbd .GetModelFromPrimitive (_ecbd ).(*PdfField );
_ffbf {return _dagf ,nil ;};_caga ,_gcdf :=_cg .GetDict (_ecbd );if !_gcdf {return nil ,_g .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eefgbf :=NewPdfField ();_eefgbf ._gecee =_ecbd ;_eefgbf ._gecee .PdfObject =_caga ;if _bbad ,_dcfbc :=_cg .GetName (_caga .Get ("\u0046\u0054"));_dcfbc {_eefgbf .FT =_bbad ;};if _afagd !=nil {_eefgbf .Parent =_afagd ;};_eefgbf .T ,_ =_caga .Get ("\u0054").(*_cg .PdfObjectString );
_eefgbf .TU ,_ =_caga .Get ("\u0054\u0055").(*_cg .PdfObjectString );_eefgbf .TM ,_ =_caga .Get ("\u0054\u004d").(*_cg .PdfObjectString );_eefgbf .Ff ,_ =_caga .Get ("\u0046\u0066").(*_cg .PdfObjectInteger );_eefgbf .V =_caga .Get ("\u0056");_eefgbf .DV =_caga .Get ("\u0044\u0056");
_eefgbf .AA =_caga .Get ("\u0041\u0041");if DA :=_caga .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_cg .GetString (DA );_eefgbf .VariableText =&VariableText {DA :DA };Q ,_ :=_caga .Get ("\u0051").(*_cg .PdfObjectInteger );DS ,_ :=_caga .Get ("\u0044\u0053").(*_cg .PdfObjectString );
RV :=_caga .Get ("\u0052\u0056");_eefgbf .VariableText .Q =Q ;_eefgbf .VariableText .DS =DS ;_eefgbf .VariableText .RV =RV ;};_dagb :=_eefgbf .FT ;if _dagb ==nil &&_afagd !=nil {_dagb =_afagd .FT ;};if _dagb !=nil {switch *_dagb {case "\u0054\u0078":_afcdf ,_ggca :=_cbba (_caga );
if _ggca !=nil {return nil ,_ggca ;};_afcdf .PdfField =_eefgbf ;_eefgbf ._bcgd =_afcdf ;case "\u0043\u0068":_acdga ,_ggdab :=_fbfge (_caga );if _ggdab !=nil {return nil ,_ggdab ;};_acdga .PdfField =_eefgbf ;_eefgbf ._bcgd =_acdga ;case "\u0042\u0074\u006e":_cfca ,_fbeb :=_ceff (_caga );
if _fbeb !=nil {return nil ,_fbeb ;};_cfca .PdfField =_eefgbf ;_eefgbf ._bcgd =_cfca ;case "\u0053\u0069\u0067":_gcegd ,_fbfab :=_egebd .newPdfFieldSignatureFromDict (_caga );if _fbfab !=nil {return nil ,_fbfab ;};_gcegd .PdfField =_eefgbf ;_eefgbf ._bcgd =_gcegd ;
default:_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_eefgbf .FT );return nil ,_fff .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _ccefa ,_badf :=_cg .GetName (_caga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_badf {if *_ccefa =="\u0057\u0069\u0064\u0067\u0065\u0074"{_deda ,_deacf :=_egebd .newPdfAnnotationFromIndirectObject (_ecbd );if _deacf !=nil {return nil ,_deacf ;
};_ceedb ,_fcdfd :=_deda .GetContext ().(*PdfAnnotationWidget );if !_fcdfd {return nil ,_fff .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_ceedb ._fag =_eefgbf ;_ceedb .Parent =_eefgbf ._gecee ;
_eefgbf .Annotations =append (_eefgbf .Annotations ,_ceedb );return _eefgbf ,nil ;};};_dce :=true ;if _egfe ,_fcgc :=_cg .GetArray (_caga .Get ("\u004b\u0069\u0064\u0073"));_fcgc {_aafd :=make ([]*_cg .PdfIndirectObject ,0,_egfe .Len ());for _ ,_aebg :=range _egfe .Elements (){_gcff ,_edeg :=_cg .GetIndirect (_aebg );
if !_edeg {_dbb ,_egea :=_cg .GetStream (_aebg );if _egea &&_dbb .PdfObjectDictionary !=nil {_gebdb ,_ceeab :=_cg .GetNameVal (_dbb .Get ("\u0054\u0079\u0070\u0065"));if _ceeab &&_gebdb =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_aefb .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_fff .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_dbeb ,_fbff :=_cg .GetDict (_gcff );
if !_fbff {return nil ,ErrTypeCheck ;};if _dce {_dce =!_efbgc (_dbeb );};_aafd =append (_aafd ,_gcff );};for _ ,_fffgg :=range _aafd {if _dce {_gffb ,_deffg :=_egebd .newPdfAnnotationFromIndirectObject (_fffgg );if _deffg !=nil {_aefb .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_deffg );
return nil ,_deffg ;};_dgcd ,_fbdbe :=_gffb ._addda .(*PdfAnnotationWidget );if !_fbdbe {return nil ,ErrTypeCheck ;};_dgcd ._fag =_eefgbf ;_eefgbf .Annotations =append (_eefgbf .Annotations ,_dgcd );}else {_gddg ,_fbded :=_egebd .newPdfFieldFromIndirectObject (_fffgg ,_eefgbf );
if _fbded !=nil {_aefb .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fbded );return nil ,_fbded ;};_eefgbf .Kids =append (_eefgbf .Kids ,_gddg );
};};};return _eefgbf ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gefff *PdfShadingType3 )ToPdfObject ()_cg .PdfObject {_gefff .PdfShading .ToPdfObject ();_adcae ,_egagb :=_gefff .getShadingDict ();if _egagb !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gefff .Coords !=nil {_adcae .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gefff .Coords );};if _gefff .Domain !=nil {_adcae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gefff .Domain );};if _gefff .Function !=nil {if len (_gefff .Function )==1{_adcae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gefff .Function [0].ToPdfObject ());
}else {_ccbfd :=_cg .MakeArray ();for _ ,_bcadb :=range _gefff .Function {_ccbfd .Append (_bcadb .ToPdfObject ());};_adcae .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ccbfd );};};if _gefff .Extend !=nil {_adcae .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gefff .Extend );
};return _gefff ._ceabf ;};func (_dgef *PdfReader )newPdfAnnotationPopupFromDict (_deac *_cg .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_cdgf :=PdfAnnotationPopup {};_cdgf .Parent =_deac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cdgf .Open =_deac .Get ("\u004f\u0070\u0065\u006e");
return &_cdgf ,nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cbffb *PdfReader )GetNameDictionary ()(_cg .PdfObject ,error ){_aecge :=_cg .ResolveReference (_cbffb ._fbggd .Get ("\u004e\u0061\u006de\u0073"));if _aecge ==nil {return nil ,nil ;};if !_cbffb ._ddae {_ddaee :=_cbffb .traverseObjectData (_aecge );
if _ddaee !=nil {return nil ,_ddaee ;};};return _aecge ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cg .PdfObject ;BS _cg .PdfObject ;};func _gdege (_bcgef _cg .PdfObject ){_aefb .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bcgef ,_bcgef .String ());
if _eabgd ,_dgcfgc :=_bcgef .(*_cg .PdfObjectStream );_dgcfgc {_bebgd ,_fdggc :=_cg .DecodeStream (_eabgd );if _fdggc !=nil {_aefb .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_fdggc );return ;};_aefb .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_bebgd );
}else if _cbca ,_gcddfb :=_bcgef .(*_cg .PdfIndirectObject );_gcddfb {_aefb .Log .Debug ("\u0025\u0054\u0020%\u0076",_cbca .PdfObject ,_cbca .PdfObject );_aefb .Log .Debug ("\u0025\u0073",_cbca .PdfObject .String ());};};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cg .PdfObjectArray ;ExtGState _cg .PdfObject ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cggg *PdfFont )ToPdfObject ()_cg .PdfObject {if _cggg ._cgdd ==nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cg .MakeNull ();
};return _cggg ._cgdd .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_beec *PdfAnnotationMovie )ToPdfObject ()_cg .PdfObject {_beec .PdfAnnotation .ToPdfObject ();_edgd :=_beec ._bed ;_ade :=_edgd .PdfObject .(*_cg .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u004d\u006f\u0076i\u0065"));
_ade .SetIfNotNil ("\u0054",_beec .T );_ade .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_beec .Movie );_ade .SetIfNotNil ("\u0041",_beec .A );return _edgd ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dbfd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fff .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cebc ,_dgfg :=_cc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dbcf ,img ._gegd );if _dgfg !=nil {return img ,_dgfg ;};_fcdf ,_dgfg :=_cc .NRGBAConverter .Convert (_cebc );if _dgfg !=nil {return img ,_dgfg ;
};_agfb :=_fddbb (_fcdf .Base ());_aefb .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_aefb .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_aefb .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_agfb .Data );
_aefb .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_agfb );return _agfb ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_abdfc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cg .GetNumberAsFloat (_abdfc .Ascent );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cg .PdfObject ;_fbgafg []byte ;_fgda *_cg .PdfIndirectObject ;};var (ErrRequiredAttributeMissing =_fff .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_gdfd =_fff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_fff .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fff .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_aefg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cg .ErrNotSupported );ErrType1CFontNotSupported =_aefg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cg .ErrNotSupported );
ErrType3FontNotSupported =_aefg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cg .ErrNotSupported );
ErrTTCmapNotSupported =_aefg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cg .ErrNotSupported );
ErrSignNotEnoughSpace =_aefg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_aefg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_aefe *pdfFontSimple )addEncoding ()error {var (_eefgbe string ;
_effcg map[_eba .CharCode ]_eba .GlyphName ;_dccaa _eba .SimpleEncoder ;);if _aefe .Encoder ()!=nil {_ebag ,_eecc :=_aefe .Encoder ().(_eba .SimpleEncoder );if _eecc &&_ebag !=nil {_eefgbe =_ebag .BaseName ();};};if _aefe .Encoding !=nil {_abcg ,_gbdde ,_bffg :=_aefe .getFontEncoding ();
if _bffg !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aefe ._fbdedg ,_aefe ._agbd ,_aefe .Encoding ,_aefe .Encoding ,_bffg );
return _bffg ;};if _abcg !=""{_eefgbe =_abcg ;};_effcg =_gbdde ;_dccaa ,_bffg =_eba .NewSimpleTextEncoder (_eefgbe ,_effcg );if _bffg !=nil {return _bffg ;};};if _dccaa ==nil {_caaa :=_aefe ._bfggb ;if _caaa !=nil {switch _aefe ._agbd {case "\u0054\u0079\u0070e\u0031":if _caaa .fontFile !=nil &&_caaa .fontFile ._badefc !=nil {_aefb .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_dccaa =_caaa .fontFile ._badefc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _caaa ._gfcea !=nil {_aefb .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_dbadc ,_edbec :=_caaa ._gfcea .MakeEncoder ();
if _edbec ==nil {_dccaa =_dbadc ;};};};};};if _dccaa !=nil {if _effcg !=nil {_aefb .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_effcg ,_aefe .baseFields ());
_dccaa =_eba .ApplyDifferences (_dccaa ,_effcg );};_aefe .SetEncoder (_dccaa );};return nil ;};func (_ddag *PdfReader )newPdfAnnotationPrinterMarkFromDict (_eagg *_cg .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_agc :=PdfAnnotationPrinterMark {};
_agc .MN =_eagg .Get ("\u004d\u004e");return &_agc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gebg *PdfAnnotationTrapNet )ToPdfObject ()_cg .PdfObject {_gebg .PdfAnnotation .ToPdfObject ();_ddcd :=_gebg ._bed ;_bfbd :=_ddcd .PdfObject .(*_cg .PdfObjectDictionary );_bfbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ddcd ;};func (_gbgbd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gbgbd ._bafg .GetCrypter ()!=nil &&!_gbgbd ._bafg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_edbbc :=_gbgbd ._fbggd ;_cegaa :=_edbbc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cegaa ==nil {return nil ,nil ;};_gegcb ,_ :=_cg .GetIndirect (_cegaa );_cegaa =_cg .TraceToDirectObject (_cegaa );if _cg .IsNullObject (_cegaa ){_aefb .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_fgfbg ,_ecad :=_cg .GetDict (_cegaa );if !_ecad {_aefb .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cegaa );_aefb .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cegaa );};_aefb .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_aefb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gbgbd ._ddae {_effd :=_gbgbd .traverseObjectData (_fgfbg );
if _effd !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_effd );
return nil ,_effd ;};};_ccdcd ,_bagfa :=_gbgbd .newPdfAcroFormFromDict (_gegcb ,_fgfbg );if _bagfa !=nil {return nil ,_bagfa ;};return _ccdcd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bge *PdfActionGoTo3DView )ToPdfObject ()_cg .PdfObject {_bge .PdfAction .ToPdfObject ();_eee :=_bge ._ebd ;_cbf :=_eee .PdfObject .(*_cg .PdfObjectDictionary );_cbf .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeGoTo3DView )));_cbf .SetIfNotNil ("\u0054\u0041",_bge .TA );
_cbf .SetIfNotNil ("\u0056",_bge .V );return _eee ;};func (_cefbd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cefbd ._bfggb };func _fabgb (_bdffd *_cg .PdfIndirectObject )(*PdfOutline ,error ){_deacd ,_efebd :=_bdffd .PdfObject .(*_cg .PdfObjectDictionary );
if !_efebd {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_egcaa :=NewPdfOutline ();if _eggda :=_deacd .Get ("\u0054\u0079\u0070\u0065");
_eggda !=nil {_gfgg ,_aebcge :=_eggda .(*_cg .PdfObjectName );if _aebcge {if *_gfgg !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gfgg );
};};};if _dffad :=_deacd .Get ("\u0043\u006f\u0075n\u0074");_dffad !=nil {_aeefe ,_cdcc :=_cg .GetNumberAsInt64 (_dffad );if _cdcc !=nil {return nil ,_cdcc ;};_egcaa .Count =&_aeefe ;};return _egcaa ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fgcgg *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbab ,_dffa :=_cg .GetNumbersAsFloat (objects );
if _dffa !=nil {return nil ,_dffa ;};return _fgcgg .ColorFromFloats (_gbab );};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bbaga *PdfPage )SetContentStreams (cStreams []string ,encoder _cg .StreamEncoder )error {if len (cStreams )==0{_bbaga .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cg .NewRawEncoder ();};var _ceebf []*_cg .PdfObjectStream ;for _ ,_ffeb :=range cStreams {_gbgfa :=&_cg .PdfObjectStream {};
_dfee :=encoder .MakeStreamDict ();_cfbe ,_affag :=encoder .EncodeBytes ([]byte (_ffeb ));if _affag !=nil {return _affag ;};_dfee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_cfbe ))));_gbgfa .PdfObjectDictionary =_dfee ;
_gbgfa .Stream =_cfbe ;_ceebf =append (_ceebf ,_gbgfa );};if len (_ceebf )==1{_bbaga .Contents =_ceebf [0];}else {_eadg :=_cg .MakeArray ();for _ ,_debeg :=range _ceebf {_eadg .Append (_debeg );};_bbaga .Contents =_eadg ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_adc *PdfActionImportData )ToPdfObject ()_cg .PdfObject {_adc .PdfAction .ToPdfObject ();_gecb :=_adc ._ebd ;_bfg :=_gecb .PdfObject .(*_cg .PdfObjectDictionary );_bfg .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeImportData )));if _adc .F !=nil {_bfg .Set ("\u0046",_adc .F .ToPdfObject ());
};return _gecb ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_dafdgc *PdfWriter )SetNameDictionary (names _cg .PdfObject )error {if names ==nil {return nil ;};_aefb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_dafdgc ._adafd .Set ("\u004e\u0061\u006de\u0073",names );return _dafdgc .addObjects (names );};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fdgg *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_aace *PdfWriter )writeObjectsInStreams (_aedae map[_cg .PdfObject ]bool )error {for _ ,_adeb :=range _aace ._gegb {if _gcdda :=_aedae [_adeb ];
_gcdda {continue ;};_ffabbe :=int64 (0);switch _befb :=_adeb .(type ){case *_cg .PdfIndirectObject :_ffabbe =_befb .ObjectNumber ;case *_cg .PdfObjectStream :_ffabbe =_befb .ObjectNumber ;case *_cg .PdfObjectStreams :_ffabbe =_befb .ObjectNumber ;default:_aefb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_adeb );
return ErrTypeCheck ;};if _aace ._dfeee !=nil &&_adeb !=_aace ._gddd {_dabfb :=_aace ._dfeee .Encrypt (_adeb ,_ffabbe ,0);if _dabfb !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dabfb );
return _dabfb ;};};_aace .writeObject (int (_ffabbe ),_adeb );};return nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";
);

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cg .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_cg .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_bdefb ,_aagbad :=encoder .EncodeBytes (img .Data );
if _aagbad !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_aagbad );return nil ,_aagbad ;};_bgcad :=NewXObjectImage ();_ebfbeb :=img .Width ;_gdecba :=img .Height ;
_bgcad .Width =&_ebfbeb ;_bgcad .Height =&_gdecba ;_fbdge :=img .BitsPerComponent ;_bgcad .BitsPerComponent =&_fbdge ;_bgcad .Filter =encoder ;_bgcad .Stream =_bdefb ;if cs ==nil {if img .ColorComponents ==1{_bgcad .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_bgcad .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_bgcad .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_bgcad .ColorSpace =cs ;};if len (img ._dbcf )!=0{_aggef :=NewXObjectImage ();_aggef .Filter =encoder ;_aeecg ,_fggbb :=encoder .EncodeBytes (img ._dbcf );if _fggbb !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_fggbb );
return nil ,_fggbb ;};_aggef .Stream =_aeecg ;_aggef .BitsPerComponent =_bgcad .BitsPerComponent ;_aggef .Width =&img .Width ;_aggef .Height =&img .Height ;_aggef .ColorSpace =NewPdfColorspaceDeviceGray ();_bgcad .SMask =_aggef .ToPdfObject ();}else {_bgcad .SMask =xobjIn .SMask ;
_bgcad .ImageMask =xobjIn .ImageMask ;if _bgcad .ColorSpace .GetNumComponents ()==1{_bcbba (_bgcad );};};return _bgcad ,nil ;};func _beff (_fcggg *_cg .PdfObjectDictionary ,_cgfbc *fontCommon )(*pdfCIDFontType2 ,error ){if _cgfbc ._agbd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_aefb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cgfbc );
return nil ,_cg .ErrRangeError ;};_aagc :=_egfa (_cgfbc );_fbba ,_dgce :=_cg .GetDict (_fcggg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dgce {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cgfbc );
return nil ,ErrRequiredAttributeMissing ;};_aagc .CIDSystemInfo =_fbba ;_aagc .DW =_fcggg .Get ("\u0044\u0057");_aagc .W =_fcggg .Get ("\u0057");_aagc .DW2 =_fcggg .Get ("\u0044\u0057\u0032");_aagc .W2 =_fcggg .Get ("\u0057\u0032");_aagc .CIDToGIDMap =_fcggg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_aagc ._cddef =1000.0;if _gffd ,_ebedf :=_cg .GetNumberAsFloat (_aagc .DW );_ebedf ==nil {_aagc ._cddef =_gffd ;};_gbaga ,_afffb :=_cefb (_aagc .W );if _afffb !=nil {return nil ,_afffb ;};if _gbaga ==nil {_gbaga =map[_eba .CharCode ]float64 {};};_aagc ._fefaa =_gbaga ;
return _aagc ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_ccegf *PdfFieldButton )IsRadio ()bool {return _ccegf .GetType ()==ButtonTypeRadio };

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_ccaec *VRI )ToPdfObject ()*_cg .PdfObjectDictionary {_fbecb :=_cg .MakeDict ();_fbecb .SetIfNotNil (_cg .PdfObjectName ("\u0043\u0065\u0072\u0074"),_feacc (_ccaec .Cert ));_fbecb .SetIfNotNil (_cg .PdfObjectName ("\u004f\u0043\u0053\u0050"),_feacc (_ccaec .OCSP ));
_fbecb .SetIfNotNil (_cg .PdfObjectName ("\u0043\u0052\u004c"),_feacc (_ccaec .CRL ));_fbecb .SetIfNotNil ("\u0054\u0055",_ccaec .TU );_fbecb .SetIfNotNil ("\u0054\u0053",_ccaec .TS );return _fbecb ;};var _fdacg =_eg .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");


// M returns the value of the magenta component of the color.
func (_dgff *PdfColorDeviceCMYK )M ()float64 {return _dgff [1]};

// ToPdfObject implements interface PdfModel.
func (_cddge *PdfTransformParamsDocMDP )ToPdfObject ()_cg .PdfObject {_agdege :=_cg .MakeDict ();_agdege .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cddge .Type );_agdege .SetIfNotNil ("\u0056",_cddge .V );_agdege .SetIfNotNil ("\u0050",_cddge .P );return _agdege ;
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bgfd *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgd :=vals [0];if _gdgd < 0.0||_gdgd > 100.0{_aefb .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_gdgd );
return nil ,ErrColorOutOfRange ;};_ddcf :=vals [1];_ffce :=float64 (-100);_gcag :=float64 (100);if len (_bgfd .Range )> 1{_ffce =_bgfd .Range [0];_gcag =_bgfd .Range [1];};if _ddcf < _ffce ||_ddcf > _gcag {_aefb .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ddcf ,_ffce ,_gcag );
return nil ,ErrColorOutOfRange ;};_bbfd :=vals [2];_cded :=float64 (-100);_agfd :=float64 (100);if len (_bgfd .Range )> 3{_cded =_bgfd .Range [2];_agfd =_bgfd .Range [3];};if _bbfd < _cded ||_bbfd > _agfd {_aefb .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_bbfd ,_cded ,_agfd );
return nil ,ErrColorOutOfRange ;};_fdff :=NewPdfColorLab (_gdgd ,_ddcf ,_bbfd );return _fdff ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eedg *PdfActionSetOCGState )ToPdfObject ()_cg .PdfObject {_eedg .PdfAction .ToPdfObject ();_fef :=_eedg ._ebd ;_cad :=_fef .PdfObject .(*_cg .PdfObjectDictionary );_cad .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeSetOCGState )));_cad .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eedg .State );
_cad .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_eedg .PreserveRB );return _fef ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cg .PdfObject ;Flags _cg .PdfObject ;};func (_babbd *PdfWriter )addObject (_cbgg _cg .PdfObject )bool {_eedee :=_babbd .hasObject (_cbgg );if !_eedee {_fccgd :=_cg .ResolveReferencesDeep (_cbgg ,_babbd ._aabff );
if _fccgd !=nil {_aefb .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_fccgd );};_babbd ._gegb =append (_babbd ._gegb ,_cbgg );_babbd ._dcage [_cbgg ]=struct{}{};return true ;};return false ;
};func _abfgc (_ddgb *_cg .PdfObjectDictionary )*VRI {_gef ,_ :=_cg .GetString (_ddgb .Get ("\u0054\u0055"));_acgg ,_ :=_cg .GetString (_ddgb .Get ("\u0054\u0053"));return &VRI {Cert :_acaga (_ddgb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_acaga (_ddgb .Get ("\u004f\u0043\u0053\u0050")),CRL :_acaga (_ddgb .Get ("\u0043\u0052\u004c")),TU :_gef ,TS :_acgg };
};

// AddOutlineTree adds outlines to a PDF file.
func (_fecaa *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fecaa ._bfec =outlineTree };

// PdfVersion returns version of the PDF file.
func (_fgadd *PdfReader )PdfVersion ()_cg .Version {return _fgadd ._bafg .PdfVersion ()};var (CourierName =_egg .CourierName ;CourierBoldName =_egg .CourierBoldName ;CourierObliqueName =_egg .CourierObliqueName ;CourierBoldObliqueName =_egg .CourierBoldObliqueName ;
HelveticaName =_egg .HelveticaName ;HelveticaBoldName =_egg .HelveticaBoldName ;HelveticaObliqueName =_egg .HelveticaObliqueName ;HelveticaBoldObliqueName =_egg .HelveticaBoldObliqueName ;SymbolName =_egg .SymbolName ;ZapfDingbatsName =_egg .ZapfDingbatsName ;
TimesRomanName =_egg .TimesRomanName ;TimesBoldName =_egg .TimesBoldName ;TimesItalicName =_egg .TimesItalicName ;TimesBoldItalicName =_egg .TimesBoldItalicName ;);func (_dfbg *PdfAnnotation )String ()string {_fcce :="";_bab ,_eaad :=_dfbg .ToPdfObject ().(*_cg .PdfIndirectObject );
if _eaad {_fcce =_g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dfbg ._addda ,_bab .PdfObject .String ());};return _fcce ;};func (_cacga *PdfWriter )addObjects (_dbdcg _cg .PdfObject )error {_aefb .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _cgdfd ,_abgda :=_dbdcg .(*_cg .PdfIndirectObject );_abgda {_aefb .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_aefb .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_dbdcg ,_cgdfd );_aefb .Log .Trace ("\u002d\u0020\u0025\u0073",_cgdfd .PdfObject );
if _cacga .addObject (_cgdfd ){_ecgeg :=_cacga .addObjects (_cgdfd .PdfObject );if _ecgeg !=nil {return _ecgeg ;};};return nil ;};if _fdggg ,_bbgfe :=_dbdcg .(*_cg .PdfObjectStream );_bbgfe {_aefb .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_aefb .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_dbdcg ,_dbdcg );
if _cacga .addObject (_fdggg ){_bgcdf :=_cacga .addObjects (_fdggg .PdfObjectDictionary );if _bgcdf !=nil {return _bgcdf ;};};return nil ;};if _gbad ,_ggdd :=_dbdcg .(*_cg .PdfObjectDictionary );_ggdd {_aefb .Log .Trace ("\u0044\u0069\u0063\u0074");_aefb .Log .Trace ("\u002d\u0020\u0025\u0073",_dbdcg );
for _ ,_edbcf :=range _gbad .Keys (){_geaba :=_gbad .Get (_edbcf );if _cafge ,_acdbg :=_geaba .(*_cg .PdfObjectReference );_acdbg {_geaba =_cafge .Resolve ();_gbad .Set (_edbcf ,_geaba );};if _edbcf !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ceaca :=_cacga .addObjects (_geaba );
_ceaca !=nil {return _ceaca ;};}else {if _ ,_aedeac :=_geaba .(*_cg .PdfObjectNull );_aedeac {continue ;};if _ffcgc :=_cacga .hasObject (_geaba );!_ffcgc {_aefb .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_geaba ,_geaba ,_geaba );
_cacga ._cegde [_geaba ]=append (_cacga ._cegde [_geaba ],_gbad );};};};return nil ;};if _ceafb ,_acdgaf :=_dbdcg .(*_cg .PdfObjectArray );_acdgaf {_aefb .Log .Trace ("\u0041\u0072\u0072a\u0079");_aefb .Log .Trace ("\u002d\u0020\u0025\u0073",_dbdcg );if _ceafb ==nil {return _fff .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _eccda ,_effebe :=range _ceafb .Elements (){if _edeae ,_affae :=_effebe .(*_cg .PdfObjectReference );_affae {_effebe =_edeae .Resolve ();_ceafb .Set (_eccda ,_effebe );};if _bddf :=_cacga .addObjects (_effebe );_bddf !=nil {return _bddf ;};};return nil ;
};if _ ,_fecgec :=_dbdcg .(*_cg .PdfObjectReference );_fecgec {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_dbdcg );
return _fff .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;
PdfOutputIntentTypeX ;);

// SetPatternByName sets a pattern resource specified by keyName.
func (_abbgd *PdfPageResources )SetPatternByName (keyName _cg .PdfObjectName ,pattern _cg .PdfObject )error {if _abbgd .Pattern ==nil {_abbgd .Pattern =_cg .MakeDict ();};_gbebb ,_dfcg :=_abbgd .Pattern .(*_cg .PdfObjectDictionary );if !_dfcg {return _cg .ErrTypeError ;
};_gbebb .Set (keyName ,pattern );return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_eefbc int ,_gbdbc *PdfPage );func (_bdecf *PdfSignature )extractChainFromCert ()([]*_a .Certificate ,error ){var _adcge *_cg .PdfObjectArray ;switch _cabega :=_bdecf .Cert .(type ){case *_cg .PdfObjectString :_adcge =_cg .MakeArray (_cabega );
case *_cg .PdfObjectArray :_adcge =_cabega ;default:return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cabega );
};var _dfbf _gbe .Buffer ;for _ ,_gcfeb :=range _adcge .Elements (){_cafgf ,_ebfea :=_cg .GetString (_gcfeb );if !_ebfea {return nil ,_g .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_gcfeb );
};if _ ,_bgadg :=_dfbf .Write (_cafgf .Bytes ());_bgadg !=nil {return nil ,_bgadg ;};};return _a .ParseCertificates (_dfbf .Bytes ());};

// ToPdfObject returns a stream object.
func (_ebggf *XObjectImage )ToPdfObject ()_cg .PdfObject {_fagbg :=_ebggf ._cbfff ;_fcbca :=_fagbg .PdfObjectDictionary ;if _ebggf .Filter !=nil {_fcbca =_ebggf .Filter .MakeStreamDict ();_fagbg .PdfObjectDictionary =_fcbca ;};_fcbca .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_fcbca .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0049\u006d\u0061g\u0065"));_fcbca .Set ("\u0057\u0069\u0064t\u0068",_cg .MakeInteger (*(_ebggf .Width )));_fcbca .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cg .MakeInteger (*(_ebggf .Height )));
if _ebggf .BitsPerComponent !=nil {_fcbca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cg .MakeInteger (*(_ebggf .BitsPerComponent )));};if _ebggf .ColorSpace !=nil {_fcbca .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebggf .ColorSpace .ToPdfObject ());
};_fcbca .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ebggf .Intent );_fcbca .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ebggf .ImageMask );_fcbca .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ebggf .Mask );_cbfba :=_fcbca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _ebggf .Decode ==nil &&_cbfba {_fcbca .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ebggf .Decode !=nil {_fcbca .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebggf .Decode );};_fcbca .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ebggf .Interpolate );
_fcbca .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ebggf .Alternatives );_fcbca .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ebggf .SMask );_fcbca .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ebggf .SMaskInData );
_fcbca .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ebggf .Matte );_fcbca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebggf .Name );_fcbca .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebggf .StructParent );_fcbca .SetIfNotNil ("\u0049\u0044",_ebggf .ID );
_fcbca .SetIfNotNil ("\u004f\u0050\u0049",_ebggf .OPI );_fcbca .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ebggf .Metadata );_fcbca .SetIfNotNil ("\u004f\u0043",_ebggf .OC );_fcbca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cg .MakeInteger (int64 (len (_ebggf .Stream ))));
_fagbg .Stream =_ebggf .Stream ;return _fagbg ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_gefa *PdfWriter )AddPage (page *PdfPage )error {const _efeeg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cgccf (page );_cdda :=page .ToPdfObject ();_aefb .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_aefb .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cdda );_fcfgge ,_cabfeb :=_cg .GetIndirect (_cdda );if !_cabfeb {return _fff .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_aefb .Log .Trace ("\u0025\u0073",_fcfgge );_aefb .Log .Trace ("\u0025\u0073",_fcfgge .PdfObject );_dgecc ,_cabfeb :=_cg .GetDict (_fcfgge .PdfObject );if !_cabfeb {return _fff .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_agbddb ,_cabfeb :=_cg .GetName (_dgecc .Get ("\u0054\u0079\u0070\u0065"));if !_cabfeb {return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dgecc .Get ("\u0054\u0079\u0070\u0065"));
};if _agbddb .String ()!="\u0050\u0061\u0067\u0065"{return _fff .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_edea :=[]_cg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_cabec ,_cdeag :=_cg .GetIndirect (_dgecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_aefb .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dgecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_cdeag );
for _cdeag {_aefb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cabec );_baceg ,_fgbddb :=_cg .GetDict (_cabec .PdfObject );if !_fgbddb {return _fff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_eeebe :=range _edea {_aefb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eeebe );if _dgecc .Get (_eeebe )!=nil {_aefb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _cffba :=_baceg .Get (_eeebe );_cffba !=nil {_aefb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eeebe );_dgecc .Set (_eeebe ,_cffba );};};_cabec ,_cdeag =_cg .GetIndirect (_baceg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_aefb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_baceg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_aefb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dgecc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gefa ._agacf );_fcfgge .PdfObject =_dgecc ;_ebegb ,_cabfeb :=_cg .GetDict (_gefa ._agacf .PdfObject );if !_cabfeb {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bfge ,_cabfeb :=_cg .GetArray (_ebegb .Get ("\u004b\u0069\u0064\u0073"));if !_cabfeb {return _fff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bfge .Append (_fcfgge );_gefa ._gddfd [_dgecc ]=struct{}{};_afgc ,_cabfeb :=_cg .GetInt (_ebegb .Get ("\u0043\u006f\u0075n\u0074"));if !_cabfeb {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_afgc =*_afgc +1;if page ._abeaf ==nil {_abdcg :=_db .Track (_gefa ._egdda ,_efeeg );if _abdcg !=nil {return _abdcg ;};}else {_feecd :=_db .Track (page ._abeaf ._cabdf ,_efeeg );if _feecd !=nil {return _feecd ;};};_gefa .addObject (_fcfgge );_bggfb :=_gefa .addObjects (_dgecc );
if _bggfb !=nil {return _bggfb ;};return nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bgdced DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cg .PdfObjectArray ;Domain *_cg .PdfObjectArray ;Function []PdfFunction ;Extend *_cg .PdfObjectArray ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_ccbd *PdfField )GetContext ()PdfModel {return _ccbd ._bcgd };

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_dbf PdfModel ;Type _cg .PdfObject ;S _cg .PdfObject ;Next _cg .PdfObject ;_ebd *_cg .PdfIndirectObject ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_abdd *PdfColorspaceSpecialIndexed )ToPdfObject ()_cg .PdfObject {_badd :=_cg .MakeArray (_cg .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_badd .Append (_abdd .Base .ToPdfObject ());_badd .Append (_cg .MakeInteger (int64 (_abdd .HiVal )));
_badd .Append (_abdd .Lookup );if _abdd ._fgda !=nil {_abdd ._fgda .PdfObject =_badd ;return _abdd ._fgda ;};return _badd ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bdc :=NewPdfAction ();_eaa :=&PdfActionGoTo3DView {};_eaa .PdfAction =_bdc ;_bdc .SetContext (_eaa );return _eaa ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;
);

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cg .PdfObject ;PreserveRB _cg .PdfObject ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gfdg :=PdfWriter {};_gfdg ._dcage =map[_cg .PdfObject ]struct{}{};_gfdg ._gegb =[]_cg .PdfObject {};_gfdg ._cegde =map[_cg .PdfObject ][]*_cg .PdfObjectDictionary {};_gfdg ._aabff =map[_cg .PdfObject ]struct{}{};_gfdg ._cdadd .Major =1;
_gfdg ._cdadd .Minor =3;_afabg :=_cg .MakeDict ();_fbbef :=[]struct{_fffdb _cg .PdfObjectName ;_aacgb string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_debgad ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bdfda ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_aeffa ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_fbce ()},{"\u0054\u0069\u0074l\u0065",_faebg ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ebbeb ()}};
for _ ,_dgbg :=range _fbbef {if _dgbg ._aacgb !=""{_afabg .Set (_dgbg ._fffdb ,_cg .MakeString (_dgbg ._aacgb ));};};if _bggc :=_fgaea ();!_bggc .IsZero (){if _bcaab ,_aacgf :=NewPdfDateFromTime (_bggc );_aacgf ==nil {_afabg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bcaab .ToPdfObject ());
};};if _befe :=_caefe ();!_befe .IsZero (){if _begfd ,_edffef :=NewPdfDateFromTime (_befe );_edffef ==nil {_afabg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_begfd .ToPdfObject ());};};_dcgdb :=_cg .PdfIndirectObject {};_dcgdb .PdfObject =_afabg ;_gfdg ._aeea =&_dcgdb ;
_gfdg .addObject (&_dcgdb );_ebfga :=_cg .PdfIndirectObject {};_gbfd :=_cg .MakeDict ();_gbfd .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ebfga .PdfObject =_gbfd ;_gfdg ._dfacgd =&_ebfga ;_gfdg .addObject (_gfdg ._dfacgd );
_ecabcf ,_fbgdc :=_bcdfc ("\u0077");if _fbgdc !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgdc );};_gfdg ._egdda =_ecabcf ;_dedaf :=_cg .PdfIndirectObject {};_ggcee :=_cg .MakeDict ();_ggcee .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050\u0061\u0067e\u0073"));
_fgfdff :=_cg .PdfObjectArray {};_ggcee .Set ("\u004b\u0069\u0064\u0073",&_fgfdff );_ggcee .Set ("\u0043\u006f\u0075n\u0074",_cg .MakeInteger (0));_dedaf .PdfObject =_ggcee ;_gfdg ._agacf =&_dedaf ;_gfdg ._gddfd =map[_cg .PdfObject ]struct{}{};_gfdg .addObject (_gfdg ._agacf );
_gbfd .Set ("\u0050\u0061\u0067e\u0073",&_dedaf );_gfdg ._adafd =_gbfd ;_aefb .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ebfga );return _gfdg ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gfgd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdaa :=vals [0];if _gdaa < 0.0||_gdaa > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdaa );
return nil ,ErrColorOutOfRange ;};_eecg :=vals [1];if _eecg < 0.0||_eecg > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eecg );return nil ,ErrColorOutOfRange ;
};_cbdd :=vals [2];if _cbdd < 0.0||_cbdd > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cbdd );return nil ,ErrColorOutOfRange ;};_ffab :=vals [3];
if _ffab < 0.0||_ffab > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ffab );return nil ,ErrColorOutOfRange ;};_gbca :=NewPdfColorDeviceCMYK (_gdaa ,_eecg ,_cbdd ,_ffab );
return _gbca ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_bfbf *PdfFieldChoice )ToPdfObject ()_cg .PdfObject {_bfbf .PdfField .ToPdfObject ();_aagg :=_bfbf ._gecee ;_gdebad :=_aagg .PdfObject .(*_cg .PdfObjectDictionary );_gdebad .Set ("\u0046\u0054",_cg .MakeName ("\u0043\u0068"));if _bfbf .Opt !=nil {_gdebad .Set ("\u004f\u0070\u0074",_bfbf .Opt );
};if _bfbf .TI !=nil {_gdebad .Set ("\u0054\u0049",_bfbf .TI );};if _bfbf .I !=nil {_gdebad .Set ("\u0049",_bfbf .I );};return _aagg ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_bbbf :=&XObjectForm {};_cfdcd :=&_cg .PdfObjectStream {};_cfdcd .PdfObjectDictionary =_cg .MakeDict ();_bbbf ._eeecdg =_cfdcd ;return _bbbf ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cg .PdfObject ;Flags _cg .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gddf *PdfColorspaceCalRGB )ToPdfObject ()_cg .PdfObject {_bdbfa :=&_cg .PdfObjectArray {};_bdbfa .Append (_cg .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ccdc :=_cg .MakeDict ();if _gddf .WhitePoint !=nil {_ebdcd :=_cg .MakeArray (_cg .MakeFloat (_gddf .WhitePoint [0]),_cg .MakeFloat (_gddf .WhitePoint [1]),_cg .MakeFloat (_gddf .WhitePoint [2]));
_ccdc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ebdcd );}else {_aefb .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gddf .BlackPoint !=nil {_bdced :=_cg .MakeArray (_cg .MakeFloat (_gddf .BlackPoint [0]),_cg .MakeFloat (_gddf .BlackPoint [1]),_cg .MakeFloat (_gddf .BlackPoint [2]));_ccdc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bdced );
};if _gddf .Gamma !=nil {_bad :=_cg .MakeArray (_cg .MakeFloat (_gddf .Gamma [0]),_cg .MakeFloat (_gddf .Gamma [1]),_cg .MakeFloat (_gddf .Gamma [2]));_ccdc .Set ("\u0047\u0061\u006dm\u0061",_bad );};if _gddf .Matrix !=nil {_deec :=_cg .MakeArray (_cg .MakeFloat (_gddf .Matrix [0]),_cg .MakeFloat (_gddf .Matrix [1]),_cg .MakeFloat (_gddf .Matrix [2]),_cg .MakeFloat (_gddf .Matrix [3]),_cg .MakeFloat (_gddf .Matrix [4]),_cg .MakeFloat (_gddf .Matrix [5]),_cg .MakeFloat (_gddf .Matrix [6]),_cg .MakeFloat (_gddf .Matrix [7]),_cg .MakeFloat (_gddf .Matrix [8]));
_ccdc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_deec );};_bdbfa .Append (_ccdc );if _gddf ._bdbc !=nil {_gddf ._bdbc .PdfObject =_bdbfa ;return _gddf ._bdbc ;};return _bdbfa ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_afccc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cg .PdfObject )(PdfColor ,error ){if len (objects )!=_afccc .GetNumComponents (){return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gccgb ,_dcgcd :=_cg .GetNumbersAsFloat (objects );
if _dcgcd !=nil {return nil ,_dcgcd ;};return _afccc .ColorFromFloats (_gccgb );};func (_addba *PdfWriter )writeObjects (){_aefb .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_addba ._gegb ));_addba ._ggaccb =make (map[int ]crossReference );
_addba ._ggaccb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _addba ._cegcg .ObjectMap !=nil {for _fafa ,_eafgd :=range _addba ._cegcg .ObjectMap {if _fafa ==0{continue ;};if _eafgd .XType ==_cg .XrefTypeObjectStream {_daceg :=crossReference {Type :2,ObjectNumber :_eafgd .OsObjNumber ,Index :_eafgd .OsObjIndex };
_addba ._ggaccb [_fafa ]=_daceg ;};if _eafgd .XType ==_cg .XrefTypeTableEntry {_agbfe :=crossReference {Type :1,ObjectNumber :_eafgd .ObjectNumber ,Offset :_eafgd .Offset };_addba ._ggaccb [_fafa ]=_agbfe ;};};};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;RD _cg .PdfObject ;};func _gfaea (_dbadd *_cg .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dbcfc :=PdfShadingType2 {};_agbbb :=_dbadd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _agbbb ==nil {_aefb .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_gcbf ,_dabf :=_agbbb .(*_cg .PdfObjectArray );if !_dabf {_aefb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agbbb );return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _gcbf .Len ()!=4{_aefb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gcbf .Len ());return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_dbcfc .Coords =_gcbf ;if _gdgdff :=_dbadd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gdgdff !=nil {_gdgdff =_cg .TraceToDirectObject (_gdgdff );_bded ,_faeef :=_gdgdff .(*_cg .PdfObjectArray );if !_faeef {_aefb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdgdff );
return nil ,_fff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dbcfc .Domain =_bded ;};_agbbb =_dbadd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _agbbb ==nil {_aefb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dbcfc .Function =[]PdfFunction {};if _bfdgc ,_febbg :=_agbbb .(*_cg .PdfObjectArray );_febbg {for _ ,_gdce :=range _bfdgc .Elements (){_faaeb ,_dbab :=_eeafe (_gdce );if _dbab !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbab );
return nil ,_dbab ;};_dbcfc .Function =append (_dbcfc .Function ,_faaeb );};}else {_gdbbd ,_gcefc :=_eeafe (_agbbb );if _gcefc !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcefc );
return nil ,_gcefc ;};_dbcfc .Function =append (_dbcfc .Function ,_gdbbd );};if _aeaca :=_dbadd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aeaca !=nil {_aeaca =_cg .TraceToDirectObject (_aeaca );_bdadb ,_gbdee :=_aeaca .(*_cg .PdfObjectArray );if !_gbdee {_aefb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aeaca );
return nil ,_cg .ErrTypeError ;};if _bdadb .Len ()!=2{_aefb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdadb .Len ());return nil ,ErrInvalidAttribute ;
};_dbcfc .Extend =_bdadb ;};return &_dbcfc ,nil ;};

// L returns the value of the L component of the color.
func (_dgeda *PdfColorLab )L ()float64 {return _dgeda [0]};

// A returns the value of the A component of the color.
func (_caac *PdfColorLab )A ()float64 {return _caac [1]};func (_ccgdc *PdfSignature )extractChainFromPKCS7 ()([]*_a .Certificate ,error ){_begb ,_ddcff :=_ca .Parse (_ccgdc .Contents .Bytes ());if _ddcff !=nil {return nil ,_ddcff ;};return _begb .Certificates ,nil ;
};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_eedd *PdfReader )Decrypt (password []byte )(bool ,error ){_deafa ,_bgdbg :=_eedd ._bafg .Decrypt (password );if _bgdbg !=nil {return false ,_bgdbg ;};if !_deafa {return false ,nil ;};_bgdbg =_eedd .loadStructure ();if _bgdbg !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bgdbg );
return false ,_bgdbg ;};return true ,nil ;};func _feca (_aceae *_cg .PdfObjectDictionary ,_dceg *fontCommon )(*pdfFontType3 ,error ){_gaecc :=_bedcd (_dceg );_eafebc :=_aceae .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eafebc ==nil {_eafebc =_cg .MakeInteger (0);
};_gaecc .FirstChar =_eafebc ;_gebad ,_edded :=_cg .GetIntVal (_eafebc );if !_edded {_aefb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eafebc );
return nil ,_cg .ErrTypeError ;};_bbeff :=_eba .CharCode (_gebad );_eafebc =_aceae .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eafebc ==nil {_eafebc =_cg .MakeInteger (255);};_gaecc .LastChar =_eafebc ;_gebad ,_edded =_cg .GetIntVal (_eafebc );
if !_edded {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eafebc );return nil ,_cg .ErrTypeError ;
};_gdgad :=_eba .CharCode (_gebad );_eafebc =_aceae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eafebc !=nil {_gaecc .Resources =_eafebc ;};_eafebc =_aceae .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _eafebc ==nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_eafebc );
return nil ,_cg .ErrNotSupported ;};_gaecc .CharProcs =_eafebc ;_eafebc =_aceae .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _eafebc ==nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_eafebc );
return nil ,_cg .ErrNotSupported ;};_gaecc .FontMatrix =_eafebc ;_gaecc ._cabeg =make (map[_eba .CharCode ]float64 );_eafebc =_aceae .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eafebc !=nil {_gaecc .Widths =_eafebc ;_aeccd ,_cbfee :=_cg .GetArray (_eafebc );
if !_cbfee {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eafebc );return nil ,_cg .ErrTypeError ;
};_dgeeb ,_gdcdf :=_aeccd .ToFloat64Array ();if _gdcdf !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gdcdf ;};if len (_dgeeb )!=int (_gdgad -_bbeff +1){_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gdgad -_bbeff +1,len (_dgeeb ));
return nil ,_cg .ErrRangeError ;};_ceddb ,_cbfee :=_cg .GetArray (_gaecc .FontMatrix );if !_cbfee {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_ceddb );
return nil ,_gdcdf ;};_cbcc ,_gdcdf :=_ceddb .ToFloat64Array ();if _gdcdf !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gdcdf ;};_gbgac :=_bca .NewMatrix (_cbcc [0],_cbcc [1],_cbcc [2],_cbcc [3],_cbcc [4],_cbcc [5]);for _cbfda ,_fcfa :=range _dgeeb {_aafef ,_ :=_gbgac .Transform (_fcfa ,_fcfa );_gaecc ._cabeg [_bbeff +_eba .CharCode (_cbfda )]=_aafef ;};};_gaecc .Encoding =_cg .TraceToDirectObject (_aceae .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cade :=_aceae .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cade !=nil {_gaecc ._gdaff =_cg .TraceToDirectObject (_cade );_bcgf ,_dbaaf :=_dfbe (_gaecc ._gdaff ,&_gaecc .fontCommon );if _dbaaf !=nil {return nil ,_dbaaf ;};_gaecc ._dcded =_bcgf ;
};if _gdggg :=_gaecc ._dcded ;_gdggg !=nil {_gaecc ._abcca =_eba .NewCMapEncoder ("",nil ,_gdggg );}else {_gaecc ._abcca =_eba .NewPdfDocEncoder ();};return _gaecc ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_eebc :=PdfColorDeviceGray (grayVal );return &_eebc ;};func (_fddbf *PdfReader )resolveReference (_gbdba *_cg .PdfObjectReference )(_cg .PdfObject ,bool ,error ){_cfeff ,_gddfb :=_fddbf ._bafg .ObjCache [int (_gbdba .ObjectNumber )];
if !_gddfb {_aefb .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gbdba );_cccc ,_egbd :=_fddbf ._bafg .LookupByReference (*_gbdba );if _egbd !=nil {return nil ,false ,_egbd ;};_fddbf ._bafg .ObjCache [int (_gbdba .ObjectNumber )]=_cccc ;
return _cccc ,false ,nil ;};return _cfeff ,true ,nil ;};

// IsValid checks if the given pdf output intent type is valid.
func (_gfead PdfOutputIntentType )IsValid ()bool {return _gfead >=PdfOutputIntentTypeA1 &&_gfead <=PdfOutputIntentTypeX ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_fgeee _ef .ReadSeeker ;_gdec *_cg .PdfParser ;_afa *PdfReader ;Reader *PdfReader ;_fgcg []*PdfPage ;_aagf *PdfAcroForm ;_ddagb *DSS ;_geeg *Permissions ;_bgc _cg .XrefTable ;_gecf int64 ;_gagd int ;_gdd []_cg .PdfObject ;_fage map[_cg .PdfObject ]struct{};
_eddf map[_cg .PdfObject ]int64 ;_eafe map[_cg .PdfObject ]struct{};_eead map[_cg .PdfObject ]struct{};_gafg int64 ;_feed bool ;_daad string ;_cgeb *EncryptOptions ;_bbbb *PdfInfo ;};func (_fgbd *PdfReader )newPdfAnnotationInkFromDict (_ebge *_cg .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fgee :=PdfAnnotationInk {};
_edc ,_bcea :=_fgbd .newPdfAnnotationMarkupFromDict (_ebge );if _bcea !=nil {return nil ,_bcea ;};_fgee .PdfAnnotationMarkup =_edc ;_fgee .InkList =_ebge .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fgee .BS =_ebge .Get ("\u0042\u0053");return &_fgee ,nil ;
};func (_gccce *PdfWriter )checkLicense ()error {_cefbb :=_db .GetLicenseKey ();if (_cefbb ==nil ||!_cefbb .IsLicensed ())&&!_dbffa {_g .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_g .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _fff .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cg .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cg .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cg .PdfObjectBool ;_caeg PdfModel ;_ceabf _cg .PdfObject ;};

// String returns a string describing the font descriptor.
func (_dece *PdfFontDescriptor )String ()string {var _cfcaf []string ;if _dece .FontName !=nil {_cfcaf =append (_cfcaf ,_dece .FontName .String ());};if _dece .FontFamily !=nil {_cfcaf =append (_cfcaf ,_dece .FontFamily .String ());};if _dece .fontFile !=nil {_cfcaf =append (_cfcaf ,_dece .fontFile .String ());
};if _dece ._gfcea !=nil {_cfcaf =append (_cfcaf ,_dece ._gfcea .String ());};_cfcaf =append (_cfcaf ,_g .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_dece .FontFile3 !=nil ));return _g .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_gb .Join (_cfcaf ,"\u002c\u0020"));
};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_bdee *PdfWriter )SetDocInfo (info *PdfInfo ){_bdee .setDocInfo (info .ToPdfObject ())};func _gfgb (_agfac *_cg .PdfObjectArray )(float64 ,error ){_bcfga ,_afbdb :=_agfac .ToFloat64Array ();if _afbdb !=nil {_aefb .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agfac ,_afbdb );
};switch len (_bcfga ){case 1:return _bcfga [0],nil ;case 3:_aeae :=PdfColorspaceDeviceRGB {};_abagb ,_bcggd :=_aeae .ColorFromFloats (_bcfga );if _bcggd !=nil {return 0.0,_bcggd ;};return _abagb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fcgaag :=PdfColorspaceDeviceCMYK {};
_egga ,_deggd :=_fcgaag .ColorFromFloats (_bcfga );if _deggd !=nil {return 0.0,_deggd ;};_efgfd ,_deggd :=_fcgaag .ColorToRGB (_egga .(*PdfColorDeviceCMYK ));if _deggd !=nil {return 0.0,_deggd ;};return _efgfd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_afbdb =_fff .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_aefb .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_agfac ,_afbdb );
return 0.0,_afbdb ;};func (_fgce *PdfReader )newPdfActionSetOCGStateFromDict (_edgc *_cg .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_edgc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_edgc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};var ImageHandling ImageHandler =DefaultImageHandler {};func (_efdgf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _efdgf ._bfggb };

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_feaaa *PdfPageResources )GetXObjectImageByName (keyName _cg .PdfObjectName )(*XObjectImage ,error ){_ebcgd ,_fgfad :=_feaaa .GetXObjectByName (keyName );if _ebcgd ==nil {return nil ,nil ;};if _fgfad !=XObjectTypeImage {return nil ,_fff .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_agabbe ,_dabed :=NewXObjectImageFromStream (_ebcgd );if _dabed !=nil {return nil ,_dabed ;};return _agabbe ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ebb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_eebcg :=&PdfColorspaceLab {};_eebcg .BlackPoint =[]float64 {0.0,0.0,0.0};_eebcg .Range =[]float64 {-100,100,-100,100};return _eebcg ;};func _caffg (_fbaeb *_cg .PdfObjectDictionary )(*PdfShadingType3 ,error ){_dfdgg :=PdfShadingType3 {};
_dbbb :=_fbaeb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _dbbb ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_afggeg ,_ecgfa :=_dbbb .(*_cg .PdfObjectArray );if !_ecgfa {_aefb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbbb );
return nil ,_cg .ErrTypeError ;};if _afggeg .Len ()!=6{_aefb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_afggeg .Len ());return nil ,ErrInvalidAttribute ;
};_dfdgg .Coords =_afggeg ;if _ffdbc :=_fbaeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ffdbc !=nil {_ffdbc =_cg .TraceToDirectObject (_ffdbc );_dcgf ,_gbecf :=_ffdbc .(*_cg .PdfObjectArray );if !_gbecf {_aefb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffdbc );
return nil ,_cg .ErrTypeError ;};_dfdgg .Domain =_dcgf ;};_dbbb =_fbaeb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dbbb ==nil {_aefb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dfdgg .Function =[]PdfFunction {};if _egfdg ,_bedad :=_dbbb .(*_cg .PdfObjectArray );_bedad {for _ ,_facge :=range _egfdg .Elements (){_feee ,_bgcg :=_eeafe (_facge );if _bgcg !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgcg );
return nil ,_bgcg ;};_dfdgg .Function =append (_dfdgg .Function ,_feee );};}else {_gdecf ,_aabe :=_eeafe (_dbbb );if _aabe !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aabe );
return nil ,_aabe ;};_dfdgg .Function =append (_dfdgg .Function ,_gdecf );};if _ceeag :=_fbaeb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ceeag !=nil {_ceeag =_cg .TraceToDirectObject (_ceeag );_dfbcf ,_dcfab :=_ceeag .(*_cg .PdfObjectArray );if !_dcfab {_aefb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceeag );
return nil ,_cg .ErrTypeError ;};if _dfbcf .Len ()!=2{_aefb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dfbcf .Len ());return nil ,ErrInvalidAttribute ;
};_dfdgg .Extend =_dfbcf ;};return &_dfdgg ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_abdbf *PdfPageResources )GetExtGState (keyName _cg .PdfObjectName )(_cg .PdfObject ,bool ){if _abdbf .ExtGState ==nil {return nil ,false ;};_cdbbb ,_bbae :=_cg .TraceToDirectObject (_abdbf .ExtGState ).(*_cg .PdfObjectDictionary );if !_bbae {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abdbf .ExtGState );
return nil ,false ;};if _gbcd :=_cdbbb .Get (keyName );_gbcd !=nil {return _gbcd ,true ;};return nil ,false ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gcg *PdfAnnotation )GetContext ()PdfModel {if _gcg ==nil {return nil ;};return _gcg ._addda ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bgddg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_eba .CharCode )(_bfaa []rune ,_dfbd ,_gdfa int ){_gcef ,_dfbd ,_gdfa :=_bgddg .CharcodesToStrings (charcodes );return []rune (_gb .Join (_gcef ,"")),_dfbd ,_gdfa ;};func (_efdd *PdfReader )newPdfActionTransFromDict (_ggad *_cg .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ggad .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cafef *PdfFont )SubsetRegistered ()error {switch _bacad :=_cafef ._cgdd .(type ){case *pdfFontType0 :_fdaf :=_bacad .subsetRegistered ();if _fdaf !=nil {_aefb .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fdaf );
return _fdaf ;};if _bacad ._ceca !=nil {if _bacad ._befcb !=nil {_bacad ._befcb .ToPdfObject ();};_bacad .ToPdfObject ();};default:_aefb .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bacad );
};return nil ;};func _debgad ()string {_ebecf .Lock ();defer _ebecf .Unlock ();_eafebd :=_db .GetLicenseKey ();if len (_dddag )> 0&&(_eafebd .IsLicensed ()||_dbffa ){return _dddag ;};return _g .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_gbbg (),_eafebd .TypeToString ());
};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_acfd *PdfReader )GetOutlines ()(*Outline ,error ){if _acfd ==nil {return nil ,_fff .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_bdfca :=_acfd .GetOutlineTree ();if _bdfca ==nil {return nil ,_fff .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _agee func (_cfff *PdfOutlineTreeNode ,_degd *[]*OutlineItem );_agee =func (_eafc *PdfOutlineTreeNode ,_ebbcd *[]*OutlineItem ){if _eafc ==nil {return ;};if _eafc ._gegde ==nil {_aefb .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _dgaaaa *OutlineItem ;if _ccdeb ,_daacf :=_eafc ._gegde .(*PdfOutlineItem );_daacf {_gabe :=_ccdeb .Dest ;if (_gabe ==nil ||_cg .IsNullObject (_gabe ))&&_ccdeb .A !=nil {if _bfac ,_eeecg :=_cg .GetDict (_ccdeb .A );_eeecg {_gabe ,_ =_cg .GetArray (_bfac .Get ("\u0044"));
};};var _ceba OutlineDest ;if _gabe !=nil &&!_cg .IsNullObject (_gabe ){if _aadag ,_agfbg :=_gddff (_gabe ,_acfd );_agfbg ==nil {_ceba =*_aadag ;}else {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gabe ,_agfbg );
};};_dgaaaa =NewOutlineItem (_ccdeb .Title .Decoded (),_ceba );*_ebbcd =append (*_ebbcd ,_dgaaaa );if _ccdeb .Next !=nil {_agee (_ccdeb .Next ,_ebbcd );};};if _eafc .First !=nil {if _dgaaaa !=nil {_ebbcd =&_dgaaaa .Entries ;};_agee (_eafc .First ,_ebbcd );
};};_cfag :=NewOutline ();_agee (_bdfca ,&_cfag .Entries );return _cfag ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cg .PdfObject ;LE _cg .PdfObject ;BS _cg .PdfObject ;IC _cg .PdfObject ;BE _cg .PdfObject ;IT _cg .PdfObject ;Measure _cg .PdfObject ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cggbg *PdfPageResources )GetContainingPdfObject ()_cg .PdfObject {return _cggbg ._daacc };

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cg .PdfObject ;GetContainingPdfObject ()_cg .PdfObject ;};func _bedcd (_fddb *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_fddb }};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_dffc *pdfCIDFontType0 )ToPdfObject ()_cg .PdfObject {return _cg .MakeNull ()};func (_aaaca *PdfReader )loadDSS ()(*DSS ,error ){if _aaaca ._bafg .GetCrypter ()!=nil &&!_aaaca ._bafg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cdfb :=_aaaca ._fbggd .Get ("\u0044\u0053\u0053");if _cdfb ==nil {return nil ,nil ;};_cebff ,_ :=_cg .GetIndirect (_cdfb );_cdfb =_cg .TraceToDirectObject (_cdfb );switch _beae :=_cdfb .(type ){case *_cg .PdfObjectNull :return nil ,nil ;case *_cg .PdfObjectDictionary :return _cdgdb (_cebff ,_beae );
};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cdfb );};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ef .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gggge ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dbafa (rs ,opts ,true ,_gggge );
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_dedf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddde :=vals [0];if _ddde < 0.0||_ddde > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ddde );
return nil ,ErrColorOutOfRange ;};_bgdee :=vals [1];if _bgdee < 0.0||_bgdee > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bgdee );return nil ,ErrColorOutOfRange ;
};_cfbde :=vals [2];if _cfbde < 0.0||_cfbde > 1.0{_aefb .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfbde );return nil ,ErrColorOutOfRange ;};_eefgg :=NewPdfColorCalRGB (_ddde ,_bgdee ,_cfbde );
return _eefgg ,nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_ebecf .Lock ();defer _ebecf .Unlock ();_gbabf =keywords };func _cfec (_affbe _cg .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_fgcd :=&PdfColorspaceDeviceNAttributes {};var _bbbed *_cg .PdfObjectDictionary ;
switch _abcdg :=_affbe .(type ){case *_cg .PdfIndirectObject :_fgcd ._eacb =_abcdg ;var _afff bool ;_bbbed ,_afff =_abcdg .PdfObject .(*_cg .PdfObjectDictionary );if !_afff {_aefb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_cg .PdfObjectDictionary :_bbbed =_abcdg ;case *_cg .PdfObjectReference :_cfce :=_abcdg .Resolve ();return _cfec (_cfce );default:_aefb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbcg :=_bbbed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bbcg !=nil {_bfba ,_dacd :=_cg .TraceToDirectObject (_bbcg ).(*_cg .PdfObjectName );if !_dacd {_aefb .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_fff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fgcd .Subtype =_bfba ;};if _egcf :=_bbbed .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_egcf !=nil {_fgcd .Colorants =_egcf ;};if _acfgg :=_bbbed .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_acfgg !=nil {_fgcd .Process =_acfgg ;};if _aabf :=_bbbed .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_aabf !=nil {_fgcd .MixingHints =_aabf ;};return _fgcd ,nil ;};

// Y returns the value of the yellow component of the color.
func (_eafd *PdfColorDeviceCMYK )Y ()float64 {return _eafd [2]};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_ebecf .Lock ();defer _ebecf .Unlock ();_daabb =title };

// Subtype returns the font's "Subtype" field.
func (_feea *PdfFont )Subtype ()string {_fcafa :=_feea .baseFields ()._agbd ;if _eefcf ,_afcaff :=_feea ._cgdd .(*pdfFontType0 );_afcaff {_fcafa =_fcafa +"\u003a"+_eefcf .DescendantFont .Subtype ();};return _fcafa ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gceac pdfCIDFontType0 )GetRuneMetrics (r rune )(_egg .CharMetrics ,bool ){return _egg .CharMetrics {Wx :_gceac ._adfdf },true ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ccaa :=NewPdfAnnotation ();_aade :=&PdfAnnotationCaret {};_aade .PdfAnnotation =_ccaa ;_aade .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccaa .SetContext (_aade );return _aade ;};func _faeb (_fbfc string )(map[_eba .CharCode ]_eba .GlyphName ,error ){_eefa :=_gb .Split (_fbfc ,"\u000a");
_ggaae :=make (map[_eba .CharCode ]_eba .GlyphName );for _ ,_ffcb :=range _eefa {_egada :=_aeedg .FindStringSubmatch (_ffcb );if _egada ==nil {continue ;};_bdcag ,_ecfd :=_egada [1],_egada [2];_afbec ,_ddbdg :=_aef .Atoi (_bdcag );if _ddbdg !=nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ffcb );
return nil ,_cg .ErrTypeError ;};_ggaae [_eba .CharCode (_afbec )]=_eba .GlyphName (_ecfd );};_aefb .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_ggaae );
return _ggaae ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_dfabg *pdfFontType3 )baseFields ()*fontCommon {return &_dfabg .fontCommon };func (_gged *PdfAcroForm )fill (_baggf FieldValueProvider ,_gdcb FieldAppearanceGenerator )error {if _gged ==nil {return nil ;};_gebda ,_dfgg :=_baggf .FieldValues ();
if _dfgg !=nil {return _dfgg ;};for _ ,_egbbd :=range _gged .AllFields (){_daee :=_egbbd .PartialName ();_fgcc ,_ggaab :=_gebda [_daee ];if !_ggaab {if _acbcb ,_adea :=_egbbd .FullName ();_adea ==nil {_fgcc ,_ggaab =_gebda [_acbcb ];};};if !_ggaab {_aefb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_daee );
continue ;};if _cfgb :=_bbcfef (_egbbd ,_fgcc );_cfgb !=nil {return _cfgb ;};if _gdcb ==nil {continue ;};for _ ,_dabe :=range _egbbd .Annotations {_cgfcc ,_ddbag :=_gdcb .GenerateAppearanceDict (_gged ,_egbbd ,_dabe );if _ddbag !=nil {return _ddbag ;};
_dabe .AP =_cgfcc ;_dabe .ToPdfObject ();};};return nil ;};

// GetNumPages returns the number of pages in the document.
func (_fcdfb *PdfReader )GetNumPages ()(int ,error ){if _fcdfb ._bafg .GetCrypter ()!=nil &&!_fcdfb ._bafg .IsAuthenticated (){return 0,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fcdfb ._agdec ),nil ;};func _febge (_dgegd *_cg .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dffbf :=PdfShadingType4 {};_cbafd :=_dgegd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cbafd ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fbbbce ,_bacdac :=_cbafd .(*_cg .PdfObjectInteger );if !_bacdac {_aefb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbafd );
return nil ,_cg .ErrTypeError ;};_dffbf .BitsPerCoordinate =_fbbbce ;_cbafd =_dgegd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cbafd ==nil {_aefb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fbbbce ,_bacdac =_cbafd .(*_cg .PdfObjectInteger );if !_bacdac {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cbafd );
return nil ,_cg .ErrTypeError ;};_dffbf .BitsPerComponent =_fbbbce ;_cbafd =_dgegd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cbafd ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fbbbce ,_bacdac =_cbafd .(*_cg .PdfObjectInteger );if !_bacdac {_aefb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cbafd );
return nil ,_cg .ErrTypeError ;};_dffbf .BitsPerComponent =_fbbbce ;_cbafd =_dgegd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cbafd ==nil {_aefb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cefbde ,_bacdac :=_cbafd .(*_cg .PdfObjectArray );if !_bacdac {_aefb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbafd );
return nil ,_cg .ErrTypeError ;};_dffbf .Decode =_cefbde ;_cbafd =_dgegd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cbafd ==nil {_aefb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dffbf .Function =[]PdfFunction {};if _gfdce ,_befcbg :=_cbafd .(*_cg .PdfObjectArray );_befcbg {for _ ,_aedgb :=range _gfdce .Elements (){_beaef ,_aefgf :=_eeafe (_aedgb );if _aefgf !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aefgf );
return nil ,_aefgf ;};_dffbf .Function =append (_dffbf .Function ,_beaef );};}else {_cbcddd ,_ccfe :=_eeafe (_cbafd );if _ccfe !=nil {_aefb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccfe );
return nil ,_ccfe ;};_dffbf .Function =append (_dffbf .Function ,_cbcddd );};return &_dffbf ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_gcbeb *PdfPage )HasXObjectByName (name _cg .PdfObjectName )bool {_dade ,_effgc :=_gcbeb .Resources .XObject .(*_cg .PdfObjectDictionary );if !_effgc {return false ;};if _ecbeg :=_dade .Get (name );_ecbeg !=nil {return true ;};return false ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_agbff :=&PdfColorspaceCalGray {};_agbff .BlackPoint =[]float64 {0.0,0.0,0.0};_agbff .Gamma =1;return _agbff ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_bdgd ,_gegg :=_eabd (basefont );if _gegg !=nil {return nil ,_gegg ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_bdgd ._edbda =_eba .NewWinAnsiEncoder ();};return &PdfFont {_cgdd :&_bdgd },nil ;
};type pdfFontSimple struct{fontCommon ;_cdgcc *_cg .PdfIndirectObject ;_bdbde map[_eba .CharCode ]float64 ;_edbda _eba .TextEncoder ;_ebedb _eba .TextEncoder ;_cgdad *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cg .PdfObject ;LastChar _cg .PdfObject ;Widths _cg .PdfObject ;Encoding _cg .PdfObject ;_fegab *_egg .RuneCharSafeMap ;};var _dbffa =false ;func (_afgfe *PdfPage )setContainer (_ebab *_cg .PdfIndirectObject ){_ebab .PdfObject =_afgfe ._edcag ;
_afgfe ._aegd =_ebab ;};

// Val returns the value of the color.
func (_edcg *PdfColorCalGray )Val ()float64 {return float64 (*_edcg )};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_accgc *Outline )ToPdfOutline ()*PdfOutline {_fcefa :=NewPdfOutline ();var _dbedd []*PdfOutlineItem ;var _abeff int64 ;var _gffc *PdfOutlineItem ;for _ ,_bccfc :=range _accgc .Entries {_cfeb ,_edbc :=_bccfc .ToPdfOutlineItem ();_cfeb .Parent =&_fcefa .PdfOutlineTreeNode ;
if _gffc !=nil {_gffc .Next =&_cfeb .PdfOutlineTreeNode ;_cfeb .Prev =&_gffc .PdfOutlineTreeNode ;};_dbedd =append (_dbedd ,_cfeb );_abeff +=_edbc ;_gffc =_cfeb ;};_gdcg :=int64 (len (_dbedd ));_abeff +=_gdcg ;if _gdcg > 0{_fcefa .First =&_dbedd [0].PdfOutlineTreeNode ;
_fcefa .Last =&_dbedd [_gdcg -1].PdfOutlineTreeNode ;_fcefa .Count =&_abeff ;};return _fcefa ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_cdeb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_abga PdfFont )actualFont ()pdfFont {if _abga ._cgdd ==nil {_aefb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abga );
};return _abga ._cgdd ;};func (_gbaeb *LTV )generateVRIKey (_aeabf *PdfSignature )(string ,error ){_ebgae ,_gafe :=_gdffd (_aeabf .Contents .Bytes ());if _gafe !=nil {return "",_gafe ;};return _gb .ToUpper (_bd .EncodeToString (_ebgae )),nil ;};

// String returns a string that describes `font`.
func (_cadc *PdfFont )String ()string {_abgb :="";if _cadc ._cgdd .Encoder ()!=nil {_abgb =_cadc ._cgdd .Encoder ().String ();};return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_cadc ._cgdd ,_cadc .baseFields ().coreString (),_abgb );
};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_ebgac *PdfField )FullName ()(string ,error ){var _baced _gbe .Buffer ;_gggb :=[]string {};if _ebgac .T !=nil {_gggb =append (_gggb ,_ebgac .T .Decoded ());};_abfba :=map[*PdfField ]bool {};_abfba [_ebgac ]=true ;_edaa :=_ebgac .Parent ;for _edaa !=nil {if _ ,_agcc :=_abfba [_edaa ];
_agcc {return _baced .String (),_fff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _edaa .T ==nil {return _baced .String (),_fff .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_gggb =append (_gggb ,_edaa .T .Decoded ());_abfba [_edaa ]=true ;_edaa =_edaa .Parent ;};for _bbbd :=len (_gggb )-1;_bbbd >=0;_bbbd --{_baced .WriteString (_gggb [_bbbd ]);if _bbbd > 0{_baced .WriteString ("\u002e");};};return _baced .String (),nil ;
};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cfeed *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_acbf :=_cfeed .fill (provider ,appGen );if _acbf !=nil {return _acbf ;};if _ ,_cedg :=provider .(FieldImageProvider );_cedg {_acbf =_cfeed .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _acbf ;};func (_ggeef *PdfWriter )optimizeDocument ()error {if _ggeef ._dfbga ==nil {return nil ;};_fdbgfe ,_ebcdff :=_cg .GetDict (_ggeef ._aeea );if !_ebcdff {return _fff .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gdcde :=_fc .Document {ID :[2]string {_ggeef ._cfga ,_ggeef ._befdb },Version :_ggeef ._cdadd ,Objects :_ggeef ._gegb ,Info :_fdbgfe ,Crypt :_ggeef ._dfeee ,UseHashBasedID :_ggeef ._fgagd };if _fafgc :=_ggeef ._dfbga .ApplyStandard (&_gdcde );_fafgc !=nil {return _fafgc ;
};_ggeef ._cfga ,_ggeef ._befdb =_gdcde .ID [0],_gdcde .ID [1];_ggeef ._cdadd =_gdcde .Version ;_ggeef ._gegb =_gdcde .Objects ;_ggeef ._aeea .PdfObject =_gdcde .Info ;_ggeef ._fgagd =_gdcde .UseHashBasedID ;_ggeef ._dfeee =_gdcde .Crypt ;_caedb :=make (map[_cg .PdfObject ]struct{},len (_ggeef ._gegb ));
for _ ,_afcdg :=range _ggeef ._gegb {_caedb [_afcdg ]=struct{}{};};_ggeef ._dcage =_caedb ;return nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_gbgef int64 ;_gbace int64 ;_bacec int64 ;_ecdbf int64 ;_degbg int64 ;_gfaed int64 ;_gabde byte ;_bdcac int64 ;_bbded int64 ;};func _cfgbe (_cedgd *_cg .PdfObjectStream )(*PdfFunctionType0 ,error ){_ebeae :=&PdfFunctionType0 {};_ebeae ._fcafb =_cedgd ;
_aabd :=_cedgd .PdfObjectDictionary ;_efbaae ,_egafd :=_cg .TraceToDirectObject (_aabd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cg .PdfObjectArray );if !_egafd {_aefb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _efbaae .Len ()< 0||_efbaae .Len ()%2!=0{_aefb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_fff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ebeae .NumInputs =_efbaae .Len ()/2;_cfbae ,_cceac :=_efbaae .ToFloat64Array ();if _cceac !=nil {return nil ,_cceac ;};_ebeae .Domain =_cfbae ;
_efbaae ,_egafd =_cg .TraceToDirectObject (_aabd .Get ("\u0052\u0061\u006eg\u0065")).(*_cg .PdfObjectArray );if !_egafd {_aefb .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efbaae .Len ()< 0||_efbaae .Len ()%2!=0{return nil ,_fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebeae .NumOutputs =_efbaae .Len ()/2;_fbgc ,_cceac :=_efbaae .ToFloat64Array ();if _cceac !=nil {return nil ,_cceac ;
};_ebeae .Range =_fbgc ;_efbaae ,_egafd =_cg .TraceToDirectObject (_aabd .Get ("\u0053\u0069\u007a\u0065")).(*_cg .PdfObjectArray );if !_egafd {_aefb .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cbee ,_cceac :=_efbaae .ToIntegerArray ();
if _cceac !=nil {return nil ,_cceac ;};if len (_cbee )!=_ebeae .NumInputs {_aefb .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebeae .Size =_cbee ;_ffca ,_egafd :=_cg .TraceToDirectObject (_aabd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cg .PdfObjectInteger );
if !_egafd {_aefb .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_ffca !=1&&*_ffca !=2&&*_ffca !=4&&*_ffca !=8&&*_ffca !=12&&*_ffca !=16&&*_ffca !=24&&*_ffca !=32{_aefb .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_ffca );
return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebeae .BitsPerSample =int (*_ffca );_ebeae .Order =1;_ggdeg ,_egafd :=_cg .TraceToDirectObject (_aabd .Get ("\u004f\u0072\u0064e\u0072")).(*_cg .PdfObjectInteger );
if _egafd {if *_ggdeg !=1&&*_ggdeg !=3{_aefb .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_ggdeg );return nil ,_fff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebeae .Order =int (*_ggdeg );
};_efbaae ,_egafd =_cg .TraceToDirectObject (_aabd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cg .PdfObjectArray );if _egafd {_fceca ,_ffff :=_efbaae .ToFloat64Array ();if _ffff !=nil {return nil ,_ffff ;};_ebeae .Encode =_fceca ;};_efbaae ,_egafd =_cg .TraceToDirectObject (_aabd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cg .PdfObjectArray );
if _egafd {_dcdc ,_ffec :=_efbaae .ToFloat64Array ();if _ffec !=nil {return nil ,_ffec ;};_ebeae .Decode =_dcdc ;};_fgadb ,_cceac :=_cg .DecodeStream (_cedgd );if _cceac !=nil {return nil ,_cceac ;};_ebeae ._cdffe =_fgadb ;return _ebeae ,nil ;};func (_fbgefd *DSS )add (_bfbb *[]*_cg .PdfObjectStream ,_afcb map[string ]*_cg .PdfObjectStream ,_abge [][]byte )([]*_cg .PdfObjectStream ,error ){_eefgb :=make ([]*_cg .PdfObjectStream ,0,len (_abge ));
for _ ,_gdff :=range _abge {_bbfe ,_abacb :=_gdffd (_gdff );if _abacb !=nil {return nil ,_abacb ;};_eecf ,_gcgfg :=_afcb [string (_bbfe )];if !_gcgfg {_eecf ,_abacb =_cg .MakeStream (_gdff ,_cg .NewRawEncoder ());if _abacb !=nil {return nil ,_abacb ;};
_afcb [string (_bbfe )]=_eecf ;*_bfbb =append (*_bfbb ,_eecf );};_eefgb =append (_eefgb ,_eecf );};return _eefgb ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_ecec :=&PdfColorspaceSpecialSeparation {};return _ecec ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_gbbbc *PdfReader )newPdfAnnotationHighlightFromDict (_cedb *_cg .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_gbbf :=PdfAnnotationHighlight {};_dac ,_babb :=_gbbbc .newPdfAnnotationMarkupFromDict (_cedb );
if _babb !=nil {return nil ,_babb ;};_gbbf .PdfAnnotationMarkup =_dac ;_gbbf .QuadPoints =_cedb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gbbf ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;
);func _dgdbg (_fadcd *_cg .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gagac :=&PdfShadingPattern {};_bfebg :=_fadcd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bfebg ==nil {_aefb .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cdgeb ,_cggb :=_bffaf (_bfebg );if _cggb !=nil {_aefb .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_cggb );return nil ,_cggb ;
};_gagac .Shading =_cdgeb ;if _aagdg :=_fadcd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_aagdg !=nil {_ebabf ,_aadge :=_aagdg .(*_cg .PdfObjectArray );if !_aadge {_aefb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aagdg );
return nil ,_cg .ErrTypeError ;};_gagac .Matrix =_ebabf ;};if _decec :=_fadcd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_decec !=nil {_gagac .ExtGState =_decec ;};return _gagac ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcbd *PdfShadingType5 )ToPdfObject ()_cg .PdfObject {_bcbd .PdfShading .ToPdfObject ();_bcbac ,_abbcg :=_bcbd .getShadingDict ();if _abbcg !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcbd .BitsPerCoordinate !=nil {_bcbac .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bcbd .BitsPerCoordinate );};if _bcbd .BitsPerComponent !=nil {_bcbac .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcbd .BitsPerComponent );
};if _bcbd .VerticesPerRow !=nil {_bcbac .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bcbd .VerticesPerRow );};if _bcbd .Decode !=nil {_bcbac .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bcbd .Decode );};if _bcbd .Function !=nil {if len (_bcbd .Function )==1{_bcbac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcbd .Function [0].ToPdfObject ());
}else {_aegbag :=_cg .MakeArray ();for _ ,_ddeeb :=range _bcbd .Function {_aegbag .Append (_ddeeb .ToPdfObject ());};_bcbac .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aegbag );};};return _bcbd ._ceabf ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_aeba *PdfField )GetContainingPdfObject ()_cg .PdfObject {return _aeba ._gecee };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdbaf *PdfShadingType4 )ToPdfObject ()_cg .PdfObject {_cdbaf .PdfShading .ToPdfObject ();_bcff ,_fgadg :=_cdbaf .getShadingDict ();if _fgadg !=nil {_aefb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdbaf .BitsPerCoordinate !=nil {_bcff .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cdbaf .BitsPerCoordinate );};if _cdbaf .BitsPerComponent !=nil {_bcff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdbaf .BitsPerComponent );
};if _cdbaf .BitsPerFlag !=nil {_bcff .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cdbaf .BitsPerFlag );};if _cdbaf .Decode !=nil {_bcff .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cdbaf .Decode );};if _cdbaf .Function !=nil {if len (_cdbaf .Function )==1{_bcff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdbaf .Function [0].ToPdfObject ());
}else {_egfea :=_cg .MakeArray ();for _ ,_babc :=range _cdbaf .Function {_egfea .Append (_babc .ToPdfObject ());};_bcff .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egfea );};};return _cdbaf ._ceabf ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cg .PdfObject ;NewWindow _cg .PdfObject ;T _cg .PdfObject ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_bg :=NewPdfAction ();_ccc :=&PdfActionGoTo {};_ccc .PdfAction =_bg ;_bg .SetContext (_ccc );return _ccc ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cfcb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cg .PdfObject {_bege :=_cg .MakeDict ();if _cfcb .Subtype !=nil {_bege .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cfcb .Subtype );};_bege .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cfcb .Colorants );
_bege .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cfcb .Process );_bege .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cfcb .MixingHints );if _cfcb ._eacb !=nil {_cfcb ._eacb .PdfObject =_bege ;return _cfcb ._eacb ;
};return _bege ;};func _efbgc (_gdcd *_cg .PdfObjectDictionary )bool {for _ ,_dddc :=range _gdcd .Keys (){if _ ,_cbga :=_acfa [_dddc .String ()];_cbga {return true ;};};return false ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bdcf *PdfReader )IsEncrypted ()(bool ,error ){return _bdcf ._bafg .IsEncrypted ()};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ef .ReadSeeker )(*CompliancePdfReader ,error ){const _gcfe ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bdag ,_eddb :=_dbafa (rs ,&ReaderOpts {ComplianceMode :true },false ,_gcfe );
if _eddb !=nil {return nil ,_eddb ;};return &CompliancePdfReader {PdfReader :_bdag },nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_ebec *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_fbagc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _efbae ,_ebfaa :=range _fbagc ._dbcf {_fbagc ._dbcf [_efbae ]=mapFunc (_ebfaa );};};func _egfa (_fffed *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fffed }};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eefcg *PdfWriter )SetPageLabels (pageLabels _cg .PdfObject )error {if pageLabels ==nil {return nil ;};_aefb .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_eefcg ._adafd .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _eefcg .addObjects (pageLabels );};

// ValidateSignatures validates digital signatures in the document.
func (_fegfc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fegfc .AcroForm ==nil {return nil ,nil ;};if _fegfc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ccgeec *PdfSignature ;
_adcga *PdfField ;_egcff SignatureHandler ;};var _gbea []*sigFieldPair ;for _ ,_cgaee :=range _fegfc .AcroForm .AllFields (){if _cgaee .V ==nil {continue ;};if _bfcef ,_ggef :=_cg .GetDict (_cgaee .V );_ggef {if _eabec ,_fdag :=_cg .GetNameVal (_bfcef .Get ("\u0054\u0079\u0070\u0065"));
_fdag &&_eabec =="\u0053\u0069\u0067"{_debbc ,_bacede :=_cg .GetIndirect (_cgaee .V );if !_bacede {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_befd ,_feecf :=_fegfc .newPdfSignatureFromIndirect (_debbc );if _feecf !=nil {return nil ,_feecf ;};var _gadf SignatureHandler ;for _ ,_aeabfg :=range handlers {if _aeabfg .IsApplicable (_befd ){_gadf =_aeabfg ;break ;};};_gbea =append (_gbea ,&sigFieldPair {_ccgeec :_befd ,_adcga :_cgaee ,_egcff :_gadf });
};};};var _cbdee []SignatureValidationResult ;for _ ,_fbfd :=range _gbea {_dagge :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fbfd ._adcga }};if _fbfd ._egcff ==nil {_dagge .Errors =append (_dagge .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_cbdee =append (_cbdee ,_dagge );continue ;};_bbegdg ,_fefdd :=_fbfd ._egcff .NewDigest (_fbfd ._ccgeec );if _fefdd !=nil {_dagge .Errors =append (_dagge .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fefdd .Error ());_cbdee =append (_cbdee ,_dagge );
continue ;};_eeebg :=_fbfd ._ccgeec .ByteRange ;if _eeebg ==nil {_dagge .Errors =append (_dagge .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cbdee =append (_cbdee ,_dagge );continue ;};for _fcgbd :=0;
_fcgbd < _eeebg .Len ();_fcgbd =_fcgbd +2{_edaef ,_ :=_cg .GetNumberAsInt64 (_eeebg .Get (_fcgbd ));_gaagc ,_ :=_cg .GetIntVal (_eeebg .Get (_fcgbd +1));if _ ,_ccded :=_fegfc ._dgfb .Seek (_edaef ,_ef .SeekStart );_ccded !=nil {return nil ,_ccded ;};_aebgg :=make ([]byte ,_gaagc );
if _ ,_bdcage :=_fegfc ._dgfb .Read (_aebgg );_bdcage !=nil {return nil ,_bdcage ;};_bbegdg .Write (_aebgg );};var _cbeee SignatureValidationResult ;if _eafb ,_gggfg :=_fbfd ._egcff .(SignatureHandlerDocMDP );_gggfg {_cbeee ,_fefdd =_eafb .ValidateWithOpts (_fbfd ._ccgeec ,_bbegdg ,SignatureHandlerDocMDPParams {Parser :_fegfc ._bafg });
}else {_cbeee ,_fefdd =_fbfd ._egcff .Validate (_fbfd ._ccgeec ,_bbegdg );};if _fefdd !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_fefdd ,_fbfd ._egcff );_cbeee .Errors =append (_cbeee .Errors ,_fefdd .Error ());
};_cbeee .Name =_fbfd ._ccgeec .Name .Decoded ();_cbeee .Reason =_fbfd ._ccgeec .Reason .Decoded ();if _fbfd ._ccgeec .M !=nil {_caeaa ,_dabcf :=NewPdfDate (_fbfd ._ccgeec .M .String ());if _dabcf !=nil {_aefb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dabcf );
_cbeee .Errors =append (_cbeee .Errors ,_dabcf .Error ());continue ;};_cbeee .Date =_caeaa ;};_cbeee .ContactInfo =_fbfd ._ccgeec .ContactInfo .Decoded ();_cbeee .Location =_fbfd ._ccgeec .Location .Decoded ();_cbeee .Fields =_dagge .Fields ;_cbdee =append (_cbdee ,_cbeee );
};return _cbdee ,nil ;};var _cegfa =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// GetContainingPdfObject returns the container of the image object (indirect object).
func (_bfece *XObjectImage )GetContainingPdfObject ()_cg .PdfObject {return _bfece ._cbfff };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cdfag *PdfReader )GetEncryptionMethod ()string {_dfaf :=_cdfag ._bafg .GetCrypter ();return _dfaf .String ();};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cg .StreamEncoder )(*XObjectImage ,error ){_cdfea :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cdfea ,img ,cs ,encoder );};func (_cagf *PdfAppender )replaceObject (_bdgg ,_bcae _cg .PdfObject ){switch _gagg :=_bdgg .(type ){case *_cg .PdfIndirectObject :_cagf ._eddf [_bcae ]=_gagg .ObjectNumber ;
case *_cg .PdfObjectStream :_cagf ._eddf [_bcae ]=_gagg .ObjectNumber ;};};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bcf *PdfAppender )Write (w _ef .Writer )error {if _bcf ._feed {return _fff .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_agbf :=NewPdfWriter ();_afba ,_gcddd :=_cg .GetDict (_agbf ._agacf );if !_gcddd {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_aabc ,_gcddd :=_afba .Get ("\u004b\u0069\u0064\u0073").(*_cg .PdfObjectArray );if !_gcddd {return _fff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_acfb ,_gcddd :=_afba .Get ("\u0043\u006f\u0075n\u0074").(*_cg .PdfObjectInteger );if !_gcddd {return _fff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_gfgc :=_bcf ._afa ._bafg ;_dcbba :=_gfgc .GetTrailer ();if _dcbba ==nil {return _fff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ged ,_gcddd :=_cg .GetIndirect (_dcbba .Get ("\u0052\u006f\u006f\u0074"));
if !_gcddd {return _fff .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ggfgg ,_gcddd :=_cg .GetDict (_ged );if !_gcddd {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ged ,*_dcbba );
return _fff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_adbf :=range _ggfgg .Keys (){if _agbf ._adafd .Get (_adbf )==nil {_bgdc :=_ggfgg .Get (_adbf );_agbf ._adafd .Set (_adbf ,_bgdc );};};if _bcf ._aagf !=nil {_agbf ._adafd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bcf ._aagf .ToPdfObject ());
_bcf .updateObjectsDeep (_bcf ._aagf .ToPdfObject (),nil );};if _bcf ._ddagb !=nil {_bcf .updateObjectsDeep (_bcf ._ddagb .ToPdfObject (),nil );_agbf ._adafd .Set ("\u0044\u0053\u0053",_bcf ._ddagb .GetContainingPdfObject ());};if _bcf ._geeg !=nil {_agbf ._adafd .Set ("\u0050\u0065\u0072m\u0073",_bcf ._geeg .ToPdfObject ());
_bcf .updateObjectsDeep (_bcf ._geeg .ToPdfObject (),nil );};if _agbf ._cdadd .Major < 2{_agbf .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_agbf .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _dadg ,_bbcc :=_cg .GetDict (_dcbba .Get ("\u0049\u006e\u0066\u006f"));
_bbcc {if _fgac ,_gagge :=_cg .GetDict (_agbf ._aeea );_gagge {for _ ,_afd :=range _dadg .Keys (){if _fgac .Get (_afd )==nil {_fgac .Set (_afd ,_dadg .Get (_afd ));};};};};if _bcf ._bbbb !=nil {_agbf ._aeea =_cg .MakeIndirectObject (_bcf ._bbbb .ToPdfObject ());
};_bcf .addNewObject (_agbf ._aeea );_bcf .addNewObject (_agbf ._dfacgd );_bdgb :=false ;if len (_bcf ._afa .PageList )!=len (_bcf ._fgcg ){_bdgb =true ;}else {for _ebfac :=range _bcf ._afa .PageList {switch {case _bcf ._fgcg [_ebfac ]==_bcf ._afa .PageList [_ebfac ]:case _bcf ._fgcg [_ebfac ]==_bcf .Reader .PageList [_ebfac ]:default:_bdgb =true ;
};if _bdgb {break ;};};};if _bdgb {_bcf .updateObjectsDeep (_agbf ._agacf ,nil );}else {_bcf ._eafe [_agbf ._agacf ]=struct{}{};};_agbf ._agacf .ObjectNumber =_bcf .Reader ._fbbf .ObjectNumber ;_bcf ._eddf [_agbf ._agacf ]=_bcf .Reader ._fbbf .ObjectNumber ;
_cfbg :=[]_cg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_bgfg :=range _bcf ._fgcg {_ccea :=_bgfg .ToPdfObject ();
*_acfb =*_acfb +1;if _bfcg ,_decc :=_ccea .(*_cg .PdfIndirectObject );_decc &&_bfcg .GetParser ()==_bcf ._afa ._bafg {_aabc .Append (&_bfcg .PdfObjectReference );continue ;};if _bdbdc ,_gcec :=_cg .GetDict (_ccea );_gcec {_agdc ,_cbdb :=_bdbdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cg .PdfIndirectObject );
for _cbdb {_aefb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_agdc );_affd ,_ggeb :=_agdc .PdfObject .(*_cg .PdfObjectDictionary );if !_ggeb {return _fff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_agdea :=range _cfbg {_aefb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agdea );if _bdbdc .Get (_agdea )!=nil {_aefb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _cga :=_affd .Get (_agdea );_cga !=nil {_aefb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agdea );_bdbdc .Set (_agdea ,_cga );};};_agdc ,_cbdb =_affd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cg .PdfIndirectObject );
_aefb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_affd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bdbdc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agbf ._agacf );};_bcf .updateObjectsDeep (_ccea ,nil );
_aabc .Append (_ccea );};if _ ,_cece :=_bcf ._fgeee .Seek (0,_ef .SeekStart );_cece !=nil {return _cece ;};_ddbbe :=make (map[SignatureHandler ]_ef .Writer );_fffe :=_cg .MakeArray ();for _ ,_fadd :=range _bcf ._gdd {if _faba ,_dgc :=_cg .GetIndirect (_fadd );
_dgc {if _cbfd ,_ceed :=_faba .PdfObject .(*pdfSignDictionary );_ceed {_gebgb :=*_cbfd ._gccd ;var _eaca error ;_ddbbe [_gebgb ],_eaca =_gebgb .NewDigest (_cbfd ._bbfde );if _eaca !=nil {return _eaca ;};_fffe .Append (_cg .MakeInteger (0xfffff),_cg .MakeInteger (0xfffff));
};};};if _fffe .Len ()> 0{_fffe .Append (_cg .MakeInteger (0xfffff),_cg .MakeInteger (0xfffff));};for _ ,_bdfd :=range _bcf ._gdd {if _cgee ,_fcee :=_cg .GetIndirect (_bdfd );_fcee {if _cbeb ,_dcbd :=_cgee .PdfObject .(*pdfSignDictionary );_dcbd {_cbeb .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fffe );
};};};_ffg :=len (_ddbbe )> 0;var _eeg _ef .Reader =_bcf ._fgeee ;if _ffg {_ceggg :=make ([]_ef .Writer ,0,len (_ddbbe ));for _ ,_dga :=range _ddbbe {_ceggg =append (_ceggg ,_dga );};_eeg =_ef .TeeReader (_bcf ._fgeee ,_ef .MultiWriter (_ceggg ...));};
_acd ,_egccg :=_ef .Copy (w ,_eeg );if _egccg !=nil {return _egccg ;};if len (_bcf ._gdd )==0{return nil ;};_agbf ._bdgde =_acd ;_agbf .ObjNumOffset =_bcf ._gagd ;_agbf ._dagdb =true ;_agbf ._cegcg =_bcf ._bgc ;_agbf ._caede =_bcf ._gecf ;_agbf ._dggdf =_bcf ._gafg ;
_agbf ._cdadd =_bcf ._afa .PdfVersion ();_agbf ._eeaca =_bcf ._eddf ;_agbf ._dfeee =_bcf ._gdec .GetCrypter ();_agbf ._gddd =_bcf ._gdec .GetEncryptObj ();_febe :=_bcf ._gdec .GetXrefType ();if _febe !=nil {_cdbbc :=*_febe ==_cg .XrefTypeObjectStream ;
_agbf ._edeceg =&_cdbbc ;};_agbf ._dcage =map[_cg .PdfObject ]struct{}{};_agbf ._gegb =[]_cg .PdfObject {};for _ ,_adfc :=range _bcf ._gdd {if _ ,_deeg :=_bcf ._eafe [_adfc ];_deeg {continue ;};_agbf .addObject (_adfc );};_bef :=w ;if _ffg {_bef =_gbe .NewBuffer (nil );
};if _bcf ._daad !=""&&_agbf ._dfeee ==nil {_agbf .Encrypt ([]byte (_bcf ._daad ),[]byte (_bcf ._daad ),_bcf ._cgeb );};if _fdbf :=_dcbba .Get ("\u0049\u0044");_fdbf !=nil {if _ddafd ,_gcgb :=_cg .GetArray (_fdbf );_gcgb {_agbf ._bbcgc =_ddafd ;};};if _bfeg :=_agbf .Write (_bef );
_bfeg !=nil {return _bfeg ;};if _ffg {_egcd :=_bef .(*_gbe .Buffer ).Bytes ();_cfab :=_cg .MakeArray ();var _ffdb []*pdfSignDictionary ;var _gcab int64 ;for _ ,_bcfd :=range _agbf ._gegb {if _gdab ,_babf :=_cg .GetIndirect (_bcfd );_babf {if _eggb ,_faddd :=_gdab .PdfObject .(*pdfSignDictionary );
_faddd {_ffdb =append (_ffdb ,_eggb );_dbfbf :=_eggb ._edace +int64 (_eggb ._eafa );_cfab .Append (_cg .MakeInteger (_gcab ),_cg .MakeInteger (_dbfbf -_gcab ));_gcab =_eggb ._edace +int64 (_eggb ._eccfc );};};};_cfab .Append (_cg .MakeInteger (_gcab ),_cg .MakeInteger (_acd +int64 (len (_egcd ))-_gcab ));
_dff :=[]byte (_cfab .WriteString ());for _ ,_fcd :=range _ffdb {_agaf :=int (_fcd ._edace -_acd );for _cead :=_fcd ._baggc ;_cead < _fcd ._degag ;_cead ++{_egcd [_agaf +_cead ]=' ';};_ccaae :=_egcd [_agaf +_fcd ._baggc :_agaf +_fcd ._degag ];copy (_ccaae ,_dff );
};var _bbcfb int ;for _ ,_bdcgd :=range _ffdb {_cbbbg :=int (_bdcgd ._edace -_acd );_cddb :=_egcd [_bbcfb :_cbbbg +_bdcgd ._eafa ];_edef :=*_bdcgd ._gccd ;_ddbbe [_edef ].Write (_cddb );_bbcfb =_cbbbg +_bdcgd ._eccfc ;};for _ ,_dgaa :=range _ffdb {_bgfa :=_egcd [_bbcfb :];
_baca :=*_dgaa ._gccd ;_ddbbe [_baca ].Write (_bgfa );};for _ ,_aeed :=range _ffdb {_bbeg :=int (_aeed ._edace -_acd );_ffad :=*_aeed ._gccd ;_fgcf :=_ddbbe [_ffad ];if _gabd :=_ffad .Sign (_aeed ._bbfde ,_fgcf );_gabd !=nil {return _gabd ;};_aeed ._bbfde .ByteRange =_cfab ;
_aaafe :=[]byte (_aeed ._bbfde .Contents .WriteString ());for _eaada :=_aeed ._baggc ;_eaada < _aeed ._degag ;_eaada ++{_egcd [_bbeg +_eaada ]=' ';};for _gabbe :=_aeed ._eafa ;_gabbe < _aeed ._eccfc ;_gabbe ++{_egcd [_bbeg +_gabbe ]=' ';};_gdecb :=_egcd [_bbeg +_aeed ._baggc :_bbeg +_aeed ._degag ];
copy (_gdecb ,_dff );_gdecb =_egcd [_bbeg +_aeed ._eafa :_bbeg +_aeed ._eccfc ];copy (_gdecb ,_aaafe );};_fedg :=_gbe .NewBuffer (_egcd );_ ,_egccg =_ef .Copy (w ,_fedg );if _egccg !=nil {return _egccg ;};};_bcf ._feed =true ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggcd *PdfActionThread )ToPdfObject ()_cg .PdfObject {_ggcd .PdfAction .ToPdfObject ();_ebf :=_ggcd ._ebd ;_cdb :=_ebf .PdfObject .(*_cg .PdfObjectDictionary );_cdb .SetIfNotNil ("\u0053",_cg .MakeName (string (ActionTypeThread )));if _ggcd .F !=nil {_cdb .Set ("\u0046",_ggcd .F .ToPdfObject ());
};_cdb .SetIfNotNil ("\u0044",_ggcd .D );_cdb .SetIfNotNil ("\u0042",_ggcd .B );return _ebf ;};var _ pdfFont =(*pdfFontSimple )(nil );

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_fafef *PdfField )IsTerminal ()bool {return len (_fafef .Kids )==0};

// Height returns the height of `rect`.
func (_cbfae *PdfRectangle )Height ()float64 {return _be .Abs (_cbfae .Ury -_cbfae .Lly )};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dfcaf :=NewPdfAnnotation ();_cdd :=&PdfAnnotationPolyLine {};_cdd .PdfAnnotation =_dfcaf ;_cdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfcaf .SetContext (_cdd );return _cdd ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_abba *PdfColorspaceICCBased )GetContainingPdfObject ()_cg .PdfObject {return _abba ._fgdfa };func _eaaaa (_dbeee _cg .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_aedd :=NewPdfColorspaceSpecialSeparation ();if _faaee ,_gdc :=_dbeee .(*_cg .PdfIndirectObject );
_gdc {_aedd ._fcdd =_faaee ;};_dbeee =_cg .TraceToDirectObject (_dbeee );_dbgg ,_agga :=_dbeee .(*_cg .PdfObjectArray );if !_agga {return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _dbgg .Len ()!=4{return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_dbeee =_dbgg .Get (0);
_ecdc ,_agga :=_dbeee .(*_cg .PdfObjectName );if !_agga {return nil ,_g .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ecdc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_g .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_dbeee =_dbgg .Get (1);_ecdc ,_agga =_dbeee .(*_cg .PdfObjectName );if !_agga {return nil ,_g .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_aedd .ColorantName =_ecdc ;_dbeee =_dbgg .Get (2);_aabbd ,_acdb :=NewPdfColorspaceFromPdfObject (_dbeee );if _acdb !=nil {return nil ,_acdb ;};_aedd .AlternateSpace =_aabbd ;_ffcg ,_acdb :=_eeafe (_dbgg .Get (3));if _acdb !=nil {return nil ,_acdb ;};
_aedd .TintTransform =_ffcg ;return _aedd ,nil ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_cg .PdfObjectString ;Q *_cg .PdfObjectInteger ;DS *_cg .PdfObjectString ;RV _cg .PdfObject ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_bdaga *PdfOutputIntent )ParsePdfObject (object _cg .PdfObject )error {_dcff ,_bacaeg :=_cg .GetDict (object );if !_bacaeg {_aefb .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _fff .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_bdaga ._egbba =_dcff ;_bdaga .Type ,_ =_dcff .GetString ("\u0054\u0079\u0070\u0065");_bgca ,_bacaeg :=_dcff .GetString ("\u0053");if _bacaeg {switch _bgca {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_bdaga .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_bdaga .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_bdaga .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_bdaga .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_bdaga .S =PdfOutputIntentTypeX ;
};};_bdaga .OutputCondition ,_ =_dcff .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_bdaga .OutputConditionIdentifier ,_ =_dcff .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_bdaga .RegistryName ,_ =_dcff .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_bdaga .Info ,_ =_dcff .GetString ("\u0049\u006e\u0066\u006f");if _edbdc ,_dgeg :=_cg .GetStream (_dcff .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_dgeg {_bdaga .ColorComponents ,_ =_cg .GetIntVal (_edbdc .Get ("\u004e"));_fbafb ,_bcgag :=_cg .DecodeStream (_edbdc );if _bcgag !=nil {return _bcgag ;};_bdaga .DestOutputProfile =_fbafb ;};return nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func (_abdg *PdfReader )loadStructure ()error {if _abdg ._bafg .GetCrypter ()!=nil &&!_abdg ._bafg .IsAuthenticated (){return _g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aaebbgc :=_abdg ._bafg .GetTrailer ();if _aaebbgc ==nil {return _g .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dageaf ,_gdgdf :=_aaebbgc .Get ("\u0052\u006f\u006f\u0074").(*_cg .PdfObjectReference );
if !_gdgdf {return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_aaebbgc );};_gdbe ,_feffg :=_abdg ._bafg .LookupByReference (*_dageaf );
if _feffg !=nil {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_feffg );
return _feffg ;};_bceag ,_gdgdf :=_gdbe .(*_cg .PdfIndirectObject );if !_gdgdf {_aefb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gdbe ,*_aaebbgc );
return _fff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dgggd ,_gdgdf :=(*_bceag ).PdfObject .(*_cg .PdfObjectDictionary );if !_gdgdf {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_bceag .PdfObject );
return _fff .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aefb .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dgggd );_dagga ,_gdgdf :=_dgggd .Get ("\u0050\u0061\u0067e\u0073").(*_cg .PdfObjectReference );
if !_gdgdf {return _fff .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cfdeb ,_feffg :=_abdg ._bafg .LookupByReference (*_dagga );
if _feffg !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _feffg ;};_ebdeg ,_gdgdf :=_cfdeb .(*_cg .PdfIndirectObject );if !_gdgdf {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_aefb .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ebdeg );return _fff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cccg ,_gdgdf :=_ebdeg .PdfObject .(*_cg .PdfObjectDictionary );if !_gdgdf {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ebdeg );
return _fff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_daffc ,_gdgdf :=_cg .GetInt (_cccg .Get ("\u0043\u006f\u0075n\u0074"));if !_gdgdf {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _fff .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gdgdf =_cg .GetName (_cccg .Get ("\u0054\u0079\u0070\u0065"));!_gdgdf {_aefb .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cccg .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0050\u0061\u0067e\u0073"));};if _eabgcd ,_cfccf :=_cg .GetInt (_cccg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_cfccf {_ffffb :=int64 (*_eabgcd );_abdg .Rotate =&_ffffb ;};_abdg ._cedef =_dageaf ;
_abdg ._fbggd =_dgggd ;_abdg ._cdgde =_cccg ;_abdg ._fbbf =_ebdeg ;_abdg ._geffg =int (*_daffc );_abdg ._agdec =[]*_cg .PdfIndirectObject {};_bgcff :=map[_cg .PdfObject ]struct{}{};_feffg =_abdg .buildPageList (_ebdeg ,nil ,_bgcff );if _feffg !=nil {return _feffg ;
};_aefb .Log .Trace ("\u002d\u002d\u002d");_aefb .Log .Trace ("\u0054\u004f\u0043");_aefb .Log .Trace ("\u0050\u0061\u0067e\u0073");_aefb .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_abdg ._agdec ),_abdg ._agdec );_abdg ._cbbca ,_feffg =_abdg .loadOutlines ();
if _feffg !=nil {_aefb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_feffg );
return _feffg ;};_abdg .AcroForm ,_feffg =_abdg .loadForms ();if _feffg !=nil {return _feffg ;};_abdg .DSS ,_feffg =_abdg .loadDSS ();if _feffg !=nil {return _feffg ;};_abdg ._dfbag ,_feffg =_abdg .loadPerms ();if _feffg !=nil {return _feffg ;};return nil ;
};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fcadc FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fcadc .Mask ()|fl .Mask ())};func (_ceddc *PdfFunctionType0 )processSamples ()error {_edfeb :=_ggc .ResampleBytes (_ceddc ._cdffe ,_ceddc .BitsPerSample );_ceddc ._daaae =_edfeb ;
return nil ;};func (_ggcb *PdfReader )newPdfAnnotationSquareFromDict (_dad *_cg .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_aabb :=PdfAnnotationSquare {};_bbgf ,_dcaa :=_ggcb .newPdfAnnotationMarkupFromDict (_dad );if _dcaa !=nil {return nil ,_dcaa ;
};_aabb .PdfAnnotationMarkup =_bbgf ;_aabb .BS =_dad .Get ("\u0042\u0053");_aabb .IC =_dad .Get ("\u0049\u0043");_aabb .BE =_dad .Get ("\u0042\u0045");_aabb .RD =_dad .Get ("\u0052\u0044");return &_aabb ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cg .PdfObject ;MK _cg .PdfObject ;A _cg .PdfObject ;AA _cg .PdfObject ;BS _cg .PdfObject ;Parent _cg .PdfObject ;_fag *PdfField ;_dbad bool ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_dabd *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _fff .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_dabd .S =subtype ;return nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_eeaff *_cg .PdfIndirectObject ;};func _fddbb (_agbgb *_cc .ImageBase )(_efdaa Image ){_efdaa .Width =int64 (_agbgb .Width );_efdaa .Height =int64 (_agbgb .Height );
_efdaa .BitsPerComponent =int64 (_agbgb .BitsPerComponent );_efdaa .ColorComponents =_agbgb .ColorComponents ;_efdaa .Data =_agbgb .Data ;_efdaa ._gegd =_agbgb .Decode ;_efdaa ._dbcf =_agbgb .Alpha ;return _efdaa ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_dgeae :=Permissions {};_dgeae .DocMDP =docMdp ;_aadgf :=_cg .MakeDict ();_aadgf .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_dgeae ._cagcg =_aadgf ;return &_dgeae ;};func _ebbeb ()string {_ebecf .Lock ();
defer _ebecf .Unlock ();return _gbabf };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_cgdd pdfFont };func (_fcfdc *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_addda PdfModel ;Rect _cg .PdfObject ;Contents _cg .PdfObject ;P _cg .PdfObject ;NM _cg .PdfObject ;M _cg .PdfObject ;F _cg .PdfObject ;AP _cg .PdfObject ;AS _cg .PdfObject ;Border _cg .PdfObject ;C _cg .PdfObject ;StructParent _cg .PdfObject ;
OC _cg .PdfObject ;_bed *_cg .PdfIndirectObject ;};func (_cbffef *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cbffef ._bafg .GetCrypter ()!=nil &&!_cbffef ._bafg .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bcedb :=_cbffef ._fbggd ;_dbdbe :=_bcedb .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dbdbe ==nil {return nil ,nil ;};_aefb .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_bafbg :=_cg .ResolveReference (_dbdbe );
_aefb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_bafbg );if _feac :=_cg .IsNullObject (_bafbg );_feac {_aefb .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_eeaeb ,_agaff :=_bafbg .(*_cg .PdfIndirectObject );if !_agaff {if _ ,_cacbf :=_cg .GetDict (_bafbg );!_cacbf {_aefb .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_aefb .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_eeaeb =_cg .MakeIndirectObject (_bafbg );};_beedfe ,_agaff :=_eeaeb .PdfObject .(*_cg .PdfObjectDictionary );if !_agaff {return nil ,_fff .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_aefb .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_beedfe );_efegg ,_ ,_edcdg :=_cbffef .buildOutlineTree (_eeaeb ,nil ,nil ,nil );if _edcdg !=nil {return nil ,_edcdg ;};_aefb .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_efegg );
return _efegg ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_af :=NewPdfAction ();_caba :=&PdfActionSetOCGState {};_caba .PdfAction =_af ;_af .SetContext (_caba );return _caba ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cg .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cg .PdfObject ;A _cg .PdfObject ;SE _cg .PdfObject ;C _cg .PdfObject ;F _cg .PdfObject ;
_adddga *_cg .PdfIndirectObject ;};func (_fdee *PdfReader )newPdfActionResetFormFromDict (_dc *_cg .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dc .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_egaf *PdfField )ToPdfObject ()_cg .PdfObject {_defa :=_egaf ._gecee ;_cgdeg :=_defa .PdfObject .(*_cg .PdfObjectDictionary );_aeaf :=_cg .MakeArray ();for _ ,_dcda :=range _egaf .Kids {_aeaf .Append (_dcda .ToPdfObject ());};for _ ,_adcc :=range _egaf .Annotations {if _adcc ._bed !=_egaf ._gecee {_aeaf .Append (_adcc .GetContext ().ToPdfObject ());
};};if _egaf .Parent !=nil {_cgdeg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_egaf .Parent .GetContainingPdfObject ());};if _aeaf .Len ()> 0{_cgdeg .Set ("\u004b\u0069\u0064\u0073",_aeaf );};_cgdeg .SetIfNotNil ("\u0046\u0054",_egaf .FT );_cgdeg .SetIfNotNil ("\u0054",_egaf .T );
_cgdeg .SetIfNotNil ("\u0054\u0055",_egaf .TU );_cgdeg .SetIfNotNil ("\u0054\u004d",_egaf .TM );_cgdeg .SetIfNotNil ("\u0046\u0066",_egaf .Ff );_cgdeg .SetIfNotNil ("\u0056",_egaf .V );_cgdeg .SetIfNotNil ("\u0044\u0056",_egaf .DV );_cgdeg .SetIfNotNil ("\u0041\u0041",_egaf .AA );
if _egaf .VariableText !=nil {_cgdeg .SetIfNotNil ("\u0044\u0041",_egaf .VariableText .DA );_cgdeg .SetIfNotNil ("\u0051",_egaf .VariableText .Q );_cgdeg .SetIfNotNil ("\u0044\u0053",_egaf .VariableText .DS );_cgdeg .SetIfNotNil ("\u0052\u0056",_egaf .VariableText .RV );
};return _defa ;};

// ToInteger convert to an integer format.
func (_bcade *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cegd :=_be .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cegd *_bcade .R ()),uint32 (_cegd *_bcade .G ()),uint32 (_cegd *_bcade .B ())};};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_bddae PdfOutputIntentType )String ()string {switch _bddae {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fbbeg *PdfFont )ToUnicode ()string {if _fbbeg .baseFields ()._dcded ==nil {return "";};return _fbbeg .baseFields ()._dcded .Name ();};

// Encoder returns the font's text encoder.
func (_egbf pdfFontType3 )Encoder ()_eba .TextEncoder {return _egbf ._abcca };

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cg .PdfObject ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_egd :=NewPdfAction ();_ebdb :=&PdfActionMovie {};_ebdb .PdfAction =_egd ;_egd .SetContext (_ebdb );return _ebdb ;};func (_dbfgg *LTV )buildCertChain (_ddbg ,_gdca []*_a .Certificate )([]*_a .Certificate ,map[string ]*_a .Certificate ,error ){_cdbf :=map[string ]*_a .Certificate {};
for _ ,_aeda :=range _ddbg {_cdbf [_aeda .Subject .CommonName ]=_aeda ;};_gbbbe :=_ddbg ;for _ ,_acfaa :=range _gdca {_baegb :=_acfaa .Subject .CommonName ;if _ ,_gebc :=_cdbf [_baegb ];_gebc {continue ;};_cdbf [_baegb ]=_acfaa ;_gbbbe =append (_gbbbe ,_acfaa );
};if len (_gbbbe )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ebfbe error ;for _edfc :=_gbbbe [0];_edfc !=nil &&!_dbfgg .CertClient .IsCA (_edfc );{_cbced ,_deffe :=_cdbf [_edfc .Issuer .CommonName ];if !_deffe {if _cbced ,_ebfbe =_dbfgg .CertClient .GetIssuer (_edfc );
_ebfbe !=nil {_aefb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ebfbe );
break ;};_cdbf [_edfc .Issuer .CommonName ]=_cbced ;_gbbbe =append (_gbbbe ,_cbced );};_edfc =_cbced ;};return _gbbbe ,_cdbf ,nil ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _cg .PdfObject )(*PdfOutputIntent ,error ){_bcee :=&PdfOutputIntent {};if _cfdb :=_bcee .ParsePdfObject (object );_cfdb !=nil {return nil ,_cfdb ;};return _bcee ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cg .PdfObjectStream ;OCSP []*_cg .PdfObjectStream ;CRL []*_cg .PdfObjectStream ;TU *_cg .PdfObjectString ;TS *_cg .PdfObjectString ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_fbge *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_fbge .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_fbge ._aagf =acroForm ;};func _bggg (_dbfba *PdfField )[]*PdfField {_ebgge :=[]*PdfField {_dbfba };for _ ,_egbg :=range _dbfba .Kids {_ebgge =append (_ebgge ,_bggg (_egbg )...);
};return _ebgge ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_abbae *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _abbae .UnderlyingCS .GetNumComponents ();};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetSubFilter returns SubFilter value or empty string.
func (_ffdgd *pdfSignDictionary )GetSubFilter ()string {_cgbe :=_ffdgd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _cgbe ==nil {return "";};if _debfd ,_dafb :=_cg .GetNameVal (_cgbe );_dafb {return _debfd ;};return "";};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_aaa :=NewPdfAnnotation ();_afb :=&PdfAnnotationCircle {};_afb .PdfAnnotation =_aaa ;_afb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aaa .SetContext (_afb );return _afb ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cg .PdfObject ;ColorSpace _cg .PdfObject ;Pattern _cg .PdfObject ;Shading _cg .PdfObject ;XObject _cg .PdfObject ;Font _cg .PdfObject ;ProcSet _cg .PdfObject ;Properties _cg .PdfObject ;_daacc *_cg .PdfObjectDictionary ;
_efbc *PdfPageResourcesColorspaces ;};func (_dbgd *PdfAppender )mergeResources (_abfe ,_efbaa _cg .PdfObject ,_fcfd map[_cg .PdfObjectName ]_cg .PdfObjectName )_cg .PdfObject {if _efbaa ==nil &&_abfe ==nil {return nil ;};if _efbaa ==nil {return _abfe ;
};_dgea ,_gcda :=_cg .GetDict (_efbaa );if !_gcda {return _abfe ;};if _abfe ==nil {_gabg :=_cg .MakeDict ();_gabg .Merge (_dgea );return _efbaa ;};_bcad ,_gcda :=_cg .GetDict (_abfe );if !_gcda {_aefb .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bcad =_cg .MakeDict ();};for _ ,_afcc :=range _dgea .Keys (){if _cgfga ,_ggdef :=_fcfd [_afcc ];_ggdef {_bcad .Set (_cgfga ,_dgea .Get (_afcc ));}else {_bcad .Set (_afcc ,_dgea .Get (_afcc ));};};return _bcad ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_dadbe *PdfReader )GetRevisionNumber ()int {return _dadbe ._bafg .GetRevisionNumber ()};

// Encoder returns the font's text encoder.
func (_bcca *PdfFont )Encoder ()_eba .TextEncoder {_dabc :=_bcca .actualFont ();if _dabc ==nil {_aefb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bcca ._cgdd );
return nil ;};return _dabc .Encoder ();};

// SetDate sets the `M` field of the signature.
func (_gdeca *PdfSignature )SetDate (date _bb .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gdeca .M =_cg .MakeString (date .Format (format ));
};func _bcbba (_gbeca *XObjectImage )error {if _gbeca .SMask ==nil {return nil ;};_dfdcd ,_gfadc :=_gbeca .SMask .(*_cg .PdfObjectStream );if !_gfadc {_aefb .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _cg .ErrTypeError ;};_fcgge :=_dfdcd .PdfObjectDictionary ;_gcge :=_fcgge .Get ("\u004d\u0061\u0074t\u0065");if _gcge ==nil {return nil ;};_bcaae ,_beafb :=_gfgb (_gcge .(*_cg .PdfObjectArray ));if _beafb !=nil {return _beafb ;};_bfadc :=_cg .MakeArrayFromFloats ([]float64 {_bcaae });
_fcgge .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bfadc );return nil ;};