//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_b "bufio";_cd "bytes";_eg "crypto/rand";_e "crypto/sha1";_ad "crypto/x509";_af "encoding/binary";_c "encoding/hex";_ff "errors";_a "fmt";_dg "github.com/unidoc/pkcs7";_db "github.com/unidoc/unipdf/v3/common";_gbd "github.com/unidoc/unipdf/v3/core";
_bb "github.com/unidoc/unipdf/v3/core/security";_dbe "github.com/unidoc/unipdf/v3/core/security/crypt";_bgg "github.com/unidoc/unipdf/v3/internal/cmap";_ed "github.com/unidoc/unipdf/v3/internal/imageutil";_ega "github.com/unidoc/unipdf/v3/internal/license";
_de "github.com/unidoc/unipdf/v3/internal/sampling";_dc "github.com/unidoc/unipdf/v3/internal/textencoding";_bfc "github.com/unidoc/unipdf/v3/internal/transform";_fad "github.com/unidoc/unipdf/v3/model/internal/fonts";_bfe "github.com/unidoc/unipdf/v3/model/sigutil";
_ba "github.com/unidoc/unipdf/v3/ps";_afd "github.com/unidoc/unitype";_bfb "golang.org/x/xerrors";_be "image";_cc "image/color";_ "image/gif";_ "image/png";_acga "io";_bf "io/ioutil";_ga "math";_fa "math/rand";_ec "os";_acg "regexp";_eb "sort";_bg "strconv";
_fc "strings";_ac "sync";_bd "time";_gb "unicode";_ge "unicode/utf8";);func _dged (_ccgae *PdfField )[]*PdfField {_bdbbeb :=[]*PdfField {_ccgae };for _ ,_ffce :=range _ccgae .Kids {_bdbbeb =append (_bdbbeb ,_dged (_ffce )...);};return _bdbbeb ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _gbd .PdfObject ;T _gbd .PdfObject ;Operation _gbd .PdfObject ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _gbd .PdfObject ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_abdgb *_gbd .PdfIndirectObject ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dccd FieldFlag )Has (fl FieldFlag )bool {return (_dccd .Mask ()&fl .Mask ())> 0};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_gbd .PdfObjectString ;Q *_gbd .PdfObjectInteger ;DS *_gbd .PdfObjectString ;RV _gbd .PdfObject ;MaxLen *_gbd .PdfObjectInteger ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ecfc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ecfc .UnderlyingCS ==nil {return nil ,_ff .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _ecfc .UnderlyingCS .ColorFromFloats (vals );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _gbd .PdfObject )(_gbd .PdfObjectName ,error ){var _fcff *_gbd .PdfObjectName ;var _cgbc *_gbd .PdfObjectArray ;if _eaaf ,_cffc :=obj .(*_gbd .PdfIndirectObject );_cffc {if _cggf ,_fccd :=_eaaf .PdfObject .(*_gbd .PdfObjectArray );
_fccd {_cgbc =_cggf ;}else if _dfab ,_ddc :=_eaaf .PdfObject .(*_gbd .PdfObjectName );_ddc {_fcff =_dfab ;};}else if _ecee ,_dgdb :=obj .(*_gbd .PdfObjectArray );_dgdb {_cgbc =_ecee ;}else if _ebcf ,_cbaf :=obj .(*_gbd .PdfObjectName );_cbaf {_fcff =_ebcf ;
};if _fcff !=nil {switch *_fcff {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fcff ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fcff ,nil ;
};};if _cgbc !=nil &&_cgbc .Len ()> 0{if _eagf ,_gbeb :=_cgbc .Get (0).(*_gbd .PdfObjectName );_gbeb {switch *_eagf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cgbc .Len ()==1{return *_eagf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_eagf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_eagf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_eagf ,nil ;};};};return "",nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_gbd .PdfObjectStream ;Data []byte ;_ecgdd *_gbd .PdfIndirectObject ;_afe *_gbd .PdfObjectStream ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_decb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_aagg :=_de .NewReader (img .getBase ());_debg :=_ed .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cecf :=_de .NewWriter (_debg );
_debe :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_abagc :=make ([]uint32 ,3);var (_adgbf error ;_fgad ,_ecag ,_cgdfc ,_dfdc ,_afgga ,_ecea float64 ;);for {_adgbf =_aagg .ReadSamples (_abagc );if _adgbf ==_acga .EOF {break ;}else if _adgbf !=nil {return img ,_adgbf ;
};_fgad =float64 (_abagc [0])/_debe ;_ecag =float64 (_abagc [1])/_debe ;_cgdfc =float64 (_abagc [2])/_debe ;_dfdc =_decb .Matrix [0]*_ga .Pow (_fgad ,_decb .Gamma [0])+_decb .Matrix [3]*_ga .Pow (_ecag ,_decb .Gamma [1])+_decb .Matrix [6]*_ga .Pow (_cgdfc ,_decb .Gamma [2]);
_afgga =_decb .Matrix [1]*_ga .Pow (_fgad ,_decb .Gamma [0])+_decb .Matrix [4]*_ga .Pow (_ecag ,_decb .Gamma [1])+_decb .Matrix [7]*_ga .Pow (_cgdfc ,_decb .Gamma [2]);_ecea =_decb .Matrix [2]*_ga .Pow (_fgad ,_decb .Gamma [0])+_decb .Matrix [5]*_ga .Pow (_ecag ,_decb .Gamma [1])+_decb .Matrix [8]*_ga .Pow (_cgdfc ,_decb .Gamma [2]);
_fgad =3.240479*_dfdc +-1.537150*_afgga +-0.498535*_ecea ;_ecag =-0.969256*_dfdc +1.875992*_afgga +0.041556*_ecea ;_cgdfc =0.055648*_dfdc +-0.204043*_afgga +1.057311*_ecea ;_fgad =_ga .Min (_ga .Max (_fgad ,0),1.0);_ecag =_ga .Min (_ga .Max (_ecag ,0),1.0);
_cgdfc =_ga .Min (_ga .Max (_cgdfc ,0),1.0);_abagc [0]=uint32 (_fgad *_debe );_abagc [1]=uint32 (_ecag *_debe );_abagc [2]=uint32 (_cgdfc *_debe );if _adgbf =_cecf .WriteSamples (_abagc );_adgbf !=nil {return img ,_adgbf ;};};return _cagfg (&_debg ),nil ;
};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_acf :=NewPdfAction ();_aa :=&PdfActionImportData {};_aa .PdfAction =_acf ;_acf .SetContext (_aa );return _aa ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_acgd *PdfWriter )SetNamedDestinations (dests _gbd .PdfObject )error {if dests ==nil {return nil ;};_db .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_acgd ._dbecd .Set ("\u0044\u0065\u0073t\u0073",dests );return _acgd .addObjects (dests );};

// ToPdfObject implements interface PdfModel.
func (_gedg *PdfAnnotationSquare )ToPdfObject ()_gbd .PdfObject {_gedg .PdfAnnotation .ToPdfObject ();_cdeb :=_gedg ._faa ;_dcfe :=_cdeb .PdfObject .(*_gbd .PdfObjectDictionary );if _gedg .PdfAnnotationMarkup !=nil {_gedg .PdfAnnotationMarkup .appendToPdfDictionary (_dcfe );
};_dcfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dcfe .SetIfNotNil ("\u0042\u0053",_gedg .BS );_dcfe .SetIfNotNil ("\u0049\u0043",_gedg .IC );_dcfe .SetIfNotNil ("\u0042\u0045",_gedg .BE );
_dcfe .SetIfNotNil ("\u0052\u0044",_gedg .RD );return _cdeb ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_ebgab *_gbd .PdfIndirectObject ;};func _faea (_ceffd *XObjectImage )error {if _ceffd .SMask ==nil {return nil ;};_edbd ,_abceg :=_ceffd .SMask .(*_gbd .PdfObjectStream );if !_abceg {_db .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _gbd .ErrTypeError ;};_bdfcg :=_edbd .PdfObjectDictionary ;_bfgdb :=_bdfcg .Get ("\u004d\u0061\u0074t\u0065");if _bfgdb ==nil {return nil ;};_gbafb ,_efdgdd :=_gbeec (_bfgdb .(*_gbd .PdfObjectArray ));if _efdgdd !=nil {return _efdgdd ;};_dbdfgc :=_gbd .MakeArrayFromFloats ([]float64 {_gbafb });
_bdfcg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dbdfgc );return nil ;};func (_acec *PdfAcroForm )filteredFields (_cgceg FieldFilterFunc ,_dffb bool )[]*PdfField {if _acec ==nil {return nil ;};return _gdfbf (_acec .Fields ,_cgceg ,_dffb );};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_abgf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gge :=0.3*_abgf .R ()+0.59*_abgf .G ()+0.11*_abgf .B ();_gge =_ga .Min (_ga .Max (_gge ,0.0),1.0);return NewPdfColorDeviceGray (_gge );};

// WriteToFile writes the Appender output to file specified by path.
func (_fagc *PdfAppender )WriteToFile (outputPath string )error {_cbbg ,_aafc :=_ec .Create (outputPath );if _aafc !=nil {return _aafc ;};defer _cbbg .Close ();return _fagc .Write (_cbbg );};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_fccec *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_fccec .ToPdfOutline ().PdfOutlineTreeNode ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bfac *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bfac ._gacee ==nil {_bfac .GetAnnotations ();};_bfac ._gacee =append (_bfac ._gacee ,annot );};

// ToPdfObject implements interface PdfModel.
func (_abgge *PdfAnnotationUnderline )ToPdfObject ()_gbd .PdfObject {_abgge .PdfAnnotation .ToPdfObject ();_cad :=_abgge ._faa ;_dgfa :=_cad .PdfObject .(*_gbd .PdfObjectDictionary );_abgge .PdfAnnotationMarkup .appendToPdfDictionary (_dgfa );_dgfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_dgfa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_abgge .QuadPoints );return _cad ;};func (_defbf *PdfAcroForm )fill (_cgffc FieldValueProvider ,_cgbgb FieldAppearanceGenerator )error {if _defbf ==nil {return nil ;};_cfccc ,_eaca :=_cgffc .FieldValues ();
if _eaca !=nil {return _eaca ;};for _ ,_cbbea :=range _defbf .AllFields (){_agbea :=_cbbea .PartialName ();_ddfe ,_aecge :=_cfccc [_agbea ];if !_aecge {if _eabfba ,_fbbef :=_cbbea .FullName ();_fbbef ==nil {_ddfe ,_aecge =_cfccc [_eabfba ];};};if !_aecge {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_agbea );
continue ;};if _ccfb :=_fgdd (_cbbea ,_ddfe );_ccfb !=nil {return _ccfb ;};if _cgbgb ==nil {continue ;};for _ ,_bgcc :=range _cbbea .Annotations {_dfcb ,_edgef :=_cgbgb .GenerateAppearanceDict (_defbf ,_cbbea ,_bgcc );if _edgef !=nil {return _edgef ;};
_bgcc .AP =_dfcb ;_bgcc .ToPdfObject ();};};return nil ;};func (_eabc *pdfFontSimple )addEncoding ()error {var (_eeadd string ;_ecca map[_dc .CharCode ]_dc .GlyphName ;_cbcd _dc .SimpleEncoder ;);if _eabc .Encoder ()!=nil {_bafca ,_bbbddg :=_eabc .Encoder ().(_dc .SimpleEncoder );
if _bbbddg &&_bafca !=nil {_eeadd =_bafca .BaseName ();};};if _eabc .Encoding !=nil {_eaba ,_bgdf ,_agag :=_eabc .getFontEncoding ();if _agag !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eabc ._dgcff ,_eabc ._bbecf ,_eabc .Encoding ,_eabc .Encoding ,_agag );
return _agag ;};if _eaba !=""{_eeadd =_eaba ;};_ecca =_bgdf ;_cbcd ,_agag =_dc .NewSimpleTextEncoder (_eeadd ,_ecca );if _agag !=nil {return _agag ;};};if _cbcd ==nil {_cebc :=_eabc ._ggff ;if _cebc !=nil {switch _eabc ._bbecf {case "\u0054\u0079\u0070e\u0031":if _cebc .fontFile !=nil &&_cebc .fontFile ._dage !=nil {_db .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_cbcd =_cebc .fontFile ._dage ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _cebc ._fegf !=nil {_db .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_deabg ,_fdcce :=_cebc ._fegf .MakeEncoder ();
if _fdcce ==nil {_cbcd =_deabg ;};};};};};if _cbcd !=nil {if _ecca !=nil {_db .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecca ,_eabc .baseFields ());_cbcd =_dc .ApplyDifferences (_cbcd ,_ecca );
};_eabc .SetEncoder (_cbcd );};return nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_gbd .PdfIndirectObject )*PdfOutlineItem {_bedba :=PdfOutlineItem {};_bedba ._aagcd =&_bedba ;_bedba .Title =_gbd .MakeString (title );_abacd :=_gbd .MakeArray ();_abacd .Append (page );_abacd .Append (_gbd .MakeName ("\u0046\u0069\u0074"));
_bedba .Dest =_abacd ;return &_bedba ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bagdgd *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_bagbf :=NewPdfOutlineItem ();_bagbf .Title =_gbd .MakeEncodedString (_bagdgd .Title ,true );_bagbf .Dest =_bagdgd .Dest .ToPdfObject ();var _ggaad []*PdfOutlineItem ;var _efdd int64 ;
var _fegaf *PdfOutlineItem ;for _ ,_cdfe :=range _bagdgd .Entries {_eccgf ,_abea :=_cdfe .ToPdfOutlineItem ();_eccgf .Parent =&_bagbf .PdfOutlineTreeNode ;if _fegaf !=nil {_fegaf .Next =&_eccgf .PdfOutlineTreeNode ;_eccgf .Prev =&_fegaf .PdfOutlineTreeNode ;
};_ggaad =append (_ggaad ,_eccgf );_efdd +=_abea ;_fegaf =_eccgf ;};_abcgd :=len (_ggaad );_efdd +=int64 (_abcgd );if _abcgd > 0{_bagbf .First =&_ggaad [0].PdfOutlineTreeNode ;_bagbf .Last =&_ggaad [_abcgd -1].PdfOutlineTreeNode ;_bagbf .Count =&_efdd ;
};return _bagbf ,_efdd ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// Val returns the value of the color.
func (_faab *PdfColorCalGray )Val ()float64 {return float64 (*_faab )};

// K returns the value of the key component of the color.
func (_caca *PdfColorDeviceCMYK )K ()float64 {return _caca [3]};

// BaseFont returns the font's "BaseFont" field.
func (_dgge *PdfFont )BaseFont ()string {return _dgge .baseFields ()._dgcff };

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_fdac :=NewPdfAnnotation ();_bed :=&PdfAnnotationInk {};_bed .PdfAnnotation =_fdac ;_bed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdac .SetContext (_bed );return _bed ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fcgb :=&PdfBorderStyle {};return _fcgb };func _affe (_dafdf StdFontName )(pdfFontSimple ,error ){_cafa ,_gfgg :=_fad .NewStdFontByName (_dafdf );if !_gfgg {return pdfFontSimple {},ErrFontNotSupported ;};_adfg :=_aabdf (_cafa );
return _adfg ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _gbd .PdfObject ;Open _gbd .PdfObject ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_gbd .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ecdc *_gbd .PdfIndirectObject ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// AddExtGState adds a graphics state to the XObject resources.
func (_fbbd *PdfPage )AddExtGState (name _gbd .PdfObjectName ,egs *_gbd .PdfObjectDictionary )error {if _fbbd .Resources ==nil {_fbbd .Resources =NewPdfPageResources ();};if _fbbd .Resources .ExtGState ==nil {_fbbd .Resources .ExtGState =_gbd .MakeDict ();
};_eece ,_eaafc :=_gbd .TraceToDirectObject (_fbbd .Resources .ExtGState ).(*_gbd .PdfObjectDictionary );if !_eaafc {_db .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gbd .TraceToDirectObject (_fbbd .Resources .ExtGState ));
return _ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eece .Set (name ,egs );return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fcdba *PdfReader )GetNamedDestinations ()(_gbd .PdfObject ,error ){_gadc :=_gbd .ResolveReference (_fcdba ._dccge .Get ("\u0044\u0065\u0073t\u0073"));if _gadc ==nil {return nil ,nil ;};if !_fcdba ._adaag {_cdbfe :=_fcdba .traverseObjectData (_gadc );
if _cdbfe !=nil {return nil ,_cdbfe ;};};return _gadc ,nil ;};func (_dgdge fontCommon )isCIDFont ()bool {if _dgdge ._bbecf ==""{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgdge );
};_fcge :=false ;switch _dgdge ._bbecf {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fcge =true ;};_db .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fcge ,_dgdge );
return _fcge ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_ggcd *PdfPageResources )GetXObjectByName (keyName _gbd .PdfObjectName )(*_gbd .PdfObjectStream ,XObjectType ){if _ggcd .XObject ==nil {return nil ,XObjectTypeUndefined ;};_dccbd ,_gbgcc :=_gbd .TraceToDirectObject (_ggcd .XObject ).(*_gbd .PdfObjectDictionary );
if !_gbgcc {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbd .TraceToDirectObject (_ggcd .XObject ));
return nil ,XObjectTypeUndefined ;};if _fgfgf :=_dccbd .Get (keyName );_fgfgf !=nil {_beed ,_fegfc :=_gbd .GetStream (_fgfgf );if !_fegfc {_db .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_fgfgf );
return nil ,XObjectTypeUndefined ;};_cdagb :=_beed .PdfObjectDictionary ;_edgcc ,_fegfc :=_gbd .TraceToDirectObject (_cdagb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_gbd .PdfObjectName );if !_fegfc {_db .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_cdagb .String ());
return nil ,XObjectTypeUndefined ;};if *_edgcc =="\u0049\u006d\u0061g\u0065"{return _beed ,XObjectTypeImage ;}else if *_edgcc =="\u0046\u006f\u0072\u006d"{return _beed ,XObjectTypeForm ;}else if *_edgcc =="\u0050\u0053"{return _beed ,XObjectTypePS ;}else {_db .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_edgcc );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// GetPage returns the PdfPage model for the specified page number.
func (_ageeb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ageeb ._dagg .GetCrypter ()!=nil &&!_ageeb ._dagg .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ageeb ._dfgeb )< pageNumber {return nil ,_ff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_dafcb :=pageNumber -1;if _dafcb < 0{return nil ,_a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fabda :=_ageeb .PageList [_dafcb ];
return _fabda ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ddfbgc *PdfColorspaceLab )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbd ,_fdaf :=_gbd .GetNumbersAsFloat (objects );
if _fdaf !=nil {return nil ,_fdaf ;};return _ddfbgc .ColorFromFloats (_bfbd );};func _ddafgc ()string {return _db .Version };

// HasFontByName checks if has font resource by name.
func (_fdfd *PdfPage )HasFontByName (name _gbd .PdfObjectName )bool {_bfdc ,_aega :=_fdfd .Resources .Font .(*_gbd .PdfObjectDictionary );if !_aega {return false ;};if _gbba :=_bfdc .Get (name );_gbba !=nil {return true ;};return false ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_cdca *PdfReader )GetTrailer ()(*_gbd .PdfObjectDictionary ,error ){_accbd :=_cdca ._dagg .GetTrailer ();if _accbd ==nil {return nil ,_ff .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _accbd ,nil ;
};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func _bgedg (_ffag _gbd .PdfObject ,_fgcfa *PdfReader )(*OutlineDest ,error ){_cebf ,_agdad :=_gbd .GetArray (_ffag );if !_agdad {return nil ,_ff .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fgbc :=_cebf .Len ();if _fgbc < 2{return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fgbc );
};_bbbga :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gfeac :=_cebf .Get (0);if _dfdg ,_gabd :=_gbd .GetIndirect (_gfeac );_gabd {if _ ,_gcfc ,_dace :=_fgcfa .PageFromIndirectObject (_dfdg );_dace ==nil {_bbbga .Page =int64 (_gcfc -1);}else {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dfdg );
};_bbbga .PageObj =_dfdg ;}else if _ddcba ,_bggff :=_gbd .GetIntVal (_gfeac );_bggff {if _ddcba >=0&&_ddcba < len (_fgcfa .PageList ){_bbbga .PageObj =_fgcfa .PageList [_ddcba ].GetPageAsIndirectObject ();}else {_db .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ddcba );
};_bbbga .Page =int64 (_ddcba );}else {return nil ,_a .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gfeac );};_caacg ,_agdad :=_gbd .GetNameVal (_cebf .Get (1));
if !_agdad {_db .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cebf .Get (1));
return _bbbga ,nil ;};switch _caacg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fgbc > 2{_bbbga .Y ,_ =_gbd .GetNumberAsFloat (_gbd .TraceToDirectObject (_cebf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fgbc > 2{_bbbga .X ,_ =_gbd .GetNumberAsFloat (_gbd .TraceToDirectObject (_cebf .Get (2)));
};case "\u0058\u0059\u005a":if _fgbc > 4{_bbbga .X ,_ =_gbd .GetNumberAsFloat (_gbd .TraceToDirectObject (_cebf .Get (2)));_bbbga .Y ,_ =_gbd .GetNumberAsFloat (_gbd .TraceToDirectObject (_cebf .Get (3)));_bbbga .Zoom ,_ =_gbd .GetNumberAsFloat (_gbd .TraceToDirectObject (_cebf .Get (4)));
};default:_caacg ="\u0046\u0069\u0074";};_bbbga .Mode =_caacg ;return _bbbga ,nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _gbd .PdfObject ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_acagd *PdfAcroForm )GetContainingPdfObject ()_gbd .PdfObject {return _acagd ._cdec };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_gdfb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _gdfb .Alternate ==nil {_db .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gdfb .N ==1{_db .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ccegb :=NewPdfColorspaceDeviceGray ();return _ccegb .ImageToRGB (img );}else if _gdfb .N ==3{_db .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _gdfb .N ==4{_db .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bbb :=NewPdfColorspaceDeviceCMYK ();return _bbb .ImageToRGB (img );}else {return img ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_db .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gdfb );
_caac ,_fece :=_gdfb .Alternate .ImageToRGB (img );_db .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_db .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_caac );
return _caac ,_fece ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dcde :=NewPdfAnnotation ();_bbgg :=&PdfAnnotationFileAttachment {};_bbgg .PdfAnnotation =_dcde ;_bbgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcde .SetContext (_bbgg );return _bbgg ;
};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_dgbgd *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_abfa :=func (_bgce float64 )float64 {if _bgce >=6.0/29{return _bgce *_bgce *_bgce ;};return 108.0/841*(_bgce -4/29);};_fcca :=img ._dadd ;if len (_fcca )!=6{_db .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fcca =_dgbgd .DecodeArray ();};_gcgac :=_de .NewReader (img .getBase ());_bebf :=_ed .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._fafca ,img ._dadd );_cgccd :=_de .NewWriter (_bebf );_dbda :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;
_eebg :=make ([]uint32 ,3);var (_faefb error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_gaec ,_cgbg ,_egae float64 ;);for {_faefb =_gcgac .ReadSamples (_eebg );if _faefb ==_acga .EOF {break ;}else if _faefb !=nil {return img ,_faefb ;};Ls =float64 (_eebg [0])/_dbda ;
As =float64 (_eebg [1])/_dbda ;Bs =float64 (_eebg [2])/_dbda ;Ls =_ed .LinearInterpolate (Ls ,0.0,1.0,_fcca [0],_fcca [1]);As =_ed .LinearInterpolate (As ,0.0,1.0,_fcca [2],_fcca [3]);Bs =_ed .LinearInterpolate (Bs ,0.0,1.0,_fcca [4],_fcca [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_dgbgd .WhitePoint [0]*_abfa (L );Y =_dgbgd .WhitePoint [1]*_abfa (M );Z =_dgbgd .WhitePoint [2]*_abfa (N );_gaec =3.240479*X +-1.537150*Y +-0.498535*Z ;_cgbg =-0.969256*X +1.875992*Y +0.041556*Z ;_egae =0.055648*X +-0.204043*Y +1.057311*Z ;
_gaec =_ga .Min (_ga .Max (_gaec ,0),1.0);_cgbg =_ga .Min (_ga .Max (_cgbg ,0),1.0);_egae =_ga .Min (_ga .Max (_egae ,0),1.0);_eebg [0]=uint32 (_gaec *_dbda );_eebg [1]=uint32 (_cgbg *_dbda );_eebg [2]=uint32 (_egae *_dbda );if _faefb =_cgccd .WriteSamples (_eebg );
_faefb !=nil {return img ,_faefb ;};};return _cagfg (&_bebf ),nil ;};func (_cbdab *PdfSignature )extractChainFromCert ()([]*_ad .Certificate ,error ){var _aefe *_gbd .PdfObjectArray ;switch _adgge :=_cbdab .Cert .(type ){case *_gbd .PdfObjectString :_aefe =_gbd .MakeArray (_adgge );
case *_gbd .PdfObjectArray :_aefe =_adgge ;default:return nil ,_a .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_adgge );
};var _eggcb _cd .Buffer ;for _ ,_bcfec :=range _aefe .Elements (){_fdegg ,_defba :=_gbd .GetString (_bcfec );if !_defba {return nil ,_a .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_bcfec );
};if _ ,_aadbb :=_eggcb .Write (_fdegg .Bytes ());_aadbb !=nil {return nil ,_aadbb ;};};return _ad .ParseCertificates (_eggcb .Bytes ());};func (_adfda *PdfWriter )copyObject (_dgbgfc _gbd .PdfObject ,_acca map[_gbd .PdfObject ]_gbd .PdfObject ,_efgaf map[_gbd .PdfObject ]struct{},_bdbcd bool )_gbd .PdfObject {_dbffcb :=!_adfda ._bgdef &&_efgaf !=nil ;
if _egab ,_gbbag :=_acca [_dgbgfc ];_gbbag {if _dbffcb &&!_bdbcd {delete (_efgaf ,_dgbgfc );};return _egab ;};_dagff :=_dgbgfc ;switch _gdeed :=_dgbgfc .(type ){case *_gbd .PdfObjectArray :_adbdg :=_gbd .MakeArray ();_dagff =_adbdg ;_acca [_dgbgfc ]=_dagff ;
for _ ,_gdggb :=range _gdeed .Elements (){_adbdg .Append (_adfda .copyObject (_gdggb ,_acca ,_efgaf ,_bdbcd ));};case *_gbd .PdfObjectStreams :_faba :=&_gbd .PdfObjectStreams {PdfObjectReference :_gdeed .PdfObjectReference };_dagff =_faba ;_acca [_dgbgfc ]=_dagff ;
for _ ,_fgagd :=range _gdeed .Elements (){_faba .Append (_adfda .copyObject (_fgagd ,_acca ,_efgaf ,_bdbcd ));};case *_gbd .PdfObjectStream :_egfee :=&_gbd .PdfObjectStream {Stream :_gdeed .Stream ,PdfObjectReference :_gdeed .PdfObjectReference };_dagff =_egfee ;
_acca [_dgbgfc ]=_dagff ;_egfee .PdfObjectDictionary =_adfda .copyObject (_gdeed .PdfObjectDictionary ,_acca ,_efgaf ,_bdbcd ).(*_gbd .PdfObjectDictionary );case *_gbd .PdfObjectDictionary :var _dddgef bool ;if _dbffcb &&!_bdbcd {if _dfdge ,_ :=_gbd .GetNameVal (_gdeed .Get ("\u0054\u0079\u0070\u0065"));
_dfdge =="\u0050\u0061\u0067\u0065"{_ ,_eeba :=_adfda ._bced [_gdeed ];_bdbcd =!_eeba ;_dddgef =_bdbcd ;};};_agce :=_gbd .MakeDict ();_dagff =_agce ;_acca [_dgbgfc ]=_dagff ;for _ ,_fgebg :=range _gdeed .Keys (){_agce .Set (_fgebg ,_adfda .copyObject (_gdeed .Get (_fgebg ),_acca ,_efgaf ,_bdbcd ));
};if _dddgef {_dagff =_gbd .MakeNull ();_bdbcd =false ;};case *_gbd .PdfIndirectObject :_fcdcf :=&_gbd .PdfIndirectObject {PdfObjectReference :_gdeed .PdfObjectReference };_dagff =_fcdcf ;_acca [_dgbgfc ]=_dagff ;_fcdcf .PdfObject =_adfda .copyObject (_gdeed .PdfObject ,_acca ,_efgaf ,_bdbcd );
case *_gbd .PdfObjectString :_ccefa :=*_gdeed ;_dagff =&_ccefa ;_acca [_dgbgfc ]=_dagff ;case *_gbd .PdfObjectName :_gaeb :=*_gdeed ;_dagff =&_gaeb ;_acca [_dgbgfc ]=_dagff ;case *_gbd .PdfObjectNull :_dagff =_gbd .MakeNull ();_acca [_dgbgfc ]=_dagff ;
case *_gbd .PdfObjectInteger :_acadd :=*_gdeed ;_dagff =&_acadd ;_acca [_dgbgfc ]=_dagff ;case *_gbd .PdfObjectReference :_fecce :=*_gdeed ;_dagff =&_fecce ;_acca [_dgbgfc ]=_dagff ;case *_gbd .PdfObjectFloat :_ecebg :=*_gdeed ;_dagff =&_ecebg ;_acca [_dgbgfc ]=_dagff ;
case *_gbd .PdfObjectBool :_aaac :=*_gdeed ;_dagff =&_aaac ;_acca [_dgbgfc ]=_dagff ;case *pdfSignDictionary :_gaebf :=&pdfSignDictionary {PdfObjectDictionary :_gbd .MakeDict (),_adced :_gdeed ._adced ,_bgffc :_gdeed ._bgffc };_dagff =_gaebf ;_acca [_dgbgfc ]=_dagff ;
for _ ,_bgafa :=range _gdeed .Keys (){_gaebf .Set (_bgafa ,_adfda .copyObject (_gdeed .Get (_bgafa ),_acca ,_efgaf ,_bdbcd ));};default:_db .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_dgbgfc );
};if _dbffcb &&_bdbcd {_efgaf [_dgbgfc ]=struct{}{};};return _dagff ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ddgeg *PdfOutlineTreeNode )GetContext ()PdfModel {if _gcbae ,_cgeab :=_ddgeg ._aagcd .(*PdfOutline );_cgeab {return _gcbae ;};if _bggga ,_dbccc :=_ddgeg ._aagcd .(*PdfOutlineItem );_dbccc {return _bggga ;};_db .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func _eeeg (_cdbd _gbd .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_afcc :=NewPdfColorspaceSpecialIndexed ();if _cffbf ,_dagae :=_cdbd .(*_gbd .PdfIndirectObject );_dagae {_afcc ._geeg =_cffbf ;};_cdbd =_gbd .TraceToDirectObject (_cdbd );
_beeb ,_egfe :=_cdbd .(*_gbd .PdfObjectArray );if !_egfe {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _beeb .Len ()!=4{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_cdbd =_beeb .Get (0);_eaee ,_egfe :=_cdbd .(*_gbd .PdfObjectName );if !_egfe {return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_eaee !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cdbd =_beeb .Get (1);_gggcf ,_efcad :=DetermineColorspaceNameFromPdfObject (_cdbd );if _efcad !=nil {return nil ,_efcad ;};if _gggcf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gggcf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_db .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gggcf );
return nil ,_ddee ;};_cceff ,_efcad :=NewPdfColorspaceFromPdfObject (_cdbd );if _efcad !=nil {return nil ,_efcad ;};_afcc .Base =_cceff ;_cdbd =_beeb .Get (2);_dcdef ,_efcad :=_gbd .GetNumberAsInt64 (_cdbd );if _efcad !=nil {return nil ,_efcad ;};if _dcdef > 255{return nil ,_a .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_afcc .HiVal =int (_dcdef );_cdbd =_beeb .Get (3);_afcc .Lookup =_cdbd ;_cdbd =_gbd .TraceToDirectObject (_cdbd );var _caef []byte ;if _bedf ,_bgdb :=_cdbd .(*_gbd .PdfObjectString );_bgdb {_caef =_bedf .Bytes ();_db .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_caef );
}else if _gbab ,_ddegf :=_cdbd .(*_gbd .PdfObjectStream );_ddegf {_db .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cdbd .String ());_db .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gbab .Stream ),_gbab .Stream );
_bdcf ,_agcc :=_gbd .DecodeStream (_gbab );if _agcc !=nil {return nil ,_agcc ;};_db .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bdcf ),_bdcf );_caef =_bdcf ;}else {_db .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cdbd );
return nil ,_a .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_caef )< _afcc .Base .GetNumComponents ()*(_afcc .HiVal +1){_db .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_db .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_caef ),_afcc .Base .GetNumComponents (),_afcc .HiVal );
}else {_caef =_caef [:_afcc .Base .GetNumComponents ()*(_afcc .HiVal +1)];};_afcc ._edafc =_caef ;return _afcc ,nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_dbeff *XObjectForm )GetContentStream ()([]byte ,error ){_gcbdg ,_aeccd :=_gbd .DecodeStream (_dbeff ._cfbcb );if _aeccd !=nil {return nil ,_aeccd ;};return _gcbdg ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_agc :=NewPdfAction ();_ffe :=&PdfActionSetOCGState {};_ffe .PdfAction =_agc ;_agc .SetContext (_ffe );return _ffe ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_acgc *PdfColorspaceLab )GetNumComponents ()int {return 3};

// Encoder returns the font's text encoder.
func (_eedcd pdfFontType3 )Encoder ()_dc .TextEncoder {return _eedcd ._aaba };

// ToPdfObject returns the PDF representation of the colorspace.
func (_afebb *PdfPageResourcesColorspaces )ToPdfObject ()_gbd .PdfObject {_fdcgbc :=_gbd .MakeDict ();for _ ,_dfge :=range _afebb .Names {_fdcgbc .Set (_gbd .PdfObjectName (_dfge ),_afebb .Colorspaces [_dfge ].ToPdfObject ());};if _afebb ._abdgb !=nil {_afebb ._abdgb .PdfObject =_fdcgbc ;
return _afebb ._abdgb ;};return _fdcgbc ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gece *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gece ._cbbeb !=nil {return _gece ._cbbeb ,nil ;};if _gece .ColorSpace ==nil {return nil ,nil ;};_fdcgbb ,_dggfca :=_dgagb (_gece .ColorSpace );if _dggfca !=nil {return nil ,_dggfca ;
};_gece ._cbbeb =_fdcgbb ;return _gece ._cbbeb ,nil ;};func (_edga *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetForms sets the Acroform for a PDF file.
func (_dgba *PdfWriter )SetForms (form *PdfAcroForm )error {_dgba ._gaag =form ;return nil };

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_beafb :=&XObjectForm {};_ecgbf :=&_gbd .PdfObjectStream {};_ecgbf .PdfObjectDictionary =_gbd .MakeDict ();_beafb ._cfbcb =_ecgbf ;return _beafb ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bc *PdfAction )GetContainingPdfObject ()_gbd .PdfObject {return _bc ._ef };

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _gbd .PdfObject ;Dest _gbd .PdfObject ;H _gbd .PdfObject ;PA _gbd .PdfObject ;QuadPoints _gbd .PdfObject ;BS _gbd .PdfObject ;_geed *PdfAction ;_bdg *PdfReader ;};func (_becd *PdfReader )newPdfAnnotationCircleFromDict (_bbfc *_gbd .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_ded :=PdfAnnotationCircle {};
_age ,_abab :=_becd .newPdfAnnotationMarkupFromDict (_bbfc );if _abab !=nil {return nil ,_abab ;};_ded .PdfAnnotationMarkup =_age ;_ded .BS =_bbfc .Get ("\u0042\u0053");_ded .IC =_bbfc .Get ("\u0049\u0043");_ded .BE =_bbfc .Get ("\u0042\u0045");_ded .RD =_bbfc .Get ("\u0052\u0044");
return &_ded ,nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_cea :=NewPdfAnnotation ();_eeg :=&PdfAnnotationSound {};_eeg .PdfAnnotation =_cea ;_eeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cea .SetContext (_eeg );return _eeg ;};func (_aeb *DSS )add (_dcdd *[]*_gbd .PdfObjectStream ,_fbcce map[string ]*_gbd .PdfObjectStream ,_babe [][]byte )([]*_gbd .PdfObjectStream ,error ){_dcbf :=make ([]*_gbd .PdfObjectStream ,0,len (_babe ));
for _ ,_bbdd :=range _babe {_aacf ,_bgde :=_agcfd (_bbdd );if _bgde !=nil {return nil ,_bgde ;};_fedb ,_bbcfc :=_fbcce [string (_aacf )];if !_bbcfc {_fedb ,_bgde =_gbd .MakeStream (_bbdd ,_gbd .NewRawEncoder ());if _bgde !=nil {return nil ,_bgde ;};_fbcce [string (_aacf )]=_fedb ;
*_dcdd =append (*_dcdd ,_fedb );};_dcbf =append (_dcbf ,_fedb );};return _dcbf ,nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_dcd :=NewPdfAction ();_gec :=&PdfActionTrans {};_gec .PdfAction =_dcd ;_dcd .SetContext (_gec );return _gec ;};func _aaedb (_gcad []byte )bool {if len (_gcad )< 4{return true ;};for _acgce :=range _gcad [:4]{_geaed :=rune (_acgce );
if !_gb .Is (_gb .ASCII_Hex_Digit ,_geaed )&&!_gb .IsSpace (_geaed ){return true ;};};return false ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_gbaef *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _gdedg []_dc .TextEncoder ;var _egaa _dc .CMapEncoder ;if _bbaaa :=_gbaef .baseFields ()._agcgb ;_bbaaa !=nil {_egaa =_dc .NewCMapEncoder ("",nil ,_bbaaa );};_ebbd :=_gbaef .Encoder ();
if _ebbd !=nil {switch _aadcf :=_ebbd .(type ){case _dc .SimpleEncoder :_deeb :=_aadcf .BaseName ();if _ ,_ebeg :=_afab [_deeb ];_ebeg {_gdedg =append (_gdedg ,_ebbd );};};};if len (_gdedg )==0{if _gbaef .baseFields ()._agcgb !=nil {_gdedg =append (_gdedg ,_egaa );
};if _ebbd !=nil {_gdedg =append (_gdedg ,_ebbd );};};var _ccee _cd .Buffer ;var _ebgad int ;for _ ,_bbade :=range data {var _aecc bool ;for _ ,_ccfd :=range _gdedg {if _gcbg :=_ccfd .Encode (string (_bbade ));len (_gcbg )> 0{_ccee .Write (_gcbg );_aecc =true ;
break ;};};if !_aecc {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bbade );
_ebgad ++;};};if _ebgad !=0{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_ebgad ,_gbaef ,_gdedg );
};return _ccee .Bytes (),_ebgad ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gbd .PdfObject ;LE _gbd .PdfObject ;BS _gbd .PdfObject ;IC _gbd .PdfObject ;BE _gbd .PdfObject ;IT _gbd .PdfObject ;Measure _gbd .PdfObject ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_beee :_gbd .MakeIndirectObject (_gbd .MakeDict ())}};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bcge :=NewPdfAnnotation ();_edd :=&PdfAnnotationTrapNet {};_edd .PdfAnnotation =_bcge ;_bcge .SetContext (_edd );return _edd ;};

// ToPdfObject implements interface PdfModel.
func (_feaa *PdfAnnotationPrinterMark )ToPdfObject ()_gbd .PdfObject {_feaa .PdfAnnotation .ToPdfObject ();_dec :=_feaa ._faa ;_efdg :=_dec .PdfObject .(*_gbd .PdfObjectDictionary );_efdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_efdg .SetIfNotNil ("\u004d\u004e",_feaa .MN );return _dec ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_egaeg *LTV )EnableAll (extraCerts []*_ad .Certificate )error {_bdbe :=_egaeg ._aacee ._fafd .AcroForm ;for _ ,_ecead :=range _bdbe .AllFields (){_dgcg ,_ :=_ecead .GetContext ().(*PdfFieldSignature );if _dgcg ==nil {continue ;};_acebc :=_dgcg .V ;
if _efecg :=_egaeg .validateSig (_acebc );_efecg !=nil {_db .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_efecg );
};if _eeda :=_egaeg .Enable (_acebc ,extraCerts );_eeda !=nil {return _eeda ;};};return nil ;};

// Add appends an outline item as a child of the current outline item.
func (_ddgfc *OutlineItem )Add (item *OutlineItem ){_ddgfc .Entries =append (_ddgfc .Entries ,item )};

// GetContainingPdfObject implements interface PdfModel.
func (_aeag *PdfFilespec )GetContainingPdfObject ()_gbd .PdfObject {return _aeag ._aeace };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_bcag *PdfFont )SubsetRegistered ()error {switch _cfcd :=_bcag ._bbddd .(type ){case *pdfFontType0 :_fgee :=_cfcd .subsetRegistered ();if _fgee !=nil {_db .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fgee );
return _fgee ;};if _cfcd ._cccfd !=nil {if _cfcd ._dfcd !=nil {_cfcd ._dfcd .ToPdfObject ();};_cfcd .ToPdfObject ();};default:_db .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_cfcd );
};return nil ;};func _eccfg (_aebf []byte )[]byte {const _gccbcc =52845;const _gfcgd =22719;_geeab :=55665;for _ ,_agfbb :=range _aebf [:4]{_geeab =(int (_agfbb )+_geeab )*_gccbcc +_gfcgd ;};_eabd :=make ([]byte ,len (_aebf )-4);for _ffgd ,_dgcaf :=range _aebf [4:]{_eabd [_ffgd ]=byte (int (_dgcaf )^_geeab >>8);
_geeab =(int (_dgcaf )+_geeab )*_gccbcc +_gfcgd ;};return _eabd ;};func (_ddfca *fontFile )parseASCIIPart (_dcefef []byte )error {if len (_dcefef )< 2||string (_dcefef [:2])!="\u0025\u0021"{return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cbdcg ,_ebacg ,_beefa :=_feaf (_dcefef );if _beefa !=nil {return _beefa ;};_cafd :=_ecagf (_cbdcg );_ddfca ._gecdf =_cafd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _ddfca ._gecdf ==""{_db .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ebacg !=""{_afcaf ,_bebdg :=_cdceb (_ebacg );if _bebdg !=nil {return _bebdg ;};_bbadg ,_bebdg :=_dc .NewCustomSimpleTextEncoder (_afcaf ,nil );if _bebdg !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bebdg );
return nil ;};_ddfca ._dage =_bbadg ;};return nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cdeg FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cdeg .Mask ()|fl .Mask ())};func (_dcbb *PdfReader )flattenFieldsWithOpts (_cffbfb bool ,_adaf FieldAppearanceGenerator ,_dedfb *FieldFlattenOpts )error {if _dedfb ==nil {_dedfb =&FieldFlattenOpts {};
};var _ddcd bool ;_defb :=map[*PdfAnnotation ]bool {};{var _bdcad []*PdfField ;_edfbf :=_dcbb .AcroForm ;if _edfbf !=nil {if _dedfb .FilterFunc !=nil {_bdcad =_edfbf .filteredFields (_dedfb .FilterFunc ,true );_ddcd =_edfbf .Fields !=nil &&len (*_edfbf .Fields )> 0;
}else {_bdcad =_edfbf .AllFields ();};};for _ ,_adcg :=range _bdcad {for _ ,_dccee :=range _adcg .Annotations {_defb [_dccee .PdfAnnotation ]=_adcg .V !=nil ;if _adaf !=nil {_acee ,_abdg :=_adaf .GenerateAppearanceDict (_edfbf ,_adcg ,_dccee );if _abdg !=nil {return _abdg ;
};_dccee .AP =_acee ;};};};};if _cffbfb {for _ ,_adcea :=range _dcbb .PageList {_affc ,_cbbb :=_adcea .GetAnnotations ();if _cbbb !=nil {return _cbbb ;};for _ ,_efad :=range _affc {_defb [_efad ]=true ;};};};for _ ,_fefdg :=range _dcbb .PageList {var _eegf []*PdfAnnotation ;
if _adaf !=nil {if _bffae :=_adaf .WrapContentStream (_fefdg );_bffae !=nil {return _bffae ;};};_aagde ,_cage :=_fefdg .GetAnnotations ();if _cage !=nil {return _cage ;};for _ ,_bddc :=range _aagde {_fded ,_adfa :=_defb [_bddc ];if !_adfa &&_dedfb .AnnotFilterFunc !=nil {if _ ,_cdgfa :=_bddc .GetContext ().(*PdfAnnotationWidget );
!_cdgfa {_adfa =_dedfb .AnnotFilterFunc (_bddc );};};if !_adfa {_eegf =append (_eegf ,_bddc );continue ;};switch _bddc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dceca ,_bfaff ,_eeee :=_aece (_bddc );if _eeee !=nil {if !_fded {_db .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_eeee );
continue ;};if _dceca ==nil {continue ;};_gbgg :=_fefdg .Resources .GenerateXObjectName ();_fefdg .Resources .SetXObjectFormByName (_gbgg ,_dceca );_caced :=_ga .Min (_bfaff .Llx ,_bfaff .Urx );_eadgc :=_ga .Min (_bfaff .Lly ,_bfaff .Ury );var _eddc []string ;
_eddc =append (_eddc ,"\u0071");_eddc =append (_eddc ,_a .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_caced ,_eadgc ));
_eddc =append (_eddc ,_a .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gbgg .String ()));_eddc =append (_eddc ,"\u0051");_ecgad :=_fc .Join (_eddc ,"\u000a");_eeee =_fefdg .AppendContentStream (_ecgad );if _eeee !=nil {return _eeee ;};if _dceca .Resources !=nil {_bbbdd ,_ggbg :=_gbd .GetDict (_dceca .Resources .Font );
if _ggbg {for _ ,_eagd :=range _bbbdd .Keys (){if !_fefdg .Resources .HasFontByName (_eagd ){_fefdg .Resources .SetFontByName (_eagd ,_bbbdd .Get (_eagd ));};};};};};if len (_eegf )> 0{_fefdg ._gacee =_eegf ;}else {_fefdg ._gacee =[]*PdfAnnotation {};};
};if !_ddcd {_dcbb .AcroForm =nil ;};return nil ;};func _fdeaf ()*modelManager {_fffca :=modelManager {};_fffca ._bggda =map[PdfModel ]_gbd .PdfObject {};_fffca ._fage =map[_gbd .PdfObject ]PdfModel {};return &_fffca ;};

// Encoder returns the font's text encoder.
func (_fefge *PdfFont )Encoder ()_dc .TextEncoder {_cffbbg :=_fefge .actualFont ();if _cffbbg ==nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_fefge ._bbddd );
return nil ;};return _cffbbg .Encoder ();};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_eggeb *PdfReader )GetEncryptionMethod ()string {_abdc :=_eggeb ._dagg .GetCrypter ();return _abdc .String ();};

// Items returns all children outline items.
func (_dbbcb *Outline )Items ()[]*OutlineItem {return _dbbcb .Entries };func _aabdf (_bbba _fad .StdFont )pdfFontSimple {_cggeg :=_bbba .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_bbecf :"\u0054\u0079\u0070e\u0031",_dgcff :_bbba .Name ()},_ecfeb :_bbba .GetMetricsTable (),_accbg :&PdfFontDescriptor {FontName :_gbd .MakeName (string (_cggeg .Name )),FontFamily :_gbd .MakeName (_cggeg .Family ),FontWeight :_gbd .MakeFloat (float64 (_cggeg .Weight )),Flags :_gbd .MakeInteger (int64 (_cggeg .Flags )),FontBBox :_gbd .MakeArrayFromFloats (_cggeg .BBox [:]),ItalicAngle :_gbd .MakeFloat (_cggeg .ItalicAngle ),Ascent :_gbd .MakeFloat (_cggeg .Ascent ),Descent :_gbd .MakeFloat (_cggeg .Descent ),CapHeight :_gbd .MakeFloat (_cggeg .CapHeight ),XHeight :_gbd .MakeFloat (_cggeg .XHeight ),StemV :_gbd .MakeFloat (_cggeg .StemV ),StemH :_gbd .MakeFloat (_cggeg .StemH )},_dgaa :_bbba .Encoder ()};
};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_fdacf *PdfReader )traverseObjectData (_abff _gbd .PdfObject )error {return _gbd .ResolveReferencesDeep (_abff ,_fdacf ._dcag );};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_gaac :=NewPdfAnnotation ();_dgb :=&PdfAnnotationUnderline {};_dgb .PdfAnnotation =_gaac ;_dgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gaac .SetContext (_dgb );return _dgb ;};func (_bgee *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dcceb :=_bgee ._ggff ;
_dcceb !=nil {return _dcceb ;};return _bgee ._accbg ;};func (_gdea *PdfReader )newPdfActionTransFromDict (_dbeae *_gbd .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dbeae .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_defd *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_acdceg :=PdfInfo {};_dbfgd ,_abddc :=_defd .GetTrailer ();if _abddc !=nil {return nil ,_abddc ;};var _aeeb *_gbd .PdfObjectDictionary ;_ggdcd :=_dbfgd .Get ("\u0049\u006e\u0066\u006f");switch _fbccd :=_ggdcd .(type ){case *_gbd .PdfObjectReference :_dacb :=_fbccd ;
_ggdcd ,_abddc =_defd .GetIndirectObjectByNumber (int (_dacb .ObjectNumber ));_ggdcd =_gbd .TraceToDirectObject (_ggdcd );if _abddc !=nil {return nil ,_abddc ;};_aeeb ,_ =_ggdcd .(*_gbd .PdfObjectDictionary );case *_gbd .PdfObjectDictionary :_aeeb =_fbccd ;
};if _aeeb ==nil {return nil ,_ff .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_dgccbf :=range _aeeb .Keys (){switch _dgccbf {case "\u0054\u0069\u0074l\u0065":_acdceg .Title ,_ =_gbd .GetString (_aeeb .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_acdceg .Author ,_ =_gbd .GetString (_aeeb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_acdceg .Subject ,_ =_gbd .GetString (_aeeb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_acdceg .Keywords ,_ =_gbd .GetString (_aeeb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_acdceg .Creator ,_ =_gbd .GetString (_aeeb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_acdceg .Producer ,_ =_gbd .GetString (_aeeb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_acdceg .Trapped ,_ =_gbd .GetName (_aeeb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _egec ,_gddgeg :=_gbd .GetString (_aeeb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_gddgeg &&_egec .String ()!=""{_eeggf ,_cgafa :=NewPdfDate (_egec .String ());
if _cgafa !=nil {return nil ,_cgafa ;};_acdceg .CreationDate =&_eeggf ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _cacae ,_gabeb :=_gbd .GetString (_aeeb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_gabeb &&_cacae .String ()!=""{_cfegc ,_gebda :=NewPdfDate (_cacae .String ());
if _gebda !=nil {return nil ,_gebda ;};_acdceg .ModifiedDate =&_cfegc ;};default:_ddfgg ,_ :=_gbd .GetString (_aeeb .Get (_dgccbf ));if _acdceg ._bafb ==nil {_acdceg ._bafb =_gbd .MakeDict ();};_acdceg ._bafb .Set (_dgccbf ,_ddfgg );};};return &_acdceg ,nil ;
};

// Add appends a top level outline item to the outline.
func (_bcaa *Outline )Add (item *OutlineItem ){_bcaa .Entries =append (_bcaa .Entries ,item )};func (_cbfag *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _cbfag ._ggff };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_afcac *PdfPageResources )GetShadingByName (keyName _gbd .PdfObjectName )(*PdfShading ,bool ){if _afcac .Shading ==nil {return nil ,false ;};_acffb ,_bbdga :=_gbd .TraceToDirectObject (_afcac .Shading ).(*_gbd .PdfObjectDictionary );if !_bbdga {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afcac .Shading );
return nil ,false ;};if _dagde :=_acffb .Get (keyName );_dagde !=nil {_addg ,_gcdca :=_aedd (_dagde );if _gcdca !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_gcdca );
return nil ,false ;};return _addg ,true ;};return nil ,false ;};func _gdag (_dggf *_gbd .PdfObjectStream )(*PdfFunctionType0 ,error ){_aeeec :=&PdfFunctionType0 {};_aeeec ._efeac =_dggf ;_cadfa :=_dggf .PdfObjectDictionary ;_fggaa ,_accc :=_gbd .TraceToDirectObject (_cadfa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gbd .PdfObjectArray );
if !_accc {_db .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fggaa .Len ()< 0||_fggaa .Len ()%2!=0{_db .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_aeeec .NumInputs =_fggaa .Len ()/2;_bdbfa ,_ebee :=_fggaa .ToFloat64Array ();if _ebee !=nil {return nil ,_ebee ;};_aeeec .Domain =_bdbfa ;_fggaa ,_accc =_gbd .TraceToDirectObject (_cadfa .Get ("\u0052\u0061\u006eg\u0065")).(*_gbd .PdfObjectArray );if !_accc {_db .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fggaa .Len ()< 0||_fggaa .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_aeeec .NumOutputs =_fggaa .Len ()/2;_gedfb ,_ebee :=_fggaa .ToFloat64Array ();if _ebee !=nil {return nil ,_ebee ;};_aeeec .Range =_gedfb ;_fggaa ,_accc =_gbd .TraceToDirectObject (_cadfa .Get ("\u0053\u0069\u007a\u0065")).(*_gbd .PdfObjectArray );if !_accc {_db .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fgcd ,_ebee :=_fggaa .ToIntegerArray ();
if _ebee !=nil {return nil ,_ebee ;};if len (_fgcd )!=_aeeec .NumInputs {_db .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeeec .Size =_fgcd ;_gbfc ,_accc :=_gbd .TraceToDirectObject (_cadfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_gbd .PdfObjectInteger );
if !_accc {_db .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_gbfc !=1&&*_gbfc !=2&&*_gbfc !=4&&*_gbfc !=8&&*_gbfc !=12&&*_gbfc !=16&&*_gbfc !=24&&*_gbfc !=32{_db .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_gbfc );
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeeec .BitsPerSample =int (*_gbfc );_aeeec .Order =1;_dafcd ,_accc :=_gbd .TraceToDirectObject (_cadfa .Get ("\u004f\u0072\u0064e\u0072")).(*_gbd .PdfObjectInteger );
if _accc {if *_dafcd !=1&&*_dafcd !=3{_db .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dafcd );return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeeec .Order =int (*_dafcd );
};_fggaa ,_accc =_gbd .TraceToDirectObject (_cadfa .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gbd .PdfObjectArray );if _accc {_dgdd ,_caba :=_fggaa .ToFloat64Array ();if _caba !=nil {return nil ,_caba ;};_aeeec .Encode =_dgdd ;};_fggaa ,_accc =_gbd .TraceToDirectObject (_cadfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_gbd .PdfObjectArray );
if _accc {_ffaee ,_ebede :=_fggaa .ToFloat64Array ();if _ebede !=nil {return nil ,_ebede ;};_aeeec .Decode =_ffaee ;};_bdgfg ,_ebee :=_gbd .DecodeStream (_dggf );if _ebee !=nil {return nil ,_ebee ;};_aeeec ._facac =_bdgfg ;return _aeeec ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_gbd .PdfObjectArray ;ExtGState _gbd .PdfObject ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cbcff *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cbcff .Range };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cebb *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_caf :=NewPdfAnnotation ();_dag :=&PdfAnnotationRedact {};_dag .PdfAnnotation =_caf ;_dag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_caf .SetContext (_dag );return _dag ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_aafd :=PdfColorDeviceRGB {r ,g ,b };return &_aafd ;};func _acafd (_fbcbe *_gbd .PdfObjectDictionary ,_bddfg *fontCommon ,_bfade _dc .TextEncoder )(*pdfFontSimple ,error ){_egaec :=_cabd (_bddfg );
_egaec ._dgaa =_bfade ;if _bfade ==nil {_ceeg :=_fbcbe .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ceeg ==nil {_ceeg =_gbd .MakeInteger (0);};_egaec .FirstChar =_ceeg ;_bega ,_efgcf :=_gbd .GetIntVal (_ceeg );if !_efgcf {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ceeg );
return nil ,_gbd .ErrTypeError ;};_aecd :=_dc .CharCode (_bega );_ceeg =_fbcbe .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ceeg ==nil {_ceeg =_gbd .MakeInteger (255);};_egaec .LastChar =_ceeg ;_bega ,_efgcf =_gbd .GetIntVal (_ceeg );if !_efgcf {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ceeg );
return nil ,_gbd .ErrTypeError ;};_gbac :=_dc .CharCode (_bega );_egaec ._fgaa =make (map[_dc .CharCode ]float64 );_ceeg =_fbcbe .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ceeg !=nil {_egaec .Widths =_ceeg ;_bbbg ,_ffgg :=_gbd .GetArray (_ceeg );
if !_ffgg {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ceeg );return nil ,_gbd .ErrTypeError ;
};_egfa ,_dcefe :=_bbbg .ToFloat64Array ();if _dcefe !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dcefe ;};if len (_egfa )!=int (_gbac -_aecd +1){_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gbac -_aecd +1,len (_egfa ));
return nil ,_gbd .ErrRangeError ;};for _abgfc ,_fbff :=range _egfa {_egaec ._fgaa [_aecd +_dc .CharCode (_abgfc )]=_fbff ;};};};_egaec .Encoding =_gbd .TraceToDirectObject (_fbcbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _egaec ,nil ;
};func (_bda *PdfReader )newPdfActionURIFromDict (_fbee *_gbd .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fbee .Get ("\u0055\u0052\u0049"),IsMap :_fbee .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_gecgbf *PdfPageResources )SetXObjectByName (keyName _gbd .PdfObjectName ,stream *_gbd .PdfObjectStream )error {if _gecgbf .XObject ==nil {_gecgbf .XObject =_gbd .MakeDict ();};_gcfd :=_gbd .TraceToDirectObject (_gecgbf .XObject );_bcda ,_ddcaf :=_gcfd .(*_gbd .PdfObjectDictionary );
if !_ddcaf {_db .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_gecgbf .XObject ,_gcfd );return _ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bcda .Set (keyName ,stream );return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_acagc *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _gbd .PdfObject ;Name _gbd .PdfObject ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _gbd .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _gbd .PdfObject ;Contents _gbd .PdfObject ;
Rotate *int64 ;Group _gbd .PdfObject ;Thumb _gbd .PdfObject ;B _gbd .PdfObject ;Dur _gbd .PdfObject ;Trans _gbd .PdfObject ;AA _gbd .PdfObject ;Metadata _gbd .PdfObject ;PieceInfo _gbd .PdfObject ;StructParents _gbd .PdfObject ;ID _gbd .PdfObject ;PZ _gbd .PdfObject ;
SeparationInfo _gbd .PdfObject ;Tabs _gbd .PdfObject ;TemplateInstantiated _gbd .PdfObject ;PresSteps _gbd .PdfObject ;UserUnit _gbd .PdfObject ;VP _gbd .PdfObject ;Annots _gbd .PdfObject ;_gacee []*PdfAnnotation ;_abccg *_gbd .PdfObjectDictionary ;_fgbbe *_gbd .PdfIndirectObject ;
_baff *PdfReader ;};func _ggbbe (_bggc *_gbd .PdfIndirectObject ,_dgdgb *_gbd .PdfObjectDictionary )(*DSS ,error ){if _bggc ==nil {_bggc =_gbd .MakeIndirectObject (nil );};_bggc .PdfObject =_gbd .MakeDict ();_ggeed :=map[string ]*VRI {};if _ggfg ,_babbg :=_gbd .GetDict (_dgdgb .Get ("\u0056\u0052\u0049"));
_babbg {for _ ,_dgcag :=range _ggfg .Keys (){if _bdeg ,_cbbe :=_gbd .GetDict (_ggfg .Get (_dgcag ));_cbbe {_ggeed [_fc .ToUpper (_dgcag .String ())]=_cgff (_bdeg );};};};return &DSS {Certs :_cggad (_dgdgb .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_cggad (_dgdgb .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_cggad (_dgdgb .Get ("\u0043\u0052\u004c\u0073")),VRI :_ggeed ,_beaad :_bggc },nil ;
};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bafcc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bafcc .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_agdf :=NewPdfAnnotation ();_abg :=&PdfAnnotationMovie {};_abg .PdfAnnotation =_agdf ;_agdf .SetContext (_abg );return _abg ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_adgb :=PdfColorCalRGB {a ,b ,c };return &_adgb ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gdaa *PdfPage )error ;};func (_ggdd *PdfReader )newPdfAnnotationStampFromDict (_gabg *_gbd .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cef :=PdfAnnotationStamp {};_cffb ,_debd :=_ggdd .newPdfAnnotationMarkupFromDict (_gabg );
if _debd !=nil {return nil ,_debd ;};_cef .PdfAnnotationMarkup =_cffb ;_cef .Name =_gabg .Get ("\u004e\u0061\u006d\u0065");return &_cef ,nil ;};func (_egcc *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_ccdg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_adgef ,_cfgf :=color .(*PdfColorPattern );if !_cfgf {_db .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _adgef .Color ==nil {return color ,nil ;};if _ccdg .UnderlyingCS ==nil {return nil ,_ff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _ccdg .UnderlyingCS .ColorToRGB (_adgef .Color );
};

// ToPdfObject implements interface PdfModel.
func (_gacc *PdfAnnotationTrapNet )ToPdfObject ()_gbd .PdfObject {_gacc .PdfAnnotation .ToPdfObject ();_daga :=_gacc ._faa ;_daeb :=_daga .PdfObject .(*_gbd .PdfObjectDictionary );_daeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _daga ;};func _eccbc (_dcbeeb *_gbd .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ebffb :=PdfShadingType4 {};_bdbga :=_dcbeeb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bdbga ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cccfb ,_gdfgf :=_bdbga .(*_gbd .PdfObjectInteger );if !_gdfgf {_db .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdbga );
return nil ,_gbd .ErrTypeError ;};_ebffb .BitsPerCoordinate =_cccfb ;_bdbga =_dcbeeb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdbga ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cccfb ,_gdfgf =_bdbga .(*_gbd .PdfObjectInteger );if !_gdfgf {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdbga );
return nil ,_gbd .ErrTypeError ;};_ebffb .BitsPerComponent =_cccfb ;_bdbga =_dcbeeb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdbga ==nil {_db .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cccfb ,_gdfgf =_bdbga .(*_gbd .PdfObjectInteger );if !_gdfgf {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdbga );
return nil ,_gbd .ErrTypeError ;};_ebffb .BitsPerComponent =_cccfb ;_bdbga =_dcbeeb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdbga ==nil {_db .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bceab ,_gdfgf :=_bdbga .(*_gbd .PdfObjectArray );if !_gdfgf {_db .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdbga );
return nil ,_gbd .ErrTypeError ;};_ebffb .Decode =_bceab ;_bdbga =_dcbeeb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bdbga ==nil {_db .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ebffb .Function =[]PdfFunction {};if _fgcbg ,_edfdd :=_bdbga .(*_gbd .PdfObjectArray );_edfdd {for _ ,_afebff :=range _fgcbg .Elements (){_bbgga ,_ccabf :=_dbege (_afebff );if _ccabf !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccabf );
return nil ,_ccabf ;};_ebffb .Function =append (_ebffb .Function ,_bbgga );};}else {_dbcgc ,_agffd :=_dbege (_bdbga );if _agffd !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agffd );
return nil ,_agffd ;};_ebffb .Function =append (_ebffb .Function ,_dbcgc );};return &_ebffb ,nil ;};func _cgff (_gebga *_gbd .PdfObjectDictionary )*VRI {_dfeda ,_ :=_gbd .GetString (_gebga .Get ("\u0054\u0055"));_bgaec ,_ :=_gbd .GetString (_gebga .Get ("\u0054\u0053"));
return &VRI {Cert :_cggad (_gebga .Get ("\u0043\u0065\u0072\u0074")),OCSP :_cggad (_gebga .Get ("\u004f\u0043\u0053\u0050")),CRL :_cggad (_gebga .Get ("\u0043\u0052\u004c")),TU :_dfeda ,TS :_bgaec };};

// Encoder returns the font's text encoder.
func (_baag pdfFontType0 )Encoder ()_dc .TextEncoder {return _baag ._dfcd };

// IsTiling specifies if the pattern is a tiling pattern.
func (_dedb *PdfPattern )IsTiling ()bool {return _dedb .PatternType ==1};func (_dbd *PdfReader )newPdfActionSoundFromDict (_aeec *_gbd .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_aeec .Get ("\u0053\u006f\u0075n\u0064"),Volume :_aeec .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_aeec .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_aeec .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_aeec .Get ("\u004d\u0069\u0078")},nil ;
};func (_egac *Image )samplesAddPadding (_bcadg []uint32 )[]uint32 {_gggb :=_ed .BytesPerLine (int (_egac .Width ),int (_egac .BitsPerComponent ),_egac .ColorComponents )*(8/int (_egac .BitsPerComponent ));_bebg :=_gggb *int (_egac .Height );if len (_bcadg )==_bebg {return _bcadg ;
};_cccbd :=make ([]uint32 ,_bebg );_fccdf :=int (_egac .Width )*_egac .ColorComponents ;for _gfece :=0;_gfece < int (_egac .Height );_gfece ++{_dafdg :=_gfece *int (_egac .Width );_fbfff :=_gfece *_gggb ;for _eadf :=0;_eadf < _fccdf ;_eadf ++{_cccbd [_fbfff +_eadf ]=_bcadg [_dafdg +_eadf ];
};};return _cccbd ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bafdd DefaultImageHandler )Read (reader _acga .Reader )(*Image ,error ){_ddcbf ,_ ,_fbfaa :=_be .Decode (reader );if _fbfaa !=nil {_db .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_fbfaa );
return nil ,_fbfaa ;};return _bafdd .NewImageFromGoImage (_ddcbf );};func (_fcec *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _fcec ._dagg .GetCrypter ()!=nil &&!_fcec ._dagg .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_agfc :=_fcec ._dccge ;_eddd :=_agfc .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eddd ==nil {return nil ,nil ;};_db .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_gfde :=_gbd .ResolveReference (_eddd );
_db .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_gfde );if _adee :=_gbd .IsNullObject (_gfde );_adee {_db .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_fabdg ,_gefbc :=_gfde .(*_gbd .PdfIndirectObject );if !_gefbc {if _ ,_ggfbd :=_gbd .GetDict (_gfde );!_ggfbd {_db .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_db .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_fabdg =_gbd .MakeIndirectObject (_gfde );};_cfaa ,_gefbc :=_fabdg .PdfObject .(*_gbd .PdfObjectDictionary );if !_gefbc {return nil ,_ff .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_db .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_cfaa );_gfeebc ,_ ,_dbfc :=_fcec .buildOutlineTree (_fabdg ,nil ,nil ,nil );if _dbfc !=nil {return nil ,_dbfc ;};_db .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gfeebc );
return _gfeebc ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_afcf *PdfPattern )GetContainingPdfObject ()_gbd .PdfObject {return _afcf ._gaadc };

// GetNumComponents returns the number of color components (3 for RGB).
func (_gfea *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_gdeee *PdfAnnotationCircle )ToPdfObject ()_gbd .PdfObject {_gdeee .PdfAnnotation .ToPdfObject ();_addc :=_gdeee ._faa ;_agbe :=_addc .PdfObject .(*_gbd .PdfObjectDictionary );_gdeee .PdfAnnotationMarkup .appendToPdfDictionary (_agbe );_agbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_agbe .SetIfNotNil ("\u0042\u0053",_gdeee .BS );_agbe .SetIfNotNil ("\u0049\u0043",_gdeee .IC );_agbe .SetIfNotNil ("\u0042\u0045",_gdeee .BE );_agbe .SetIfNotNil ("\u0052\u0044",_gdeee .RD );return _addc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_edaf *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _edaf .Alternate ==nil {if _edaf .N ==1{_cbdag :=NewPdfColorspaceDeviceGray ();return _cbdag .ColorFromFloats (vals );}else if _edaf .N ==3{_defa :=NewPdfColorspaceDeviceRGB ();
return _defa .ColorFromFloats (vals );}else if _edaf .N ==4{_caea :=NewPdfColorspaceDeviceCMYK ();return _caea .ColorFromFloats (vals );}else {return nil ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _edaf .Alternate .ColorFromFloats (vals );};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_gbd .PdfObjectInteger ;BitsPerComponent *_gbd .PdfObjectInteger ;BitsPerFlag *_gbd .PdfObjectInteger ;Decode *_gbd .PdfObjectArray ;Function []PdfFunction ;};

// HasXObjectByName checks if has XObject resource by name.
func (_ecccg *PdfPage )HasXObjectByName (name _gbd .PdfObjectName )bool {_dgda ,_beacg :=_ecccg .Resources .XObject .(*_gbd .PdfObjectDictionary );if !_beacg {return false ;};if _bgdfb :=_dgda .Get (name );_bgdfb !=nil {return true ;};return false ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fbbe *PdfField )Flags ()FieldFlag {var _cbfae FieldFlag ;_gfedg ,_gad :=_fbbe .inherit (func (_cgad *PdfField )bool {if _cgad .Ff !=nil {_cbfae =FieldFlag (*_cgad .Ff );return true ;};return false ;});if _gad !=nil {_db .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gad );
};if !_gfedg {_db .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cbfae ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_cffg *OutlineItem )ToPdfObject ()_gbd .PdfObject {_cefc ,_ :=_cffg .ToPdfOutlineItem ();return _cefc .ToPdfObject ();};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcbac pdfFontSimple )GetRuneMetrics (r rune )(_fad .CharMetrics ,bool ){if _gcbac ._ecfeb !=nil {_fbgd ,_ffdd :=_gcbac ._ecfeb .Read (r );if _ffdd {return _fbgd ,true ;};};_eecfb :=_gcbac .Encoder ();if _eecfb ==nil {_db .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gcbac );
return _fad .CharMetrics {},false ;};_cdag ,_fdeb :=_eecfb .RuneToCharcode (r );if !_fdeb {if r !=' '{_db .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gcbac );
};return _fad .CharMetrics {},false ;};_ddedd ,_egddc :=_gcbac .GetCharMetrics (_cdag );return _ddedd ,_egddc ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_cfgbb *modelManager )GetPrimitiveFromModel (model PdfModel )_gbd .PdfObject {_bebfg ,_ffebd :=_cfgbb ._bggda [model ];if !_ffebd {return nil ;};return _bebfg ;};var _ pdfFont =(*pdfFontType0 )(nil );func _cdgg (_fgcg *_gbd .PdfObjectDictionary )bool {for _ ,_gbdag :=range _fgcg .Keys (){if _ ,_dfddb :=_dabc [_gbdag .String ()];
_dfddb {return true ;};};return false ;};func (_gbdgg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gbdgg .fontCommon };

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_fdgb :=NewPdfAnnotation ();_gaf :=&PdfAnnotationWatermark {};_gaf .PdfAnnotation =_fdgb ;_fdgb .SetContext (_gaf );return _gaf ;};

// Encoder returns the font's text encoder.
func (_egef pdfCIDFontType2 )Encoder ()_dc .TextEncoder {return _egef ._dcgcg };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_dbee *PdfFieldButton )SetType (btype ButtonType ){_ddaf :=uint32 (0);if _dbee .Ff !=nil {_ddaf =uint32 (*_dbee .Ff );};switch btype {case ButtonTypePush :_ddaf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_ddaf |=FieldFlagRadio .Mask ();
};_dbee .Ff =_gbd .MakeInteger (int64 (_ddaf ));};func (_afbad *PdfShading )getShadingDict ()(*_gbd .PdfObjectDictionary ,error ){_acabc :=_afbad ._baae ;if _acba ,_beebg :=_acabc .(*_gbd .PdfIndirectObject );_beebg {_aeab ,_gacg :=_acba .PdfObject .(*_gbd .PdfObjectDictionary );
if !_gacg {return nil ,_gbd .ErrTypeError ;};return _aeab ,nil ;}else if _ffcca ,_gaeeb :=_acabc .(*_gbd .PdfObjectStream );_gaeeb {return _ffcca .PdfObjectDictionary ,nil ;}else if _bdead ,_caeg :=_acabc .(*_gbd .PdfObjectDictionary );_caeg {return _bdead ,nil ;
}else {_db .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_gbd .ErrTypeError ;};};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_eacf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_baeab :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_gegeb ,_geaef :=_eacf .GetNumPages ();if _geaef !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geaef );
return nil ,_geaef ;};for _geedgc :=1;_geedgc <=_gegeb ;_geedgc ++{_cdgab ,_abgbe :=_eacf .GetPage (_geedgc );if _abgbe !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abgbe );return nil ,_abgbe ;};if opts .PageProcessCallback !=nil {_abgbe =opts .PageProcessCallback (_geedgc ,_cdgab );
if _abgbe !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abgbe );return nil ,_abgbe ;};}else if opts .PageCallback !=nil {opts .PageCallback (_geedgc ,_cdgab );};_abgbe =_baeab .AddPage (_cdgab );if _abgbe !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abgbe );
return nil ,_abgbe ;};};_baeab ._gefd =_eacf .PdfVersion ().Major ;_baeab ._afbg =_eacf .PdfVersion ().Minor ;if !opts .SkipInfo {_aedg ,_gdccb :=_eacf .GetPdfInfo ();if _gdccb !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdccb );
}else {_baeab ._edfba .PdfObject =_aedg .ToPdfObject ();};};if !opts .SkipAcroForm {_caeab :=_baeab .SetForms (_eacf .AcroForm );if _caeab !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_caeab );return nil ,_caeab ;};};if !opts .SkipOutlines {_baeab .AddOutlineTree (_eacf .GetOutlineTree ());
};if !opts .SkipOCProperties {_aefc ,_feaec :=_eacf .GetOCProperties ();if _feaec !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feaec );}else {_feaec =_baeab .SetOCProperties (_aefc );if _feaec !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feaec );
};};};if !opts .SkipPageLabels {_adbeb ,_ebcdc :=_eacf .GetPageLabels ();if _ebcdc !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebcdc );}else {_ebcdc =_baeab .SetPageLabels (_adbeb );if _ebcdc !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebcdc );
};};};if !opts .SkipNamedDests {_eecdc ,_bccfe :=_eacf .GetNamedDestinations ();if _bccfe !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bccfe );}else {_bccfe =_baeab .SetNamedDestinations (_eecdc );if _bccfe !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bccfe );
};};};if !opts .SkipNameDictionary {_babae ,_gdege :=_eacf .GetNameDictionary ();if _gdege !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdege );}else {_gdege =_baeab .SetNameDictionary (_babae );if _gdege !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdege );
};};};if !opts .SkipRotation &&_eacf .Rotate !=nil {if _gebf :=_baeab .SetRotation (*_eacf .Rotate );_gebf !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gebf );};};return &_baeab ,nil ;};func _caede (_baagb *PdfPage ){_bgbbd :=_ega .GetLicenseKey ();
if _bgbbd !=nil &&_bgbbd .IsLicensed (){return ;};_abadd :=_gbd .PdfObjectName ("\u0055\u0046\u0031");if !_baagb .Resources .HasFontByName (_abadd ){_baagb .Resources .SetFontByName (_abadd ,DefaultFont ().ToPdfObject ());};var _agfbeb []string ;_agfbeb =append (_agfbeb ,"\u0071");
_agfbeb =append (_agfbeb ,"\u0042\u0054");_agfbeb =append (_agfbeb ,_a .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_abadd .String ()));_agfbeb =append (_agfbeb ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_agfbeb =append (_agfbeb ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_aecb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_agfbeb =append (_agfbeb ,_a .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_aecb ));_agfbeb =append (_agfbeb ,"\u0045\u0054");_agfbeb =append (_agfbeb ,"\u0051");_fcbbb :=_fc .Join (_agfbeb ,"\u000a");_baagb .AddContentStreamByString (_fcbbb );_baagb .ToPdfObject ();
};type pdfSignDictionary struct{*_gbd .PdfObjectDictionary ;_adced *SignatureHandler ;_bgffc *PdfSignature ;_fdaeg int64 ;_gbfad int ;_gfgaf int ;_cbcbg int ;_bcef int ;};func (_dad *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cbec *_gbd .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_cfdf :=PdfAnnotationPrinterMark {};
_cfdf .MN =_cbec .Get ("\u004d\u004e");return &_cfdf ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_egaf ,_gbeea :=_fad .NewStdFontByName (HelveticaName );if !_gbeea {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_fdfa :=_aabdf (_egaf );return &PdfFont {_bbddd :&_fdfa };};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_afg :=NewPdfAnnotation ();_ceb :=&PdfAnnotationRichMedia {};_ceb .PdfAnnotation =_afg ;_afg .SetContext (_ceb );return _ceb ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_agdc *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _bd .Time )(PdfDate ,error ){_facbd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gefgc ,_ :=_bg .ParseInt (_facbd [1:3],10,32);_bcfdc ,_ :=_bg .ParseInt (_facbd [4:6],10,32);return PdfDate {_cbggb :int64 (timeObj .Year ()),_bcgdc :int64 (timeObj .Month ()),_dddf :int64 (timeObj .Day ()),_baec :int64 (timeObj .Hour ()),_becfe :int64 (timeObj .Minute ()),_edcee :int64 (timeObj .Second ()),_acecf :_facbd [0],_cdeag :_gefgc ,_ebaed :_bcfdc },nil ;
};

// HasExtGState checks if ExtGState name is available.
func (_eafgf *PdfPage )HasExtGState (name _gbd .PdfObjectName )bool {if _eafgf .Resources ==nil {return false ;};if _eafgf .Resources .ExtGState ==nil {return false ;};_facec ,_dccbf :=_gbd .TraceToDirectObject (_eafgf .Resources .ExtGState ).(*_gbd .PdfObjectDictionary );
if !_dccbf {_db .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gbd .TraceToDirectObject (_eafgf .Resources .ExtGState ));
return false ;};_fdcgf :=_facec .Get (name );_bbfbb :=_fdcgf !=nil ;return _bbfbb ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _gbd .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _beca *_gbd .PdfIndirectObject ;var _bdgf *_gbd .PdfObjectName ;var _bag *_gbd .PdfObjectArray ;if _gedd ,_efcfg :=obj .(*_gbd .PdfIndirectObject );
_efcfg {_beca =_gedd ;};obj =_gbd .TraceToDirectObject (obj );switch _fgfd :=obj .(type ){case *_gbd .PdfObjectArray :_bag =_fgfd ;case *_gbd .PdfObjectName :_bdgf =_fgfd ;};if _bdgf !=nil {switch *_bdgf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_db .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bdgf );return nil ,_ddee ;};};if _bag !=nil &&_bag .Len ()> 0{var _ebac _gbd .PdfObject =_beca ;
if _beca ==nil {_ebac =_bag ;};if _aabgc ,_fefg :=_gbd .GetName (_bag .Get (0));_fefg {switch _aabgc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bag .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bag .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bag .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ddeda (_ebac );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _acfc (_ebac );
case "\u004c\u0061\u0062":return _deaa (_ebac );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cbab (_ebac );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _gfaf (_ebac );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eeeg (_ebac );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _gegc (_ebac );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _gded (_ebac );default:_db .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_aabgc );
};};};_db .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func (_caab *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// ToPdfObject implements interface PdfModel.
func (_fe *PdfActionSound )ToPdfObject ()_gbd .PdfObject {_fe .PdfAction .ToPdfObject ();_ae :=_fe ._ef ;_fff :=_ae .PdfObject .(*_gbd .PdfObjectDictionary );_fff .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeSound )));_fff .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fe .Sound );
_fff .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fe .Volume );_fff .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fe .Synchronous );_fff .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fe .Repeat );_fff .SetIfNotNil ("\u004d\u0069\u0078",_fe .Mix );
return _ae ;};func (_cec *PdfReader )newPdfActionGotoEFromDict (_ecef *_gbd .PdfObjectDictionary )(*PdfActionGoToE ,error ){_eeb ,_cgg :=_dae (_ecef .Get ("\u0046"));if _cgg !=nil {return nil ,_cgg ;};return &PdfActionGoToE {D :_ecef .Get ("\u0044"),NewWindow :_ecef .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ecef .Get ("\u0054"),F :_eeb },nil ;
};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fcbae *PdfFontDescriptor )ToPdfObject ()_gbd .PdfObject {_gbaee :=_gbd .MakeDict ();if _fcbae ._cgccc ==nil {_fcbae ._cgccc =&_gbd .PdfIndirectObject {};};_fcbae ._cgccc .PdfObject =_gbaee ;_gbaee .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _fcbae .FontName !=nil {_gbaee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fcbae .FontName );};if _fcbae .FontFamily !=nil {_gbaee .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fcbae .FontFamily );};if _fcbae .FontStretch !=nil {_gbaee .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fcbae .FontStretch );
};if _fcbae .FontWeight !=nil {_gbaee .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fcbae .FontWeight );};if _fcbae .Flags !=nil {_gbaee .Set ("\u0046\u006c\u0061g\u0073",_fcbae .Flags );};if _fcbae .FontBBox !=nil {_gbaee .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fcbae .FontBBox );
};if _fcbae .ItalicAngle !=nil {_gbaee .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fcbae .ItalicAngle );};if _fcbae .Ascent !=nil {_gbaee .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fcbae .Ascent );};if _fcbae .Descent !=nil {_gbaee .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fcbae .Descent );
};if _fcbae .Leading !=nil {_gbaee .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fcbae .Leading );};if _fcbae .CapHeight !=nil {_gbaee .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fcbae .CapHeight );};if _fcbae .XHeight !=nil {_gbaee .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fcbae .XHeight );
};if _fcbae .StemV !=nil {_gbaee .Set ("\u0053\u0074\u0065m\u0056",_fcbae .StemV );};if _fcbae .StemH !=nil {_gbaee .Set ("\u0053\u0074\u0065m\u0048",_fcbae .StemH );};if _fcbae .AvgWidth !=nil {_gbaee .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fcbae .AvgWidth );
};if _fcbae .MaxWidth !=nil {_gbaee .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fcbae .MaxWidth );};if _fcbae .MissingWidth !=nil {_gbaee .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fcbae .MissingWidth );};
if _fcbae .FontFile !=nil {_gbaee .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fcbae .FontFile );};if _fcbae .FontFile2 !=nil {_gbaee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fcbae .FontFile2 );};if _fcbae .FontFile3 !=nil {_gbaee .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fcbae .FontFile3 );
};if _fcbae .CharSet !=nil {_gbaee .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fcbae .CharSet );};if _fcbae .Style !=nil {_gbaee .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fcbae .FontName );};if _fcbae .Lang !=nil {_gbaee .Set ("\u004c\u0061\u006e\u0067",_fcbae .Lang );
};if _fcbae .FD !=nil {_gbaee .Set ("\u0046\u0044",_fcbae .FD );};if _fcbae .CIDSet !=nil {_gbaee .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fcbae .CIDSet );};return _fcbae ._cgccc ;};

// SetContext sets the sub annotation (context).
func (_fafc *PdfAnnotation )SetContext (ctx PdfModel ){_fafc ._dbeb =ctx };func (_ffefc *PdfWriter )addObjects (_fcacf _gbd .PdfObject )error {_db .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _babedb ,_dbbgg :=_fcacf .(*_gbd .PdfIndirectObject );
_dbbgg {_db .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_db .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fcacf ,_babedb );_db .Log .Trace ("\u002d\u0020\u0025\u0073",_babedb .PdfObject );if _ffefc .addObject (_babedb ){_fbfffc :=_ffefc .addObjects (_babedb .PdfObject );
if _fbfffc !=nil {return _fbfffc ;};};return nil ;};if _cbcgd ,_dcbcbb :=_fcacf .(*_gbd .PdfObjectStream );_dcbcbb {_db .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_db .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fcacf ,_fcacf );if _ffefc .addObject (_cbcgd ){_bggeb :=_ffefc .addObjects (_cbcgd .PdfObjectDictionary );
if _bggeb !=nil {return _bggeb ;};};return nil ;};if _eebaf ,_cbbf :=_fcacf .(*_gbd .PdfObjectDictionary );_cbbf {_db .Log .Trace ("\u0044\u0069\u0063\u0074");_db .Log .Trace ("\u002d\u0020\u0025\u0073",_fcacf );for _ ,_deadd :=range _eebaf .Keys (){_deccc :=_eebaf .Get (_deadd );
if _gdfa ,_geacc :=_deccc .(*_gbd .PdfObjectReference );_geacc {_deccc =_gdfa .Resolve ();_eebaf .Set (_deadd ,_deccc );};if _deadd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _edbf :=_ffefc .addObjects (_deccc );_edbf !=nil {return _edbf ;};}else {if _ ,_eacaf :=_deccc .(*_gbd .PdfObjectNull );
_eacaf {continue ;};if _efcff :=_ffefc .hasObject (_deccc );!_efcff {_db .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_deccc ,_deccc ,_deccc );
_ffefc ._bgedca [_deccc ]=append (_ffefc ._bgedca [_deccc ],_eebaf );};};};return nil ;};if _eefaf ,_addca :=_fcacf .(*_gbd .PdfObjectArray );_addca {_db .Log .Trace ("\u0041\u0072\u0072a\u0079");_db .Log .Trace ("\u002d\u0020\u0025\u0073",_fcacf );if _eefaf ==nil {return _ff .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fdaae ,_dagab :=range _eefaf .Elements (){if _bcfgd ,_eafda :=_dagab .(*_gbd .PdfObjectReference );_eafda {_dagab =_bcfgd .Resolve ();_eefaf .Set (_fdaae ,_dagab );};if _gcged :=_ffefc .addObjects (_dagab );_gcged !=nil {return _gcged ;};};return nil ;
};if _ ,_eecda :=_fcacf .(*_gbd .PdfObjectReference );_eecda {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fcacf );
return _ff .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bbgge *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bbgge ._gdgf ==nil {_bbgge ._gdgf =_ba .NewPSExecutor (_bbgge .Program );};var _bgfg []_ba .PSObject ;for _ ,_fbga :=range xVec {_bgfg =append (_bgfg ,_ba .MakeReal (_fbga ));
};_gbcfe ,_aeeef :=_bbgge ._gdgf .Execute (_bgfg );if _aeeef !=nil {return nil ,_aeeef ;};_cabc ,_aeeef :=_ba .PSObjectArrayToFloat64Array (_gbcfe );if _aeeef !=nil {return nil ,_aeeef ;};return _cabc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_beg *PdfActionURI )ToPdfObject ()_gbd .PdfObject {_beg .PdfAction .ToPdfObject ();_ffb :=_beg ._ef ;_fd :=_ffb .PdfObject .(*_gbd .PdfObjectDictionary );_fd .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeURI )));_fd .SetIfNotNil ("\u0055\u0052\u0049",_beg .URI );
_fd .SetIfNotNil ("\u0049\u0073\u004da\u0070",_beg .IsMap );return _ffb ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dcgee *PdfOutlineItem )GetContainingPdfObject ()_gbd .PdfObject {return _dcgee ._baea };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_fafca []byte ;_dadd []float64 ;};

// GetCerts returns the signature certificate chain.
func (_dbgfdf *PdfSignature )GetCerts ()([]*_ad .Certificate ,error ){var _bffaf []func ()([]*_ad .Certificate ,error );switch _afda ,_ :=_gbd .GetNameVal (_dbgfdf .SubFilter );_afda {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bffaf =append (_bffaf ,_dbgfdf .extractChainFromPKCS7 ,_dbgfdf .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bffaf =append (_bffaf ,_dbgfdf .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bffaf =append (_bffaf ,_dbgfdf .extractChainFromPKCS7 );
default:return nil ,_a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_afda );};for _ ,_fddcd :=range _bffaf {_dfeab ,_abgfg :=_fddcd ();if _abgfg !=nil {return nil ,_abgfg ;
};if len (_dfeab )> 0{return _dfeab ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_bcc *PdfReader )newPdfAnnotationCaretFromDict (_gcgfc *_gbd .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fefa :=PdfAnnotationCaret {};_ggae ,_bdc :=_bcc .newPdfAnnotationMarkupFromDict (_gcgfc );
if _bdc !=nil {return nil ,_bdc ;};_fefa .PdfAnnotationMarkup =_ggae ;_fefa .RD =_gcgfc .Get ("\u0052\u0044");_fefa .Sy =_gcgfc .Get ("\u0053\u0079");return &_fefa ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cafag *PdfReader )IsEncrypted ()(bool ,error ){return _cafag ._dagg .IsEncrypted ()};func _cagfg (_agfef *_ed .ImageBase )(_ebgc Image ){_ebgc .Width =int64 (_agfef .Width );_ebgc .Height =int64 (_agfef .Height );_ebgc .BitsPerComponent =int64 (_agfef .BitsPerComponent );
_ebgc .ColorComponents =_agfef .ColorComponents ;_ebgc .Data =_agfef .Data ;_ebgc ._dadd =_agfef .Decode ;_ebgc ._fafca =_agfef .Alpha ;return _ebgc ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_facac []byte ;_gace []uint32 ;_efeac *_gbd .PdfObjectStream ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fegg *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bbaeb *PdfShading )GetContext ()PdfModel {return _bbaeb ._fdcab };func (_ddbed Image )getBase ()_ed .ImageBase {return _ed .NewImageBase (int (_ddbed .Width ),int (_ddbed .Height ),int (_ddbed .BitsPerComponent ),_ddbed .ColorComponents ,_ddbed .Data ,_ddbed ._fafca ,_ddbed ._dadd );
};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_bagdg *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_ccebc :=&PdfColorPattern {};_dafg ,_bbad :=objects [len (objects )-1].(*_gbd .PdfObjectName );if !_bbad {_db .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_ccebc .PatternName =*_dafg ;if len (objects )> 1{_egdg :=objects [0:len (objects )-1];if _bagdg .UnderlyingCS ==nil {_db .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cbgb ,_fadeg :=_bagdg .UnderlyingCS .ColorFromPdfObjects (_egdg );if _fadeg !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_fadeg );
return nil ,_fadeg ;};_ccebc .Color =_cbgb ;};return _ccebc ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bbcb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbcb .Base ==nil {return nil ,_ff .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bbcb .Base .ColorToRGB (color );};func _gdaad (_adfeb *_gbd .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fdgbg :=PdfShadingType6 {};_fffbd :=_adfeb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fffbd ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbgea ,_fffa :=_fffbd .(*_gbd .PdfObjectInteger );if !_fffa {_db .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fffbd );
return nil ,_gbd .ErrTypeError ;};_fdgbg .BitsPerCoordinate =_cbgea ;_fffbd =_adfeb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fffbd ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cbgea ,_fffa =_fffbd .(*_gbd .PdfObjectInteger );if !_fffa {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fffbd );
return nil ,_gbd .ErrTypeError ;};_fdgbg .BitsPerComponent =_cbgea ;_fffbd =_adfeb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fffbd ==nil {_db .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbgea ,_fffa =_fffbd .(*_gbd .PdfObjectInteger );if !_fffa {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fffbd );
return nil ,_gbd .ErrTypeError ;};_fdgbg .BitsPerComponent =_cbgea ;_fffbd =_adfeb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fffbd ==nil {_db .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgcfg ,_fffa :=_fffbd .(*_gbd .PdfObjectArray );if !_fffa {_db .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fffbd );
return nil ,_gbd .ErrTypeError ;};_fdgbg .Decode =_fgcfg ;if _bdcab :=_adfeb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bdcab !=nil {_fdgbg .Function =[]PdfFunction {};if _bbcgd ,_eaafcb :=_bdcab .(*_gbd .PdfObjectArray );_eaafcb {for _ ,_bfacc :=range _bbcgd .Elements (){_cebfd ,_gbabg :=_dbege (_bfacc );
if _gbabg !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbabg );return nil ,_gbabg ;};_fdgbg .Function =append (_fdgbg .Function ,_cebfd );
};}else {_fdcbeb ,_bfccf :=_dbege (_bdcab );if _bfccf !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfccf );return nil ,_bfccf ;
};_fdgbg .Function =append (_fdgbg .Function ,_fdcbeb );};};return &_fdgbg ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_gega *PdfFieldChoice )ToPdfObject ()_gbd .PdfObject {_gega .PdfField .ToPdfObject ();_feeg :=_gega ._beee ;_aec :=_feeg .PdfObject .(*_gbd .PdfObjectDictionary );_aec .Set ("\u0046\u0054",_gbd .MakeName ("\u0043\u0068"));if _gega .Opt !=nil {_aec .Set ("\u004f\u0070\u0074",_gega .Opt );
};if _gega .TI !=nil {_aec .Set ("\u0054\u0049",_gega .TI );};if _gega .I !=nil {_aec .Set ("\u0049",_gega .I );};return _feeg ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_efea *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _efea .baseFields ()._ggff !=nil {return _efea .baseFields ()._ggff ;};if _fdgg :=_efea ._bbddd .getFontDescriptor ();_fdgg !=nil {return _fdgg ;};_db .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_efea );
return nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _gbd .PdfObject ;NewWindow _gbd .PdfObject ;};

// ToInteger convert to an integer format.
func (_ccdd *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_eeaf :=_ga .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_eeaf *_ccdd .C ()),uint32 (_eeaf *_ccdd .M ()),uint32 (_eeaf *_ccdd .Y ()),uint32 (_eeaf *_ccdd .K ())};};

// ToPdfObject implements interface PdfModel.
func (_bfgc *PdfActionResetForm )ToPdfObject ()_gbd .PdfObject {_bfgc .PdfAction .ToPdfObject ();_fcf :=_bfgc ._ef ;_eca :=_fcf .PdfObject .(*_gbd .PdfObjectDictionary );_eca .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeResetForm )));_eca .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bfgc .Fields );
_eca .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bfgc .Flags );return _fcf ;};

// ToPdfObject implements interface PdfModel.
func (_dbdc *PdfAnnotationStamp )ToPdfObject ()_gbd .PdfObject {_dbdc .PdfAnnotation .ToPdfObject ();_gcec :=_dbdc ._faa ;_aggb :=_gcec .PdfObject .(*_gbd .PdfObjectDictionary );_dbdc .PdfAnnotationMarkup .appendToPdfDictionary (_aggb );_aggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0053\u0074\u0061m\u0070"));
_aggb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dbdc .Name );return _gcec ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_dfcf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abgde ,_fgag :=_gbd .GetNumbersAsFloat (objects );
if _fgag !=nil {return nil ,_fgag ;};return _dfcf .ColorFromFloats (_abgde );};

// ReplacePage replaces the original page to a new page.
func (_ebbe *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ddec :=pageNum -1;for _bbfbd :=range _ebbe ._ccbcf {if _bbfbd ==_ddec {_ebbg :=page .Duplicate ();_caede (_ebbg );_ebbe ._ccbcf [_bbfbd ]=_ebbg ;};};};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gfcb *PdfFont )CharcodesToStrings (charcodes []_dc .CharCode )([]string ,int ,int ){_cdff :=_gfcb .baseFields ();_daab :=make ([]string ,0,len (charcodes ));_fead :=0;_bfcff :=_gfcb .Encoder ();if _bfcff !=nil {switch _agbc :=_bfcff .(type ){case _dc .SimpleEncoder :_eddb :=_agbc .BaseName ();
if _ ,_begf :=_afab [_eddb ];_begf {for _ ,_gdfcc :=range charcodes {if _bcdga ,_abcf :=_bfcff .CharcodeToRune (_gdfcc );_abcf {_daab =append (_daab ,string (_bcdga ));}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gdfcc ,charcodes ,_cdff .isCIDFont (),_gfcb ,_bfcff );
_fead ++;_daab =append (_daab ,_bgg .MissingCodeString );};};return _daab ,len (_daab ),_fead ;};};};for _ ,_aecg :=range charcodes {if _cdff ._agcgb !=nil {if _aggda ,_adgeb :=_cdff ._agcgb .CharcodeToUnicode (_bgg .CharCode (_aecg ));_adgeb {_daab =append (_daab ,_aggda );
continue ;};};if _bfcff !=nil {if _babbf ,_feee :=_bfcff .CharcodeToRune (_aecg );_feee {_daab =append (_daab ,string (_babbf ));continue ;};};_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_aecg ,charcodes ,_cdff .isCIDFont (),_gfcb ,_bfcff );
_fead ++;_daab =append (_daab ,_bgg .MissingCodeString );};if _fead !=0{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fead ,_gfcb );
};return _daab ,len (_daab ),_fead ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ebg :=NewPdfAction ();_ee :=&PdfActionGoTo {};_ee .PdfAction =_ebg ;_ebg .SetContext (_ee );return _ee ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_eeea *PdfAppender )UpdatePage (page *PdfPage ){_eeea .updateObjectsDeep (page .ToPdfObject (),nil )};func _ecagf (_ccfde string )map[string ]string {_fbef :=_eeece .Split (_ccfde ,-1);_caaeb :=map[string ]string {};for _ ,_daebc :=range _fbef {_fegec :=_cgaa .FindStringSubmatch (_daebc );
if _fegec ==nil {continue ;};_fbdc ,_ecgfe :=_fegec [1],_fegec [2];_caaeb [_fbdc ]=_ecgfe ;};return _caaeb ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gbd .PdfObject ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_gbd .PdfObjectName ;Colorants _gbd .PdfObject ;Process _gbd .PdfObject ;MixingHints _gbd .PdfObject ;_fcafb *_gbd .PdfIndirectObject ;};func (_fdee *PdfAppender )updateObjectsDeep (_cgb _gbd .PdfObject ,_gbdgc map[_gbd .PdfObject ]struct{}){if _gbdgc ==nil {_gbdgc =map[_gbd .PdfObject ]struct{}{};
};if _ ,_ceaf :=_gbdgc [_cgb ];_ceaf ||_cgb ==nil {return ;};_gbdgc [_cgb ]=struct{}{};_feab :=_gbd .ResolveReferencesDeep (_cgb ,_fdee ._cdgd );if _feab !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_feab );};switch _ebec :=_cgb .(type ){case *_gbd .PdfIndirectObject :switch {case _ebec .GetParser ()==_fdee ._fafd ._dagg :return ;
case _ebec .GetParser ()==_fdee .Reader ._dagg :_fdec ,_ :=_fdee ._fafd .GetIndirectObjectByNumber (int (_ebec .ObjectNumber ));_dagbc ,_eafa :=_fdec .(*_gbd .PdfIndirectObject );if _eafa &&_dagbc !=nil {if _dagbc .PdfObject !=_ebec .PdfObject &&_dagbc .PdfObject .WriteString ()!=_ebec .PdfObject .WriteString (){_fdee .addNewObject (_cgb );
_fdee ._fddd [_cgb ]=_ebec .ObjectNumber ;};};default:_fdee .addNewObject (_cgb );};_fdee .updateObjectsDeep (_ebec .PdfObject ,_gbdgc );case *_gbd .PdfObjectArray :for _ ,_dbeg :=range _ebec .Elements (){_fdee .updateObjectsDeep (_dbeg ,_gbdgc );};case *_gbd .PdfObjectDictionary :for _ ,_abaa :=range _ebec .Keys (){_fdee .updateObjectsDeep (_ebec .Get (_abaa ),_gbdgc );
};case *_gbd .PdfObjectStreams :if _ebec .GetParser ()!=_fdee ._fafd ._dagg {for _ ,_acfd :=range _ebec .Elements (){_fdee .updateObjectsDeep (_acfd ,_gbdgc );};};case *_gbd .PdfObjectStream :switch {case _ebec .GetParser ()==_fdee ._fafd ._dagg :return ;
case _ebec .GetParser ()==_fdee .Reader ._dagg :if _ggf ,_beb :=_fdee ._fafd ._dagg .LookupByReference (_ebec .PdfObjectReference );_beb ==nil {var _cagb bool ;if _eaab ,_fac :=_gbd .GetStream (_ggf );_fac &&_cd .Equal (_eaab .Stream ,_ebec .Stream ){_cagb =true ;
};if _dbbf ,_cedda :=_gbd .GetDict (_ggf );_cagb &&_cedda {_cagb =_dbbf .WriteString ()==_ebec .PdfObjectDictionary .WriteString ();};if _cagb {return ;};};if _ebec .ObjectNumber !=0{_fdee ._fddd [_cgb ]=_ebec .ObjectNumber ;};default:if _ ,_cbgf :=_fdee ._gbcd [_cgb ];
!_cbgf {_fdee .addNewObject (_cgb );};};_fdee .updateObjectsDeep (_ebec .PdfObjectDictionary ,_gbdgc );};};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_afffc *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_gbd .StreamEncoder ,error ){_dagcf ,_fbcca :=_afffc ._gaadc .(*_gbd .PdfObjectStream );if !_fbcca {_db .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afffc ._gaadc );
return nil ,nil ,_gbd .ErrTypeError ;};_gggdb ,_ggbgf :=_gbd .DecodeStream (_dagcf );if _ggbgf !=nil {_db .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ggbgf );
return nil ,nil ,_ggbgf ;};_dagaf ,_ggbgf :=_gbd .NewEncoderFromStream (_dagcf );if _ggbgf !=nil {_db .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ggbgf );
return nil ,nil ,_ggbgf ;};return _gggdb ,_dagaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agg *PdfActionJavaScript )ToPdfObject ()_gbd .PdfObject {_agg .PdfAction .ToPdfObject ();_dcf :=_agg ._ef ;_dbef :=_dcf .PdfObject .(*_gbd .PdfObjectDictionary );_dbef .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeJavaScript )));_dbef .SetIfNotNil ("\u004a\u0053",_agg .JS );
return _dcf ;};func (_ecf *PdfReader )newPdfActionRenditionFromDict (_eef *_gbd .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_eef .Get ("\u0052"),AN :_eef .Get ("\u0041\u004e"),OP :_eef .Get ("\u004f\u0050"),JS :_eef .Get ("\u004a\u0053")},nil ;
};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_ccbcg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_dgdbgc *PdfWriter )copyObjects (){_ddbeac :=make (map[_gbd .PdfObject ]_gbd .PdfObject );_eddde :=make ([]_gbd .PdfObject ,0,len (_dgdbgc ._fbafa ));_fefgf :=make (map[_gbd .PdfObject ]struct{},len (_dgdbgc ._fbafa ));
_edag :=make (map[_gbd .PdfObject ]struct{});for _ ,_cbfc :=range _dgdbgc ._fbafa {_aegfa :=_dgdbgc .copyObject (_cbfc ,_ddbeac ,_edag ,false );if _ ,_gdaf :=_edag [_cbfc ];_gdaf {continue ;};_eddde =append (_eddde ,_aegfa );_fefgf [_aegfa ]=struct{}{};
};_dgdbgc ._fbafa =_eddde ;_dgdbgc ._bdgga =_fefgf ;_dgdbgc ._edfba =_dgdbgc .copyObject (_dgdbgc ._edfba ,_ddbeac ,nil ,false ).(*_gbd .PdfIndirectObject );_dgdbgc ._bdgff =_dgdbgc .copyObject (_dgdbgc ._bdgff ,_ddbeac ,nil ,false ).(*_gbd .PdfIndirectObject );
if _dgdbgc ._fffff !=nil {_dgdbgc ._fffff =_dgdbgc .copyObject (_dgdbgc ._fffff ,_ddbeac ,nil ,false ).(*_gbd .PdfIndirectObject );};if _dgdbgc ._bgdef {_eacad :=make (map[_gbd .PdfObject ]int64 );for _gcfb ,_ebbeb :=range _dgdbgc ._gadef {if _aaeceb ,_dfddd :=_ddbeac [_gcfb ];
_dfddd {_eacad [_aaeceb ]=_ebbeb ;}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_dgdbgc ._gadef =_eacad ;};};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fdcgb *OutlineItem )Insert (index uint ,item *OutlineItem ){_bdbea :=uint (len (_fdcgb .Entries ));if index > _bdbea {index =_bdbea ;};_fdcgb .Entries =append (_fdcgb .Entries [:index ],append ([]*OutlineItem {item },_fdcgb .Entries [index :]...)...);
};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _gbd .PdfObject ;_edafc []byte ;_geeg *_gbd .PdfIndirectObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _gbd .PdfObject ;Popup *PdfAnnotationPopup ;CA _gbd .PdfObject ;RC _gbd .PdfObject ;CreationDate _gbd .PdfObject ;IRT _gbd .PdfObject ;Subj _gbd .PdfObject ;RT _gbd .PdfObject ;IT _gbd .PdfObject ;ExData _gbd .PdfObject ;
};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bebfa *PdfWriter )SetPageLabels (pageLabels _gbd .PdfObject )error {if pageLabels ==nil {return nil ;};_db .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bebfa ._dbecd .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bebfa .addObjects (pageLabels );};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dgdcfg *PdfPageResources )HasFontByName (keyName _gbd .PdfObjectName )bool {_ ,_ggbeg :=_dgdcfg .GetFontByName (keyName );return _ggbeg ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_gage *PdfColorspaceCalGray )ToPdfObject ()_gbd .PdfObject {_cedee :=&_gbd .PdfObjectArray {};_cedee .Append (_gbd .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_dbga :=_gbd .MakeDict ();if _gage .WhitePoint !=nil {_dbga .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gbd .MakeArray (_gbd .MakeFloat (_gage .WhitePoint [0]),_gbd .MakeFloat (_gage .WhitePoint [1]),_gbd .MakeFloat (_gage .WhitePoint [2])));
}else {_db .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gage .BlackPoint !=nil {_dbga .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gbd .MakeArray (_gbd .MakeFloat (_gage .BlackPoint [0]),_gbd .MakeFloat (_gage .BlackPoint [1]),_gbd .MakeFloat (_gage .BlackPoint [2])));
};_dbga .Set ("\u0047\u0061\u006dm\u0061",_gbd .MakeFloat (_gage .Gamma ));_cedee .Append (_dbga );if _gage ._fbcg !=nil {_gage ._fbcg .PdfObject =_cedee ;return _gage ._fbcg ;};return _cedee ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_eebcgfe *_gbd .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_gbd .PdfObjectName ;Filter *_gbd .PdfObjectName ;SubFilter *_gbd .PdfObjectName ;Contents *_gbd .PdfObjectString ;Cert _gbd .PdfObject ;ByteRange *_gbd .PdfObjectArray ;Reference *_gbd .PdfObjectArray ;Changes *_gbd .PdfObjectArray ;Name *_gbd .PdfObjectString ;
M *_gbd .PdfObjectString ;Location *_gbd .PdfObjectString ;Reason *_gbd .PdfObjectString ;ContactInfo *_gbd .PdfObjectString ;R *_gbd .PdfObjectInteger ;V *_gbd .PdfObjectInteger ;PropBuild *_gbd .PdfObjectDictionary ;PropAuthTime *_gbd .PdfObjectInteger ;
PropAuthType *_gbd .PdfObjectName ;};var _becbe =_acg .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");


// String returns a string describing the font descriptor.
func (_bebd *PdfFontDescriptor )String ()string {var _eegbg []string ;if _bebd .FontName !=nil {_eegbg =append (_eegbg ,_bebd .FontName .String ());};if _bebd .FontFamily !=nil {_eegbg =append (_eegbg ,_bebd .FontFamily .String ());};if _bebd .fontFile !=nil {_eegbg =append (_eegbg ,_bebd .fontFile .String ());
};if _bebd ._fegf !=nil {_eegbg =append (_eegbg ,_bebd ._fegf .String ());};_eegbg =append (_eegbg ,_a .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bebd .FontFile3 !=nil ));return _a .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fc .Join (_eegbg ,"\u002c\u0020"));
};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_bdab *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_gbd .PdfObjectArray ;Domain *_gbd .PdfObjectArray ;Function []PdfFunction ;Extend *_gbd .PdfObjectArray ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgbb *PdfShadingType1 )ToPdfObject ()_gbd .PdfObject {_cgbb .PdfShading .ToPdfObject ();_fbfad ,_ecda :=_cgbb .getShadingDict ();if _ecda !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgbb .Domain !=nil {_fbfad .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgbb .Domain );};if _cgbb .Matrix !=nil {_fbfad .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cgbb .Matrix );};if _cgbb .Function !=nil {if len (_cgbb .Function )==1{_fbfad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgbb .Function [0].ToPdfObject ());
}else {_bffec :=_gbd .MakeArray ();for _ ,_afcb :=range _cgbb .Function {_bffec .Append (_afcb .ToPdfObject ());};_fbfad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bffec );};};return _cgbb ._baae ;};func (_adag *LTV )buildCertChain (_faabc ,_edacd []*_ad .Certificate )([]*_ad .Certificate ,map[string ]*_ad .Certificate ,error ){_aaca :=map[string ]*_ad .Certificate {};
for _ ,_ecdb :=range _faabc {_aaca [_ecdb .Subject .CommonName ]=_ecdb ;};_cbdba :=_faabc ;for _ ,_agee :=range _edacd {_deeee :=_agee .Subject .CommonName ;if _ ,_ceeca :=_aaca [_deeee ];_ceeca {continue ;};_aaca [_deeee ]=_agee ;_cbdba =append (_cbdba ,_agee );
};if len (_cbdba )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ceecae error ;for _aeaeg :=_cbdba [0];_aeaeg !=nil &&!_adag .CertClient .IsCA (_aeaeg );{_gcef ,_dgged :=_aaca [_aeaeg .Issuer .CommonName ];if !_dgged {if _gcef ,_ceecae =_adag .CertClient .GetIssuer (_aeaeg );
_ceecae !=nil {_db .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ceecae );
break ;};_aaca [_aeaeg .Issuer .CommonName ]=_gcef ;_cbdba =append (_cbdba ,_gcef );};_aeaeg =_gcef ;};return _cbdba ,_aaca ,nil ;};func (_baac *PdfReader )newPdfFieldSignatureFromDict (_abgc *_gbd .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cdggg :=&PdfFieldSignature {};
_fcab ,_agga :=_gbd .GetIndirect (_abgc .Get ("\u0056"));if _agga {var _aaafe error ;_cdggg .V ,_aaafe =_baac .newPdfSignatureFromIndirect (_fcab );if _aaafe !=nil {return nil ,_aaafe ;};};_cdggg .Lock ,_ =_gbd .GetIndirect (_abgc .Get ("\u004c\u006f\u0063\u006b"));
_cdggg .SV ,_ =_gbd .GetIndirect (_abgc .Get ("\u0053\u0056"));return _cdggg ,nil ;};func _dfff (_ceecd *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_ceecd }};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_dggb :=&XObjectImage {};_gfdeb :=&_gbd .PdfObjectStream {};_gfdeb .PdfObjectDictionary =_gbd .MakeDict ();_dggb ._dcaea =_gfdeb ;return _dggb ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_face *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ff .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_cbeb ,_gcgb :=_ed .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fafca ,img ._dadd );if _gcgb !=nil {return img ,_gcgb ;};_fddb ,_gcgb :=_ed .GrayConverter .Convert (_cbeb );if _gcgb !=nil {return img ,_gcgb ;
};return _cagfg (_fddb .Base ()),nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// XObjectType represents the type of an XObject.
type XObjectType int ;

// G returns the value of the green component of the color.
func (_ggaeb *PdfColorDeviceRGB )G ()float64 {return _ggaeb [1]};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_gbd .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_efga *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _fabdge []*PdfField ;_dafdb :=map[*_gbd .PdfIndirectObject ]struct{}{};for _ ,_cgbf :=range _efga .PageList {_begdfa ,_dgdce :=_cgbf .GetAnnotations ();if _dgdce !=nil {return _dgdce ;
};for _ ,_cafgg :=range _begdfa {var _degga *PdfField ;switch _dcdbb :=_cafgg .GetContext ().(type ){case *PdfAnnotationWidget :if _dcdbb ._fbb !=nil {_degga =_dcdbb ._fbb ;break ;};if _eeeea ,_fcdc :=_gbd .GetIndirect (_dcdbb .Parent );_fcdc {_degga ,_dgdce =_efga .newPdfFieldFromIndirectObject (_eeeea ,nil );
if _dgdce ==nil {break ;};_db .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eeeea ,_dgdce );
};if _dcdbb ._faa !=nil {_degga ,_dgdce =_efga .newPdfFieldFromIndirectObject (_dcdbb ._faa ,nil );if _dgdce ==nil {break ;};_db .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dcdbb ._faa ,_dgdce );
};};if _degga ==nil {continue ;};if _ ,_cadb :=_dafdb [_degga ._beee ];_cadb {continue ;};_dafdb [_degga ._beee ]=struct{}{};_fabdge =append (_fabdge ,_degga );};};if len (_fabdge )==0{return nil ;};if _efga .AcroForm ==nil {_efga .AcroForm =NewPdfAcroForm ();
};_efga .AcroForm .Fields =&_fabdge ;return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ecgaa pdfFontType3 )GetRuneMetrics (r rune )(_fad .CharMetrics ,bool ){_baaf :=_ecgaa .Encoder ();if _baaf ==nil {_db .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ecgaa );
return _fad .CharMetrics {},false ;};_fbfeb ,_ecfea :=_baaf .RuneToCharcode (r );if !_ecfea {if r !=' '{_db .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ecgaa );
};return _fad .CharMetrics {},false ;};_aeef ,_cfcc :=_ecgaa .GetCharMetrics (_fbfeb );return _aeef ,_cfcc ;};func _fcada ()string {_adefd .Lock ();defer _adefd .Unlock ();return _bdbcf };func _agcfd (_dgacb []byte )([]byte ,error ){_efabd :=_e .New ();
if _ ,_dcaa :=_acga .Copy (_efabd ,_cd .NewReader (_dgacb ));_dcaa !=nil {return nil ,_dcaa ;};return _efabd .Sum (nil ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgc *PdfActionSetOCGState )ToPdfObject ()_gbd .PdfObject {_cgc .PdfAction .ToPdfObject ();_egd :=_cgc ._ef ;_fdb :=_egd .PdfObject .(*_gbd .PdfObjectDictionary );_fdb .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeSetOCGState )));_fdb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cgc .State );
_fdb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cgc .PreserveRB );return _egd ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ffef :=&PdfFieldSignature {};_ffef .PdfField =NewPdfField ();_ffef .PdfField .SetContext (_ffef );_ffef .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ffef .PdfAnnotationWidget .SetContext (_ffef );
_ffef .PdfAnnotationWidget ._faa =_ffef .PdfField ._beee ;_ffef .T =_gbd .MakeString ("");_ffef .F =_gbd .MakeInteger (132);_ffef .V =signature ;return _ffef ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_abcg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cggc ,_bafg :=_gbd .GetNumbersAsFloat (objects );
if _bafg !=nil {return nil ,_bafg ;};return _abcg .ColorFromFloats (_cggc );};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_fffb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_deed *PdfWriter )SetDocInfo (info *PdfInfo ){if _deed .hasObject (_deed ._edfba ){delete (_deed ._bdgga ,_deed ._edfba );delete (_deed ._dfade ,_deed ._edfba );for _bggcb ,_gdccd :=range _deed ._fbafa {if _gdccd ==_deed ._edfba {copy (_deed ._fbafa [_bggcb :],_deed ._fbafa [_bggcb +1:]);
_deed ._fbafa [len (_deed ._fbafa )-1]=nil ;_deed ._fbafa =_deed ._fbafa [:len (_deed ._fbafa )-1];break ;};};};_fcfgf :=_gbd .PdfIndirectObject {};_fcfgf .PdfObject =info .ToPdfObject ();_deed ._edfba =&_fcfgf ;_deed .addObject (&_fcfgf );};func _gfcca (_gfdc _gbd .PdfObject ,_ddbe *fontCommon )(*_bgg .CMap ,error ){_defe ,_babed :=_gbd .GetStream (_gfdc );
if !_babed {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_gfdc );
return nil ,_gbd .ErrTypeError ;};_adgfc ,_edgee :=_gbd .DecodeStream (_defe );if _edgee !=nil {return nil ,_edgee ;};_gcea ,_edgee :=_bgg .LoadCmapFromData (_adgfc ,!_ddbe .isCIDFont ());if _edgee !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_defe .ObjectNumber ,_edgee );
};return _gcea ,_edgee ;};func (_begdf *LTV )getCRLs (_bfag []*_ad .Certificate )([][]byte ,error ){_aggbf :=make ([][]byte ,0,len (_bfag ));for _ ,_bfdfd :=range _bfag {for _ ,_gfabe :=range _bfdfd .CRLDistributionPoints {if _begdf .CertClient .IsCA (_bfdfd ){continue ;
};_faafg ,_fbebbg :=_begdf .CRLClient .MakeRequest (_gfabe ,_bfdfd );if _fbebbg !=nil {_db .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fbebbg );
continue ;};_aggbf =append (_aggbf ,_faafg );};};return _aggbf ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gagaa *PdfPageResources )SetXObjectImageByName (keyName _gbd .PdfObjectName ,ximg *XObjectImage )error {_dcecae :=ximg .ToPdfObject ().(*_gbd .PdfObjectStream );_dbdff :=_gagaa .SetXObjectByName (keyName ,_dcecae );return _dbdff ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_faedb *DSS )ToPdfObject ()_gbd .PdfObject {_dbbffa :=_faedb ._beaad .PdfObject .(*_gbd .PdfObjectDictionary );_dbbffa .Clear ();_facc :=_gbd .MakeDict ();for _gdcb ,_gfcc :=range _faedb .VRI {_facc .Set (*_gbd .MakeName (_gdcb ),_gfcc .ToPdfObject ());
};_dbbffa .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_dcagd (_faedb .Certs ));_dbbffa .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_dcagd (_faedb .OCSPs ));_dbbffa .SetIfNotNil ("\u0043\u0052\u004c\u0073",_dcagd (_faedb .CRLs ));_dbbffa .Set ("\u0056\u0052\u0049",_facc );
return _faedb ._beaad ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_agcgeg *PdfOutlineItem )ToPdfObject ()_gbd .PdfObject {_babgb :=_agcgeg ._baea ;_aacae :=_babgb .PdfObject .(*_gbd .PdfObjectDictionary );_aacae .Set ("\u0054\u0069\u0074l\u0065",_agcgeg .Title );if _agcgeg .A !=nil {_aacae .Set ("\u0041",_agcgeg .A );
};if _feac :=_aacae .Get ("\u0053\u0045");_feac !=nil {_aacae .Remove ("\u0053\u0045");};if _agcgeg .C !=nil {_aacae .Set ("\u0043",_agcgeg .C );};if _agcgeg .Dest !=nil {_aacae .Set ("\u0044\u0065\u0073\u0074",_agcgeg .Dest );};if _agcgeg .F !=nil {_aacae .Set ("\u0046",_agcgeg .F );
};if _agcgeg .Count !=nil {_aacae .Set ("\u0043\u006f\u0075n\u0074",_gbd .MakeInteger (*_agcgeg .Count ));};if _agcgeg .Next !=nil {_aacae .Set ("\u004e\u0065\u0078\u0074",_agcgeg .Next .ToPdfObject ());};if _agcgeg .First !=nil {_aacae .Set ("\u0046\u0069\u0072s\u0074",_agcgeg .First .ToPdfObject ());
};if _agcgeg .Prev !=nil {_aacae .Set ("\u0050\u0072\u0065\u0076",_agcgeg .Prev .GetContext ().GetContainingPdfObject ());};if _agcgeg .Last !=nil {_aacae .Set ("\u004c\u0061\u0073\u0074",_agcgeg .Last .GetContext ().GetContainingPdfObject ());};if _agcgeg .Parent !=nil {_aacae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agcgeg .Parent .GetContext ().GetContainingPdfObject ());
};return _babgb ;};var _dabc =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_aaaa *PdfReader )newPdfAnnotationLineFromDict (_edb *_gbd .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cegf :=PdfAnnotationLine {};_bdbb ,_dcga :=_aaaa .newPdfAnnotationMarkupFromDict (_edb );if _dcga !=nil {return nil ,_dcga ;};_cegf .PdfAnnotationMarkup =_bdbb ;
_cegf .L =_edb .Get ("\u004c");_cegf .BS =_edb .Get ("\u0042\u0053");_cegf .LE =_edb .Get ("\u004c\u0045");_cegf .IC =_edb .Get ("\u0049\u0043");_cegf .LL =_edb .Get ("\u004c\u004c");_cegf .LLE =_edb .Get ("\u004c\u004c\u0045");_cegf .Cap =_edb .Get ("\u0043\u0061\u0070");
_cegf .IT =_edb .Get ("\u0049\u0054");_cegf .LLO =_edb .Get ("\u004c\u004c\u004f");_cegf .CP =_edb .Get ("\u0043\u0050");_cegf .Measure =_edb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cegf .CO =_edb .Get ("\u0043\u004f");return &_cegf ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_fabbae *PdfPage )Duplicate ()*PdfPage {_gbbg :=*_fabbae ;_gbbg ._abccg =_gbd .MakeDict ();_gbbg ._fgbbe =_gbd .MakeIndirectObject (_gbbg ._abccg );return &_gbbg ;};func (_egcg *PdfReader )newPdfActionJavaScriptFromDict (_cee *_gbd .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cee .Get ("\u004a\u0053")},nil ;
};

// ToPdfObject returns a stream object.
func (_daaf *XObjectImage )ToPdfObject ()_gbd .PdfObject {_cbdedc :=_daaf ._dcaea ;_eacfc :=_cbdedc .PdfObjectDictionary ;if _daaf .Filter !=nil {_eacfc =_daaf .Filter .MakeStreamDict ();_cbdedc .PdfObjectDictionary =_eacfc ;};_eacfc .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_eacfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0049\u006d\u0061g\u0065"));_eacfc .Set ("\u0057\u0069\u0064t\u0068",_gbd .MakeInteger (*(_daaf .Width )));_eacfc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gbd .MakeInteger (*(_daaf .Height )));
if _daaf .BitsPerComponent !=nil {_eacfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbd .MakeInteger (*(_daaf .BitsPerComponent )));};if _daaf .ColorSpace !=nil {_eacfc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_daaf .ColorSpace .ToPdfObject ());
};_eacfc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_daaf .Intent );_eacfc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_daaf .ImageMask );_eacfc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_daaf .Mask );_adcf :=_eacfc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _daaf .Decode ==nil &&_adcf {_eacfc .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _daaf .Decode !=nil {_eacfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_daaf .Decode );};_eacfc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_daaf .Interpolate );
_eacfc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_daaf .Alternatives );_eacfc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_daaf .SMask );_eacfc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_daaf .SMaskInData );
_eacfc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_daaf .Matte );_eacfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_daaf .Name );_eacfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_daaf .StructParent );_eacfc .SetIfNotNil ("\u0049\u0044",_daaf .ID );
_eacfc .SetIfNotNil ("\u004f\u0050\u0049",_daaf .OPI );_eacfc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_daaf .Metadata );_eacfc .SetIfNotNil ("\u004f\u0043",_daaf .OC );_eacfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_daaf .Stream ))));
_cbdedc .Stream =_daaf .Stream ;return _cbdedc ;};func (_aab *PdfReader )newPdfActionNamedFromDict (_dda *_gbd .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dda .Get ("\u004e")},nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_abade *PdfPattern )GetContext ()PdfModel {return _abade ._gffb };

// ToPdfObject implements interface PdfModel.
func (_bfg *PdfActionHide )ToPdfObject ()_gbd .PdfObject {_bfg .PdfAction .ToPdfObject ();_egg :=_bfg ._ef ;_fbfe :=_egg .PdfObject .(*_gbd .PdfObjectDictionary );_fbfe .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeHide )));_fbfe .SetIfNotNil ("\u0054",_bfg .T );
_fbfe .SetIfNotNil ("\u0048",_bfg .H );return _egg ;};

// GetAction returns the PDF action for the annotation link.
func (_ddg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _ddg ._geed !=nil {return _ddg ._geed ,nil ;};if _ddg .A ==nil {return nil ,nil ;};if _ddg ._bdg ==nil {return nil ,nil ;};_dca ,_abe :=_ddg ._bdg .loadAction (_ddg .A );if _abe !=nil {return nil ,_abe ;
};_ddg ._geed =_dca ;return _ddg ._geed ,nil ;};func (_gade *PdfFilespec )getDict ()*_gbd .PdfObjectDictionary {if _adaa ,_cggdb :=_gade ._aeace .(*_gbd .PdfIndirectObject );_cggdb {_bcdc ,_faga :=_adaa .PdfObject .(*_gbd .PdfObjectDictionary );if !_faga {return nil ;
};return _bcdc ;}else if _ddca ,_ddgf :=_gade ._aeace .(*_gbd .PdfObjectDictionary );_ddgf {return _ddca ;}else {_db .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_gade ._aeace );
return nil ;};};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _gbd .PdfObject ;Q _gbd .PdfObject ;RC _gbd .PdfObject ;DS _gbd .PdfObject ;CL _gbd .PdfObject ;IT _gbd .PdfObject ;BE _gbd .PdfObject ;RD _gbd .PdfObject ;BS _gbd .PdfObject ;LE _gbd .PdfObject ;
};func _fgdbc (_dfg *_gbd .PdfObjectDictionary ,_cdea *fontCommon )(*pdfCIDFontType0 ,error ){if _cdea ._bbecf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_db .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cdea );
return nil ,_gbd .ErrRangeError ;};_fccf :=_faaa (_cdea );_geedg ,_gcba :=_gbd .GetDict (_dfg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gcba {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cdea );
return nil ,ErrRequiredAttributeMissing ;};_fccf .CIDSystemInfo =_geedg ;_fccf .DW =_dfg .Get ("\u0044\u0057");_fccf .W =_dfg .Get ("\u0057");_fccf .DW2 =_dfg .Get ("\u0044\u0057\u0032");_fccf .W2 =_dfg .Get ("\u0057\u0032");_fccf ._dddg =1000.0;if _cccb ,_gfaae :=_gbd .GetNumberAsFloat (_fccf .DW );
_gfaae ==nil {_fccf ._dddg =_cccb ;};_eeec ,_daae :=_dbdg (_fccf .W );if _daae !=nil {return nil ,_daae ;};if _eeec ==nil {_eeec =map[_dc .CharCode ]float64 {};};_fccf ._gfgdb =_eeec ;return _fccf ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_beaad *_gbd .PdfIndirectObject ;Certs []*_gbd .PdfObjectStream ;OCSPs []*_gbd .PdfObjectStream ;CRLs []*_gbd .PdfObjectStream ;VRI map[string ]*VRI ;_eefg map[string ]*_gbd .PdfObjectStream ;_bgcbd map[string ]*_gbd .PdfObjectStream ;_fdad map[string ]*_gbd .PdfObjectStream ;
};func (_edba *LTV )getCerts (_facgf []*_ad .Certificate )([][]byte ,error ){_fdab :=make ([][]byte ,0,len (_facgf ));for _ ,_gaga :=range _facgf {_fdab =append (_fdab ,_gaga .Raw );};return _fdab ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_fdbf *_gbd .PdfIndirectObject ;};type pdfFontType3 struct{fontCommon ;_cgfc *_gbd .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _gbd .PdfObject ;Encoding _gbd .PdfObject ;FontBBox _gbd .PdfObject ;FontMatrix _gbd .PdfObject ;FirstChar _gbd .PdfObject ;LastChar _gbd .PdfObject ;Widths _gbd .PdfObject ;Resources _gbd .PdfObject ;_acagec map[_dc .CharCode ]float64 ;_aaba _dc .TextEncoder ;
};

// GetContentStream returns the pattern cell's content stream
func (_fgbae *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gcda ,_ ,_gceec :=_fgbae .GetContentStreamWithEncoder ();return _gcda ,_gceec ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _gbd .PdfObject ;};

// SetDecode sets the decode image float slice.
func (_geegb *Image )SetDecode (decode []float64 ){_geegb ._dadd =decode };

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _gbd .PdfObject ;FS _gbd .PdfObject ;F _gbd .PdfObject ;UF _gbd .PdfObject ;DOS _gbd .PdfObject ;Mac _gbd .PdfObject ;Unix _gbd .PdfObject ;ID _gbd .PdfObject ;V _gbd .PdfObject ;EF _gbd .PdfObject ;RF _gbd .PdfObject ;Desc _gbd .PdfObject ;
CI _gbd .PdfObject ;_aeace _gbd .PdfObject ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aga :=NewPdfAnnotation ();_bfgcf :=&PdfAnnotationPrinterMark {};_bfgcf .PdfAnnotation =_aga ;_aga .SetContext (_bfgcf );return _bfgcf ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ccca *LTV )EnableByName (name string ,extraCerts []*_ad .Certificate )error {_aebfb :=_ccca ._aacee ._fafd .AcroForm ;for _ ,_gfgba :=range _aebfb .AllFields (){_fdggf ,_ :=_gfgba .GetContext ().(*PdfFieldSignature );if _fdggf ==nil {continue ;};
if _aeeeb :=_fdggf .PartialName ();_aeeeb !=name {continue ;};return _ccca .Enable (_fdggf .V ,extraCerts );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cb *PdfActionGoToR )ToPdfObject ()_gbd .PdfObject {_cb .PdfAction .ToPdfObject ();_gga :=_cb ._ef ;_cgd :=_gga .PdfObject .(*_gbd .PdfObjectDictionary );_cgd .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeGoToR )));if _cb .F !=nil {_cgd .Set ("\u0046",_cb .F .ToPdfObject ());
};_cgd .SetIfNotNil ("\u0044",_cb .D );_cgd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cb .NewWindow );return _gga ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// GetAscent returns the Ascent of the font `descriptor`.
func (_cdaag *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _gbd .GetNumberAsFloat (_cdaag .Ascent );};func _faaa (_dffga *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_dffga }};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_egcgd *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _egcgd .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bb .Permissions ;Algorithm EncryptionAlgorithm ;};func (_fcefg *PdfWriter )seekByName (_bfcdaa _gbd .PdfObject ,_ffaa []string ,_fggbd string )([]_gbd .PdfObject ,error ){_db .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bfcdaa );
var _daadf []_gbd .PdfObject ;if _bbgbb ,_fegb :=_bfcdaa .(*_gbd .PdfIndirectObject );_fegb {return _fcefg .seekByName (_bbgbb .PdfObject ,_ffaa ,_fggbd );};if _dgabd ,_gfdce :=_bfcdaa .(*_gbd .PdfObjectStream );_gfdce {return _fcefg .seekByName (_dgabd .PdfObjectDictionary ,_ffaa ,_fggbd );
};if _ccaagb ,_deedb :=_bfcdaa .(*_gbd .PdfObjectDictionary );_deedb {_db .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_aeagc :=range _ccaagb .Keys (){_agabd :=_ccaagb .Get (_aeagc );if string (_aeagc )==_fggbd {_daadf =append (_daadf ,_agabd );};for _ ,_agfgg :=range _ffaa {if string (_aeagc )==_agfgg {_db .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_agfgg );
_fbdf ,_acbbf :=_fcefg .seekByName (_agabd ,_ffaa ,_fggbd );if _acbbf !=nil {return _daadf ,_acbbf ;};_daadf =append (_daadf ,_fbdf ...);break ;};};};return _daadf ,nil ;};return _daadf ,nil ;};func (_fgfg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fgfg ._ggff };


// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bafge *PdfReader )Decrypt (password []byte )(bool ,error ){_aede ,_eeacg :=_bafge ._dagg .Decrypt (password );if _eeacg !=nil {return false ,_eeacg ;};if !_aede {return false ,nil ;};_eeacg =_bafge .loadStructure ();if _eeacg !=nil {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_eeacg );
return false ,_eeacg ;};return true ,nil ;};func (_begc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_bcea *PdfReader )newPdfFieldFromIndirectObject (_ffbgc *_gbd .PdfIndirectObject ,_fcffbd *PdfField )(*PdfField ,error ){if _eaae ,_fdgbb :=_bcea ._fafgd .GetModelFromPrimitive (_ffbgc ).(*PdfField );
_fdgbb {return _eaae ,nil ;};_gfaa ,_ceef :=_gbd .GetDict (_ffbgc );if !_ceef {return nil ,_a .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bcfbf :=NewPdfField ();_bcfbf ._beee =_ffbgc ;_bcfbf ._beee .PdfObject =_gfaa ;if _cfbe ,_aeea :=_gbd .GetName (_gfaa .Get ("\u0046\u0054"));_aeea {_bcfbf .FT =_cfbe ;};if _fcffbd !=nil {_bcfbf .Parent =_fcffbd ;};_bcfbf .T ,_ =_gfaa .Get ("\u0054").(*_gbd .PdfObjectString );
_bcfbf .TU ,_ =_gfaa .Get ("\u0054\u0055").(*_gbd .PdfObjectString );_bcfbf .TM ,_ =_gfaa .Get ("\u0054\u004d").(*_gbd .PdfObjectString );_bcfbf .Ff ,_ =_gfaa .Get ("\u0046\u0066").(*_gbd .PdfObjectInteger );_bcfbf .V =_gfaa .Get ("\u0056");_bcfbf .DV =_gfaa .Get ("\u0044\u0056");
_bcfbf .AA =_gfaa .Get ("\u0041\u0041");_ebff :=_bcfbf .FT ;if _ebff ==nil &&_fcffbd !=nil {_ebff =_fcffbd .FT ;};if _ebff !=nil {switch *_ebff {case "\u0054\u0078":_fgea ,_afdc :=_faaga (_gfaa );if _afdc !=nil {return nil ,_afdc ;};_fgea .PdfField =_bcfbf ;
_bcfbf ._fdcac =_fgea ;case "\u0043\u0068":_cedcg ,_bbegf :=_adbcf (_gfaa );if _bbegf !=nil {return nil ,_bbegf ;};_cedcg .PdfField =_bcfbf ;_bcfbf ._fdcac =_cedcg ;case "\u0042\u0074\u006e":_fgfc ,_gege :=_bafbg (_gfaa );if _gege !=nil {return nil ,_gege ;
};_fgfc .PdfField =_bcfbf ;_bcfbf ._fdcac =_fgfc ;case "\u0053\u0069\u0067":_egfg ,_ddfba :=_bcea .newPdfFieldSignatureFromDict (_gfaa );if _ddfba !=nil {return nil ,_ddfba ;};_egfg .PdfField =_bcfbf ;_bcfbf ._fdcac =_egfg ;default:_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_bcfbf .FT );
return nil ,_ff .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _gcecd ,_cgae :=_gbd .GetName (_gfaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_cgae {if *_gcecd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dafe ,_fcbcc :=_bcea .newPdfAnnotationFromIndirectObject (_ffbgc );
if _fcbcc !=nil {return nil ,_fcbcc ;};_bdcb ,_bdgca :=_dafe .GetContext ().(*PdfAnnotationWidget );if !_bdgca {return nil ,_ff .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_bdcb ._fbb =_bcfbf ;_bdcb .Parent =_bcfbf ._beee ;_bcfbf .Annotations =append (_bcfbf .Annotations ,_bdcb );return _bcfbf ,nil ;};};_acfb :=true ;if _eeaba ,_ccffb :=_gbd .GetArray (_gfaa .Get ("\u004b\u0069\u0064\u0073"));_ccffb {_bfgcc :=make ([]*_gbd .PdfIndirectObject ,0,_eeaba .Len ());
for _ ,_gcdee :=range _eeaba .Elements (){_fcbe ,_abfe :=_gbd .GetIndirect (_gcdee );if !_abfe {_eggedd ,_dcfg :=_gbd .GetStream (_gcdee );if _dcfg &&_eggedd .PdfObjectDictionary !=nil {_eadg ,_ceeaaa :=_gbd .GetNameVal (_eggedd .Get ("\u0054\u0079\u0070\u0065"));
if _ceeaaa &&_eadg =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_db .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ff .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_fcfe ,_eceb :=_gbd .GetDict (_fcbe );
if !_eceb {return nil ,ErrTypeCheck ;};if _acfb {_acfb =!_cdgg (_fcfe );};_bfgcc =append (_bfgcc ,_fcbe );};for _ ,_gccbc :=range _bfgcc {if _acfb {_dbdfg ,_fdddcb :=_bcea .newPdfAnnotationFromIndirectObject (_gccbc );if _fdddcb !=nil {_db .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fdddcb );
return nil ,_fdddcb ;};_bbfa ,_bbea :=_dbdfg ._dbeb .(*PdfAnnotationWidget );if !_bbea {return nil ,ErrTypeCheck ;};_bbfa ._fbb =_bcfbf ;_bcfbf .Annotations =append (_bcfbf .Annotations ,_bbfa );}else {_agcf ,_cdce :=_bcea .newPdfFieldFromIndirectObject (_gccbc ,_bcfbf );
if _cdce !=nil {_db .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cdce );return nil ,_cdce ;};_bcfbf .Kids =append (_bcfbf .Kids ,_agcf );
};};};return _bcfbf ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_gaee *Image )ToJBIG2Image ()(*_gbd .JBIG2Image ,error ){_cccfc ,_ecebd :=_gaee .ToGoImage ();if _ecebd !=nil {return nil ,_ecebd ;};return _gbd .GoImageToJBIG2 (_cccfc ,_gbd .JB2ImageAutoThreshold );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_dagg *_gbd .PdfParser ;_dcead _gbd .PdfObject ;_cacgb *_gbd .PdfIndirectObject ;_dfae *_gbd .PdfObjectDictionary ;_dfgeb []*_gbd .PdfIndirectObject ;PageList []*PdfPage ;_aedba int ;_dccge *_gbd .PdfObjectDictionary ;_daggg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fafgd *modelManager ;_adaag bool ;_dcag map[_gbd .PdfObject ]struct{};_afbb _acga .ReadSeeker ;_fcebf string ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bdfb *PdfShadingPattern )ToPdfObject ()_gbd .PdfObject {_bdfb .PdfPattern .ToPdfObject ();_adcac :=_bdfb .getDict ();if _bdfb .Shading !=nil {_adcac .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bdfb .Shading .ToPdfObject ());};if _bdfb .Matrix !=nil {_adcac .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdfb .Matrix );
};if _bdfb .ExtGState !=nil {_adcac .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bdfb .ExtGState );};return _bdfb ._gaadc ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bcfbfb *PdfOutline )ToPdfObject ()_gbd .PdfObject {_geafc :=_bcfbfb ._fdbf ;_fgff :=_geafc .PdfObject .(*_gbd .PdfObjectDictionary );_fgff .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bcfbfb .First !=nil {_fgff .Set ("\u0046\u0069\u0072s\u0074",_bcfbfb .First .ToPdfObject ());
};if _bcfbfb .Last !=nil {_fgff .Set ("\u004c\u0061\u0073\u0074",_bcfbfb .Last .GetContext ().GetContainingPdfObject ());};if _bcfbfb .Parent !=nil {_fgff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcfbfb .Parent .GetContext ().GetContainingPdfObject ());
};if _bcfbfb .Count !=nil {_fgff .Set ("\u0043\u006f\u0075n\u0074",_gbd .MakeInteger (*_bcfbfb .Count ));};return _geafc ;};func (_fea *PdfReader )newPdfAnnotationStrikeOut (_badc *_gbd .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_bbeb :=PdfAnnotationStrikeOut {};
_abee ,_adeg :=_fea .newPdfAnnotationMarkupFromDict (_badc );if _adeg !=nil {return nil ,_adeg ;};_bbeb .PdfAnnotationMarkup =_abee ;_bbeb .QuadPoints =_badc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbeb ,nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_dbad *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dbad .Alternate ==nil {_db .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dbad .N ==1{_db .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_dfed :=NewPdfColorspaceDeviceGray ();return _dfed .ColorToRGB (color );}else if _dbad .N ==3{_db .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _dbad .N ==4{_db .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_edgaf :=NewPdfColorspaceDeviceCMYK ();return _edgaf .ColorToRGB (color );}else {return nil ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_db .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dbad );
return _dbad .Alternate .ColorToRGB (color );};

// L returns the value of the L component of the color.
func (_ccga *PdfColorLab )L ()float64 {return _ccga [0]};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func _eddf (_fbebf _acga .ReadSeeker ,_dgdcf *ReaderOpts ,_gdcde bool ,_fggae string )(*PdfReader ,error ){if _dgdcf ==nil {_dgdcf =NewReaderOpts ();
};_edcdc :=&PdfReader {_afbb :_fbebf ,_dcag :map[_gbd .PdfObject ]struct{}{},_fafgd :_fdeaf (),_adaag :_dgdcf .LazyLoad };_cfbca ,_ceacc :=_bafec ("\u0072");if _ceacc !=nil {return nil ,_ceacc ;};_ceacc =_ega .Track (_cfbca ,_fggae );if _ceacc !=nil {return nil ,_ceacc ;
};_edcdc ._fcebf =_cfbca ;_adbba ,_ceacc :=_gbd .NewParser (_fbebf );if _ceacc !=nil {return nil ,_ceacc ;};_edcdc ._dagg =_adbba ;_agcad ,_ceacc :=_edcdc .IsEncrypted ();if _ceacc !=nil {return nil ,_ceacc ;};if !_agcad {_ceacc =_edcdc .loadStructure ();
if _ceacc !=nil {return nil ,_ceacc ;};}else if _gdcde {_gcecb ,_bccee :=_edcdc .Decrypt ([]byte (_dgdcf .Password ));if _bccee !=nil {return nil ,_bccee ;};if !_gcecb {return nil ,_ff .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _edcdc ,nil ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gabab :=NewPdfAnnotation ();_bcaf :=&PdfAnnotationStamp {};_bcaf .PdfAnnotation =_gabab ;_bcaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gabab .SetContext (_bcaf );return _bcaf ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_aeac *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=_aeac .GetNumComponents (){return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgf ,_bfeae :=_gbd .GetNumbersAsFloat (objects );
if _bfeae !=nil {return nil ,_bfeae ;};return _aeac .ColorFromFloats (_afgf );};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fbceb *PdfPageResources )GetExtGState (keyName _gbd .PdfObjectName )(_gbd .PdfObject ,bool ){if _fbceb .ExtGState ==nil {return nil ,false ;};_bfcda ,_gbgdb :=_gbd .TraceToDirectObject (_fbceb .ExtGState ).(*_gbd .PdfObjectDictionary );if !_gbgdb {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbceb .ExtGState );
return nil ,false ;};if _cfgff :=_bfcda .Get (keyName );_cfgff !=nil {return _cfgff ,true ;};return nil ,false ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_aeecd *PdfAnnotation )GetContext ()PdfModel {if _aeecd ==nil {return nil ;};return _aeecd ._dbeb ;};

// SetImage updates XObject Image with new image data.
func (_gedef *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gedef .Filter .UpdateParams (img .GetParamsDict ());_fgcfga ,_feeba :=_gedef .Filter .EncodeBytes (img .Data );if _feeba !=nil {return _feeba ;};_gedef .Stream =_fgcfga ;_bdbfed :=img .Width ;
_gedef .Width =&_bdbfed ;_dbfe :=img .Height ;_gedef .Height =&_dbfe ;_geccb :=img .BitsPerComponent ;_gedef .BitsPerComponent =&_geccb ;if cs ==nil {if img .ColorComponents ==1{_gedef .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gedef .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_gedef .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gedef .ColorSpace =cs ;};return nil ;
};

// Val returns the color value.
func (_bafef *PdfColorDeviceGray )Val ()float64 {return float64 (*_bafef )};

// ColorToRGB converts gray -> rgb for a single color component.
func (_dddb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_efgeb ,_decd :=color .(*PdfColorDeviceGray );if !_decd {_db .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_efgeb ),float64 (*_efgeb ),float64 (*_efgeb )),nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _gbd .PdfObject ;T3DV _gbd .PdfObject ;T3DA _gbd .PdfObject ;T3DI _gbd .PdfObject ;T3DB _gbd .PdfObject ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ede :=NewPdfAnnotation ();_gbg :=&PdfAnnotationScreen {};_gbg .PdfAnnotation =_ede ;_ede .SetContext (_gbg );return _gbg ;};

// ToPdfObject implements interface PdfModel.
func (_acc *PdfActionGoToE )ToPdfObject ()_gbd .PdfObject {_acc .PdfAction .ToPdfObject ();_adg :=_acc ._ef ;_dgg :=_adg .PdfObject .(*_gbd .PdfObjectDictionary );_dgg .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeGoToE )));if _acc .F !=nil {_dgg .Set ("\u0046",_acc .F .ToPdfObject ());
};_dgg .SetIfNotNil ("\u0044",_acc .D );_dgg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_acc .NewWindow );_dgg .SetIfNotNil ("\u0054",_acc .T );return _adg ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_dbbda *PdfReader )GetOutlines ()(*Outline ,error ){if _dbbda ==nil {return nil ,_ff .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_egdc :=_dbbda .GetOutlineTree ();if _egdc ==nil {return nil ,_ff .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dagf func (_cgdbb *PdfOutlineTreeNode ,_aafe *[]*OutlineItem );_dagf =func (_cfafg *PdfOutlineTreeNode ,_feccb *[]*OutlineItem ){if _cfafg ==nil {return ;};if _cfafg ._aagcd ==nil {_db .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _dfad *OutlineItem ;if _acfdd ,_ecafd :=_cfafg ._aagcd .(*PdfOutlineItem );_ecafd {_gefc :=_acfdd .Dest ;if (_gefc ==nil ||_gbd .IsNullObject (_gefc ))&&_acfdd .A !=nil {if _aegb ,_ffgf :=_gbd .GetDict (_acfdd .A );_ffgf {_gefc ,_ =_gbd .GetArray (_aegb .Get ("\u0044"));
};};var _dcdefc OutlineDest ;if _gefc !=nil &&!_gbd .IsNullObject (_gefc ){if _eddaf ,_cegfb :=_bgedg (_gefc ,_dbbda );_cegfb ==nil {_dcdefc =*_eddaf ;}else {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gefc ,_cegfb );
};};_dfad =NewOutlineItem (_acfdd .Title .Decoded (),_dcdefc );*_feccb =append (*_feccb ,_dfad );if _acfdd .Next !=nil {_dagf (_acfdd .Next ,_feccb );};};if _cfafg .First !=nil {if _dfad !=nil {_feccb =&_dfad .Entries ;};_dagf (_cfafg .First ,_feccb );
};};_abegg :=NewOutline ();_dagf (_egdc ,&_abegg .Entries );return _abegg ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_eade *PdfAcroForm )Fill (provider FieldValueProvider )error {return _eade .fill (provider ,nil )};func (_adbe *pdfFontSimple )getFontEncoding ()(_gegef string ,_bdgbg map[_dc .CharCode ]_dc .GlyphName ,_eegce error ){_gegef ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _aafg ,_ffccgg :=_fega [_adbe ._dgcff ];_ffccgg {_gegef =_aafg ;}else if _adbe .fontFlags ()&_eeeb !=0{for _ddcb ,_bbfe :=range _fega {if _fc .Contains (_adbe ._dgcff ,_ddcb ){_gegef =_bbfe ;break ;};};};if _adbe .Encoding ==nil {return _gegef ,nil ,nil ;
};switch _fgeed :=_adbe .Encoding .(type ){case *_gbd .PdfObjectName :return string (*_fgeed ),nil ,nil ;case *_gbd .PdfObjectDictionary :_cbcdf ,_fgae :=_gbd .GetName (_fgeed .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _fgae {_gegef =_cbcdf .String ();};if _gecbf :=_fgeed .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_gecbf !=nil {_dfbbc ,_fgbb :=_gbd .GetArray (_gecbf );if !_fgbb {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fgeed ,_fgeed .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_gbd .ErrTypeError ;};_bdgbg ,_eegce =_dc .FromFontDifferences (_dfbbc );};return _gegef ,_bdgbg ,_eegce ;default:_db .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_adbe .Encoding ,_adbe .Encoding );
return "",nil ,_gbd .ErrTypeError ;};};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_ebgb :=NewPdfAnnotation ();_aac :=&PdfAnnotationPolyLine {};_aac .PdfAnnotation =_ebgb ;_aac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebgb .SetContext (_aac );return _aac ;};func (_ecaa *PdfReader )newPdfAnnotationUnderlineFromDict (_gbc *_gbd .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_eeag :=PdfAnnotationUnderline {};
_fgg ,_ebggd :=_ecaa .newPdfAnnotationMarkupFromDict (_gbc );if _ebggd !=nil {return nil ,_ebggd ;};_eeag .PdfAnnotationMarkup =_fgg ;_eeag .QuadPoints =_gbc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eeag ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bbdda *PdfOutlineTreeNode )GetContainingPdfObject ()_gbd .PdfObject {return _bbdda .GetContext ().GetContainingPdfObject ();};func (_dgga *PdfReader )newPdfAnnotationSquigglyFromDict (_ecb *_gbd .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bef :=PdfAnnotationSquiggly {};
_eaada ,_gef :=_dgga .newPdfAnnotationMarkupFromDict (_ecb );if _gef !=nil {return nil ,_gef ;};_bef .PdfAnnotationMarkup =_eaada ;_bef .QuadPoints =_ecb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bef ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_acdbg *PdfSignature )SetLocation (location string ){_acdbg .Location =_gbd .MakeString (location )};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bfe .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bfe .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bfe .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_aacee *PdfAppender ;_eefce *DSS ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_cceec *PdfOutline )GetContainingPdfObject ()_gbd .PdfObject {return _cceec ._fdbf };

// ToPdfObject implements interface PdfModel.
func (_dbbg *PdfAnnotationPopup )ToPdfObject ()_gbd .PdfObject {_dbbg .PdfAnnotation .ToPdfObject ();_efege :=_dbbg ._faa ;_gddg :=_efege .PdfObject .(*_gbd .PdfObjectDictionary );_gddg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0050\u006f\u0070u\u0070"));
_gddg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbbg .Parent );_gddg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dbbg .Open );return _efege ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_adab *PdfFieldButton )GetType ()ButtonType {_bcaed :=ButtonTypeCheckbox ;if _adab .Ff !=nil {if (uint32 (*_adab .Ff )&FieldFlagPushbutton .Mask ())> 0{_bcaed =ButtonTypePush ;}else if (uint32 (*_adab .Ff )&FieldFlagRadio .Mask ())> 0{_bcaed =ButtonTypeRadio ;
};};return _bcaed ;};func _badcd (_bfgbf _gbd .PdfObject )(string ,error ){_bfgbf =_gbd .TraceToDirectObject (_bfgbf );switch _adfdf :=_bfgbf .(type ){case *_gbd .PdfObjectString :return _adfdf .Str (),nil ;case *_gbd .PdfObjectStream :_edcec ,_bgfed :=_gbd .DecodeStream (_adfdf );
if _bgfed !=nil {return "",_bgfed ;};return string (_edcec ),nil ;};return "",_a .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bfgbf );
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebbgc *PdfColorspaceDeviceGray )ToPdfObject ()_gbd .PdfObject {return _gbd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _gbd .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_agaec *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecga :=vals [0];_beaa :=[]float64 {_ecga };_eeac ,_edcg :=_agaec .TintTransform .Evaluate (_beaa );
if _edcg !=nil {_db .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_edcg );_db .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_agaec .TintTransform );
return nil ,_edcg ;};_db .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_eeac ,_agaec .AlternateSpace );
_aafb ,_edcg :=_agaec .AlternateSpace .ColorFromFloats (_eeac );if _edcg !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_edcg );
return nil ,_edcg ;};return _aafb ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_bfcf *PdfField )IsTerminal ()bool {return len (_bfcf .Kids )==0};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gcca *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_eab :=NewPdfAction ();_ce :=&PdfActionResetForm {};_ce .PdfAction =_eab ;_eab .SetContext (_ce );return _ce ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_aedf *pdfFontSimple )ToPdfObject ()_gbd .PdfObject {if _aedf ._dgade ==nil {_aedf ._dgade =&_gbd .PdfIndirectObject {};};_bgca :=_aedf .baseFields ().asPdfObjectDictionary ("");_aedf ._dgade .PdfObject =_bgca ;if _aedf .FirstChar !=nil {_bgca .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_aedf .FirstChar );
};if _aedf .LastChar !=nil {_bgca .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_aedf .LastChar );};if _aedf .Widths !=nil {_bgca .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_aedf .Widths );};if _aedf .Encoding !=nil {_bgca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aedf .Encoding );
}else if _aedf ._cfeea !=nil {_ebfa :=_aedf ._cfeea .ToPdfObject ();if _ebfa !=nil {_bgca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebfa );};};return _aedf ._dgade ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_aefgg *PdfPage )ToPdfObject ()_gbd .PdfObject {_abaed :=_aefgg ._fgbbe ;_aefgg .GetPageDict ();return _abaed ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_edgcf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_edff ,_aeff :=color .(*PdfColorDeviceCMYK );if !_aeff {_db .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffbb :=_edff .C ();_ceed :=_edff .M ();_bbcg :=_edff .Y ();_aeae :=_edff .K ();_ffbb =_ffbb *(1-_aeae )+_aeae ;_ceed =_ceed *(1-_aeae )+_aeae ;
_bbcg =_bbcg *(1-_aeae )+_aeae ;_ggge :=1-_ffbb ;_bbcgb :=1-_ceed ;_bcga :=1-_bbcg ;return NewPdfColorDeviceRGB (_ggge ,_bbcgb ,_bcga ),nil ;};

// SetFillImage attach a model.Image to push button.
func (_bbefb *PdfFieldButton )SetFillImage (image *Image ){if _bbefb .IsPush (){_bbefb ._gcbb =image ;};};func _feaf (_eecb []byte )(_ccebe ,_edcb string ,_ceage error ){_db .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_eecb ));
_cafaa :=_caabc .FindIndex (_eecb );if _cafaa ==nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_gbd .ErrTypeError ;};_ffad :=_cafaa [1];_cggb :=_fc .Index (string (_eecb [_ffad :]),_fcgf );if _cggb < 0{_ccebe =string (_eecb [_ffad :]);return _ccebe ,"",nil ;};_feegd :=_ffad +_cggb ;_ccebe =string (_eecb [_ffad :_feegd ]);_ddcc :=_feegd ;
_cggb =_fc .Index (string (_eecb [_ddcc :]),_gbagd );if _cggb < 0{_db .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ceage );
return "","",_gbd .ErrTypeError ;};_ggcga :=_ddcc +_cggb ;_edcb =string (_eecb [_ddcc :_ggcga ]);return _ccebe ,_edcb ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_ddecd *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_dcbfd *PdfPage )SetContentStreams (cStreams []string ,encoder _gbd .StreamEncoder )error {if len (cStreams )==0{_dcbfd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_gbd .NewRawEncoder ();};var _bdfed []*_gbd .PdfObjectStream ;for _ ,_efac :=range cStreams {_cedba :=&_gbd .PdfObjectStream {};
_beec :=encoder .MakeStreamDict ();_eceae ,_fffdc :=encoder .EncodeBytes ([]byte (_efac ));if _fffdc !=nil {return _fffdc ;};_beec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_eceae ))));_cedba .PdfObjectDictionary =_beec ;
_cedba .Stream =_eceae ;_bdfed =append (_bdfed ,_cedba );};if len (_bdfed )==1{_dcbfd .Contents =_bdfed [0];}else {_aced :=_gbd .MakeArray ();for _ ,_ggdbd :=range _bdfed {_aced .Append (_ggdbd );};_dcbfd .Contents =_aced ;};return nil ;};func _gedb (_fbbae *_gbd .PdfObjectDictionary ,_acfbe *fontCommon )(*pdfFontType3 ,error ){_fcaa :=_dgfd (_acfbe );
_fecb :=_fbbae .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _fecb ==nil {_fecb =_gbd .MakeInteger (0);};_fcaa .FirstChar =_fecb ;_gbebe ,_dffcd :=_gbd .GetIntVal (_fecb );if !_dffcd {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fecb );
return nil ,_gbd .ErrTypeError ;};_bdgg :=_dc .CharCode (_gbebe );_fecb =_fbbae .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _fecb ==nil {_fecb =_gbd .MakeInteger (255);};_fcaa .LastChar =_fecb ;_gbebe ,_dffcd =_gbd .GetIntVal (_fecb );
if !_dffcd {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_fecb );return nil ,_gbd .ErrTypeError ;
};_dceg :=_dc .CharCode (_gbebe );_fecb =_fbbae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fecb !=nil {_fcaa .Resources =_fecb ;};_fecb =_fbbae .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _fecb ==nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_fecb );
return nil ,_gbd .ErrNotSupported ;};_fcaa .CharProcs =_fecb ;_fecb =_fbbae .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _fecb ==nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_fecb );
return nil ,_gbd .ErrNotSupported ;};_fcaa .FontMatrix =_fecb ;_fcaa ._acagec =make (map[_dc .CharCode ]float64 );_fecb =_fbbae .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _fecb !=nil {_fcaa .Widths =_fecb ;_edec ,_fgba :=_gbd .GetArray (_fecb );if !_fgba {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_fecb );
return nil ,_gbd .ErrTypeError ;};_gdbg ,_agbgb :=_edec .ToFloat64Array ();if _agbgb !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_agbgb ;};if len (_gdbg )!=int (_dceg -_bdgg +1){_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dceg -_bdgg +1,len (_gdbg ));
return nil ,_gbd .ErrRangeError ;};_edfa ,_fgba :=_gbd .GetArray (_fcaa .FontMatrix );if !_fgba {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_edfa );
return nil ,_agbgb ;};_gdde ,_agbgb :=_edfa .ToFloat64Array ();if _agbgb !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_agbgb ;};_cacad :=_bfc .NewMatrix (_gdde [0],_gdde [1],_gdde [2],_gdde [3],_gdde [4],_gdde [5]);for _dbece ,_eggc :=range _gdbg {_fgead ,_ :=_cacad .Transform (_eggc ,_eggc );_fcaa ._acagec [_bdgg +_dc .CharCode (_dbece )]=_fgead ;};};_fcaa .Encoding =_gbd .TraceToDirectObject (_fbbae .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_fcceb :=_fbbae .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fcceb !=nil {_fcaa ._ecbc =_gbd .TraceToDirectObject (_fcceb );_badfbd ,_eddbc :=_gfcca (_fcaa ._ecbc ,&_fcaa .fontCommon );if _eddbc !=nil {return nil ,_eddbc ;};_fcaa ._agcgb =_badfbd ;
};if _agfb :=_fcaa ._agcgb ;_agfb !=nil {_fcaa ._aaba =_dc .NewCMapEncoder ("",nil ,_agfb );}else {_fcaa ._aaba =_dc .NewPdfDocEncoder ();};return _fcaa ,nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_caec *PdfAcroForm ,_bdac *PdfField ,_fcfg *PdfAnnotationWidget )(*_gbd .PdfObjectDictionary ,error );};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gbd .PdfObject ;IC _gbd .PdfObject ;BE _gbd .PdfObject ;RD _gbd .PdfObject ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_acdg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbag :=vals [0];if _gbag < 0.0||_gbag > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fffbe :=vals [1];if _fffbe < 0.0||_fffbe > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cecc :=vals [2];if _cecc < 0.0||_cecc > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gbgfb :=vals [3];if _gbgfb < 0.0||_gbgfb > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggd :=NewPdfColorDeviceCMYK (_gbag ,_fffbe ,_cecc ,_gbgfb );return _gggd ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _gbd .PdfObject ;BS _gbd .PdfObject ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bdeecb pdfCIDFontType0 )GetCharMetrics (code _dc .CharCode )(_fad .CharMetrics ,bool ){_cggge :=_bdeecb ._dddg ;if _gfafd ,_cgfbf :=_bdeecb ._gfgdb [code ];_cgfbf {_cggge =_gfafd ;};return _fad .CharMetrics {Wx :_cggge },true ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bdbca *PdfField )FullName ()(string ,error ){var _eead _cd .Buffer ;_fbfa :=[]string {};if _bdbca .T !=nil {_fbfa =append (_fbfa ,_bdbca .T .Decoded ());};_ebdc :=map[*PdfField ]bool {};_ebdc [_bdbca ]=true ;_faffa :=_bdbca .Parent ;for _faffa !=nil {if _ ,_efff :=_ebdc [_faffa ];
_efff {return _eead .String (),_ff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _faffa .T ==nil {return _eead .String (),_ff .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fbfa =append (_fbfa ,_faffa .T .Decoded ());_ebdc [_faffa ]=true ;_faffa =_faffa .Parent ;};for _dbdb :=len (_fbfa )-1;_dbdb >=0;_dbdb --{_eead .WriteString (_fbfa [_dbdb ]);if _dbdb > 0{_eead .WriteString ("\u002e");};};return _eead .String (),nil ;
};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_gbd .PdfObjectStream )(*XObjectForm ,error ){_bffdf :=&XObjectForm {};_bffdf ._cfbcb =stream ;_ggfab :=*(stream .PdfObjectDictionary );_acdac ,_addac :=_gbd .NewEncoderFromStream (stream );if _addac !=nil {return nil ,_addac ;
};_bffdf .Filter =_acdac ;if _bfbdd :=_ggfab .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bfbdd !=nil {_aegeb ,_fgeff :=_bfbdd .(*_gbd .PdfObjectName );if !_fgeff {return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_aegeb !="\u0046\u006f\u0072\u006d"{_db .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _dbae :=_ggfab .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_dbae !=nil {_bffdf .FormType =_dbae ;};if _gdedd :=_ggfab .Get ("\u0042\u0042\u006f\u0078");_gdedd !=nil {_bffdf .BBox =_gdedd ;};if _fcacg :=_ggfab .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_fcacg !=nil {_bffdf .Matrix =_fcacg ;};if _dbegea :=_ggfab .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dbegea !=nil {_dbegea =_gbd .TraceToDirectObject (_dbegea );_bcgde ,_fdadb :=_dbegea .(*_gbd .PdfObjectDictionary );if !_fdadb {_db .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gbd .ErrTypeError ;};_eedge ,_adbcfe :=NewPdfPageResourcesFromDict (_bcgde );if _adbcfe !=nil {_db .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_adbcfe ;};_bffdf .Resources =_eedge ;_db .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_bffdf .Resources );};_bffdf .Group =_ggfab .Get ("\u0047\u0072\u006fu\u0070");
_bffdf .Ref =_ggfab .Get ("\u0052\u0065\u0066");_bffdf .MetaData =_ggfab .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_bffdf .PieceInfo =_ggfab .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bffdf .LastModified =_ggfab .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_bffdf .StructParent =_ggfab .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bffdf .StructParents =_ggfab .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_bffdf .OPI =_ggfab .Get ("\u004f\u0050\u0049");
_bffdf .OC =_ggfab .Get ("\u004f\u0043");_bffdf .Name =_ggfab .Get ("\u004e\u0061\u006d\u0065");_bffdf .Stream =stream .Stream ;return _bffdf ,nil ;};

// SetContext set the sub annotation (context).
func (_abfge *PdfShading )SetContext (ctx PdfModel ){_abfge ._fdcab =ctx };func (_agf *PdfAnnotation )String ()string {_cff :="";_bbab ,_agfg :=_agf .ToPdfObject ().(*_gbd .PdfIndirectObject );if _agfg {_cff =_a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_agf ._dbeb ,_bbab .PdfObject .String ());
};return _cff ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_babgbg int ,_gecgg *PdfPage );

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bca :=NewPdfAnnotation ();_afaa :=&PdfAnnotationSquare {};_afaa .PdfAnnotation =_bca ;_afaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bca .SetContext (_afaa );return _afaa ;};func _ebcc (_acdag *_gbd .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cgfdc :=PdfShadingType3 {};
_eebcgf :=_acdag .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _eebcgf ==nil {_db .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_gbgcda ,_bdefd :=_eebcgf .(*_gbd .PdfObjectArray );if !_bdefd {_db .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eebcgf );
return nil ,_gbd .ErrTypeError ;};if _gbgcda .Len ()!=6{_db .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbgcda .Len ());return nil ,ErrInvalidAttribute ;
};_cgfdc .Coords =_gbgcda ;if _fdcff :=_acdag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fdcff !=nil {_fdcff =_gbd .TraceToDirectObject (_fdcff );_acgb ,_ffbcc :=_fdcff .(*_gbd .PdfObjectArray );if !_ffbcc {_db .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdcff );
return nil ,_gbd .ErrTypeError ;};_cgfdc .Domain =_acgb ;};_eebcgf =_acdag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eebcgf ==nil {_db .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cgfdc .Function =[]PdfFunction {};if _gdca ,_acaeb :=_eebcgf .(*_gbd .PdfObjectArray );_acaeb {for _ ,_abbf :=range _gdca .Elements (){_cbege ,_bbdfg :=_dbege (_abbf );if _bbdfg !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbdfg );
return nil ,_bbdfg ;};_cgfdc .Function =append (_cgfdc .Function ,_cbege );};}else {_bagf ,_fcabd :=_dbege (_eebcgf );if _fcabd !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcabd );
return nil ,_fcabd ;};_cgfdc .Function =append (_cgfdc .Function ,_bagf );};if _aeffc :=_acdag .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aeffc !=nil {_aeffc =_gbd .TraceToDirectObject (_aeffc );_gbfed ,_aeege :=_aeffc .(*_gbd .PdfObjectArray );if !_aeege {_db .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aeffc );
return nil ,_gbd .ErrTypeError ;};if _gbfed .Len ()!=2{_db .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbfed .Len ());return nil ,ErrInvalidAttribute ;
};_cgfdc .Extend =_gbfed ;};return &_cgfdc ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_ggef :=&PdfColorspaceSpecialSeparation {};return _ggef ;};

// SetBorderWidth sets the style's border width.
func (_gdf *PdfBorderStyle )SetBorderWidth (width float64 ){_gdf .W =&width };func (_egcd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _gbd .PdfObject ;BS _gbd .PdfObject ;LE _gbd .PdfObject ;IC _gbd .PdfObject ;LL _gbd .PdfObject ;LLE _gbd .PdfObject ;Cap _gbd .PdfObject ;IT _gbd .PdfObject ;LLO _gbd .PdfObject ;CP _gbd .PdfObject ;
Measure _gbd .PdfObject ;CO _gbd .PdfObject ;};var _becde =false ;

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_agcge :=map[rune ]int {};for _ ,_befb :=range text {_agcge [_befb ]++;};return _agcge ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gbdf ,_fecc :=_affe (basefont );if _fecc !=nil {return nil ,_fecc ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gbdf ._cfeea =_dc .NewWinAnsiEncoder ();};return &PdfFont {_bbddd :&_gbdf },nil ;
};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gbd .PdfObject ;IC _gbd .PdfObject ;RO _gbd .PdfObject ;OverlayText _gbd .PdfObject ;Repeat _gbd .PdfObject ;DA _gbd .PdfObject ;Q _gbd .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _acga .ReadSeeker )(*PdfReader ,error ){const _eafb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _eddf (rs ,&ReaderOpts {},false ,_eafb );};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_efbb *PdfColorspaceSpecialIndexed )ToPdfObject ()_gbd .PdfObject {_aaff :=_gbd .MakeArray (_gbd .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_aaff .Append (_efbb .Base .ToPdfObject ());_aaff .Append (_gbd .MakeInteger (int64 (_efbb .HiVal )));
_aaff .Append (_efbb .Lookup );if _efbb ._geeg !=nil {_efbb ._geeg .PdfObject =_aaff ;return _efbb ._geeg ;};return _aaff ;};

// ToPdfObject implements interface PdfModel.
func (_fg *PdfActionSubmitForm )ToPdfObject ()_gbd .PdfObject {_fg .PdfAction .ToPdfObject ();_ceg :=_fg ._ef ;_eae :=_ceg .PdfObject .(*_gbd .PdfObjectDictionary );_eae .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeSubmitForm )));if _fg .F !=nil {_eae .Set ("\u0046",_fg .F .ToPdfObject ());
};_eae .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fg .Fields );_eae .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fg .Flags );return _ceg ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_bcba *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_bcba .HiVal )};};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _gbd .PdfObject )(*PdfFont ,error ){return _eaaeg (fontObj ,true )};

// GetFillImage get attached model.Image in push button.
func (_bacc *PdfFieldButton )GetFillImage ()*Image {if _bacc .IsPush (){return _bacc ._gcbb ;};return nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<26););var _ pdfFont =(*pdfFontSimple )(nil );

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_dbeb PdfModel ;Rect _gbd .PdfObject ;Contents _gbd .PdfObject ;P _gbd .PdfObject ;NM _gbd .PdfObject ;M _gbd .PdfObject ;F _gbd .PdfObject ;AP _gbd .PdfObject ;AS _gbd .PdfObject ;Border _gbd .PdfObject ;C _gbd .PdfObject ;StructParent _gbd .PdfObject ;
OC _gbd .PdfObject ;_faa *_gbd .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bgaa *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebgfb ,_deee :=_gbd .GetNumbersAsFloat (objects );
if _deee !=nil {return nil ,_deee ;};return _bgaa .ColorFromFloats (_ebgfb );};

// AddOutlineTree adds outlines to a PDF file.
func (_bgacc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bgacc ._dgdf =outlineTree };

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_gefa :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_gefa .N =N ;return _gefa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_faac *PdfFilespec )ToPdfObject ()_gbd .PdfObject {_fbdg :=_faac .getDict ();_fbdg .Clear ();_fbdg .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fbdg .SetIfNotNil ("\u0046\u0053",_faac .FS );
_fbdg .SetIfNotNil ("\u0046",_faac .F );_fbdg .SetIfNotNil ("\u0055\u0046",_faac .UF );_fbdg .SetIfNotNil ("\u0044\u004f\u0053",_faac .DOS );_fbdg .SetIfNotNil ("\u004d\u0061\u0063",_faac .Mac );_fbdg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_faac .Unix );
_fbdg .SetIfNotNil ("\u0049\u0044",_faac .ID );_fbdg .SetIfNotNil ("\u0056",_faac .V );_fbdg .SetIfNotNil ("\u0045\u0046",_faac .EF );_fbdg .SetIfNotNil ("\u0052\u0046",_faac .RF );_fbdg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_faac .Desc );_fbdg .SetIfNotNil ("\u0043\u0049",_faac .CI );
return _faac ._aeace ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _gbd .PdfObjectArray )(*PdfRectangle ,error ){_abfgb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _dacff error ;_abfgb .Llx ,_dacff =_gbd .GetNumberAsFloat (arr .Get (0));if _dacff !=nil {return nil ,_dacff ;};_abfgb .Lly ,_dacff =_gbd .GetNumberAsFloat (arr .Get (1));if _dacff !=nil {return nil ,_dacff ;};_abfgb .Urx ,_dacff =_gbd .GetNumberAsFloat (arr .Get (2));
if _dacff !=nil {return nil ,_dacff ;};_abfgb .Ury ,_dacff =_gbd .GetNumberAsFloat (arr .Get (3));if _dacff !=nil {return nil ,_dacff ;};return &_abfgb ,nil ;};type pdfFont interface{_fad .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_gbd .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_adefd .Lock ();defer _adefd .Unlock ();_ddcde =creator };func (_ceffc *Image )resampleLowBits (_edcfc []uint32 ){_bbgec :=_ed .BytesPerLine (int (_ceffc .Width ),int (_ceffc .BitsPerComponent ),_ceffc .ColorComponents );
_dgdbd :=make ([]byte ,_ceffc .ColorComponents *_bbgec *int (_ceffc .Height ));_ccfef :=int (_ceffc .BitsPerComponent )*_ceffc .ColorComponents *int (_ceffc .Width );_gaded :=uint8 (8);var (_cegfd ,_dgde int ;_aeffa uint32 ;);for _eabda :=0;_eabda < int (_ceffc .Height );
_eabda ++{_dgde =_eabda *_bbgec ;for _fgdfa :=0;_fgdfa < _ccfef ;_fgdfa ++{_aeffa =_edcfc [_cegfd ];_gaded -=uint8 (_ceffc .BitsPerComponent );_dgdbd [_dgde ]|=byte (_aeffa )<<_gaded ;if _gaded ==0{_gaded =8;_dgde ++;};_cegfd ++;};};_ceffc .Data =_dgdbd ;
};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_feggd *DSS )GetContainingPdfObject ()_gbd .PdfObject {return _feggd ._beaad };func _gbagf (_ddbea _gbd .PdfObject )(*PdfPattern ,error ){_acagg :=&PdfPattern {};var _efdga *_gbd .PdfObjectDictionary ;if _aabde ,_fdfad :=_gbd .GetIndirect (_ddbea );
_fdfad {_acagg ._gaadc =_aabde ;_ddfee ,_eaaac :=_aabde .PdfObject .(*_gbd .PdfObjectDictionary );if !_eaaac {_db .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_aabde .PdfObject );
return nil ,_gbd .ErrTypeError ;};_efdga =_ddfee ;}else if _efbcg ,_bdadc :=_gbd .GetStream (_ddbea );_bdadc {_acagg ._gaadc =_efbcg ;_efdga =_efbcg .PdfObjectDictionary ;}else {_db .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ddbea );
return nil ,_gbd .ErrTypeError ;};_gggcd :=_efdga .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _gggcd ==nil {_db .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ccebcb ,_beaeg :=_gggcd .(*_gbd .PdfObjectInteger );if !_beaeg {_db .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gggcd );
return nil ,_gbd .ErrTypeError ;};if *_ccebcb !=1&&*_ccebcb !=2{_db .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_ccebcb );return nil ,_gbd .ErrRangeError ;
};_acagg .PatternType =int64 (*_ccebcb );switch *_ccebcb {case 1:_gbfee ,_accgd :=_fcbgf (_efdga );if _accgd !=nil {return nil ,_accgd ;};_gbfee .PdfPattern =_acagg ;_acagg ._gffb =_gbfee ;return _acagg ,nil ;case 2:_gacb ,_dgdbge :=_caaba (_efdga );if _dgdbge !=nil {return nil ,_dgdbge ;
};_gacb .PdfPattern =_acagg ;_acagg ._gffb =_gacb ;return _acagg ,nil ;};return nil ,_ff .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_acged *LTV )EnableChain (chain []*_ad .Certificate )error {return _acged .enable (nil ,chain ,"")};func (_dfcfe *PdfSignature )extractChainFromPKCS7 ()([]*_ad .Certificate ,error ){_cabab ,_cbga :=_dg .Parse (_dfcfe .Contents .Bytes ());if _cbga !=nil {return nil ,_cbga ;
};return _cabab .Certificates ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dgcdg *_gbd .PdfIndirectObject ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_caabe FieldFlag )Mask ()uint32 {return uint32 (_caabe )};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gbd .PdfObject ;};func _ggbd (_cebgb *_gbd .PdfObjectDictionary )(*PdfShadingType5 ,error ){_bggcf :=PdfShadingType5 {};_abccb :=_cebgb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _abccb ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_adcge ,_cbeaa :=_abccb .(*_gbd .PdfObjectInteger );if !_cbeaa {_db .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abccb );
return nil ,_gbd .ErrTypeError ;};_bggcf .BitsPerCoordinate =_adcge ;_abccb =_cebgb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _abccb ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_adcge ,_cbeaa =_abccb .(*_gbd .PdfObjectInteger );if !_cbeaa {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_abccb );
return nil ,_gbd .ErrTypeError ;};_bggcf .BitsPerComponent =_adcge ;_abccb =_cebgb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _abccb ==nil {_db .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_adcge ,_cbeaa =_abccb .(*_gbd .PdfObjectInteger );if !_cbeaa {_db .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_abccb );
return nil ,_gbd .ErrTypeError ;};_bggcf .VerticesPerRow =_adcge ;_abccb =_cebgb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _abccb ==nil {_db .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddcac ,_cbeaa :=_abccb .(*_gbd .PdfObjectArray );if !_cbeaa {_db .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abccb );
return nil ,_gbd .ErrTypeError ;};_bggcf .Decode =_ddcac ;if _fcag :=_cebgb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fcag !=nil {_bggcf .Function =[]PdfFunction {};if _cdbfd ,_fdcfb :=_fcag .(*_gbd .PdfObjectArray );_fdcfb {for _ ,_gafcc :=range _cdbfd .Elements (){_beacga ,_deaegd :=_dbege (_gafcc );
if _deaegd !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_deaegd );return nil ,_deaegd ;};_bggcf .Function =append (_bggcf .Function ,_beacga );
};}else {_ggaebf ,_acedd :=_dbege (_fcag );if _acedd !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acedd );return nil ,_acedd ;
};_bggcf .Function =append (_bggcf .Function ,_ggaebf );};};return &_bggcf ,nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _bd .Time ){_adefd .Lock ();defer _adefd .Unlock ();_cddg =modifiedDate ;};func (_ggbggd *PdfWriter )writeString (_gccfc string ){if _ggbggd ._cfdbe !=nil {return ;};_cbcga ,_fafb :=_ggbggd ._adefdc .WriteString (_gccfc );
_ggbggd ._fdff +=int64 (_cbcga );_ggbggd ._cfdbe =_fafb ;};func _dbege (_fabf _gbd .PdfObject )(PdfFunction ,error ){_fabf =_gbd .ResolveReference (_fabf );if _bgcd ,_bcbgf :=_fabf .(*_gbd .PdfObjectStream );_bcbgf {_edef :=_bgcd .PdfObjectDictionary ;
_agdd ,_faeg :=_edef .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gbd .PdfObjectInteger );if !_faeg {_db .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_agdd ==0{return _gdag (_bgcd );}else if *_agdd ==4{return _aegc (_bgcd );
}else {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _adddb ,_gbgcd :=_fabf .(*_gbd .PdfIndirectObject );_gbgcd {_cfdfcg ,_ddfbc :=_adddb .PdfObject .(*_gbd .PdfObjectDictionary );
if !_ddfbc {_db .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ddfa ,_ddfbc :=_cfdfcg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gbd .PdfObjectInteger );
if !_ddfbc {_db .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_ddfa ==2{return _eafc (_adddb );}else if *_ddfa ==3{return _adbg (_adddb );}else {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _agdac ,_gcfa :=_fabf .(*_gbd .PdfObjectDictionary );
_gcfa {_bgdaf ,_dffa :=_agdac .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gbd .PdfObjectInteger );if !_dffa {_db .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bgdaf ==2{return _eafc (_agdac );}else if *_bgdaf ==3{return _adbg (_agdac );
}else {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_db .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fabf );
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfObject implements interface PdfModel.
func (_eaaa *PdfAnnotationInk )ToPdfObject ()_gbd .PdfObject {_eaaa .PdfAnnotation .ToPdfObject ();_dbcc :=_eaaa ._faa ;_dade :=_dbcc .PdfObject .(*_gbd .PdfObjectDictionary );_eaaa .PdfAnnotationMarkup .appendToPdfDictionary (_dade );_dade .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0049\u006e\u006b"));
_dade .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_eaaa .InkList );_dade .SetIfNotNil ("\u0042\u0053",_eaaa .BS );return _dbcc ;};

// AllFields returns a flattened list of all fields in the form.
func (_abbee *PdfAcroForm )AllFields ()[]*PdfField {if _abbee ==nil {return nil ;};var _acgf []*PdfField ;if _abbee .Fields !=nil {for _ ,_gfbe :=range *_abbee .Fields {_acgf =append (_acgf ,_dged (_gfbe )...);};};return _acgf ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_gbd .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gfec *_gbd .PdfIndirectObject ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gbd .PdfObject ;LE _gbd .PdfObject ;BS _gbd .PdfObject ;IC _gbd .PdfObject ;BE _gbd .PdfObject ;IT _gbd .PdfObject ;Measure _gbd .PdfObject ;};func (_bbfca *PdfReader )newPdfAnnotationHighlightFromDict (_ffccd *_gbd .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_aae :=PdfAnnotationHighlight {};
_agad ,_fecf :=_bbfca .newPdfAnnotationMarkupFromDict (_ffccd );if _fecf !=nil {return nil ,_fecf ;};_aae .PdfAnnotationMarkup =_agad ;_aae .QuadPoints =_ffccd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aae ,nil ;};func (_ebed *PdfReader )newPdfAnnotationFreeTextFromDict (_egce *_gbd .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_bcdgf :=PdfAnnotationFreeText {};
_ebedc ,_acdb :=_ebed .newPdfAnnotationMarkupFromDict (_egce );if _acdb !=nil {return nil ,_acdb ;};_bcdgf .PdfAnnotationMarkup =_ebedc ;_bcdgf .DA =_egce .Get ("\u0044\u0041");_bcdgf .Q =_egce .Get ("\u0051");_bcdgf .RC =_egce .Get ("\u0052\u0043");_bcdgf .DS =_egce .Get ("\u0044\u0053");
_bcdgf .CL =_egce .Get ("\u0043\u004c");_bcdgf .IT =_egce .Get ("\u0049\u0054");_bcdgf .BE =_egce .Get ("\u0042\u0045");_bcdgf .RD =_egce .Get ("\u0052\u0044");_bcdgf .BS =_egce .Get ("\u0042\u0053");_bcdgf .LE =_egce .Get ("\u004c\u0045");return &_bcdgf ,nil ;
};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_agfgb *PdfColorspaceICCBased )ToPdfObject ()_gbd .PdfObject {_bacg :=&_gbd .PdfObjectArray {};_bacg .Append (_gbd .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cgbe *_gbd .PdfObjectStream ;if _agfgb ._afe !=nil {_cgbe =_agfgb ._afe ;
}else {_cgbe =&_gbd .PdfObjectStream {};};_aggd :=_gbd .MakeDict ();_aggd .Set ("\u004e",_gbd .MakeInteger (int64 (_agfgb .N )));if _agfgb .Alternate !=nil {_aggd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_agfgb .Alternate .ToPdfObject ());};
if _agfgb .Metadata !=nil {_aggd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_agfgb .Metadata );};if _agfgb .Range !=nil {var _edfb []_gbd .PdfObject ;for _ ,_bfebc :=range _agfgb .Range {_edfb =append (_edfb ,_gbd .MakeFloat (_bfebc ));};
_aggd .Set ("\u0052\u0061\u006eg\u0065",_gbd .MakeArray (_edfb ...));};_aggd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_agfgb .Data ))));_cgbe .Stream =_agfgb .Data ;_cgbe .PdfObjectDictionary =_aggd ;_bacg .Append (_cgbe );
if _agfgb ._ecgdd !=nil {_agfgb ._ecgdd .PdfObject =_bacg ;return _agfgb ._ecgdd ;};return _bacg ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_feeb *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbcec :=func (_bcfb float64 )float64 {if _bcfb >=6.0/29{return _bcfb *_bcfb *_bcfb ;};return 108.0/841*(_bcfb -4/29);};_ddfbb ,_agbb :=color .(*PdfColorLab );if !_agbb {_db .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ddfbb .L ();AStar :=_ddfbb .A ();BStar :=_ddfbb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_feeb .WhitePoint [0]*_bbcec (L );Y :=_feeb .WhitePoint [1]*_bbcec (M );Z :=_feeb .WhitePoint [2]*_bbcec (N );_aegf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ebgf :=-0.969256*X +1.875992*Y +0.041556*Z ;_degg :=0.055648*X +-0.204043*Y +1.057311*Z ;_aegf =_ga .Min (_ga .Max (_aegf ,0),1.0);
_ebgf =_ga .Min (_ga .Max (_ebgf ,0),1.0);_degg =_ga .Min (_ga .Max (_degg ,0),1.0);return NewPdfColorDeviceRGB (_aegf ,_ebgf ,_degg ),nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cdcag *PdfPageResources )GetContainingPdfObject ()_gbd .PdfObject {return _cdcag ._bfgbc };func (_bfad *PdfReader )newPdfAnnotationPolygonFromDict (_bce *_gbd .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_bedb :=PdfAnnotationPolygon {};
_bea ,_feb :=_bfad .newPdfAnnotationMarkupFromDict (_bce );if _feb !=nil {return nil ,_feb ;};_bedb .PdfAnnotationMarkup =_bea ;_bedb .Vertices =_bce .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bedb .LE =_bce .Get ("\u004c\u0045");_bedb .BS =_bce .Get ("\u0042\u0053");
_bedb .IC =_bce .Get ("\u0049\u0043");_bedb .BE =_bce .Get ("\u0042\u0045");_bedb .IT =_bce .Get ("\u0049\u0054");_bedb .Measure =_bce .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bedb ,nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gegg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_gbd .PdfObject {_ceda :=_gbd .MakeDict ();if _gegg .Subtype !=nil {_ceda .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gegg .Subtype );};_ceda .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gegg .Colorants );
_ceda .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gegg .Process );_ceda .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gegg .MixingHints );if _gegg ._fcafb !=nil {_gegg ._fcafb .PdfObject =_ceda ;return _gegg ._fcafb ;
};return _ceda ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_abgaa *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _gbd .GetNumberAsFloat (_abgaa .Descent );};func _ddeda (_eecdg _gbd .PdfObject )(*PdfColorspaceCalGray ,error ){_acage :=NewPdfColorspaceCalGray ();if _bffa ,_gfee :=_eecdg .(*_gbd .PdfIndirectObject );
_gfee {_acage ._fbcg =_bffa ;};_eecdg =_gbd .TraceToDirectObject (_eecdg );_cgcg ,_fgac :=_eecdg .(*_gbd .PdfObjectArray );if !_fgac {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cgcg .Len ()!=2{return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_eecdg =_gbd .TraceToDirectObject (_cgcg .Get (0));_adgf ,_fgac :=_eecdg .(*_gbd .PdfObjectName );if !_fgac {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_adgf !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_a .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_eecdg =_gbd .TraceToDirectObject (_cgcg .Get (1));
_cdaec ,_fgac :=_eecdg .(*_gbd .PdfObjectDictionary );if !_fgac {return nil ,_a .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_eecdg =_cdaec .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_eecdg =_gbd .TraceToDirectObject (_eecdg );_fecfe ,_fgac :=_eecdg .(*_gbd .PdfObjectArray );if !_fgac {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _fecfe .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dbg ,_gcdgd :=_fecfe .GetAsFloat64Slice ();
if _gcdgd !=nil {return nil ,_gcdgd ;};_acage .WhitePoint =_dbg ;_eecdg =_cdaec .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _eecdg !=nil {_eecdg =_gbd .TraceToDirectObject (_eecdg );_gegb ,_fggc :=_eecdg .(*_gbd .PdfObjectArray );
if !_fggc {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _gegb .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_aaaf ,_dga :=_gegb .GetAsFloat64Slice ();if _dga !=nil {return nil ,_dga ;};_acage .BlackPoint =_aaaf ;};_eecdg =_cdaec .Get ("\u0047\u0061\u006dm\u0061");if _eecdg !=nil {_eecdg =_gbd .TraceToDirectObject (_eecdg );_babac ,_acdge :=_gbd .GetNumberAsFloat (_eecdg );
if _acdge !=nil {return nil ,_a .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_acage .Gamma =_babac ;};return _acage ,nil ;};func (_cbda *PdfAppender )addNewObject (_cdgf _gbd .PdfObject ){if _ ,_afbc :=_cbda ._gbcd [_cdgf ];
!_afbc {_cbda ._cagf =append (_cbda ._cagf ,_cdgf );_cbda ._gbcd [_cdgf ]=struct{}{};};};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gafc :=&PdfColorspaceDeviceN {};return _gafc };func (_dcfgd *PdfReader )loadAnnotations (_bfgce _gbd .PdfObject )([]*PdfAnnotation ,error ){_cbebe ,_gdbeb :=_gbd .GetArray (_bfgce );if !_gdbeb {return nil ,_a .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gffd []*PdfAnnotation ;for _ ,_cccbb :=range _cbebe .Elements (){_cccbb =_gbd .ResolveReference (_cccbb );if _ ,_ceae :=_cccbb .(*_gbd .PdfObjectNull );_ceae {continue ;};_cedeg ,_cebe :=_cccbb .(*_gbd .PdfObjectDictionary );_bbebd ,_ddcbe :=_cccbb .(*_gbd .PdfIndirectObject );
if _cebe {_bbebd =&_gbd .PdfIndirectObject {};_bbebd .PdfObject =_cedeg ;}else {if !_ddcbe {return nil ,_a .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gegda ,_cafaf :=_dcfgd .newPdfAnnotationFromIndirectObject (_bbebd );if _cafaf !=nil {return nil ,_cafaf ;};switch _bgdff :=_gegda .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_cggegg :=range _dcfgd .AcroForm .AllFields (){if _cggegg ._beee ==_bgdff .Parent {_bgdff ._fbb =_cggegg ;
break ;};};};if _gegda !=nil {_gffd =append (_gffd ,_gegda );};};return _gffd ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dcc *PdfAnnotationWidget )Field ()*PdfField {return _dcc ._fbb };func (_ggea *DSS )addCerts (_ffdf [][]byte )([]*_gbd .PdfObjectStream ,error ){return _ggea .add (&_ggea .Certs ,_ggea ._eefg ,_ffdf );};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cbggb int64 ;_bcgdc int64 ;_dddf int64 ;_baec int64 ;_becfe int64 ;_edcee int64 ;_acecf byte ;_cdeag int64 ;_ebaed int64 ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_dafdc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bffaea :=_dafdc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bffaea )> 0;_cbbec :=_gbd .NewFlateEncoder ();_acafe :=_gbd .MakeArray ();if wrapContents {_bfgbb ,_acbf :=_gbd .MakeStream ([]byte ("\u0071\u000a"),_cbbec );
if _acbf !=nil {return _acbf ;};_acafe .Append (_bfgbb );};_acafe .Append (_bffaea ...);if wrapContents {_debc ,_ggffb :=_gbd .MakeStream ([]byte ("\u000a\u0051\u000a"),_cbbec );if _ggffb !=nil {return _ggffb ;};_acafe .Append (_debc );};_gdad ,_egfgb :=_gbd .MakeStream (cs ,_cbbec );
if _egfgb !=nil {return _egfgb ;};_acafe .Append (_gdad );_dafdc .Contents =_acafe ;return nil ;};func _aece (_fbeb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bbgfb ,_gabfg :=_gbd .GetDict (_fbeb .AP );if !_gabfg {return nil ,nil ,_ff .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _bbgfb ==nil {return nil ,nil ,nil ;};_cdgac ,_gabfg :=_gbd .GetArray (_fbeb .Rect );if !_gabfg ||_cdgac .Len ()!=4{return nil ,nil ,_ff .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bcgf ,_abdbe :=NewPdfRectangle (*_cdgac );
if _abdbe !=nil {return nil ,nil ,_abdbe ;};_efgc :=_gbd .TraceToDirectObject (_bbgfb .Get ("\u004e"));switch _dcceeg :=_efgc .(type ){case *_gbd .PdfObjectStream :_geff :=_dcceeg ;_dadbd ,_decc :=NewXObjectFormFromStream (_geff );return _dadbd ,_bcgf ,_decc ;
case *_gbd .PdfObjectDictionary :_addb :=_dcceeg ;_cbfd ,_gdfbb :=_gbd .GetName (_fbeb .AS );if !_gdfbb {return nil ,nil ,nil ;};if _addb .Get (*_cbfd )==nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_cdcc ,_gdfbb :=_gbd .GetStream (_addb .Get (*_cbfd ));if !_gdfbb {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_cbfd );
return nil ,nil ,_ff .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_edgga ,_fcbef :=NewXObjectFormFromStream (_cdcc );return _edgga ,_bcgf ,_fcbef ;};_db .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_efgc );
return nil ,nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cgcce *XObjectImage )ToImage ()(*Image ,error ){_fdecf :=&Image {};if _cgcce .Height ==nil {return nil ,_ff .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fdecf .Height =*_cgcce .Height ;if _cgcce .Width ==nil {return nil ,_ff .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fdecf .Width =*_cgcce .Width ;if _cgcce .BitsPerComponent ==nil {switch _cgcce .Filter .(type ){case *_gbd .CCITTFaxEncoder ,*_gbd .JBIG2Encoder :_fdecf .BitsPerComponent =1;
case *_gbd .LZWEncoder ,*_gbd .RunLengthEncoder :_fdecf .BitsPerComponent =8;default:return nil ,_ff .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fdecf .BitsPerComponent =*_cgcce .BitsPerComponent ;};_fdecf .ColorComponents =_cgcce .ColorSpace .GetNumComponents ();_cgcce ._dcaea .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gbd .MakeInteger (int64 (_fdecf .ColorComponents )));
_eagc ,_afdbe :=_gbd .DecodeStream (_cgcce ._dcaea );if _afdbe !=nil {return nil ,_afdbe ;};_fdecf .Data =_eagc ;if _cgcce .Decode !=nil {_ccec ,_faaee :=_cgcce .Decode .(*_gbd .PdfObjectArray );if !_faaee {_db .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gdegee ,_cfadg :=_ccec .ToFloat64Array ();if _cfadg !=nil {return nil ,_cfadg ;};_fdecf ._dadd =_gdegee ;};return _fdecf ,nil ;};func (_ceade *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bcebg :=_ceade .Parent ;
for _bcebg !=nil {_acecc ,_gagd :=_gbd .GetDict (_bcebg );if !_gagd {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _bbcea :=_acecc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bbcea !=nil {_eccbg ,_cfedb :=_gbd .GetDict (_bbcea );if !_cfedb {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_ecfebb ,_adad :=NewPdfPageResourcesFromDict (_eccbg );if _adad !=nil {return nil ,_adad ;};return _ecfebb ,nil ;};_bcebg =_acecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _acga .ReadSeeker )(*PdfFont ,error ){const _gecc =_dc .CharCode (32);const _ababe =_dc .CharCode (255);_cedg ,_aefb :=_bf .ReadAll (r );if _aefb !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aefb );
return nil ,_aefb ;};_bagdc ,_aefb :=_fad .TtfParse (_cd .NewReader (_cedg ));if _aefb !=nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_aefb );
return nil ,_aefb ;};_abeee :=&pdfFontSimple {_fgaa :make (map[_dc .CharCode ]float64 ),fontCommon :fontCommon {_bbecf :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_abeee ._cfeea =_dc .NewWinAnsiEncoder ();_abeee ._dgcff =_bagdc .PostScriptName ;
_abeee .FirstChar =_gbd .MakeInteger (int64 (_gecc ));_abeee .LastChar =_gbd .MakeInteger (int64 (_ababe ));_babc :=1000.0/float64 (_bagdc .UnitsPerEm );if len (_bagdc .Widths )<=0{return nil ,_ff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gebb :=_babc *float64 (_bagdc .Widths [0]);_cagc :=make ([]float64 ,0,_ababe -_gecc +1);for _abae :=_gecc ;_abae <=_ababe ;_abae ++{_dgfac ,_edaec :=_abeee .Encoder ().CharcodeToRune (_abae );if !_edaec {_db .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_abae );
_cagc =append (_cagc ,_gebb );continue ;};_acgcg ,_fadeb :=_bagdc .Chars [_dgfac ];if !_fadeb {_db .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cagc =append (_cagc ,_gebb );continue ;
};_cfcbf :=_babc *float64 (_bagdc .Widths [_acgcg ]);_cagc =append (_cagc ,_cfcbf );};_abeee .Widths =_gbd .MakeIndirectObject (_gbd .MakeArrayFromFloats (_cagc ));if len (_cagc )< int (_ababe -_gecc +1){_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cagc ),255-32+1);
return nil ,_gbd .ErrRangeError ;};for _dccde :=_gecc ;_dccde <=_ababe ;_dccde ++{_abeee ._fgaa [_dccde ]=_cagc [_dccde -_gecc ];};_abeee .Encoding =_gbd .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bcdbf :=&PdfFontDescriptor {};
_bcdbf .FontName =_gbd .MakeName (_bagdc .PostScriptName );_bcdbf .Ascent =_gbd .MakeFloat (_babc *float64 (_bagdc .TypoAscender ));_bcdbf .Descent =_gbd .MakeFloat (_babc *float64 (_bagdc .TypoDescender ));_bcdbf .CapHeight =_gbd .MakeFloat (_babc *float64 (_bagdc .CapHeight ));
_bcdbf .FontBBox =_gbd .MakeArrayFromFloats ([]float64 {_babc *float64 (_bagdc .Xmin ),_babc *float64 (_bagdc .Ymin ),_babc *float64 (_bagdc .Xmax ),_babc *float64 (_bagdc .Ymax )});_bcdbf .ItalicAngle =_gbd .MakeFloat (_bagdc .ItalicAngle );_bcdbf .MissingWidth =_gbd .MakeFloat (_babc *float64 (_bagdc .Widths [0]));
_bfcca ,_aefb :=_gbd .MakeStream (_cedg ,_gbd .NewFlateEncoder ());if _aefb !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aefb );
return nil ,_aefb ;};_bfcca .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gbd .MakeInteger (int64 (len (_cedg ))));_bcdbf .FontFile2 =_bfcca ;if _bagdc .Bold {_bcdbf .StemV =_gbd .MakeInteger (120);}else {_bcdbf .StemV =_gbd .MakeInteger (70);
};_gcbeg :=_abbd ;if _bagdc .IsFixedPitch {_gcbeg |=_efab ;};if _bagdc .ItalicAngle !=0{_gcbeg |=_fgcfe ;};_bcdbf .Flags =_gbd .MakeInteger (int64 (_gcbeg ));_abeee ._ggff =_bcdbf ;_cbed :=&PdfFont {_bbddd :_abeee };return _cbed ,nil ;};var (_adefd _ac .Mutex ;
_bdbcf ="";_acfbb _bd .Time ;_ddcde ="";_dddfe ="";_cddg _bd .Time ;_efef ="";_ggbc ="";_eaeed ="";);func _gfbd (_ffec _gbd .PdfObject )(*PdfBorderStyle ,error ){_dfef :=&PdfBorderStyle {};_dfef ._gebe =_ffec ;var _dbdcc *_gbd .PdfObjectDictionary ;_ffec =_gbd .TraceToDirectObject (_ffec );
_dbdcc ,_bbac :=_ffec .(*_gbd .PdfObjectDictionary );if !_bbac {return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _cac :=_dbdcc .Get ("\u0054\u0079\u0070\u0065");_cac !=nil {_bgc ,_bcb :=_cac .(*_gbd .PdfObjectName );
if !_bcb {_db .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_cac );
}else {if *_bgc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_db .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bgc );};};};if _ebbc :=_dbdcc .Get ("\u0057");
_ebbc !=nil {_aacd ,_eebc :=_gbd .GetNumberAsFloat (_ebbc );if _eebc !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_eebc );return nil ,_eebc ;};_dfef .W =&_aacd ;
};if _gaea :=_dbdcc .Get ("\u0053");_gaea !=nil {_dcec ,_fcaf :=_gaea .(*_gbd .PdfObjectName );if !_fcaf {return nil ,_ff .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _addd BorderStyle ;switch *_dcec {case "\u0053":_addd =BorderStyleSolid ;case "\u0044":_addd =BorderStyleDashed ;case "\u0042":_addd =BorderStyleBeveled ;case "\u0049":_addd =BorderStyleInset ;case "\u0055":_addd =BorderStyleUnderline ;default:_db .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_dcec );
return nil ,_ff .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dfef .S =&_addd ;};if _eaf :=_dbdcc .Get ("\u0044");_eaf !=nil {_beea ,_bdca :=_eaf .(*_gbd .PdfObjectArray );
if !_bdca {_db .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_eaf );return nil ,_ff .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_acag ,_aff :=_beea .ToIntegerArray ();if _aff !=nil {_db .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_aff );
return nil ,_aff ;};_dfef .D =&_acag ;};return _dfef ,nil ;};func _caafb ()string {_adefd .Lock ();defer _adefd .Unlock ();return _dddfe };func (_ebag *DSS )generateHashMap (_aagd []*_gbd .PdfObjectStream )(map[string ]*_gbd .PdfObjectStream ,error ){_bfeda :=map[string ]*_gbd .PdfObjectStream {};
for _ ,_agff :=range _aagd {_cfab ,_ddcg :=_gbd .DecodeStream (_agff );if _ddcg !=nil {return nil ,_ddcg ;};_cggfc ,_ddcg :=_agcfd (_cfab );if _ddcg !=nil {return nil ,_ddcg ;};_bfeda [string (_cggfc )]=_agff ;};return _bfeda ,nil ;};func (_cgga *PdfReader )newPdfAnnotationTextFromDict (_fddg *_gbd .PdfObjectDictionary )(*PdfAnnotationText ,error ){_bfea :=PdfAnnotationText {};
_dgd ,_fbeg :=_cgga .newPdfAnnotationMarkupFromDict (_fddg );if _fbeg !=nil {return nil ,_fbeg ;};_bfea .PdfAnnotationMarkup =_dgd ;_bfea .Open =_fddg .Get ("\u004f\u0070\u0065\u006e");_bfea .Name =_fddg .Get ("\u004e\u0061\u006d\u0065");_bfea .State =_fddg .Get ("\u0053\u0074\u0061t\u0065");
_bfea .StateModel =_fddg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_bfea ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;const (_efab =0x00001;_gecff =0x00002;_eeeb =0x00004;_cgcd =0x00008;_abbd =0x00020;_fgcfe =0x00040;_fgef =0x10000;_fgefc =0x20000;_cgfb =0x40000;);

// ToPdfObject implements interface PdfModel.
func (_agadc *PdfAnnotationPolygon )ToPdfObject ()_gbd .PdfObject {_agadc .PdfAnnotation .ToPdfObject ();_ebga :=_agadc ._faa ;_fffcg :=_ebga .PdfObject .(*_gbd .PdfObjectDictionary );_agadc .PdfAnnotationMarkup .appendToPdfDictionary (_fffcg );_fffcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fffcg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_agadc .Vertices );_fffcg .SetIfNotNil ("\u004c\u0045",_agadc .LE );_fffcg .SetIfNotNil ("\u0042\u0053",_agadc .BS );_fffcg .SetIfNotNil ("\u0049\u0043",_agadc .IC );_fffcg .SetIfNotNil ("\u0042\u0045",_agadc .BE );
_fffcg .SetIfNotNil ("\u0049\u0054",_agadc .IT );_fffcg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_agadc .Measure );return _ebga ;};func (_bbcad *PdfReader )lookupPageByObject (_gfcf _gbd .PdfObject )(*PdfPage ,error ){return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_gbgd *BorderStyle )GetPdfName ()string {switch *_gbgd {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_eba :=NewPdfAnnotation ();_gcga :=&PdfAnnotationWidget {};_gcga .PdfAnnotation =_eba ;_eba .SetContext (_gcga );return _gcga ;};func (_ecac *PdfReader )newPdfActionResetFormFromDict (_dac *_gbd .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dac .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dac .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_edab *PdfAnnotationWatermark )ToPdfObject ()_gbd .PdfObject {_edab .PdfAnnotation .ToPdfObject ();_dgbg :=_edab ._faa ;_fbd :=_dgbg .PdfObject .(*_gbd .PdfObjectDictionary );_fbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_fbd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_edab .FixedPrint );return _dgbg ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_eagbd *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ba .PSProgram ;_gdgf *_ba .PSExecutor ;_gdcd []byte ;_eebd *_gbd .PdfObjectStream ;};func (_cfe *PdfReader )newPdfActionHideFromDict (_cegc *_gbd .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cegc .Get ("\u0054"),H :_cegc .Get ("\u0048")},nil ;
};

// SetOCProperties sets the optional content properties.
func (_dgbfac *PdfWriter )SetOCProperties (ocProperties _gbd .PdfObject )error {_bcdaa :=_dgbfac ._dbecd ;if ocProperties !=nil {_db .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bcdaa .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dgbfac .addObjects (ocProperties );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_febda *PdfAnnotationLine )ToPdfObject ()_gbd .PdfObject {_febda .PdfAnnotation .ToPdfObject ();_bada :=_febda ._faa ;_bafc :=_bada .PdfObject .(*_gbd .PdfObjectDictionary );_febda .PdfAnnotationMarkup .appendToPdfDictionary (_bafc );_bafc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u004c\u0069\u006e\u0065"));
_bafc .SetIfNotNil ("\u004c",_febda .L );_bafc .SetIfNotNil ("\u0042\u0053",_febda .BS );_bafc .SetIfNotNil ("\u004c\u0045",_febda .LE );_bafc .SetIfNotNil ("\u0049\u0043",_febda .IC );_bafc .SetIfNotNil ("\u004c\u004c",_febda .LL );_bafc .SetIfNotNil ("\u004c\u004c\u0045",_febda .LLE );
_bafc .SetIfNotNil ("\u0043\u0061\u0070",_febda .Cap );_bafc .SetIfNotNil ("\u0049\u0054",_febda .IT );_bafc .SetIfNotNil ("\u004c\u004c\u004f",_febda .LLO );_bafc .SetIfNotNil ("\u0043\u0050",_febda .CP );_bafc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_febda .Measure );
_bafc .SetIfNotNil ("\u0043\u004f",_febda .CO );return _bada ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _gbd .PdfObject )(*PdfFilespec ,error ){_aebd :=&PdfFilespec {};var _fbgc *_gbd .PdfObjectDictionary ;if _edbgd ,_egga :=_gbd .GetIndirect (obj );_egga {_aebd ._aeace =_edbgd ;_dfcgg ,_fcaba :=_gbd .GetDict (_edbgd .PdfObject );
if !_fcaba {_db .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gbd .ErrTypeError ;};_fbgc =_dfcgg ;}else if _aadad ,_bfcb :=_gbd .GetDict (obj );
_bfcb {_aebd ._aeace =_aadad ;_fbgc =_aadad ;}else {_db .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_gbd .ErrTypeError ;};if _fbgc ==nil {_db .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _degd :=_fbgc .Get ("\u0054\u0079\u0070\u0065");_degd !=nil {_dafc ,_ceddg :=_degd .(*_gbd .PdfObjectName );if !_ceddg {_db .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_degd );
}else {if *_dafc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_db .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_dafc );
};};};if _abcaf :=_fbgc .Get ("\u0046\u0053");_abcaf !=nil {_aebd .FS =_abcaf ;};if _dgbc :=_fbgc .Get ("\u0046");_dgbc !=nil {_aebd .F =_dgbc ;};if _cdaa :=_fbgc .Get ("\u0055\u0046");_cdaa !=nil {_aebd .UF =_cdaa ;};if _bbbe :=_fbgc .Get ("\u0044\u004f\u0053");
_bbbe !=nil {_aebd .DOS =_bbbe ;};if _gadd :=_fbgc .Get ("\u004d\u0061\u0063");_gadd !=nil {_aebd .Mac =_gadd ;};if _bfbgd :=_fbgc .Get ("\u0055\u006e\u0069\u0078");_bfbgd !=nil {_aebd .Unix =_bfbgd ;};if _bbdg :=_fbgc .Get ("\u0049\u0044");_bbdg !=nil {_aebd .ID =_bbdg ;
};if _eccf :=_fbgc .Get ("\u0056");_eccf !=nil {_aebd .V =_eccf ;};if _daag :=_fbgc .Get ("\u0045\u0046");_daag !=nil {_aebd .EF =_daag ;};if _abga :=_fbgc .Get ("\u0052\u0046");_abga !=nil {_aebd .RF =_abga ;};if _ffdb :=_fbgc .Get ("\u0044\u0065\u0073\u0063");
_ffdb !=nil {_aebd .Desc =_ffdb ;};if _fcac :=_fbgc .Get ("\u0043\u0049");_fcac !=nil {_aebd .CI =_fcac ;};return _aebd ,nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _acga .ReadSeeker )(*PdfFont ,error ){_fcdfe ,_dfgf :=_bf .ReadAll (r );if _dfgf !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dfgf );
return nil ,_dfgf ;};_dcgfd ,_dfgf :=_fad .TtfParse (_cd .NewReader (_fcdfe ));if _dfgf !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_dfgf );
return nil ,_dfgf ;};_cdegd :=&pdfCIDFontType2 {fontCommon :fontCommon {_bbecf :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_gbd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dcgfd .Widths )<=0{return nil ,_ff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ccfeb :=1000.0/float64 (_dcgfd .UnitsPerEm );_bcffd :=_ccfeb *float64 (_dcgfd .Widths [0]);_efbce :=make (map[rune ]int );_cagd :=make (map[_fad .GID ]int );_efdgg :=_fad .GID (len (_dcgfd .Widths ));for _aadb ,_bdda :=range _dcgfd .Chars {if _bdda > _efdgg -1{continue ;
};_bdff :=int (_ccfeb *float64 (_dcgfd .Widths [_bdda ]));_efbce [_aadb ]=_bdff ;_cagd [_bdda ]=_bdff ;};_cdegd ._ggbed =_efbce ;_cdegd .DW =_gbd .MakeInteger (int64 (_bcffd ));_ggdca :=_gabfbe (_cagd ,uint16 (_efdgg ));_cdegd .W =_gbd .MakeIndirectObject (_ggdca );
_dbac :=_gbd .MakeDict ();_dbac .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_gbd .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dbac .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_gbd .MakeString ("\u0041\u0064\u006fb\u0065"));
_dbac .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_gbd .MakeInteger (0));_cdegd .CIDSystemInfo =_dbac ;_fadc :=&PdfFontDescriptor {FontName :_gbd .MakeName (_dcgfd .PostScriptName ),Ascent :_gbd .MakeFloat (_ccfeb *float64 (_dcgfd .TypoAscender )),Descent :_gbd .MakeFloat (_ccfeb *float64 (_dcgfd .TypoDescender )),CapHeight :_gbd .MakeFloat (_ccfeb *float64 (_dcgfd .CapHeight )),FontBBox :_gbd .MakeArrayFromFloats ([]float64 {_ccfeb *float64 (_dcgfd .Xmin ),_ccfeb *float64 (_dcgfd .Ymin ),_ccfeb *float64 (_dcgfd .Xmax ),_ccfeb *float64 (_dcgfd .Ymax )}),ItalicAngle :_gbd .MakeFloat (_dcgfd .ItalicAngle ),MissingWidth :_gbd .MakeFloat (_bcffd )};
_daed ,_dfgf :=_gbd .MakeStream (_fcdfe ,_gbd .NewFlateEncoder ());if _dfgf !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dfgf );
return nil ,_dfgf ;};_daed .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gbd .MakeInteger (int64 (len (_fcdfe ))));_fadc .FontFile2 =_daed ;if _dcgfd .Bold {_fadc .StemV =_gbd .MakeInteger (120);}else {_fadc .StemV =_gbd .MakeInteger (70);
};_abacc :=_eeeb ;if _dcgfd .IsFixedPitch {_abacc |=_efab ;};if _dcgfd .ItalicAngle !=0{_abacc |=_fgcfe ;};_fadc .Flags =_gbd .MakeInteger (int64 (_abacc ));_cdegd ._dgcff =_dcgfd .PostScriptName ;_cdegd ._ggff =_fadc ;_fgaca :=pdfFontType0 {fontCommon :fontCommon {_bbecf :"\u0054\u0079\u0070e\u0030",_dgcff :_dcgfd .PostScriptName },DescendantFont :&PdfFont {_bbddd :_cdegd },Encoding :_gbd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_dfcd :_dcgfd .NewEncoder ()};
if len (_dcgfd .Chars )> 0{_cecb :=make (map[_bgg .CharCode ]rune ,len (_dcgfd .Chars ));for _defbb ,_badfb :=range _dcgfd .Chars {_fedee :=_bgg .CharCode (_badfb );if _efgg ,_fada :=_cecb [_fedee ];!_fada ||(_fada &&_efgg > _defbb ){_cecb [_fedee ]=_defbb ;
};};_fgaca ._agcgb =_bgg .NewToUnicodeCMap (_cecb );};_ebfg :=PdfFont {_bbddd :&_fgaca };return &_ebfg ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ddde :=&PdfOutlineItem {_baea :_gbd .MakeIndirectObject (_gbd .MakeDict ())};_ddde ._aagcd =_ddde ;return _ddde ;};

// GetNumPages returns the number of pages in the document.
func (_fecee *PdfReader )GetNumPages ()(int ,error ){if _fecee ._dagg .GetCrypter ()!=nil &&!_fecee ._dagg .IsAuthenticated (){return 0,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_fecee ._dfgeb ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_faef *PdfAnnotationPolyLine )ToPdfObject ()_gbd .PdfObject {_faef .PdfAnnotation .ToPdfObject ();_ccfe :=_faef ._faa ;_aadc :=_ccfe .PdfObject .(*_gbd .PdfObjectDictionary );_faef .PdfAnnotationMarkup .appendToPdfDictionary (_aadc );_aadc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_aadc .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_faef .Vertices );_aadc .SetIfNotNil ("\u004c\u0045",_faef .LE );_aadc .SetIfNotNil ("\u0042\u0053",_faef .BS );_aadc .SetIfNotNil ("\u0049\u0043",_faef .IC );_aadc .SetIfNotNil ("\u0042\u0045",_faef .BE );
_aadc .SetIfNotNil ("\u0049\u0054",_faef .IT );_aadc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_faef .Measure );return _ccfe ;};

// B returns the value of the B component of the color.
func (_afgb *PdfColorLab )B ()float64 {return _afgb [2]};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_aecce *PdfWriter )SetOpenAction (dest _gbd .PdfObject )error {if dest ==nil ||_gbd .IsNullObject (dest ){return nil ;};_aecce ._dbecd .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _aecce .addObjects (dest );};


// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dedgg *Image )GetParamsDict ()*_gbd .PdfObjectDictionary {_gcag :=_gbd .MakeDict ();_gcag .Set ("\u0057\u0069\u0064t\u0068",_gbd .MakeInteger (_dedgg .Width ));_gcag .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gbd .MakeInteger (_dedgg .Height ));
_gcag .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gbd .MakeInteger (int64 (_dedgg .ColorComponents )));_gcag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbd .MakeInteger (_dedgg .BitsPerComponent ));
return _gcag ;};func (_fecg *PdfAcroForm )fillImageWithAppearance (_adcc FieldImageProvider ,_bfbb FieldAppearanceGenerator )error {if _fecg ==nil {return nil ;};_gfge ,_cdafg :=_adcc .FieldImageValues ();if _cdafg !=nil {return _cdafg ;};for _ ,_cebce :=range _fecg .AllFields (){_cgcac :=_cebce .PartialName ();
_dfcc ,_badd :=_gfge [_cgcac ];if !_badd {if _deca ,_ccfdf :=_cebce .FullName ();_ccfdf ==nil {_dfcc ,_badd =_gfge [_deca ];};};if !_badd {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cgcac );
continue ;};switch _efec :=_cebce .GetContext ().(type ){case *PdfFieldButton :if _efec .IsPush (){_efec .SetFillImage (_dfcc );};};if _bfbb ==nil {continue ;};for _ ,_gadg :=range _cebce .Annotations {_gcedf ,_gfag :=_bfbb .GenerateAppearanceDict (_fecg ,_cebce ,_gadg );
if _gfag !=nil {return _gfag ;};_gadg .AP =_gcedf ;_gadg .ToPdfObject ();};};return nil ;};func _beefe (_dgfb *_gbd .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bbfd :=PdfShadingType1 {};if _gedbf :=_dgfb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_gedbf !=nil {_gedbf =_gbd .TraceToDirectObject (_gedbf );_dfbbg ,_dfgg :=_gedbf .(*_gbd .PdfObjectArray );if !_dfgg {_db .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gedbf );
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbfd .Domain =_dfbbg ;};if _ecgfc :=_dgfb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ecgfc !=nil {_ecgfc =_gbd .TraceToDirectObject (_ecgfc );
_cdac ,_deebd :=_ecgfc .(*_gbd .PdfObjectArray );if !_deebd {_db .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecgfc );return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bbfd .Matrix =_cdac ;};_bgea :=_dgfb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bgea ==nil {_db .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bbfd .Function =[]PdfFunction {};if _dabg ,_gcafb :=_bgea .(*_gbd .PdfObjectArray );_gcafb {for _ ,_cdebf :=range _dabg .Elements (){_gcaac ,_gbga :=_dbege (_cdebf );if _gbga !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbga );
return nil ,_gbga ;};_bbfd .Function =append (_bbfd .Function ,_gcaac );};}else {_fgbed ,_gbddg :=_dbege (_bgea );if _gbddg !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbddg );
return nil ,_gbddg ;};_bbfd .Function =append (_bbfd .Function ,_fgbed );};return &_bbfd ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_bdfc *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdbbe ,_dggc :=_gbd .GetNumbersAsFloat (objects );
if _dggc !=nil {return nil ,_dggc ;};return _bdfc .ColorFromFloats (_bdbbe );};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_dcgae []_gbd .PdfObject )([]_gbd .PdfObject ,error );};func (_gbaa *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ecbe *_gbd .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ccdcf :=PdfAnnotationFileAttachment {};
_aad ,_edda :=_gbaa .newPdfAnnotationMarkupFromDict (_ecbe );if _edda !=nil {return nil ,_edda ;};_ccdcf .PdfAnnotationMarkup =_aad ;_ccdcf .FS =_ecbe .Get ("\u0046\u0053");_ccdcf .Name =_ecbe .Get ("\u004e\u0061\u006d\u0065");return &_ccdcf ,nil ;};func _geaf ()string {_cgag :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _affg _cd .Buffer ;for _fbde :=0;_fbde < 6;_fbde ++{_affg .WriteRune (rune (_cgag [_fa .Intn (len (_cgag ))]));};return _affg .String ();};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_gcde *PdfColorspaceDeviceN )ToPdfObject ()_gbd .PdfObject {_caffc :=_gbd .MakeArray (_gbd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_caffc .Append (_gcde .ColorantNames );_caffc .Append (_gcde .AlternateSpace .ToPdfObject ());_caffc .Append (_gcde .TintTransform .ToPdfObject ());
if _gcde .Attributes !=nil {_caffc .Append (_gcde .Attributes .ToPdfObject ());};if _gcde ._ecdc !=nil {_gcde ._ecdc .PdfObject =_caffc ;return _gcde ._ecdc ;};return _caffc ;};

// GetNumComponents returns the number of color components.
func (_dcgcc *PdfColorspaceICCBased )GetNumComponents ()int {return _dcgcc .N };func (_dbb *PdfReader )newPdfActionGotoFromDict (_egb *_gbd .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_egb .Get ("\u0044")},nil ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_effc ,_cfgcg :=_ec .Open (filePath );if _cfgcg !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cfgcg );
return nil ,_cfgcg ;};defer _effc .Close ();return NewPdfFontFromTTF (_effc );};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dgfc *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_cbfab :=range pages {_cbfab =_cbfab .Duplicate ();_caede (_cbfab );_dgfc ._ccbcf =append (_dgfc ._ccbcf ,_cbfab );};};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dcca *PdfFieldButton )IsCheckbox ()bool {return _dcca .GetType ()==ButtonTypeCheckbox };

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_abdbc *PdfWriter )SetOptimizer (optimizer Optimizer ){_abdbc ._deaac =optimizer };func (_abcb *PdfReader )newPdfActionMovieFromDict (_cgdb *_gbd .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cgdb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cgdb .Get ("\u0054"),Operation :_cgdb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// AddFont adds a font dictionary to the Font resources.
func (_bgdca *PdfPage )AddFont (name _gbd .PdfObjectName ,font _gbd .PdfObject )error {if _bgdca .Resources ==nil {_bgdca .Resources =NewPdfPageResources ();};if _bgdca .Resources .Font ==nil {_bgdca .Resources .Font =_gbd .MakeDict ();};_feafg ,_cbfg :=_gbd .TraceToDirectObject (_bgdca .Resources .Font ).(*_gbd .PdfObjectDictionary );
if !_cbfg {_db .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_gbd .TraceToDirectObject (_bgdca .Resources .Font ));
return _ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_feafg .Set (name ,font );return nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_bacd *PdfTilingPattern )ToPdfObject ()_gbd .PdfObject {_bacd .PdfPattern .ToPdfObject ();_bdcff :=_bacd .getDict ();if _bacd .PaintType !=nil {_bdcff .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_bacd .PaintType );};if _bacd .TilingType !=nil {_bdcff .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bacd .TilingType );
};if _bacd .BBox !=nil {_bdcff .Set ("\u0042\u0042\u006f\u0078",_bacd .BBox .ToPdfObject ());};if _bacd .XStep !=nil {_bdcff .Set ("\u0058\u0053\u0074e\u0070",_bacd .XStep );};if _bacd .YStep !=nil {_bdcff .Set ("\u0059\u0053\u0074e\u0070",_bacd .YStep );
};if _bacd .Resources !=nil {_bdcff .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bacd .Resources .ToPdfObject ());};if _bacd .Matrix !=nil {_bdcff .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bacd .Matrix );};return _bacd ._gaadc ;};

// WriteToFile writes the output PDF to file.
func (_daggc *PdfWriter )WriteToFile (outputFilePath string )error {_afced ,_cfcg :=_ec .Create (outputFilePath );if _cfcg !=nil {return _cfcg ;};defer _afced .Close ();return _daggc .Write (_afced );};var ImageHandling ImageHandler =DefaultImageHandler {};


// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_aabg :=NewPdfAnnotation ();_egea :=&PdfAnnotationLink {};_egea .PdfAnnotation =_aabg ;_aabg .SetContext (_egea );return _egea ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_cedb *PdfAppender )UpdateObject (obj _gbd .PdfObject ){_cedb .replaceObject (obj ,obj );if _ ,_abgd :=_cedb ._gbcd [obj ];!_abgd {_cedb ._cagf =append (_cedb ._cagf ,obj );_cedb ._gbcd [obj ]=struct{}{};};};

// Height returns the height of `rect`.
func (_dcbcg *PdfRectangle )Height ()float64 {return _ga .Abs (_dcbcg .Ury -_dcbcg .Lly )};var (ErrRequiredAttributeMissing =_ff .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ddee =_ff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ff .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ff .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_bfb .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_gbd .ErrNotSupported );ErrType1CFontNotSupported =_bfb .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gbd .ErrNotSupported );
ErrType3FontNotSupported =_bfb .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_gbd .ErrNotSupported );
ErrTTCmapNotSupported =_bfb .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_gbd .ErrNotSupported );
ErrSignNotEnoughSpace =_bfb .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_bfb .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// Encoder returns the font's text encoder.
func (_gbfb pdfCIDFontType0 )Encoder ()_dc .TextEncoder {return _gbfb ._ebge };

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _gbd .PdfObject ;};func (_gfdd *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// SetName sets the `Name` field of the signature.
func (_daec *PdfSignature )SetName (name string ){_daec .Name =_gbd .MakeString (name )};func (_cbbdd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _cbbdd ._dagg .GetCrypter ()!=nil &&!_cbbdd ._dagg .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecbbc :=_cbbdd ._dccge ;_cdfca :=_ecbbc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cdfca ==nil {return nil ,nil ;};_gcdcd ,_ :=_gbd .GetIndirect (_cdfca );_cdfca =_gbd .TraceToDirectObject (_cdfca );if _gbd .IsNullObject (_cdfca ){_db .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_dced ,_faegd :=_gbd .GetDict (_cdfca );if !_faegd {_db .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cdfca );_db .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cdfca );};_db .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_db .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_cbbdd ._adaag {_beff :=_cbbdd .traverseObjectData (_dced );
if _beff !=nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_beff );
return nil ,_beff ;};};_gddf ,_beefag :=_cbbdd .newPdfAcroFormFromDict (_gcdcd ,_dced );if _beefag !=nil {return nil ,_beefag ;};return _gddf ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// String returns a string that describes `base`.
func (_dffg fontCommon )String ()string {return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dffg .coreString ());};func (_ccdc *PdfReader )newPdfAnnotationInkFromDict (_geca *_gbd .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_acdc :=PdfAnnotationInk {};
_ccae ,_abcd :=_ccdc .newPdfAnnotationMarkupFromDict (_geca );if _abcd !=nil {return nil ,_abcd ;};_acdc .PdfAnnotationMarkup =_ccae ;_acdc .InkList =_geca .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_acdc .BS =_geca .Get ("\u0042\u0053");return &_acdc ,nil ;
};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cfea *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_cfea .updateObjectsDeep (dss .ToPdfObject (),nil );};_cfea ._caa =dss ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _gbd .PdfObject ;Mac _gbd .PdfObject ;Unix _gbd .PdfObject ;NewWindow _gbd .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _gbd .PdfObject ;Flags _gbd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_efbd *PdfSignature )ToPdfObject ()_gbd .PdfObject {_cfegf :=_efbd ._eebcgfe ;var _cbaa *_gbd .PdfObjectDictionary ;if _bggdg ,_eabcb :=_cfegf .PdfObject .(*pdfSignDictionary );_eabcb {_cbaa =_bggdg .PdfObjectDictionary ;}else {_cbaa =_cfegf .PdfObject .(*_gbd .PdfObjectDictionary );
};_cbaa .SetIfNotNil ("\u0054\u0079\u0070\u0065",_efbd .Type );_cbaa .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_efbd .Filter );_cbaa .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_efbd .SubFilter );_cbaa .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_efbd .ByteRange );
_cbaa .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_efbd .Contents );_cbaa .SetIfNotNil ("\u0043\u0065\u0072\u0074",_efbd .Cert );_cbaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_efbd .Name );_cbaa .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_efbd .Reason );
_cbaa .SetIfNotNil ("\u004d",_efbd .M );_cbaa .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_efbd .Reference );_cbaa .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_efbd .Changes );_cbaa .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_efbd .ContactInfo );
return _cfegf ;};func (_edfcb *XObjectImage )getParamsDict ()*_gbd .PdfObjectDictionary {_dfeb :=_gbd .MakeDict ();_dfeb .Set ("\u0057\u0069\u0064t\u0068",_gbd .MakeInteger (*_edfcb .Width ));_dfeb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gbd .MakeInteger (*_edfcb .Height ));
_dfeb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gbd .MakeInteger (int64 (_edfcb .ColorSpace .GetNumComponents ())));_dfeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbd .MakeInteger (*_edfcb .BitsPerComponent ));
return _dfeb ;};func _gfdg (_daca _gbd .PdfObject )(*PdfFontDescriptor ,error ){_bdbg :=&PdfFontDescriptor {};_daca =_gbd .ResolveReference (_daca );if _cadf ,_eefa :=_daca .(*_gbd .PdfIndirectObject );_eefa {_bdbg ._cgccc =_cadf ;_daca =_cadf .PdfObject ;
};_aacde ,_dfead :=_gbd .GetDict (_daca );if !_dfead {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_daca );
return nil ,_gbd .ErrTypeError ;};if _dbdfa :=_aacde .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_dbdfa !=nil {_bdbg .FontName =_dbdfa ;}else {_db .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_fabc ,_ :=_gbd .GetName (_bdbg .FontName );if _agffg :=_aacde .Get ("\u0054\u0079\u0070\u0065");_agffg !=nil {_cfcb ,_fgcce :=_agffg .(*_gbd .PdfObjectName );if !_fgcce ||string (*_cfcb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_db .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_agffg ,_fabc ,_bdbg .FontName );
};}else {_db .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fabc ,_bdbg .FontName );
};_bdbg .FontFamily =_aacde .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_bdbg .FontStretch =_aacde .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_bdbg .FontWeight =_aacde .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_bdbg .Flags =_aacde .Get ("\u0046\u006c\u0061g\u0073");_bdbg .FontBBox =_aacde .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_bdbg .ItalicAngle =_aacde .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_bdbg .Ascent =_aacde .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_bdbg .Descent =_aacde .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_bdbg .Leading =_aacde .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_bdbg .CapHeight =_aacde .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_bdbg .XHeight =_aacde .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_bdbg .StemV =_aacde .Get ("\u0053\u0074\u0065m\u0056");_bdbg .StemH =_aacde .Get ("\u0053\u0074\u0065m\u0048");_bdbg .AvgWidth =_aacde .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_bdbg .MaxWidth =_aacde .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_bdbg .MissingWidth =_aacde .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_bdbg .FontFile =_aacde .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_bdbg .FontFile2 =_aacde .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_bdbg .FontFile3 =_aacde .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_bdbg .CharSet =_aacde .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_bdbg .Style =_aacde .Get ("\u0053\u0074\u0079l\u0065");_bdbg .Lang =_aacde .Get ("\u004c\u0061\u006e\u0067");
_bdbg .FD =_aacde .Get ("\u0046\u0044");_bdbg .CIDSet =_aacde .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _bdbg .Flags !=nil {if _ebgd ,_dafa :=_gbd .GetIntVal (_bdbg .Flags );_dafa {_bdbg ._cdfaa =_ebgd ;};};if _bdbg .MissingWidth !=nil {if _bgbc ,_gcee :=_gbd .GetNumberAsFloat (_bdbg .MissingWidth );
_gcee ==nil {_bdbg ._dcbc =_bgbc ;};};if _bdbg .FontFile !=nil {_eabfb ,_bdbbcf :=_efaa (_bdbg .FontFile );if _bdbbcf !=nil {return _bdbg ,_bdbbcf ;};_db .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_eabfb );_bdbg .fontFile =_eabfb ;
};if _bdbg .FontFile2 !=nil {_afffg ,_eggg :=_fad .NewFontFile2FromPdfObject (_bdbg .FontFile2 );if _eggg !=nil {return _bdbg ,_eggg ;};_db .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_afffg .String ());_bdbg ._fegf =&_afffg ;
};return _bdbg ,nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_adefd .Lock ();defer _adefd .Unlock ();_ggbc =subject };

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bfcd _acga .ReadSeeker ;_abgb *_gbd .PdfParser ;_fafd *PdfReader ;Reader *PdfReader ;_ccbcf []*PdfPage ;_ebcd *PdfAcroForm ;_caa *DSS ;_ebcb _gbd .XrefTable ;_cacg int64 ;_cdg int ;_cagf []_gbd .PdfObject ;_gbcd map[_gbd .PdfObject ]struct{};
_fddd map[_gbd .PdfObject ]int64 ;_afff map[_gbd .PdfObject ]struct{};_cdgd map[_gbd .PdfObject ]struct{};_bbeg int64 ;_cdcd bool ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ccfa :=&PdfFilespec {};_ccfa ._aeace =_gbd .MakeIndirectObject (_gbd .MakeDict ());return _ccfa ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_bdgff *_gbd .PdfIndirectObject ;_eceaeb *_gbd .PdfIndirectObject ;_bced map[_gbd .PdfObject ]struct{};_fbafa []_gbd .PdfObject ;_bdgga map[_gbd .PdfObject ]struct{};_bace []*_gbd .PdfIndirectObject ;_dgdf *PdfOutlineTreeNode ;_dbecd *_gbd .PdfObjectDictionary ;
_fdaegb []_gbd .PdfObject ;_edfba *_gbd .PdfIndirectObject ;_adefdc *_b .Writer ;_fdff int64 ;_cfdbe error ;_bdfea *_gbd .PdfCrypt ;_feabe *_gbd .PdfObjectDictionary ;_fffff *_gbd .PdfIndirectObject ;_gegfb *_gbd .PdfObjectArray ;_gefd int ;_afbg int ;
_gfcd *bool ;_bgedca map[_gbd .PdfObject ][]*_gbd .PdfObjectDictionary ;_gaag *PdfAcroForm ;_deaac Optimizer ;_agffb map[int ]crossReference ;_gbbdc int64 ;ObjNumOffset int ;_bgdef bool ;_eebgdd _gbd .XrefTable ;_ggadb int64 ;_badae int64 ;_gadef map[_gbd .PdfObject ]int64 ;
_dfade map[_gbd .PdfObject ]struct{};_gacgf string ;};func (_adce *DSS )generateHashMaps ()error {_gecfe ,_eeab :=_adce .generateHashMap (_adce .Certs );if _eeab !=nil {return _eeab ;};_bdcge ,_eeab :=_adce .generateHashMap (_adce .OCSPs );if _eeab !=nil {return _eeab ;
};_bbaf ,_eeab :=_adce .generateHashMap (_adce .CRLs );if _eeab !=nil {return _eeab ;};_adce ._eefg =_gecfe ;_adce ._bgcbd =_bdcge ;_adce ._fdad =_bbaf ;return nil ;};func (_aefg *PdfReader )newPdfOutlineItemFromIndirectObject (_bfagc *_gbd .PdfIndirectObject )(*PdfOutlineItem ,error ){_fgabg ,_eede :=_bfagc .PdfObject .(*_gbd .PdfObjectDictionary );
if !_eede {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fcef :=NewPdfOutlineItem ();_aeecg :=_fgabg .Get ("\u0054\u0069\u0074l\u0065");
if _aeecg ==nil {return nil ,_a .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_cbdbd ,_gabcb :=_gbd .GetString (_aeecg );if !_gabcb {return nil ,_a .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_aeecg );};_fcef .Title =_cbdbd ;if _eagdg :=_fgabg .Get ("\u0043\u006f\u0075n\u0074");
_eagdg !=nil {_egcga ,_cggaf :=_eagdg .(*_gbd .PdfObjectInteger );if !_cggaf {return nil ,_a .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_eagdg );};_gdbbc :=int64 (*_egcga );
_fcef .Count =&_gdbbc ;};if _ccbdc :=_fgabg .Get ("\u0044\u0065\u0073\u0074");_ccbdc !=nil {_fcef .Dest =_gbd .ResolveReference (_ccbdc );if !_aefg ._adaag {_dbcd :=_aefg .traverseObjectData (_fcef .Dest );if _dbcd !=nil {return nil ,_dbcd ;};};};if _acbed :=_fgabg .Get ("\u0041");
_acbed !=nil {_fcef .A =_gbd .ResolveReference (_acbed );if !_aefg ._adaag {_afgd :=_aefg .traverseObjectData (_fcef .A );if _afgd !=nil {return nil ,_afgd ;};};};if _bffgc :=_fgabg .Get ("\u0053\u0045");_bffgc !=nil {_fcef .SE =nil ;};if _dfgdc :=_fgabg .Get ("\u0043");
_dfgdc !=nil {_fcef .C =_gbd .ResolveReference (_dfgdc );};if _fedc :=_fgabg .Get ("\u0046");_fedc !=nil {_fcef .F =_gbd .ResolveReference (_fedc );};return _fcef ,nil ;};func (_cbfeb *PdfWriter )writeBytes (_eaadg []byte ){if _cbfeb ._cfdbe !=nil {return ;
};_gaabc ,_fecef :=_cbfeb ._adefdc .Write (_eaadg );_cbfeb ._fdff +=int64 (_gaabc );_cbfeb ._cfdbe =_fecef ;};func (_gaa *PdfReader )newPdfActionGoTo3DViewFromDict (_cbc *_gbd .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_cbc .Get ("\u0054\u0041"),V :_cbc .Get ("\u0056")},nil ;
};func (_ggeeg *pdfFontType0 )bytesToCharcodes (_abdgc []byte )([]_dc .CharCode ,bool ){if _ggeeg ._fdcfe ==nil {return nil ,false ;};_ggdc ,_cade :=_ggeeg ._fdcfe .BytesToCharcodes (_abdgc );if !_cade {return nil ,false ;};_acbg :=make ([]_dc .CharCode ,len (_ggdc ));
for _cfed ,_dcadce :=range _ggdc {_acbg [_cfed ]=_dc .CharCode (_dcadce );};return _acbg ,true ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_gebbf *PdfPageResources )GetXObjectImageByName (keyName _gbd .PdfObjectName )(*XObjectImage ,error ){_aabbb ,_ffccb :=_gebbf .GetXObjectByName (keyName );if _aabbb ==nil {return nil ,nil ;};if _ffccb !=XObjectTypeImage {return nil ,_ff .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_eagg ,_eeecb :=NewXObjectImageFromStream (_aabbb );if _eeecb !=nil {return nil ,_eeecb ;};return _eagg ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bfgg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ggdde *pdfCIDFontType0 )ToPdfObject ()_gbd .PdfObject {return _gbd .MakeNull ()};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bbgfa *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bbgfa ._cbbeb =colorspace ;};func _gbeec (_gdeb *_gbd .PdfObjectArray )(float64 ,error ){_bfbgg ,_aage :=_gdeb .ToFloat64Array ();if _aage !=nil {_db .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdeb ,_aage );
};switch len (_bfbgg ){case 1:return _bfbgg [0],nil ;case 3:_cfgea :=PdfColorspaceDeviceRGB {};_ccaaa ,_dbdbf :=_cfgea .ColorFromFloats (_bfbgg );if _dbdbf !=nil {return 0.0,_dbdbf ;};return _ccaaa .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_eegde :=PdfColorspaceDeviceCMYK {};
_cbdbg ,_abgaga :=_eegde .ColorFromFloats (_bfbgg );if _abgaga !=nil {return 0.0,_abgaga ;};_becbf ,_abgaga :=_eegde .ColorToRGB (_cbdbg .(*PdfColorDeviceCMYK ));if _abgaga !=nil {return 0.0,_abgaga ;};return _becbf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_aage =_ff .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_db .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdeb ,_aage );
return 0.0,_aage ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_bbddd pdfFont };

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_efcb :=NewPdfAnnotation ();_babd :=&PdfAnnotationFreeText {};_babd .PdfAnnotation =_efcb ;_babd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efcb .SetContext (_babd );return _babd ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fccbc *XObjectForm )SetContentStream (content []byte ,encoder _gbd .StreamEncoder )error {_beaef :=content ;if encoder ==nil {if _fccbc .Filter !=nil {encoder =_fccbc .Filter ;}else {encoder =_gbd .NewRawEncoder ();};};_fadbd ,_cbfge :=encoder .EncodeBytes (_beaef );
if _cbfge !=nil {return _cbfge ;};_beaef =_fadbd ;_fccbc .Stream =_beaef ;_fccbc .Filter =encoder ;return nil ;};func (_fgca *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aeg *PdfColorspaceDeviceCMYK )ToPdfObject ()_gbd .PdfObject {return _gbd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// GetContainingPdfObject implements interface PdfModel.
func (_dgdc *PdfAnnotation )GetContainingPdfObject ()_gbd .PdfObject {return _dgdc ._faa };

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_bbdc *PdfReader )Inspect ()(map[string ]int ,error ){return _bbdc ._dagg .Inspect ()};func (_ebef *PdfAppender )mergeResources (_dgbb ,_dfbg _gbd .PdfObject ,_cdfc map[_gbd .PdfObjectName ]_gbd .PdfObjectName )_gbd .PdfObject {if _dfbg ==nil &&_dgbb ==nil {return nil ;
};if _dfbg ==nil {return _dgbb ;};_gcgfcd ,_dcac :=_gbd .GetDict (_dfbg );if !_dcac {return _dgbb ;};if _dgbb ==nil {_dfba :=_gbd .MakeDict ();_dfba .Merge (_gcgfcd );return _dfbg ;};_dadb ,_dcac :=_gbd .GetDict (_dgbb );if !_dcac {_db .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dadb =_gbd .MakeDict ();};for _ ,_ddb :=range _gcgfcd .Keys (){if _gfc ,_bccg :=_cdfc [_ddb ];_bccg {_dadb .Set (_gfc ,_gcgfcd .Get (_ddb ));}else {_dadb .Set (_ddb ,_gcgfcd .Get (_ddb ));};};return _dadb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbdca *PdfShadingType6 )ToPdfObject ()_gbd .PdfObject {_dbdca .PdfShading .ToPdfObject ();_degfe ,_ccbcd :=_dbdca .getShadingDict ();if _ccbcd !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbdca .BitsPerCoordinate !=nil {_degfe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dbdca .BitsPerCoordinate );};if _dbdca .BitsPerComponent !=nil {_degfe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dbdca .BitsPerComponent );
};if _dbdca .BitsPerFlag !=nil {_degfe .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dbdca .BitsPerFlag );};if _dbdca .Decode !=nil {_degfe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dbdca .Decode );};if _dbdca .Function !=nil {if len (_dbdca .Function )==1{_degfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbdca .Function [0].ToPdfObject ());
}else {_fabga :=_gbd .MakeArray ();for _ ,_cfdbd :=range _dbdca .Function {_fabga .Append (_cfdbd .ToPdfObject ());};_degfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fabga );};};return _dbdca ._baae ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_bfgdf *XObjectForm )GetContainingPdfObject ()_gbd .PdfObject {return _bfgdf ._cfbcb };

// ToPdfObject implements interface PdfModel.
func (_efcbb *PdfAnnotationSquiggly )ToPdfObject ()_gbd .PdfObject {_efcbb .PdfAnnotation .ToPdfObject ();_dcb :=_efcbb ._faa ;_cfgc :=_dcb .PdfObject .(*_gbd .PdfObjectDictionary );_efcbb .PdfAnnotationMarkup .appendToPdfDictionary (_cfgc );_cfgc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_cfgc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_efcbb .QuadPoints );return _dcb ;};

// Encoder returns the font's text encoder.
func (_dedgf *pdfFontSimple )Encoder ()_dc .TextEncoder {if _dedgf ._cfeea !=nil {return _dedgf ._cfeea ;};if _dedgf ._dgaa !=nil {return _dedgf ._dgaa ;};_bdaf ,_ :=_dc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bdaf ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_gbd .PdfObjectInteger ;BitsPerComponent *_gbd .PdfObjectInteger ;VerticesPerRow *_gbd .PdfObjectInteger ;Decode *_gbd .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gfef :=NewPdfAnnotation ();_efg :=&PdfAnnotationHighlight {};_efg .PdfAnnotation =_gfef ;_efg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfef .SetContext (_efg );return _efg ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ecdg :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ecdg ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_gbd .PdfObjectArray ;TI *_gbd .PdfObjectInteger ;I *_gbd .PdfObjectArray ;};func (_gfddc *PdfReader )newPdfPageFromDict (_cfgbbg *_gbd .PdfObjectDictionary )(*PdfPage ,error ){_cdafa :=NewPdfPage ();_cdafa ._abccg =_cfgbbg ;
_eebdb :=*_cfgbbg ;_efcbf ,_ebaef :=_eebdb .Get ("\u0054\u0079\u0070\u0065").(*_gbd .PdfObjectName );if !_ebaef {return nil ,_ff .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_efcbf !="\u0050\u0061\u0067\u0065"{return nil ,_ff .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _feec :=_eebdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_feec !=nil {_cdafa .Parent =_feec ;};if _gegbc :=_eebdb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gegbc !=nil {_defg ,_aedb :=_gbd .GetString (_gegbc );if !_aedb {return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_bbaeg ,_dgbfa :=NewPdfDate (_defg .Str ());if _dgbfa !=nil {return nil ,_dgbfa ;};_cdafa .LastModified =&_bbaeg ;};if _gdagd :=_eebdb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdagd !=nil &&!_gbd .IsNullObject (_gdagd ){_facb ,_fabge :=_gbd .GetDict (_gdagd );
if !_fabge {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdagd );};var _fecd error ;_cdafa .Resources ,_fecd =NewPdfPageResourcesFromDict (_facb );
if _fecd !=nil {return nil ,_fecd ;};}else {_acdf ,_fabd :=_cdafa .getParentResources ();if _fabd !=nil {return nil ,_fabd ;};if _acdf ==nil {_acdf =NewPdfPageResources ();};_cdafa .Resources =_acdf ;};if _cabce :=_eebdb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cabce !=nil {_cfgbe ,_bbegb :=_gbd .GetArray (_cabce );if !_bbegb {return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fcebb error ;
_cdafa .MediaBox ,_fcebb =NewPdfRectangle (*_cfgbe );if _fcebb !=nil {return nil ,_fcebb ;};};if _cbfb :=_eebdb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_cbfb !=nil {_eecg ,_cbaca :=_gbd .GetArray (_cbfb );if !_cbaca {return nil ,_ff .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _dcbcb error ;_cdafa .CropBox ,_dcbcb =NewPdfRectangle (*_eecg );if _dcbcb !=nil {return nil ,_dcbcb ;};};if _gefge :=_eebdb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gefge !=nil {_cgba ,_fgfgg :=_gbd .GetArray (_gefge );if !_fgfgg {return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _adbac error ;_cdafa .BleedBox ,_adbac =NewPdfRectangle (*_cgba );if _adbac !=nil {return nil ,_adbac ;};};if _bbecd :=_eebdb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_bbecd !=nil {_ebgaa ,_febgf :=_gbd .GetArray (_bbecd );if !_febgf {return nil ,_ff .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ccbab error ;_cdafa .TrimBox ,_ccbab =NewPdfRectangle (*_ebgaa );if _ccbab !=nil {return nil ,_ccbab ;};};if _cdgc :=_eebdb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cdgc !=nil {_afeb ,_dgbdg :=_gbd .GetArray (_cdgc );if !_dgbdg {return nil ,_ff .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _abeff error ;_cdafa .ArtBox ,_abeff =NewPdfRectangle (*_afeb );if _abeff !=nil {return nil ,_abeff ;};};if _badac :=_eebdb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_badac !=nil {_cdafa .BoxColorInfo =_badac ;};
if _eeeced :=_eebdb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_eeeced !=nil {_cdafa .Contents =_eeeced ;};if _fgdc :=_eebdb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fgdc !=nil {_agdg ,_ccfag :=_gbd .GetNumberAsInt64 (_fgdc );if _ccfag !=nil {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cdafa .Rotate =&_agdg ;};if _aecf :=_eebdb .Get ("\u0047\u0072\u006fu\u0070");_aecf !=nil {_cdafa .Group =_aecf ;};if _acdaa :=_eebdb .Get ("\u0054\u0068\u0075m\u0062");_acdaa !=nil {_cdafa .Thumb =_acdaa ;};if _eegd :=_eebdb .Get ("\u0042");_eegd !=nil {_cdafa .B =_eegd ;
};if _cafec :=_eebdb .Get ("\u0044\u0075\u0072");_cafec !=nil {_cdafa .Dur =_cafec ;};if _abbce :=_eebdb .Get ("\u0054\u0072\u0061n\u0073");_abbce !=nil {_cdafa .Trans =_abbce ;};if _gddab :=_eebdb .Get ("\u0041\u0041");_gddab !=nil {_cdafa .AA =_gddab ;
};if _bfbcd :=_eebdb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bfbcd !=nil {_cdafa .Metadata =_bfbcd ;};if _fcgbfa :=_eebdb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fcgbfa !=nil {_cdafa .PieceInfo =_fcgbfa ;};if _agebg :=_eebdb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_agebg !=nil {_cdafa .StructParents =_agebg ;};if _cabdc :=_eebdb .Get ("\u0049\u0044");_cabdc !=nil {_cdafa .ID =_cabdc ;};if _caeeg :=_eebdb .Get ("\u0050\u005a");_caeeg !=nil {_cdafa .PZ =_caeeg ;};if _faaae :=_eebdb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_faaae !=nil {_cdafa .SeparationInfo =_faaae ;};if _bbdfa :=_eebdb .Get ("\u0054\u0061\u0062\u0073");_bbdfa !=nil {_cdafa .Tabs =_bbdfa ;};if _gafgb :=_eebdb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gafgb !=nil {_cdafa .TemplateInstantiated =_gafgb ;};if _fgbcb :=_eebdb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_fgbcb !=nil {_cdafa .PresSteps =_fgbcb ;};if _gfgde :=_eebdb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_gfgde !=nil {_cdafa .UserUnit =_gfgde ;
};if _agab :=_eebdb .Get ("\u0056\u0050");_agab !=nil {_cdafa .VP =_agab ;};if _bfce :=_eebdb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_bfce !=nil {_cdafa .Annots =_bfce ;};_cdafa ._baff =_gfddc ;return _cdafa ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );


// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _gbd .PdfObject ;Movie _gbd .PdfObject ;A _gbd .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_egfb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbbe :=vals [0];if _gbbe < 0.0||_gbbe > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_adegb :=vals [1];if _adegb < 0.0||_adegb > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcgdc :=vals [2];if _gcgdc < 0.0||_gcgdc > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fcbb :=NewPdfColorDeviceRGB (_gbbe ,_adegb ,_gcgdc );return _fcbb ,nil ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_beaad :_gbd .MakeIndirectObject (_gbd .MakeDict ()),VRI :map[string ]*VRI {}};};func _dggca (_eacd *PdfField ,_dgag _gbd .PdfObject ){for _ ,_cecdb :=range _eacd .Annotations {_cecdb .AS =_dgag ;_cecdb .ToPdfObject ();
};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ggafa *PdfShadingType7 )ToPdfObject ()_gbd .PdfObject {_ggafa .PdfShading .ToPdfObject ();_bcfe ,_dafef :=_ggafa .getShadingDict ();if _dafef !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ggafa .BitsPerCoordinate !=nil {_bcfe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ggafa .BitsPerCoordinate );};if _ggafa .BitsPerComponent !=nil {_bcfe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ggafa .BitsPerComponent );
};if _ggafa .BitsPerFlag !=nil {_bcfe .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ggafa .BitsPerFlag );};if _ggafa .Decode !=nil {_bcfe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggafa .Decode );};if _ggafa .Function !=nil {if len (_ggafa .Function )==1{_bcfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggafa .Function [0].ToPdfObject ());
}else {_agea :=_gbd .MakeArray ();for _ ,_bbegd :=range _ggafa .Function {_agea .Append (_bbegd .ToPdfObject ());};_bcfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agea );};};return _ggafa ._baae ;};func (_acfaa SignatureValidationResult )String ()string {var _gdgge _cd .Buffer ;
_gdgge .WriteString (_a .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_acfaa .Name ));if _acfaa .Date ._cbggb > 0{_gdgge .WriteString (_a .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_acfaa .Date .ToGoTime ().String ()));}else {_gdgge .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_acfaa .Reason )> 0{_gdgge .WriteString (_a .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_acfaa .Reason ));}else {_gdgge .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_acfaa .Location )> 0{_gdgge .WriteString (_a .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_acfaa .Location ));}else {_gdgge .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_acfaa .ContactInfo )> 0{_gdgge .WriteString (_a .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_acfaa .ContactInfo ));}else {_gdgge .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_gdgge .WriteString (_a .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_acfaa .Fields )));if _acfaa .IsSigned {_gdgge .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_gdgge .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _acfaa .IsVerified {_gdgge .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_gdgge .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _acfaa .IsTrusted {_gdgge .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_gdgge .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_acfaa .GeneralizedTime .IsZero (){_gdgge .WriteString (_a .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_acfaa .GeneralizedTime .String ()));
};return _gdgge .String ();};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cdccf *Outline )ToPdfOutline ()*PdfOutline {_ddfaf :=NewPdfOutline ();var _bddfa []*PdfOutlineItem ;var _bdcc int64 ;var _fdga *PdfOutlineItem ;for _ ,_bcffa :=range _cdccf .Entries {_dfac ,_fgccd :=_bcffa .ToPdfOutlineItem ();_dfac .Parent =&_ddfaf .PdfOutlineTreeNode ;
if _fdga !=nil {_fdga .Next =&_dfac .PdfOutlineTreeNode ;_dfac .Prev =&_fdga .PdfOutlineTreeNode ;};_bddfa =append (_bddfa ,_dfac );_bdcc +=_fgccd ;_fdga =_dfac ;};_fbefg :=int64 (len (_bddfa ));_bdcc +=_fbefg ;if _fbefg > 0{_ddfaf .First =&_bddfa [0].PdfOutlineTreeNode ;
_ddfaf .Last =&_bddfa [_fbefg -1].PdfOutlineTreeNode ;_ddfaf .Count =&_bdcc ;};return _ddfaf ;};

// ToPdfObject implements interface PdfModel.
func (_fcee *PdfAnnotationFreeText )ToPdfObject ()_gbd .PdfObject {_fcee .PdfAnnotation .ToPdfObject ();_egbc :=_fcee ._faa ;_ggba :=_egbc .PdfObject .(*_gbd .PdfObjectDictionary );_fcee .PdfAnnotationMarkup .appendToPdfDictionary (_ggba );_ggba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_ggba .SetIfNotNil ("\u0044\u0041",_fcee .DA );_ggba .SetIfNotNil ("\u0051",_fcee .Q );_ggba .SetIfNotNil ("\u0052\u0043",_fcee .RC );_ggba .SetIfNotNil ("\u0044\u0053",_fcee .DS );_ggba .SetIfNotNil ("\u0043\u004c",_fcee .CL );_ggba .SetIfNotNil ("\u0049\u0054",_fcee .IT );
_ggba .SetIfNotNil ("\u0042\u0045",_fcee .BE );_ggba .SetIfNotNil ("\u0052\u0044",_fcee .RD );_ggba .SetIfNotNil ("\u0042\u0053",_fcee .BS );_ggba .SetIfNotNil ("\u004c\u0045",_fcee .LE );return _egbc ;};

// Register registers (caches) a model to primitive object relationship.
func (_ffdbg *modelManager )Register (primitive _gbd .PdfObject ,model PdfModel ){_ffdbg ._bggda [model ]=primitive ;_ffdbg ._fage [primitive ]=model ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_eabf *PdfAppender )Write (w _acga .Writer )error {if _eabf ._cdcd {return _ff .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_edea :=NewPdfWriter ();_bfgd ,_bgga :=_gbd .GetDict (_edea ._eceaeb );if !_bgga {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ddfbg ,_bgga :=_bfgd .Get ("\u004b\u0069\u0064\u0073").(*_gbd .PdfObjectArray );if !_bgga {return _ff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ecfe ,_bgga :=_bfgd .Get ("\u0043\u006f\u0075n\u0074").(*_gbd .PdfObjectInteger );if !_bgga {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_deac :=_eabf ._fafd ._dagg ;_cdab :=_deac .GetTrailer ();if _cdab ==nil {return _ff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ccgd ,_bgga :=_gbd .GetIndirect (_cdab .Get ("\u0052\u006f\u006f\u0074"));
if !_bgga {return _ff .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fddc ,_bgga :=_gbd .GetDict (_ccgd );if !_bgga {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ccgd ,*_cdab );
return _ff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_caee :=range _fddc .Keys (){if _edea ._dbecd .Get (_caee )==nil {_afdd :=_fddc .Get (_caee );_edea ._dbecd .Set (_caee ,_afdd );};};if _eabf ._ebcd !=nil {_edea ._dbecd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eabf ._ebcd .ToPdfObject ());
_eabf .updateObjectsDeep (_eabf ._ebcd .ToPdfObject (),nil );};if _eabf ._caa !=nil {_eabf .updateObjectsDeep (_eabf ._caa .ToPdfObject (),nil );_edea ._dbecd .Set ("\u0044\u0053\u0053",_eabf ._caa .GetContainingPdfObject ());};if _edea ._gefd < 2{_edea .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_edea .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_eabf .addNewObject (_edea ._edfba );_eabf .addNewObject (_edea ._bdgff );_gdbe :=false ;if len (_eabf ._fafd .PageList )!=len (_eabf ._ccbcf ){_gdbe =true ;}else {for _ecbea :=range _eabf ._fafd .PageList {switch {case _eabf ._ccbcf [_ecbea ]==_eabf ._fafd .PageList [_ecbea ]:case _eabf ._ccbcf [_ecbea ]==_eabf .Reader .PageList [_ecbea ]:default:_gdbe =true ;
};if _gdbe {break ;};};};if _gdbe {_eabf .updateObjectsDeep (_edea ._eceaeb ,nil );}else {_eabf ._afff [_edea ._eceaeb ]=struct{}{};};_edea ._eceaeb .ObjectNumber =_eabf .Reader ._cacgb .ObjectNumber ;_eabf ._fddd [_edea ._eceaeb ]=_eabf .Reader ._cacgb .ObjectNumber ;
_abac :=[]_gbd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_bbec :=range _eabf ._ccbcf {_bdgb :=_bbec .ToPdfObject ();
*_ecfe =*_ecfe +1;if _ebbf ,_gefb :=_bdgb .(*_gbd .PdfIndirectObject );_gefb &&_ebbf .GetParser ()==_eabf ._fafd ._dagg {_ddfbg .Append (&_ebbf .PdfObjectReference );continue ;};if _eff ,_fabb :=_gbd .GetDict (_bdgb );_fabb {_fdgc ,_bgdce :=_eff .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gbd .PdfIndirectObject );
for _bgdce {_db .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fdgc );_gbdd ,_cdfcd :=_fdgc .PdfObject .(*_gbd .PdfObjectDictionary );if !_cdfcd {return _ff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fbag :=range _abac {_db .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fbag );if _eff .Get (_fbag )!=nil {_db .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _dded :=_gbdd .Get (_fbag );_dded !=nil {_db .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fbag );_eff .Set (_fbag ,_dded );};};_fdgc ,_bgdce =_gbdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gbd .PdfIndirectObject );
_db .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_eff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edea ._eceaeb );};_eabf .updateObjectsDeep (_bdgb ,nil );
_ddfbg .Append (_bdgb );};if _ ,_gddd :=_eabf ._bfcd .Seek (0,_acga .SeekStart );_gddd !=nil {return _gddd ;};_faee :=make (map[SignatureHandler ]_acga .Writer );_bgeb :=_gbd .MakeArray ();for _ ,_gbgf :=range _eabf ._cagf {if _fagdb ,_aagb :=_gbd .GetIndirect (_gbgf );
_aagb {if _dgca ,_ecaac :=_fagdb .PdfObject .(*pdfSignDictionary );_ecaac {_fdddc :=*_dgca ._adced ;var _cgca error ;_faee [_fdddc ],_cgca =_fdddc .NewDigest (_dgca ._bgffc );if _cgca !=nil {return _cgca ;};_bgeb .Append (_gbd .MakeInteger (0xfffff),_gbd .MakeInteger (0xfffff));
};};};if _bgeb .Len ()> 0{_bgeb .Append (_gbd .MakeInteger (0xfffff),_gbd .MakeInteger (0xfffff));};for _ ,_dcdg :=range _eabf ._cagf {if _caaf ,_cgeg :=_gbd .GetIndirect (_dcdg );_cgeg {if _aaec ,_abfg :=_caaf .PdfObject .(*pdfSignDictionary );_abfg {_aaec .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bgeb );
};};};_aacb :=len (_faee )> 0;var _fcgd _acga .Reader =_eabf ._bfcd ;if _aacb {_acab :=make ([]_acga .Writer ,0,len (_faee ));for _ ,_cdad :=range _faee {_acab =append (_acab ,_cdad );};_fcgd =_acga .TeeReader (_eabf ._bfcd ,_acga .MultiWriter (_acab ...));
};_bdcg ,_bddfd :=_acga .Copy (w ,_fcgd );if _bddfd !=nil {return _bddfd ;};if len (_eabf ._cagf )==0{return nil ;};_edea ._gbbdc =_bdcg ;_edea .ObjNumOffset =_eabf ._cdg ;_edea ._bgdef =true ;_edea ._eebgdd =_eabf ._ebcb ;_edea ._ggadb =_eabf ._cacg ;
_edea ._badae =_eabf ._bbeg ;_edea ._afbg =_eabf ._fafd .PdfVersion ().Minor ;_edea ._gadef =_eabf ._fddd ;_ddfg :=_eabf ._abgb .GetXrefType ();if _ddfg !=nil {_caff :=*_ddfg ==_gbd .XrefTypeObjectStream ;_edea ._gfcd =&_caff ;};_edea ._bdgga =map[_gbd .PdfObject ]struct{}{};
_edea ._fbafa =[]_gbd .PdfObject {};for _ ,_cbfe :=range _eabf ._cagf {if _ ,_eagb :=_eabf ._afff [_cbfe ];_eagb {continue ;};_edea .addObject (_cbfe );};_ecgd :=w ;if _aacb {_ecgd =_cd .NewBuffer (nil );};if _bgb :=_edea .Write (_ecgd );_bgb !=nil {return _bgb ;
};if _aacb {_ebgac :=_ecgd .(*_cd .Buffer ).Bytes ();_eaec :=_gbd .MakeArray ();var _abbe []*pdfSignDictionary ;var _adff int64 ;for _ ,_bcdd :=range _edea ._fbafa {if _gdeef ,_fbgb :=_gbd .GetIndirect (_bcdd );_fbgb {if _gcdf ,_fgb :=_gdeef .PdfObject .(*pdfSignDictionary );
_fgb {_abbe =append (_abbe ,_gcdf );_fgge :=_gcdf ._fdaeg +int64 (_gcdf ._gbfad );_eaec .Append (_gbd .MakeInteger (_adff ),_gbd .MakeInteger (_fgge -_adff ));_adff =_gcdf ._fdaeg +int64 (_gcdf ._gfgaf );};};};_eaec .Append (_gbd .MakeInteger (_adff ),_gbd .MakeInteger (_bdcg +int64 (len (_ebgac ))-_adff ));
_ccc :=[]byte (_eaec .WriteString ());for _ ,_ebdfb :=range _abbe {_fbcc :=int (_ebdfb ._fdaeg -_bdcg );for _affaa :=_ebdfb ._cbcbg ;_affaa < _ebdfb ._bcef ;_affaa ++{_ebgac [_fbcc +_affaa ]=' ';};_dgef :=_ebgac [_fbcc +_ebdfb ._cbcbg :_fbcc +_ebdfb ._bcef ];
copy (_dgef ,_ccc );};var _eegg int ;for _ ,_ggfa :=range _abbe {_dff :=int (_ggfa ._fdaeg -_bdcg );_facd :=_ebgac [_eegg :_dff +_ggfa ._gbfad ];_dcgf :=*_ggfa ._adced ;_faee [_dcgf ].Write (_facd );_eegg =_dff +_ggfa ._gfgaf ;};for _ ,_bgfe :=range _abbe {_gagb :=_ebgac [_eegg :];
_gfdf :=*_bgfe ._adced ;_faee [_gfdf ].Write (_gagb );};for _ ,_cab :=range _abbe {_fed :=int (_cab ._fdaeg -_bdcg );_dbcce :=*_cab ._adced ;_ffbc :=_faee [_dbcce ];if _fadbe :=_dbcce .Sign (_cab ._bgffc ,_ffbc );_fadbe !=nil {return _fadbe ;};_cab ._bgffc .ByteRange =_eaec ;
_ddabb :=[]byte (_cab ._bgffc .Contents .WriteString ());for _bgag :=_cab ._cbcbg ;_bgag < _cab ._bcef ;_bgag ++{_ebgac [_fed +_bgag ]=' ';};for _agfgf :=_cab ._gbfad ;_agfgf < _cab ._gfgaf ;_agfgf ++{_ebgac [_fed +_agfgf ]=' ';};_efbc :=_ebgac [_fed +_cab ._cbcbg :_fed +_cab ._bcef ];
copy (_efbc ,_ccc );_efbc =_ebgac [_fed +_cab ._gbfad :_fed +_cab ._gfgaf ];copy (_efbc ,_ddabb );};_cceb :=_cd .NewBuffer (_ebgac );_ ,_bddfd =_acga .Copy (w ,_cceb );if _bddfd !=nil {return _bddfd ;};};_eabf ._cdcd =true ;return nil ;};func _eafc (_gedeb _gbd .PdfObject )(*PdfFunctionType2 ,error ){_bcad :=&PdfFunctionType2 {};
var _fdfbc *_gbd .PdfObjectDictionary ;if _gefe ,_bcebe :=_gedeb .(*_gbd .PdfIndirectObject );_bcebe {_fcgfa ,_dfbfb :=_gefe .PdfObject .(*_gbd .PdfObjectDictionary );if !_dfbfb {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bcad ._bgacf =_gefe ;_fdfbc =_fcgfa ;}else if _aeed ,_gdbb :=_gedeb .(*_gbd .PdfObjectDictionary );_gdbb {_fdfbc =_aeed ;}else {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_db .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_fdfbc .String ());
_fadfa ,_fdge :=_gbd .TraceToDirectObject (_fdfbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gbd .PdfObjectArray );if !_fdge {_db .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fadfa .Len ()< 0||_fadfa .Len ()%2!=0{_db .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_adda ,_ddda :=_fadfa .ToFloat64Array ();if _ddda !=nil {return nil ,_ddda ;};_bcad .Domain =_adda ;_fadfa ,_fdge =_gbd .TraceToDirectObject (_fdfbc .Get ("\u0052\u0061\u006eg\u0065")).(*_gbd .PdfObjectArray );if _fdge {if _fadfa .Len ()< 0||_fadfa .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dbgfda ,_gabac :=_fadfa .ToFloat64Array ();if _gabac !=nil {return nil ,_gabac ;};_bcad .Range =_dbgfda ;};_fadfa ,_fdge =_gbd .TraceToDirectObject (_fdfbc .Get ("\u0043\u0030")).(*_gbd .PdfObjectArray );if _fdge {_cadg ,_gadgc :=_fadfa .ToFloat64Array ();
if _gadgc !=nil {return nil ,_gadgc ;};_bcad .C0 =_cadg ;};_fadfa ,_fdge =_gbd .TraceToDirectObject (_fdfbc .Get ("\u0043\u0031")).(*_gbd .PdfObjectArray );if _fdge {_dfbe ,_fgacc :=_fadfa .ToFloat64Array ();if _fgacc !=nil {return nil ,_fgacc ;};_bcad .C1 =_dfbe ;
};if len (_bcad .C0 )!=len (_bcad .C1 ){_db .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_gbd .ErrRangeError ;};N ,_ddda :=_gbd .GetNumberAsFloat (_gbd .TraceToDirectObject (_fdfbc .Get ("\u004e")));
if _ddda !=nil {_db .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_fdfbc .String ());return nil ,_ddda ;};_bcad .N =N ;
return _bcad ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _gbd .PdfObject ;MK _gbd .PdfObject ;A _gbd .PdfObject ;AA _gbd .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gdeec pdfFontType0 )GetCharMetrics (code _dc .CharCode )(_fad .CharMetrics ,bool ){if _gdeec .DescendantFont ==nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_gdeec );
return _fad .CharMetrics {},false ;};return _gdeec .DescendantFont .GetCharMetrics (code );};

// ToPdfObject returns a PDF object representation of the outline.
func (_bccf *Outline )ToPdfObject ()_gbd .PdfObject {return _bccf .ToPdfOutline ().ToPdfObject ()};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dggad *PdfColorspaceSpecialPattern )ToPdfObject ()_gbd .PdfObject {if _dggad .UnderlyingCS ==nil {return _gbd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_eaaad :=_gbd .MakeArray (_gbd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_eaaad .Append (_dggad .UnderlyingCS .ToPdfObject ());if _dggad ._ebgab !=nil {_dggad ._ebgab .PdfObject =_eaaad ;return _dggad ._ebgab ;};return _eaaad ;};func _eaaeg (_cgcee _gbd .PdfObject ,_gfcg bool )(*PdfFont ,error ){_abdd ,_acda ,_cbbc :=_dagc (_cgcee );
if _cbbc !=nil {if _cbbc ==ErrType1CFontNotSupported {_gfgc ,_eabfd :=_acafd (_abdd ,_acda ,nil );if _eabfd !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_acda ,_eabfd );
return nil ,_cbbc ;};return &PdfFont {_bbddd :_gfgc },_cbbc ;};return nil ,_cbbc ;};_fcgdd :=&PdfFont {};switch _acda ._bbecf {case "\u0054\u0079\u0070e\u0030":if !_gfcg {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acda );
return nil ,_ff .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cccf ,_bceg :=_acge (_abdd ,_acda );if _bceg !=nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acda ,_bceg );
return nil ,_bceg ;};_fcgdd ._bbddd =_cccf ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gfac *pdfFontSimple ;_cegd ,_agde :=_fad .NewStdFontByName (_fad .StdFontName (_acda ._dgcff ));
if _agde {_cfad :=_aabdf (_cegd );_fcgdd ._bbddd =&_cfad ;_eddcg :=_gbd .TraceToDirectObject (_cfad .ToPdfObject ());_eaafb ,_bfcc ,_beebc :=_dagc (_eddcg );if _beebc !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_acda ,_cfad );
return nil ,_beebc ;};for _ ,_fgbg :=range _abdd .Keys (){_eaafb .Set (_fgbg ,_abdd .Get (_fgbg ));};_gfac ,_beebc =_acafd (_eaafb ,_bfcc ,_cfad ._dgaa );if _beebc !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_acda ,_cfad );
return nil ,_beebc ;};_gfac ._fgaa =_cfad ._fgaa ;_gfac ._ecfeb =_cfad ._ecfeb ;if _gfac ._accbg ==nil {_gfac ._accbg =_cfad ._accbg ;};}else {_gfac ,_cbbc =_acafd (_abdd ,_acda ,nil );if _cbbc !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_acda ,_cbbc );
return nil ,_cbbc ;};};_cbbc =_gfac .addEncoding ();if _cbbc !=nil {return nil ,_cbbc ;};if _agde {_gfac .updateStandard14Font ();};if _agde &&_gfac ._cfeea ==nil &&_gfac ._dgaa ==nil {_db .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfac );
_db .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_cegd );};if len (_gfac ._fgaa )==0{_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gfac );};_fcgdd ._bbddd =_gfac ;
case "\u0054\u0079\u0070e\u0033":_adega ,_bdbbc :=_gedb (_abdd ,_acda );if _bdbbc !=nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bdbbc );
return nil ,_bdbbc ;};_fcgdd ._bbddd =_adega ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_bgaf ,_bfebcg :=_fgdbc (_abdd ,_acda );if _bfebcg !=nil {_db .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bfebcg );
return nil ,_bfebcg ;};_fcgdd ._bbddd =_bgaf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cbegf ,_gdff :=_cgaga (_abdd ,_acda );if _gdff !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acda ,_gdff );
return nil ,_gdff ;};_fcgdd ._bbddd =_cbegf ;default:_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_acda );
return nil ,_a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acda );};return _fcgdd ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_bgedf *pdfSignDictionary )WriteString ()string {_bgedf ._gbfad =0;_bgedf ._gfgaf =0;_bgedf ._cbcbg =0;_bgedf ._bcef =0;_cbfdb :=_cd .NewBuffer (nil );_cbfdb .WriteString ("\u003c\u003c");for _ ,_cfef :=range _bgedf .Keys (){_dedda :=_bgedf .Get (_cfef );
switch _cfef {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cbfdb .WriteString (_cfef .WriteString ());_cbfdb .WriteString ("\u0020");_bgedf ._cbcbg =_cbfdb .Len ();_cbfdb .WriteString (_dedda .WriteString ());_cbfdb .WriteString ("\u0020");_bgedf ._bcef =_cbfdb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cbfdb .WriteString (_cfef .WriteString ());_cbfdb .WriteString ("\u0020");_bgedf ._gbfad =_cbfdb .Len ();_cbfdb .WriteString (_dedda .WriteString ());_cbfdb .WriteString ("\u0020");_bgedf ._gfgaf =_cbfdb .Len ()-1;
default:_cbfdb .WriteString (_cfef .WriteString ());_cbfdb .WriteString ("\u0020");_cbfdb .WriteString (_dedda .WriteString ());};};_cbfdb .WriteString ("\u003e\u003e");return _cbfdb .String ();};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_fafg *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bedae ,_eadae :=range _fafg ._fafca {_fafg ._fafca [_bedae ]=mapFunc (_eadae );};};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _gbd .PdfObject ;PreserveRB _gbd .PdfObject ;};func _cabd (_feae *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_feae }};

// IsShading specifies if the pattern is a shading pattern.
func (_ggddd *PdfPattern )IsShading ()bool {return _ggddd .PatternType ==2};var _eeece =_acg .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_adgfb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _adgfb ._ggff ==nil &&_adgfb .DescendantFont !=nil {return _adgfb .DescendantFont .FontDescriptor ();
};return _adgfb ._ggff ;};func (_dgdg *PdfReader )newPdfAnnotationProjectionFromDict (_fce *_gbd .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_gcbe :=&PdfAnnotationProjection {};_abce ,_cba :=_dgdg .newPdfAnnotationMarkupFromDict (_fce );if _cba !=nil {return nil ,_cba ;
};_gcbe .PdfAnnotationMarkup =_abce ;return _gcbe ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ecdcf *PdfFieldSignature )ToPdfObject ()_gbd .PdfObject {if _ecdcf .PdfAnnotationWidget !=nil {_ecdcf .PdfAnnotationWidget .ToPdfObject ();};_ecdcf .PdfField .ToPdfObject ();_acad :=_ecdcf ._beee ;_abgdb :=_acad .PdfObject .(*_gbd .PdfObjectDictionary );
_abgdb .SetIfNotNil ("\u0046\u0054",_gbd .MakeName ("\u0053\u0069\u0067"));_abgdb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ecdcf .Lock );_abgdb .SetIfNotNil ("\u0053\u0056",_ecdcf .SV );if _ecdcf .V !=nil {_abgdb .SetIfNotNil ("\u0056",_ecdcf .V .ToPdfObject ());
};return _acad ;};func (_gggad *PdfWriter )updateObjectNumbers (){_gafa :=_gggad .ObjNumOffset ;_bfccc :=0;for _ ,_ebadc :=range _gggad ._fbafa {_baefe :=int64 (_bfccc +1+_gafa );_fbgfg :=true ;if _gggad ._bgdef {if _dbfb ,_cagge :=_gggad ._gadef [_ebadc ];
_cagge {_baefe =_dbfb ;_fbgfg =false ;};};switch _ceaef :=_ebadc .(type ){case *_gbd .PdfIndirectObject :_ceaef .ObjectNumber =_baefe ;_ceaef .GenerationNumber =0;case *_gbd .PdfObjectStream :_ceaef .ObjectNumber =_baefe ;_ceaef .GenerationNumber =0;case *_gbd .PdfObjectStreams :_ceaef .ObjectNumber =_baefe ;
_ceaef .GenerationNumber =0;default:_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ceaef );continue ;
};if _fbgfg {_bfccc ++;};};_dbdcb :=func (_gfbed _gbd .PdfObject )int64 {switch _bdbfc :=_gfbed .(type ){case *_gbd .PdfIndirectObject :return _bdbfc .ObjectNumber ;case *_gbd .PdfObjectStream :return _bdbfc .ObjectNumber ;case *_gbd .PdfObjectStreams :return _bdbfc .ObjectNumber ;
};return 0;};_eb .SliceStable (_gggad ._fbafa ,func (_dddcc ,_ddcfc int )bool {return _dbdcb (_gggad ._fbafa [_dddcc ])< _dbdcb (_gggad ._fbafa [_ddcfc ])});};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_ggcfdg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_bggbf ,_fgdce :=_gbd .GetDict (_ggcfdg ._dbecd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fgdce {_bggbf =_gbd .MakeDict ();_ggcfdg ._dbecd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_bggbf );
};_dfcee ,_fgdce :=_gbd .GetDict (_bggbf .Get (_gbd .PdfObjectName (extName )));if !_fgdce {_dfcee =_gbd .MakeDict ();_bggbf .Set (_gbd .PdfObjectName (extName ),_dfcee );};if _gfedeg ,_ :=_gbd .GetNameVal (_dfcee .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_gfedeg !=baseVersion {_dfcee .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_gbd .MakeName (baseVersion ));};if _bedbf ,_ :=_gbd .GetIntVal (_dfcee .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_bedbf !=extLevel {_dfcee .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_gbd .MakeInteger (int64 (extLevel )));};};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_bbae :=&PdfOutline {_fdbf :_gbd .MakeIndirectObject (_gbd .MakeDict ())};_bbae ._aagcd =_bbae ;return _bbae ;};func _cagag ()string {_adefd .Lock ();defer _adefd .Unlock ();return _ggbc };

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fad .CharMetrics ;func (_deef *PdfReader )newPdfAcroFormFromDict (_dceb *_gbd .PdfIndirectObject ,_bffaa *_gbd .PdfObjectDictionary )(*PdfAcroForm ,error ){_gdcg :=NewPdfAcroForm ();if _dceb !=nil {_gdcg ._cdec =_dceb ;_dceb .PdfObject =_gbd .MakeDict ();
};if _eged :=_bffaa .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_eged !=nil {_aacgb ,_cbgc :=_gbd .GetArray (_eged );if !_cbgc {return nil ,_a .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eged );
};var _fdedd []*PdfField ;for _ ,_gaab :=range _aacgb .Elements (){_fceb ,_gdef :=_gbd .GetIndirect (_gaab );if !_gdef {if _ ,_bggg :=_gaab .(*_gbd .PdfObjectNull );_bggg {_db .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_db .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gaab );
return nil ,_a .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddafg ,_dbffc :=_deef .newPdfFieldFromIndirectObject (_fceb ,nil );
if _dbffc !=nil {return nil ,_dbffc ;};_db .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ddafg );_fdedd =append (_fdedd ,_ddafg );};_gdcg .Fields =&_fdedd ;};if _gbgba :=_bffaa .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_gbgba !=nil {_dfcgd ,_gcab :=_gbd .GetBool (_gbgba );if _gcab {_gdcg .NeedAppearances =_dfcgd ;}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gbgba );
};};if _cacf :=_bffaa .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_cacf !=nil {_gaaag ,_aagff :=_gbd .GetInt (_cacf );if _aagff {_gdcg .SigFlags =_gaaag ;}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cacf );
};};if _fdbe :=_bffaa .Get ("\u0043\u004f");_fdbe !=nil {_gdfd ,_bddg :=_gbd .GetArray (_fdbe );if _bddg {_gdcg .CO =_gdfd ;}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdbe );
};};if _beda :=_bffaa .Get ("\u0044\u0052");_beda !=nil {if _afdbbg ,_fadf :=_gbd .GetDict (_beda );_fadf {_gbdcd ,_bggb :=NewPdfPageResourcesFromDict (_afdbbg );if _bggb !=nil {_db .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_bggb );
return nil ,_bggb ;};_gdcg .DR =_gbdcd ;}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_beda );};};if _ebgaf :=_bffaa .Get ("\u0044\u0041");
_ebgaf !=nil {_aedcg ,_ecbcd :=_gbd .GetString (_ebgaf );if _ecbcd {_gdcg .DA =_aedcg ;}else {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ebgaf );
};};if _fdce :=_bffaa .Get ("\u0051");_fdce !=nil {_efee ,_gbaf :=_gbd .GetInt (_fdce );if _gbaf {_gdcg .Q =_efee ;}else {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fdce );
};};if _caagc :=_bffaa .Get ("\u0058\u0046\u0041");_caagc !=nil {_gdcg .XFA =_caagc ;};_gdcg .ToPdfObject ();return _gdcg ,nil ;};func (_ddf *PdfAnnotationMarkup )appendToPdfDictionary (_eegc *_gbd .PdfObjectDictionary ){_eegc .SetIfNotNil ("\u0054",_ddf .T );
if _ddf .Popup !=nil {_eegc .Set ("\u0050\u006f\u0070u\u0070",_ddf .Popup .ToPdfObject ());};_eegc .SetIfNotNil ("\u0043\u0041",_ddf .CA );_eegc .SetIfNotNil ("\u0052\u0043",_ddf .RC );_eegc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ddf .CreationDate );
_eegc .SetIfNotNil ("\u0049\u0052\u0054",_ddf .IRT );_eegc .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ddf .Subj );_eegc .SetIfNotNil ("\u0052\u0054",_ddf .RT );_eegc .SetIfNotNil ("\u0049\u0054",_ddf .IT );_eegc .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ddf .ExData );
};

// ToPdfObject converts the font to a PDF representation.
func (_cgaf *pdfFontType0 )ToPdfObject ()_gbd .PdfObject {if _cgaf ._cccfd ==nil {_cgaf ._cccfd =&_gbd .PdfIndirectObject {};};_bfbca :=_cgaf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cgaf ._cccfd .PdfObject =_bfbca ;if _cgaf .Encoding !=nil {_bfbca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgaf .Encoding );
}else if _cgaf ._dfcd !=nil {_bfbca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgaf ._dfcd .ToPdfObject ());};if _cgaf .DescendantFont !=nil {_bfbca .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_gbd .MakeArray (_cgaf .DescendantFont .ToPdfObject ()));
};return _cgaf ._cccfd ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_dbaf ,_ffecg :=NewStandard14Font (basefont );if _ffecg !=nil {panic (_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _dbaf ;};func _fbcbc (_eedg *_gbd .PdfIndirectObject )(*PdfOutline ,error ){_eggfc ,_dfaba :=_eedg .PdfObject .(*_gbd .PdfObjectDictionary );if !_dfaba {return nil ,_a .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gecbb :=NewPdfOutline ();if _bded :=_eggfc .Get ("\u0054\u0079\u0070\u0065");_bded !=nil {_gdfgc ,_aadf :=_bded .(*_gbd .PdfObjectName );if _aadf {if *_gdfgc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gdfgc );
};};};if _ebaea :=_eggfc .Get ("\u0043\u006f\u0075n\u0074");_ebaea !=nil {_fdddd ,_agagc :=_gbd .GetNumberAsInt64 (_ebaea );if _agagc !=nil {return nil ,_agagc ;};_gecbb .Count =&_fdddd ;};return _gecbb ,nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func _efaa (_adef _gbd .PdfObject )(*fontFile ,error ){_db .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_adef );
_eaed :=&fontFile {};_adef =_gbd .TraceToDirectObject (_adef );_adgg ,_ccfed :=_adef .(*_gbd .PdfObjectStream );if !_ccfed {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_adef );
return nil ,_gbd .ErrTypeError ;};_bbgd :=_adgg .PdfObjectDictionary ;_bagc ,_dbgedf :=_gbd .DecodeStream (_adgg );if _dbgedf !=nil {return nil ,_dbgedf ;};_fdcbe ,_ccfed :=_gbd .GetNameVal (_bbgd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ccfed {_eaed ._eeaec =_fdcbe ;
if _fdcbe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_db .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_geab ,_ :=_gbd .GetIntVal (_bbgd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ecgedd ,_ :=_gbd .GetIntVal (_bbgd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _geab > len (_bagc ){_geab =len (_bagc );
};if _geab +_ecgedd > len (_bagc ){_ecgedd =len (_bagc )-_geab ;};_dgcfg :=_bagc [:_geab ];var _bgdfc []byte ;if _ecgedd > 0{_bgdfc =_bagc [_geab :_geab +_ecgedd ];};if _geab > 0&&_ecgedd > 0{_dbff :=_eaed .loadFromSegments (_dgcfg ,_bgdfc );if _dbff !=nil {return nil ,_dbff ;
};};return _eaed ,nil ;};func _bafbg (_aaeg *_gbd .PdfObjectDictionary )(*PdfFieldButton ,error ){_ggcc :=&PdfFieldButton {};_ggcc .PdfField =NewPdfField ();_ggcc .PdfField .SetContext (_ggcc );_ggcc .Opt ,_ =_gbd .GetArray (_aaeg .Get ("\u004f\u0070\u0074"));
_babf :=NewPdfAnnotationWidget ();_babf .A ,_ =_gbd .GetDict (_aaeg .Get ("\u0041"));_babf .AP ,_ =_gbd .GetDict (_aaeg .Get ("\u0041\u0050"));_babf .SetContext (_ggcc );_ggcc .PdfField .Annotations =append (_ggcc .PdfField .Annotations ,_babf );return _ggcc ,nil ;
};

// GetXObjectByName gets XObject by name.
func (_dcgg *PdfPage )GetXObjectByName (name _gbd .PdfObjectName )(_gbd .PdfObject ,bool ){_ddag ,_gbdab :=_dcgg .Resources .XObject .(*_gbd .PdfObjectDictionary );if !_gbdab {return nil ,false ;};if _ebeea :=_ddag .Get (name );_ebeea !=nil {return _ebeea ,true ;
};return nil ,false ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_egcbf *PdfPattern )ToPdfObject ()_gbd .PdfObject {_ffcgb :=_egcbf .getDict ();_ffcgb .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ffcgb .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_gbd .MakeInteger (_egcbf .PatternType ));
return _egcbf ._gaadc ;};func _fgfcc (_fdgeg *_gbd .PdfObjectDictionary )(*PdfShadingType2 ,error ){_abagca :=PdfShadingType2 {};_geecf :=_fdgeg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _geecf ==nil {_db .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aefae ,_gaada :=_geecf .(*_gbd .PdfObjectArray );if !_gaada {_db .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_geecf );
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aefae .Len ()!=4{_db .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aefae .Len ());
return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_abagca .Coords =_aefae ;if _bcgac :=_fdgeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bcgac !=nil {_bcgac =_gbd .TraceToDirectObject (_bcgac );
_eeegf ,_bafa :=_bcgac .(*_gbd .PdfObjectArray );if !_bafa {_db .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcgac );return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_abagca .Domain =_eeegf ;};_geecf =_fdgeg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _geecf ==nil {_db .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abagca .Function =[]PdfFunction {};if _fccde ,_fgbcf :=_geecf .(*_gbd .PdfObjectArray );_fgbcf {for _ ,_caecc :=range _fccde .Elements (){_gccd ,_cgef :=_dbege (_caecc );if _cgef !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgef );
return nil ,_cgef ;};_abagca .Function =append (_abagca .Function ,_gccd );};}else {_bdcdg ,_fgcde :=_dbege (_geecf );if _fgcde !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgcde );
return nil ,_fgcde ;};_abagca .Function =append (_abagca .Function ,_bdcdg );};if _eeafe :=_fdgeg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eeafe !=nil {_eeafe =_gbd .TraceToDirectObject (_eeafe );_ddagf ,_aagaf :=_eeafe .(*_gbd .PdfObjectArray );
if !_aagaf {_db .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eeafe );return nil ,_gbd .ErrTypeError ;};if _ddagf .Len ()!=2{_db .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ddagf .Len ());
return nil ,ErrInvalidAttribute ;};_abagca .Extend =_ddagf ;};return &_abagca ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cdbfg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdf :=vals [0];if _bdf < 0.0||_bdf > 1.0{_db .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _bdf < 0.0{_bdf =0.0;}else if _bdf > 1.0{_bdf =1.0;};return NewPdfColorDeviceGray (_bdf ),nil ;};func (_dbdbc *pdfFontSimple )updateStandard14Font (){_ggde ,_cfge :=_dbdbc .Encoder ().(_dc .SimpleEncoder );if !_cfge {_db .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dbdbc .Encoder (),_dbdbc );
return ;};_fdfb :=_ggde .Charcodes ();_dbdbc ._fgaa =make (map[_dc .CharCode ]float64 ,len (_fdfb ));for _ ,_cfac :=range _fdfb {_bgdge ,_ :=_ggde .CharcodeToRune (_cfac );_dbged ,_ :=_dbdbc ._ecfeb .Read (_bgdge );_dbdbc ._fgaa [_cfac ]=_dbged .Wx ;};
};

// ToInteger convert to an integer format.
func (_dagaa *PdfColorCalGray )ToInteger (bits int )uint32 {_bgbg :=_ga .Pow (2,float64 (bits ))-1;return uint32 (_bgbg *_dagaa .Val ());};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_deg :=NewPdfAction ();_ag :=&PdfActionURI {};_ag .PdfAction =_deg ;_deg .SetContext (_ag );return _ag ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_cbg :=NewPdfAnnotation ();_aaag :=&PdfAnnotation3D {};_aaag .PdfAnnotation =_cbg ;_cbg .SetContext (_aaag );return _aaag ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _gbd .StreamEncoder )(*XObjectImage ,error ){_ceecad :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ceecad ,img ,cs ,encoder );};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cbd :=NewPdfAnnotation ();_cegg :=&PdfAnnotationCaret {};_cegg .PdfAnnotation =_cbd ;_cegg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbd .SetContext (_cegg );return _cegg ;};

// ToPdfObject implements interface PdfModel.
func (_gee *PdfActionGoTo )ToPdfObject ()_gbd .PdfObject {_gee .PdfAction .ToPdfObject ();_cce :=_gee ._ef ;_gcg :=_cce .PdfObject .(*_gbd .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeGoTo )));_gcg .SetIfNotNil ("\u0044",_gee .D );
return _cce ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_gbd .PdfIndirectObject ;SV *_gbd .PdfIndirectObject ;};func (_bbcf *PdfAppender )replaceObject (_fagd ,_gcce _gbd .PdfObject ){switch _ddfbd :=_fagd .(type ){case *_gbd .PdfIndirectObject :_bbcf ._fddd [_gcce ]=_ddfbd .ObjectNumber ;
case *_gbd .PdfObjectStream :_bbcf ._fddd [_gcce ]=_ddfbd .ObjectNumber ;};};

// ToPdfObject implements interface PdfModel.
func (_edg *PdfActionLaunch )ToPdfObject ()_gbd .PdfObject {_edg .PdfAction .ToPdfObject ();_gead :=_edg ._ef ;_ecd :=_gead .PdfObject .(*_gbd .PdfObjectDictionary );_ecd .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeLaunch )));if _edg .F !=nil {_ecd .Set ("\u0046",_edg .F .ToPdfObject ());
};_ecd .SetIfNotNil ("\u0057\u0069\u006e",_edg .Win );_ecd .SetIfNotNil ("\u004d\u0061\u0063",_edg .Mac );_ecd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_edg .Unix );_ecd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_edg .NewWindow );return _gead ;
};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _gbd .PdfObject ;Name _gbd .PdfObject ;State _gbd .PdfObject ;StateModel _gbd .PdfObject ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_gffb PdfModel ;_gaadc _gbd .PdfObject ;};

// B returns the value of the B component of the color.
func (_ababg *PdfColorCalRGB )B ()float64 {return _ababg [1]};

// ToPdfObject implements interface PdfModel.
func (_gab *PdfActionThread )ToPdfObject ()_gbd .PdfObject {_gab .PdfAction .ToPdfObject ();_bdd :=_gab ._ef ;_fae :=_bdd .PdfObject .(*_gbd .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeThread )));if _gab .F !=nil {_fae .Set ("\u0046",_gab .F .ToPdfObject ());
};_fae .SetIfNotNil ("\u0044",_gab .D );_fae .SetIfNotNil ("\u0042",_gab .B );return _bdd ;};

// String returns the name of the colorspace (DeviceN).
func (_agaa *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_gbdgcd *PdfFieldButton )ToPdfObject ()_gbd .PdfObject {_gbdgcd .PdfField .ToPdfObject ();_dcdeb :=_gbdgcd ._beee ;_fdef :=_dcdeb .PdfObject .(*_gbd .PdfObjectDictionary );_fdef .Set ("\u0046\u0054",_gbd .MakeName ("\u0042\u0074\u006e"));if _gbdgcd .Opt !=nil {_fdef .Set ("\u004f\u0070\u0074",_gbdgcd .Opt );
};return _dcdeb ;};func (_efe *PdfReader )newPdfAnnotationFromIndirectObject (_gfa *_gbd .PdfIndirectObject )(*PdfAnnotation ,error ){_edgd ,_bgdc :=_gfa .PdfObject .(*_gbd .PdfObjectDictionary );if !_bgdc {return nil ,_a .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_efe ._fafgd .GetModelFromPrimitive (_edgd );model !=nil {_ecg ,_daee :=model .(*PdfAnnotation );if !_daee {return nil ,_a .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ecg ,nil ;};_ggd :=&PdfAnnotation {};_ggd ._faa =_gfa ;_efe ._fafgd .Register (_edgd ,_ggd );if _cdf :=_edgd .Get ("\u0054\u0079\u0070\u0065");_cdf !=nil {_eee ,_bgfc :=_cdf .(*_gbd .PdfObjectName );if !_bgfc {_db .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cdf );
}else {if *_eee !="\u0041\u006e\u006eo\u0074"{_db .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_eee );};};};if _daf :=_edgd .Get ("\u0052\u0065\u0063\u0074");
_daf !=nil {_ggd .Rect =_daf ;};if _fgc :=_edgd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fgc !=nil {_ggd .Contents =_fgc ;};if _ddeg :=_edgd .Get ("\u0050");_ddeg !=nil {_ggd .P =_ddeg ;};if _fab :=_edgd .Get ("\u004e\u004d");_fab !=nil {_ggd .NM =_fab ;
};if _cdae :=_edgd .Get ("\u004d");_cdae !=nil {_ggd .M =_cdae ;};if _eced :=_edgd .Get ("\u0046");_eced !=nil {_ggd .F =_eced ;};if _geg :=_edgd .Get ("\u0041\u0050");_geg !=nil {_ggd .AP =_geg ;};if _gfb :=_edgd .Get ("\u0041\u0053");_gfb !=nil {_ggd .AS =_gfb ;
};if _bcfd :=_edgd .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_bcfd !=nil {_ggd .Border =_bcfd ;};if _acbb :=_edgd .Get ("\u0043");_acbb !=nil {_ggd .C =_acbb ;};if _aba :=_edgd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_aba !=nil {_ggd .StructParent =_aba ;};if _cag :=_edgd .Get ("\u004f\u0043");_cag !=nil {_ggd .OC =_cag ;};_ggaa :=_edgd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _ggaa ==nil {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_ggd ._dbeb =nil ;return _ggd ,nil ;};_fag ,_gecf :=_ggaa .(*_gbd .PdfObjectName );if !_gecf {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ggaa );
return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_ggaa );};switch *_fag {case "\u0054\u0065\u0078\u0074":_ccbc ,_afc :=_efe .newPdfAnnotationTextFromDict (_edgd );
if _afc !=nil {return nil ,_afc ;};_ccbc .PdfAnnotation =_ggd ;_ggd ._dbeb =_ccbc ;return _ggd ,nil ;case "\u004c\u0069\u006e\u006b":_gdbc ,_bff :=_efe .newPdfAnnotationLinkFromDict (_edgd );if _bff !=nil {return nil ,_bff ;};_gdbc .PdfAnnotation =_ggd ;
_ggd ._dbeb =_gdbc ;return _ggd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gdee ,_bcgc :=_efe .newPdfAnnotationFreeTextFromDict (_edgd );if _bcgc !=nil {return nil ,_bcgc ;};_gdee .PdfAnnotation =_ggd ;_ggd ._dbeb =_gdee ;return _ggd ,nil ;
case "\u004c\u0069\u006e\u0065":_eefd ,_gcc :=_efe .newPdfAnnotationLineFromDict (_edgd );if _gcc !=nil {return nil ,_gcc ;};_eefd .PdfAnnotation =_ggd ;_ggd ._dbeb =_eefd ;_db .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_ggd ,_ggd );
_db .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_eefd ,_eefd );_db .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_eefd .PdfAnnotationMarkup ,_eefd .PdfAnnotationMarkup );
return _ggd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_add ,_adf :=_efe .newPdfAnnotationSquareFromDict (_edgd );if _adf !=nil {return nil ,_adf ;};_add .PdfAnnotation =_ggd ;_ggd ._dbeb =_add ;return _ggd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_egcb ,_gegf :=_efe .newPdfAnnotationCircleFromDict (_edgd );
if _gegf !=nil {return nil ,_gegf ;};_egcb .PdfAnnotation =_ggd ;_ggd ._dbeb =_egcb ;return _ggd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_dee ,_ffcg :=_efe .newPdfAnnotationPolygonFromDict (_edgd );if _ffcg !=nil {return nil ,_ffcg ;};_dee .PdfAnnotation =_ggd ;
_ggd ._dbeb =_dee ;return _ggd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bdec ,_cgf :=_efe .newPdfAnnotationPolyLineFromDict (_edgd );if _cgf !=nil {return nil ,_cgf ;};_bdec .PdfAnnotation =_ggd ;_ggd ._dbeb =_bdec ;return _ggd ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_aed ,_dbc :=_efe .newPdfAnnotationHighlightFromDict (_edgd );if _dbc !=nil {return nil ,_dbc ;};_aed .PdfAnnotation =_ggd ;_ggd ._dbeb =_aed ;return _ggd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_aeecf ,_aedc :=_efe .newPdfAnnotationUnderlineFromDict (_edgd );
if _aedc !=nil {return nil ,_aedc ;};_aeecf .PdfAnnotation =_ggd ;_ggd ._dbeb =_aeecf ;return _ggd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_efge ,_gecg :=_efe .newPdfAnnotationSquigglyFromDict (_edgd );if _gecg !=nil {return nil ,_gecg ;
};_efge .PdfAnnotation =_ggd ;_ggd ._dbeb =_efge ;return _ggd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_abgg ,_acd :=_efe .newPdfAnnotationStrikeOut (_edgd );if _acd !=nil {return nil ,_acd ;};_abgg .PdfAnnotation =_ggd ;_ggd ._dbeb =_abgg ;
return _ggd ,nil ;case "\u0043\u0061\u0072e\u0074":_gbe ,_cgce :=_efe .newPdfAnnotationCaretFromDict (_edgd );if _cgce !=nil {return nil ,_cgce ;};_gbe .PdfAnnotation =_ggd ;_ggd ._dbeb =_gbe ;return _ggd ,nil ;case "\u0053\u0074\u0061m\u0070":_cfee ,_gfefb :=_efe .newPdfAnnotationStampFromDict (_edgd );
if _gfefb !=nil {return nil ,_gfefb ;};_cfee .PdfAnnotation =_ggd ;_ggd ._dbeb =_cfee ;return _ggd ,nil ;case "\u0049\u006e\u006b":_dgf ,_bedd :=_efe .newPdfAnnotationInkFromDict (_edgd );if _bedd !=nil {return nil ,_bedd ;};_dgf .PdfAnnotation =_ggd ;
_ggd ._dbeb =_dgf ;return _ggd ,nil ;case "\u0050\u006f\u0070u\u0070":_ccega ,_bgge :=_efe .newPdfAnnotationPopupFromDict (_edgd );if _bgge !=nil {return nil ,_bgge ;};_ccega .PdfAnnotation =_ggd ;_ggd ._dbeb =_ccega ;return _ggd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_egeb ,_fcbd :=_efe .newPdfAnnotationFileAttachmentFromDict (_edgd );
if _fcbd !=nil {return nil ,_fcbd ;};_egeb .PdfAnnotation =_ggd ;_ggd ._dbeb =_egeb ;return _ggd ,nil ;case "\u0053\u006f\u0075n\u0064":_eea ,_adge :=_efe .newPdfAnnotationSoundFromDict (_edgd );if _adge !=nil {return nil ,_adge ;};_eea .PdfAnnotation =_ggd ;
_ggd ._dbeb =_eea ;return _ggd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_cfd ,_ecc :=_efe .newPdfAnnotationRichMediaFromDict (_edgd );if _ecc !=nil {return nil ,_ecc ;};_cfd .PdfAnnotation =_ggd ;_ggd ._dbeb =_cfd ;return _ggd ,nil ;case "\u004d\u006f\u0076i\u0065":_dead ,_cggg :=_efe .newPdfAnnotationMovieFromDict (_edgd );
if _cggg !=nil {return nil ,_cggg ;};_dead .PdfAnnotation =_ggd ;_ggd ._dbeb =_dead ;return _ggd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_fbc ,_edca :=_efe .newPdfAnnotationScreenFromDict (_edgd );if _edca !=nil {return nil ,_edca ;};_fbc .PdfAnnotation =_ggd ;
_ggd ._dbeb =_fbc ;return _ggd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_agae ,_ddab :=_efe .newPdfAnnotationWidgetFromDict (_edgd );if _ddab !=nil {return nil ,_ddab ;};_agae .PdfAnnotation =_ggd ;_ggd ._dbeb =_agae ;return _ggd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gcb ,_dfeg :=_efe .newPdfAnnotationPrinterMarkFromDict (_edgd );
if _dfeg !=nil {return nil ,_dfeg ;};_gcb .PdfAnnotation =_ggd ;_ggd ._dbeb =_gcb ;return _ggd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_gff ,_geb :=_efe .newPdfAnnotationTrapNetFromDict (_edgd );if _geb !=nil {return nil ,_geb ;};_gff .PdfAnnotation =_ggd ;
_ggd ._dbeb =_gff ;return _ggd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ebc ,_fef :=_efe .newPdfAnnotationWatermarkFromDict (_edgd );if _fef !=nil {return nil ,_fef ;};_ebc .PdfAnnotation =_ggd ;_ggd ._dbeb =_ebc ;return _ggd ,nil ;case "\u0033\u0044":_ebgg ,_aef :=_efe .newPdfAnnotation3DFromDict (_edgd );
if _aef !=nil {return nil ,_aef ;};_ebgg .PdfAnnotation =_ggd ;_ggd ._dbeb =_ebgg ;return _ggd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ddd ,_fffe :=_efe .newPdfAnnotationProjectionFromDict (_edgd );if _fffe !=nil {return nil ,_fffe ;
};_ddd .PdfAnnotation =_ggd ;_ggd ._dbeb =_ddd ;return _ggd ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_fbac ,_bcdg :=_efe .newPdfAnnotationRedactFromDict (_edgd );if _bcdg !=nil {return nil ,_bcdg ;};_fbac .PdfAnnotation =_ggd ;_ggd ._dbeb =_fbac ;
return _ggd ,nil ;};_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_fag );
return nil ,nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_gbd .PdfObjectString ;Author *_gbd .PdfObjectString ;Subject *_gbd .PdfObjectString ;Keywords *_gbd .PdfObjectString ;Creator *_gbd .PdfObjectString ;Producer *_gbd .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_gbd .PdfObjectName ;_bafb *_gbd .PdfObjectDictionary ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_adbd DefaultImageHandler )NewGrayImageFromGoImage (goimg _be .Image )(*Image ,error ){_fgdf :=goimg .Bounds ();_ebea :=&Image {Width :int64 (_fgdf .Dx ()),Height :int64 (_fgdf .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gbcdb :=goimg .(type ){case *_be .Gray :if len (_gbcdb .Pix )!=_fgdf .Dx ()*_fgdf .Dy (){_fadd ,_faefe :=_ed .GrayConverter .Convert (goimg );
if _faefe !=nil {return nil ,_faefe ;};_ebea .Data =_fadd .Pix ();}else {_ebea .Data =_gbcdb .Pix ;};case *_be .Gray16 :_ebea .BitsPerComponent =16;if len (_gbcdb .Pix )!=_fgdf .Dx ()*_fgdf .Dy ()*2{_feba ,_aacgf :=_ed .Gray16Converter .Convert (goimg );
if _aacgf !=nil {return nil ,_aacgf ;};_ebea .Data =_feba .Pix ();}else {_ebea .Data =_gbcdb .Pix ;};case _ed .Image :_babce :=_gbcdb .Base ();if _babce .ColorComponents ==1{_ebea .BitsPerComponent =int64 (_babce .BitsPerComponent );_ebea .Data =_babce .Data ;
return _ebea ,nil ;};_dgfg ,_aeccb :=_ed .GrayConverter .Convert (goimg );if _aeccb !=nil {return nil ,_aeccb ;};_ebea .Data =_dgfg .Pix ();default:_deeg ,_agbeb :=_ed .GrayConverter .Convert (goimg );if _agbeb !=nil {return nil ,_agbeb ;};_ebea .Data =_deeg .Pix ();
};return _ebea ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_aebc PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _aebc ._bbddd .getFontDescriptor (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggg *PdfAnnotationFileAttachment )ToPdfObject ()_gbd .PdfObject {_ggg .PdfAnnotation .ToPdfObject ();_adgc :=_ggg ._faa ;_daea :=_adgc .PdfObject .(*_gbd .PdfObjectDictionary );_ggg .PdfAnnotationMarkup .appendToPdfDictionary (_daea );_daea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_daea .SetIfNotNil ("\u0046\u0053",_ggg .FS );_daea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ggg .Name );return _adgc ;};

// M returns the value of the magenta component of the color.
func (_ccba *PdfColorDeviceCMYK )M ()float64 {return _ccba [1]};

// ToPdfObject implements interface PdfModel.
func (_gf *PdfActionImportData )ToPdfObject ()_gbd .PdfObject {_gf .PdfAction .ToPdfObject ();_efc :=_gf ._ef ;_fda :=_efc .PdfObject .(*_gbd .PdfObjectDictionary );_fda .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeImportData )));if _gf .F !=nil {_fda .Set ("\u0046",_gf .F .ToPdfObject ());
};return _efc ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bdgfb *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bdgfb ._gacee !=nil {return _bdgfb ._gacee ,nil ;};if _bdgfb .Annots ==nil {_bdgfb ._gacee =[]*PdfAnnotation {};return nil ,nil ;};if _bdgfb ._baff ==nil {_bdgfb ._gacee =[]*PdfAnnotation {};
return nil ,nil ;};_agage ,_afabde :=_bdgfb ._baff .loadAnnotations (_bdgfb .Annots );if _afabde !=nil {return nil ,_afabde ;};if _agage ==nil {_bdgfb ._gacee =[]*PdfAnnotation {};};_bdgfb ._gacee =_agage ;return _bdgfb ._gacee ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_cedfa *PdfField )GetContext ()PdfModel {return _cedfa ._fdcac };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _gbd .PdfObject ;Name _gbd .PdfObject ;};func (_dde *PdfReader )newPdfActionThreadFromDict (_aee *_gbd .PdfObjectDictionary )(*PdfActionThread ,error ){_bddf ,_fdbg :=_dae (_aee .Get ("\u0046"));
if _fdbg !=nil {return nil ,_fdbg ;};return &PdfActionThread {D :_aee .Get ("\u0044"),B :_aee .Get ("\u0042"),F :_bddf },nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gbde *PdfFunctionType2 )ToPdfObject ()_gbd .PdfObject {_ddeb :=_gbd .MakeDict ();_ddeb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gbd .MakeInteger (2));_abgag :=&_gbd .PdfObjectArray {};for _ ,_fdccg :=range _gbde .Domain {_abgag .Append (_gbd .MakeFloat (_fdccg ));
};_ddeb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abgag );if _gbde .Range !=nil {_egdgc :=&_gbd .PdfObjectArray {};for _ ,_gcbf :=range _gbde .Range {_egdgc .Append (_gbd .MakeFloat (_gcbf ));};_ddeb .Set ("\u0052\u0061\u006eg\u0065",_egdgc );};if _gbde .C0 !=nil {_eebfc :=&_gbd .PdfObjectArray {};
for _ ,_fefae :=range _gbde .C0 {_eebfc .Append (_gbd .MakeFloat (_fefae ));};_ddeb .Set ("\u0043\u0030",_eebfc );};if _gbde .C1 !=nil {_bbbbb :=&_gbd .PdfObjectArray {};for _ ,_efbcb :=range _gbde .C1 {_bbbbb .Append (_gbd .MakeFloat (_efbcb ));};_ddeb .Set ("\u0043\u0031",_bbbbb );
};_ddeb .Set ("\u004e",_gbd .MakeFloat (_gbde .N ));if _gbde ._bgacf !=nil {_gbde ._bgacf .PdfObject =_ddeb ;return _gbde ._bgacf ;};return _ddeb ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fbf :=NewPdfAction ();_edf :=&PdfActionGoTo3DView {};_edf .PdfAction =_fbf ;_fbf .SetContext (_edf );return _edf ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_effa *PdfColorspaceLab )ToPdfObject ()_gbd .PdfObject {_abgfd :=_gbd .MakeArray ();_abgfd .Append (_gbd .MakeName ("\u004c\u0061\u0062"));_dccf :=_gbd .MakeDict ();if _effa .WhitePoint !=nil {_dabb :=_gbd .MakeArray (_gbd .MakeFloat (_effa .WhitePoint [0]),_gbd .MakeFloat (_effa .WhitePoint [1]),_gbd .MakeFloat (_effa .WhitePoint [2]));
_dccf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dabb );}else {_db .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _effa .BlackPoint !=nil {_fedf :=_gbd .MakeArray (_gbd .MakeFloat (_effa .BlackPoint [0]),_gbd .MakeFloat (_effa .BlackPoint [1]),_gbd .MakeFloat (_effa .BlackPoint [2]));_dccf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fedf );
};if _effa .Range !=nil {_faed :=_gbd .MakeArray (_gbd .MakeFloat (_effa .Range [0]),_gbd .MakeFloat (_effa .Range [1]),_gbd .MakeFloat (_effa .Range [2]),_gbd .MakeFloat (_effa .Range [3]));_dccf .Set ("\u0052\u0061\u006eg\u0065",_faed );};_abgfd .Append (_dccf );
if _effa ._gacce !=nil {_effa ._gacce .PdfObject =_abgfd ;return _effa ._gacce ;};return _abgfd ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ffegg *PdfPattern )SetContext (ctx PdfModel ){_ffegg ._gffb =ctx };

// ToPdfObject implements interface PdfModel.
func (_gda *PdfAnnotationStrikeOut )ToPdfObject ()_gbd .PdfObject {_gda .PdfAnnotation .ToPdfObject ();_dcaf :=_gda ._faa ;_aacc :=_dcaf .PdfObject .(*_gbd .PdfObjectDictionary );_gda .PdfAnnotationMarkup .appendToPdfDictionary (_aacc );_aacc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_aacc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gda .QuadPoints );return _dcaf ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_gbd .PdfObject ;GetContainingPdfObject ()_gbd .PdfObject ;};func (_abcde *PdfFunctionType0 )processSamples ()error {_bgdd :=_de .ResampleBytes (_abcde ._facac ,_abcde .BitsPerSample );_abcde ._gace =_bgdd ;return nil ;
};

// ToPdfObject implements interface PdfModel.
func (_aca *PdfActionNamed )ToPdfObject ()_gbd .PdfObject {_aca .PdfAction .ToPdfObject ();_eac :=_aca ._ef ;_bbc :=_eac .PdfObject .(*_gbd .PdfObjectDictionary );_bbc .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeNamed )));_bbc .SetIfNotNil ("\u004e",_aca .N );
return _eac ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dcdcd :=PdfColorDeviceGray (grayVal );return &_dcdcd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ccdae *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_becb ,_fbce :=_gbd .GetNumbersAsFloat (objects );
if _fbce !=nil {return nil ,_fbce ;};return _ccdae .ColorFromFloats (_becb );};func _dbdg (_eebcc _gbd .PdfObject )(map[_dc .CharCode ]float64 ,error ){if _eebcc ==nil {return nil ,nil ;};_gfccaf ,_cdcg :=_gbd .GetArray (_eebcc );if !_cdcg {return nil ,nil ;
};_cfffc :=map[_dc .CharCode ]float64 {};_eecf :=_gfccaf .Len ();for _eggee :=0;_eggee < _eecf -1;_eggee ++{_ggcfd :=_gbd .TraceToDirectObject (_gfccaf .Get (_eggee ));_bgfb ,_cfbcc :=_gbd .GetIntVal (_ggcfd );if !_cfbcc {return nil ,_a .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_eggee ,_ggcfd );
};_eggee ++;if _eggee > _eecf -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gfccaf );};_eacb :=_gbd .TraceToDirectObject (_gfccaf .Get (_eggee ));
switch _eacb .(type ){case *_gbd .PdfObjectArray :_bgdg ,_ :=_gbd .GetArray (_eacb );if _deab ,_daad :=_bgdg .ToFloat64Array ();_daad ==nil {for _cafcd :=0;_cafcd < len (_deab );_cafcd ++{_cfffc [_dc .CharCode (_bgfb +_cafcd )]=_deab [_cafcd ];};}else {return nil ,_a .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_eggee ,_eacb );
};case *_gbd .PdfObjectInteger :_dbge ,_dcee :=_gbd .GetIntVal (_eacb );if !_dcee {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_eggee ,_eacb );
};_eggee ++;if _eggee > _eecf -1{return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gfccaf );};_bfab :=_gfccaf .Get (_eggee );_faced ,_abcc :=_gbd .GetNumberAsFloat (_bfab );
if _abcc !=nil {return nil ,_a .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_eggee ,_bfab );};for _ddge :=_bgfb ;_ddge <=_dbge ;
_ddge ++{_cfffc [_dc .CharCode (_ddge )]=_faced ;};default:return nil ,_a .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_eggee ,_eacb );
};};return _cfffc ,nil ;};

// ToPdfObject returns a stream object.
func (_ccbg *XObjectForm )ToPdfObject ()_gbd .PdfObject {_dadcg :=_ccbg ._cfbcb ;_deddb :=_dadcg .PdfObjectDictionary ;if _ccbg .Filter !=nil {_deddb =_ccbg .Filter .MakeStreamDict ();_dadcg .PdfObjectDictionary =_deddb ;};_deddb .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_deddb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0046\u006f\u0072\u006d"));_deddb .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_ccbg .FormType );_deddb .SetIfNotNil ("\u0042\u0042\u006f\u0078",_ccbg .BBox );_deddb .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_ccbg .Matrix );
if _ccbg .Resources !=nil {_deddb .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ccbg .Resources .ToPdfObject ());};_deddb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ccbg .Group );_deddb .SetIfNotNil ("\u0052\u0065\u0066",_ccbg .Ref );_deddb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_ccbg .MetaData );
_deddb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ccbg .PieceInfo );_deddb .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ccbg .LastModified );_deddb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ccbg .StructParent );
_deddb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ccbg .StructParents );_deddb .SetIfNotNil ("\u004f\u0050\u0049",_ccbg .OPI );_deddb .SetIfNotNil ("\u004f\u0043",_ccbg .OC );_deddb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ccbg .Name );
_deddb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_ccbg .Stream ))));_dadcg .Stream =_ccbg .Stream ;return _dadcg ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_aggac []byte )(_ccbfa int ,_aabded error );};

// ToPdfObject converts the font to a PDF representation.
func (_gbdff *pdfFontType3 )ToPdfObject ()_gbd .PdfObject {if _gbdff ._cgfc ==nil {_gbdff ._cgfc =&_gbd .PdfIndirectObject {};};_bbfab :=_gbdff .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_gbdff ._cgfc .PdfObject =_bbfab ;if _gbdff .FirstChar !=nil {_bbfab .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gbdff .FirstChar );
};if _gbdff .LastChar !=nil {_bbfab .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gbdff .LastChar );};if _gbdff .Widths !=nil {_bbfab .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gbdff .Widths );};if _gbdff .Encoding !=nil {_bbfab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbdff .Encoding );
}else if _gbdff ._aaba !=nil {_dedd :=_gbdff ._aaba .ToPdfObject ();if _dedd !=nil {_bbfab .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dedd );};};if _gbdff .FontBBox !=nil {_bbfab .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gbdff .FontBBox );
};if _gbdff .FontMatrix !=nil {_bbfab .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_gbdff .FontMatrix );};if _gbdff .CharProcs !=nil {_bbfab .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_gbdff .CharProcs );};if _gbdff .Resources !=nil {_bbfab .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gbdff .Resources );
};return _gbdff ._cgfc ;};func _fcbgf (_acea *_gbd .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fgce :=&PdfTilingPattern {};_eceba :=_acea .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _eceba ==nil {_db .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gecgb ,_acfga :=_eceba .(*_gbd .PdfObjectInteger );if !_acfga {_db .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_eceba );
return nil ,_gbd .ErrTypeError ;};_fgce .PaintType =_gecgb ;_eceba =_acea .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _eceba ==nil {_db .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gdfe ,_acfga :=_eceba .(*_gbd .PdfObjectInteger );if !_acfga {_db .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eceba );
return nil ,_gbd .ErrTypeError ;};_fgce .TilingType =_gdfe ;_eceba =_acea .Get ("\u0042\u0042\u006f\u0078");if _eceba ==nil {_db .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_eceba =_gbd .TraceToDirectObject (_eceba );_dcbfa ,_acfga :=_eceba .(*_gbd .PdfObjectArray );if !_acfga {_db .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eceba );
return nil ,_gbd .ErrTypeError ;};_gbfdg ,_ecedc :=NewPdfRectangle (*_dcbfa );if _ecedc !=nil {_db .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ecedc );return nil ,_ecedc ;};_fgce .BBox =_gbfdg ;_eceba =_acea .Get ("\u0058\u0053\u0074e\u0070");
if _eceba ==nil {_db .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gegcd ,_ecedc :=_gbd .GetNumberAsFloat (_eceba );if _ecedc !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gegcd );
return nil ,_ecedc ;};_fgce .XStep =_gbd .MakeFloat (_gegcd );_eceba =_acea .Get ("\u0059\u0053\u0074e\u0070");if _eceba ==nil {_db .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cbbag ,_ecedc :=_gbd .GetNumberAsFloat (_eceba );if _ecedc !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cbbag );
return nil ,_ecedc ;};_fgce .YStep =_gbd .MakeFloat (_cbbag );_eceba =_acea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _eceba ==nil {_db .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acea ,_acfga =_gbd .TraceToDirectObject (_eceba ).(*_gbd .PdfObjectDictionary );if !_acfga {return nil ,_a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eceba );
};_ebcba ,_ecedc :=NewPdfPageResourcesFromDict (_acea );if _ecedc !=nil {return nil ,_ecedc ;};_fgce .Resources =_ebcba ;if _feegb :=_acea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_feegb !=nil {_dbadd ,_egdb :=_feegb .(*_gbd .PdfObjectArray );if !_egdb {_db .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feegb );
return nil ,_gbd .ErrTypeError ;};_fgce .Matrix =_dbadd ;};return _fgce ,nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_gdb :=NewPdfAction ();_cca :=&PdfActionRendition {};_cca .PdfAction =_gdb ;_gdb .SetContext (_cca );return _cca ;};var _afab =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_deb :=NewPdfAnnotation ();_gaba :=&PdfAnnotationText {};_gaba .PdfAnnotation =_deb ;_gaba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_deb .SetContext (_gaba );return _gaba ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_ggab *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _ggab .flattenFieldsWithOpts (false ,appgen ,opts );};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gegefc *PdfPage )GetPageAsIndirectObject ()*_gbd .PdfIndirectObject {return _gegefc ._fgbbe };

// SetAction sets the PDF action for the annotation link.
func (_gba *PdfAnnotationLink )SetAction (action *PdfAction ){_gba ._geed =action ;if action ==nil {_gba .A =nil ;};};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _gbd .PdfObject ;H _gbd .PdfObject ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _gbd .PdfObject ;B _gbd .PdfObject ;};func _dgfd (_ceac *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ceac }};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecdgg *PdfShadingType4 )ToPdfObject ()_gbd .PdfObject {_ecdgg .PdfShading .ToPdfObject ();_debf ,_cfdgf :=_ecdgg .getShadingDict ();if _cfdgf !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecdgg .BitsPerCoordinate !=nil {_debf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecdgg .BitsPerCoordinate );};if _ecdgg .BitsPerComponent !=nil {_debf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecdgg .BitsPerComponent );
};if _ecdgg .BitsPerFlag !=nil {_debf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecdgg .BitsPerFlag );};if _ecdgg .Decode !=nil {_debf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecdgg .Decode );};if _ecdgg .Function !=nil {if len (_ecdgg .Function )==1{_debf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecdgg .Function [0].ToPdfObject ());
}else {_fdbec :=_gbd .MakeArray ();for _ ,_ceadg :=range _ecdgg .Function {_fdbec .Append (_ceadg .ToPdfObject ());};_debf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdbec );};};return _ecdgg ._baae ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ecfb *PdfPageResources )GetFontByName (keyName _gbd .PdfObjectName )(_gbd .PdfObject ,bool ){if _ecfb .Font ==nil {return nil ,false ;};_fgeef ,_fdeda :=_gbd .TraceToDirectObject (_ecfb .Font ).(*_gbd .PdfObjectDictionary );if !_fdeda {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gbd .TraceToDirectObject (_ecfb .Font ));
return nil ,false ;};if _decda :=_fgeef .Get (keyName );_decda !=nil {return _decda ,true ;};return nil ,false ;};

// SetContext sets the sub action (context).
func (_bfed *PdfAction )SetContext (ctx PdfModel ){_bfed ._ca =ctx };

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ebcef *PdfPageResources )HasExtGState (keyName _gbd .PdfObjectName )bool {_ ,_eaga :=_ebcef .GetFontByName (keyName );return _eaga ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_adefd .Lock ();defer _adefd .Unlock ();_dddfe =keywords };

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fcccf *PdfPage )GetContainingPdfObject ()_gbd .PdfObject {return _fcccf ._fgbbe };func (_fgacaf *LTV )generateVRIKey (_ageb *PdfSignature )(string ,error ){_bcfff ,_fffg :=_agcfd (_ageb .Contents .Bytes ());if _fffg !=nil {return "",_fffg ;};return _fc .ToUpper (_c .EncodeToString (_bcfff )),nil ;
};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dbgf *PdfColorLab )GetNumComponents ()int {return 3};type pdfCIDFontType2 struct{fontCommon ;_ccaee *_gbd .PdfIndirectObject ;_dcgcg _dc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_gbd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gbd .PdfObject ;W _gbd .PdfObject ;DW2 _gbd .PdfObject ;W2 _gbd .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _gbd .PdfObject ;_dfbga map[_dc .CharCode ]float64 ;_fcaca float64 ;_ggbed map[rune ]int ;};

// ToPdfObject implements interface PdfModel.
func (_ecedb *PdfAnnotationSound )ToPdfObject ()_gbd .PdfObject {_ecedb .PdfAnnotation .ToPdfObject ();_gddb :=_ecedb ._faa ;_eggf :=_gddb .PdfObject .(*_gbd .PdfObjectDictionary );_ecedb .PdfAnnotationMarkup .appendToPdfDictionary (_eggf );_eggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0053\u006f\u0075n\u0064"));
_eggf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ecedb .Sound );_eggf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecedb .Name );return _gddb ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gbd .PdfObject ;};func _geef (_efba *_gbd .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bfecd :=PdfShadingType7 {};_dfec :=_efba .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _dfec ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_caeef ,_bgbe :=_dfec .(*_gbd .PdfObjectInteger );if !_bgbe {_db .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfec );
return nil ,_gbd .ErrTypeError ;};_bfecd .BitsPerCoordinate =_caeef ;_dfec =_efba .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dfec ==nil {_db .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_caeef ,_bgbe =_dfec .(*_gbd .PdfObjectInteger );if !_bgbe {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dfec );
return nil ,_gbd .ErrTypeError ;};_bfecd .BitsPerComponent =_caeef ;_dfec =_efba .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dfec ==nil {_db .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_caeef ,_bgbe =_dfec .(*_gbd .PdfObjectInteger );if !_bgbe {_db .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dfec );
return nil ,_gbd .ErrTypeError ;};_bfecd .BitsPerComponent =_caeef ;_dfec =_efba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dfec ==nil {_db .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbdcgc ,_bgbe :=_dfec .(*_gbd .PdfObjectArray );if !_bgbe {_db .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfec );
return nil ,_gbd .ErrTypeError ;};_bfecd .Decode =_cbdcgc ;if _ddfd :=_efba .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ddfd !=nil {_bfecd .Function =[]PdfFunction {};if _bggca ,_dbfd :=_ddfd .(*_gbd .PdfObjectArray );_dbfd {for _ ,_fcfbe :=range _bggca .Elements (){_fbdcc ,_febaa :=_dbege (_fcfbe );
if _febaa !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_febaa );return nil ,_febaa ;};_bfecd .Function =append (_bfecd .Function ,_fbdcc );
};}else {_cbggg ,_fggb :=_dbege (_ddfd );if _fggb !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fggb );return nil ,_fggb ;};
_bfecd .Function =append (_bfecd .Function ,_cbggg );};};return &_bfecd ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cabe *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_db .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ff .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_bfff *LTV )enable (_bcgfb ,_faagf []*_ad .Certificate ,_dbbdc string )error {_gdcba ,_eage ,_eecfg :=_bfff .buildCertChain (_bcgfb ,_faagf );
if _eecfg !=nil {return _eecfg ;};_dfbc ,_eecfg :=_bfff .getCerts (_gdcba );if _eecfg !=nil {return _eecfg ;};_dcbfc ,_eecfg :=_bfff .getOCSPs (_gdcba ,_eage );if _eecfg !=nil {return _eecfg ;};_dcace ,_eecfg :=_bfff .getCRLs (_gdcba );if _eecfg !=nil {return _eecfg ;
};_debgb :=_bfff ._eefce ;_daddc ,_eecfg :=_debgb .addCerts (_dfbc );if _eecfg !=nil {return _eecfg ;};_cecaf ,_eecfg :=_debgb .addOCSPs (_dcbfc );if _eecfg !=nil {return _eecfg ;};_cafdf ,_eecfg :=_debgb .addCRLs (_dcace );if _eecfg !=nil {return _eecfg ;
};if _dbbdc !=""{_debgb .VRI [_dbbdc ]=&VRI {Cert :_daddc ,OCSP :_cecaf ,CRL :_cafdf };};_bfff ._aacee .SetDSS (_debgb );return nil ;};var (_caabc =_acg .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_cgaa =_acg .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_cbgd =_acg .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_fcgf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gbagd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_fgcb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _gbd .PdfObject ;Volume _gbd .PdfObject ;Synchronous _gbd .PdfObject ;Repeat _gbd .PdfObject ;Mix _gbd .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _gbd .StreamEncoder ;FormType _gbd .PdfObject ;BBox _gbd .PdfObject ;Matrix _gbd .PdfObject ;Resources *PdfPageResources ;Group _gbd .PdfObject ;Ref _gbd .PdfObject ;MetaData _gbd .PdfObject ;PieceInfo _gbd .PdfObject ;LastModified _gbd .PdfObject ;
StructParent _gbd .PdfObject ;StructParents _gbd .PdfObject ;OPI _gbd .PdfObject ;OC _gbd .PdfObject ;Name _gbd .PdfObject ;

// Stream data.
Stream []byte ;_cfbcb *_gbd .PdfObjectStream ;};func _fegae ()_bd .Time {_adefd .Lock ();defer _adefd .Unlock ();return _acfbb };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _gbd .PdfObject ;RichMediaContent _gbd .PdfObject ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_cabg *pdfCIDFontType2 )baseFields ()*fontCommon {return &_cabg .fontCommon };

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _gbd .PdfObject ;FontFamily _gbd .PdfObject ;FontStretch _gbd .PdfObject ;FontWeight _gbd .PdfObject ;Flags _gbd .PdfObject ;FontBBox _gbd .PdfObject ;ItalicAngle _gbd .PdfObject ;Ascent _gbd .PdfObject ;Descent _gbd .PdfObject ;
Leading _gbd .PdfObject ;CapHeight _gbd .PdfObject ;XHeight _gbd .PdfObject ;StemV _gbd .PdfObject ;StemH _gbd .PdfObject ;AvgWidth _gbd .PdfObject ;MaxWidth _gbd .PdfObject ;MissingWidth _gbd .PdfObject ;FontFile _gbd .PdfObject ;FontFile2 _gbd .PdfObject ;
FontFile3 _gbd .PdfObject ;CharSet _gbd .PdfObject ;_cdfaa int ;_dcbc float64 ;*fontFile ;_fegf *_fad .TtfType ;

// Additional entries for CIDFonts
Style _gbd .PdfObject ;Lang _gbd .PdfObject ;FD _gbd .PdfObject ;CIDSet _gbd .PdfObject ;_cgccc *_gbd .PdfIndirectObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _gbd .PdfObject ;Sy _gbd .PdfObject ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gcgff *PdfFont )ToUnicode ()string {if _gcgff .baseFields ()._agcgb ==nil {return "";};return _gcgff .baseFields ()._agcgb .Name ();};

// ToPdfObject implements interface PdfModel.
func (_dbf *PdfAnnotationWidget )ToPdfObject ()_gbd .PdfObject {_dbf .PdfAnnotation .ToPdfObject ();_ffbg :=_dbf ._faa ;_dedg :=_ffbg .PdfObject .(*_gbd .PdfObjectDictionary );if _dbf ._edae {return _ffbg ;};_dbf ._edae =true ;_dedg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_dedg .SetIfNotNil ("\u0048",_dbf .H );_dedg .SetIfNotNil ("\u004d\u004b",_dbf .MK );_dedg .SetIfNotNil ("\u0041",_dbf .A );_dedg .SetIfNotNil ("\u0041\u0041",_dbf .AA );_dedg .SetIfNotNil ("\u0042\u0053",_dbf .BS );_cfeg :=_dbf .Parent ;if _dbf ._fbb !=nil {if _dbf ._fbb ._beee ==_dbf ._faa {_dbf ._fbb .ToPdfObject ();
};_cfeg =_dbf ._fbb .GetContainingPdfObject ();};if _cfeg !=_ffbg {_dedg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cfeg );};_dbf ._edae =false ;return _ffbg ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_dgdbb *VRI )ToPdfObject ()*_gbd .PdfObjectDictionary {_fdgcc :=_gbd .MakeDict ();_fdgcc .SetIfNotNil (_gbd .PdfObjectName ("\u0043\u0065\u0072\u0074"),_dcagd (_dgdbb .Cert ));_fdgcc .SetIfNotNil (_gbd .PdfObjectName ("\u004f\u0043\u0053\u0050"),_dcagd (_dgdbb .OCSP ));
_fdgcc .SetIfNotNil (_gbd .PdfObjectName ("\u0043\u0052\u004c"),_dcagd (_dgdbb .CRL ));_fdgcc .SetIfNotNil ("\u0054\u0055",_dgdbb .TU );_fdgcc .SetIfNotNil ("\u0054\u0053",_dgdbb .TS );return _fdgcc ;};func _gdfbf (_feaed *[]*PdfField ,_aafa FieldFilterFunc ,_dcdcg bool )[]*PdfField {if _feaed ==nil {return nil ;
};_cgegaf :=*_feaed ;if len (*_feaed )==0{return nil ;};_geac :=_cgegaf [:0];if _aafa ==nil {_aafa =func (*PdfField )bool {return true };};var _dadec []*PdfField ;for _ ,_acdbf :=range _cgegaf {_gfede :=_aafa (_acdbf );if _gfede {_dadec =append (_dadec ,_acdbf );
if len (_acdbf .Kids )> 0{_dadec =append (_dadec ,_gdfbf (&_acdbf .Kids ,_aafa ,_dcdcg )...);};};if !_dcdcg ||!_gfede ||len (_acdbf .Kids )> 0{_geac =append (_geac ,_acdbf );};};*_feaed =_geac ;return _dadec ;};

// SetVersion sets the PDF version of the output file.
func (_cbcde *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cbcde ._gefd =majorVersion ;_cbcde ._afbg =minorVersion ;};

// ToPdfObject implements interface PdfModel.
func (_fca *PdfAnnotationHighlight )ToPdfObject ()_gbd .PdfObject {_fca .PdfAnnotation .ToPdfObject ();_cdb :=_fca ._faa ;_ffa :=_cdb .PdfObject .(*_gbd .PdfObjectDictionary );_fca .PdfAnnotationMarkup .appendToPdfDictionary (_ffa );_ffa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_ffa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fca .QuadPoints );return _cdb ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_abfef *PdfPageResources )HasColorspaceByName (keyName _gbd .PdfObjectName )bool {_edbb ,_ggbgg :=_abfef .GetColorspaces ();if _ggbgg !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggbgg );
return false ;};if _edbb ==nil {return false ;};_ ,_bbbfa :=_edbb .Colorspaces [string (keyName )];return _bbbfa ;};func (_aagcf *PdfReader )buildPageList (_gabdf *_gbd .PdfIndirectObject ,_cceaa *_gbd .PdfIndirectObject ,_adea map[_gbd .PdfObject ]struct{})error {if _gabdf ==nil {return nil ;
};if _ ,_egcge :=_adea [_gabdf ];_egcge {_db .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_gabdf .ObjectNumber );
return nil ;};_adea [_gabdf ]=struct{}{};_aegaf ,_ebfge :=_gabdf .PdfObject .(*_gbd .PdfObjectDictionary );if !_ebfge {return _ff .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_cacdg ,_ebfge :=(*_aegaf ).Get ("\u0054\u0079\u0070\u0065").(*_gbd .PdfObjectName );
if !_ebfge {if _aegaf .Get ("\u004b\u0069\u0064\u0073")==nil {return _ff .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_db .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_cacdg =_gbd .MakeName ("\u0050\u0061\u0067e\u0073");_aegaf .Set ("\u0054\u0079\u0070\u0065",_cacdg );};_db .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_cacdg ,_gabdf );
if *_cacdg =="\u0050\u0061\u0067\u0065"{_ebdee ,_gbbc :=_aagcf .newPdfPageFromDict (_aegaf );if _gbbc !=nil {return _gbbc ;};_ebdee .setContainer (_gabdf );if _cceaa !=nil {_aegaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cceaa );};_aagcf ._dfgeb =append (_aagcf ._dfgeb ,_gabdf );
_aagcf .PageList =append (_aagcf .PageList ,_ebdee );return nil ;};if *_cacdg !="\u0050\u0061\u0067e\u0073"{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_cacdg );
return _ff .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _cceaa !=nil {_aegaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cceaa );};if !_aagcf ._adaag {_cdde :=_aagcf .traverseObjectData (_gabdf );if _cdde !=nil {return _cdde ;};};_dggd ,_ceecb :=_aagcf ._dagg .Resolve (_aegaf .Get ("\u004b\u0069\u0064\u0073"));
if _ceecb !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _ceecb ;};var _dccgg *_gbd .PdfObjectArray ;
_dccgg ,_ebfge =_dggd .(*_gbd .PdfObjectArray );if !_ebfge {_eaabd ,_deffb :=_dggd .(*_gbd .PdfIndirectObject );if !_deffb {return _ff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dccgg ,_ebfge =_eaabd .PdfObject .(*_gbd .PdfObjectArray );
if !_ebfge {return _ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_db .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dccgg );
for _ccge ,_edcdd :=range _dccgg .Elements (){_effb ,_adeag :=_gbd .GetIndirect (_edcdd );if !_adeag {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_effb );
return _ff .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dccgg .Set (_ccge ,_effb );_ceecb =_aagcf .buildPageList (_effb ,_gabdf ,_adea );if _ceecb !=nil {return _ceecb ;
};};return nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_eebgd *PdfAcroForm )ToPdfObject ()_gbd .PdfObject {_efbcc :=_eebgd ._cdec ;_gcded :=_efbcc .PdfObject .(*_gbd .PdfObjectDictionary );if _eebgd .Fields !=nil {_cegcc :=_gbd .PdfObjectArray {};for _ ,_afccc :=range *_eebgd .Fields {_baacc :=_afccc .GetContext ();
if _baacc !=nil {_cegcc .Append (_baacc .ToPdfObject ());}else {_cegcc .Append (_afccc .ToPdfObject ());};};_gcded .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cegcc );};if _eebgd .NeedAppearances !=nil {_gcded .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_eebgd .NeedAppearances );
};if _eebgd .SigFlags !=nil {_gcded .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_eebgd .SigFlags );};if _eebgd .CO !=nil {_gcded .Set ("\u0043\u004f",_eebgd .CO );};if _eebgd .DR !=nil {_gcded .Set ("\u0044\u0052",_eebgd .DR .ToPdfObject ());
};if _eebgd .DA !=nil {_gcded .Set ("\u0044\u0041",_eebgd .DA );};if _eebgd .Q !=nil {_gcded .Set ("\u0051",_eebgd .Q );};if _eebgd .XFA !=nil {_gcded .Set ("\u0058\u0046\u0041",_eebgd .XFA );};return _efbcc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_edcc pdfCIDFontType2 )GetRuneMetrics (r rune )(_fad .CharMetrics ,bool ){_cedad ,_fffba :=_edcc ._ggbed [r ];if !_fffba {_bcde ,_geddd :=_gbd .GetInt (_edcc .DW );if !_geddd {return _fad .CharMetrics {},false ;};_cedad =int (*_bcde );};return _fad .CharMetrics {Wx :float64 (_cedad )},true ;
};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gbd .PdfObject ;IC _gbd .PdfObject ;BE _gbd .PdfObject ;RD _gbd .PdfObject ;};func _cggad (_cdced _gbd .PdfObject )[]*_gbd .PdfObjectStream {if _cdced ==nil {return nil ;};_fgccec ,_afdbg :=_gbd .GetArray (_cdced );
if !_afdbg ||_fgccec .Len ()==0{return nil ;};_aegbg :=make ([]*_gbd .PdfObjectStream ,0,_fgccec .Len ());for _ ,_eefe :=range _fgccec .Elements (){if _abeea ,_gdga :=_gbd .GetStream (_eefe );_gdga {_aegbg =append (_aegbg ,_abeea );};};return _aegbg ;};


// ToPdfObject implements interface PdfModel.
func (_ffed *PdfAnnotationMovie )ToPdfObject ()_gbd .PdfObject {_ffed .PdfAnnotation .ToPdfObject ();_cge :=_ffed ._faa ;_bfeb :=_cge .PdfObject .(*_gbd .PdfObjectDictionary );_bfeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u004d\u006f\u0076i\u0065"));
_bfeb .SetIfNotNil ("\u0054",_ffed .T );_bfeb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ffed .Movie );_bfeb .SetIfNotNil ("\u0041",_ffed .A );return _cge ;};func _acge (_egbe *_gbd .PdfObjectDictionary ,_ffae *fontCommon )(*pdfFontType0 ,error ){_faaf ,_dabbe :=_gbd .GetArray (_egbe .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dabbe {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ffae );
return nil ,_gbd .ErrRangeError ;};if _faaf .Len ()!=1{_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_faaf .Len ());return nil ,_gbd .ErrRangeError ;
};_ebggb ,_bbfcg :=_eaaeg (_faaf .Get (0),false );if _bbfcg !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bbfcg ,_ffae );
return nil ,_bbfcg ;};_badff :=_dfff (_ffae );_badff .DescendantFont =_ebggb ;_gffa ,_dabbe :=_gbd .GetNameVal (_egbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dabbe {if _gffa =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gffa =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_badff ._dfcd =_dc .NewIdentityTextEncoder (_gffa );
}else if _bgg .IsPredefinedCMap (_gffa ){_badff ._fdcfe ,_bbfcg =_bgg .LoadPredefinedCMap (_gffa );if _bbfcg !=nil {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gffa ,_bbfcg );
};}else {_db .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gffa );};};if _eeff :=_ebggb .baseFields ()._agcgb ;_eeff !=nil {if _dbccd :=_eeff .Name ();_dbccd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dbccd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dbccd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dbccd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_badff ._dfcd =_dc .NewCMapEncoder (_gffa ,_badff ._fdcfe ,_eeff );
};};return _badff ,nil ;};

// Items returns all children outline items.
func (_adfcc *OutlineItem )Items ()[]*OutlineItem {return _adfcc .Entries };func (_fefgg *DSS )addOCSPs (_ebbef [][]byte )([]*_gbd .PdfObjectStream ,error ){return _fefgg .add (&_fefgg .OCSPs ,_fefgg ._bgcbd ,_ebbef );};

// SetShadingByName sets a shading resource specified by keyName.
func (_ebfe *PdfPageResources )SetShadingByName (keyName _gbd .PdfObjectName ,shadingObj _gbd .PdfObject )error {if _ebfe .Shading ==nil {_ebfe .Shading =_gbd .MakeDict ();};_fadba ,_fbgfb :=_ebfe .Shading .(*_gbd .PdfObjectDictionary );if !_fbgfb {return _gbd .ErrTypeError ;
};_fadba .Set (keyName ,shadingObj );return nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cgbcb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_cefec :=_cgbcb .fill (provider ,appGen );if _cefec !=nil {return _cefec ;};if _ ,_cggeb :=provider .(FieldImageProvider );_cggeb {_cefec =_cgbcb .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _cefec ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_gagf *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_eebf *PdfAnnotationRedact )ToPdfObject ()_gbd .PdfObject {_eebf .PdfAnnotation .ToPdfObject ();_bbfb :=_eebf ._faa ;_dgfe :=_bbfb .PdfObject .(*_gbd .PdfObjectDictionary );_eebf .PdfAnnotationMarkup .appendToPdfDictionary (_dgfe );_dgfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_dgfe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eebf .QuadPoints );_dgfe .SetIfNotNil ("\u0049\u0043",_eebf .IC );_dgfe .SetIfNotNil ("\u0052\u004f",_eebf .RO );_dgfe .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_eebf .OverlayText );
_dgfe .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_eebf .Repeat );_dgfe .SetIfNotNil ("\u0044\u0041",_eebf .DA );_dgfe .SetIfNotNil ("\u0051",_eebf .Q );return _bbfb ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ceadb *PdfPage )GetAllContentStreams ()(string ,error ){_fbgca ,_acbfg :=_ceadb .GetContentStreams ();if _acbfg !=nil {return "",_acbfg ;};return _fc .Join (_fbgca ,"\u0020"),nil ;};

// Y returns the value of the yellow component of the color.
func (_fggeb *PdfColorDeviceCMYK )Y ()float64 {return _fggeb [2]};type fontCommon struct{_dgcff string ;_bbecf string ;_ffbcd string ;_ecbc _gbd .PdfObject ;_agcgb *_bgg .CMap ;_ggff *PdfFontDescriptor ;_aafba int64 ;};func (_ggdg *PdfReader )loadDSS ()(*DSS ,error ){if _ggdg ._dagg .GetCrypter ()!=nil &&!_ggdg ._dagg .IsAuthenticated (){return nil ,_a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fcbgfc :=_ggdg ._dccge .Get ("\u0044\u0053\u0053");if _fcbgfc ==nil {return nil ,nil ;};_fagcd ,_ :=_gbd .GetIndirect (_fcbgfc );_fcbgfc =_gbd .TraceToDirectObject (_fcbgfc );switch _edaeb :=_fcbgfc .(type ){case *_gbd .PdfObjectNull :return nil ,nil ;
case *_gbd .PdfObjectDictionary :return _ggbbe (_fagcd ,_edaeb );};return nil ,_a .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fcbgfc );};func (_gegd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _gegd ._ggff };


// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cace :=&PdfColorspaceCalGray {};_cace .BlackPoint =[]float64 {0.0,0.0,0.0};_cace .Gamma =1;return _cace ;};func (_cfca *LTV )validateSig (_cecfa *PdfSignature )error {if _cecfa ==nil ||_cecfa .Contents ==nil ||len (_cecfa .Contents .Bytes ())==0{return _a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_cecfa );
};return nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_aeccg *PdfReader )GetObjectNums ()[]int {return _aeccg ._dagg .GetObjectNums ()};func (_aagbbc *PdfWriter )writeObject (_gdac int ,_fgbef _gbd .PdfObject ){_db .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gdac );
if _dgedc ,_dedgc :=_fgbef .(*_gbd .PdfIndirectObject );_dedgc {_aagbbc ._agffb [_gdac ]=crossReference {Type :1,Offset :_aagbbc ._fdff ,Generation :_dgedc .GenerationNumber };_cbde :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gdac );
if _fbfb ,_fcffae :=_dgedc .PdfObject .(*pdfSignDictionary );_fcffae {_fbfb ._fdaeg =_aagbbc ._fdff +int64 (len (_cbde ));};if _dgedc .PdfObject ==nil {_db .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_dgedc .PdfObject =_gbd .MakeNull ();};_cbde +=_dgedc .PdfObject .WriteString ();_cbde +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_aagbbc .writeString (_cbde );return ;};if _daecd ,_egagg :=_fgbef .(*_gbd .PdfObjectStream );_egagg {_aagbbc ._agffb [_gdac ]=crossReference {Type :1,Offset :_aagbbc ._fdff ,Generation :_daecd .GenerationNumber };
_dagag :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gdac );_dagag +=_daecd .PdfObjectDictionary .WriteString ();_dagag +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_aagbbc .writeString (_dagag );_aagbbc .writeBytes (_daecd .Stream );
_aagbbc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _bcdgaf ,_gdcgf :=_fgbef .(*_gbd .PdfObjectStreams );_gdcgf {_aagbbc ._agffb [_gdac ]=crossReference {Type :1,Offset :_aagbbc ._fdff ,Generation :_bcdgaf .GenerationNumber };
_ggdeb :=_a .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gdac );var _geadb []string ;var _dbgfc string ;var _aaeca int64 ;for _cbded ,_adedf :=range _bcdgaf .Elements (){_addgd ,_cedadf :=_adedf .(*_gbd .PdfIndirectObject );if !_cedadf {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gdac ,_adedf );
continue ;};_dffe :=_addgd .PdfObject .WriteString ()+"\u0020";_dbgfc =_dbgfc +_dffe ;_geadb =append (_geadb ,_a .Sprintf ("\u0025\u0064\u0020%\u0064",_addgd .ObjectNumber ,_aaeca ));_aagbbc ._agffb [int (_addgd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gdac ,Index :_cbded };
_aaeca =_aaeca +int64 (len ([]byte (_dffe )));};_cfacg :=_fc .Join (_geadb ,"\u0020")+"\u0020";_ccfbe :=_gbd .NewFlateEncoder ();_eaeeb :=_ccfbe .MakeStreamDict ();_eaeeb .Set (_gbd .PdfObjectName ("\u0054\u0079\u0070\u0065"),_gbd .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_aebg :=int64 (_bcdgaf .Len ());_eaeeb .Set (_gbd .PdfObjectName ("\u004e"),_gbd .MakeInteger (_aebg ));_eaedf :=int64 (len (_cfacg ));_eaeeb .Set (_gbd .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_gbd .MakeInteger (_eaedf ));_eaac ,_ :=_ccfbe .EncodeBytes ([]byte (_cfacg +_dbgfc ));
_aeaef :=int64 (len (_eaac ));_eaeeb .Set (_gbd .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_gbd .MakeInteger (_aeaef ));_ggdeb +=_eaeeb .WriteString ();_ggdeb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_aagbbc .writeString (_ggdeb );
_aagbbc .writeBytes (_eaac );_aagbbc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_aagbbc .writeString (_fgbef .WriteString ());};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gbd .PdfObject ;};func (_cbef PdfFont )actualFont ()pdfFont {if _cbef ._bbddd ==nil {_db .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cbef );
};return _cbef ._bbddd ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _gbd .PdfObject ;ColorSpace _gbd .PdfObject ;Pattern _gbd .PdfObject ;Shading _gbd .PdfObject ;XObject _gbd .PdfObject ;Font _gbd .PdfObject ;ProcSet _gbd .PdfObject ;Properties _gbd .PdfObject ;_bfgbc *_gbd .PdfObjectDictionary ;
_cbbeb *PdfPageResourcesColorspaces ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_ggfgb *PdfPageResources )HasXObjectByName (keyName _gbd .PdfObjectName )bool {_dbeaa ,_ :=_ggfgb .GetXObjectByName (keyName );return _dbeaa !=nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_dccgc *PdfPageResources )GetColorspaceByName (keyName _gbd .PdfObjectName )(PdfColorspace ,bool ){_gcecbe ,_defc :=_dccgc .GetColorspaces ();if _defc !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_defc );
return nil ,false ;};if _gcecbe ==nil {return nil ,false ;};_ecagd ,_ggdbfb :=_gcecbe .Colorspaces [string (keyName )];if !_ggdbfb {return nil ,false ;};return _ecagd ,true ;};func _cbab (_gfed _gbd .PdfObject )(*PdfColorspaceICCBased ,error ){_cbeec :=&PdfColorspaceICCBased {};
if _fbfg ,_deffc :=_gfed .(*_gbd .PdfIndirectObject );_deffc {_cbeec ._ecgdd =_fbfg ;};_gfed =_gbd .TraceToDirectObject (_gfed );_caed ,_baa :=_gfed .(*_gbd .PdfObjectArray );if !_baa {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _caed .Len ()!=2{return nil ,_a .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_gfed =_gbd .TraceToDirectObject (_caed .Get (0));_bcbg ,_baa :=_gfed .(*_gbd .PdfObjectName );
if !_baa {return nil ,_a .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bcbg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_a .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gfed =_caed .Get (1);_cfc ,_baa :=_gbd .GetStream (_gfed );if !_baa {_db .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_gfed );
return nil ,_a .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_abgba :=_cfc .PdfObjectDictionary ;_fcdd ,_baa :=_abgba .Get ("\u004e").(*_gbd .PdfObjectInteger );
if !_baa {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_fcdd !=1&&*_fcdd !=3&&*_fcdd !=4{return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cbeec .N =int (*_fcdd );if _gfba :=_abgba .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_gfba !=nil {_adbb ,_aagc :=NewPdfColorspaceFromPdfObject (_gfba );if _aagc !=nil {return nil ,_aagc ;};_cbeec .Alternate =_adbb ;};if _ecdgd :=_abgba .Get ("\u0052\u0061\u006eg\u0065");
_ecdgd !=nil {_ecdgd =_gbd .TraceToDirectObject (_ecdgd );_abadg ,_geeb :=_ecdgd .(*_gbd .PdfObjectArray );if !_geeb {return nil ,_a .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _abadg .Len ()!=2*_cbeec .N {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_afed ,_babg :=_abadg .GetAsFloat64Slice ();if _babg !=nil {return nil ,_babg ;};_cbeec .Range =_afed ;}else {_cbeec .Range =make ([]float64 ,2*_cbeec .N );for _eaadc :=0;_eaadc < _cbeec .N ;_eaadc ++{_cbeec .Range [2*_eaadc ]=0.0;_cbeec .Range [2*_eaadc +1]=1.0;
};};if _ccbcb :=_abgba .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ccbcb !=nil {_bbed ,_cdge :=_ccbcb .(*_gbd .PdfObjectStream );if !_cdge {return nil ,_a .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cbeec .Metadata =_bbed ;};_eadd ,_beba :=_gbd .DecodeStream (_cfc );if _beba !=nil {return nil ,_beba ;};_cbeec .Data =_eadd ;_cbeec ._afe =_cfc ;return _cbeec ,nil ;};

// CustomKeys returns all custom info keys as list.
func (_fede *PdfInfo )CustomKeys ()[]string {if _fede ._bafb ==nil {return nil ;};_aagbb :=make ([]string ,len (_fede ._bafb .Keys ()));for _ ,_ccdf :=range _fede ._bafb .Keys (){_aagbb =append (_aagbb ,_ccdf .String ());};return _aagbb ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _gbd .PdfObjectName ;};func _adbg (_adfc _gbd .PdfObject )(*PdfFunctionType3 ,error ){_egcdb :=&PdfFunctionType3 {};var _fefdd *_gbd .PdfObjectDictionary ;if _ggeb ,_feccd :=_adfc .(*_gbd .PdfIndirectObject );
_feccd {_efgge ,_geaede :=_ggeb .PdfObject .(*_gbd .PdfObjectDictionary );if !_geaede {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_egcdb ._dgcdg =_ggeb ;_fefdd =_efgge ;}else if _fcfcg ,_gacf :=_adfc .(*_gbd .PdfObjectDictionary );
_gacf {_fefdd =_fcfcg ;}else {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acgec ,_ceaga :=_gbd .TraceToDirectObject (_fefdd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gbd .PdfObjectArray );
if !_ceaga {_db .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _acgec .Len ()!=2{_db .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cfgd ,_fedeeg :=_acgec .ToFloat64Array ();
if _fedeeg !=nil {return nil ,_fedeeg ;};_egcdb .Domain =_cfgd ;_acgec ,_ceaga =_gbd .TraceToDirectObject (_fefdd .Get ("\u0052\u0061\u006eg\u0065")).(*_gbd .PdfObjectArray );if _ceaga {if _acgec .Len ()< 0||_acgec .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_adfb ,_cecbf :=_acgec .ToFloat64Array ();if _cecbf !=nil {return nil ,_cecbf ;};_egcdb .Range =_adfb ;};_acgec ,_ceaga =_gbd .TraceToDirectObject (_fefdd .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_gbd .PdfObjectArray );if !_ceaga {_db .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_egcdb .Functions =[]PdfFunction {};
for _ ,_afabe :=range _acgec .Elements (){_gcabf ,_bgedc :=_dbege (_afabe );if _bgedc !=nil {return nil ,_bgedc ;};_egcdb .Functions =append (_egcdb .Functions ,_gcabf );};_acgec ,_ceaga =_gbd .TraceToDirectObject (_fefdd .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_gbd .PdfObjectArray );
if !_ceaga {_db .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_ffcd ,_fedeeg :=_acgec .ToFloat64Array ();if _fedeeg !=nil {return nil ,_fedeeg ;};_egcdb .Bounds =_ffcd ;if len (_egcdb .Bounds )!=len (_egcdb .Functions )-1{_db .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_egcdb .Bounds ),len (_egcdb .Functions ));
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acgec ,_ceaga =_gbd .TraceToDirectObject (_fefdd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gbd .PdfObjectArray );if !_ceaga {_db .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ebecf ,_fedeeg :=_acgec .ToFloat64Array ();
if _fedeeg !=nil {return nil ,_fedeeg ;};_egcdb .Encode =_ebecf ;if len (_egcdb .Encode )!=2*len (_egcdb .Functions ){_db .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_egcdb .Encode ),len (_egcdb .Functions ));
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _egcdb ,nil ;};func (_gcafa fontCommon )asPdfObjectDictionary (_gdbd string )*_gbd .PdfObjectDictionary {if _gdbd !=""&&_gcafa ._bbecf !=""&&_gdbd !=_gcafa ._bbecf {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gdbd ,_gcafa );
}else if _gdbd ==""&&_gcafa ._bbecf ==""{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcafa );
}else if _gcafa ._bbecf ==""{_gcafa ._bbecf =_gdbd ;};_fdcf :=_gbd .MakeDict ();_fdcf .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0046\u006f\u006e\u0074"));_fdcf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gbd .MakeName (_gcafa ._dgcff ));
_fdcf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName (_gcafa ._bbecf ));if _gcafa ._ggff !=nil {_fdcf .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_gcafa ._ggff .ToPdfObject ());};if _gcafa ._ecbc !=nil {_fdcf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gcafa ._ecbc );
}else if _gcafa ._agcgb !=nil {_affeb ,_fcabf :=_gcafa ._agcgb .Stream ();if _fcabf !=nil {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_fcabf );
}else {_fdcf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_affeb );};};return _fdcf ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _gbd .PdfObject ;IsMap _gbd .PdfObject ;};

// ToInteger convert to an integer format.
func (_deff *PdfColorDeviceGray )ToInteger (bits int )uint32 {_edee :=_ga .Pow (2,float64 (bits ))-1;return uint32 (_edee *_deff .Val ());};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_bffg :=PdfColorLab {l ,a ,b };return &_bffg };

// ToPdfObject converts rectangle to a PDF object.
func (_cffe *PdfRectangle )ToPdfObject ()_gbd .PdfObject {return _gbd .MakeArray (_gbd .MakeFloat (_cffe .Llx ),_gbd .MakeFloat (_cffe .Lly ),_gbd .MakeFloat (_cffe .Urx ),_gbd .MakeFloat (_cffe .Ury ));};func (_gebgb *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _gbd .PdfObject ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_edce byte )byte ;

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_gbd .PdfObjectInteger ;TilingType *_gbd .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_gbd .PdfObjectFloat ;YStep *_gbd .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_gbd .PdfObjectArray ;};


// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bbgc *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bbgc ._gffb .(*PdfShadingPattern );};

// Width returns the width of `rect`.
func (_cagebe *PdfRectangle )Width ()float64 {return _ga .Abs (_cagebe .Urx -_cagebe .Llx )};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bdba *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aabd ,_fgbf :=_gbd .GetNumbersAsFloat (objects );
if _fgbf !=nil {return nil ,_fgbf ;};return _bdba .ColorFromFloats (_aabd );};

// SetAnnotations sets the annotations list.
func (_ccaf *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_ccaf ._gacee =annotations };

// GetOutlineTree returns the outline tree.
func (_dadeb *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _dadeb ._daggg };

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _gbd .PdfObject ;AN _gbd .PdfObject ;OP _gbd .PdfObject ;JS _gbd .PdfObject ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bdee *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_db .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_db .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_db .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_db .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_cabf ,_fge :=_ed .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fafca ,img ._dadd );if _fge !=nil {return Image {},_fge ;};_cefa ,_fge :=_ed .NRGBAConverter .Convert (_cabf );if _fge !=nil {return Image {},_fge ;
};return _cagfg (_cefa .Base ()),nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_fgcae *PdfFont )CharcodesToUnicode (charcodes []_dc .CharCode )[]rune {_bfbc ,_ ,_ :=_fgcae .CharcodesToUnicodeWithStats (charcodes );return _bfbc ;};func _bafec (_bccfg string )(string ,error ){var _agcd _cd .Buffer ;_agcd .WriteString (_bccfg );
_gaaage :=make ([]byte ,8+16);_caaa :=_bd .Now ().UTC ().UnixNano ();_af .BigEndian .PutUint64 (_gaaage ,uint64 (_caaa ));_ ,_fefga :=_eg .Read (_gaaage [8:]);if _fefga !=nil {return "",_fefga ;};_agcd .WriteString (_c .EncodeToString (_gaaage ));return _agcd .String (),nil ;
};

// GetOCProperties returns the optional content properties PdfObject.
func (_egaga *PdfReader )GetOCProperties ()(_gbd .PdfObject ,error ){_ddbb :=_egaga ._dccge ;_ceddd :=_ddbb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ceddd =_gbd .ResolveReference (_ceddd );if !_egaga ._adaag {_ffaea :=_egaga .traverseObjectData (_ceddd );
if _ffaea !=nil {return nil ,_ffaea ;};};return _ceddd ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_egged :=NewPdfAnnotation ();_edge :=&PdfAnnotationProjection {};_edge .PdfAnnotation =_egged ;_edge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egged .SetContext (_edge );return _edge ;};func (_gfd *PdfReader )newPdfActionFromIndirectObject (_cceg *_gbd .PdfIndirectObject )(*PdfAction ,error ){_faec ,_dbea :=_cceg .PdfObject .(*_gbd .PdfObjectDictionary );
if !_dbea {return nil ,_a .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gfd ._fafgd .GetModelFromPrimitive (_faec );model !=nil {_ccf ,_acaf :=model .(*PdfAction );if !_acaf {return nil ,_a .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _ccf ,nil ;};_aaa :=&PdfAction {};_aaa ._ef =_cceg ;_gfd ._fafgd .Register (_faec ,_aaa );if _ccb :=_faec .Get ("\u0054\u0079\u0070\u0065");_ccb !=nil {_bba ,_fbg :=_ccb .(*_gbd .PdfObjectName );if !_fbg {_db .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ccb );
}else {if *_bba !="\u0041\u0063\u0074\u0069\u006f\u006e"{_db .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bba );
};_aaa .Type =_bba ;};};if _cda :=_faec .Get ("\u004e\u0065\u0078\u0074");_cda !=nil {_aaa .Next =_cda ;};if _efd :=_faec .Get ("\u0053");_efd !=nil {_aaa .S =_efd ;};_gfe ,_edc :=_aaa .S .(*_gbd .PdfObjectName );if !_edc {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aaa .S );
return nil ,_a .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aaa .S );};_fffd :=PdfActionType (_gfe .String ());
switch _fffd {case ActionTypeGoTo :_fee ,_fdd :=_gfd .newPdfActionGotoFromDict (_faec );if _fdd !=nil {return nil ,_fdd ;};_fee .PdfAction =_aaa ;_aaa ._ca =_fee ;return _aaa ,nil ;case ActionTypeGoToR :_afb ,_ffbf :=_gfd .newPdfActionGotoRFromDict (_faec );
if _ffbf !=nil {return nil ,_ffbf ;};_afb .PdfAction =_aaa ;_aaa ._ca =_afb ;return _aaa ,nil ;case ActionTypeGoToE :_ebb ,_faf :=_gfd .newPdfActionGotoEFromDict (_faec );if _faf !=nil {return nil ,_faf ;};_ebb .PdfAction =_aaa ;_aaa ._ca =_ebb ;return _aaa ,nil ;
case ActionTypeLaunch :_gcf ,_bdbc :=_gfd .newPdfActionLaunchFromDict (_faec );if _bdbc !=nil {return nil ,_bdbc ;};_gcf .PdfAction =_aaa ;_aaa ._ca =_gcf ;return _aaa ,nil ;case ActionTypeThread :_dcfa ,_acb :=_gfd .newPdfActionThreadFromDict (_faec );
if _acb !=nil {return nil ,_acb ;};_dcfa .PdfAction =_aaa ;_aaa ._ca =_dcfa ;return _aaa ,nil ;case ActionTypeURI :_fbe ,_df :=_gfd .newPdfActionURIFromDict (_faec );if _df !=nil {return nil ,_df ;};_fbe .PdfAction =_aaa ;_aaa ._ca =_fbe ;return _aaa ,nil ;
case ActionTypeSound :_cbe ,_ggb :=_gfd .newPdfActionSoundFromDict (_faec );if _ggb !=nil {return nil ,_ggb ;};_cbe .PdfAction =_aaa ;_aaa ._ca =_cbe ;return _aaa ,nil ;case ActionTypeMovie :_edfc ,_bfa :=_gfd .newPdfActionMovieFromDict (_faec );if _bfa !=nil {return nil ,_bfa ;
};_edfc .PdfAction =_aaa ;_aaa ._ca =_edfc ;return _aaa ,nil ;case ActionTypeHide :_eaad ,_gdd :=_gfd .newPdfActionHideFromDict (_faec );if _gdd !=nil {return nil ,_gdd ;};_eaad .PdfAction =_aaa ;_aaa ._ca =_eaad ;return _aaa ,nil ;case ActionTypeNamed :_ab ,_ffbe :=_gfd .newPdfActionNamedFromDict (_faec );
if _ffbe !=nil {return nil ,_ffbe ;};_ab .PdfAction =_aaa ;_aaa ._ca =_ab ;return _aaa ,nil ;case ActionTypeSubmitForm :_ccab ,_babb :=_gfd .newPdfActionSubmitFormFromDict (_faec );if _babb !=nil {return nil ,_babb ;};_ccab .PdfAction =_aaa ;_aaa ._ca =_ccab ;
return _aaa ,nil ;case ActionTypeResetForm :_acaa ,_cbb :=_gfd .newPdfActionResetFormFromDict (_faec );if _cbb !=nil {return nil ,_cbb ;};_acaa .PdfAction =_aaa ;_aaa ._ca =_acaa ;return _aaa ,nil ;case ActionTypeImportData :_cdc ,_dgcc :=_gfd .newPdfActionImportDataFromDict (_faec );
if _dgcc !=nil {return nil ,_dgcc ;};_cdc .PdfAction =_aaa ;_aaa ._ca =_cdc ;return _aaa ,nil ;case ActionTypeSetOCGState :_ffg ,_fdc :=_gfd .newPdfActionSetOCGStateFromDict (_faec );if _fdc !=nil {return nil ,_fdc ;};_ffg .PdfAction =_aaa ;_aaa ._ca =_ffg ;
return _aaa ,nil ;case ActionTypeRendition :_baf ,_egc :=_gfd .newPdfActionRenditionFromDict (_faec );if _egc !=nil {return nil ,_egc ;};_baf .PdfAction =_aaa ;_aaa ._ca =_baf ;return _aaa ,nil ;case ActionTypeTrans :_baba ,_gabf :=_gfd .newPdfActionTransFromDict (_faec );
if _gabf !=nil {return nil ,_gabf ;};_baba .PdfAction =_aaa ;_aaa ._ca =_baba ;return _aaa ,nil ;case ActionTypeGoTo3DView :_da ,_gcgf :=_gfd .newPdfActionGoTo3DViewFromDict (_faec );if _gcgf !=nil {return nil ,_gcgf ;};_da .PdfAction =_aaa ;_aaa ._ca =_da ;
return _aaa ,nil ;case ActionTypeJavaScript :_dd ,_cfb :=_gfd .newPdfActionJavaScriptFromDict (_faec );if _cfb !=nil {return nil ,_cfb ;};_dd .PdfAction =_aaa ;_aaa ._ca =_dd ;return _aaa ,nil ;};_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fffd );
return nil ,nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cecd *PdfColorCalRGB )GetNumComponents ()int {return 3};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fafae *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _geece []*PdfField ;if _fafae .AcroForm !=nil {_geece =_fafae .AcroForm .AllFields ();};_fcffe :=make (map[*PdfField ]struct{},len (_geece ));for _ ,_dabcc :=range _geece {_fcffe [_dabcc ]=struct{}{};
};for _ ,_aebac :=range _fafae .PageList {_gabfa ,_fbgaa :=_aebac .GetAnnotations ();if _fbgaa !=nil {return false ,_fbgaa ;};for _ ,_dcdff :=range _gabfa {_dfdgc ,_adbbg :=_dcdff .GetContext ().(*PdfAnnotationWidget );if !_adbbg {continue ;};_dcba :=_dfdgc .Field ();
if _dcba ==nil {return true ,nil ;};if _ ,_ccaag :=_fcffe [_dcba ];!_ccaag {return true ,nil ;};};};return false ,nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_fgege *PdfWriter )SetRotation (rotate int64 )error {_caefc ,_bcgca :=_gbd .GetDict (_fgege ._eceaeb );if !_bcgca {return ErrTypeCheck ;};_caefc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gbd .MakeInteger (rotate ));return nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_degf :=&PdfColorspaceLab {};_degf .BlackPoint =[]float64 {0.0,0.0,0.0};_degf .Range =[]float64 {-100,100,-100,100};return _degf ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_gfabd :=&PdfPageResources {};_gfabd ._bfgbc =_gbd .MakeDict ();return _gfabd ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_gbd .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _gbd .PdfObject ;A _gbd .PdfObject ;SE _gbd .PdfObject ;C _gbd .PdfObject ;F _gbd .PdfObject ;
_baea *_gbd .PdfIndirectObject ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_gbd .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_gbd .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_gbd .PdfObjectBool ;_fdcab PdfModel ;_baae _gbd .PdfObject ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_eaaaf *PdfInfo )ToPdfObject ()_gbd .PdfObject {_cdadc :=_gbd .MakeDict ();_cdadc .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_eaaaf .Title );_cdadc .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_eaaaf .Author );_cdadc .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_eaaaf .Subject );
_cdadc .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eaaaf .Keywords );_cdadc .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_eaaaf .Creator );_cdadc .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_eaaaf .Producer );
_cdadc .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_eaaaf .Trapped );if _eaaaf .CreationDate !=nil {_cdadc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaaaf .CreationDate .ToPdfObject ());};if _eaaaf .ModifiedDate !=nil {_cdadc .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_eaaaf .ModifiedDate .ToPdfObject ());
};for _ ,_decbg :=range _eaaaf ._bafb .Keys (){_cdadc .SetIfNotNil (_decbg ,_eaaaf ._bafb .Get (_decbg ));};return _cdadc ;};

// SetDate sets the `M` field of the signature.
func (_eaeb *PdfSignature )SetDate (date _bd .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_eaeb .M =_gbd .MakeString (date .Format (format ));
};

// GetContentStreams returns the content stream as an array of strings.
func (_ecefc *PdfPage )GetContentStreams ()([]string ,error ){_ggeg :=_ecefc .GetContentStreamObjs ();var _affd []string ;for _ ,_ffdbd :=range _ggeg {_cacc ,_efggd :=_badcd (_ffdbd );if _efggd !=nil {return nil ,_efggd ;};_affd =append (_affd ,_cacc );
};return _affd ,nil ;};

// String returns a string representation of the field.
func (_aceb *PdfField )String ()string {if _eebcg ,_ddfc :=_aceb .ToPdfObject ().(*_gbd .PdfIndirectObject );_ddfc {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aceb ._fdcac ,_eebcg .PdfObject .String ());};return "";};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_gbd .PdfObject ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _gbd .StreamEncoder ;Intent _gbd .PdfObject ;ImageMask _gbd .PdfObject ;Mask _gbd .PdfObject ;Matte _gbd .PdfObject ;Decode _gbd .PdfObject ;Interpolate _gbd .PdfObject ;
Alternatives _gbd .PdfObject ;SMask _gbd .PdfObject ;SMaskInData _gbd .PdfObject ;Name _gbd .PdfObject ;StructParent _gbd .PdfObject ;ID _gbd .PdfObject ;OPI _gbd .PdfObject ;Metadata _gbd .PdfObject ;OC _gbd .PdfObject ;Stream []byte ;_dcaea *_gbd .PdfObjectStream ;
};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_eacg int ,_ebcbg *PdfPage )error ;

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfActionTrans )ToPdfObject ()_gbd .PdfObject {_gdc .PdfAction .ToPdfObject ();_bdb :=_gdc ._ef ;_cf :=_bdb .PdfObject .(*_gbd .PdfObjectDictionary );_cf .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeTrans )));_cf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gdc .Trans );
return _bdb ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_ecgf *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fefd :=_de .NewReader (img .getBase ());_dbab :=_ed .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._fafca ,img ._dadd );
_fdcb :=_de .NewWriter (_dbab );_fbfge :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_bbgf :=_ecgf .GetNumComponents ();_fdcg :=make ([]uint32 ,_bbgf );_bbgb :=make ([]float64 ,_bbgf );for {_gdab :=_fefd .ReadSamples (_fdcg );if _gdab ==_acga .EOF {break ;
}else if _gdab !=nil {return img ,_gdab ;};for _cafg :=0;_cafg < _bbgf ;_cafg ++{_bgae :=float64 (_fdcg [_cafg ])/_fbfge ;_bbgb [_cafg ]=_bgae ;};_egeg ,_gdab :=_ecgf .TintTransform .Evaluate (_bbgb );if _gdab !=nil {return img ,_gdab ;};for _ ,_ddff :=range _egeg {_ddff =_ga .Min (_ga .Max (0,_ddff ),1.0);
if _gdab =_fdcb .WriteSample (uint32 (_ddff *_fbfge ));_gdab !=nil {return img ,_gdab ;};};};return _ecgf .AlternateSpace .ImageToRGB (_cagfg (&_dbab ));};func (_geaa *PdfReader )newPdfActionSubmitFormFromDict (_fcd *_gbd .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_eda ,_bac :=_dae (_fcd .Get ("\u0046"));
if _bac !=nil {return nil ,_bac ;};return &PdfActionSubmitForm {F :_eda ,Fields :_fcd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fcd .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bcg :=NewPdfAction ();_dba :=&PdfActionHide {};_dba .PdfAction =_bcg ;_bcg .SetContext (_dba );return _dba ;};

// ToPdfObject implements interface PdfModel.
func (_gag *PdfAnnotationText )ToPdfObject ()_gbd .PdfObject {_gag .PdfAnnotation .ToPdfObject ();_ddfb :=_gag ._faa ;_acff :=_ddfb .PdfObject .(*_gbd .PdfObjectDictionary );if _gag .PdfAnnotationMarkup !=nil {_gag .PdfAnnotationMarkup .appendToPdfDictionary (_acff );
};_acff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0054\u0065\u0078\u0074"));_acff .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gag .Open );_acff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gag .Name );_acff .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gag .State );
_acff .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gag .StateModel );return _ddfb ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gd *PdfAction )GetContext ()PdfModel {if _gd ==nil {return nil ;};return _gd ._ca ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_fgbfd *PdfColorspaceLab )DecodeArray ()[]float64 {_bcebc :=[]float64 {0,100};if _fgbfd .Range !=nil &&len (_fgbfd .Range )==4{_bcebc =append (_bcebc ,_fgbfd .Range ...);}else {_bcebc =append (_bcebc ,-100,100,-100,100);};return _bcebc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_efcbfb *PdfSignature )GetContainingPdfObject ()_gbd .PdfObject {return _efcbfb ._eebcgfe };

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_dbaae _acga .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fdbb _be .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ddaeb _be .Image )(*Image ,error );

// Compress an image.
Compress (_adcec *Image ,_faabe int64 )(*Image ,error );};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bcac *PdfFieldButton )IsRadio ()bool {return _bcac .GetType ()==ButtonTypeRadio };

// ToPdfObject implements interface PdfModel.
func (_bbaa *PdfAnnotationProjection )ToPdfObject ()_gbd .PdfObject {_bbaa .PdfAnnotation .ToPdfObject ();_bbge :=_bbaa ._faa ;_dadg :=_bbge .PdfObject .(*_gbd .PdfObjectDictionary );_bbaa .PdfAnnotationMarkup .appendToPdfDictionary (_dadg );return _bbge ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_agbg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if _agbg .Alternate ==nil {if _agbg .N ==1{_dgcf :=NewPdfColorspaceDeviceGray ();return _dgcf .ColorFromPdfObjects (objects );}else if _agbg .N ==3{_aeeg :=NewPdfColorspaceDeviceRGB ();
return _aeeg .ColorFromPdfObjects (objects );}else if _agbg .N ==4{_cacd :=NewPdfColorspaceDeviceCMYK ();return _cacd .ColorFromPdfObjects (objects );}else {return nil ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _agbg .Alternate .ColorFromPdfObjects (objects );};func _fcdg ()string {_adefd .Lock ();defer _adefd .Unlock ();_gcadb :=_ega .GetLicenseKey ();if len (_efef )> 0&&(_gcadb .IsLicensed ()||_becde ){return _efef ;};return _a .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_ddafgc (),_gcadb .TypeToString ());
};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_eedgbc *PdfSignature )bool ;Validate (_eagfd *PdfSignature ,_afcec Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gbbefc *PdfSignature )(Hasher ,error );Sign (_efbcf *PdfSignature ,_ggeba Hasher )error ;};

// MergePageWith appends page content to source Pdf file page content.
func (_egcf *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dfd :=pageNum -1;var _gbbd *PdfPage ;for _bfca ,_bgfcc :=range _egcf ._ccbcf {if _bfca ==_dfd {_gbbd =_bgfcc ;};};if _gbbd ==nil {return _a .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _gbbd ._fgbbe !=nil &&_gbbd ._fgbbe .GetParser ()==_egcf ._fafd ._dagg {_gbbd =_gbbd .Duplicate ();_egcf ._ccbcf [_dfd ]=_gbbd ;};page =page .Duplicate ();_caede (page );_gaaa :=_ffff (_gbbd );_cfda :=_ffff (page );_caae :=make (map[_gbd .PdfObjectName ]_gbd .PdfObjectName );
for _aaaab :=range _cfda {if _ ,_fdea :=_gaaa [_aaaab ];_fdea {for _eecd :=1;true ;_eecd ++{_bfbg :=_gbd .PdfObjectName (string (_aaaab )+_bg .Itoa (_eecd ));if _ ,_adbf :=_gaaa [_bfbg ];!_adbf {_caae [_aaaab ]=_bfbg ;break ;};};};};_bead ,_befa :=page .GetContentStreams ();
if _befa !=nil {return _befa ;};_cfdd ,_befa :=_gbbd .GetContentStreams ();if _befa !=nil {return _befa ;};for _ebcg ,_cfde :=range _bead {for _eedd ,_egf :=range _caae {_cfde =_fc .Replace (_cfde ,"\u002f"+string (_eedd ),"\u002f"+string (_egf ),-1);};
_bead [_ebcg ]=_cfde ;};_cfdd =append (_cfdd ,_bead ...);if _affa :=_gbbd .SetContentStreams (_cfdd ,_gbd .NewFlateEncoder ());_affa !=nil {return _affa ;};_gbbd ._gacee =append (_gbbd ._gacee ,page ._gacee ...);if _gbbd .Resources ==nil {_gbbd .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_gbbd .Resources .Font =_egcf .mergeResources (_gbbd .Resources .Font ,page .Resources .Font ,_caae );_gbbd .Resources .XObject =_egcf .mergeResources (_gbbd .Resources .XObject ,page .Resources .XObject ,_caae );_gbbd .Resources .Properties =_egcf .mergeResources (_gbbd .Resources .Properties ,page .Resources .Properties ,_caae );
if _gbbd .Resources .ProcSet ==nil {_gbbd .Resources .ProcSet =page .Resources .ProcSet ;};_gbbd .Resources .Shading =_egcf .mergeResources (_gbbd .Resources .Shading ,page .Resources .Shading ,_caae );_gbbd .Resources .ExtGState =_egcf .mergeResources (_gbbd .Resources .ExtGState ,page .Resources .ExtGState ,_caae );
};_badf ,_befa :=_gbbd .GetMediaBox ();if _befa !=nil {return _befa ;};_gecaa ,_befa :=page .GetMediaBox ();if _befa !=nil {return _befa ;};var _ecge bool ;if _badf .Llx > _gecaa .Llx {_badf .Llx =_gecaa .Llx ;_ecge =true ;};if _badf .Lly > _gecaa .Lly {_badf .Lly =_gecaa .Lly ;
_ecge =true ;};if _badf .Urx < _gecaa .Urx {_badf .Urx =_gecaa .Urx ;_ecge =true ;};if _badf .Ury < _gecaa .Ury {_badf .Ury =_gecaa .Ury ;_ecge =true ;};if _ecge {_gbbd .MediaBox =_badf ;};return nil ;};func _ffff (_dgea *PdfPage )map[_gbd .PdfObjectName ]_gbd .PdfObject {_ebfb :=make (map[_gbd .PdfObjectName ]_gbd .PdfObject );
if _dgea .Resources ==nil {return _ebfb ;};if _dgea .Resources .Font !=nil {if _ebbca ,_bdbf :=_gbd .GetDict (_dgea .Resources .Font );_bdbf {for _ ,_addf :=range _ebbca .Keys (){_ebfb [_addf ]=_ebbca .Get (_addf );};};};if _dgea .Resources .ExtGState !=nil {if _dggag ,_efbe :=_gbd .GetDict (_dgea .Resources .ExtGState );
_efbe {for _ ,_dafb :=range _dggag .Keys (){_ebfb [_dafb ]=_dggag .Get (_dafb );};};};if _dgea .Resources .XObject !=nil {if _fbcd ,_ceee :=_gbd .GetDict (_dgea .Resources .XObject );_ceee {for _ ,_dbbc :=range _fbcd .Keys (){_ebfb [_dbbc ]=_fbcd .Get (_dbbc );
};};};if _dgea .Resources .Pattern !=nil {if _dgeb ,_bgcb :=_gbd .GetDict (_dgea .Resources .Pattern );_bgcb {for _ ,_dcad :=range _dgeb .Keys (){_ebfb [_dcad ]=_dgeb .Get (_dcad );};};};if _dgea .Resources .Shading !=nil {if _gbf ,_ead :=_gbd .GetDict (_dgea .Resources .Shading );
_ead {for _ ,_gfbda :=range _gbf .Keys (){_ebfb [_gfbda ]=_gbf .Get (_gfbda );};};};if _dgea .Resources .ProcSet !=nil {if _dgbf ,_acbcf :=_gbd .GetDict (_dgea .Resources .ProcSet );_acbcf {for _ ,_gca :=range _dgbf .Keys (){_ebfb [_gca ]=_dgbf .Get (_gca );
};};};if _dgea .Resources .Properties !=nil {if _edcad ,_abb :=_gbd .GetDict (_dgea .Resources .Properties );_abb {for _ ,_fcgcb :=range _edcad .Keys (){_ebfb [_fcgcb ]=_edcad .Get (_fcgcb );};};};return _ebfb ;};

// C returns the value of the cyan component of the color.
func (_cdbe *PdfColorDeviceCMYK )C ()float64 {return _cdbe [0]};func (_ged *PdfReader )newPdfAnnotationWatermarkFromDict (_abcaa *_gbd .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_cgdf :=PdfAnnotationWatermark {};_cgdf .FixedPrint =_abcaa .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_cgdf ,nil ;};var _ _gbd .PdfObject =&pdfSignDictionary {};

// AddWatermarkImage adds a watermark to the page.
func (_gebd *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_eabad ,_eeed :=_gebd .GetMediaBox ();if _eeed !=nil {return _eeed ;};_bgcg :=_eabad .Urx -_eabad .Llx ;_bebfc :=_eabad .Ury -_eabad .Lly ;_cbfbg :=float64 (*ximg .Width );
_bfcgg :=(_bgcg -_cbfbg )/2;if opt .FitToWidth {_cbfbg =_bgcg ;_bfcgg =0;};_cgfdf :=_bebfc ;_eacac :=float64 (0);if opt .PreserveAspectRatio {_cgfdf =_cbfbg *float64 (*ximg .Height )/float64 (*ximg .Width );_eacac =(_bebfc -_cgfdf )/2;};if _gebd .Resources ==nil {_gebd .Resources =NewPdfPageResources ();
};_edbgdc :=0;_dedc :=_gbd .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_edbgdc ));for _gebd .Resources .HasXObjectByName (_dedc ){_edbgdc ++;_dedc =_gbd .PdfObjectName (_a .Sprintf ("\u0049\u006d\u0077%\u0064",_edbgdc ));};_eeed =_gebd .AddImageResource (_dedc ,ximg );
if _eeed !=nil {return _eeed ;};_edbgdc =0;_adcga :=_gbd .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_edbgdc ));for _gebd .HasExtGState (_adcga ){_edbgdc ++;_adcga =_gbd .PdfObjectName (_a .Sprintf ("\u0047\u0053\u0025\u0064",_edbgdc ));};_dgdbe :=_gbd .MakeDict ();
_dgdbe .Set ("\u0042\u004d",_gbd .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_dgdbe .Set ("\u0043\u0041",_gbd .MakeFloat (opt .Alpha ));_dgdbe .Set ("\u0063\u0061",_gbd .MakeFloat (opt .Alpha ));_eeed =_gebd .AddExtGState (_adcga ,_dgdbe );if _eeed !=nil {return _eeed ;
};_ecgff :=_a .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_adcga ,_cbfbg ,_cgfdf ,_bfcgg ,_eacac ,_dedc );
_gebd .AddContentStreamByString (_ecgff );return nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _gbd .PdfObject ;V _gbd .PdfObject ;};func _caaba (_addfg *_gbd .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gdgc :=&PdfShadingPattern {};_fbdb :=_addfg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _fbdb ==nil {_db .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccbaf ,_ddagd :=_aedd (_fbdb );if _ddagd !=nil {_db .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_ddagd );
return nil ,_ddagd ;};_gdgc .Shading =_ccbaf ;if _adca :=_addfg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_adca !=nil {_decgf ,_abfc :=_adca .(*_gbd .PdfObjectArray );if !_abfc {_db .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adca );
return nil ,_gbd .ErrTypeError ;};_gdgc .Matrix =_decgf ;};if _beefd :=_addfg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_beefd !=nil {_gdgc .ExtGState =_beefd ;};return _gdgc ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ccag *PdfRectangle )Normalize (){if _ccag .Llx > _ccag .Urx {_ccag .Llx ,_ccag .Urx =_ccag .Urx ,_ccag .Llx ;};if _ccag .Lly > _ccag .Ury {_ccag .Lly ,_ccag .Ury =_ccag .Ury ,_ccag .Lly ;};};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_afae *Image )SetSamples (samples []uint32 ){if _afae .BitsPerComponent < 8{samples =_afae .samplesAddPadding (samples );};_bcdbd :=_de .ResampleUint32 (samples ,int (_afae .BitsPerComponent ),8);_beaac :=make ([]byte ,len (_bcdbd ));for _ebbb ,_cbede :=range _bcdbd {_beaac [_ebbb ]=byte (_cbede );
};_afae .Data =_beaac ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_fbcb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gc :=NewPdfAction ();_eaa :=&PdfActionJavaScript {};_eaa .PdfAction =_gc ;_gc .SetContext (_eaa );return _eaa ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_gbd .PdfObjectArray ;Domain *_gbd .PdfObjectArray ;Function []PdfFunction ;Extend *_gbd .PdfObjectArray ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ddcf *PdfField )SetContext (ctx PdfModel ){_ddcf ._fdcac =ctx };const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);func (_ceeaa *PdfReader )newPdfAnnotationRedactFromDict (_fffc *_gbd .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gcdd :=PdfAnnotationRedact {};_gced ,_gae :=_ceeaa .newPdfAnnotationMarkupFromDict (_fffc );if _gae !=nil {return nil ,_gae ;};
_gcdd .PdfAnnotationMarkup =_gced ;_gcdd .QuadPoints =_fffc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gcdd .IC =_fffc .Get ("\u0049\u0043");_gcdd .RO =_fffc .Get ("\u0052\u004f");_gcdd .OverlayText =_fffc .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gcdd .Repeat =_fffc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gcdd .DA =_fffc .Get ("\u0044\u0041");_gcdd .Q =_fffc .Get ("\u0051");return &_gcdd ,nil ;};func _aedd (_ecgddg _gbd .PdfObject )(*PdfShading ,error ){_gceaa :=&PdfShading {};var _cdcfe *_gbd .PdfObjectDictionary ;
if _fgcab ,_fbda :=_gbd .GetIndirect (_ecgddg );_fbda {_gceaa ._baae =_fgcab ;_eggd ,_bcbde :=_fgcab .PdfObject .(*_gbd .PdfObjectDictionary );if !_bcbde {_db .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_gbd .ErrTypeError ;};_cdcfe =_eggd ;}else if _edefa ,_aaade :=_gbd .GetStream (_ecgddg );_aaade {_gceaa ._baae =_edefa ;_cdcfe =_edefa .PdfObjectDictionary ;}else if _gdaac ,_cacfg :=_gbd .GetDict (_ecgddg );_cacfg {_gceaa ._baae =_gdaac ;
_cdcfe =_gdaac ;}else {_db .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ecgddg );return nil ,_gbd .ErrTypeError ;};if _cdcfe ==nil {_db .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ecgddg =_cdcfe .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ecgddg ==nil {_db .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ecgddg =_gbd .TraceToDirectObject (_ecgddg );_gagbe ,_gbcfa :=_ecgddg .(*_gbd .PdfObjectInteger );if !_gbcfa {_db .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ecgddg );
return nil ,_gbd .ErrTypeError ;};if *_gagbe < 1||*_gagbe > 7{_db .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gagbe );
return nil ,_gbd .ErrTypeError ;};_gceaa .ShadingType =_gagbe ;_ecgddg =_cdcfe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ecgddg ==nil {_db .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acdd ,_bddfae :=NewPdfColorspaceFromPdfObject (_ecgddg );if _bddfae !=nil {_db .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bddfae );
return nil ,_bddfae ;};_gceaa .ColorSpace =_acdd ;_ecgddg =_cdcfe .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ecgddg !=nil {_ecgddg =_gbd .TraceToDirectObject (_ecgddg );_fdfg ,_cdgb :=_ecgddg .(*_gbd .PdfObjectArray );if !_cdgb {_db .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ecgddg );
return nil ,_gbd .ErrTypeError ;};_gceaa .Background =_fdfg ;};_ecgddg =_cdcfe .Get ("\u0042\u0042\u006f\u0078");if _ecgddg !=nil {_ecgddg =_gbd .TraceToDirectObject (_ecgddg );_bgaeg ,_bddgd :=_ecgddg .(*_gbd .PdfObjectArray );if !_bddgd {_db .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ecgddg );
return nil ,_gbd .ErrTypeError ;};_cfdfcga ,_egaad :=NewPdfRectangle (*_bgaeg );if _egaad !=nil {_db .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_egaad );return nil ,_egaad ;};_gceaa .BBox =_cfdfcga ;};
_ecgddg =_cdcfe .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _ecgddg !=nil {_ecgddg =_gbd .TraceToDirectObject (_ecgddg );_fcbcda ,_afce :=_ecgddg .(*_gbd .PdfObjectBool );if !_afce {_db .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecgddg );
return nil ,_gbd .ErrTypeError ;};_gceaa .AntiAlias =_fcbcda ;};switch *_gagbe {case 1:_aafbc ,_fggg :=_beefe (_cdcfe );if _fggg !=nil {return nil ,_fggg ;};_aafbc .PdfShading =_gceaa ;_gceaa ._fdcab =_aafbc ;return _gceaa ,nil ;case 2:_addfb ,_ggafc :=_fgfcc (_cdcfe );
if _ggafc !=nil {return nil ,_ggafc ;};_addfb .PdfShading =_gceaa ;_gceaa ._fdcab =_addfb ;return _gceaa ,nil ;case 3:_gabgg ,_becfg :=_ebcc (_cdcfe );if _becfg !=nil {return nil ,_becfg ;};_gabgg .PdfShading =_gceaa ;_gceaa ._fdcab =_gabgg ;return _gceaa ,nil ;
case 4:_ffbd ,_fbaeb :=_eccbc (_cdcfe );if _fbaeb !=nil {return nil ,_fbaeb ;};_ffbd .PdfShading =_gceaa ;_gceaa ._fdcab =_ffbd ;return _gceaa ,nil ;case 5:_fadab ,_cbcgfg :=_ggbd (_cdcfe );if _cbcgfg !=nil {return nil ,_cbcgfg ;};_fadab .PdfShading =_gceaa ;
_gceaa ._fdcab =_fadab ;return _gceaa ,nil ;case 6:_cdcda ,_ggbgb :=_gdaad (_cdcfe );if _ggbgb !=nil {return nil ,_ggbgb ;};_cdcda .PdfShading =_gceaa ;_gceaa ._fdcab =_cdcda ;return _gceaa ,nil ;case 7:_bccc ,_bbdfe :=_geef (_cdcfe );if _bbdfe !=nil {return nil ,_bbdfe ;
};_bccc .PdfShading =_gceaa ;_gceaa ._fdcab =_bccc ;return _gceaa ,nil ;};return nil ,_ff .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cdec :_gbd .MakeIndirectObject (_gbd .MakeDict ())};};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_gbd .PdfObjectInteger ;BitsPerComponent *_gbd .PdfObjectInteger ;BitsPerFlag *_gbd .PdfObjectInteger ;Decode *_gbd .PdfObjectArray ;Function []PdfFunction ;};

// ToInteger convert to an integer format.
func (_eceg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_fcce :=_ga .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fcce *_eceg .R ()),uint32 (_fcce *_eceg .G ()),uint32 (_fcce *_eceg .B ())};};func (_cbbd *PdfReader )newPdfAnnotationSquareFromDict (_cbba *_gbd .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bga :=PdfAnnotationSquare {};
_acbc ,_dccg :=_cbbd .newPdfAnnotationMarkupFromDict (_cbba );if _dccg !=nil {return nil ,_dccg ;};_bga .PdfAnnotationMarkup =_acbc ;_bga .BS =_cbba .Get ("\u0042\u0053");_bga .IC =_cbba .Get ("\u0049\u0043");_bga .BE =_cbba .Get ("\u0042\u0045");_bga .RD =_cbba .Get ("\u0052\u0044");
return &_bga ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_fdcac PdfModel ;_beee *_gbd .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_gbd .PdfObjectName ;T *_gbd .PdfObjectString ;TU *_gbd .PdfObjectString ;TM *_gbd .PdfObjectString ;Ff *_gbd .PdfObjectInteger ;
V _gbd .PdfObject ;DV _gbd .PdfObject ;AA _gbd .PdfObject ;};

// A returns the value of the A component of the color.
func (_bffc *PdfColorLab )A ()float64 {return _bffc [1]};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_dgc :=NewPdfAction ();_cg :=&PdfActionMovie {};_cg .PdfAction =_dgc ;_dgc .SetContext (_cg );return _cg ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_deffd *PdfField )GetContainingPdfObject ()_gbd .PdfObject {return _deffd ._beee };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_gebe _gbd .PdfObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_gfce *PdfTilingPattern )SetContentStream (content []byte ,encoder _gbd .StreamEncoder )error {_bgcbc ,_ddfcaf :=_gfce ._gaadc .(*_gbd .PdfObjectStream );if !_ddfcaf {_db .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfce ._gaadc );
return _gbd .ErrTypeError ;};if encoder ==nil {encoder =_gbd .NewRawEncoder ();};_cgfgg :=_bgcbc .PdfObjectDictionary ;_agfeb :=encoder .MakeStreamDict ();_cgfgg .Merge (_agfeb );_decge ,_cbacae :=encoder .EncodeBytes (content );if _cbacae !=nil {return _cbacae ;
};_cgfgg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_decge ))));_bgcbc .Stream =_decge ;return nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_bcbd *PdfReader )GetIndirectObjectByNumber (number int )(_gbd .PdfObject ,error ){_afbcg ,_cgddf :=_bcbd ._dagg .LookupByNumber (number );return _afbcg ,_cgddf ;};func _fbebb (_beae ,_gbabf string )string {if _fc .Contains (_beae ,"\u002b"){_gcgc :=_fc .Split (_beae ,"\u002b");
if len (_gcgc )==2{_beae =_gcgc [1];};};return _gbabf +"\u002b"+_beae ;};func (_ddaba *PdfReader )newPdfAnnotation3DFromDict (_cfa *_gbd .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fade :=PdfAnnotation3D {};_fade .T3DD =_cfa .Get ("\u0033\u0044\u0044");
_fade .T3DV =_cfa .Get ("\u0033\u0044\u0056");_fade .T3DA =_cfa .Get ("\u0033\u0044\u0041");_fade .T3DI =_cfa .Get ("\u0033\u0044\u0049");_fade .T3DB =_cfa .Get ("\u0033\u0044\u0042");return &_fade ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_gbd .PdfObjectArray ;Matrix *_gbd .PdfObjectArray ;Function []PdfFunction ;};func (_eeaa *DSS )addCRLs (_fdf [][]byte )([]*_gbd .PdfObjectStream ,error ){return _eeaa .add (&_eeaa .CRLs ,_eeaa ._fdad ,_fdf );
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gacce *_gbd .PdfIndirectObject ;};func _aegc (_aagae *_gbd .PdfObjectStream )(*PdfFunctionType4 ,error ){_fcaad :=&PdfFunctionType4 {};_fcaad ._eebd =_aagae ;_cbabf :=_aagae .PdfObjectDictionary ;
_gbfef ,_fcbg :=_gbd .TraceToDirectObject (_cbabf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gbd .PdfObjectArray );if !_fcbg {_db .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gbfef .Len ()%2!=0{_db .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gbcfg ,_afabd :=_gbfef .ToFloat64Array ();
if _afabd !=nil {return nil ,_afabd ;};_fcaad .Domain =_gbcfg ;_gbfef ,_fcbg =_gbd .TraceToDirectObject (_cbabf .Get ("\u0052\u0061\u006eg\u0065")).(*_gbd .PdfObjectArray );if _fcbg {if _gbfef .Len ()< 0||_gbfef .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_eeaee ,_eggb :=_gbfef .ToFloat64Array ();if _eggb !=nil {return nil ,_eggb ;};_fcaad .Range =_eeaee ;};_fgbe ,_afabd :=_gbd .DecodeStream (_aagae );if _afabd !=nil {return nil ,_afabd ;};_fcaad ._gdcd =_fgbe ;_acaff :=_ba .NewPSParser (_fgbe );_cada ,_afabd :=_acaff .Parse ();
if _afabd !=nil {return nil ,_afabd ;};_fcaad .Program =_cada ;return _fcaad ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_faaea :=PdfWriter {};_faaea ._bdgga =map[_gbd .PdfObject ]struct{}{};_faaea ._fbafa =[]_gbd .PdfObject {};_faaea ._bgedca =map[_gbd .PdfObject ][]*_gbd .PdfObjectDictionary {};_faaea ._dfade =map[_gbd .PdfObject ]struct{}{};
_faaea ._gefd =1;_faaea ._afbg =3;_cfbaf :=_gbd .MakeDict ();_ffgaa :=[]struct{_gfeba _gbd .PdfObjectName ;_aeffdc string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcdg ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cddec ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_fcada ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_cagag ()},{"\u0054\u0069\u0074l\u0065",_aaffa ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_caafb ()}};
for _ ,_bfaaa :=range _ffgaa {if _bfaaa ._aeffdc !=""{_cfbaf .Set (_bfaaa ._gfeba ,_gbd .MakeString (_bfaaa ._aeffdc ));};};if _bceba :=_fegae ();!_bceba .IsZero (){if _ffcef ,_agedg :=NewPdfDateFromTime (_bceba );_agedg ==nil {_cfbaf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffcef .ToPdfObject ());
};};if _abefb :=_ecgc ();!_abefb .IsZero (){if _baaccd ,_abaaa :=NewPdfDateFromTime (_abefb );_abaaa ==nil {_cfbaf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_baaccd .ToPdfObject ());};};_fdccgb :=_gbd .PdfIndirectObject {};_fdccgb .PdfObject =_cfbaf ;
_faaea ._edfba =&_fdccgb ;_faaea .addObject (&_fdccgb );_fgfgb :=_gbd .PdfIndirectObject {};_gegfa :=_gbd .MakeDict ();_gegfa .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_fgfgb .PdfObject =_gegfa ;_faaea ._bdgff =&_fgfgb ;
_faaea .addObject (_faaea ._bdgff );_faedga ,_ccaab :=_bafec ("\u0077");if _ccaab !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccaab );};_faaea ._gacgf =_faedga ;_cacdb :=_gbd .PdfIndirectObject {};_acbfb :=_gbd .MakeDict ();
_acbfb .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0050\u0061\u0067e\u0073"));_ecdf :=_gbd .PdfObjectArray {};_acbfb .Set ("\u004b\u0069\u0064\u0073",&_ecdf );_acbfb .Set ("\u0043\u006f\u0075n\u0074",_gbd .MakeInteger (0));_cacdb .PdfObject =_acbfb ;
_faaea ._eceaeb =&_cacdb ;_faaea ._bced =map[_gbd .PdfObject ]struct{}{};_faaea .addObject (_faaea ._eceaeb );_gegfa .Set ("\u0050\u0061\u0067e\u0073",&_cacdb );_faaea ._dbecd =_gegfa ;_db .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_fgfgb );
return _faaea ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_dc .SimpleEncoder ,error ){_ecff ,_efdf :=_affe (basefont );if _efdf !=nil {return nil ,nil ,_efdf ;};_dfce ,_cfff :=_ecff .Encoder ().(_dc .SimpleEncoder );if !_cfff {return nil ,nil ,_a .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ecff .Encoder ());
};_gebea :=make (map[rune ]_dc .GlyphName );for _effg :=range alphabet {if _ ,_cbgg :=_dfce .RuneToCharcode (_effg );!_cbgg {_ ,_dbbb :=_ecff ._ecfeb .Read (_effg );if !_dbbb {_db .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_effg ,_effg );
continue ;};_aeafd ,_dbbb :=_dc .RuneToGlyph (_effg );if !_dbbb {_db .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_effg ,_effg );continue ;};if len (_gebea )>=255{return nil ,nil ,_ff .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gebea [_effg ]=_aeafd ;};};var (_gede []_dc .CharCode ;_gfeeb []_dc .CharCode ;);for _ceggg :=_dc .CharCode (1);_ceggg <=0xff;_ceggg ++{_ggccc ,_ffccg :=_dfce .CharcodeToRune (_ceggg );if !_ffccg {_gede =append (_gede ,_ceggg );continue ;};if _ ,_ffccg =alphabet [_ggccc ];
!_ffccg {_gfeeb =append (_gfeeb ,_ceggg );};};_dgad :=append (_gede ,_gfeeb ...);if len (_dgad )< len (_gebea ){return nil ,nil ,_a .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gebea ),len (_dgad ));
};_gbdc :=make ([]rune ,0,len (_gebea ));for _ggbe :=range _gebea {_gbdc =append (_gbdc ,_ggbe );};_eb .Slice (_gbdc ,func (_cagg ,_fgga int )bool {return _gbdc [_cagg ]< _gbdc [_fgga ]});_cfbc :=make (map[_dc .CharCode ]_dc .GlyphName ,len (_gbdc ));for _ ,_becdg :=range _gbdc {_fdgbc :=_dgad [0];
_dgad =_dgad [1:];_cfbc [_fdgbc ]=_gebea [_becdg ];};_dfce =_dc .ApplyDifferences (_dfce ,_cfbc );_ecff .SetEncoder (_dfce );return &PdfFont {_bbddd :&_ecff },_dfce ,nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_bgcee *PdfReader )GetNameDictionary ()(_gbd .PdfObject ,error ){_adeb :=_gbd .ResolveReference (_bgcee ._dccge .Get ("\u004e\u0061\u006de\u0073"));if _adeb ==nil {return nil ,nil ;};if !_bgcee ._adaag {_eacff :=_bgcee .traverseObjectData (_adeb );
if _eacff !=nil {return nil ,_eacff ;};};return _adeb ,nil ;};

// PdfVersion returns version of the PDF file.
func (_gbdb *PdfReader )PdfVersion ()_gbd .Version {return _gbdb ._dagg .PdfVersion ()};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gebca *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gebca .AlternateSpace ==nil {return nil ,_ff .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _gebca .AlternateSpace .ColorToRGB (color );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_gbd .PdfObjectStream )(*XObjectImage ,error ){_cgdfa :=&XObjectImage {};_cgdfa ._dcaea =stream ;_cffa :=*(stream .PdfObjectDictionary );_deacf ,_fagg :=_gbd .NewEncoderFromStream (stream );if _fagg !=nil {return nil ,_fagg ;
};_cgdfa .Filter =_deacf ;if _deacff :=_gbd .TraceToDirectObject (_cffa .Get ("\u0057\u0069\u0064t\u0068"));_deacff !=nil {_gfcgfd ,_abaf :=_deacff .(*_gbd .PdfObjectInteger );if !_abaf {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fcdbd :=int64 (*_gfcgfd );_cgdfa .Width =&_fcdbd ;}else {return nil ,_ff .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ccbgc :=_gbd .TraceToDirectObject (_cffa .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_ccbgc !=nil {_fdade ,_bdcdc :=_ccbgc .(*_gbd .PdfObjectInteger );if !_bdcdc {return nil ,_ff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bbdb :=int64 (*_fdade );
_cgdfa .Height =&_bbdb ;}else {return nil ,_ff .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _afebbc :=_gbd .TraceToDirectObject (_cffa .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_afebbc !=nil {_gdebd ,_aecda :=NewPdfColorspaceFromPdfObject (_afebbc );if _aecda !=nil {return nil ,_aecda ;};_cgdfa .ColorSpace =_gdebd ;}else {_db .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_cgdfa .ColorSpace =NewPdfColorspaceDeviceGray ();};if _acbfd :=_gbd .TraceToDirectObject (_cffa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_acbfd !=nil {_decbb ,_edfbg :=_acbfd .(*_gbd .PdfObjectInteger );
if !_edfbg {return nil ,_ff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_acbfa :=int64 (*_decbb );_cgdfa .BitsPerComponent =&_acbfa ;};_cgdfa .Intent =_cffa .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_cgdfa .ImageMask =_cffa .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_cgdfa .Mask =_cffa .Get ("\u004d\u0061\u0073\u006b");_cgdfa .Decode =_cffa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_cgdfa .Interpolate =_cffa .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_cgdfa .Alternatives =_cffa .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_cgdfa .SMask =_cffa .Get ("\u0053\u004d\u0061s\u006b");_cgdfa .SMaskInData =_cffa .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_cgdfa .Matte =_cffa .Get ("\u004d\u0061\u0074t\u0065");_cgdfa .Name =_cffa .Get ("\u004e\u0061\u006d\u0065");_cgdfa .StructParent =_cffa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cgdfa .ID =_cffa .Get ("\u0049\u0044");
_cgdfa .OPI =_cffa .Get ("\u004f\u0050\u0049");_cgdfa .Metadata =_cffa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cgdfa .OC =_cffa .Get ("\u004f\u0043");_cgdfa .Stream =stream .Stream ;return _cgdfa ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_adb :=NewPdfAction ();_gde :=&PdfActionGoToR {};_gde .PdfAction =_adb ;_adb .SetContext (_gde );return _gde ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_egge :=NewPdfAnnotation ();_fcdf :=&PdfAnnotationPopup {};_fcdf .PdfAnnotation =_egge ;_egge .SetContext (_fcdf );return _fcdf ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_efega *PdfPage )Size ()(float64 ,float64 ,error ){_begcc ,_dfdde :=_efega .GetMediaBox ();if _dfdde !=nil {return 0,0,_dfdde ;};_afffd ,_cefdg :=_begcc .Width (),_begcc .Height ();if _ddbeb :=_efega .Rotate ;_ddbeb !=nil &&*_ddbeb %360!=0&&*_ddbeb %90==0{if _cebg :=(360+*_ddbeb %360)%360;
_cebg ==90||_cebg ==270{_afffd ,_cefdg =_cefdg ,_afffd ;};};return _afffd ,_cefdg ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_cccc *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};var _ pdfFont =(*pdfCIDFontType0 )(nil );type modelManager struct{_bggda map[PdfModel ]_gbd .PdfObject ;_fage map[_gbd .PdfObject ]PdfModel ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_fcfb *PdfPageResources )SetPatternByName (keyName _gbd .PdfObjectName ,pattern _gbd .PdfObject )error {if _fcfb .Pattern ==nil {_fcfb .Pattern =_gbd .MakeDict ();};_cdbdf ,_afba :=_fcfb .Pattern .(*_gbd .PdfObjectDictionary );if !_afba {return _gbd .ErrTypeError ;
};_cdbdf .Set (keyName ,pattern );return nil ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_dccb DefaultImageHandler )NewImageFromGoImage (goimg _be .Image )(*Image ,error ){_afcab ,_bggd :=_ed .FromGoImage (goimg );if _bggd !=nil {return nil ,_bggd ;};_gfgb :=_cagfg (_afcab .Base ());return &_gfgb ,nil ;};func _aaffa ()string {_adefd .Lock ();
defer _adefd .Unlock ();return _eaeed };

// GetCustomInfo returns a custom info value for the specified name.
func (_bbdf *PdfInfo )GetCustomInfo (name string )*_gbd .PdfObjectString {var _dfdd *_gbd .PdfObjectString ;if _bbdf ._bafb ==nil {return _dfdd ;};if _fcba ,_gcdea :=_bbdf ._bafb .Get (*_gbd .MakeName (name )).(*_gbd .PdfObjectString );_gcdea {_dfdd =_fcba ;
};return _dfdd ;};

// Write writes out the PDF.
func (_cbfca *PdfWriter )Write (writer _acga .Writer )error {_db .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_aebcf :=_ega .GetLicenseKey ();if (_aebcf ==nil ||!_aebcf .IsLicensed ())&&!_becde {_a .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_a .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ff .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _cbfca ._dgdf !=nil {_db .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cbfca ._dgdf );
_abdag :=_cbfca ._dgdf .ToPdfObject ();_db .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_abdag ,_abdag ,_abdag );_cbfca ._dbecd .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_abdag );
_eaabb :=_cbfca .addObjects (_abdag );if _eaabb !=nil {return _eaabb ;};};if _cbfca ._gaag !=nil {_db .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_dcgbf :=_cbfca ._gaag .ToPdfObject ();_db .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dcgbf );
_cbfca ._dbecd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dcgbf );_afebd :=_cbfca .addObjects (_dcgbf );if _afebd !=nil {return _afebd ;};};for _afcdf ,_edfbb :=range _cbfca ._bgedca {if !_cbfca .hasObject (_afcdf ){_db .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_afcdf ,_afcdf ,_afcdf );
for _ ,_feef :=range _edfbb {for _ ,_gcdac :=range _feef .Keys (){_adegae :=_feef .Get (_gcdac );if _adegae ==_afcdf {_db .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_feef .Set (_gcdac ,_gbd .MakeNull ());break ;};};};};};_cbfca ._dbecd .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_gbd .MakeName (_a .Sprintf ("\u0025\u0064\u002e%\u0064",_cbfca ._gefd ,_cbfca ._afbg )));_cbfca .copyObjects ();if _cbfca ._deaac !=nil {var _bfcdg error ;
_cbfca ._fbafa ,_bfcdg =_cbfca ._deaac .Optimize (_cbfca ._fbafa );if _bfcdg !=nil {return _bfcdg ;};_dagffd :=make (map[_gbd .PdfObject ]struct{},len (_cbfca ._fbafa ));for _ ,_gdfcb :=range _cbfca ._fbafa {_dagffd [_gdfcb ]=struct{}{};};_cbfca ._bdgga =_dagffd ;
};_cbfca ._fdff =_cbfca ._gbbdc ;_cbfca ._adefdc =_b .NewWriter (writer );_cddgf :=_cbfca ._gefd > 1||(_cbfca ._gefd ==1&&_cbfca ._afbg > 4);if _cbfca ._gfcd !=nil {_cddgf =*_cbfca ._gfcd ;};_baddg :=make (map[_gbd .PdfObject ]bool );for _ ,_ecacd :=range _cbfca ._fbafa {if _eabffg ,_gceb :=_ecacd .(*_gbd .PdfObjectStreams );
_gceb {_cddgf =true ;for _ ,_bfgee :=range _eabffg .Elements (){_baddg [_bfgee ]=true ;if _fgabc ,_edbfg :=_bfgee .(*_gbd .PdfIndirectObject );_edbfg {_baddg [_fgabc .PdfObject ]=true ;};};};};if _cddgf &&_cbfca ._gefd ==1&&_cbfca ._afbg < 5{_cbfca ._afbg =5;
};if _cbfca ._bgdef {_cbfca .writeString ("\u000a");}else {_cbfca .writeString (_a .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cbfca ._gefd ,_cbfca ._afbg ));_cbfca .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_cbfca .updateObjectNumbers ();_db .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cbfca ._fbafa ));_cbfca ._agffb =make (map[int ]crossReference );_cbfca ._agffb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _cbfca ._eebgdd .ObjectMap !=nil {for _dagda ,_dabca :=range _cbfca ._eebgdd .ObjectMap {if _dagda ==0{continue ;};if _dabca .XType ==_gbd .XrefTypeObjectStream {_egfgg :=crossReference {Type :2,ObjectNumber :_dabca .OsObjNumber ,Index :_dabca .OsObjIndex };
_cbfca ._agffb [_dagda ]=_egfgg ;};if _dabca .XType ==_gbd .XrefTypeTableEntry {_cfgcf :=crossReference {Type :1,ObjectNumber :_dabca .ObjectNumber ,Offset :_dabca .Offset };_cbfca ._agffb [_dagda ]=_cfgcf ;};};};for _ ,_eadbg :=range _cbfca ._fbafa {if _gacfd :=_baddg [_eadbg ];
_gacfd {continue ;};_bdga :=int64 (0);switch _cedgf :=_eadbg .(type ){case *_gbd .PdfIndirectObject :_bdga =_cedgf .ObjectNumber ;case *_gbd .PdfObjectStream :_bdga =_cedgf .ObjectNumber ;case *_gbd .PdfObjectStreams :_bdga =_cedgf .ObjectNumber ;default:_db .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_eadbg );
return ErrTypeCheck ;};if _cbfca ._bdfea !=nil &&_eadbg !=_cbfca ._fffff {_effab :=_cbfca ._bdfea .Encrypt (_eadbg ,_bdga ,0);if _effab !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_effab );
return _effab ;};};_cbfca .writeObject (int (_bdga ),_eadbg );};_fegecf :=_cbfca ._fdff ;var _gaabf int ;for _dbbca :=range _cbfca ._agffb {if _dbbca > _gaabf {_gaabf =_dbbca ;};};if _cddgf {_eeebd :=_gaabf +1;_cbfca ._agffb [_eeebd ]=crossReference {Type :1,ObjectNumber :_eeebd ,Offset :_fegecf };
_beadb :=_cd .NewBuffer (nil );_bcca :=_gbd .MakeArray ();for _bcfgf :=0;_bcfgf <=_gaabf ;{for ;_bcfgf <=_gaabf ;_bcfgf ++{_gcfaa ,_ffgdbd :=_cbfca ._agffb [_bcfgf ];if _ffgdbd &&(!_cbfca ._bgdef ||_cbfca ._bgdef &&(_gcfaa .Type ==1&&_gcfaa .Offset >=_cbfca ._badae ||_gcfaa .Type ==0)){break ;
};};var _fbffg int ;for _fbffg =_bcfgf +1;_fbffg <=_gaabf ;_fbffg ++{_ccbdf ,_bdce :=_cbfca ._agffb [_fbffg ];if _bdce &&(!_cbfca ._bgdef ||_cbfca ._bgdef &&(_ccbdf .Type ==1&&_ccbdf .Offset > _cbfca ._badae )){continue ;};break ;};_bcca .Append (_gbd .MakeInteger (int64 (_bcfgf )),_gbd .MakeInteger (int64 (_fbffg -_bcfgf )));
for _bceeae :=_bcfgf ;_bceeae < _fbffg ;_bceeae ++{_dcadd :=_cbfca ._agffb [_bceeae ];switch _dcadd .Type {case 0:_af .Write (_beadb ,_af .BigEndian ,byte (0));_af .Write (_beadb ,_af .BigEndian ,uint32 (0));_af .Write (_beadb ,_af .BigEndian ,uint16 (0xFFFF));
case 1:_af .Write (_beadb ,_af .BigEndian ,byte (1));_af .Write (_beadb ,_af .BigEndian ,uint32 (_dcadd .Offset ));_af .Write (_beadb ,_af .BigEndian ,uint16 (_dcadd .Generation ));case 2:_af .Write (_beadb ,_af .BigEndian ,byte (2));_af .Write (_beadb ,_af .BigEndian ,uint32 (_dcadd .ObjectNumber ));
_af .Write (_beadb ,_af .BigEndian ,uint16 (_dcadd .Index ));};};_bcfgf =_fbffg +1;};_cabeg ,_gebbfd :=_gbd .MakeStream (_beadb .Bytes (),_gbd .NewFlateEncoder ());if _gebbfd !=nil {return _gebbfd ;};_cabeg .ObjectNumber =int64 (_eeebd );_cabeg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0058\u0052\u0065\u0066"));
_cabeg .PdfObjectDictionary .Set ("\u0057",_gbd .MakeArray (_gbd .MakeInteger (1),_gbd .MakeInteger (4),_gbd .MakeInteger (2)));_cabeg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bcca );_cabeg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_gbd .MakeInteger (int64 (_eeebd +1)));
_cabeg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cbfca ._edfba );_cabeg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cbfca ._bdgff );if _cbfca ._bgdef &&_cbfca ._ggadb > 0{_cabeg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_gbd .MakeInteger (_cbfca ._ggadb ));
};if _cbfca ._bdfea !=nil {_cabeg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cbfca ._fffff );_cabeg .Set ("\u0049\u0044",_cbfca ._gegfb );_db .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cbfca ._gegfb );};_cbfca .writeObject (int (_cabeg .ObjectNumber ),_cabeg );
}else {_cbfca .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _ccccc :=0;_ccccc <=_gaabf ;{for ;_ccccc <=_gaabf ;_ccccc ++{_ffagf ,_egafc :=_cbfca ._agffb [_ccccc ];if _egafc &&(!_cbfca ._bgdef ||_cbfca ._bgdef &&(_ffagf .Type ==1&&_ffagf .Offset >=_cbfca ._badae ||_ffagf .Type ==0)){break ;
};};var _fecaa int ;for _fecaa =_ccccc +1;_fecaa <=_gaabf ;_fecaa ++{_efeeg ,_ffbda :=_cbfca ._agffb [_fecaa ];if _ffbda &&(!_cbfca ._bgdef ||_cbfca ._bgdef &&(_efeeg .Type ==1&&_efeeg .Offset > _cbfca ._badae )){continue ;};break ;};_ggbee :=_a .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ccccc ,_fecaa -_ccccc );
_cbfca .writeString (_ggbee );for _afee :=_ccccc ;_afee < _fecaa ;_afee ++{_dbfdf :=_cbfca ._agffb [_afee ];switch _dbfdf .Type {case 0:_ggbee =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_cbfca .writeString (_ggbee );
case 1:_ggbee =_a .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_dbfdf .Offset ,0);_cbfca .writeString (_ggbee );};};_ccccc =_fecaa +1;};_abgdg :=_gbd .MakeDict ();_abgdg .Set ("\u0049\u006e\u0066\u006f",_cbfca ._edfba );
_abgdg .Set ("\u0052\u006f\u006f\u0074",_cbfca ._bdgff );_abgdg .Set ("\u0053\u0069\u007a\u0065",_gbd .MakeInteger (int64 (_gaabf +1)));if _cbfca ._bgdef &&_cbfca ._ggadb > 0{_abgdg .Set ("\u0050\u0072\u0065\u0076",_gbd .MakeInteger (_cbfca ._ggadb ));
};if _cbfca ._bdfea !=nil {_abgdg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cbfca ._fffff );_abgdg .Set ("\u0049\u0044",_cbfca ._gegfb );_db .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cbfca ._gegfb );};_cbfca .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");
_cbfca .writeString (_abgdg .WriteString ());_cbfca .writeString ("\u000a");};_bbfda :=_a .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fegecf );_cbfca .writeString (_bbfda );_cbfca .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
if _cbfca ._cfdbe ==nil {_cbfca ._cfdbe =_cbfca ._adefdc .Flush ();};return _cbfca ._cfdbe ;};

// IsCID returns true if the underlying font is CID.
func (_deaf *PdfFont )IsCID ()bool {return _deaf .baseFields ().isCIDFont ()};func (_faedf *PdfReader )resolveReference (_fdba *_gbd .PdfObjectReference )(_gbd .PdfObject ,bool ,error ){_aefd ,_dfdga :=_faedf ._dagg .ObjCache [int (_fdba .ObjectNumber )];
if !_dfdga {_db .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fdba );_dgaac ,_cbdfe :=_faedf ._dagg .LookupByReference (*_fdba );if _cbdfe !=nil {return nil ,false ,_cbdfe ;};_faedf ._dagg .ObjCache [int (_fdba .ObjectNumber )]=_dgaac ;
return _dgaac ,false ,nil ;};return _aefd ,true ,nil ;};func _dae (_eed _gbd .PdfObject )(*PdfFilespec ,error ){if _eed ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_eed );};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ecbb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ecbb .AlternateSpace ==nil {return nil ,_ff .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ecbb .AlternateSpace .ColorToRGB (color );};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cbdc *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ff .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_gceca ,_bbcc :=_ed .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fafca ,img ._dadd );if _bbcc !=nil {return img ,_bbcc ;};_fbeee ,_bbcc :=_ed .NRGBAConverter .Convert (_gceca );if _bbcc !=nil {return img ,_bbcc ;
};_dege :=_cagfg (_fbeee .Base ());_db .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_db .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_db .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_dege .Data );
_db .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_dege );return _dege ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_agda pdfFontSimple )GetCharMetrics (code _dc .CharCode )(_fad .CharMetrics ,bool ){if _ggdb ,_feabd :=_agda ._fgaa [code ];_feabd {return _fad .CharMetrics {Wx :_ggdb },true ;};if _fad .IsStdFont (_fad .StdFontName (_agda ._dgcff )){return _fad .CharMetrics {Wx :250},true ;
};return _fad .CharMetrics {},false ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dffc pdfCIDFontType2 )GetCharMetrics (code _dc .CharCode )(_fad .CharMetrics ,bool ){if _daac ,_efcg :=_dffc ._dfbga [code ];_efcg {return _fad .CharMetrics {Wx :_daac },true ;};_cgcaa :=rune (code );_cdaad ,_aeee :=_dffc ._ggbed [_cgcaa ];if !_aeee {_cdaad =int (_dffc ._fcaca );
};return _fad .CharMetrics {Wx :float64 (_cdaad )},true ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _acga .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gdcgc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _eddf (rs ,opts ,true ,_gdcgc );
};func _gded (_ecfa _gbd .PdfObject )(*PdfColorspaceDeviceN ,error ){_bdeec :=NewPdfColorspaceDeviceN ();if _bbef ,_dcefa :=_ecfa .(*_gbd .PdfIndirectObject );_dcefa {_bdeec ._ecdc =_bbef ;};_ecfa =_gbd .TraceToDirectObject (_ecfa );_dbdf ,_gbca :=_ecfa .(*_gbd .PdfObjectArray );
if !_gbca {return nil ,_a .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _dbdf .Len ()!=4&&_dbdf .Len ()!=5{return nil ,_a .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_ecfa =_dbdf .Get (0);_edac ,_gbca :=_ecfa .(*_gbd .PdfObjectName );if !_gbca {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_edac !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_a .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ecfa =_dbdf .Get (1);
_ecfa =_gbd .TraceToDirectObject (_ecfa );_bbcdge ,_gbca :=_ecfa .(*_gbd .PdfObjectArray );if !_gbca {return nil ,_a .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_bdeec .ColorantNames =_bbcdge ;_ecfa =_dbdf .Get (2);_cffbbe ,_ecged :=NewPdfColorspaceFromPdfObject (_ecfa );if _ecged !=nil {return nil ,_ecged ;};_bdeec .AlternateSpace =_cffbbe ;_adba ,_ecged :=_dbege (_dbdf .Get (3));if _ecged !=nil {return nil ,_ecged ;
};_bdeec .TintTransform =_adba ;if _dbdf .Len ()==5{_ebaeb ,_bcbgc :=_gaeaf (_dbdf .Get (4));if _bcbgc !=nil {return nil ,_bcbgc ;};_bdeec .Attributes =_ebaeb ;};return _bdeec ,nil ;};func (_fcb *PdfReader )newPdfActionSetOCGStateFromDict (_cgcc *_gbd .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cgcc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cgcc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_babbb *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _gbcf []*PdfFieldSignature ;for _ ,_bbgdc :=range _babbb .AllFields (){switch _aagce :=_bbgdc .GetContext ().(type ){case *PdfFieldSignature :_dbfa :=_aagce ;_gbcf =append (_gbcf ,_dbfa );
};};return _gbcf ;};func (_fegag *PdfPattern )getDict ()*_gbd .PdfObjectDictionary {if _aefad ,_ggbea :=_fegag ._gaadc .(*_gbd .PdfIndirectObject );_ggbea {_gfdga ,_cageb :=_aefad .PdfObject .(*_gbd .PdfObjectDictionary );if !_cageb {return nil ;};return _gfdga ;
}else if _gfbfa ,_ebaebd :=_fegag ._gaadc .(*_gbd .PdfObjectStream );_ebaebd {return _gfbfa .PdfObjectDictionary ;}else {_db .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fegag ._gaadc );
return nil ;};};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dfgd ,_gffg :=_ec .Open (filePath );if _gffg !=nil {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gffg );
return nil ,_gffg ;};defer _dfgd .Close ();return NewCompositePdfFontFromTTF (_dfgd );};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_gface *PdfOutlineTreeNode )ToPdfObject ()_gbd .PdfObject {return _gface .GetContext ().ToPdfObject ();};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_adefd .Lock ();defer _adefd .Unlock ();_bdbcf =author };func _acfc (_gcgg _gbd .PdfObject )(*PdfColorspaceCalRGB ,error ){_bcaff :=NewPdfColorspaceCalRGB ();if _edaea ,_gebg :=_gcgg .(*_gbd .PdfIndirectObject );_gebg {_bcaff ._ceca =_edaea ;
};_gcgg =_gbd .TraceToDirectObject (_gcgg );_edde ,_egag :=_gcgg .(*_gbd .PdfObjectArray );if !_egag {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _edde .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gcgg =_gbd .TraceToDirectObject (_edde .Get (0));_cddf ,_egag :=_gcgg .(*_gbd .PdfObjectName );if !_egag {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_cddf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_a .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gcgg =_gbd .TraceToDirectObject (_edde .Get (1));
_agacf ,_egag :=_gcgg .(*_gbd .PdfObjectDictionary );if !_egag {return nil ,_a .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_gcgg =_agacf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gcgg =_gbd .TraceToDirectObject (_gcgg );_eaadd ,_egag :=_gcgg .(*_gbd .PdfObjectArray );if !_egag {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _eaadd .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gbfa ,_cged :=_eaadd .GetAsFloat64Slice ();
if _cged !=nil {return nil ,_cged ;};_bcaff .WhitePoint =_gbfa ;_gcgg =_agacf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcgg !=nil {_gcgg =_gbd .TraceToDirectObject (_gcgg );_ebca ,_bfgb :=_gcgg .(*_gbd .PdfObjectArray );
if !_bfgb {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ebca .Len ()!=3{return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_ebae ,_ccabc :=_ebca .GetAsFloat64Slice ();if _ccabc !=nil {return nil ,_ccabc ;};_bcaff .BlackPoint =_ebae ;};_gcgg =_agacf .Get ("\u0047\u0061\u006dm\u0061");if _gcgg !=nil {_gcgg =_gbd .TraceToDirectObject (_gcgg );_fabba ,_afca :=_gcgg .(*_gbd .PdfObjectArray );
if !_afca {return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _fabba .Len ()!=3{return nil ,_a .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_dbcca ,_feaab :=_fabba .GetAsFloat64Slice ();if _feaab !=nil {return nil ,_feaab ;};_bcaff .Gamma =_dbcca ;};_gcgg =_agacf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _gcgg !=nil {_gcgg =_gbd .TraceToDirectObject (_gcgg );_gabc ,_dggagf :=_gcgg .(*_gbd .PdfObjectArray );
if !_dggagf {return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _gabc .Len ()!=9{_db .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_gabc .String ());
return nil ,_a .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fccea ,_cbbaa :=_gabc .GetAsFloat64Slice ();if _cbbaa !=nil {return nil ,_cbbaa ;
};_bcaff .Matrix =_fccea ;};return _bcaff ,nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cdgggf *LTV )Enable (sig *PdfSignature ,extraCerts []*_ad .Certificate )error {if _cdbeb :=_cdgggf .validateSig (sig );_cdbeb !=nil {return _cdbeb ;};_fcbcd ,_aabf :=_cdgggf .generateVRIKey (sig );if _aabf !=nil {return _aabf ;};if _ ,_ggbac :=_cdgggf ._eefce .VRI [_fcbcd ];
_ggbac &&_cdgggf .SkipExisting {return nil ;};_aeeff ,_aabf :=sig .GetCerts ();if _aabf !=nil {return _aabf ;};return _cdgggf .enable (_aeeff ,extraCerts ,_fcbcd );};func (_ebde *PdfReader )newPdfAnnotationTrapNetFromDict (_eccc *_gbd .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_afgc :=PdfAnnotationTrapNet {};
return &_afgc ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_agd :=NewPdfAnnotation ();_cbf :=&PdfAnnotationPolygon {};_cbf .PdfAnnotation =_agd ;_cbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agd .SetContext (_cbf );return _cbf ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_eefc *Image )ToGoImage ()(_be .Image ,error ){_db .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_adfea ,_fcabfc :=_ed .NewImage (int (_eefc .Width ),int (_eefc .Height ),int (_eefc .BitsPerComponent ),_eefc .ColorComponents ,_eefc .Data ,_eefc ._fafca ,_eefc ._dadd );
if _fcabfc !=nil {return nil ,_fcabfc ;};return _adfea ,nil ;};type fontFile struct{_gecdf string ;_eeaec string ;_dage _dc .SimpleEncoder ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_dcag :map[_gbd .PdfObject ]struct{}{},_fafgd :_fdeaf (),_dagg :_gbd .NewParserFromString (txt )};};func (_eeegc *PdfReader )loadStructure ()error {if _eeegc ._dagg .GetCrypter ()!=nil &&!_eeegc ._dagg .IsAuthenticated (){return _a .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aadef :=_eeegc ._dagg .GetTrailer ();if _aadef ==nil {return _a .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fbacd ,_agbgc :=_aadef .Get ("\u0052\u006f\u006f\u0074").(*_gbd .PdfObjectReference );if !_agbgc {return _a .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_aadef );
};_abbdb ,_bdfef :=_eeegc ._dagg .LookupByReference (*_fbacd );if _bdfef !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bdfef );
return _bdfef ;};_egba ,_agbgc :=_abbdb .(*_gbd .PdfIndirectObject );if !_agbgc {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_abbdb ,*_aadef );
return _ff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cfdg ,_agbgc :=(*_egba ).PdfObject .(*_gbd .PdfObjectDictionary );if !_agbgc {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_egba .PdfObject );
return _ff .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_db .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cfdg );_bfaae ,_agbgc :=_cfdg .Get ("\u0050\u0061\u0067e\u0073").(*_gbd .PdfObjectReference );
if !_agbgc {return _ff .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_ccdda ,_bdfef :=_eeegc ._dagg .LookupByReference (*_bfaae );
if _bdfef !=nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bdfef ;};_fbae ,_agbgc :=_ccdda .(*_gbd .PdfIndirectObject );if !_agbgc {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_db .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fbae );return _ff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_aaaga ,_agbgc :=_fbae .PdfObject .(*_gbd .PdfObjectDictionary );if !_agbgc {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fbae );
return _ff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fafa ,_agbgc :=_gbd .GetInt (_aaaga .Get ("\u0043\u006f\u0075n\u0074"));if !_agbgc {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ff .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_agbgc =_gbd .GetName (_aaaga .Get ("\u0054\u0079\u0070\u0065"));!_agbgc {_db .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_aaaga .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0050\u0061\u0067e\u0073"));};if _fcebbg ,_ddea :=_gbd .GetInt (_aaaga .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_ddea {_bgbb :=int64 (*_fcebbg );_eeegc .Rotate =&_bgbb ;};_eeegc ._dcead =_fbacd ;
_eeegc ._dccge =_cfdg ;_eeegc ._dfae =_aaaga ;_eeegc ._cacgb =_fbae ;_eeegc ._aedba =int (*_fafa );_eeegc ._dfgeb =[]*_gbd .PdfIndirectObject {};_bbddb :=map[_gbd .PdfObject ]struct{}{};_bdfef =_eeegc .buildPageList (_fbae ,nil ,_bbddb );if _bdfef !=nil {return _bdfef ;
};_db .Log .Trace ("\u002d\u002d\u002d");_db .Log .Trace ("\u0054\u004f\u0043");_db .Log .Trace ("\u0050\u0061\u0067e\u0073");_db .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_eeegc ._dfgeb ),_eeegc ._dfgeb );_eeegc ._daggg ,_bdfef =_eeegc .loadOutlines ();
if _bdfef !=nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bdfef );
return _bdfef ;};_eeegc .AcroForm ,_bdfef =_eeegc .loadForms ();if _bdfef !=nil {return _bdfef ;};_eeegc .DSS ,_bdfef =_eeegc .loadDSS ();if _bdfef !=nil {return _bdfef ;};return nil ;};func (_adbcd *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ece :=NewPdfAction ();_bcf :=&PdfActionSound {};_bcf .PdfAction =_ece ;_ece .SetContext (_bcf );return _bcf ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_gbd .PdfObject ,error );};func (_ggcg *pdfFontType3 )baseFields ()*fontCommon {return &_ggcg .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_cedd *PdfAnnotation3D )ToPdfObject ()_gbd .PdfObject {_cedd .PdfAnnotation .ToPdfObject ();_gedf :=_cedd ._faa ;_gdcc :=_gedf .PdfObject .(*_gbd .PdfObjectDictionary );_gdcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0033\u0044"));
_gdcc .SetIfNotNil ("\u0033\u0044\u0044",_cedd .T3DD );_gdcc .SetIfNotNil ("\u0033\u0044\u0056",_cedd .T3DV );_gdcc .SetIfNotNil ("\u0033\u0044\u0041",_cedd .T3DA );_gdcc .SetIfNotNil ("\u0033\u0044\u0049",_cedd .T3DI );_gdcc .SetIfNotNil ("\u0033\u0044\u0042",_cedd .T3DB );
return _gedf ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dccgd *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_dcegd :=RC4_128bit ;if options !=nil {_dcegd =options .Algorithm ;};_bgdbg :=_bb .PermOwner ;if options !=nil {_bgdbg =options .Permissions ;};var _acbeda _dbe .Filter ;
switch _dcegd {case RC4_128bit :_acbeda =_dbe .NewFilterV2 (16);case AES_128bit :_acbeda =_dbe .NewFilterAESV2 ();case AES_256bit :_acbeda =_dbe .NewFilterAESV3 ();default:return _a .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gggaa ,_daeab ,_bfae :=_gbd .PdfCryptNewEncrypt (_acbeda ,userPass ,ownerPass ,_bgdbg );if _bfae !=nil {return _bfae ;};_dccgd ._bdfea =_gggaa ;if _daeab .Major !=0{_dccgd .SetVersion (_daeab .Major ,_daeab .Minor );};_dccgd ._feabe =_daeab .Encrypt ;
_dccgd ._gegfb =_gbd .MakeArray (_gbd .MakeHexString (_daeab .ID0 ),_gbd .MakeHexString (_daeab .ID1 ));_dggfe :=_gbd .MakeIndirectObject (_daeab .Encrypt );_dccgd ._fffff =_dggfe ;_dccgd .addObject (_dggfe );return nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ca PdfModel ;Type _gbd .PdfObject ;S _gbd .PdfObject ;Next _gbd .PdfObject ;_ef *_gbd .PdfIndirectObject ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dafdd *PdfReader )CheckAccessRights (password []byte )(bool ,_bb .Permissions ,error ){return _dafdd ._dagg .CheckAccessRights (password );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fefcd pdfCIDFontType0 )GetRuneMetrics (r rune )(_fad .CharMetrics ,bool ){return _fad .CharMetrics {Wx :_fefcd ._dddg },true ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _bd .Time ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _gbd .PdfObject ;MK _gbd .PdfObject ;A _gbd .PdfObject ;AA _gbd .PdfObject ;BS _gbd .PdfObject ;Parent _gbd .PdfObject ;_fbb *PdfField ;_edae bool ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_eagbe *_gbd .PdfObjectDictionary ;_ceca *_gbd .PdfIndirectObject ;};

// RemovePage removes a page by number.
func (_fbdd *PdfAppender )RemovePage (pageNum int ){_edcd :=pageNum -1;_fbdd ._ccbcf =append (_fbdd ._ccbcf [0:_edcd ],_fbdd ._ccbcf [pageNum :]...);};

// R returns the value of the red component of the color.
func (_dfc *PdfColorDeviceRGB )R ()float64 {return _dfc [0]};func (_agaf *PdfReader )newPdfSignatureFromIndirect (_ccafa *_gbd .PdfIndirectObject )(*PdfSignature ,error ){_cffbc ,_dcgga :=_ccafa .PdfObject .(*_gbd .PdfObjectDictionary );if !_dcgga {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _dddc ,_ecdde :=_agaf ._fafgd .GetModelFromPrimitive (_ccafa ).(*PdfSignature );_ecdde {return _dddc ,nil ;};_cgab :=&PdfSignature {};_cgab ._eebcgfe =_ccafa ;_cgab .Type ,_ =_gbd .GetName (_cffbc .Get ("\u0054\u0079\u0070\u0065"));
_cgab .Filter ,_dcgga =_gbd .GetName (_cffbc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_dcgga {_db .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cgab .SubFilter ,_ =_gbd .GetName (_cffbc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_cgab .Contents ,_dcgga =_gbd .GetString (_cffbc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_dcgga {_db .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_cgab .Cert =_cffbc .Get ("\u0043\u0065\u0072\u0074");_cgab .ByteRange ,_ =_gbd .GetArray (_cffbc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_cgab .Reference ,_ =_gbd .GetArray (_cffbc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_cgab .Changes ,_ =_gbd .GetArray (_cffbc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_cgab .Name ,_ =_gbd .GetString (_cffbc .Get ("\u004e\u0061\u006d\u0065"));_cgab .M ,_ =_gbd .GetString (_cffbc .Get ("\u004d"));_cgab .Location ,_ =_gbd .GetString (_cffbc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_cgab .Reason ,_ =_gbd .GetString (_cffbc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_cgab .ContactInfo ,_ =_gbd .GetString (_cffbc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_cgab .R ,_ =_gbd .GetInt (_cffbc .Get ("\u0052"));
_cgab .V ,_ =_gbd .GetInt (_cffbc .Get ("\u0056"));_cgab .PropBuild ,_ =_gbd .GetDict (_cffbc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_cgab .PropAuthTime ,_ =_gbd .GetInt (_cffbc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_cgab .PropAuthType ,_ =_gbd .GetName (_cffbc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _cgab ,nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_dfb :=&PdfAnnotation {};_dfb ._faa =_gbd .MakeIndirectObject (_gbd .MakeDict ());return _dfb ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_fdg :=NewPdfAnnotation ();_ffcc :=&PdfAnnotationCircle {};_ffcc .PdfAnnotation =_fdg ;_ffcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdg .SetContext (_ffcc );return _ffcc ;};

// String returns a string that describes `font`.
func (_ggad *PdfFont )String ()string {_acbe :="";if _ggad ._bbddd .Encoder ()!=nil {_acbe =_ggad ._bbddd .Encoder ().String ();};return _a .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ggad ._bbddd ,_ggad .baseFields ().coreString (),_acbe );
};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fefdgb *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _bfcag []*PdfOutlineTreeNode ;var _dagdb []string ;var _eccba func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_eccba =func (_dacfg *PdfOutlineTreeNode ,_eadbf *[]*PdfOutlineTreeNode ,_cabbf *[]string ,_cdba int ){if _dacfg ==nil {return ;
};if _dacfg ._aagcd ==nil {_db .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_eedgb ,_eaabg :=_dacfg ._aagcd .(*PdfOutlineItem );if _eaabg {*_eadbf =append (*_eadbf ,&_eedgb .PdfOutlineTreeNode );
_ebdg :=_fc .Repeat ("\u0020",_cdba *2)+_eedgb .Title .Decoded ();*_cabbf =append (*_cabbf ,_ebdg );};if _dacfg .First !=nil {_ggga :=_fc .Repeat ("\u0020",_cdba *2)+"\u002b";*_cabbf =append (*_cabbf ,_ggga );_eccba (_dacfg .First ,_eadbf ,_cabbf ,_cdba +1);
};if _eaabg &&_eedgb .Next !=nil {_eccba (_eedgb .Next ,_eadbf ,_cabbf ,_cdba );};};_eccba (_fefdgb ._daggg ,&_bfcag ,&_dagdb ,0);return _bfcag ,_dagdb ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bfedcc *PdfPageResources )GetPatternByName (keyName _gbd .PdfObjectName )(*PdfPattern ,bool ){if _bfedcc .Pattern ==nil {return nil ,false ;};_dedfc ,_gbbcb :=_gbd .TraceToDirectObject (_bfedcc .Pattern ).(*_gbd .PdfObjectDictionary );if !_gbbcb {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bfedcc .Pattern );
return nil ,false ;};if _fgbgg :=_dedfc .Get (keyName );_fgbgg !=nil {_ggcgd ,_gbbee :=_gbagf (_fgbgg );if _gbbee !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gbbee );
return nil ,false ;};return _ggcgd ,true ;};return nil ,false ;};func (_abd *PdfReader )newPdfAnnotationScreenFromDict (_bfaf *_gbd .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bfedc :=PdfAnnotationScreen {};_bfedc .T =_bfaf .Get ("\u0054");_bfedc .MK =_bfaf .Get ("\u004d\u004b");
_bfedc .A =_bfaf .Get ("\u0041");_bfedc .AA =_bfaf .Get ("\u0041\u0041");return &_bfedc ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_gbd .PdfObjectInteger ;BitsPerComponent *_gbd .PdfObjectInteger ;BitsPerFlag *_gbd .PdfObjectInteger ;Decode *_gbd .PdfObjectArray ;Function []PdfFunction ;};

// AddImageResource adds an image to the XObject resources.
func (_edbc *PdfPage )AddImageResource (name _gbd .PdfObjectName ,ximg *XObjectImage )error {var _abbb *_gbd .PdfObjectDictionary ;if _edbc .Resources .XObject ==nil {_abbb =_gbd .MakeDict ();_edbc .Resources .XObject =_abbb ;}else {var _afgda bool ;_abbb ,_afgda =(_edbc .Resources .XObject ).(*_gbd .PdfObjectDictionary );
if !_afgda {return _ff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_abbb .Set (name ,ximg .ToPdfObject ());return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_dab *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_facg :=vals [0];if _facg < 0.0||_facg > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eafg :=vals [1];if _eafg < 0.0||_eafg > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbea :=vals [2];if _cbea < 0.0||_cbea > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dcbdc :=NewPdfColorCalRGB (_facg ,_eafg ,_cbea );return _dcbdc ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dbaa *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cddb ,_bccb :=color .(*PdfColorCalRGB );if !_bccb {_db .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aeaff :=_cddb .A ();_beeac :=_cddb .B ();_acae :=_cddb .C ();X :=_dbaa .Matrix [0]*_ga .Pow (_aeaff ,_dbaa .Gamma [0])+_dbaa .Matrix [3]*_ga .Pow (_beeac ,_dbaa .Gamma [1])+_dbaa .Matrix [6]*_ga .Pow (_acae ,_dbaa .Gamma [2]);
Y :=_dbaa .Matrix [1]*_ga .Pow (_aeaff ,_dbaa .Gamma [0])+_dbaa .Matrix [4]*_ga .Pow (_beeac ,_dbaa .Gamma [1])+_dbaa .Matrix [7]*_ga .Pow (_acae ,_dbaa .Gamma [2]);Z :=_dbaa .Matrix [2]*_ga .Pow (_aeaff ,_dbaa .Gamma [0])+_dbaa .Matrix [5]*_ga .Pow (_beeac ,_dbaa .Gamma [1])+_dbaa .Matrix [8]*_ga .Pow (_acae ,_dbaa .Gamma [2]);
_eedc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gdda :=-0.969256*X +1.875992*Y +0.041556*Z ;_addce :=0.055648*X +-0.204043*Y +1.057311*Z ;_eedc =_ga .Min (_ga .Max (_eedc ,0),1.0);_gdda =_ga .Min (_ga .Max (_gdda ,0),1.0);_addce =_ga .Min (_ga .Max (_addce ,0),1.0);
return NewPdfColorDeviceRGB (_eedc ,_gdda ,_addce ),nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_gafe *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_gafe .Base .GetNumComponents ();if N < 1{return Image {},_a .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_abfab :=_ed .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._fafca ,img ._dadd );_ggbb :=_de .NewReader (img .getBase ());_ffee :=_de .NewWriter (_abfab );var (_aged uint32 ;_gcdb int ;_decg error ;);for {_aged ,_decg =_ggbb .ReadSample ();
if _decg ==_acga .EOF {break ;}else if _decg !=nil {return img ,_decg ;};_gcdb =int (_aged );_db .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gcdb ,N ,len (_gafe ._edafc ));
if (_gcdb +1)*N > len (_gafe ._edafc ){_gcdb =len (_gafe ._edafc )/N -1;_db .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gcdb );if _gcdb < 0{_db .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _bfga :=_gcdb *N ;_bfga < (_gcdb +1)*N ;_bfga ++{if _decg =_ffee .WriteSample (uint32 (_gafe ._edafc [_bfga ]));_decg !=nil {return img ,_decg ;};};};return _gafe .Base .ImageToRGB (_cagfg (&_abfab ));};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_ebbgg *XObjectImage )GetContainingPdfObject ()_gbd .PdfObject {return _ebbgg ._dcaea };func (_egcbe *pdfFontSimple )baseFields ()*fontCommon {return &_egcbe .fontCommon };

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_ffde *PdfShading )GetContainingPdfObject ()_gbd .PdfObject {return _ffde ._baae };

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_gbdg *PdfAnnotation )ToPdfObject ()_gbd .PdfObject {_dge :=_gbdg ._faa ;_bdef :=_dge .PdfObject .(*_gbd .PdfObjectDictionary );_bdef .Clear ();_bdef .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0041\u006e\u006eo\u0074"));_bdef .SetIfNotNil ("\u0052\u0065\u0063\u0074",_gbdg .Rect );
_bdef .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gbdg .Contents );_bdef .SetIfNotNil ("\u0050",_gbdg .P );_bdef .SetIfNotNil ("\u004e\u004d",_gbdg .NM );_bdef .SetIfNotNil ("\u004d",_gbdg .M );_bdef .SetIfNotNil ("\u0046",_gbdg .F );
_bdef .SetIfNotNil ("\u0041\u0050",_gbdg .AP );_bdef .SetIfNotNil ("\u0041\u0053",_gbdg .AS );_bdef .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_gbdg .Border );_bdef .SetIfNotNil ("\u0043",_gbdg .C );_bdef .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gbdg .StructParent );
_bdef .SetIfNotNil ("\u004f\u0043",_gbdg .OC );return _dge ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_aaae *PdfColorspaceDeviceN )GetNumComponents ()int {return _aaae .ColorantNames .Len ()};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_abda :=NewPdfOutline ();_abda ._aagcd =&_abda ;return _abda };

// GetNumComponents returns the number of color components (1 for Separation).
func (_dccfd *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eafd *PdfPageResources )SetColorspaceByName (keyName _gbd .PdfObjectName ,cs PdfColorspace )error {_ggadc ,_gddgf :=_eafd .GetColorspaces ();if _gddgf !=nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gddgf );
return _gddgf ;};if _ggadc ==nil {_ggadc =NewPdfPageResourcesColorspaces ();_eafd .SetColorSpace (_ggadc );};_ggadc .Set (keyName ,cs );return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ddbf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ddbf .NumInputs {_db .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ddbf ._gace ==nil {_beac :=_ddbf .processSamples ();if _beac !=nil {return nil ,_beac ;};};_gadb :=_ddbf .Encode ;if _gadb ==nil {_gadb =[]float64 {};
for _gcgdce :=0;_gcgdce < len (_ddbf .Size );_gcgdce ++{_gadb =append (_gadb ,0);_gadb =append (_gadb ,float64 (_ddbf .Size [_gcgdce ]-1));};};_fddf :=_ddbf .Decode ;if _fddf ==nil {_fddf =_ddbf .Range ;};_bgad :=make ([]int ,len (x ));for _ebcad :=0;_ebcad < len (x );
_ebcad ++{_cbae :=x [_ebcad ];_bbfbe :=_ga .Min (_ga .Max (_cbae ,_ddbf .Domain [2*_ebcad ]),_ddbf .Domain [2*_ebcad +1]);_ffeg :=_ed .LinearInterpolate (_bbfbe ,_ddbf .Domain [2*_ebcad ],_ddbf .Domain [2*_ebcad +1],_gadb [2*_ebcad ],_gadb [2*_ebcad +1]);
_ebfd :=_ga .Min (_ga .Max (_ffeg ,0),float64 (_ddbf .Size [_ebcad ]-1));_cdagc :=int (_ga .Floor (_ebfd +0.5));if _cdagc < 0{_cdagc =0;}else if _cdagc > _ddbf .Size [_ebcad ]{_cdagc =_ddbf .Size [_ebcad ]-1;};_bgad [_ebcad ]=_cdagc ;};_eabdc :=_bgad [0];
for _fefgge :=1;_fefgge < _ddbf .NumInputs ;_fefgge ++{_ceagf :=_bgad [_fefgge ];for _egaecf :=0;_egaecf < _fefgge ;_egaecf ++{_ceagf *=_ddbf .Size [_egaecf ];};_eabdc +=_ceagf ;};_eabdc *=_ddbf .NumOutputs ;var _aded []float64 ;for _aagdd :=0;_aagdd < _ddbf .NumOutputs ;
_aagdd ++{_cfafe :=_eabdc +_aagdd ;if _cfafe >=len (_ddbf ._gace ){_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_afcd :=_ddbf ._gace [_cfafe ];_gcdc :=_ed .LinearInterpolate (float64 (_afcd ),0,_ga .Pow (2,float64 (_ddbf .BitsPerSample )),_fddf [2*_aagdd ],_fddf [2*_aagdd +1]);_fabg :=_ga .Min (_ga .Max (_gcdc ,_ddbf .Range [2*_aagdd ]),_ddbf .Range [2*_aagdd +1]);
_aded =append (_aded ,_fabg );};return _aded ,nil ;};func _dagc (_dcdf _gbd .PdfObject )(*_gbd .PdfObjectDictionary ,*fontCommon ,error ){_dgeg :=&fontCommon {};if _ddbce ,_gfbb :=_dcdf .(*_gbd .PdfIndirectObject );_gfbb {_dgeg ._aafba =_ddbce .ObjectNumber ;
};_badfa ,_afdbf :=_gbd .GetDict (_dcdf );if !_afdbf {_db .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dcdf );
return nil ,nil ,ErrFontNotSupported ;};_dgdbg ,_afdbf :=_gbd .GetNameVal (_badfa .Get ("\u0054\u0079\u0070\u0065"));if !_afdbf {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _dgdbg !="\u0046\u006f\u006e\u0074"{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_dgdbg ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_gbd .ErrTypeError ;};_dfbf ,_afdbf :=_gbd .GetNameVal (_badfa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_afdbf {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dgeg ._bbecf =_dfbf ;_gcdec ,_afdbf :=_gbd .GetNameVal (_badfa .Get ("\u004e\u0061\u006d\u0065"));if _afdbf {_dgeg ._ffbcd =_gcdec ;};_ffda :=_badfa .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");
if _ffda !=nil {_dgeg ._ecbc =_gbd .TraceToDirectObject (_ffda );_cdfcf ,_ffdc :=_gfcca (_dgeg ._ecbc ,_dgeg );if _ffdc !=nil {return _badfa ,_dgeg ,_ffdc ;};_dgeg ._agcgb =_cdfcf ;}else if _dfbf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_dfbf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gbbb ,_begd :=_bgg .NewCIDSystemInfo (_badfa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _begd !=nil {return _badfa ,_dgeg ,_begd ;};_feff :=_a .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gbbb .Registry ,_gbbb .Ordering );if _bgg .IsPredefinedCMap (_feff ){_dgeg ._agcgb ,_begd =_bgg .LoadPredefinedCMap (_feff );
if _begd !=nil {_db .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_feff ,_begd );
};};};_efaf :=_badfa .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _efaf !=nil {_afea ,_aabb :=_gfdg (_efaf );if _aabb !=nil {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aabb );
return _badfa ,_dgeg ,_aabb ;};_dgeg ._ggff =_afea ;};if _dfbf !="\u0054\u0079\u0070e\u0033"{_agfa ,_bfbe :=_gbd .GetNameVal (_badfa .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bfbe {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _badfa ,_dgeg ,ErrRequiredAttributeMissing ;};_dgeg ._dgcff =_agfa ;};return _badfa ,_dgeg ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gebeae *PdfReader )PageFromIndirectObject (ind *_gbd .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gebeae .PageList )!=len (_gebeae ._dfgeb ){return nil ,0,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _fgegac ,_bdcdb :=range _gebeae ._dfgeb {if _bdcdb ==ind {return _gebeae .PageList [_fgegac ],_fgegac +1,nil ;};};return nil ,0,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_bedg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// ToPdfObject returns the PDF representation of the function.
func (_gcdba *PdfFunctionType3 )ToPdfObject ()_gbd .PdfObject {_cgade :=_gbd .MakeDict ();_cgade .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gbd .MakeInteger (3));_gdddd :=&_gbd .PdfObjectArray {};for _ ,_gabe :=range _gcdba .Domain {_gdddd .Append (_gbd .MakeFloat (_gabe ));
};_cgade .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdddd );if _gcdba .Range !=nil {_fddfg :=&_gbd .PdfObjectArray {};for _ ,_bcgag :=range _gcdba .Range {_fddfg .Append (_gbd .MakeFloat (_bcgag ));};_cgade .Set ("\u0052\u0061\u006eg\u0065",_fddfg );
};if _gcdba .Functions !=nil {_bgacb :=&_gbd .PdfObjectArray {};for _ ,_acfda :=range _gcdba .Functions {_bgacb .Append (_acfda .ToPdfObject ());};_cgade .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bgacb );};if _gcdba .Bounds !=nil {_eaecc :=&_gbd .PdfObjectArray {};
for _ ,_fdedg :=range _gcdba .Bounds {_eaecc .Append (_gbd .MakeFloat (_fdedg ));};_cgade .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_eaecc );};if _gcdba .Encode !=nil {_degged :=&_gbd .PdfObjectArray {};for _ ,_cfbb :=range _gcdba .Encode {_degged .Append (_gbd .MakeFloat (_cfbb ));
};_cgade .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_degged );};if _gcdba ._dgcdg !=nil {_gcdba ._dgcdg .PdfObject =_cgade ;return _gcdba ._dgcdg ;};return _cgade ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfeff *PdfShadingType5 )ToPdfObject ()_gbd .PdfObject {_gfeff .PdfShading .ToPdfObject ();_bdcda ,_bgcgb :=_gfeff .getShadingDict ();if _bgcgb !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gfeff .BitsPerCoordinate !=nil {_bdcda .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gfeff .BitsPerCoordinate );};if _gfeff .BitsPerComponent !=nil {_bdcda .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gfeff .BitsPerComponent );
};if _gfeff .VerticesPerRow !=nil {_bdcda .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_gfeff .VerticesPerRow );};if _gfeff .Decode !=nil {_bdcda .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gfeff .Decode );};
if _gfeff .Function !=nil {if len (_gfeff .Function )==1{_bdcda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfeff .Function [0].ToPdfObject ());}else {_fabbaee :=_gbd .MakeArray ();for _ ,_ddbbg :=range _gfeff .Function {_fabbaee .Append (_ddbbg .ToPdfObject ());
};_bdcda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fabbaee );};};return _gfeff ._baae ;};func (_bafe *PdfReader )newPdfAnnotationLinkFromDict (_ced *_gbd .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_ebd :=PdfAnnotationLink {};_ebd .A =_ced .Get ("\u0041");
_ebd .Dest =_ced .Get ("\u0044\u0065\u0073\u0074");_ebd .H =_ced .Get ("\u0048");_ebd .PA =_ced .Get ("\u0050\u0041");_ebd .QuadPoints =_ced .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_ebd .BS =_ced .Get ("\u0042\u0053");return &_ebd ,nil ;
};func (_bege *PdfWriter )addObject (_feed _gbd .PdfObject )bool {_gdcce :=_bege .hasObject (_feed );if !_gdcce {_gfgad :=_gbd .ResolveReferencesDeep (_feed ,_bege ._dfade );if _gfgad !=nil {_db .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gfgad );
};_bege ._fbafa =append (_bege ._fbafa ,_feed );_bege ._bdgga [_feed ]=struct{}{};return true ;};return false ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ddfgf *PdfPage )GetContentStreamObjs ()[]_gbd .PdfObject {if _ddfgf .Contents ==nil {return nil ;};_cbge :=_gbd .TraceToDirectObject (_ddfgf .Contents );if _gcgge ,_gafd :=_cbge .(*_gbd .PdfObjectArray );_gafd {return _gcgge .Elements ();};return []_gbd .PdfObject {_cbge };
};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _gbd .PdfObject ;NewWindow _gbd .PdfObject ;T _gbd .PdfObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_bge :=NewPdfAnnotation ();_gecd :=&PdfAnnotationStrikeOut {};_gecd .PdfAnnotation =_bge ;_gecd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bge .SetContext (_gecd );return _gecd ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _gbd .PdfObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gbfcd *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_db .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fbcbb :=[]float64 {0.0};if _gbfcd .C0 !=nil {_fbcbb =_gbfcd .C0 ;};_abagg :=[]float64 {1.0};if _gbfcd .C1 !=nil {_abagg =_gbfcd .C1 ;};var _degc []float64 ;for _cdece :=0;_cdece < len (_fbcbb );_cdece ++{_fcadg :=_fbcbb [_cdece ]+_ga .Pow (x [0],_gbfcd .N )*(_abagg [_cdece ]-_fbcbb [_cdece ]);
_degc =append (_degc ,_fcadg );};return _degc ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_fcad *PdfFont )ToPdfObject ()_gbd .PdfObject {if _fcad ._bbddd ==nil {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _gbd .MakeNull ();
};return _fcad ._bbddd .ToPdfObject ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_afga *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_afga .Base .GetNumComponents ();_ada :=int (vals [0])*N ;
if _ada < 0||(_ada +N -1)>=len (_afga ._edafc ){return nil ,_ff .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_ecccd :=_afga ._edafc [_ada :_ada +N ];var _ggfb []float64 ;for _ ,_dacf :=range _ecccd {_ggfb =append (_ggfb ,float64 (_dacf )/255.0);
};_bgac ,_ffbfd :=_afga .Base .ColorFromFloats (_ggfb );if _ffbfd !=nil {return nil ,_ffbfd ;};return _bgac ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_fdddcd *PdfDate )ToPdfObject ()_gbd .PdfObject {_egcbff :=_a .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fdddcd ._cbggb ,_fdddcd ._bcgdc ,_fdddcd ._dddf ,_fdddcd ._baec ,_fdddcd ._becfe ,_fdddcd ._edcee ,_fdddcd ._acecf ,_fdddcd ._cdeag ,_fdddcd ._ebaed );
return _gbd .MakeString (_egcbff );};func (_cbfa *PdfReader )newPdfAnnotationMovieFromDict (_cfg *_gbd .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ggbf :=PdfAnnotationMovie {};_ggbf .T =_cfg .Get ("\u0054");_ggbf .Movie =_cfg .Get ("\u004d\u006f\u0076i\u0065");
_ggbf .A =_cfg .Get ("\u0041");return &_ggbf ,nil ;};func _dcagd (_ccgde []*_gbd .PdfObjectStream )*_gbd .PdfObjectArray {if len (_ccgde )==0{return nil ;};_fbea :=make ([]_gbd .PdfObject ,0,len (_ccgde ));for _ ,_dagea :=range _ccgde {_fbea =append (_fbea ,_dagea );
};return _gbd .MakeArray (_fbea ...);};

// StdFontName represents name of a standard font.
type StdFontName =_fad .StdFontName ;

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ggee *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_gagff *PdfWriter )hasObject (_gfbeb _gbd .PdfObject )bool {_ ,_dcbage :=_gagff ._bdgga [_gfbeb ];return _dcbage ;};func _cdceb (_eefda string )(map[_dc .CharCode ]_dc .GlyphName ,error ){_fcfa :=_fc .Split (_eefda ,"\u000a");
_dbffa :=make (map[_dc .CharCode ]_dc .GlyphName );for _ ,_cfged :=range _fcfa {_gddgc :=_cbgd .FindStringSubmatch (_cfged );if _gddgc ==nil {continue ;};_fgfb ,_ggfbb :=_gddgc [1],_gddgc [2];_efcc ,_gcbgg :=_bg .Atoi (_fgfb );if _gcbgg !=nil {_db .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_cfged );
return nil ,_gbd .ErrTypeError ;};_dbffa [_dc .CharCode (_efcc )]=_dc .GlyphName (_ggfbb );};_db .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_dbffa );
return _dbffa ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_baad *pdfFontSimple )SetEncoder (encoder _dc .TextEncoder ){_baad ._cfeea =encoder };var (CourierName =_fad .CourierName ;CourierBoldName =_fad .CourierBoldName ;CourierObliqueName =_fad .CourierObliqueName ;CourierBoldObliqueName =_fad .CourierBoldObliqueName ;
HelveticaName =_fad .HelveticaName ;HelveticaBoldName =_fad .HelveticaBoldName ;HelveticaObliqueName =_fad .HelveticaObliqueName ;HelveticaBoldObliqueName =_fad .HelveticaBoldObliqueName ;SymbolName =_fad .SymbolName ;ZapfDingbatsName =_fad .ZapfDingbatsName ;
TimesRomanName =_fad .TimesRomanName ;TimesBoldName =_fad .TimesBoldName ;TimesItalicName =_fad .TimesItalicName ;TimesBoldItalicName =_fad .TimesBoldItalicName ;);

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_affec *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _gbd .GetNumberAsFloat (_affec .CapHeight );};

// ToPdfObject returns the PDF representation of the function.
func (_edcde *PdfFunctionType0 )ToPdfObject ()_gbd .PdfObject {if _edcde ._efeac ==nil {_edcde ._efeac =&_gbd .PdfObjectStream {};};_edcfb :=_gbd .MakeDict ();_edcfb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gbd .MakeInteger (0));
_bcbgb :=&_gbd .PdfObjectArray {};for _ ,_bede :=range _edcde .Domain {_bcbgb .Append (_gbd .MakeFloat (_bede ));};_edcfb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bcbgb );_cgecg :=&_gbd .PdfObjectArray {};for _ ,_faeff :=range _edcde .Range {_cgecg .Append (_gbd .MakeFloat (_faeff ));
};_edcfb .Set ("\u0052\u0061\u006eg\u0065",_cgecg );_fbbb :=&_gbd .PdfObjectArray {};for _ ,_cgfgc :=range _edcde .Size {_fbbb .Append (_gbd .MakeInteger (int64 (_cgfgc )));};_edcfb .Set ("\u0053\u0069\u007a\u0065",_fbbb );_edcfb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_gbd .MakeInteger (int64 (_edcde .BitsPerSample )));
if _edcde .Order !=1{_edcfb .Set ("\u004f\u0072\u0064e\u0072",_gbd .MakeInteger (int64 (_edcde .Order )));};_edcfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_edcde ._facac ))));_edcde ._efeac .Stream =_edcde ._facac ;_edcde ._efeac .PdfObjectDictionary =_edcfb ;
return _edcde ._efeac ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_beaade *modelManager )GetModelFromPrimitive (primitive _gbd .PdfObject )PdfModel {model ,_cgfd :=_beaade ._fage [primitive ];if !_cgfd {return nil ;};return model ;};

// ToPdfObject implements interface PdfModel.
func (_cbcg *PdfAnnotationCaret )ToPdfObject ()_gbd .PdfObject {_cbcg .PdfAnnotation .ToPdfObject ();_dce :=_cbcg ._faa ;_efca :=_dce .PdfObject .(*_gbd .PdfObjectDictionary );_cbcg .PdfAnnotationMarkup .appendToPdfDictionary (_efca );_efca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0043\u0061\u0072e\u0074"));
_efca .SetIfNotNil ("\u0052\u0044",_cbcg .RD );_efca .SetIfNotNil ("\u0053\u0079",_cbcg .Sy );return _dce ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_efcbe *Image )ConvertToBinary ()error {if _efcbe .ColorComponents ==1&&_efcbe .BitsPerComponent ==1{return nil ;};_feeef ,_bbbf :=_efcbe .ToGoImage ();if _bbbf !=nil {return _bbbf ;};_adfdd ,_bbbf :=_ed .MonochromeConverter .Convert (_feeef );if _bbbf !=nil {return _bbbf ;
};_efcbe .Data =_adfdd .Base ().Data ;_efcbe ._fafca ,_bbbf =_ed .ScaleAlphaToMonochrome (_efcbe ._fafca ,int (_efcbe .Width ),int (_efcbe .Height ));if _bbbf !=nil {return _bbbf ;};_efcbe .BitsPerComponent =1;_efcbe .ColorComponents =1;_efcbe ._dadd =nil ;
return nil ;};func (_aabge *PdfReader )newPdfAnnotationWidgetFromDict (_ecgb *_gbd .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gccb :=PdfAnnotationWidget {};_gccb .H =_ecgb .Get ("\u0048");_gccb .MK =_ecgb .Get ("\u004d\u004b");_gccb .A =_ecgb .Get ("\u0041");
_gccb .AA =_ecgb .Get ("\u0041\u0041");_gccb .BS =_ecgb .Get ("\u0042\u0053");_gccb .Parent =_ecgb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_gccb ,nil ;};func _gegc (_fgcc _gbd .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dedf :=NewPdfColorspaceSpecialSeparation ();
if _cfgfe ,_fcbde :=_fgcc .(*_gbd .PdfIndirectObject );_fcbde {_dedf ._gfec =_cfgfe ;};_fgcc =_gbd .TraceToDirectObject (_fgcc );_gfeb ,_bbd :=_fgcc .(*_gbd .PdfObjectArray );if !_bbd {return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gfeb .Len ()!=4{return nil ,_a .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fgcc =_gfeb .Get (0);
_dcef ,_bbd :=_fgcc .(*_gbd .PdfObjectName );if !_bbd {return nil ,_a .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dcef !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_a .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_fgcc =_gfeb .Get (1);_dcef ,_bbd =_fgcc .(*_gbd .PdfObjectName );if !_bbd {return nil ,_a .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dedf .ColorantName =_dcef ;_fgcc =_gfeb .Get (2);_gbfd ,_edbg :=NewPdfColorspaceFromPdfObject (_fgcc );if _edbg !=nil {return nil ,_edbg ;};_dedf .AlternateSpace =_gbfd ;_baeg ,_edbg :=_dbege (_gfeb .Get (3));if _edbg !=nil {return nil ,_edbg ;};_dedf .TintTransform =_baeg ;
return _dedf ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// String implements interface PdfObject.
func (_bab *PdfAction )String ()string {_bee ,_bae :=_bab .ToPdfObject ().(*_gbd .PdfIndirectObject );if _bae {return _a .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bab ._ca ,_bee .PdfObject .String ());};return "";};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_babcf :=PdfDate {};_fdgfb :=_becbe .FindAllStringSubmatch (dateStr ,1);if len (_fdgfb )< 1{return _babcf ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_fdgfb [0])!=10{return _babcf ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_babcf ._cbggb ,_ =_bg .ParseInt (_fdgfb [0][1],10,32);_babcf ._bcgdc ,_ =_bg .ParseInt (_fdgfb [0][2],10,32);_babcf ._dddf ,_ =_bg .ParseInt (_fdgfb [0][3],10,32);_babcf ._baec ,_ =_bg .ParseInt (_fdgfb [0][4],10,32);_babcf ._becfe ,_ =_bg .ParseInt (_fdgfb [0][5],10,32);
_babcf ._edcee ,_ =_bg .ParseInt (_fdgfb [0][6],10,32);if len (_fdgfb [0][7])> 0{_babcf ._acecf =_fdgfb [0][7][0];}else {_babcf ._acecf ='+';};if len (_fdgfb [0][8])> 0{_babcf ._cdeag ,_ =_bg .ParseInt (_fdgfb [0][8],10,32);}else {_babcf ._cdeag =0;};if len (_fdgfb [0][9])> 0{_babcf ._ebaed ,_ =_bg .ParseInt (_fdgfb [0][9],10,32);
}else {_babcf ._ebaed =0;};return _babcf ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_bfagf PdfDate )ToGoTime ()_bd .Time {_afggd :=int (_bfagf ._cdeag *60*60+_bfagf ._ebaed *60);switch _bfagf ._acecf {case '-':_afggd =-_afggd ;case 'Z':_afggd =0;};_ccgb :=_a .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_bfagf ._acecf ,_bfagf ._cdeag ,_bfagf ._ebaed );
_dgeag :=_bd .FixedZone (_ccgb ,_afggd );return _bd .Date (int (_bfagf ._cbggb ),_bd .Month (_bfagf ._bcgdc ),int (_bfagf ._dddf ),int (_bfagf ._baec ),int (_bfagf ._becfe ),int (_bfagf ._edcee ),0,_dgeag );};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_gfggg :=&PdfSignature {Type :_gbd .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fcda :=&pdfSignDictionary {PdfObjectDictionary :_gbd .MakeDict (),_adced :&handler ,_bgffc :_gfggg };
_gfggg ._eebcgfe =_gbd .MakeIndirectObject (_fcda );return _gfggg ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_aggea *PdfPageResources )AddExtGState (gsName _gbd .PdfObjectName ,gsDict _gbd .PdfObject )error {if _aggea .ExtGState ==nil {_aggea .ExtGState =_gbd .MakeDict ();};_gfagc :=_aggea .ExtGState ;_cdef ,_aege :=_gbd .TraceToDirectObject (_gfagc ).(*_gbd .PdfObjectDictionary );
if !_aege {_db .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gfagc ,_gbd .TraceToDirectObject (_gfagc ));
return _gbd .ErrTypeError ;};_cdef .Set (gsName ,gsDict );return nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fgaaf *PdfReader )GetPageLabels ()(_gbd .PdfObject ,error ){_eeagg :=_gbd .ResolveReference (_fgaaf ._dccge .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _eeagg ==nil {return nil ,nil ;};if !_fgaaf ._adaag {_cgfbg :=_fgaaf .traverseObjectData (_eeagg );
if _cgfbg !=nil {return nil ,_cgfbg ;};};return _eeagg ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ec .File ,error ){const _fffcb ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_abeg ,_gddga :=_ec .Open (pdfFile );if _gddga !=nil {return nil ,nil ,_gddga ;};_gcdead ,_gddga :=_eddf (_abeg ,opts ,true ,_fffcb );if _gddga !=nil {_abeg .Close ();return nil ,nil ,_gddga ;};return _gcdead ,_abeg ,nil ;};func (_fbgg fontCommon )coreString ()string {_cgac :="";
if _fbgg ._ggff !=nil {_cgac =_fbgg ._ggff .String ();};return _a .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fbgg ._bbecf ,_fbgg ._dgcff ,_fbgg ._ffbcd ,_fbgg ._aafba ,_fbgg ._ecbc !=nil ,_fbgg .fontFlags (),_cgac );
};func _cgaga (_fgfe *_gbd .PdfObjectDictionary ,_agcfg *fontCommon )(*pdfCIDFontType2 ,error ){if _agcfg ._bbecf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_db .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_agcfg );
return nil ,_gbd .ErrRangeError ;};_gfbf :=_efeb (_agcfg );_ggade ,_afbdb :=_gbd .GetDict (_fgfe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_afbdb {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_agcfg );
return nil ,ErrRequiredAttributeMissing ;};_gfbf .CIDSystemInfo =_ggade ;_gfbf .DW =_fgfe .Get ("\u0044\u0057");_gfbf .W =_fgfe .Get ("\u0057");_gfbf .DW2 =_fgfe .Get ("\u0044\u0057\u0032");_gfbf .W2 =_fgfe .Get ("\u0057\u0032");_gfbf .CIDToGIDMap =_fgfe .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gfbf ._fcaca =1000.0;if _begg ,_efdc :=_gbd .GetNumberAsFloat (_gfbf .DW );_efdc ==nil {_gfbf ._fcaca =_begg ;};_fgeg ,_eeada :=_dbdg (_gfbf .W );if _eeada !=nil {return nil ,_eeada ;};if _fgeg ==nil {_fgeg =map[_dc .CharCode ]float64 {};};_gfbf ._dfbga =_fgeg ;
return _gfbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efcf *PdfActionGoTo3DView )ToPdfObject ()_gbd .PdfObject {_efcf .PdfAction .ToPdfObject ();_gac :=_efcf ._ef ;_fga :=_gac .PdfObject .(*_gbd .PdfObjectDictionary );_fga .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeGoTo3DView )));_fga .SetIfNotNil ("\u0054\u0041",_efcf .TA );
_fga .SetIfNotNil ("\u0056",_efcf .V );return _gac ;};

// SetReason sets the `Reason` field of the signature.
func (_abbed *PdfSignature )SetReason (reason string ){_abbed .Reason =_gbd .MakeString (reason )};

// ToPdfObject implements interface PdfModel.
func (_eec *PdfActionMovie )ToPdfObject ()_gbd .PdfObject {_eec .PdfAction .ToPdfObject ();_bgd :=_eec ._ef ;_fadb :=_bgd .PdfObject .(*_gbd .PdfObjectDictionary );_fadb .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeMovie )));_fadb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_eec .Annotation );
_fadb .SetIfNotNil ("\u0054",_eec .T );_fadb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_eec .Operation );return _bgd ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_aade *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _aade .MediaBox !=nil {return _aade .MediaBox ,nil ;};_cacde :=_aade .Parent ;for _cacde !=nil {_fgcgg ,_fagfc :=_gbd .GetDict (_cacde );if !_fagfc {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _aegg :=_fgcgg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_aegg !=nil {_gcgba ,_bffd :=_gbd .GetArray (_aegg );if !_bffd {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_bdeda ,_cbcb :=NewPdfRectangle (*_gcgba );if _cbcb !=nil {return nil ,_cbcb ;};return _bdeda ,nil ;};_cacde =_fgcgg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ff .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// Initialize initializes the PdfSignature.
func (_ddgbe *PdfSignature )Initialize ()error {if _ddgbe .Handler ==nil {return _ff .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _ddgbe .Handler .InitSignature (_ddgbe );};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_ebdfa *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _ebdfa ._gffb .(*PdfTilingPattern );};

// ToPdfObject returns the PDF representation of the function.
func (_gdbba *PdfFunctionType4 )ToPdfObject ()_gbd .PdfObject {_ddafd :=_gdbba ._eebd ;if _ddafd ==nil {_gdbba ._eebd =&_gbd .PdfObjectStream {};_ddafd =_gdbba ._eebd ;};_aaee :=_gbd .MakeDict ();_aaee .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gbd .MakeInteger (4));
_accg :=&_gbd .PdfObjectArray {};for _ ,_ddged :=range _gdbba .Domain {_accg .Append (_gbd .MakeFloat (_ddged ));};_aaee .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_accg );_afdg :=&_gbd .PdfObjectArray {};for _ ,_gbge :=range _gdbba .Range {_afdg .Append (_gbd .MakeFloat (_gbge ));
};_aaee .Set ("\u0052\u0061\u006eg\u0065",_afdg );if _gdbba ._gdcd ==nil &&_gdbba .Program !=nil {_gdbba ._gdcd =[]byte (_gdbba .Program .String ());};_aaee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gbd .MakeInteger (int64 (len (_gdbba ._gdcd ))));
_ddafd .Stream =_gdbba ._gdcd ;_ddafd .PdfObjectDictionary =_aaee ;return _ddafd ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_cga *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_gbd .PdfObjectArray ;_gcbb *Image ;};func (_afdbb *PdfFont )baseFields ()*fontCommon {if _afdbb ._bbddd ==nil {_db .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _afdbb ._bbddd .baseFields ();};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_baee FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_baee .Mask ()&^fl .Mask ())};type pdfFontSimple struct{fontCommon ;_dgade *_gbd .PdfIndirectObject ;_fgaa map[_dc .CharCode ]float64 ;_cfeea _dc .TextEncoder ;_dgaa _dc .TextEncoder ;
_accbg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _gbd .PdfObject ;LastChar _gbd .PdfObject ;Widths _gbd .PdfObject ;Encoding _gbd .PdfObject ;_ecfeb *_fad .RuneCharSafeMap ;};

// ToPdfObject implements interface PdfModel.
func (_ecfg *PdfAnnotationRichMedia )ToPdfObject ()_gbd .PdfObject {_ecfg .PdfAnnotation .ToPdfObject ();_bdgc :=_ecfg ._faa ;_gdg :=_bdgc .PdfObject .(*_gbd .PdfObjectDictionary );_gdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_gdg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_ecfg .RichMediaSettings );_gdg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_ecfg .RichMediaContent );
return _bdgc ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_gbd .PdfObjectDictionary )(*PdfPageResources ,error ){_gcgce :=NewPdfPageResources ();if _ggdbf :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ggdbf !=nil {_gcgce .ExtGState =_ggdbf ;};if _ecdd :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_ecdd !=nil &&!_gbd .IsNullObject (_ecdd ){_gcgce .ColorSpace =_ecdd ;};if _ecfeg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_ecfeg !=nil {_gcgce .Pattern =_ecfeg ;};if _dgec :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_dgec !=nil {_gcgce .Shading =_dgec ;
};if _cddd :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cddd !=nil {_gcgce .XObject =_cddd ;};if _faae :=_gbd .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_faae !=nil {_gcgce .Font =_faae ;};if _ggefa :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_ggefa !=nil {_gcgce .ProcSet =_ggefa ;};if _eafab :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_eafab !=nil {_gcgce .Properties =_eafab ;};return _gcgce ,nil ;};

// IsColored specifies if the pattern is colored.
func (_gcaa *PdfTilingPattern )IsColored ()bool {if _gcaa .PaintType !=nil &&*_gcaa .PaintType ==1{return true ;};return false ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_adefd .Lock ();defer _adefd .Unlock ();_efef =producer };

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_efbg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _efbg .UnderlyingCS .GetNumComponents ();};func (_ddae *PdfReader )loadAction (_abad _gbd .PdfObject )(*PdfAction ,error ){if _abag ,_ebdf :=_gbd .GetIndirect (_abad );_ebdf {_bcfdf ,_gcge :=_ddae .newPdfActionFromIndirectObject (_abag );
if _gcge !=nil {return nil ,_gcge ;};return _bcfdf ,nil ;}else if !_gbd .IsNullObject (_abad ){return nil ,_ff .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_geae *PdfAnnotationLink )ToPdfObject ()_gbd .PdfObject {_geae .PdfAnnotation .ToPdfObject ();_gcgd :=_geae ._faa ;_fde :=_gcgd .PdfObject .(*_gbd .PdfObjectDictionary );_fde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u004c\u0069\u006e\u006b"));
if _geae ._geed !=nil &&_geae ._geed ._ca !=nil {_fde .Set ("\u0041",_geae ._geed ._ca .ToPdfObject ());}else if _geae .A !=nil {_fde .Set ("\u0041",_geae .A );};_fde .SetIfNotNil ("\u0044\u0065\u0073\u0074",_geae .Dest );_fde .SetIfNotNil ("\u0048",_geae .H );
_fde .SetIfNotNil ("\u0050\u0041",_geae .PA );_fde .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geae .QuadPoints );_fde .SetIfNotNil ("\u0042\u0053",_geae .BS );return _gcgd ;};func _ecgc ()_bd .Time {_adefd .Lock ();defer _adefd .Unlock ();
return _cddg };func (_adfd *pdfFontType0 )subsetRegistered ()error {_ecad ,_gccf :=_adfd .DescendantFont ._bbddd .(*pdfCIDFontType2 );if !_gccf {_db .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_adfd .DescendantFont );
return nil ;};if _ecad ==nil {return nil ;};if _ecad ._ggff ==nil {_db .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _adfd ._dfcd ==nil {_db .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gbfe ,_gccf :=_gbd .GetStream (_ecad ._ggff .FontFile2 );if !_gccf {_db .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ff .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bbfg ,_dgcd :=_gbd .DecodeStream (_gbfe );if _dgcd !=nil {_db .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dgcd );
return _dgcd ;};_gaeab ,_dgcd :=_afd .Parse (_cd .NewReader (_bbfg ));if _dgcd !=nil {_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gbfe .Stream ));
return _dgcd ;};var _cfbef []rune ;var _cdeba *_afd .Font ;switch _aeffd :=_adfd ._dfcd .(type ){case *_dc .TrueTypeFontEncoder :_cfbef =_aeffd .RegisteredRunes ();_cdeba ,_dgcd =_gaeab .SubsetKeepRunes (_cfbef );if _dgcd !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcd );
return _dgcd ;};_aeffd .SubsetRegistered ();case *_dc .IdentityEncoder :_cfbef =_aeffd .RegisteredRunes ();_cgega :=make ([]_afd .GlyphIndex ,len (_cfbef ));for _befg ,_beef :=range _cfbef {_cgega [_befg ]=_afd .GlyphIndex (_beef );};_cdeba ,_dgcd =_gaeab .SubsetKeepIndices (_cgega );
if _dgcd !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcd );return _dgcd ;};case _dc .SimpleEncoder :_bcee :=_aeffd .Charcodes ();for _ ,_fcgdg :=range _bcee {_decbf ,_edgeeg :=_aeffd .CharcodeToRune (_fcgdg );if !_edgeeg {_db .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fcgdg );
continue ;};_cfbef =append (_cfbef ,_decbf );};default:return _a .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_adfd ._dfcd );
};var _dgbe _cd .Buffer ;_dgcd =_cdeba .Write (&_dgbe );if _dgcd !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcd );return _dgcd ;};if _adfd ._agcgb !=nil {_gefg :=make (map[_bgg .CharCode ]rune ,len (_cfbef ));for _ ,_faecc :=range _cfbef {_bbca ,_adcb :=_adfd ._dfcd .RuneToCharcode (_faecc );
if !_adcb {continue ;};_gefg [_bgg .CharCode (_bbca )]=_faecc ;};_adfd ._agcgb =_bgg .NewToUnicodeCMap (_gefg );};_gbfe ,_dgcd =_gbd .MakeStream (_dgbe .Bytes (),_gbd .NewFlateEncoder ());if _dgcd !=nil {_db .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcd );
return _dgcd ;};_gbfe .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gbd .MakeInteger (int64 (_dgbe .Len ())));if _bcab ,_bdcd :=_gbd .GetStream (_ecad ._ggff .FontFile2 );_bdcd {*_bcab =*_gbfe ;}else {_ecad ._ggff .FontFile2 =_gbfe ;};_bgbgf :=_geaf ();
if len (_adfd ._dgcff )> 0{_adfd ._dgcff =_fbebb (_adfd ._dgcff ,_bgbgf );};if len (_ecad ._dgcff )> 0{_ecad ._dgcff =_fbebb (_ecad ._dgcff ,_bgbgf );};if len (_adfd ._ffbcd )> 0{_adfd ._ffbcd =_fbebb (_adfd ._ffbcd ,_bgbgf );};if _ecad ._ggff !=nil {_fbgbd ,_gdccf :=_gbd .GetName (_ecad ._ggff .FontName );
if _gdccf &&len (_fbgbd .String ())> 0{_eegfg :=_fbebb (_fbgbd .String (),_bgbgf );_ecad ._ggff .FontName =_gbd .MakeName (_eegfg );};};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ebefb *PdfShadingType3 )ToPdfObject ()_gbd .PdfObject {_ebefb .PdfShading .ToPdfObject ();_dedde ,_bdaga :=_ebefb .getShadingDict ();if _bdaga !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ebefb .Coords !=nil {_dedde .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ebefb .Coords );};if _ebefb .Domain !=nil {_dedde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebefb .Domain );};if _ebefb .Function !=nil {if len (_ebefb .Function )==1{_dedde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebefb .Function [0].ToPdfObject ());
}else {_ffebdf :=_gbd .MakeArray ();for _ ,_efged :=range _ebefb .Function {_ffebdf .Append (_efged .ToPdfObject ());};_dedde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffebdf );};};if _ebefb .Extend !=nil {_dedde .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ebefb .Extend );
};return _ebefb ._baae ;};

// ToPdfObject implements interface PdfModel.
func (_gea *PdfAction )ToPdfObject ()_gbd .PdfObject {_dea :=_gea ._ef ;_fb :=_dea .PdfObject .(*_gbd .PdfObjectDictionary );_fb .Clear ();_fb .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_fb .SetIfNotNil ("\u0053",_gea .S );
_fb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gea .Next );return _dea ;};func _gfaf (_cead _gbd .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_db .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cead .String (),_cead );
_egcdf :=NewPdfColorspaceSpecialPattern ();if _cdaf ,_dbfg :=_cead .(*_gbd .PdfIndirectObject );_dbfg {_egcdf ._ebgab =_cdaf ;};_cead =_gbd .TraceToDirectObject (_cead );if _dcadc ,_gdfgd :=_cead .(*_gbd .PdfObjectName );_gdfgd {if *_dcadc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _egcdf ,nil ;};_ccff ,_bbcdg :=_cead .(*_gbd .PdfObjectArray );if !_bbcdg {_db .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cead );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _ccff .Len ()!=1&&_ccff .Len ()!=2{_db .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_ccff );
return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cead =_ccff .Get (0);if _gggc ,_gbgfa :=_cead .(*_gbd .PdfObjectName );_gbgfa {if *_gggc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_db .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gggc );
return nil ,_a .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _ccff .Len ()> 1{_cead =_ccff .Get (1);_cead =_gbd .TraceToDirectObject (_cead );_eccg ,_bfadf :=NewPdfColorspaceFromPdfObject (_cead );if _bfadf !=nil {return nil ,_bfadf ;
};_egcdf .UnderlyingCS =_eccg ;};_db .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_egcdf .UnderlyingCS );
return _egcdf ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_ffdcg *PdfWriter )GetOptimizer ()Optimizer {return _ffdcg ._deaac };

// ValidateSignatures validates digital signatures in the document.
func (_aaeeg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _aaeeg .AcroForm ==nil {return nil ,nil ;};if _aaeeg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_egeda *PdfSignature ;
_aeaegd *PdfField ;_dbdeec SignatureHandler ;};var _cdcae []*sigFieldPair ;for _ ,_ggag :=range _aaeeg .AcroForm .AllFields (){if _ggag .V ==nil {continue ;};if _begb ,_bcgd :=_gbd .GetDict (_ggag .V );_bcgd {if _addbg ,_cgbgbg :=_gbd .GetNameVal (_begb .Get ("\u0054\u0079\u0070\u0065"));
_cgbgbg &&_addbg =="\u0053\u0069\u0067"{_afgea ,_gfdcg :=_gbd .GetIndirect (_ggag .V );if !_gfdcg {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cdbb ,_ggffa :=_aaeeg .newPdfSignatureFromIndirect (_afgea );if _ggffa !=nil {return nil ,_ggffa ;};var _eaef SignatureHandler ;for _ ,_dfbd :=range handlers {if _dfbd .IsApplicable (_cdbb ){_eaef =_dfbd ;break ;};};_cdcae =append (_cdcae ,&sigFieldPair {_egeda :_cdbb ,_aeaegd :_ggag ,_dbdeec :_eaef });
};};};var _aacdf []SignatureValidationResult ;for _ ,_gaeca :=range _cdcae {_fged :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gaeca ._aeaegd }};if _gaeca ._dbdeec ==nil {_fged .Errors =append (_fged .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_aacdf =append (_aacdf ,_fged );continue ;};_gcgdd ,_fcgg :=_gaeca ._dbdeec .NewDigest (_gaeca ._egeda );if _fcgg !=nil {_fged .Errors =append (_fged .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fcgg .Error ());_aacdf =append (_aacdf ,_fged );
continue ;};_agba :=_gaeca ._egeda .ByteRange ;if _agba ==nil {_fged .Errors =append (_fged .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_aacdf =append (_aacdf ,_fged );continue ;};for _bdcgeb :=0;
_bdcgeb < _agba .Len ();_bdcgeb =_bdcgeb +2{_addcc ,_ :=_gbd .GetNumberAsInt64 (_agba .Get (_bdcgeb ));_gffgd ,_ :=_gbd .GetIntVal (_agba .Get (_bdcgeb +1));if _ ,_fgeada :=_aaeeg ._afbb .Seek (_addcc ,_acga .SeekStart );_fgeada !=nil {return nil ,_fgeada ;
};_gdcf :=make ([]byte ,_gffgd );if _ ,_eddfff :=_aaeeg ._afbb .Read (_gdcf );_eddfff !=nil {return nil ,_eddfff ;};_gcgdd .Write (_gdcf );};_dbded ,_fcgg :=_gaeca ._dbdeec .Validate (_gaeca ._egeda ,_gcgdd );if _fcgg !=nil {return nil ,_fcgg ;};_dbded .Name =_gaeca ._egeda .Name .Decoded ();
_dbded .Reason =_gaeca ._egeda .Reason .Decoded ();if _gaeca ._egeda .M !=nil {_ffga ,_aaagb :=NewPdfDate (_gaeca ._egeda .M .String ());if _aaagb !=nil {_dbded .Errors =append (_dbded .Errors ,_aaagb .Error ());continue ;};_dbded .Date =_ffga ;};_dbded .ContactInfo =_gaeca ._egeda .ContactInfo .Decoded ();
_dbded .Location =_gaeca ._egeda .Location .Decoded ();_dbded .Fields =_fged .Fields ;_aacdf =append (_aacdf ,_dbded );};return _aacdf ,nil ;};

// A returns the value of the A component of the color.
func (_fcgbf *PdfColorCalRGB )A ()float64 {return _fcgbf [0]};func (_aceg *LTV )getOCSPs (_dcgb []*_ad .Certificate ,_fcccb map[string ]*_ad .Certificate )([][]byte ,error ){_adbec :=make ([][]byte ,0,len (_dcgb ));for _ ,_gbbeg :=range _dcgb {for _ ,_fdae :=range _gbbeg .OCSPServer {if _aceg .CertClient .IsCA (_gbbeg ){continue ;
};_cdfd ,_ffeb :=_fcccb [_gbbeg .Issuer .CommonName ];if !_ffeb {_db .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_gfaff ,_cefab :=_aceg .OCSPClient .MakeRequest (_fdae ,_gbbeg ,_cdfd );if _cefab !=nil {_db .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cefab );
continue ;};_adbec =append (_adbec ,_gfaff );};};return _adbec ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fcfgb *Image )ColorAt (x ,y int )(_cc .Color ,error ){_eebga :=_ed .BytesPerLine (int (_fcfgb .Width ),int (_fcfgb .BitsPerComponent ),_fcfgb .ColorComponents );switch _fcfgb .ColorComponents {case 1:return _ed .ColorAtGrayscale (x ,y ,int (_fcfgb .BitsPerComponent ),_eebga ,_fcfgb .Data ,_fcfgb ._dadd );
case 3:return _ed .ColorAtNRGBA (x ,y ,int (_fcfgb .Width ),_eebga ,int (_fcfgb .BitsPerComponent ),_fcfgb .Data ,_fcfgb ._fafca ,_fcfgb ._dadd );case 4:return _ed .ColorAtCMYK (x ,y ,int (_fcfgb .Width ),_fcfgb .Data ,_fcfgb ._dadd );};_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fcfgb .ColorComponents ,_fcfgb .BitsPerComponent );
return nil ,_ff .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_eecfge *PdfPageResources )GetXObjectFormByName (keyName _gbd .PdfObjectName )(*XObjectForm ,error ){_bgded ,_dbgag :=_eecfge .GetXObjectByName (keyName );if _bgded ==nil {return nil ,nil ;};if _dbgag !=XObjectTypeForm {return nil ,_ff .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ffccba ,_fabdad :=NewXObjectFormFromStream (_bgded );if _fabdad !=nil {return nil ,_fabdad ;};return _ffccba ,nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bceb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_gbd .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_ccbcfg []_gbd .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_cedc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};type pdfFontType0 struct{fontCommon ;_cccfd *_gbd .PdfIndirectObject ;_dfcd _dc .TextEncoder ;Encoding _gbd .PdfObject ;DescendantFont *PdfFont ;_fdcfe *_bgg .CMap ;};func (_dfa *PdfReader )newPdfAnnotationPolyLineFromDict (_bbe *_gbd .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cgde :=PdfAnnotationPolyLine {};
_dcge ,_dcce :=_dfa .newPdfAnnotationMarkupFromDict (_bbe );if _dcce !=nil {return nil ,_dcce ;};_cgde .PdfAnnotationMarkup =_dcge ;_cgde .Vertices =_bbe .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cgde .LE =_bbe .Get ("\u004c\u0045");_cgde .BS =_bbe .Get ("\u0042\u0053");
_cgde .IC =_bbe .Get ("\u0049\u0043");_cgde .BE =_bbe .Get ("\u0042\u0045");_cgde .IT =_bbe .Get ("\u0049\u0054");_cgde .Measure =_bbe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cgde ,nil ;};func (_cege *PdfReader )newPdfActionGotoRFromDict (_fba *_gbd .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dfe ,_fcg :=_dae (_fba .Get ("\u0046"));
if _fcg !=nil {return nil ,_fcg ;};return &PdfActionGoToR {D :_fba .Get ("\u0044"),NewWindow :_fba .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dfe },nil ;};func (_cece *pdfFontType0 )baseFields ()*fontCommon {return &_cece .fontCommon };

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bad :=NewPdfAction ();_bgf :=&PdfActionThread {};_bgf .PdfAction =_bad ;_bad .SetContext (_bgf );return _bgf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cccfda *PdfShading )ToPdfObject ()_gbd .PdfObject {_gfaffc :=_cccfda ._baae ;_aagaa ,_gdfbd :=_cccfda .getShadingDict ();if _gdfbd !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cccfda .ShadingType !=nil {_aagaa .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cccfda .ShadingType );};if _cccfda .ColorSpace !=nil {_aagaa .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cccfda .ColorSpace .ToPdfObject ());
};if _cccfda .Background !=nil {_aagaa .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cccfda .Background );};if _cccfda .BBox !=nil {_aagaa .Set ("\u0042\u0042\u006f\u0078",_cccfda .BBox .ToPdfObject ());};if _cccfda .AntiAlias !=nil {_aagaa .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cccfda .AntiAlias );
};return _gfaffc ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_geea *PdfFont )BytesToCharcodes (data []byte )[]_dc .CharCode {_db .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _becae ,_adgfg :=_geea ._bbddd .(*pdfFontType0 );_adgfg &&_becae ._fdcfe !=nil {if _gbgc ,_egdd :=_becae .bytesToCharcodes (data );_egdd {return _gbgc ;};};_gbef :=make ([]_dc .CharCode ,0,len (data )+len (data )%2);if _geea .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _aead :=0;_aead < len (data );_aead +=2{_eafgg :=uint16 (data [_aead ])<<8|uint16 (data [_aead +1]);_gbef =append (_gbef ,_dc .CharCode (_eafgg ));};}else {for _ ,_deaeg :=range data {_gbef =append (_gbef ,_dc .CharCode (_deaeg ));
};};return _gbef ;};

// ToInteger convert to an integer format.
func (_bbfbf *PdfColorLab )ToInteger (bits int )[3]uint32 {_fefab :=_ga .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fefab *_bbfbf .L ()),uint32 (_fefab *_bbfbf .A ()),uint32 (_fefab *_bbfbf .B ())};};func (_cdd *PdfReader )newPdfActionLaunchFromDict (_abc *_gbd .PdfObjectDictionary )(*PdfActionLaunch ,error ){_aaf ,_bec :=_dae (_abc .Get ("\u0046"));
if _bec !=nil {return nil ,_bec ;};return &PdfActionLaunch {Win :_abc .Get ("\u0057\u0069\u006e"),Mac :_abc .Get ("\u004d\u0061\u0063"),Unix :_abc .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_abc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_aaf },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bcae *PdfBorderStyle )ToPdfObject ()_gbd .PdfObject {_bcdb :=_gbd .MakeDict ();if _bcae ._gebe !=nil {if _bcce ,_gcdg :=_bcae ._gebe .(*_gbd .PdfIndirectObject );_gcdg {_bcce .PdfObject =_bcdb ;};};_bcdb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _bcae .W !=nil {_bcdb .Set ("\u0057",_gbd .MakeFloat (*_bcae .W ));};if _bcae .S !=nil {_bcdb .Set ("\u0053",_gbd .MakeName (_bcae .S .GetPdfName ()));};if _bcae .D !=nil {_bcdb .Set ("\u0044",_gbd .MakeArrayFromIntegers (*_bcae .D ));};if _bcae ._gebe !=nil {return _bcae ._gebe ;
};return _bcdb ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_gbd .PdfObjectStream ;OCSP []*_gbd .PdfObjectStream ;CRL []*_gbd .PdfObjectStream ;TU *_gbd .PdfObjectString ;TS *_gbd .PdfObjectString ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ege :=NewPdfAction ();_efb :=&PdfActionLaunch {};_efb .PdfAction =_ege ;_ege .SetContext (_efb );return _efb ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _bd .Time ){_adefd .Lock ();defer _adefd .Unlock ();_acfbb =creationDate ;};func (_fgab *PdfReader )newPdfActionImportDataFromDict (_bbg *_gbd .PdfObjectDictionary )(*PdfActionImportData ,error ){_ebf ,_aag :=_dae (_bbg .Get ("\u0046"));
if _aag !=nil {return nil ,_aag ;};return &PdfActionImportData {F :_ebf },nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_adbc :=NewPdfAction ();_gg :=&PdfActionSubmitForm {};_gg .PdfAction =_adbc ;_adbc .SetContext (_gg );return _gg ;};func _ebacd (_cecae _gbd .PdfObject ){_db .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cecae ,_cecae .String ());
if _afcbb ,_fdbef :=_cecae .(*_gbd .PdfObjectStream );_fdbef {_dcedb ,_dgeac :=_gbd .DecodeStream (_afcbb );if _dgeac !=nil {_db .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dgeac );return ;};_db .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dcedb );
}else if _gfcgf ,_bcgff :=_cecae .(*_gbd .PdfIndirectObject );_bcgff {_db .Log .Debug ("\u0025\u0054\u0020%\u0076",_gfcgf .PdfObject ,_gfcgf .PdfObject );_db .Log .Debug ("\u0025\u0073",_gfcgf .PdfObject .String ());};};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_edgc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_edgc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_edgc ._ebcd =acroForm ;};

// ToPdfObject implements interface PdfModel.
func (_afa *PdfActionRendition )ToPdfObject ()_gbd .PdfObject {_afa .PdfAction .ToPdfObject ();_ade :=_afa ._ef ;_def :=_ade .PdfObject .(*_gbd .PdfObjectDictionary );_def .SetIfNotNil ("\u0053",_gbd .MakeName (string (ActionTypeRendition )));_def .SetIfNotNil ("\u0052",_afa .R );
_def .SetIfNotNil ("\u0041\u004e",_afa .AN );_def .SetIfNotNil ("\u004f\u0050",_afa .OP );_def .SetIfNotNil ("\u004a\u0053",_afa .JS );return _ade ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_bfec *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_fgfa ,_ ,_bdfe :=_bfec .CharcodesToUnicodeWithStats (_bfec .BytesToCharcodes (data ));_fdaca :=_dc .ExpandLigatures (_fgfa );return _fdaca ,_ge .RuneCountInString (_fdaca ),_bdfe ;
};var _fega =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_cdbea *PdfPageResources )SetXObjectFormByName (keyName _gbd .PdfObjectName ,xform *XObjectForm )error {_cafff :=xform .ToPdfObject ().(*_gbd .PdfObjectStream );_cffga :=_cdbea .SetXObjectByName (keyName ,_cafff );return _cffga ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_bgacf *_gbd .PdfIndirectObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ggcf *PdfFont )GetCharMetrics (code _dc .CharCode )(CharMetrics ,bool ){var _ggbge _fad .CharMetrics ;switch _cafe :=_ggcf ._bbddd .(type ){case *pdfFontSimple :if _accb ,_becgg :=_cafe .GetCharMetrics (code );_becgg {return _accb ,_becgg ;};case *pdfFontType0 :if _geba ,_degge :=_cafe .GetCharMetrics (code );
_degge {return _geba ,_degge ;};case *pdfCIDFontType0 :if _efgcc ,_adbca :=_cafe .GetCharMetrics (code );_adbca {return _efgcc ,_adbca ;};case *pdfCIDFontType2 :if _bagb ,_bcafc :=_cafe .GetCharMetrics (code );_bcafc {return _bagb ,_bcafc ;};case *pdfFontType3 :if _edafa ,_fgdb :=_cafe .GetCharMetrics (code );
_fgdb {return _edafa ,_fgdb ;};default:_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ggcf ._bbddd );
return _ggbge ,false ;};if _bagda ,_cbbeg :=_ggcf .GetFontDescriptor ();_cbbeg ==nil &&_bagda !=nil {return _fad .CharMetrics {Wx :_bagda ._dcbc },true ;};_db .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ggcf );
return _ggbge ,false ;};

// PartialName returns the partial name of the field.
func (_cfeed *PdfField )PartialName ()string {_abdb :="";if _cfeed .T !=nil {_abdb =_cfeed .T .Decoded ();}else {_db .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _abdb ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gafg *PdfFieldButton )IsPush ()bool {return _gafg .GetType ()==ButtonTypePush };

// ToPdfObject returns the PDF representation of the colorspace.
func (_eadb *PdfColorspaceDeviceRGB )ToPdfObject ()_gbd .PdfObject {return _gbd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_dgddf *Image )samplesTrimPadding (_fgcfed []uint32 )[]uint32 {_ddcgg :=_dgddf .ColorComponents *int (_dgddf .Width )*int (_dgddf .Height );
if len (_fgcfed )==_ddcgg {return _fgcfed ;};_cdafd :=make ([]uint32 ,_ddcgg );_bfeg :=int (_dgddf .Width )*_dgddf .ColorComponents ;var _egfbg ,_eccb ,_accf ,_bgdgea int ;_cffd :=_ed .BytesPerLine (int (_dgddf .Width ),int (_dgddf .BitsPerComponent ),_dgddf .ColorComponents );
for _egfbg =0;_egfbg < int (_dgddf .Height );_egfbg ++{_eccb =_egfbg *int (_dgddf .Width );_accf =_egfbg *_cffd ;for _bgdgea =0;_bgdgea < _bfeg ;_bgdgea ++{_cdafd [_eccb +_bgdgea ]=_fgcfed [_accf +_bgdgea ];};};return _cdafd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eebff *PdfShadingType2 )ToPdfObject ()_gbd .PdfObject {_eebff .PdfShading .ToPdfObject ();_edeeg ,_eddbg :=_eebff .getShadingDict ();if _eddbg !=nil {_db .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edeeg ==nil {_db .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eebff .Coords !=nil {_edeeg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eebff .Coords );
};if _eebff .Domain !=nil {_edeeg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eebff .Domain );};if _eebff .Function !=nil {if len (_eebff .Function )==1{_edeeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eebff .Function [0].ToPdfObject ());
}else {_aggeg :=_gbd .MakeArray ();for _ ,_efae :=range _eebff .Function {_aggeg .Append (_efae .ToPdfObject ());};_edeeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aggeg );};};if _eebff .Extend !=nil {_edeeg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eebff .Extend );
};return _eebff ._baae ;};func _adbcf (_afggb *_gbd .PdfObjectDictionary )(*PdfFieldChoice ,error ){_egegg :=&PdfFieldChoice {};_egegg .Opt ,_ =_gbd .GetArray (_afggb .Get ("\u004f\u0070\u0074"));_egegg .TI ,_ =_gbd .GetInt (_afggb .Get ("\u0054\u0049"));
_egegg .I ,_ =_gbd .GetArray (_afggb .Get ("\u0049"));return _egegg ,nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gdgg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ff .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_bgcbe :=field .V ;if _bgcbe ==nil {return _ff .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bdag :=pageNum -1;
if _bdag < 0||_bdag > len (_gdgg ._ccbcf )-1{return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_fege :=_gdgg .Reader .PageList [_bdag ];field .P =_fege .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_gbd .MakeString (_a .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_fege .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gdgg ._ebcd ==_gdgg ._fafd .AcroForm {_gdgg ._ebcd =_gdgg .Reader .AcroForm ;};_fccc :=_gdgg ._ebcd ;if _fccc ==nil {_fccc =NewPdfAcroForm ();};_fccc .SigFlags =_gbd .MakeInteger (3);
_cgec :=append (_fccc .AllFields (),field .PdfField );_fccc .Fields =&_cgec ;_gdgg .ReplaceAcroForm (_fccc );_gdgg .UpdatePage (_fege );_gdgg ._ccbcf [_bdag ]=_fege ;return nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_bdagd OutlineDest )ToPdfObject ()_gbd .PdfObject {if (_bdagd .PageObj ==nil &&_bdagd .Page < 0)||_bdagd .Mode ==""{return _gbd .MakeNull ();};_dgbfd :=_gbd .MakeArray ();if _bdagd .PageObj !=nil {_dgbfd .Append (_bdagd .PageObj );}else {_dgbfd .Append (_gbd .MakeInteger (_bdagd .Page ));
};_dgbfd .Append (_gbd .MakeName (_bdagd .Mode ));switch _bdagd .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_dgbfd .Append (_gbd .MakeFloat (_bdagd .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_dgbfd .Append (_gbd .MakeFloat (_bdagd .X ));
case "\u0058\u0059\u005a":_dgbfd .Append (_gbd .MakeFloat (_bdagd .X ));_dgbfd .Append (_gbd .MakeFloat (_bdagd .Y ));_dgbfd .Append (_gbd .MakeFloat (_bdagd .Zoom ));default:_dgbfd .Set (1,_gbd .MakeName ("\u0046\u0069\u0074"));};return _dgbfd ;};func (_agfe *fontFile )loadFromSegments (_fcddg ,_cfdb []byte )error {_db .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_fcddg ),len (_cfdb ));
_ddaa :=_agfe .parseASCIIPart (_fcddg );if _ddaa !=nil {return _ddaa ;};_db .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agfe );if len (_cfdb )==0{return nil ;};_db .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_agfe );
return nil ;};func _fgdd (_ffea *PdfField ,_bafgc _gbd .PdfObject )error {switch _ffea .GetContext ().(type ){case *PdfFieldText :switch _afffa :=_bafgc .(type ){case *_gbd .PdfObjectName :_egddg :=_afffa ;_db .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_egddg .String ());
_ffea .V =_gbd .MakeEncodedString (_afffa .String (),true );case *_gbd .PdfObjectString :_ffea .V =_gbd .MakeEncodedString (_afffa .String (),true );default:_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_afffa ,_afffa );
};case *PdfFieldButton :switch _bafgc .(type ){case *_gbd .PdfObjectName :if len (_bafgc .String ())> 0{_ffea .V =_bafgc ;_dggca (_ffea ,_bafgc );};case *_gbd .PdfObjectString :if len (_bafgc .String ())> 0{_ffea .V =_gbd .MakeName (_bafgc .String ());
_dggca (_ffea ,_ffea .V );};default:_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ffea .PartialName (),_bafgc );_ffea .V =_bafgc ;};
case *PdfFieldChoice :switch _bafgc .(type ){case *_gbd .PdfObjectName :if len (_bafgc .String ())> 0{_ffea .V =_gbd .MakeString (_bafgc .String ());_dggca (_ffea ,_bafgc );};case *_gbd .PdfObjectString :if len (_bafgc .String ())> 0{_ffea .V =_bafgc ;
_dggca (_ffea ,_gbd .MakeName (_bafgc .String ()));};default:_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ffea .PartialName (),_bafgc );
_ffea .V =_bafgc ;};case *PdfFieldSignature :_db .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ffea .PartialName (),_bafgc );
};return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_ebfbb *Image )SetAlpha (alpha []byte ){_ebfbb ._fafca =alpha };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_fbcg *_gbd .PdfIndirectObject ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_dggfc :=&PdfPageResourcesColorspaces {};_dggfc .Names =[]string {};_dggfc .Colorspaces =map[string ]PdfColorspace {};_dggfc ._abdgb =&_gbd .PdfIndirectObject {};return _dggfc ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _gbd .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_gbd .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_gfefa ,_dgee :=encoder .EncodeBytes (img .Data );
if _dgee !=nil {_db .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dgee );return nil ,_dgee ;};_abdgg :=NewXObjectImage ();_ddbee :=img .Width ;_eagaa :=img .Height ;
_abdgg .Width =&_ddbee ;_abdgg .Height =&_eagaa ;_afeg :=img .BitsPerComponent ;_abdgg .BitsPerComponent =&_afeg ;_abdgg .Filter =encoder ;_abdgg .Stream =_gfefa ;if cs ==nil {if img .ColorComponents ==1{_abdgg .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_abdgg .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_abdgg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_abdgg .ColorSpace =cs ;};if len (img ._fafca )!=0{_fcabfca :=NewXObjectImage ();_fcabfca .Filter =encoder ;_cafea ,_gcbdf :=encoder .EncodeBytes (img ._fafca );if _gcbdf !=nil {_db .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_gcbdf );
return nil ,_gcbdf ;};_fcabfca .Stream =_cafea ;_fcabfca .BitsPerComponent =_abdgg .BitsPerComponent ;_fcabfca .Width =&img .Width ;_fcabfca .Height =&img .Height ;_fcabfca .ColorSpace =NewPdfColorspaceDeviceGray ();_abdgg .SMask =_fcabfca .ToPdfObject ();
}else {_abdgg .SMask =xobjIn .SMask ;_abdgg .ImageMask =xobjIn .ImageMask ;if _abdgg .ColorSpace .GetNumComponents ()==1{_faea (_abdgg );};};return _abdgg ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bface *PdfPage )AppendContentStream (contentStr string )error {_acbeg ,_dcgfe :=_bface .GetContentStreams ();if _dcgfe !=nil {return _dcgfe ;};if len (_acbeg )==0{_acbeg =[]string {contentStr };return _bface .SetContentStreams (_acbeg ,_gbd .NewFlateEncoder ());
};var _babfd _cd .Buffer ;_babfd .WriteString (_acbeg [len (_acbeg )-1]);_babfd .WriteString ("\u000a");_babfd .WriteString (contentStr );_acbeg [len (_acbeg )-1]=_babfd .String ();return _bface .SetContentStreams (_acbeg ,_gbd .NewFlateEncoder ());};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ecae *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bfdb :=_de .NewReader (img .getBase ());_daef :=_ed .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ecae .AlternateSpace .GetNumComponents (),nil ,img ._fafca ,nil );
_cafb :=_de .NewWriter (_daef );_bgaab :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_db .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_db .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ecae .TintTransform );_ccaec :=_ecae .AlternateSpace .DecodeArray ();var (_afgag uint32 ;_ccbb error ;);for {_afgag ,_ccbb =_bfdb .ReadSample ();
if _ccbb ==_acga .EOF {break ;};if _ccbb !=nil {return img ,_ccbb ;};_gabag :=float64 (_afgag )/_bgaab ;_dfegd ,_gbda :=_ecae .TintTransform .Evaluate ([]float64 {_gabag });if _gbda !=nil {return img ,_gbda ;};for _efdgd ,_aagf :=range _dfegd {_fdgf :=_ed .LinearInterpolate (_aagf ,_ccaec [_efdgd *2],_ccaec [_efdgd *2+1],0,1);
if _gbda =_cafb .WriteSample (uint32 (_fdgf *_bgaab ));_gbda !=nil {return img ,_gbda ;};};};return _ecae .AlternateSpace .ImageToRGB (_cagfg (&_daef ));};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _acga .ReadSeeker )(*PdfReader ,error ){const _feca ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _eddf (rs ,&ReaderOpts {LazyLoad :true },false ,_feca );
};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_adefd .Lock ();defer _adefd .Unlock ();_eaeed =title };

// ToPdfObject returns the PDF representation of the page resources.
func (_ggcgc *PdfPageResources )ToPdfObject ()_gbd .PdfObject {_fffga :=_ggcgc ._bfgbc ;_fffga .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ggcgc .ExtGState );if _ggcgc ._cbbeb !=nil {_ggcgc .ColorSpace =_ggcgc ._cbbeb .ToPdfObject ();
};_fffga .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ggcgc .ColorSpace );_fffga .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ggcgc .Pattern );_fffga .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ggcgc .Shading );
_fffga .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ggcgc .XObject );_fffga .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ggcgc .Font );_fffga .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ggcgc .ProcSet );_fffga .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ggcgc .Properties );
return _fffga ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_eegb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_daff :=_de .NewReader (img .getBase ());_edcf :=_ed .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dbba :=_de .NewWriter (_edcf );
_aeaf :=_ga .Pow (2,float64 (img .BitsPerComponent ))-1;_baed :=make ([]uint32 ,3);var (_bbce uint32 ;ANorm ,X ,Y ,Z ,_fcbc ,_dbeac ,_ggfd float64 ;_aaga error ;);for {_bbce ,_aaga =_daff .ReadSample ();if _aaga ==_acga .EOF {break ;}else if _aaga !=nil {return img ,_aaga ;
};ANorm =float64 (_bbce )/_aeaf ;X =_eegb .WhitePoint [0]*_ga .Pow (ANorm ,_eegb .Gamma );Y =_eegb .WhitePoint [1]*_ga .Pow (ANorm ,_eegb .Gamma );Z =_eegb .WhitePoint [2]*_ga .Pow (ANorm ,_eegb .Gamma );_fcbc =3.240479*X +-1.537150*Y +-0.498535*Z ;_dbeac =-0.969256*X +1.875992*Y +0.041556*Z ;
_ggfd =0.055648*X +-0.204043*Y +1.057311*Z ;_fcbc =_ga .Min (_ga .Max (_fcbc ,0),1.0);_dbeac =_ga .Min (_ga .Max (_dbeac ,0),1.0);_ggfd =_ga .Min (_ga .Max (_ggfd ,0),1.0);_baed [0]=uint32 (_fcbc *_aeaf );_baed [1]=uint32 (_dbeac *_aeaf );_baed [2]=uint32 (_ggfd *_aeaf );
if _aaga =_dbba .WriteSamples (_baed );_aaga !=nil {return img ,_aaga ;};};return _cagfg (&_edcf ),nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_fedg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfg ,_afge :=color .(*PdfColorCalGray );if !_afge {_db .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gfg .Val ();X :=_fedg .WhitePoint [0]*_ga .Pow (ANorm ,_fedg .Gamma );Y :=_fedg .WhitePoint [1]*_ga .Pow (ANorm ,_fedg .Gamma );Z :=_fedg .WhitePoint [2]*_ga .Pow (ANorm ,_fedg .Gamma );
_ccaef :=3.240479*X +-1.537150*Y +-0.498535*Z ;_aaad :=-0.969256*X +1.875992*Y +0.041556*Z ;_dbefg :=0.055648*X +-0.204043*Y +1.057311*Z ;_ccaef =_ga .Min (_ga .Max (_ccaef ,0),1.0);_aaad =_ga .Min (_ga .Max (_aaad ,0),1.0);_dbefg =_ga .Min (_ga .Max (_dbefg ,0),1.0);
return NewPdfColorDeviceRGB (_ccaef ,_aaad ,_dbefg ),nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_agfbe *PdfPage )GetPageDict ()*_gbd .PdfObjectDictionary {_gadf :=_agfbe ._abccg ;_gadf .Clear ();_gadf .Set ("\u0054\u0079\u0070\u0065",_gbd .MakeName ("\u0050\u0061\u0067\u0065"));_gadf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agfbe .Parent );
if _agfbe .LastModified !=nil {_gadf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_agfbe .LastModified .ToPdfObject ());};if _agfbe .Resources !=nil {_gadf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_agfbe .Resources .ToPdfObject ());
};if _agfbe .CropBox !=nil {_gadf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_agfbe .CropBox .ToPdfObject ());};if _agfbe .MediaBox !=nil {_gadf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_agfbe .MediaBox .ToPdfObject ());};if _agfbe .BleedBox !=nil {_gadf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_agfbe .BleedBox .ToPdfObject ());
};if _agfbe .TrimBox !=nil {_gadf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_agfbe .TrimBox .ToPdfObject ());};if _agfbe .ArtBox !=nil {_gadf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_agfbe .ArtBox .ToPdfObject ());};_gadf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_agfbe .BoxColorInfo );
_gadf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_agfbe .Contents );if _agfbe .Rotate !=nil {_gadf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gbd .MakeInteger (*_agfbe .Rotate ));};_gadf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_agfbe .Group );
_gadf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_agfbe .Thumb );_gadf .SetIfNotNil ("\u0042",_agfbe .B );_gadf .SetIfNotNil ("\u0044\u0075\u0072",_agfbe .Dur );_gadf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_agfbe .Trans );_gadf .SetIfNotNil ("\u0041\u0041",_agfbe .AA );
_gadf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_agfbe .Metadata );_gadf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_agfbe .PieceInfo );_gadf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_agfbe .StructParents );
_gadf .SetIfNotNil ("\u0049\u0044",_agfbe .ID );_gadf .SetIfNotNil ("\u0050\u005a",_agfbe .PZ );_gadf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_agfbe .SeparationInfo );_gadf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_agfbe .Tabs );
_gadf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_agfbe .TemplateInstantiated );_gadf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_agfbe .PresSteps );_gadf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_agfbe .UserUnit );
_gadf .SetIfNotNil ("\u0056\u0050",_agfbe .VP );if _agfbe ._gacee !=nil {_adggc :=_gbd .MakeArray ();for _ ,_afdf :=range _agfbe ._gacee {if _ebcbf :=_afdf .GetContext ();_ebcbf !=nil {_adggc .Append (_ebcbf .ToPdfObject ());}else {_adggc .Append (_afdf .ToPdfObject ());
};};if _adggc .Len ()> 0{_gadf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_adggc );};}else if _agfbe .Annots !=nil {_gadf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_agfbe .Annots );};return _gadf ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gfecb pdfFontType3 )GetCharMetrics (code _dc .CharCode )(_fad .CharMetrics ,bool ){if _dcfac ,_aacg :=_gfecb ._acagec [code ];_aacg {return _fad .CharMetrics {Wx :_dcfac },true ;};if _fad .IsStdFont (_fad .StdFontName (_gfecb ._dgcff )){return _fad .CharMetrics {Wx :250},true ;
};return _fad .CharMetrics {},false ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_aeage *pdfCIDFontType2 )ToPdfObject ()_gbd .PdfObject {if _aeage ._ccaee ==nil {_aeage ._ccaee =&_gbd .PdfIndirectObject {};};_ggaf :=_aeage .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_aeage ._ccaee .PdfObject =_ggaf ;if _aeage .CIDSystemInfo !=nil {_ggaf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_aeage .CIDSystemInfo );};if _aeage .DW !=nil {_ggaf .Set ("\u0044\u0057",_aeage .DW );};if _aeage .DW2 !=nil {_ggaf .Set ("\u0044\u0057\u0032",_aeage .DW2 );
};if _aeage .W !=nil {_ggaf .Set ("\u0057",_aeage .W );};if _aeage .W2 !=nil {_ggaf .Set ("\u0057\u0032",_aeage .W2 );};if _aeage .CIDToGIDMap !=nil {_ggaf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_aeage .CIDToGIDMap );};return _aeage ._ccaee ;
};var _abbc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// GetSubFilter returns SubFilter value or empty string.
func (_dgbdc *pdfSignDictionary )GetSubFilter ()string {_beggb :=_dgbdc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _beggb ==nil {return "";};if _defdg ,_becgb :=_gbd .GetNameVal (_beggb );_becgb {return _defdg ;};return "";};func _cddec ()string {_adefd .Lock ();
defer _adefd .Unlock ();if len (_ddcde )> 0{return _ddcde ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_ebcfg *Image )GetSamples ()[]uint32 {_fbefb :=_de .ResampleBytes (_ebcfg .Data ,int (_ebcfg .BitsPerComponent ));if _ebcfg .BitsPerComponent < 8{_fbefb =_ebcfg .samplesTrimPadding (_fbefb );};_gacfc :=int (_ebcfg .Width )*int (_ebcfg .Height )*_ebcfg .ColorComponents ;
if len (_fbefb )< _gacfc {_db .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fbefb ),_gacfc );
return _fbefb ;}else if len (_fbefb )> _gacfc {_db .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fbefb ),_gacfc );
_fbefb =_fbefb [:_gacfc ];};return _fbefb ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_efgf *PdfWriter )SetNameDictionary (names _gbd .PdfObject )error {if names ==nil {return nil ;};_db .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_efgf ._dbecd .Set ("\u004e\u0061\u006de\u0073",names );return _efgf .addObjects (names );};func _faaga (_egccg *_gbd .PdfObjectDictionary )(*PdfFieldText ,error ){_ebce :=&PdfFieldText {};_ebce .DA ,_ =_gbd .GetString (_egccg .Get ("\u0044\u0041"));_ebce .Q ,_ =_gbd .GetInt (_egccg .Get ("\u0051"));
_ebce .DS ,_ =_gbd .GetString (_egccg .Get ("\u0044\u0053"));_ebce .RV =_egccg .Get ("\u0052\u0056");_ebce .MaxLen ,_ =_gbd .GetInt (_egccg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _ebce ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bafd *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aace :=vals [0];if _aace < 0.0||_aace > 100.0{_db .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_aace );
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceec :=vals [1];_ccdbe :=float64 (-100);_ffd :=float64 (100);if len (_bafd .Range )> 1{_ccdbe =_bafd .Range [0];_ffd =_bafd .Range [1];};if _ceec < _ccdbe ||_ceec > _ffd {_db .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ceec ,_ccdbe ,_ffd );
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbega :=vals [2];_acaac :=float64 (-100);_dagd :=float64 (100);if len (_bafd .Range )> 3{_acaac =_bafd .Range [2];_dagd =_bafd .Range [3];};if _fbega < _acaac ||_fbega > _dagd {_db .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fbega ,_acaac ,_dagd );
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aefa :=NewPdfColorLab (_aace ,_ceec ,_fbega );return _aefa ,nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_febae *XObjectImage )SetFilter (encoder _gbd .StreamEncoder )error {_gaccec :=_febae .Stream ;_bebgf ,_edacg :=_febae .Filter .DecodeBytes (_gaccec );if _edacg !=nil {return _edacg ;};_febae .Filter =encoder ;encoder .UpdateParams (_febae .getParamsDict ());
_gaccec ,_edacg =encoder .EncodeBytes (_bebgf );if _edacg !=nil {return _edacg ;};_febae .Stream =_gaccec ;return nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bde :=NewPdfAction ();_ccd :=&PdfActionNamed {};_ccd .PdfAction =_bde ;_bde .SetContext (_ccd );return _ccd ;};func _dgagb (_adfce _gbd .PdfObject )(*PdfPageResourcesColorspaces ,error ){_bffce :=&PdfPageResourcesColorspaces {};
if _bdbfe ,_geec :=_adfce .(*_gbd .PdfIndirectObject );_geec {_bffce ._abdgb =_bdbfe ;_adfce =_bdbfe .PdfObject ;};_egdgb ,_aaef :=_gbd .GetDict (_adfce );if !_aaef {return nil ,_ff .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_bffce .Names =[]string {};_bffce .Colorspaces =map[string ]PdfColorspace {};for _ ,_bbgdf :=range _egdgb .Keys (){_cbegd :=_egdgb .Get (_bbgdf );_bffce .Names =append (_bffce .Names ,string (_bbgdf ));_dcfda ,_ggefg :=NewPdfColorspaceFromPdfObject (_cbegd );
if _ggefg !=nil {return nil ,_ggefg ;};_bffce .Colorspaces [string (_bbgdf )]=_dcfda ;};return _bffce ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_ggec *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_gbd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdfg ,_bagd :=_gbd .GetNumbersAsFloat (objects );
if _bagd !=nil {return nil ,_bagd ;};return _ggec .ColorFromFloats (_gdfg );};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bcaea *PdfFieldText )ToPdfObject ()_gbd .PdfObject {_bcaea .PdfField .ToPdfObject ();_ccdga :=_bcaea ._beee ;_bggad :=_ccdga .PdfObject .(*_gbd .PdfObjectDictionary );_bggad .Set ("\u0046\u0054",_gbd .MakeName ("\u0054\u0078"));if _bcaea .DA !=nil {_bggad .Set ("\u0044\u0041",_bcaea .DA );
};if _bcaea .Q !=nil {_bggad .Set ("\u0051",_bcaea .Q );};if _bcaea .DS !=nil {_bggad .Set ("\u0044\u0053",_bcaea .DS );};if _bcaea .RV !=nil {_bggad .Set ("\u0052\u0056",_bcaea .RV );};if _bcaea .MaxLen !=nil {_bggad .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bcaea .MaxLen );
};return _ccdga ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ccfgf *PdfPageResources )GenerateXObjectName ()_gbd .PdfObjectName {_effcb :=1;for {_dcdbe :=_gbd .MakeName (_a .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_effcb ));if !_ccfgf .HasXObjectByName (*_dcdbe ){return *_dcdbe ;};_effcb ++;};};type pdfCIDFontType0 struct{fontCommon ;
_bgbd *_gbd .PdfIndirectObject ;_ebge _dc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_gbd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gbd .PdfObject ;W _gbd .PdfObject ;DW2 _gbd .PdfObject ;W2 _gbd .PdfObject ;_gfgdb map[_dc .CharCode ]float64 ;_dddg float64 ;};

// C returns the value of the C component of the color.
func (_dfea *PdfColorCalRGB )C ()float64 {return _dfea [2]};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ggdf *Image )Resample (targetBitsPerComponent int64 ){if _ggdf .BitsPerComponent ==targetBitsPerComponent {return ;};_dbgad :=_ggdf .GetSamples ();if targetBitsPerComponent < _ggdf .BitsPerComponent {_dcea :=_ggdf .BitsPerComponent -targetBitsPerComponent ;
for _cfbf :=range _dbgad {_dbgad [_cfbf ]>>=uint (_dcea );};}else if targetBitsPerComponent > _ggdf .BitsPerComponent {_egaaf :=targetBitsPerComponent -_ggdf .BitsPerComponent ;for _geabe :=range _dbgad {_dbgad [_geabe ]<<=uint (_egaaf );};};_ggdf .BitsPerComponent =targetBitsPerComponent ;
if _ggdf .BitsPerComponent < 8{_ggdf .resampleLowBits (_dbgad );return ;};_eddee :=_ed .BytesPerLine (int (_ggdf .Width ),int (_ggdf .BitsPerComponent ),_ggdf .ColorComponents );_fagf :=make ([]byte ,_eddee *int (_ggdf .Height ));var (_fgeb ,_cfdff ,_cfddb ,_dddbc int ;
_gegag uint32 ;);for _cfddb =0;_cfddb < int (_ggdf .Height );_cfddb ++{_fgeb =_cfddb *_eddee ;_cfdff =(_cfddb +1)*_eddee -1;_ebbgcb :=_de .ResampleUint32 (_dbgad [_fgeb :_cfdff ],int (targetBitsPerComponent ),8);for _dddbc ,_gegag =range _ebbgcb {_fagf [_dddbc +_fgeb ]=byte (_gegag );
};};_ggdf .Data =_fagf ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func _deaa (_gfgd _gbd .PdfObject )(*PdfColorspaceLab ,error ){_gfeaa :=NewPdfColorspaceLab ();if _aada ,_acde :=_gfgd .(*_gbd .PdfIndirectObject );_acde {_gfeaa ._gacce =_aada ;
};_gfgd =_gbd .TraceToDirectObject (_gfgd );_bccea ,_dfcg :=_gfgd .(*_gbd .PdfObjectArray );if !_dfcg {return nil ,_a .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bccea .Len ()!=2{return nil ,_a .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gfgd =_gbd .TraceToDirectObject (_bccea .Get (0));_afdb ,_dfcg :=_gfgd .(*_gbd .PdfObjectName );if !_dfcg {return nil ,_a .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_afdb !="\u004c\u0061\u0062"{return nil ,_a .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gfgd =_gbd .TraceToDirectObject (_bccea .Get (1));_aaece ,_dfcg :=_gfgd .(*_gbd .PdfObjectDictionary );
if !_dfcg {return nil ,_a .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gfgd =_aaece .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_gfgd =_gbd .TraceToDirectObject (_gfgd );_ecbd ,_dfcg :=_gfgd .(*_gbd .PdfObjectArray );if !_dfcg {return nil ,_a .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _ecbd .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_aedcc ,_gbebc :=_ecbd .GetAsFloat64Slice ();if _gbebc !=nil {return nil ,_gbebc ;};_gfeaa .WhitePoint =_aedcc ;_gfgd =_aaece .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gfgd !=nil {_gfgd =_gbd .TraceToDirectObject (_gfgd );
_fccb ,_adcd :=_gfgd .(*_gbd .PdfObjectArray );if !_adcd {return nil ,_a .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _fccb .Len ()!=3{return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bdecg ,_bgagc :=_fccb .GetAsFloat64Slice ();if _bgagc !=nil {return nil ,_bgagc ;};_gfeaa .BlackPoint =_bdecg ;};_gfgd =_aaece .Get ("\u0052\u0061\u006eg\u0065");if _gfgd !=nil {_gfgd =_gbd .TraceToDirectObject (_gfgd );_ccaa ,_agdff :=_gfgd .(*_gbd .PdfObjectArray );
if !_agdff {_db .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_a .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ccaa .Len ()!=4{_db .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_a .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bdece ,_cbee :=_ccaa .GetAsFloat64Slice ();if _cbee !=nil {return nil ,_cbee ;};_gfeaa .Range =_bdece ;};return _gfeaa ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dadc *PdfColorspaceSpecialSeparation )ToPdfObject ()_gbd .PdfObject {_fdca :=_gbd .MakeArray (_gbd .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fdca .Append (_dadc .ColorantName );_fdca .Append (_dadc .AlternateSpace .ToPdfObject ());
_fdca .Append (_dadc .TintTransform .ToPdfObject ());if _dadc ._gfec !=nil {_dadc ._gfec .PdfObject =_fdca ;return _dadc ._gfec ;};return _fdca ;};

// ToPdfObject implements interface PdfModel.
func (_gagg *PdfAnnotationScreen )ToPdfObject ()_gbd .PdfObject {_gagg .PdfAnnotation .ToPdfObject ();_adc :=_gagg ._faa ;_gebc :=_adc .PdfObject .(*_gbd .PdfObjectDictionary );_gebc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gbd .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_gebc .SetIfNotNil ("\u0054",_gagg .T );_gebc .SetIfNotNil ("\u004d\u004b",_gagg .MK );_gebc .SetIfNotNil ("\u0041",_gagg .A );_gebc .SetIfNotNil ("\u0041\u0041",_gagg .AA );return _adc ;};func (_febg *PdfPage )setContainer (_gffaa *_gbd .PdfIndirectObject ){_gffaa .PdfObject =_febg ._abccg ;
_febg ._fgbbe =_gffaa ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_cccca *PdfField )ToPdfObject ()_gbd .PdfObject {_fbba :=_cccca ._beee ;_bbbb :=_fbba .PdfObject .(*_gbd .PdfObjectDictionary );_dcbe :=_gbd .MakeArray ();for _ ,_beade :=range _cccca .Kids {_dcbe .Append (_beade .ToPdfObject ());};for _ ,_dfee :=range _cccca .Annotations {if _dfee ._faa !=_cccca ._beee {_dcbe .Append (_dfee .GetContext ().ToPdfObject ());
};};if _cccca .Parent !=nil {_bbbb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cccca .Parent .GetContainingPdfObject ());};if _dcbe .Len ()> 0{_bbbb .Set ("\u004b\u0069\u0064\u0073",_dcbe );};_bbbb .SetIfNotNil ("\u0046\u0054",_cccca .FT );_bbbb .SetIfNotNil ("\u0054",_cccca .T );
_bbbb .SetIfNotNil ("\u0054\u0055",_cccca .TU );_bbbb .SetIfNotNil ("\u0054\u004d",_cccca .TM );_bbbb .SetIfNotNil ("\u0046\u0066",_cccca .Ff );_bbbb .SetIfNotNil ("\u0056",_cccca .V );_bbbb .SetIfNotNil ("\u0044\u0056",_cccca .DV );_bbbb .SetIfNotNil ("\u0041\u0041",_cccca .AA );
return _fbba ;};

// Subtype returns the font's "Subtype" field.
func (_cdda *PdfFont )Subtype ()string {_dgab :=_cdda .baseFields ()._bbecf ;if _cbdb ,_afffbd :=_cdda ._bbddd .(*pdfFontType0 );_afffbd {_dgab =_dgab +"\u003a"+_cbdb .DescendantFont .Subtype ();};return _dgab ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dcg :=NewPdfAction ();_ea :=&PdfActionGoToE {};_ea .PdfAction =_dcg ;_dcg .SetContext (_ea );return _ea ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_gbd .PdfObjectBool ;SigFlags *_gbd .PdfObjectInteger ;CO *_gbd .PdfObjectArray ;DR *PdfPageResources ;DA *_gbd .PdfObjectString ;Q *_gbd .PdfObjectInteger ;XFA _gbd .PdfObject ;_cdec *_gbd .PdfIndirectObject ;
};func (_fcc *PdfReader )newPdfAnnotationMarkupFromDict (_fcgc *_gbd .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cde :=&PdfAnnotationMarkup {};if _cgge :=_fcgc .Get ("\u0054");_cgge !=nil {_cde .T =_cgge ;};if _agb :=_fcgc .Get ("\u0050\u006f\u0070u\u0070");
_agb !=nil {_bbag ,_gdeg :=_agb .(*_gbd .PdfIndirectObject );if !_gdeg {if _ ,_fbed :=_agb .(*_gbd .PdfObjectNull );!_fbed {return nil ,_ff .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_cbcc ,_ebe :=_fcc .newPdfAnnotationFromIndirectObject (_bbag );if _ebe !=nil {return nil ,_ebe ;};if _cbcc !=nil {_aea ,_ccef :=_cbcc ._dbeb .(*PdfAnnotationPopup );if !_ccef {return nil ,_ff .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_cde .Popup =_aea ;};};};if _efeg :=_fcgc .Get ("\u0043\u0041");_efeg !=nil {_cde .CA =_efeg ;};if _gdce :=_fcgc .Get ("\u0052\u0043");_gdce !=nil {_cde .RC =_gdce ;};if _ceea :=_fcgc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ceea !=nil {_cde .CreationDate =_ceea ;};if _gcd :=_fcgc .Get ("\u0049\u0052\u0054");_gcd !=nil {_cde .IRT =_gcd ;};if _bcfg :=_fcgc .Get ("\u0053\u0075\u0062\u006a");_bcfg !=nil {_cde .Subj =_bcfg ;};if _dcgc :=_fcgc .Get ("\u0052\u0054");_dcgc !=nil {_cde .RT =_dcgc ;
};if _abf :=_fcgc .Get ("\u0049\u0054");_abf !=nil {_cde .IT =_abf ;};if _fgcf :=_fcgc .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_fgcf !=nil {_cde .ExData =_fgcf ;};return _cde ,nil ;};

// String returns a string representation of what flags are set.
func (_bfge FieldFlag )String ()string {_bged :="";if _bfge ==FieldFlagClear {_bged ="\u0043\u006c\u0065a\u0072";return _bged ;};if _bfge &FieldFlagReadOnly > 0{_bged +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _bfge &FieldFlagRequired > 0{_bged +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _bfge &FieldFlagNoExport > 0{_bged +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _bfge &FieldFlagNoToggleToOff > 0{_bged +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _bfge &FieldFlagRadio > 0{_bged +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _bfge &FieldFlagPushbutton > 0{_bged +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _bfge &FieldFlagRadiosInUnision > 0{_bged +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _bfge &FieldFlagMultiline > 0{_bged +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _bfge &FieldFlagPassword > 0{_bged +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _bfge &FieldFlagFileSelect > 0{_bged +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _bfge &FieldFlagDoNotScroll > 0{_bged +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _bfge &FieldFlagComb > 0{_bged +="\u007c\u0043\u006fm\u0062";};if _bfge &FieldFlagRichText > 0{_bged +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _bfge &FieldFlagDoNotSpellCheck > 0{_bged +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _bfge &FieldFlagCombo > 0{_bged +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _bfge &FieldFlagEdit > 0{_bged +="\u007c\u0045\u0064i\u0074";};if _bfge &FieldFlagSort > 0{_bged +="\u007c\u0053\u006fr\u0074";};if _bfge &FieldFlagMultiSelect > 0{_bged +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _bfge &FieldFlagCommitOnSelChange > 0{_bged +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fc .Trim (_bged ,"\u007c");};

// SetFlag sets the flag for the field.
func (_dgccb *PdfField )SetFlag (flag FieldFlag ){_dgccb .Ff =_gbd .MakeInteger (int64 (flag ))};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _gbd .PdfObject ;Flags _gbd .PdfObject ;};

// String returns a human readable description of `fontfile`.
func (_fefda *fontFile )String ()string {_ecgbb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fefda ._dage !=nil {_ecgbb =_fefda ._dage .String ();};return _a .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fefda ._gecdf ,_ecgbb );
};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gddc :=&PdfColorspaceCalRGB {};_gddc .BlackPoint =[]float64 {0.0,0.0,0.0};_gddc .Gamma =[]float64 {1.0,1.0,1.0};_gddc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gddc ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_dedfe *PdfWriter )AddPage (page *PdfPage )error {const _bfdbe ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_caede (page );_fbgdf :=page .ToPdfObject ();_db .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_db .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fbgdf );_agegd ,_bgdbe :=_gbd .GetIndirect (_fbgdf );if !_bgdbe {return _ff .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_db .Log .Trace ("\u0025\u0073",_agegd );_db .Log .Trace ("\u0025\u0073",_agegd .PdfObject );_gffbf ,_bgdbe :=_gbd .GetDict (_agegd .PdfObject );if !_bgdbe {return _ff .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efbaa ,_bgdbe :=_gbd .GetName (_gffbf .Get ("\u0054\u0079\u0070\u0065"));if !_bgdbe {return _a .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gffbf .Get ("\u0054\u0079\u0070\u0065"));
};if _efbaa .String ()!="\u0050\u0061\u0067\u0065"{return _ff .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_cddecf :=[]_gbd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gacbc ,_eeceb :=_gbd .GetIndirect (_gffbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_db .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gffbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_eeceb );
for _eeceb {_db .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gacbc );_bbfbg ,_beadd :=_gbd .GetDict (_gacbc .PdfObject );if !_beadd {return _ff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fdgee :=range _cddecf {_db .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fdgee );if _gffbf .Get (_fdgee )!=nil {_db .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _edcbb :=_bbfbg .Get (_fdgee );_edcbb !=nil {_db .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fdgee );_gffbf .Set (_fdgee ,_edcbb );};};_gacbc ,_eeceb =_gbd .GetIndirect (_bbfbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_db .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bbfbg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_db .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_gffbf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dedfe ._eceaeb );_agegd .PdfObject =_gffbf ;_adaba ,_bgdbe :=_gbd .GetDict (_dedfe ._eceaeb .PdfObject );if !_bgdbe {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dgeca ,_bgdbe :=_gbd .GetArray (_adaba .Get ("\u004b\u0069\u0064\u0073"));if !_bgdbe {return _ff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dgeca .Append (_agegd );_dedfe ._bced [_gffbf ]=struct{}{};_ebaa ,_bgdbe :=_gbd .GetInt (_adaba .Get ("\u0043\u006f\u0075n\u0074"));if !_bgdbe {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ebaa =*_ebaa +1;if page ._baff ==nil {_ecbdff :=_ega .Track (_dedfe ._gacgf ,_bfdbe );if _ecbdff !=nil {return _ecbdff ;};}else {_fgbce :=_ega .Track (page ._baff ._fcebf ,_bfdbe );if _fgbce !=nil {return _fgbce ;};};_dedfe .addObject (_agegd );_eadca :=_dedfe .addObjects (_gffbf );
if _eadca !=nil {return _eadca ;};return nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_bcff :=NewPdfAnnotation ();_fec :=&PdfAnnotationSquiggly {};_fec .PdfAnnotation =_bcff ;_fec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcff .SetContext (_fec );return _fec ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_cced *PdfPageResources )SetFontByName (keyName _gbd .PdfObjectName ,obj _gbd .PdfObject )error {if _cced .Font ==nil {_cced .Font =_gbd .MakeDict ();};_bggae ,_dcae :=_gbd .TraceToDirectObject (_cced .Font ).(*_gbd .PdfObjectDictionary );if !_dcae {_db .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gbd .TraceToDirectObject (_cced .Font ));
return _gbd .ErrTypeError ;};_bggae .Set (keyName ,obj );return nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_deaca *PdfPage )AddContentStreamByString (contentStr string )error {_bdde ,_bgfd :=_gbd .MakeStream ([]byte (contentStr ),_gbd .NewFlateEncoder ());if _bgfd !=nil {return _bgfd ;};if _deaca .Contents ==nil {_deaca .Contents =_bdde ;}else {_cgfdfa :=_gbd .TraceToDirectObject (_deaca .Contents );
_efag ,_efdfe :=_cgfdfa .(*_gbd .PdfObjectArray );if !_efdfe {_efag =_gbd .MakeArray (_cgfdfa );};_efag .Append (_bdde );_deaca .Contents =_efag ;};return nil ;};func _efeb (_accd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_accd }};


// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_bcd :=&PdfAction {};_bcd ._ef =_gbd .MakeIndirectObject (_gbd .MakeDict ());return _bcd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ace *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cabb :=vals [0];if _cabb < 0.0||_cabb > 1.0{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acbd :=NewPdfColorCalGray (_cabb );return _acbd ,nil ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_cgdd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cggd ,_ccfg :=color .(*PdfColorDeviceRGB );if !_ccfg {_db .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _cggd ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_dafec *Outline )Insert (index uint ,item *OutlineItem ){_gada :=uint (len (_dafec .Entries ));if index > _gada {index =_gada ;};_dafec .Entries =append (_dafec .Entries [:index ],append ([]*OutlineItem {item },_dafec .Entries [index :]...)...);};
func (_caafd *PdfReader )buildOutlineTree (_dbbe _gbd .PdfObject ,_abfcc *PdfOutlineTreeNode ,_dbaab *PdfOutlineTreeNode ,_cgaae map[_gbd .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cgaae ==nil {_cgaae =map[_gbd .PdfObject ]struct{}{};
};_cgaae [_dbbe ]=struct{}{};_aeaa ,_adffe :=_dbbe .(*_gbd .PdfIndirectObject );if !_adffe {return nil ,nil ,_a .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dbbe );
};_dggea ,_ebad :=_aeaa .PdfObject .(*_gbd .PdfObjectDictionary );if !_ebad {return nil ,nil ,_ff .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_db .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_dggea ,_aeaa ,_aeaa );
if _gdbef :=_dggea .Get ("\u0054\u0069\u0074l\u0065");_gdbef !=nil {_cgcdb ,_cega :=_caafd .newPdfOutlineItemFromIndirectObject (_aeaa );if _cega !=nil {return nil ,nil ,_cega ;};_cgcdb .Parent =_abfcc ;_cgcdb .Prev =_dbaab ;_fgeag :=_gbd .ResolveReference (_dggea .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_fgde :=_cgaae [_fgeag ];_fgeag !=nil &&_fgeag !=_aeaa &&!_fgde {if !_gbd .IsNullObject (_fgeag ){_eddff ,_dedfbe ,_cfba :=_caafd .buildOutlineTree (_fgeag ,&_cgcdb .PdfOutlineTreeNode ,nil ,_cgaae );if _cfba !=nil {_db .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_cfba );
}else {_cgcdb .First =_eddff ;_cgcdb .Last =_dedfbe ;};};};_efcfgg :=_gbd .ResolveReference (_dggea .Get ("\u004e\u0065\u0078\u0074"));if _ ,_decgfd :=_cgaae [_efcfgg ];_efcfgg !=nil &&_efcfgg !=_aeaa &&!_decgfd {if !_gbd .IsNullObject (_efcfgg ){_fcaac ,_gceef ,_fegef :=_caafd .buildOutlineTree (_efcfgg ,_abfcc ,&_cgcdb .PdfOutlineTreeNode ,_cgaae );
if _fegef !=nil {_db .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_fegef );
}else {_cgcdb .Next =_fcaac ;return &_cgcdb .PdfOutlineTreeNode ,_gceef ,nil ;};};};return &_cgcdb .PdfOutlineTreeNode ,&_cgcdb .PdfOutlineTreeNode ,nil ;};_eccaa ,_affee :=_fbcbc (_aeaa );if _affee !=nil {return nil ,nil ,_affee ;};_eccaa .Parent =_abfcc ;
if _fcdb :=_dggea .Get ("\u0046\u0069\u0072s\u0074");_fcdb !=nil {_fcdb =_gbd .ResolveReference (_fcdb );if _ ,_ddbedc :=_cgaae [_fcdb ];_fcdb !=nil &&_fcdb !=_aeaa &&!_ddbedc {_gefba :=_gbd .TraceToDirectObject (_fcdb );if _ ,_faedg :=_gefba .(*_gbd .PdfObjectNull );
!_faedg &&_gefba !=nil {_dega ,_ebdbc ,_daaef :=_caafd .buildOutlineTree (_fcdb ,&_eccaa .PdfOutlineTreeNode ,nil ,_cgaae );if _daaef !=nil {_db .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_daaef );
}else {_eccaa .First =_dega ;_eccaa .Last =_ebdbc ;};};};};return &_eccaa .PdfOutlineTreeNode ,&_eccaa .PdfOutlineTreeNode ,nil ;};

// B returns the value of the blue component of the color.
func (_cafc *PdfColorDeviceRGB )B ()float64 {return _cafc [2]};func (_gce *PdfReader )newPdfAnnotationPopupFromDict (_dcdc *_gbd .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dagb :=PdfAnnotationPopup {};_dagb .Parent =_dcdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_dagb .Open =_dcdc .Get ("\u004f\u0070\u0065\u006e");return &_dagb ,nil ;};

// GetBorderWidth returns the border style's width.
func (_daa *PdfBorderStyle )GetBorderWidth ()float64 {if _daa .W ==nil {return 1;};return *_daa .W ;};func (_eag *PdfReader )newPdfAnnotationRichMediaFromDict (_feag *_gbd .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_aaed :=&PdfAnnotationRichMedia {};
_aaed .RichMediaSettings =_feag .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_aaed .RichMediaContent =_feag .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _aaed ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bfgcg *PdfColorspaceCalRGB )ToPdfObject ()_gbd .PdfObject {_efcd :=&_gbd .PdfObjectArray {};_efcd .Append (_gbd .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ecafc :=_gbd .MakeDict ();if _bfgcg .WhitePoint !=nil {_ccdb :=_gbd .MakeArray (_gbd .MakeFloat (_bfgcg .WhitePoint [0]),_gbd .MakeFloat (_bfgcg .WhitePoint [1]),_gbd .MakeFloat (_bfgcg .WhitePoint [2]));
_ecafc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ccdb );}else {_db .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _bfgcg .BlackPoint !=nil {_dfbb :=_gbd .MakeArray (_gbd .MakeFloat (_bfgcg .BlackPoint [0]),_gbd .MakeFloat (_bfgcg .BlackPoint [1]),_gbd .MakeFloat (_bfgcg .BlackPoint [2]));_ecafc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dfbb );
};if _bfgcg .Gamma !=nil {_eeaef :=_gbd .MakeArray (_gbd .MakeFloat (_bfgcg .Gamma [0]),_gbd .MakeFloat (_bfgcg .Gamma [1]),_gbd .MakeFloat (_bfgcg .Gamma [2]));_ecafc .Set ("\u0047\u0061\u006dm\u0061",_eeaef );};if _bfgcg .Matrix !=nil {_ggc :=_gbd .MakeArray (_gbd .MakeFloat (_bfgcg .Matrix [0]),_gbd .MakeFloat (_bfgcg .Matrix [1]),_gbd .MakeFloat (_bfgcg .Matrix [2]),_gbd .MakeFloat (_bfgcg .Matrix [3]),_gbd .MakeFloat (_bfgcg .Matrix [4]),_gbd .MakeFloat (_bfgcg .Matrix [5]),_gbd .MakeFloat (_bfgcg .Matrix [6]),_gbd .MakeFloat (_bfgcg .Matrix [7]),_gbd .MakeFloat (_bfgcg .Matrix [8]));
_ecafc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggc );};_efcd .Append (_ecafc );if _bfgcg ._ceca !=nil {_bfgcg ._ceca .PdfObject =_efcd ;return _bfgcg ._ceca ;};return _efcd ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dbbff *PdfInfo )AddCustomInfo (name string ,value string )error {if _dbbff ._bafb ==nil {_dbbff ._bafb =_gbd .MakeDict ();};if _ ,_gdba :=_abbc [name ];_gdba {return _a .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dbbff ._bafb .SetIfNotNil (*_gbd .MakeName (name ),_gbd .MakeString (value ));return nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_dcbd :=PdfColorCalGray (grayVal );return &_dcbd ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_beaf pdfFontType0 )GetRuneMetrics (r rune )(_fad .CharMetrics ,bool ){if _beaf .DescendantFont ==nil {_db .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_beaf );
return _fad .CharMetrics {},false ;};return _beaf .DescendantFont .GetRuneMetrics (r );};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cedf *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cgfg []float64 ;for _cgbd :=0;_cgbd < _cedf .GetNumComponents ();_cgbd ++{_cgfg =append (_cgfg ,0.0,1.0);};return _cgfg ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_dcfd *PdfPageResourcesColorspaces )Set (key _gbd .PdfObjectName ,val PdfColorspace ){if _ ,_cbdf :=_dcfd .Colorspaces [string (key )];!_cbdf {_dcfd .Names =append (_dcfd .Names ,string (key ));};_dcfd .Colorspaces [string (key )]=val ;};func (_gdfc *PdfField )inherit (_aagca func (*PdfField )bool )(bool ,error ){_fcffb :=map[*PdfField ]bool {};
_dcfb :=false ;_ceddc :=_gdfc ;for _ceddc !=nil {if _ ,_caeec :=_fcffb [_ceddc ];_caeec {return false ,_ff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_ggeedd :=_aagca (_ceddc );if _ggeedd {_dcfb =true ;
break ;};_fcffb [_ceddc ]=true ;_ceddc =_ceddc .Parent ;};return _dcfb ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bfde *PdfFont )CharcodesToUnicodeWithStats (charcodes []_dc .CharCode )(_dgccbg []rune ,_gcff ,_fdcc int ){_bcbc ,_gcff ,_fdcc :=_bfde .CharcodesToStrings (charcodes );return []rune (_fc .Join (_bcbc ,"")),_gcff ,_fdcc ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cbeg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cbeg .GetNumComponents (){return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcaeg ,_eabff :=_cbeg .TintTransform .Evaluate (vals );
if _eabff !=nil {return nil ,_eabff ;};_acagce ,_eabff :=_cbeg .AlternateSpace .ColorFromFloats (_bcaeg );if _eabff !=nil {return nil ,_eabff ;};return _acagce ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_bbf :=NewPdfAnnotation ();_abca :=&PdfAnnotationLine {};_abca .PdfAnnotation =_bbf ;_abca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbf .SetContext (_abca );return _abca ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_aagcd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dbca :=&PdfAppender {_bfcd :reader ._afbb ,Reader :reader ,_abgb :reader ._dagg ,_cdgd :reader ._dcag };_fdbd ,_gcaf :=_dbca ._bfcd .Seek (0,_acga .SeekEnd );if _gcaf !=nil {return nil ,_gcaf ;
};_dbca ._bbeg =_fdbd ;if _ ,_gcaf =_dbca ._bfcd .Seek (0,_acga .SeekStart );_gcaf !=nil {return nil ,_gcaf ;};_dbca ._fafd ,_gcaf =NewPdfReader (_dbca ._bfcd );if _gcaf !=nil {return nil ,_gcaf ;};for _ ,_bdea :=range _dbca .Reader .GetObjectNums (){if _dbca ._cdg < _bdea {_dbca ._cdg =_bdea ;
};};_dbca ._ebcb =_dbca ._abgb .GetXrefTable ();_dbca ._cacg =_dbca ._abgb .GetXrefOffset ();_dbca ._ccbcf =append (_dbca ._ccbcf ,_dbca ._fafd .PageList ...);_dbca ._gbcd =make (map[_gbd .PdfObject ]struct{});_dbca ._fddd =make (map[_gbd .PdfObject ]int64 );
_dbca ._afff =make (map[_gbd .PdfObject ]struct{});_dbca ._ebcd =_dbca ._fafd .AcroForm ;_dbca ._caa =_dbca ._fafd .DSS ;return _dbca ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gbgb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_bgda *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_db .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToInteger convert to an integer format.
func (_cfgb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_efa :=_ga .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_efa *_cfgb .A ()),uint32 (_efa *_cfgb .B ()),uint32 (_efa *_cfgb .C ())};};func _gabfbe (_dbed map[_fad .GID ]int ,_dfbgf uint16 )*_gbd .PdfObjectArray {_afaab :=&_gbd .PdfObjectArray {};
_ffbbg :=_fad .GID (_dfbgf );for _bfcg :=_fad .GID (0);_bfcg < _ffbbg ;{_fffce ,_deacb :=_dbed [_bfcg ];if !_deacb {_bfcg ++;continue ;};_bcdf :=_bfcg ;for _dbefe :=_bcdf +1;_dbefe < _ffbbg ;_dbefe ++{if _fdag ,_edgag :=_dbed [_dbefe ];!_edgag ||_fffce !=_fdag {break ;
};_bcdf =_dbefe ;};_afaab .Append (_gbd .MakeInteger (int64 (_bfcg )));_afaab .Append (_gbd .MakeInteger (int64 (_bcdf )));_afaab .Append (_gbd .MakeInteger (int64 (_fffce )));_bfcg =_bcdf +1;};return _afaab ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_fcffa *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gbff :=_fcffa .actualFont ();if _gbff ==nil {_db .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_fcffa ._bbddd );
return _fad .CharMetrics {},false ;};if _abcfd ,_eege :=_gbff .GetRuneMetrics (r );_eege {return _abcfd ,true ;};if _bfaa ,_dgbd :=_fcffa .GetFontDescriptor ();_dgbd ==nil &&_bfaa !=nil {return _fad .CharMetrics {Wx :_bfaa ._dcbc },true ;};_db .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fcffa );
return _fad .CharMetrics {},false ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_efdb :=appender .Reader .DSS ;if _efdb ==nil {_efdb =NewDSS ();};if _acece :=_efdb .generateHashMaps ();_acece !=nil {return nil ,_acece ;};return &LTV {CertClient :_bfe .NewCertClient (),OCSPClient :_bfe .NewOCSPClient (),CRLClient :_bfe .NewCRLClient (),SkipExisting :true ,_aacee :appender ,_eefce :_efdb },nil ;
};func _gaeaf (_egdgg _gbd .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ddbc :=&PdfColorspaceDeviceNAttributes {};var _bgged *_gbd .PdfObjectDictionary ;switch _gbee :=_egdgg .(type ){case *_gbd .PdfIndirectObject :_ddbc ._fcafb =_gbee ;var _faag bool ;
_bgged ,_faag =_gbee .PdfObject .(*_gbd .PdfObjectDictionary );if !_faag {_db .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};case *_gbd .PdfObjectDictionary :_bgged =_gbee ;case *_gbd .PdfObjectReference :_faff :=_gbee .Resolve ();return _gaeaf (_faff );default:_db .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dabd :=_bgged .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dabd !=nil {_bccd ,_cdbg :=_gbd .TraceToDirectObject (_dabd ).(*_gbd .PdfObjectName );if !_cdbg {_db .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ddbc .Subtype =_bccd ;};if _egegd :=_bgged .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_egegd !=nil {_ddbc .Colorants =_egegd ;};if _eada :=_bgged .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_eada !=nil {_ddbc .Process =_eada ;};if _ebfbf :=_bgged .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ebfbf !=nil {_ddbc .MixingHints =_ebfbf ;};return _ddbc ,nil ;};func (_agac *PdfReader )newPdfAnnotationSoundFromDict (_febd *_gbd .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dafd :=PdfAnnotationSound {};
_bcfde ,_ecgg :=_agac .newPdfAnnotationMarkupFromDict (_febd );if _ecgg !=nil {return nil ,_ecgg ;};_dafd .PdfAnnotationMarkup =_bcfde ;_dafd .Name =_febd .Get ("\u004e\u0061\u006d\u0065");_dafd .Sound =_febd .Get ("\u0053\u006f\u0075n\u0064");return &_dafd ,nil ;
};func (_dbec fontCommon )fontFlags ()int {if _dbec ._ggff ==nil {return 0;};return _dbec ._ggff ._cdfaa ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_afbd *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_acaag :=PdfPage {};_acaag ._abccg =_gbd .MakeDict ();_acaag .Resources =NewPdfPageResources ();_dcdb :=_gbd .PdfIndirectObject {};_dcdb .PdfObject =_acaag ._abccg ;_acaag ._fgbbe =&_dcdb ;return &_acaag ;};