//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_f "bufio";_dga "bytes";_gg "crypto/md5";_db "crypto/rand";_ca "crypto/sha1";_ed "crypto/x509";_d "encoding/binary";_e "encoding/hex";_cab "errors";_g "fmt";_dbg "github.com/unidoc/pkcs7";_gc "github.com/unidoc/unipdf/v3/common";
_df "github.com/unidoc/unipdf/v3/core";_gcf "github.com/unidoc/unipdf/v3/core/security";_ad "github.com/unidoc/unipdf/v3/core/security/crypt";_fea "github.com/unidoc/unipdf/v3/internal/cmap";_fbg "github.com/unidoc/unipdf/v3/internal/imageutil";_eec "github.com/unidoc/unipdf/v3/internal/license";
_ac "github.com/unidoc/unipdf/v3/internal/sampling";_cfe "github.com/unidoc/unipdf/v3/internal/textencoding";_dd "github.com/unidoc/unipdf/v3/internal/timeutils";_ec "github.com/unidoc/unipdf/v3/internal/transform";_bee "github.com/unidoc/unipdf/v3/model/internal/docutil";
_aec "github.com/unidoc/unipdf/v3/model/internal/fonts";_ggd "github.com/unidoc/unipdf/v3/model/mdp";_fe "github.com/unidoc/unipdf/v3/model/sigutil";_ae "github.com/unidoc/unipdf/v3/ps";_ee "github.com/unidoc/unitype";_add "golang.org/x/xerrors";_ce "hash";
_cd "image";_dbc "image/color";_ "image/gif";_ "image/png";_dg "io";_ef "io/ioutil";_bf "math";_ba "math/rand";_fb "os";_cfb "regexp";_gb "sort";_ga "strconv";_fg "strings";_b "sync";_cb "time";_da "unicode";_a "unicode/utf8";);func _bagb (_ecage _df .PdfObject )(*PdfFunctionType3 ,error ){_degcd :=&PdfFunctionType3 {};
var _dbgag *_df .PdfObjectDictionary ;if _edbeg ,_bfef :=_ecage .(*_df .PdfIndirectObject );_bfef {_cgcg ,_ebgbe :=_edbeg .PdfObject .(*_df .PdfObjectDictionary );if !_ebgbe {return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_degcd ._geddb =_edbeg ;_dbgag =_cgcg ;}else if _acbg ,_ffgc :=_ecage .(*_df .PdfObjectDictionary );_ffgc {_dbgag =_acbg ;}else {return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ceeeg ,_egdcg :=_df .TraceToDirectObject (_dbgag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );
if !_egdcg {_gc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ceeeg .Len ()!=2{_gc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cab .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bbcae ,_gdac :=_ceeeg .ToFloat64Array ();
if _gdac !=nil {return nil ,_gdac ;};_degcd .Domain =_bbcae ;_ceeeg ,_egdcg =_df .TraceToDirectObject (_dbgag .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if _egdcg {if _ceeeg .Len ()< 0||_ceeeg .Len ()%2!=0{return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gccfg ,_bcagc :=_ceeeg .ToFloat64Array ();if _bcagc !=nil {return nil ,_bcagc ;};_degcd .Range =_gccfg ;};_ceeeg ,_egdcg =_df .TraceToDirectObject (_dbgag .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_df .PdfObjectArray );if !_egdcg {_gc .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_degcd .Functions =[]PdfFunction {};
for _ ,_ccae :=range _ceeeg .Elements (){_eccf ,_debd :=_ebcf (_ccae );if _debd !=nil {return nil ,_debd ;};_degcd .Functions =append (_degcd .Functions ,_eccf );};_ceeeg ,_egdcg =_df .TraceToDirectObject (_dbgag .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_df .PdfObjectArray );
if !_egdcg {_gc .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_geegd ,_gdac :=_ceeeg .ToFloat64Array ();if _gdac !=nil {return nil ,_gdac ;};_degcd .Bounds =_geegd ;if len (_degcd .Bounds )!=len (_degcd .Functions )-1{_gc .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_degcd .Bounds ),len (_degcd .Functions ));
return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceeeg ,_egdcg =_df .TraceToDirectObject (_dbgag .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_df .PdfObjectArray );if !_egdcg {_gc .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fcgbb ,_gdac :=_ceeeg .ToFloat64Array ();
if _gdac !=nil {return nil ,_gdac ;};_degcd .Encode =_fcgbb ;if len (_degcd .Encode )!=2*len (_degcd .Functions ){_gc .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_degcd .Encode ),len (_degcd .Functions ));
return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _degcd ,nil ;};func (_ecge *PdfReader )newPdfAnnotationPopupFromDict (_gggc *_df .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bgea :=PdfAnnotationPopup {};
_bgea .Parent =_gggc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bgea .Open =_gggc .Get ("\u004f\u0070\u0065\u006e");return &_bgea ,nil ;};func (_ecec *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func (_dbea *PdfReader )newPdfActionGotoFromDict (_dbeg *_df .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dbeg .Get ("\u0044")},nil ;
};func (_bdccd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject implements interface PdfModel.
func (_gada *PdfAnnotationPolyLine )ToPdfObject ()_df .PdfObject {_gada .PdfAnnotation .ToPdfObject ();_aeed :=_gada ._bef ;_ebae :=_aeed .PdfObject .(*_df .PdfObjectDictionary );_gada .PdfAnnotationMarkup .appendToPdfDictionary (_ebae );_ebae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_ebae .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gada .Vertices );_ebae .SetIfNotNil ("\u004c\u0045",_gada .LE );_ebae .SetIfNotNil ("\u0042\u0053",_gada .BS );_ebae .SetIfNotNil ("\u0049\u0043",_gada .IC );_ebae .SetIfNotNil ("\u0042\u0045",_gada .BE );
_ebae .SetIfNotNil ("\u0049\u0054",_gada .IT );_ebae .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gada .Measure );return _aeed ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_defeg *PdfPageResources )SetXObjectFormByName (keyName _df .PdfObjectName ,xform *XObjectForm )error {_ccaae :=xform .ToPdfObject ().(*_df .PdfObjectStream );_eedcb :=_defeg .SetXObjectByName (keyName ,_ccaae );return _eedcb ;};func _dgaca (_cceg *_df .PdfObjectDictionary )(*PdfFieldButton ,error ){_cgeba :=&PdfFieldButton {};
_cgeba .PdfField =NewPdfField ();_cgeba .PdfField .SetContext (_cgeba );_cgeba .Opt ,_ =_df .GetArray (_cceg .Get ("\u004f\u0070\u0074"));_agedf :=NewPdfAnnotationWidget ();_agedf .A ,_ =_df .GetDict (_cceg .Get ("\u0041"));_agedf .AP ,_ =_df .GetDict (_cceg .Get ("\u0041\u0050"));
_agedf .SetContext (_cgeba );_cgeba .PdfField .Annotations =append (_cgeba .PdfField .Annotations ,_agedf );return _cgeba ,nil ;};func (_cc *PdfReader )newPdfActionSubmitFormFromDict (_eag *_df .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_ebbd ,_feg :=_ddfg (_eag .Get ("\u0046"));
if _feg !=nil {return nil ,_feg ;};return &PdfActionSubmitForm {F :_ebbd ,Fields :_eag .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eag .Get ("\u0046\u006c\u0061g\u0073")},nil ;};type pdfFontType3 struct{fontCommon ;_becf *_df .PdfIndirectObject ;


// These fields are specific to Type 3 fonts.
CharProcs _df .PdfObject ;Encoding _df .PdfObject ;FontBBox _df .PdfObject ;FontMatrix _df .PdfObject ;FirstChar _df .PdfObject ;LastChar _df .PdfObject ;Widths _df .PdfObject ;Resources _df .PdfObject ;_fbfg map[_cfe .CharCode ]float64 ;_gedgg _cfe .TextEncoder ;
};func _abag (_cfead _dg .ReadSeeker ,_adcce *ReaderOpts ,_aecab bool ,_cacgb string )(*PdfReader ,error ){if _adcce ==nil {_adcce =NewReaderOpts ();};_gfgab :=*_adcce ;_deaaf :=&PdfReader {_bdgca :_cfead ,_eafee :map[_df .PdfObject ]struct{}{},_cggbe :_egcea (),_afcgf :_adcce .LazyLoad ,_cbebe :_adcce .ComplianceMode ,_gbfbg :_aecab ,_aagfcb :&_gfgab };
_gaaeb ,_ddcbd :=_ebbff ("\u0072");if _ddcbd !=nil {return nil ,_ddcbd ;};_ddcbd =_eec .Track (_gaaeb ,_cacgb );if _ddcbd !=nil {return nil ,_ddcbd ;};_deaaf ._baffe =_gaaeb ;var _ggdd *_df .PdfParser ;if !_deaaf ._cbebe {_ggdd ,_ddcbd =_df .NewParser (_cfead );
}else {_ggdd ,_ddcbd =_df .NewCompliancePdfParser (_cfead );};if _ddcbd !=nil {return nil ,_ddcbd ;};_deaaf ._ecafc =_ggdd ;_dggd ,_ddcbd :=_deaaf .IsEncrypted ();if _ddcbd !=nil {return nil ,_ddcbd ;};if !_dggd {_ddcbd =_deaaf .loadStructure ();if _ddcbd !=nil {return nil ,_ddcbd ;
};}else if _aecab {_ggcef ,_decg :=_deaaf .Decrypt ([]byte (_adcce .Password ));if _decg !=nil {return nil ,_decg ;};if !_ggcef {return nil ,_cab .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_deaaf ._bbadeb =make (map[*PdfReader ]*PdfReader );_deaaf ._ababg =make ([]*PdfReader ,_ggdd .GetRevisionNumber ());return _deaaf ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_babf :=NewPdfAnnotation ();_abe :=&PdfAnnotationSquare {};_abe .PdfAnnotation =_babf ;_abe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_babf .SetContext (_abe );return _abe ;};func (_cbfb *PdfWriter )copyObjects (){_gffec :=make (map[_df .PdfObject ]_df .PdfObject );
_dcbecb :=make ([]_df .PdfObject ,0,len (_cbfb ._ccdbg ));_debdg :=make (map[_df .PdfObject ]struct{},len (_cbfb ._ccdbg ));_baddb :=make (map[_df .PdfObject ]struct{});for _ ,_eacfa :=range _cbfb ._ccdbg {_feggb :=_cbfb .copyObject (_eacfa ,_gffec ,_baddb ,false );
if _ ,_cbage :=_baddb [_eacfa ];_cbage {continue ;};_dcbecb =append (_dcbecb ,_feggb );_debdg [_feggb ]=struct{}{};};_cbfb ._ccdbg =_dcbecb ;_cbfb ._efced =_debdg ;_cbfb ._eadb =_cbfb .copyObject (_cbfb ._eadb ,_gffec ,nil ,false ).(*_df .PdfIndirectObject );
_cbfb ._dddgcc =_cbfb .copyObject (_cbfb ._dddgcc ,_gffec ,nil ,false ).(*_df .PdfIndirectObject );if _cbfb ._dfeeb !=nil {_cbfb ._dfeeb =_cbfb .copyObject (_cbfb ._dfeeb ,_gffec ,nil ,false ).(*_df .PdfIndirectObject );};if _cbfb ._aaegc {_cefee :=make (map[_df .PdfObject ]int64 );
for _agagg ,_ffeec :=range _cbfb ._geagg {if _bgbca ,_adccc :=_gffec [_agagg ];_adccc {_cefee [_bgbca ]=_ffeec ;}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_cbfb ._geagg =_cefee ;};};func (_bdafa *PdfWriter )makeOffSetReference (_dfdbd int64 ){_cfccg :=_g .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_dfdbd );_bdafa .writeString (_cfccg );_bdafa .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};func _geeg (_cacea StdFontName )(pdfFontSimple ,error ){_cddab ,_cecd :=_aec .NewStdFontByName (_cacea );if !_cecd {return pdfFontSimple {},ErrFontNotSupported ;};_afbca :=_gagd (_cddab );return _afbca ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_babd *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fegb :=vals [0];if _fegb < 0.0||_fegb > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fegb );
return nil ,ErrColorOutOfRange ;};_eaee :=NewPdfColorCalGray (_fegb );return _eaee ,nil ;};func (_bccac *PdfWriter )checkPendingObjects (){for _ddgae ,_dgedc :=range _bccac ._ccbecd {if !_bccac .hasObject (_ddgae ){_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_ddgae ,_ddgae ,_ddgae );
for _ ,_ggeeg :=range _dgedc {for _ ,_daace :=range _ggeeg .Keys (){_aedg :=_ggeeg .Get (_daace );if _aedg ==_ddgae {_gc .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_ggeeg .Set (_daace ,_df .MakeNull ());break ;};};};};};};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_degbf *PdfReader )GetCatalogMetadata ()(_df .PdfObject ,bool ){if _degbf ._fegcd ==nil {return nil ,false ;};_bdcff :=_degbf ._fegcd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _bdcff ,_bdcff !=nil ;};func (_gefc *PdfReader )newPdfAnnotationMarkupFromDict (_adfb *_df .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_gdf :=&PdfAnnotationMarkup {};
if _eebc :=_adfb .Get ("\u0054");_eebc !=nil {_gdf .T =_eebc ;};if _cae :=_adfb .Get ("\u0050\u006f\u0070u\u0070");_cae !=nil {_cfg ,_bfdg :=_cae .(*_df .PdfIndirectObject );if !_bfdg {if _ ,_edcd :=_cae .(*_df .PdfObjectNull );!_edcd {return nil ,_cab .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_debf ,_bfdaf :=_gefc .newPdfAnnotationFromIndirectObject (_cfg );if _bfdaf !=nil {return nil ,_bfdaf ;};if _debf !=nil {_dfdef ,_bbaf :=_debf ._ged .(*PdfAnnotationPopup );if !_bbaf {return nil ,_cab .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_gdf .Popup =_dfdef ;};};};if _dbcf :=_adfb .Get ("\u0043\u0041");_dbcf !=nil {_gdf .CA =_dbcf ;};if _fdfc :=_adfb .Get ("\u0052\u0043");_fdfc !=nil {_gdf .RC =_fdfc ;};if _dbag :=_adfb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_dbag !=nil {_gdf .CreationDate =_dbag ;};if _cfga :=_adfb .Get ("\u0049\u0052\u0054");_cfga !=nil {_gdf .IRT =_cfga ;};if _edda :=_adfb .Get ("\u0053\u0075\u0062\u006a");_edda !=nil {_gdf .Subj =_edda ;};if _fafe :=_adfb .Get ("\u0052\u0054");_fafe !=nil {_gdf .RT =_fafe ;
};if _ffa :=_adfb .Get ("\u0049\u0054");_ffa !=nil {_gdf .IT =_ffa ;};if _efa :=_adfb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_efa !=nil {_gdf .ExData =_efa ;};return _gdf ,nil ;};func _gecg (_ebgb string )map[string ]string {_feff :=_dfceb .Split (_ebgb ,-1);
_dgcd :=map[string ]string {};for _ ,_cegag :=range _feff {_ceabd :=_agfeb .FindStringSubmatch (_cegag );if _ceabd ==nil {continue ;};_ggea ,_cdegd :=_ceabd [1],_ceabd [2];_dgcd [_ggea ]=_cdegd ;};return _dgcd ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_aec .CharMetrics ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_aggb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// Encoder returns the font's text encoder.
func (_cfacd pdfFontType3 )Encoder ()_cfe .TextEncoder {return _cfacd ._gedgg };

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_gdgff *PdfFieldButton )IsCheckbox ()bool {return _gdgff .GetType ()==ButtonTypeCheckbox };

// ToPdfObject implements interface PdfModel.
func (_badc *PdfAnnotationSound )ToPdfObject ()_df .PdfObject {_badc .PdfAnnotation .ToPdfObject ();_edad :=_badc ._bef ;_cgca :=_edad .PdfObject .(*_df .PdfObjectDictionary );_badc .PdfAnnotationMarkup .appendToPdfDictionary (_cgca );_cgca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u006f\u0075n\u0064"));
_cgca .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_badc .Sound );_cgca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_badc .Name );return _edad ;};func (_aabe *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _aabe ._cada };

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_cef :=NewPdfAction ();_bfb :=&PdfActionJavaScript {};_bfb .PdfAction =_cef ;_cef .SetContext (_bfb );return _bfb ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gcgc *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gcgc .baseFields ()._cada !=nil {return _gcgc .baseFields ()._cada ;};if _dbcceb :=_gcgc ._dfffe .getFontDescriptor ();_dbcceb !=nil {return _dbcceb ;};_gc .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gcgc );
return nil ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_fafef :=&PdfColorPatternType3 {};return _fafef ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_gcb :=NewPdfAction ();_cff :=&PdfActionNamed {};_cff .PdfAction =_gcb ;_gcb .SetContext (_cff );return _cff ;};

// AddOutlineTree adds outlines to a PDF file.
func (_adcgd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_adcgd ._ceceea =outlineTree ;};func (_afdea *PdfWriter )addObjects (_efecc _df .PdfObject )error {_gc .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _fafbc ,_ggcd :=_efecc .(*_df .PdfIndirectObject );_ggcd {_gc .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_gc .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_efecc ,_fafbc );_gc .Log .Trace ("\u002d\u0020\u0025\u0073",_fafbc .PdfObject );
if _afdea .addObject (_fafbc ){_cccdb :=_afdea .addObjects (_fafbc .PdfObject );if _cccdb !=nil {return _cccdb ;};};return nil ;};if _bbcbe ,_bdbgb :=_efecc .(*_df .PdfObjectStream );_bdbgb {_gc .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_gc .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_efecc ,_efecc );
if _afdea .addObject (_bbcbe ){_eaabgb :=_afdea .addObjects (_bbcbe .PdfObjectDictionary );if _eaabgb !=nil {return _eaabgb ;};};return nil ;};if _cbbgb ,_cfcf :=_efecc .(*_df .PdfObjectDictionary );_cfcf {_gc .Log .Trace ("\u0044\u0069\u0063\u0074");_gc .Log .Trace ("\u002d\u0020\u0025\u0073",_efecc );
for _ ,_cgdfd :=range _cbbgb .Keys (){_eafcc :=_cbbgb .Get (_cgdfd );if _edefbf ,_bffdd :=_eafcc .(*_df .PdfObjectReference );_bffdd {_eafcc =_edefbf .Resolve ();_cbbgb .Set (_cgdfd ,_eafcc );};if _cgdfd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _cegdg :=_afdea .addObjects (_eafcc );
_cegdg !=nil {return _cegdg ;};}else {if _ ,_abgad :=_eafcc .(*_df .PdfObjectNull );_abgad {continue ;};if _cbagg :=_afdea .hasObject (_eafcc );!_cbagg {_gc .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_eafcc ,_eafcc ,_eafcc );
_afdea ._ccbecd [_eafcc ]=append (_afdea ._ccbecd [_eafcc ],_cbbgb );};};};return nil ;};if _ecbce ,_eebd :=_efecc .(*_df .PdfObjectArray );_eebd {_gc .Log .Trace ("\u0041\u0072\u0072a\u0079");_gc .Log .Trace ("\u002d\u0020\u0025\u0073",_efecc );if _ecbce ==nil {return _cab .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _aaffb ,_aaedb :=range _ecbce .Elements (){if _dcfcc ,_dbgae :=_aaedb .(*_df .PdfObjectReference );_dbgae {_aaedb =_dcfcc .Resolve ();_ecbce .Set (_aaffb ,_aaedb );};if _cebdd :=_afdea .addObjects (_aaedb );_cebdd !=nil {return _cebdd ;};};return nil ;
};if _ ,_efbfa :=_efecc .(*_df .PdfObjectReference );_efbfa {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_efecc );
return _cab .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_addaa :_df .MakeDict ()};
};func _abeae (_gacdg *_df .PdfObjectDictionary )(*PdfShadingType2 ,error ){_fdffb :=PdfShadingType2 {};_gbeba :=_gacdg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gbeba ==nil {_gc .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_acadf ,_ffda :=_gbeba .(*_df .PdfObjectArray );if !_ffda {_gc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbeba );
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _acadf .Len ()!=4{_gc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acadf .Len ());
return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_fdffb .Coords =_acadf ;if _bccfba :=_gacdg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bccfba !=nil {_bccfba =_df .TraceToDirectObject (_bccfba );
_cbdbd ,_fagfg :=_bccfba .(*_df .PdfObjectArray );if !_fagfg {_gc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bccfba );return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fdffb .Domain =_cbdbd ;};_gbeba =_gacdg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gbeba ==nil {_gc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fdffb .Function =[]PdfFunction {};if _degf ,_dacdd :=_gbeba .(*_df .PdfObjectArray );_dacdd {for _ ,_acgfc :=range _degf .Elements (){_bfgge ,_ddcaa :=_ebcf (_acgfc );if _ddcaa !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcaa );
return nil ,_ddcaa ;};_fdffb .Function =append (_fdffb .Function ,_bfgge );};}else {_cacgf ,_gagfb :=_ebcf (_gbeba );if _gagfb !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gagfb );
return nil ,_gagfb ;};_fdffb .Function =append (_fdffb .Function ,_cacgf );};if _dafc :=_gacdg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dafc !=nil {_dafc =_df .TraceToDirectObject (_dafc );_ecdea ,_abdg :=_dafc .(*_df .PdfObjectArray );if !_abdg {_gc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dafc );
return nil ,_df .ErrTypeError ;};if _ecdea .Len ()!=2{_gc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ecdea .Len ());return nil ,ErrInvalidAttribute ;
};_fdffb .Extend =_ecdea ;};return &_fdffb ,nil ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ddfd *pdfFontSimple )SetEncoder (encoder _cfe .TextEncoder ){_ddfd ._agga =encoder };

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fgba :=&PdfBorderStyle {};return _fgba };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fgcf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeeb :=vals [0];if _eeeb < 0.0||_eeeb > 1.0{_gc .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _eeeb < 0.0{_eeeb =0.0;}else if _eeeb > 1.0{_eeeb =1.0;};return NewPdfColorDeviceGray (_eeeb ),nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_eg PdfModel ;Type _df .PdfObject ;S _df .PdfObject ;Next _df .PdfObject ;_de *_df .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_ceage *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gdab :=_bf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gdab *_ceage .R ()),uint32 (_gdab *_ceage .G ()),uint32 (_gdab *_ceage .B ())};};func (_cdba *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddbdab *PdfShadingType6 )ToPdfObject ()_df .PdfObject {_ddbdab .PdfShading .ToPdfObject ();_efgec ,_ecded :=_ddbdab .getShadingDict ();if _ecded !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ddbdab .BitsPerCoordinate !=nil {_efgec .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ddbdab .BitsPerCoordinate );};if _ddbdab .BitsPerComponent !=nil {_efgec .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ddbdab .BitsPerComponent );
};if _ddbdab .BitsPerFlag !=nil {_efgec .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ddbdab .BitsPerFlag );};if _ddbdab .Decode !=nil {_efgec .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ddbdab .Decode );};if _ddbdab .Function !=nil {if len (_ddbdab .Function )==1{_efgec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddbdab .Function [0].ToPdfObject ());
}else {_bgdee :=_df .MakeArray ();for _ ,_aafae :=range _ddbdab .Function {_bgdee .Append (_aafae .ToPdfObject ());};_efgec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgdee );};};return _ddbdab ._aedee ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dacd *PdfFieldButton )GetType ()ButtonType {_gccad :=ButtonTypeCheckbox ;if _dacd .Ff !=nil {if (uint32 (*_dacd .Ff )&FieldFlagPushbutton .Mask ())> 0{_gccad =ButtonTypePush ;}else if (uint32 (*_dacd .Ff )&FieldFlagRadio .Mask ())> 0{_gccad =ButtonTypeRadio ;
};};return _gccad ;};

// IsSimple returns true if `font` is a simple font.
func (_bceg *PdfFont )IsSimple ()bool {_ ,_cdgb :=_bceg ._dfffe .(*pdfFontSimple );return _cdgb };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _df .PdfObject ;Mac _df .PdfObject ;Unix _df .PdfObject ;NewWindow _df .PdfObject ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cgbbe *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _df .GetNumberAsFloat (_cgbbe .CapHeight );};

// Items returns all children outline items.
func (_aedad *Outline )Items ()[]*OutlineItem {return _aedad .Entries };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_fbfc DefaultImageHandler )Read (reader _dg .Reader )(*Image ,error ){_aafde ,_ ,_fcbdb :=_cd .Decode (reader );if _fcbdb !=nil {_gc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_fcbdb );
return nil ,_fcbdb ;};return _fbfc .NewImageFromGoImage (_aafde );};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _df .PdfObjectName ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _df .PdfObject ;MK _df .PdfObject ;A _df .PdfObject ;AA _df .PdfObject ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_dbac :=NewPdfAction ();_ade :=&PdfActionTrans {};_ade .PdfAction =_dbac ;_dbac .SetContext (_ade );return _ade ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_cagac *PdfWriter )SetCatalogMetadata (meta _df .PdfObject )error {if meta ==nil {_cagac ._dffed .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_fedcg ,_abfcf :=_df .GetStream (meta );if !_abfcf {return _cab .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_cagac .addObject (_fedcg );_cagac ._dffed .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fedcg );return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_edfeg *PdfSignatureReference )GetContainingPdfObject ()_df .PdfObject {return _edfeg ._adbabb };

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_afcc :=NewPdfAnnotation ();_cebc :=&PdfAnnotationText {};_cebc .PdfAnnotation =_afcc ;_cebc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afcc .SetContext (_cebc );return _cebc ;};

// ToPdfObject implements interface PdfModel.
func (_bbee *PdfAnnotationStamp )ToPdfObject ()_df .PdfObject {_bbee .PdfAnnotation .ToPdfObject ();_bdee :=_bbee ._bef ;_gfaa :=_bdee .PdfObject .(*_df .PdfObjectDictionary );_bbee .PdfAnnotationMarkup .appendToPdfDictionary (_gfaa );_gfaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0074\u0061m\u0070"));
_gfaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbee .Name );return _bdee ;};func (_aaaa *PdfReader )newPdfActionTransFromDict (_gdee *_df .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gdee .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_gdd :=NewPdfAnnotation ();_ece :=&PdfAnnotationPrinterMark {};_ece .PdfAnnotation =_gdd ;_gdd .SetContext (_ece );return _ece ;};func (_fegab *PdfFont )baseFields ()*fontCommon {if _fegab ._dfffe ==nil {_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _fegab ._dfffe .baseFields ();};func (_geafd *PdfWriter )setDocInfo (_dbada _df .PdfObject ){if _geafd .hasObject (_geafd ._eadb ){delete (_geafd ._efced ,_geafd ._eadb );delete (_geafd ._bdfae ,_geafd ._eadb );for _fcdac ,_abdb :=range _geafd ._ccdbg {if _abdb ==_geafd ._eadb {copy (_geafd ._ccdbg [_fcdac :],_geafd ._ccdbg [_fcdac +1:]);
_geafd ._ccdbg [len (_geafd ._ccdbg )-1]=nil ;_geafd ._ccdbg =_geafd ._ccdbg [:len (_geafd ._ccdbg )-1];break ;};};};_facgf :=_df .PdfIndirectObject {};_facgf .PdfObject =_dbada ;_geafd ._eadb =&_facgf ;_geafd .addObject (&_facgf );};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);func (_gffc PdfFont )actualFont ()pdfFont {if _gffc ._dfffe ==nil {_gc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gffc );
};return _gffc ._dfffe ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fdce *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_bffbf *PdfReader )Inspect ()(map[string ]int ,error ){return _bffbf ._ecafc .Inspect ()};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ggge *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcedg *PdfShadingType3 )ToPdfObject ()_df .PdfObject {_gcedg .PdfShading .ToPdfObject ();_aafcc ,_gecdg :=_gcedg .getShadingDict ();if _gecdg !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gcedg .Coords !=nil {_aafcc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gcedg .Coords );};if _gcedg .Domain !=nil {_aafcc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcedg .Domain );};if _gcedg .Function !=nil {if len (_gcedg .Function )==1{_aafcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcedg .Function [0].ToPdfObject ());
}else {_fddfa :=_df .MakeArray ();for _ ,_dcbcf :=range _gcedg .Function {_fddfa .Append (_dcbcf .ToPdfObject ());};_aafcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fddfa );};};if _gcedg .Extend !=nil {_aafcc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gcedg .Extend );
};return _gcedg ._aedee ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dbega *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_effg :=[]float64 {0.0};if _dbega .C0 !=nil {_effg =_dbega .C0 ;};_gfdf :=[]float64 {1.0};if _dbega .C1 !=nil {_gfdf =_dbega .C1 ;};var _bedb []float64 ;for _debc :=0;_debc < len (_effg );_debc ++{_cagc :=_effg [_debc ]+_bf .Pow (x [0],_dbega .N )*(_gfdf [_debc ]-_effg [_debc ]);
_bedb =append (_bedb ,_cagc );};return _bedb ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_gfgb *PdfField )ToPdfObject ()_df .PdfObject {_dfffd :=_gfgb ._gadcg ;_dcffe :=_dfffd .PdfObject .(*_df .PdfObjectDictionary );_bffa :=_df .MakeArray ();for _ ,_deef :=range _gfgb .Kids {_bffa .Append (_deef .ToPdfObject ());};for _ ,_dde :=range _gfgb .Annotations {if _dde ._bef !=_gfgb ._gadcg {_bffa .Append (_dde .GetContext ().ToPdfObject ());
};};if _gfgb .Parent !=nil {_dcffe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfgb .Parent .GetContainingPdfObject ());};if _bffa .Len ()> 0{_dcffe .Set ("\u004b\u0069\u0064\u0073",_bffa );};_dcffe .SetIfNotNil ("\u0046\u0054",_gfgb .FT );_dcffe .SetIfNotNil ("\u0054",_gfgb .T );
_dcffe .SetIfNotNil ("\u0054\u0055",_gfgb .TU );_dcffe .SetIfNotNil ("\u0054\u004d",_gfgb .TM );_dcffe .SetIfNotNil ("\u0046\u0066",_gfgb .Ff );_dcffe .SetIfNotNil ("\u0056",_gfgb .V );_dcffe .SetIfNotNil ("\u0044\u0056",_gfgb .DV );_dcffe .SetIfNotNil ("\u0041\u0041",_gfgb .AA );
if _gfgb .VariableText !=nil {_dcffe .SetIfNotNil ("\u0044\u0041",_gfgb .VariableText .DA );_dcffe .SetIfNotNil ("\u0051",_gfgb .VariableText .Q );_dcffe .SetIfNotNil ("\u0044\u0053",_gfgb .VariableText .DS );_dcffe .SetIfNotNil ("\u0052\u0056",_gfgb .VariableText .RV );
};return _dfffd ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fddd :=PdfColorDeviceRGB {r ,g ,b };return &_fddd ;};

// Encoder returns the font's text encoder.
func (_gegce *pdfFontSimple )Encoder ()_cfe .TextEncoder {if _gegce ._agga !=nil {return _gegce ._agga ;};if _gegce ._bebe !=nil {return _gegce ._bebe ;};_ebdbc ,_ :=_cfe .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ebdbc ;};func _bagf (_bbdbd _df .PdfObject )(*_df .PdfObjectDictionary ,*fontCommon ,error ){_fbeda :=&fontCommon {};if _ffeeb ,_dbcbe :=_bbdbd .(*_df .PdfIndirectObject );_dbcbe {_fbeda ._faag =_ffeeb .ObjectNumber ;};_fgcgg ,_becd :=_df .GetDict (_bbdbd );
if !_becd {_gc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bbdbd );
return nil ,nil ,ErrFontNotSupported ;};_fbdcd ,_becd :=_df .GetNameVal (_fgcgg .Get ("\u0054\u0079\u0070\u0065"));if !_becd {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fbdcd !="\u0046\u006f\u006e\u0074"{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fbdcd ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_df .ErrTypeError ;};_gebf ,_becd :=_df .GetNameVal (_fgcgg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_becd {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fbeda ._fbegd =_gebf ;_abba ,_becd :=_df .GetNameVal (_fgcgg .Get ("\u004e\u0061\u006d\u0065"));if _becd {_fbeda ._eaebf =_abba ;};_egec :=_fgcgg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _egec !=nil {_fbeda ._gdca =_df .TraceToDirectObject (_egec );
_dbcbef ,_cdddd :=_ecdag (_fbeda ._gdca ,_fbeda );if _cdddd !=nil {return _fgcgg ,_fbeda ,_cdddd ;};_fbeda ._eacb =_dbcbef ;}else if _gebf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gebf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fefe ,_gafgf :=_fea .NewCIDSystemInfo (_fgcgg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _gafgf !=nil {return _fgcgg ,_fbeda ,_gafgf ;};_fbdde :=_g .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fefe .Registry ,_fefe .Ordering );if _fea .IsPredefinedCMap (_fbdde ){_fbeda ._eacb ,_gafgf =_fea .LoadPredefinedCMap (_fbdde );
if _gafgf !=nil {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fbdde ,_gafgf );
};};};_dgca :=_fgcgg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dgca !=nil {_acffa ,_fdca :=_gfefg (_dgca );if _fdca !=nil {_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fdca );
return _fgcgg ,_fbeda ,_fdca ;};_fbeda ._cada =_acffa ;};if _gebf !="\u0054\u0079\u0070e\u0033"{_cbbg ,_fdee :=_df .GetNameVal (_fgcgg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fdee {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _fgcgg ,_fbeda ,ErrRequiredAttributeMissing ;};_fbeda ._gbgf =_cbbg ;};return _fgcgg ,_fbeda ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fgffa *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fabf ,_egaf :=_df .GetNumbersAsFloat (objects );
if _egaf !=nil {return nil ,_egaf ;};return _fgffa .ColorFromFloats (_fabf );};

// GetStandardApplier gets currently used StandardApplier..
func (_egfd *PdfWriter )GetStandardApplier ()StandardApplier {return _egfd ._ggbfa };func (_fedba *Image )samplesAddPadding (_gabc []uint32 )[]uint32 {_badad :=_fbg .BytesPerLine (int (_fedba .Width ),int (_fedba .BitsPerComponent ),_fedba .ColorComponents )*(8/int (_fedba .BitsPerComponent ));
_abaea :=_badad *int (_fedba .Height );if len (_gabc )==_abaea {return _gabc ;};_eeege :=make ([]uint32 ,_abaea );_eecg :=int (_fedba .Width )*_fedba .ColorComponents ;for _agfd :=0;_agfd < int (_fedba .Height );_agfd ++{_deaaa :=_agfd *int (_fedba .Width );
_dbebd :=_agfd *_badad ;for _befdb :=0;_befdb < _eecg ;_befdb ++{_eeege [_dbebd +_befdb ]=_gabc [_deaaa +_befdb ];};};return _eeege ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_df .PdfObject ,error );};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_dcdfe *PdfReader )GetEncryptionMethod ()string {_cecdf :=_dcdfe ._ecafc .GetCrypter ();return _cecdf .String ();};

// ToPdfObject implements interface PdfModel.
func (_adbf *PdfAnnotationLine )ToPdfObject ()_df .PdfObject {_adbf .PdfAnnotation .ToPdfObject ();_cbf :=_adbf ._bef ;_geea :=_cbf .PdfObject .(*_df .PdfObjectDictionary );_adbf .PdfAnnotationMarkup .appendToPdfDictionary (_geea );_geea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u004c\u0069\u006e\u0065"));
_geea .SetIfNotNil ("\u004c",_adbf .L );_geea .SetIfNotNil ("\u0042\u0053",_adbf .BS );_geea .SetIfNotNil ("\u004c\u0045",_adbf .LE );_geea .SetIfNotNil ("\u0049\u0043",_adbf .IC );_geea .SetIfNotNil ("\u004c\u004c",_adbf .LL );_geea .SetIfNotNil ("\u004c\u004c\u0045",_adbf .LLE );
_geea .SetIfNotNil ("\u0043\u0061\u0070",_adbf .Cap );_geea .SetIfNotNil ("\u0049\u0054",_adbf .IT );_geea .SetIfNotNil ("\u004c\u004c\u004f",_adbf .LLO );_geea .SetIfNotNil ("\u0043\u0050",_adbf .CP );_geea .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_adbf .Measure );
_geea .SetIfNotNil ("\u0043\u004f",_adbf .CO );return _cbf ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _df .PdfObject ;Sy _df .PdfObject ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cea :=NewPdfAnnotation ();_eaab :=&PdfAnnotationStrikeOut {};_eaab .PdfAnnotation =_cea ;_eaab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cea .SetContext (_eaab );return _eaab ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_df .PdfObject ;GetContainingPdfObject ()_df .PdfObject ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_babdb *PdfPage )error ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_aegg :=&PdfAppender {_eeddb :reader ._bdgca ,Reader :reader ,_fgcg :reader ._ecafc ,_gcd :reader ._eafee };_eagb ,_eeddf :=_aegg ._eeddb .Seek (0,_dg .SeekEnd );
if _eeddf !=nil {return nil ,_eeddf ;};_aegg ._ebbdf =_eagb ;if _ ,_eeddf =_aegg ._eeddb .Seek (0,_dg .SeekStart );_eeddf !=nil {return nil ,_eeddf ;};_aegg ._cfaba ,_eeddf =NewPdfReaderWithOpts (_aegg ._eeddb ,opts );if _eeddf !=nil {return nil ,_eeddf ;
};for _ ,_befb :=range _aegg .Reader .GetObjectNums (){if _aegg ._beb < _befb {_aegg ._beb =_befb ;};};_aegg ._ffae =_aegg ._fgcg .GetXrefTable ();_aegg ._ccfc =_aegg ._fgcg .GetXrefOffset ();_aegg ._ceee =append (_aegg ._ceee ,_aegg ._cfaba .PageList ...);
_aegg ._beaa =make (map[_df .PdfObject ]struct{});_aegg ._gaaca =make (map[_df .PdfObject ]int64 );_aegg ._efb =make (map[_df .PdfObject ]struct{});_aegg ._bcf =_aegg ._cfaba .AcroForm ;_aegg ._aed =_aegg ._cfaba .DSS ;if opts !=nil {_aegg ._fgfc =opts .Password ;
};if encryptOptions !=nil {_aegg ._gaae =encryptOptions ;};return _aegg ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// GetNumComponents returns the number of color components (1 for Separation).
func (_fcgc *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func _aagfa (_ecbdab *_df .PdfObjectDictionary ){_dgfba ,_afeae :=_df .GetArray (_ecbdab .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_eaae ,_bbbae :=_df .GetIntVal (_ecbdab .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_eddabd ,_bcfae :=_df .GetIntVal (_ecbdab .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _afeae &&_bbbae &&_bcfae {_bdga :=_dgfba .Len ();if _bdga !=_eddabd -_eaae +1{_gc .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_bdga ,_eddabd );
_abdec :=_df .PdfObjectInteger (_eaae +_bdga -1);_ecbdab .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_abdec );};};};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ddba :=&PdfColorspaceCalGray {};_ddba .BlackPoint =[]float64 {0.0,0.0,0.0};_ddba .Gamma =1;return _ddba ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_eegf :=NewPdfAction ();_gfb :=&PdfActionGoTo3DView {};_gfb .PdfAction =_eegf ;_eegf .SetContext (_gfb );return _gfb ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ffaa *pdfCIDFontType0 )ToPdfObject ()_df .PdfObject {return _df .MakeNull ()};func (_gcddd *PdfReader )buildOutlineTree (_bgeda _df .PdfObject ,_fdfb *PdfOutlineTreeNode ,_gbadd *PdfOutlineTreeNode ,_cdcc map[_df .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cdcc ==nil {_cdcc =map[_df .PdfObject ]struct{}{};
};_cdcc [_bgeda ]=struct{}{};_dbfce ,_ebagd :=_bgeda .(*_df .PdfIndirectObject );if !_ebagd {return nil ,nil ,_g .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_bgeda );
};_fegaf ,_fegbd :=_dbfce .PdfObject .(*_df .PdfObjectDictionary );if !_fegbd {return nil ,nil ,_cab .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fegaf ,_dbfce ,_dbfce );
if _ebeb :=_fegaf .Get ("\u0054\u0069\u0074l\u0065");_ebeb !=nil {_gfcda ,_effcd :=_gcddd .newPdfOutlineItemFromIndirectObject (_dbfce );if _effcd !=nil {return nil ,nil ,_effcd ;};_gfcda .Parent =_fdfb ;_gfcda .Prev =_gbadd ;_dcfca :=_df .ResolveReference (_fegaf .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_deeda :=_cdcc [_dcfca ];_dcfca !=nil &&_dcfca !=_dbfce &&!_deeda {if !_df .IsNullObject (_dcfca ){_caba ,_bdbae ,_adafbf :=_gcddd .buildOutlineTree (_dcfca ,&_gfcda .PdfOutlineTreeNode ,nil ,_cdcc );if _adafbf !=nil {_gc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_adafbf );
}else {_gfcda .First =_caba ;_gfcda .Last =_bdbae ;};};};_gecgd :=_df .ResolveReference (_fegaf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cbbgc :=_cdcc [_gecgd ];_gecgd !=nil &&_gecgd !=_dbfce &&!_cbbgc {if !_df .IsNullObject (_gecgd ){_bbbg ,_gbgcc ,_gaacc :=_gcddd .buildOutlineTree (_gecgd ,_fdfb ,&_gfcda .PdfOutlineTreeNode ,_cdcc );
if _gaacc !=nil {_gc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_gaacc );
}else {_gfcda .Next =_bbbg ;return &_gfcda .PdfOutlineTreeNode ,_gbgcc ,nil ;};};};return &_gfcda .PdfOutlineTreeNode ,&_gfcda .PdfOutlineTreeNode ,nil ;};_faeab ,_adgea :=_cgffg (_dbfce );if _adgea !=nil {return nil ,nil ,_adgea ;};_faeab .Parent =_fdfb ;
if _fefg :=_fegaf .Get ("\u0046\u0069\u0072s\u0074");_fefg !=nil {_fefg =_df .ResolveReference (_fefg );if _ ,_aeefc :=_cdcc [_fefg ];_fefg !=nil &&_fefg !=_dbfce &&!_aeefc {_bafc :=_df .TraceToDirectObject (_fefg );if _ ,_eafdg :=_bafc .(*_df .PdfObjectNull );
!_eafdg &&_bafc !=nil {_defe ,_gedfe ,_acbbg :=_gcddd .buildOutlineTree (_fefg ,&_faeab .PdfOutlineTreeNode ,nil ,_cdcc );if _acbbg !=nil {_gc .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_acbbg );
}else {_faeab .First =_defe ;_faeab .Last =_gedfe ;};};};};return &_faeab .PdfOutlineTreeNode ,&_faeab .PdfOutlineTreeNode ,nil ;};func (_aag *PdfReader )newPdfActionNamedFromDict (_bbg *_df .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_bbg .Get ("\u004e")},nil ;
};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cgbg *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_caea :=_ac .NewReader (img .getBase ());_dgfb :=_fbg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cca :=_ac .NewWriter (_dgfb );
_cecae :=_bf .Pow (2,float64 (img .BitsPerComponent ))-1;_gcac :=make ([]uint32 ,3);var (_eagf uint32 ;ANorm ,X ,Y ,Z ,_edgef ,_dcggf ,_agb float64 ;_bbff error ;);for {_eagf ,_bbff =_caea .ReadSample ();if _bbff ==_dg .EOF {break ;}else if _bbff !=nil {return img ,_bbff ;
};ANorm =float64 (_eagf )/_cecae ;X =_cgbg .WhitePoint [0]*_bf .Pow (ANorm ,_cgbg .Gamma );Y =_cgbg .WhitePoint [1]*_bf .Pow (ANorm ,_cgbg .Gamma );Z =_cgbg .WhitePoint [2]*_bf .Pow (ANorm ,_cgbg .Gamma );_edgef =3.240479*X +-1.537150*Y +-0.498535*Z ;_dcggf =-0.969256*X +1.875992*Y +0.041556*Z ;
_agb =0.055648*X +-0.204043*Y +1.057311*Z ;_edgef =_bf .Min (_bf .Max (_edgef ,0),1.0);_dcggf =_bf .Min (_bf .Max (_dcggf ,0),1.0);_agb =_bf .Min (_bf .Max (_agb ,0),1.0);_gcac [0]=uint32 (_edgef *_cecae );_gcac [1]=uint32 (_dcggf *_cecae );_gcac [2]=uint32 (_agb *_cecae );
if _bbff =_cca .WriteSamples (_gcac );_bbff !=nil {return img ,_bbff ;};};return _cgbga (&_dgfb ),nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_abfff *PdfOutlineTreeNode )GetContainingPdfObject ()_df .PdfObject {return _abfff .GetContext ().GetContainingPdfObject ();};

// GetStructRoot gets the StructTreeRoot object
func (_bceabe *PdfPage )GetStructTreeRoot ()(*_df .PdfObject ,bool ){_eabf ,_adeac :=_bceabe ._fadfc .GetCatalogStructTreeRoot ();return &_eabf ,_adeac ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_egbbb :=&PdfPageResources {};_egbbb ._fdbaec =_df .MakeDict ();return _egbbb ;};func _cfgb (_cbgcb *_df .PdfObjectDictionary ,_fgcggc *fontCommon )(*pdfCIDFontType2 ,error ){if _fgcggc ._fbegd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fgcggc );
return nil ,_df .ErrRangeError ;};_aaea :=_fggcd (_fgcggc );_abfd ,_ffac :=_df .GetDict (_cbgcb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ffac {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgcggc );
return nil ,ErrRequiredAttributeMissing ;};_aaea .CIDSystemInfo =_abfd ;_aaea .DW =_cbgcb .Get ("\u0044\u0057");_aaea .W =_cbgcb .Get ("\u0057");_aaea .DW2 =_cbgcb .Get ("\u0044\u0057\u0032");_aaea .W2 =_cbgcb .Get ("\u0057\u0032");_aaea .CIDToGIDMap =_cbgcb .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_aaea ._ddeg =1000.0;if _dffgd ,_gacdb :=_df .GetNumberAsFloat (_aaea .DW );_gacdb ==nil {_aaea ._ddeg =_dffgd ;};_fdgb ,_dbgf :=_cdae (_aaea .W );if _dbgf !=nil {return nil ,_dbgf ;};if _fdgb ==nil {_fdgb =map[_cfe .CharCode ]float64 {};};_aaea ._acafg =_fdgb ;
return _aaea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eed *PdfActionRendition )ToPdfObject ()_df .PdfObject {_eed .PdfAction .ToPdfObject ();_eaf :=_eed ._de ;_faf :=_eaf .PdfObject .(*_df .PdfObjectDictionary );_faf .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeRendition )));_faf .SetIfNotNil ("\u0052",_eed .R );
_faf .SetIfNotNil ("\u0041\u004e",_eed .AN );_faf .SetIfNotNil ("\u004f\u0050",_eed .OP );_faf .SetIfNotNil ("\u004a\u0053",_eed .JS );return _eaf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gegda *PdfFilespec )GetContainingPdfObject ()_df .PdfObject {return _gegda ._dfbd };func _bcfa (_defa *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_afgd ,_abbg :=_df .GetDict (_defa .AP );if !_abbg {return nil ,nil ,_cab .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _afgd ==nil {return nil ,nil ,nil ;};_dgee ,_abbg :=_df .GetArray (_defa .Rect );if !_abbg ||_dgee .Len ()!=4{return nil ,nil ,_cab .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eaace ,_bbgd :=NewPdfRectangle (*_dgee );
if _bbgd !=nil {return nil ,nil ,_bbgd ;};_agedd :=_df .TraceToDirectObject (_afgd .Get ("\u004e"));switch _gcbdb :=_agedd .(type ){case *_df .PdfObjectStream :_deff :=_gcbdb ;_dggcf ,_eebae :=NewXObjectFormFromStream (_deff );return _dggcf ,_eaace ,_eebae ;
case *_df .PdfObjectDictionary :_abgba :=_gcbdb ;_gcba ,_cecec :=_df .GetName (_defa .AS );if !_cecec {return nil ,nil ,nil ;};if _abgba .Get (*_gcba )==nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_ffbe ,_cecec :=_df .GetStream (_abgba .Get (*_gcba ));if !_cecec {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gcba );
return nil ,nil ,_cab .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_eafe ,_abbeg :=NewXObjectFormFromStream (_ffbe );return _eafe ,_eaace ,_abbeg ;};_gc .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_agedd );
return nil ,nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bgeg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_bgeg .N =N ;return _bgeg ,nil ;};func (_fbca *PdfReader )newPdfAnnotationMovieFromDict (_fbcab *_df .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_eccb :=PdfAnnotationMovie {};_eccb .T =_fbcab .Get ("\u0054");_eccb .Movie =_fbcab .Get ("\u004d\u006f\u0076i\u0065");
_eccb .A =_fbcab .Get ("\u0041");return &_eccb ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _df .PdfObject ;Q _df .PdfObject ;RC _df .PdfObject ;DS _df .PdfObject ;CL _df .PdfObject ;IT _df .PdfObject ;BE _df .PdfObject ;RD _df .PdfObject ;BS _df .PdfObject ;LE _df .PdfObject ;
};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_efcef *PdfPage )GetAllContentStreams ()(string ,error ){_gfcaa ,_ggebd :=_efcef .GetContentStreams ();if _ggebd !=nil {return "",_ggebd ;};return _fg .Join (_gfcaa ,"\u0020"),nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_cec :=&PdfAnnotation {};_cec ._bef =_df .MakeIndirectObject (_df .MakeDict ());return _cec ;};func _adcd (_badb _df .PdfObject )(*PdfColorspaceCalRGB ,error ){_eggd :=NewPdfColorspaceCalRGB ();if _gacgc ,_babaf :=_badb .(*_df .PdfIndirectObject );
_babaf {_eggd ._gacc =_gacgc ;};_badb =_df .TraceToDirectObject (_badb );_ffaec ,_fbaf :=_badb .(*_df .PdfObjectArray );if !_fbaf {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffaec .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_badb =_df .TraceToDirectObject (_ffaec .Get (0));_gdbd ,_fbaf :=_badb .(*_df .PdfObjectName );if !_fbaf {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_gdbd !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_g .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_badb =_df .TraceToDirectObject (_ffaec .Get (1));
_agdbf ,_fbaf :=_badb .(*_df .PdfObjectDictionary );if !_fbaf {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_badb =_agdbf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_badb =_df .TraceToDirectObject (_badb );_daef ,_fbaf :=_badb .(*_df .PdfObjectArray );if !_fbaf {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _daef .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cdda ,_cecee :=_daef .GetAsFloat64Slice ();
if _cecee !=nil {return nil ,_cecee ;};_eggd .WhitePoint =_cdda ;_badb =_agdbf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _badb !=nil {_badb =_df .TraceToDirectObject (_badb );_feec ,_ggfg :=_badb .(*_df .PdfObjectArray );
if !_ggfg {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _feec .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_cafb ,_fbafe :=_feec .GetAsFloat64Slice ();if _fbafe !=nil {return nil ,_fbafe ;};_eggd .BlackPoint =_cafb ;};_badb =_agdbf .Get ("\u0047\u0061\u006dm\u0061");if _badb !=nil {_badb =_df .TraceToDirectObject (_badb );_fagc ,_fdfcf :=_badb .(*_df .PdfObjectArray );
if !_fdfcf {return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _fagc .Len ()!=3{return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_afca ,_cccf :=_fagc .GetAsFloat64Slice ();if _cccf !=nil {return nil ,_cccf ;};_eggd .Gamma =_afca ;};_badb =_agdbf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _badb !=nil {_badb =_df .TraceToDirectObject (_badb );_ffea ,_cgdb :=_badb .(*_df .PdfObjectArray );
if !_cgdb {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _ffea .Len ()!=9{_gc .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_ffea .String ());
return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fffa ,_abed :=_ffea .GetAsFloat64Slice ();if _abed !=nil {return nil ,_abed ;
};_eggd .Matrix =_fffa ;};return _eggd ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_bbbba _df .ParserMetadata ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_faefg ,_bggfa :=_dd .ParsePdfTime (dateStr );if _bggfa !=nil {return PdfDate {},_bggfa ;};return NewPdfDateFromTime (_faefg );};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dddgcc *_df .PdfIndirectObject ;_fabbf *_df .PdfIndirectObject ;_fcdaa map[_df .PdfObject ]struct{};_ccdbg []_df .PdfObject ;_efced map[_df .PdfObject ]struct{};_ccac []*_df .PdfIndirectObject ;_ceceea *PdfOutlineTreeNode ;_dffed *_df .PdfObjectDictionary ;
_edcgb []_df .PdfObject ;_eadb *_df .PdfIndirectObject ;_cfagf *_f .Writer ;_debcg int64 ;_baece error ;_gfda *_df .PdfCrypt ;_fdaff *_df .PdfObjectDictionary ;_dfeeb *_df .PdfIndirectObject ;_gbaag *_df .PdfObjectArray ;_ggaaa _df .Version ;_aeacf *bool ;
_ccbecd map[_df .PdfObject ][]*_df .PdfObjectDictionary ;_gdcfa *PdfAcroForm ;_adbbc Optimizer ;_ggbfa StandardApplier ;_bebee map[int ]crossReference ;_ecdab int64 ;ObjNumOffset int ;_aaegc bool ;_befag _df .XrefTable ;_fcegd int64 ;_gefdd int64 ;_geagg map[_df .PdfObject ]int64 ;
_bdfae map[_df .PdfObject ]struct{};_efcd string ;_edaeea []*PdfOutputIntent ;_ebeag bool ;_cecfgg ,_dfabe string ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _df .PdfObjectName ;};

// ToPdfObject returns the PDF representation of the function.
func (_edabc *PdfFunctionType0 )ToPdfObject ()_df .PdfObject {if _edabc ._dbdee ==nil {_edabc ._dbdee =&_df .PdfObjectStream {};};_ffdgf :=_df .MakeDict ();_ffdgf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (0));
_ggff :=&_df .PdfObjectArray {};for _ ,_dbcabe :=range _edabc .Domain {_ggff .Append (_df .MakeFloat (_dbcabe ));};_ffdgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ggff );_fagf :=&_df .PdfObjectArray {};for _ ,_feca :=range _edabc .Range {_fagf .Append (_df .MakeFloat (_feca ));
};_ffdgf .Set ("\u0052\u0061\u006eg\u0065",_fagf );_fceab :=&_df .PdfObjectArray {};for _ ,_dfdeea :=range _edabc .Size {_fceab .Append (_df .MakeInteger (int64 (_dfdeea )));};_ffdgf .Set ("\u0053\u0069\u007a\u0065",_fceab );_ffdgf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_df .MakeInteger (int64 (_edabc .BitsPerSample )));
if _edabc .Order !=1{_ffdgf .Set ("\u004f\u0072\u0064e\u0072",_df .MakeInteger (int64 (_edabc .Order )));};_ffdgf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_edabc ._adgec ))));_edabc ._dbdee .Stream =_edabc ._adgec ;_edabc ._dbdee .PdfObjectDictionary =_ffdgf ;
return _edabc ._dbdee ;};

// A returns the value of the A component of the color.
func (_efacc *PdfColorCalRGB )A ()float64 {return _efacc [0]};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_ffdcg *PdfPageResources )GetFontByName (keyName _df .PdfObjectName )(_df .PdfObject ,bool ){if _ffdcg .Font ==nil {return nil ,false ;};_beagfc ,_aefbb :=_df .TraceToDirectObject (_ffdcg .Font ).(*_df .PdfObjectDictionary );if !_aefbb {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_df .TraceToDirectObject (_ffdcg .Font ));
return nil ,false ;};if _eaec :=_beagfc .Get (keyName );_eaec !=nil {return _eaec ,true ;};return nil ,false ;};

// ToPdfObject returns a stream object.
func (_bcacb *XObjectForm )ToPdfObject ()_df .PdfObject {_afgff :=_bcacb ._aefcd ;_ecgdc :=_afgff .PdfObjectDictionary ;if _bcacb .Filter !=nil {_ecgdc =_bcacb .Filter .MakeStreamDict ();_afgff .PdfObjectDictionary =_ecgdc ;};_ecgdc .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ecgdc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0046\u006f\u0072\u006d"));_ecgdc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_bcacb .FormType );_ecgdc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_bcacb .BBox );_ecgdc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcacb .Matrix );
if _bcacb .Resources !=nil {_ecgdc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bcacb .Resources .ToPdfObject ());};_ecgdc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bcacb .Group );_ecgdc .SetIfNotNil ("\u0052\u0065\u0066",_bcacb .Ref );
_ecgdc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_bcacb .MetaData );_ecgdc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bcacb .PieceInfo );_ecgdc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bcacb .LastModified );
_ecgdc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bcacb .StructParent );_ecgdc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bcacb .StructParents );_ecgdc .SetIfNotNil ("\u004f\u0050\u0049",_bcacb .OPI );
_ecgdc .SetIfNotNil ("\u004f\u0043",_bcacb .OC );_ecgdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcacb .Name );_ecgdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_bcacb .Stream ))));_afgff .Stream =_bcacb .Stream ;return _afgff ;
};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// GetOutlineTree returns the outline tree.
func (_ffed *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ffed ._ddbd };func _aeaa (_affb *PdfField )[]*PdfField {_eadcd :=[]*PdfField {_affb };for _ ,_egac :=range _affb .Kids {_eadcd =append (_eadcd ,_aeaa (_egac )...);};return _eadcd ;};


// ToPdfObject implements interface PdfModel.
func (_ccf *PdfAnnotationInk )ToPdfObject ()_df .PdfObject {_ccf .PdfAnnotation .ToPdfObject ();_aeb :=_ccf ._bef ;_eee :=_aeb .PdfObject .(*_df .PdfObjectDictionary );_ccf .PdfAnnotationMarkup .appendToPdfDictionary (_eee );_eee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0049\u006e\u006b"));
_eee .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ccf .InkList );_eee .SetIfNotNil ("\u0042\u0053",_ccf .BS );return _aeb ;};

// Encoder returns the font's text encoder.
func (_beef *PdfFont )Encoder ()_cfe .TextEncoder {_cecb :=_beef .actualFont ();if _cecb ==nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_beef ._dfffe );
return nil ;};return _cecb .Encoder ();};func (_ageec *PdfReader )newPdfFieldSignatureFromDict (_fccf *_df .PdfObjectDictionary )(*PdfFieldSignature ,error ){_dagfc :=&PdfFieldSignature {};_bfbba ,_gacec :=_df .GetIndirect (_fccf .Get ("\u0056"));if _gacec {var _bfdgb error ;
_dagfc .V ,_bfdgb =_ageec .newPdfSignatureFromIndirect (_bfbba );if _bfdgb !=nil {return nil ,_bfdgb ;};};_dagfc .Lock ,_ =_df .GetIndirect (_fccf .Get ("\u004c\u006f\u0063\u006b"));_dagfc .SV ,_ =_df .GetIndirect (_fccf .Get ("\u0053\u0056"));return _dagfc ,nil ;
};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dcdd .Lock ();defer _dcdd .Unlock ();_adgeg =author };func (_fecc *PdfAppender )updateObjectsDeep (_aeff _df .PdfObject ,_aacd map[_df .PdfObject ]struct{}){if _aacd ==nil {_aacd =map[_df .PdfObject ]struct{}{};};if _ ,_caab :=_aacd [_aeff ];
_caab ||_aeff ==nil {return ;};_aacd [_aeff ]=struct{}{};_bdgg :=_df .ResolveReferencesDeep (_aeff ,_fecc ._gcd );if _bdgg !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bdgg );};switch _ggc :=_aeff .(type ){case *_df .PdfIndirectObject :switch {case _ggc .GetParser ()==_fecc ._cfaba ._ecafc :return ;
case _ggc .GetParser ()==_fecc .Reader ._ecafc :_beae ,_ :=_fecc ._cfaba .GetIndirectObjectByNumber (int (_ggc .ObjectNumber ));_dcdc ,_gbdee :=_beae .(*_df .PdfIndirectObject );if _gbdee &&_dcdc !=nil {if _dcdc .PdfObject !=_ggc .PdfObject &&_dcdc .PdfObject .WriteString ()!=_ggc .PdfObject .WriteString (){_fecc .addNewObject (_aeff );
_fecc ._gaaca [_aeff ]=_ggc .ObjectNumber ;};};default:_fecc .addNewObject (_aeff );};_fecc .updateObjectsDeep (_ggc .PdfObject ,_aacd );case *_df .PdfObjectArray :for _ ,_bbd :=range _ggc .Elements (){_fecc .updateObjectsDeep (_bbd ,_aacd );};case *_df .PdfObjectDictionary :for _ ,_gbee :=range _ggc .Keys (){_fecc .updateObjectsDeep (_ggc .Get (_gbee ),_aacd );
};case *_df .PdfObjectStreams :if _ggc .GetParser ()!=_fecc ._cfaba ._ecafc {for _ ,_cfdb :=range _ggc .Elements (){_fecc .updateObjectsDeep (_cfdb ,_aacd );};};case *_df .PdfObjectStream :switch {case _ggc .GetParser ()==_fecc ._cfaba ._ecafc :return ;
case _ggc .GetParser ()==_fecc .Reader ._ecafc :if _fdfg ,_gbcae :=_fecc ._cfaba ._ecafc .LookupByReference (_ggc .PdfObjectReference );_gbcae ==nil {var _fcfa bool ;if _fag ,_fgbf :=_df .GetStream (_fdfg );_fgbf &&_dga .Equal (_fag .Stream ,_ggc .Stream ){_fcfa =true ;
};if _ecdg ,_cfed :=_df .GetDict (_fdfg );_fcfa &&_cfed {_fcfa =_ecdg .WriteString ()==_ggc .PdfObjectDictionary .WriteString ();};if _fcfa {return ;};};if _ggc .ObjectNumber !=0{_fecc ._gaaca [_aeff ]=_ggc .ObjectNumber ;};default:if _ ,_cbde :=_fecc ._beaa [_aeff ];
!_cbde {_fecc .addNewObject (_aeff );};};_fecc .updateObjectsDeep (_ggc .PdfObjectDictionary ,_aacd );};};func (_cbgc *PdfReader )newPdfActionSoundFromDict (_aaa *_df .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_aaa .Get ("\u0053\u006f\u0075n\u0064"),Volume :_aaa .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_aaa .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_aaa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_aaa .Get ("\u004d\u0069\u0078")},nil ;
};type pdfCIDFontType0 struct{fontCommon ;_baad *_df .PdfIndirectObject ;_gfafg _cfe .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_df .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _df .PdfObject ;W _df .PdfObject ;DW2 _df .PdfObject ;W2 _df .PdfObject ;_gaffe map[_cfe .CharCode ]float64 ;_ecege float64 ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _cb .Time ){_dcdd .Lock ();defer _dcdd .Unlock ();_dfbddb =modifiedDate ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _df .PdfObjectName ;};func (_dafb *PdfReader )newPdfAnnotationStampFromDict (_fged *_df .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ffgf :=PdfAnnotationStamp {};_ageb ,_gafa :=_dafb .newPdfAnnotationMarkupFromDict (_fged );
if _gafa !=nil {return nil ,_gafa ;};_ffgf .PdfAnnotationMarkup =_ageb ;_ffgf .Name =_fged .Get ("\u004e\u0061\u006d\u0065");return &_ffgf ,nil ;};var _bdcba =false ;

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_gcfe *PdfReader )newPdfAnnotationCaretFromDict (_gae *_df .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_eegfc :=PdfAnnotationCaret {};_deaf ,_fgce :=_gcfe .newPdfAnnotationMarkupFromDict (_gae );if _fgce !=nil {return nil ,_fgce ;
};_eegfc .PdfAnnotationMarkup =_deaf ;_eegfc .RD =_gae .Get ("\u0052\u0044");_eegfc .Sy =_gae .Get ("\u0053\u0079");return &_eegfc ,nil ;};func (_gcbbc *PdfWriter )writeOutputIntents ()error {if len (_gcbbc ._edaeea )==0{return nil ;};_egadc :=make ([]_df .PdfObject ,len (_gcbbc ._edaeea ));
for _fdfea ,_gcffc :=range _gcbbc ._edaeea {_dddcb :=_gcffc .ToPdfObject ();_egadc [_fdfea ]=_df .MakeIndirectObject (_dddcb );};_deca :=_df .MakeIndirectObject (_df .MakeArray (_egadc ...));_gcbbc ._dffed .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_deca );
if _gaga :=_gcbbc .addObjects (_deca );_gaga !=nil {return _gaga ;};return nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_abecg *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_agedb *PdfSignature ,_fffag Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_gbgeg *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_cbdg *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_agfef *PdfSignature ,_bbcge Hasher )error ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_df .PdfParser ;DiffPolicy _ggd .DiffPolicy ;};

// Items returns all children outline items.
func (_gbecd *OutlineItem )Items ()[]*OutlineItem {return _gbecd .Entries };

// ToInteger convert to an integer format.
func (_dgbc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_agecca :=_bf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_agecca *_dgbc .A ()),uint32 (_agecca *_dgbc .B ()),uint32 (_agecca *_dgbc .C ())};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _df .PdfObject ;FS _df .PdfObject ;F _df .PdfObject ;UF _df .PdfObject ;DOS _df .PdfObject ;Mac _df .PdfObject ;Unix _df .PdfObject ;ID _df .PdfObject ;V _df .PdfObject ;EF _df .PdfObject ;RF _df .PdfObject ;Desc _df .PdfObject ;
CI _df .PdfObject ;_dfbd _df .PdfObject ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cbagc *Image )ConvertToBinary ()error {if _cbagc .ColorComponents ==1&&_cbagc .BitsPerComponent ==1{return nil ;};_gegbb ,_ecdaa :=_cbagc .ToGoImage ();if _ecdaa !=nil {return _ecdaa ;};_ccgaa ,_ecdaa :=_fbg .MonochromeConverter .Convert (_gegbb );
if _ecdaa !=nil {return _ecdaa ;};_cbagc .Data =_ccgaa .Base ().Data ;_cbagc ._gced ,_ecdaa =_fbg .ScaleAlphaToMonochrome (_cbagc ._gced ,int (_cbagc .Width ),int (_cbagc .Height ));if _ecdaa !=nil {return _ecdaa ;};_cbagc .BitsPerComponent =1;_cbagc .ColorComponents =1;
_cbagc ._afgg =nil ;return nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bbgdd *PdfFont )CharcodesToStrings (charcodes []_cfe .CharCode )([]string ,int ,int ){_dgfd :=_bbgdd .baseFields ();_fddf :=make ([]string ,0,len (charcodes ));_bfdbf :=0;_ffgbd :=_bbgdd .Encoder ();_acegc :=_dgfd ._eacb !=nil &&_bbgdd .IsSimple ()&&_bbgdd .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_fg .Contains (_dgfd ._eacb .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_acegc &&_ffgbd !=nil {switch _efff :=_ffgbd .(type ){case _cfe .SimpleEncoder :_aegcg :=_efff .BaseName ();if _ ,_faffg :=_cdde [_aegcg ];_faffg {for _ ,_bdcgg :=range charcodes {if _bcea ,_afbg :=_ffgbd .CharcodeToRune (_bdcgg );_afbg {_fddf =append (_fddf ,string (_bcea ));
}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bdcgg ,charcodes ,_dgfd .isCIDFont (),_bbgdd ,_ffgbd );
_bfdbf ++;_fddf =append (_fddf ,_fea .MissingCodeString );};};return _fddf ,len (_fddf ),_bfdbf ;};};};for _ ,_gbabd :=range charcodes {if _dgfd ._eacb !=nil {if _eaaa ,_dedbg :=_dgfd ._eacb .CharcodeToUnicode (_fea .CharCode (_gbabd ));_dedbg {_fddf =append (_fddf ,_eaaa );
continue ;};};if _ffgbd !=nil {if _bcbgf ,_ggfgf :=_ffgbd .CharcodeToRune (_gbabd );_ggfgf {_fddf =append (_fddf ,string (_bcbgf ));continue ;};};_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gbabd ,charcodes ,_dgfd .isCIDFont (),_bbgdd ,_ffgbd );
_bfdbf ++;_fddf =append (_fddf ,_fea .MissingCodeString );};if _bfdbf !=0{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bfdbf ,_bbgdd );
};return _fddf ,len (_fddf ),_bfdbf ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _df .PdfObject ;PreserveRB _df .PdfObject ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_dafd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegd :=vals [0];if _gegd < 0.0||_gegd > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gegd );
return nil ,ErrColorOutOfRange ;};_ebdf :=vals [1];if _ebdf < 0.0||_ebdf > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ebdf );return nil ,ErrColorOutOfRange ;
};_dgdc :=vals [2];if _dgdc < 0.0||_dgdc > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgdc );return nil ,ErrColorOutOfRange ;};_geda :=vals [3];
if _geda < 0.0||_geda > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_geda );return nil ,ErrColorOutOfRange ;};_addfc :=NewPdfColorDeviceCMYK (_gegd ,_ebdf ,_dgdc ,_geda );
return _addfc ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_badgd :_df .MakeIndirectObject (_df .MakeDict ())};};

// RemovePage removes a page by number.
func (_bdfg *PdfAppender )RemovePage (pageNum int ){_ddgf :=pageNum -1;_bdfg ._ceee =append (_bdfg ._ceee [0:_ddgf ],_bdfg ._ceee [pageNum :]...);};func (_abdf *pdfFontSimple )updateStandard14Font (){_adcfg ,_beagf :=_abdf .Encoder ().(_cfe .SimpleEncoder );
if !_beagf {_gc .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_abdf .Encoder (),_abdf );return ;};_eefe :=_adcfg .Charcodes ();
_abdf ._abaag =make (map[_cfe .CharCode ]float64 ,len (_eefe ));for _ ,_acgac :=range _eefe {_eded ,_ :=_adcfg .CharcodeToRune (_acgac );_gafed ,_ :=_abdf ._dfgaa .Read (_eded );_abdf ._abaag [_acgac ]=_gafed .Wx ;};};func (_ebge *PdfReader )newPdfAnnotationSquareFromDict (_fdcb *_df .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_geef :=PdfAnnotationSquare {};
_fccc ,_edb :=_ebge .newPdfAnnotationMarkupFromDict (_fdcb );if _edb !=nil {return nil ,_edb ;};_geef .PdfAnnotationMarkup =_fccc ;_geef .BS =_fdcb .Get ("\u0042\u0053");_geef .IC =_fdcb .Get ("\u0049\u0043");_geef .BE =_fdcb .Get ("\u0042\u0045");_geef .RD =_fdcb .Get ("\u0052\u0044");
return &_geef ,nil ;};func _gaeeg (_bgffce []byte )([]byte ,error ){_cfbc :=_ca .New ();if _ ,_ccbf :=_dg .Copy (_cfbc ,_dga .NewReader (_bgffce ));_ccbf !=nil {return nil ,_ccbf ;};return _cfbc .Sum (nil ),nil ;};

// WriteString outputs the object as it is to be written to file.
func (_gggde *PdfTransformParamsDocMDP )WriteString ()string {return _gggde .ToPdfObject ().WriteString ();};

// PartialName returns the partial name of the field.
func (_fbce *PdfField )PartialName ()string {_acffg :="";if _fbce .T !=nil {_acffg =_fbce .T .Decoded ();}else {_gc .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _acffg ;};func (_gdefe *fontFile )loadFromSegments (_ffegg ,_ffdf []byte )error {_gc .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_ffegg ),len (_ffdf ));
_bbgec :=_gdefe .parseASCIIPart (_ffegg );if _bbgec !=nil {return _bbgec ;};_gc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gdefe );if len (_ffdf )==0{return nil ;};_gc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gdefe );
return nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject implements interface PdfModel.
func (_cg *PdfAction )ToPdfObject ()_df .PdfObject {_fed :=_cg ._de ;_fc :=_fed .PdfObject .(*_df .PdfObjectDictionary );_fc .Clear ();_fc .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_fc .SetIfNotNil ("\u0053",_cg .S );
_fc .SetIfNotNil ("\u004e\u0065\u0078\u0074",_cg .Next );return _fed ;};func _cfeea ()string {_dcdd .Lock ();defer _dcdd .Unlock ();return _adgeg };

// ToPdfObject implements interface PdfModel.
func (_ecfd *PdfAnnotationLink )ToPdfObject ()_df .PdfObject {_ecfd .PdfAnnotation .ToPdfObject ();_gfcbc :=_ecfd ._bef ;_ede :=_gfcbc .PdfObject .(*_df .PdfObjectDictionary );_ede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u004c\u0069\u006e\u006b"));
if _ecfd ._eagd !=nil &&_ecfd ._eagd ._eg !=nil {_ede .Set ("\u0041",_ecfd ._eagd ._eg .ToPdfObject ());}else if _ecfd .A !=nil {_ede .Set ("\u0041",_ecfd .A );};_ede .SetIfNotNil ("\u0044\u0065\u0073\u0074",_ecfd .Dest );_ede .SetIfNotNil ("\u0048",_ecfd .H );
_ede .SetIfNotNil ("\u0050\u0041",_ecfd .PA );_ede .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ecfd .QuadPoints );_ede .SetIfNotNil ("\u0042\u0053",_ecfd .BS );return _gfcbc ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dfdc *PdfFieldButton )IsPush ()bool {return _dfdc .GetType ()==ButtonTypePush };

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_gbbd :=PdfColorCalGray (grayVal );return &_gbbd ;};

// ToInteger convert to an integer format.
func (_bccf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_dbfg :=_bf .Pow (2,float64 (bits ))-1;return uint32 (_dbfg *_bccf .Val ());};func _ebbff (_fdceg string )(string ,error ){var _efcceg _dga .Buffer ;_efcceg .WriteString (_fdceg );_fefga :=make ([]byte ,8+16);
_agadd :=_cb .Now ().UTC ().UnixNano ();_d .BigEndian .PutUint64 (_fefga ,uint64 (_agadd ));_ ,_gadf :=_db .Read (_fefga [8:]);if _gadf !=nil {return "",_gadf ;};_efcceg .WriteString (_e .EncodeToString (_fefga ));return _efcceg .String (),nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_edfed *PdfReader )GetIndirectObjectByNumber (number int )(_df .PdfObject ,error ){_cded ,_daed :=_edfed ._ecafc .LookupByNumber (number );return _cded ,_daed ;};func _cfag (_aedea []byte )(_dfbc ,_dgdag string ,_fecbc error ){_gc .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_aedea ));
_fdbg :=_bage .FindIndex (_aedea );if _fdbg ==nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_df .ErrTypeError ;};_gegdaf :=_fdbg [1];_adfgd :=_fg .Index (string (_aedea [_gegdaf :]),_ffce );if _adfgd < 0{_dfbc =string (_aedea [_gegdaf :]);return _dfbc ,"",nil ;};_bgegb :=_gegdaf +_adfgd ;_dfbc =string (_aedea [_gegdaf :_bgegb ]);
_eafde :=_bgegb ;_adfgd =_fg .Index (string (_aedea [_eafde :]),_ccde );if _adfgd < 0{_gc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fecbc );
return "","",_df .ErrTypeError ;};_gdaga :=_eafde +_adfgd ;_dgdag =string (_aedea [_eafde :_gdaga ]);return _dfbc ,_dgdag ,nil ;};func (_fbfea *PdfWriter )flushWriter ()error {if _fbfea ._baece ==nil {_fbfea ._baece =_fbfea ._cfagf .Flush ();};return _fbfea ._baece ;
};func (_gcg *PdfReader )newPdfAnnotationPolygonFromDict (_ccb *_df .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_geeb :=PdfAnnotationPolygon {};_bbeba ,_fdg :=_gcg .newPdfAnnotationMarkupFromDict (_ccb );if _fdg !=nil {return nil ,_fdg ;};_geeb .PdfAnnotationMarkup =_bbeba ;
_geeb .Vertices =_ccb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_geeb .LE =_ccb .Get ("\u004c\u0045");_geeb .BS =_ccb .Get ("\u0042\u0053");_geeb .IC =_ccb .Get ("\u0049\u0043");_geeb .BE =_ccb .Get ("\u0042\u0045");_geeb .IT =_ccb .Get ("\u0049\u0054");
_geeb .Measure =_ccb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_geeb ,nil ;};

// String returns a string that describes `font`.
func (_gbeg *PdfFont )String ()string {_fdfe :="";if _gbeg ._dfffe .Encoder ()!=nil {_fdfe =_gbeg ._dfffe .Encoder ().String ();};return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gbeg ._dfffe ,_gbeg .baseFields ().coreString (),_fdfe );
};func (_aagca *XObjectImage )getParamsDict ()*_df .PdfObjectDictionary {_effaae :=_df .MakeDict ();_effaae .Set ("\u0057\u0069\u0064t\u0068",_df .MakeInteger (*_aagca .Width ));_effaae .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_df .MakeInteger (*_aagca .Height ));
_effaae .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_df .MakeInteger (int64 (_aagca .ColorSpace .GetNumComponents ())));_effaae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_df .MakeInteger (*_aagca .BitsPerComponent ));
return _effaae ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cbbb :=NewPdfAnnotation ();_facg :=&PdfAnnotationStamp {};_facg .PdfAnnotation =_cbbb ;_facg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbbb .SetContext (_facg );return _facg ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_efaga *PdfPageResourcesColorspaces )Set (key _df .PdfObjectName ,val PdfColorspace ){if _ ,_geddf :=_efaga .Colorspaces [string (key )];!_geddf {_efaga .Names =append (_efaga .Names ,string (key ));};_efaga .Colorspaces [string (key )]=val ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_affab int64 ;_acgcc int64 ;_bfgcg int64 ;_dfbbe int64 ;_gebge int64 ;_dceaa int64 ;_cefad byte ;_dbgfg int64 ;_bbgee int64 ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_gf :=NewPdfAction ();_fae :=&PdfActionSubmitForm {};_fae .PdfAction =_gf ;_gf .SetContext (_fae );return _fae ;};

// SetReason sets the `Reason` field of the signature.
func (_eaade *PdfSignature )SetReason (reason string ){_eaade .Reason =_df .MakeString (reason )};

// ColorToRGB converts an Indexed color to an RGB color.
func (_aebae *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aebae .Base ==nil {return nil ,_cab .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _aebae .Base .ColorToRGB (color );};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dgacd :=&PdfSignature {Type :_df .MakeName ("\u0053\u0069\u0067"),Handler :handler };_ddea :=&pdfSignDictionary {PdfObjectDictionary :_df .MakeDict (),_gdegb :&handler ,_cbbcg :_dgacd };_dgacd ._cffgb =_df .MakeIndirectObject (_ddea );
return _dgacd ;};func _eagc (_aggd _df .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ddfa :=NewPdfColorspaceSpecialIndexed ();if _fagcg ,_cceb :=_aggd .(*_df .PdfIndirectObject );_cceb {_ddfa ._bcdb =_fagcg ;};_aggd =_df .TraceToDirectObject (_aggd );
_cbcd ,_gefe :=_aggd .(*_df .PdfObjectArray );if !_gefe {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cbcd .Len ()!=4{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_aggd =_cbcd .Get (0);_bbge ,_gefe :=_aggd .(*_df .PdfObjectName );if !_gefe {return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_bbge !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_aggd =_cbcd .Get (1);_bbbd ,_ebaf :=DetermineColorspaceNameFromPdfObject (_aggd );if _ebaf !=nil {return nil ,_ebaf ;};if _bbbd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bbbd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gc .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bbbd );
return nil ,_dfagf ;};_dcgga ,_ebaf :=NewPdfColorspaceFromPdfObject (_aggd );if _ebaf !=nil {return nil ,_ebaf ;};_ddfa .Base =_dcgga ;_aggd =_cbcd .Get (2);_dagf ,_ebaf :=_df .GetNumberAsInt64 (_aggd );if _ebaf !=nil {return nil ,_ebaf ;};if _dagf > 255{return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_ddfa .HiVal =int (_dagf );_aggd =_cbcd .Get (3);_ddfa .Lookup =_aggd ;_aggd =_df .TraceToDirectObject (_aggd );var _bgga []byte ;if _faecd ,_gcbgc :=_aggd .(*_df .PdfObjectString );_gcbgc {_bgga =_faecd .Bytes ();_gc .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_bgga );
}else if _gdfab ,_acacb :=_aggd .(*_df .PdfObjectStream );_acacb {_gc .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_aggd .String ());_gc .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gdfab .Stream ),_gdfab .Stream );
_cebfd ,_eeaa :=_df .DecodeStream (_gdfab );if _eeaa !=nil {return nil ,_eeaa ;};_gc .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cebfd ),_cebfd );_bgga =_cebfd ;}else {_gc .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_aggd );
return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_bgga )< _ddfa .Base .GetNumComponents ()*(_ddfa .HiVal +1){_gc .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_gc .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_bgga ),_ddfa .Base .GetNumComponents (),_ddfa .HiVal );
}else {_bgga =_bgga [:_ddfa .Base .GetNumComponents ()*(_ddfa .HiVal +1)];};_ddfa ._fcfb =_bgga ;return _ddfa ,nil ;};func (_gdddd *pdfFontType0 )baseFields ()*fontCommon {return &_gdddd .fontCommon };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_efab *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_affae *_df .PdfIndirectObject ;};func (_edge *PdfReader )newPdfAnnotationStrikeOut (_dea *_df .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_aadf :=PdfAnnotationStrikeOut {};
_eecc ,_fdea :=_edge .newPdfAnnotationMarkupFromDict (_dea );if _fdea !=nil {return nil ,_fdea ;};_aadf .PdfAnnotationMarkup =_eecc ;_aadf .QuadPoints =_dea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aadf ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _df .PdfObject )(_df .PdfObjectName ,error ){var _fcfc *_df .PdfObjectName ;var _bfee *_df .PdfObjectArray ;if _adge ,_gbdd :=obj .(*_df .PdfIndirectObject );_gbdd {if _cacdd ,_geebc :=_adge .PdfObject .(*_df .PdfObjectArray );
_geebc {_bfee =_cacdd ;}else if _dffe ,_aeba :=_adge .PdfObject .(*_df .PdfObjectName );_aeba {_fcfc =_dffe ;};}else if _cccda ,_bcag :=obj .(*_df .PdfObjectArray );_bcag {_bfee =_cccda ;}else if _bag ,_gagbe :=obj .(*_df .PdfObjectName );_gagbe {_fcfc =_bag ;
};if _fcfc !=nil {switch *_fcfc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fcfc ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fcfc ,nil ;
};};if _bfee !=nil &&_bfee .Len ()> 0{if _aded ,_aged :=_bfee .Get (0).(*_df .PdfObjectName );_aged {switch *_aded {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bfee .Len ()==1{return *_aded ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_aded ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_aded ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_aded ,nil ;};};};return "",nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cfbge *PdfField )Flags ()FieldFlag {var _deba FieldFlag ;_dcce ,_ddfbgg :=_cfbge .inherit (func (_cefb *PdfField )bool {if _cefb .Ff !=nil {_deba =FieldFlag (*_cefb .Ff );return true ;};return false ;});if _ddfbgg !=nil {_gc .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ddfbgg );
};if !_dcce {_gc .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _deba ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_aabg *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebcc ,_cebb :=color .(*PdfColorCalRGB );if !_cebb {_gc .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdbdf :=_ebcc .A ();_deea :=_ebcc .B ();_gcbg :=_ebcc .C ();X :=_aabg .Matrix [0]*_bf .Pow (_bdbdf ,_aabg .Gamma [0])+_aabg .Matrix [3]*_bf .Pow (_deea ,_aabg .Gamma [1])+_aabg .Matrix [6]*_bf .Pow (_gcbg ,_aabg .Gamma [2]);
Y :=_aabg .Matrix [1]*_bf .Pow (_bdbdf ,_aabg .Gamma [0])+_aabg .Matrix [4]*_bf .Pow (_deea ,_aabg .Gamma [1])+_aabg .Matrix [7]*_bf .Pow (_gcbg ,_aabg .Gamma [2]);Z :=_aabg .Matrix [2]*_bf .Pow (_bdbdf ,_aabg .Gamma [0])+_aabg .Matrix [5]*_bf .Pow (_deea ,_aabg .Gamma [1])+_aabg .Matrix [8]*_bf .Pow (_gcbg ,_aabg .Gamma [2]);
_ecff :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fcaf :=-0.969256*X +1.875992*Y +0.041556*Z ;_bece :=0.055648*X +-0.204043*Y +1.057311*Z ;_ecff =_bf .Min (_bf .Max (_ecff ,0),1.0);_fcaf =_bf .Min (_bf .Max (_fcaf ,0),1.0);_bece =_bf .Min (_bf .Max (_bece ,0),1.0);
return NewPdfColorDeviceRGB (_ecff ,_fcaf ,_bece ),nil ;};func _aabdc (_dfca *_df .PdfObjectDictionary ,_egdfg *fontCommon )(*pdfFontType0 ,error ){_fbef ,_dbddb :=_df .GetArray (_dfca .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dbddb {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_egdfg );
return nil ,_df .ErrRangeError ;};if _fbef .Len ()!=1{_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_fbef .Len ());return nil ,_df .ErrRangeError ;
};_aeegf ,_dageg :=_cgdggg (_fbef .Get (0),false );if _dageg !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_dageg ,_egdfg );
return nil ,_dageg ;};_bfff :=_bbbef (_egdfg );_bfff .DescendantFont =_aeegf ;_cbeg ,_dbddb :=_df .GetNameVal (_dfca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dbddb {if _cbeg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cbeg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bfff ._degc =_cfe .NewIdentityTextEncoder (_cbeg );
}else if _fea .IsPredefinedCMap (_cbeg ){_bfff ._adab ,_dageg =_fea .LoadPredefinedCMap (_cbeg );if _dageg !=nil {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cbeg ,_dageg );
};}else {_gc .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cbeg );};};if _fbgdg :=_aeegf .baseFields ()._eacb ;_fbgdg !=nil {if _ddddg :=_fbgdg .Name ();_ddddg =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ddddg =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ddddg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ddddg =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bfff ._degc =_cfe .NewCMapEncoder (_cbeg ,_bfff ._adab ,_fbgdg );
};};return _bfff ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ebg :=NewPdfAnnotation ();_eaa :=&PdfAnnotationCircle {};_eaa .PdfAnnotation =_ebg ;_eaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebg .SetContext (_eaa );return _eaa ;};

// ToPdfObject implements interface PdfModel.
func (_bgc *PdfActionImportData )ToPdfObject ()_df .PdfObject {_bgc .PdfAction .ToPdfObject ();_gbb :=_bgc ._de ;_fcdf :=_gbb .PdfObject .(*_df .PdfObjectDictionary );_fcdf .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeImportData )));if _bgc .F !=nil {_fcdf .Set ("\u0046",_bgc .F .ToPdfObject ());
};return _gbb ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func _dafba (_cdaea *_df .PdfObjectDictionary )(*PdfTilingPattern ,error ){_gcaga :=&PdfTilingPattern {};_cebd :=_cdaea .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _cebd ==nil {_gc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bccfe ,_dfced :=_cebd .(*_df .PdfObjectInteger );if !_dfced {_gc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cebd );
return nil ,_df .ErrTypeError ;};_gcaga .PaintType =_bccfe ;_cebd =_cdaea .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cebd ==nil {_gc .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ccfgg ,_dfced :=_cebd .(*_df .PdfObjectInteger );if !_dfced {_gc .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cebd );
return nil ,_df .ErrTypeError ;};_gcaga .TilingType =_ccfgg ;_cebd =_cdaea .Get ("\u0042\u0042\u006f\u0078");if _cebd ==nil {_gc .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cebd =_df .TraceToDirectObject (_cebd );_gega ,_dfced :=_cebd .(*_df .PdfObjectArray );if !_dfced {_gc .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cebd );
return nil ,_df .ErrTypeError ;};_fabef ,_dfegd :=NewPdfRectangle (*_gega );if _dfegd !=nil {_gc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dfegd );return nil ,_dfegd ;};_gcaga .BBox =_fabef ;_cebd =_cdaea .Get ("\u0058\u0053\u0074e\u0070");
if _cebd ==nil {_gc .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfcab ,_dfegd :=_df .GetNumberAsFloat (_cebd );if _dfegd !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cfcab );
return nil ,_dfegd ;};_gcaga .XStep =_df .MakeFloat (_cfcab );_cebd =_cdaea .Get ("\u0059\u0053\u0074e\u0070");if _cebd ==nil {_gc .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gaec ,_dfegd :=_df .GetNumberAsFloat (_cebd );if _dfegd !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gaec );
return nil ,_dfegd ;};_gcaga .YStep =_df .MakeFloat (_gaec );_cebd =_cdaea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cebd ==nil {_gc .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cdaea ,_dfced =_df .TraceToDirectObject (_cebd ).(*_df .PdfObjectDictionary );if !_dfced {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cebd );
};_ddebg ,_dfegd :=NewPdfPageResourcesFromDict (_cdaea );if _dfegd !=nil {return nil ,_dfegd ;};_gcaga .Resources =_ddebg ;if _ddcf :=_cdaea .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ddcf !=nil {_ggefd ,_baafe :=_ddcf .(*_df .PdfObjectArray );if !_baafe {_gc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddcf );
return nil ,_df .ErrTypeError ;};_gcaga .Matrix =_ggefd ;};return _gcaga ,nil ;};func (_dddb *DSS )add (_gfae *[]*_df .PdfObjectStream ,_eeae map[string ]*_df .PdfObjectStream ,_bddfe [][]byte )([]*_df .PdfObjectStream ,error ){_cgeg :=make ([]*_df .PdfObjectStream ,0,len (_bddfe ));
for _ ,_bdff :=range _bddfe {_bgaeb ,_ggcg :=_gaeeg (_bdff );if _ggcg !=nil {return nil ,_ggcg ;};_baag ,_eagbg :=_eeae [string (_bgaeb )];if !_eagbg {_baag ,_ggcg =_df .MakeStream (_bdff ,_df .NewRawEncoder ());if _ggcg !=nil {return nil ,_ggcg ;};_eeae [string (_bgaeb )]=_baag ;
*_gfae =append (*_gfae ,_baag );};_cgeg =append (_cgeg ,_baag );};return _cgeg ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_ffgd _dg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_adgae _cd .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_aedfd _cd .Image )(*Image ,error );

// Compress an image.
Compress (_adbb *Image ,_dgdaga int64 )(*Image ,error );};var (CourierName =_aec .CourierName ;CourierBoldName =_aec .CourierBoldName ;CourierObliqueName =_aec .CourierObliqueName ;CourierBoldObliqueName =_aec .CourierBoldObliqueName ;HelveticaName =_aec .HelveticaName ;
HelveticaBoldName =_aec .HelveticaBoldName ;HelveticaObliqueName =_aec .HelveticaObliqueName ;HelveticaBoldObliqueName =_aec .HelveticaBoldObliqueName ;SymbolName =_aec .SymbolName ;ZapfDingbatsName =_aec .ZapfDingbatsName ;TimesRomanName =_aec .TimesRomanName ;
TimesBoldName =_aec .TimesBoldName ;TimesItalicName =_aec .TimesItalicName ;TimesBoldItalicName =_aec .TimesBoldItalicName ;);

// ToPdfObject implements interface PdfModel.
func (_dfc *PdfActionJavaScript )ToPdfObject ()_df .PdfObject {_dfc .PdfAction .ToPdfObject ();_ceg :=_dfc ._de ;_ageg :=_ceg .PdfObject .(*_df .PdfObjectDictionary );_ageg .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeJavaScript )));_ageg .SetIfNotNil ("\u004a\u0053",_dfc .JS );
return _ceg ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dddd :=&PdfFieldSignature {};_dddd .PdfField =NewPdfField ();_dddd .PdfField .SetContext (_dddd );_dddd .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dddd .PdfAnnotationWidget .SetContext (_dddd );
_dddd .PdfAnnotationWidget ._bef =_dddd .PdfField ._gadcg ;_dddd .T =_df .MakeString ("");_dddd .F =_df .MakeInteger (132);_dddd .V =signature ;return _dddd ;};func (_aafa *PdfAppender )addNewObject (_efca _df .PdfObject ){if _ ,_bdfc :=_aafa ._beaa [_efca ];
!_bdfc {_aafa ._gegc =append (_aafa ._gegc ,_efca );_aafa ._beaa [_efca ]=struct{}{};};};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _df .PdfObject ;IsMap _df .PdfObject ;};func _adfg (_dede _df .PdfObject )(*fontFile ,error ){_gc .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dede );
_bbade :=&fontFile {};_dede =_df .TraceToDirectObject (_dede );_dgde ,_egea :=_dede .(*_df .PdfObjectStream );if !_egea {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dede );
return nil ,_df .ErrTypeError ;};_gebb :=_dgde .PdfObjectDictionary ;_cgea ,_gbbf :=_df .DecodeStream (_dgde );if _gbbf !=nil {return nil ,_gbbf ;};_babaa ,_egea :=_df .GetNameVal (_gebb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_egea {_bbade ._gdaa =_babaa ;
if _babaa =="\u0054\u0079\u0070\u0065\u0031\u0043"{_gc .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_ageda ,_ :=_df .GetIntVal (_gebb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_dggcd ,_ :=_df .GetIntVal (_gebb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ageda > len (_cgea ){_ageda =len (_cgea );
};if _ageda +_dggcd > len (_cgea ){_dggcd =len (_cgea )-_ageda ;};_eacf :=_cgea [:_ageda ];var _edfdd []byte ;if _dggcd > 0{_edfdd =_cgea [_ageda :_ageda +_dggcd ];};if _ageda > 0&&_dggcd > 0{_ggga :=_bbade .loadFromSegments (_eacf ,_edfdd );if _ggga !=nil {return nil ,_ggga ;
};};return _bbade ,nil ;};func (_baagc *Image )resampleLowBits (_feccg []uint32 ){_cdbb :=_fbg .BytesPerLine (int (_baagc .Width ),int (_baagc .BitsPerComponent ),_baagc .ColorComponents );_adda :=make ([]byte ,_baagc .ColorComponents *_cdbb *int (_baagc .Height ));
_abec :=int (_baagc .BitsPerComponent )*_baagc .ColorComponents *int (_baagc .Width );_fcba :=uint8 (8);var (_cccg ,_bcggb int ;_dcbc uint32 ;);for _babcf :=0;_babcf < int (_baagc .Height );_babcf ++{_bcggb =_babcf *_cdbb ;for _cdab :=0;_cdab < _abec ;
_cdab ++{_dcbc =_feccg [_cccg ];_fcba -=uint8 (_baagc .BitsPerComponent );_adda [_bcggb ]|=byte (_dcbc )<<_fcba ;if _fcba ==0{_fcba =8;_bcggb ++;};_cccg ++;};};_baagc .Data =_adda ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_cfee :=NewPdfAction ();_gcbb :=&PdfActionRendition {};_gcbb .PdfAction =_cfee ;_cfee .SetContext (_gcbb );return _gcbb ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_ccedd *PdfPageResources )AddExtGState (gsName _df .PdfObjectName ,gsDict _df .PdfObject )error {if _ccedd .ExtGState ==nil {_ccedd .ExtGState =_df .MakeDict ();};_agfc :=_ccedd .ExtGState ;_dfabc ,_bdfga :=_df .TraceToDirectObject (_agfc ).(*_df .PdfObjectDictionary );
if !_bdfga {_gc .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_agfc ,_df .TraceToDirectObject (_agfc ));
return _df .ErrTypeError ;};_dfabc .Set (gsName ,gsDict );return nil ;};

// B returns the value of the B component of the color.
func (_fggdb *PdfColorCalRGB )B ()float64 {return _fggdb [1]};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_bgaf *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_dabbf :=func (_gcdb float64 )float64 {if _gcdb >=6.0/29{return _gcdb *_gcdb *_gcdb ;};return 108.0/841*(_gcdb -4.0/29.0);};_ffgb :=img ._afgg ;if len (_ffgb )!=6{_gc .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_ffgb =_bgaf .DecodeArray ();};_dfaf :=_ac .NewReader (img .getBase ());_baabf :=_fbg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._gced ,img ._afgg );_gdaf :=_ac .NewWriter (_baabf );_fedab :=_bf .Pow (2,float64 (img .BitsPerComponent ))-1;
_ebfc :=make ([]uint32 ,3);var (_affg error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_cecfg ,_bggge ,_ceagb float64 ;);for {_affg =_dfaf .ReadSamples (_ebfc );if _affg ==_dg .EOF {break ;}else if _affg !=nil {return img ,_affg ;};Ls =float64 (_ebfc [0])/_fedab ;
As =float64 (_ebfc [1])/_fedab ;Bs =float64 (_ebfc [2])/_fedab ;Ls =_fbg .LinearInterpolate (Ls ,0.0,1.0,_ffgb [0],_ffgb [1]);As =_fbg .LinearInterpolate (As ,0.0,1.0,_ffgb [2],_ffgb [3]);Bs =_fbg .LinearInterpolate (Bs ,0.0,1.0,_ffgb [4],_ffgb [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_bgaf .WhitePoint [0]*_dabbf (L );Y =_bgaf .WhitePoint [1]*_dabbf (M );Z =_bgaf .WhitePoint [2]*_dabbf (N );_cecfg =3.240479*X +-1.537150*Y +-0.498535*Z ;_bggge =-0.969256*X +1.875992*Y +0.041556*Z ;_ceagb =0.055648*X +-0.204043*Y +1.057311*Z ;
_cecfg =_bf .Min (_bf .Max (_cecfg ,0),1.0);_bggge =_bf .Min (_bf .Max (_bggge ,0),1.0);_ceagb =_bf .Min (_bf .Max (_ceagb ,0),1.0);_ebfc [0]=uint32 (_cecfg *_fedab );_ebfc [1]=uint32 (_bggge *_fedab );_ebfc [2]=uint32 (_ceagb *_fedab );if _affg =_gdaf .WriteSamples (_ebfc );
_affg !=nil {return img ,_affg ;};};return _cgbga (&_baabf ),nil ;};

// M returns the value of the magenta component of the color.
func (_gceg *PdfColorDeviceCMYK )M ()float64 {return _gceg [1]};

// ToPdfObject returns a stream object.
func (_acgag *XObjectImage )ToPdfObject ()_df .PdfObject {_dcca :=_acgag ._bbbgb ;_gdagaf :=_dcca .PdfObjectDictionary ;if _acgag .Filter !=nil {_gdagaf =_acgag .Filter .MakeStreamDict ();_dcca .PdfObjectDictionary =_gdagaf ;};_gdagaf .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_gdagaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0049\u006d\u0061g\u0065"));_gdagaf .Set ("\u0057\u0069\u0064t\u0068",_df .MakeInteger (*(_acgag .Width )));_gdagaf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_df .MakeInteger (*(_acgag .Height )));
if _acgag .BitsPerComponent !=nil {_gdagaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_df .MakeInteger (*(_acgag .BitsPerComponent )));};if _acgag .ColorSpace !=nil {_gdagaf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_acgag .ColorSpace .ToPdfObject ());
};_gdagaf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_acgag .Intent );_gdagaf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_acgag .ImageMask );_gdagaf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_acgag .Mask );_cdbag :=_gdagaf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _acgag .Decode ==nil &&_cdbag {_gdagaf .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _acgag .Decode !=nil {_gdagaf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_acgag .Decode );};_gdagaf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_acgag .Interpolate );
_gdagaf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_acgag .Alternatives );_gdagaf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_acgag .SMask );_gdagaf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_acgag .SMaskInData );
_gdagaf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_acgag .Matte );_gdagaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_acgag .Name );_gdagaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_acgag .StructParent );_gdagaf .SetIfNotNil ("\u0049\u0044",_acgag .ID );
_gdagaf .SetIfNotNil ("\u004f\u0050\u0049",_acgag .OPI );_gdagaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_acgag .Metadata );_gdagaf .SetIfNotNil ("\u004f\u0043",_acgag .OC );_gdagaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_acgag .Stream ))));
_dcca .Stream =_acgag .Stream ;return _dcca ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ddfad *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddfad .AlternateSpace ==nil {return nil ,_cab .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ddfad .AlternateSpace .ColorToRGB (color );};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _df .PdfObject ;AN _df .PdfObject ;OP _df .PdfObject ;JS _df .PdfObject ;};

// PdfVersion returns version of the PDF file.
func (_cgggg *PdfReader )PdfVersion ()_df .Version {return _cgggg ._ecafc .PdfVersion ()};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_dfde :=NewPdfAnnotation ();_fec :=&PdfAnnotationRichMedia {};_fec .PdfAnnotation =_dfde ;_dfde .SetContext (_fec );return _fec ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_df .PdfObjectArray ;Matrix *_df .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject converts the font to a PDF representation.
func (_caaf *pdfFontType0 )ToPdfObject ()_df .PdfObject {if _caaf ._gfdg ==nil {_caaf ._gfdg =&_df .PdfIndirectObject {};};_ffef :=_caaf .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_caaf ._gfdg .PdfObject =_ffef ;if _caaf .Encoding !=nil {_ffef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caaf .Encoding );
}else if _caaf ._degc !=nil {_ffef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_caaf ._degc .ToPdfObject ());};if _caaf .DescendantFont !=nil {_ffef .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_df .MakeArray (_caaf .DescendantFont .ToPdfObject ()));
};return _caaf ._gfdg ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gacfd :=&PdfColorspaceSpecialSeparation {};return _gacfd ;};

// ToPdfObject implements interface PdfModel.
func (_bafb *PdfAnnotationWidget )ToPdfObject ()_df .PdfObject {_bafb .PdfAnnotation .ToPdfObject ();_aaeb :=_bafb ._bef ;_abc :=_aaeb .PdfObject .(*_df .PdfObjectDictionary );if _bafb ._gebg {return _aaeb ;};_bafb ._gebg =true ;_abc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_abc .SetIfNotNil ("\u0048",_bafb .H );_abc .SetIfNotNil ("\u004d\u004b",_bafb .MK );_abc .SetIfNotNil ("\u0041",_bafb .A );_abc .SetIfNotNil ("\u0041\u0041",_bafb .AA );_abc .SetIfNotNil ("\u0042\u0053",_bafb .BS );_fbbg :=_bafb .Parent ;if _bafb ._bfda !=nil {if _bafb ._bfda ._gadcg ==_bafb ._bef {_bafb ._bfda .ToPdfObject ();
};_fbbg =_bafb ._bfda .GetContainingPdfObject ();};if _fbbg !=_aaeb {_abc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbbg );};_bafb ._gebg =false ;return _aaeb ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cegd *PdfAnnotation )GetContainingPdfObject ()_df .PdfObject {return _cegd ._bef };func (_dggec *PdfReader )newPdfAnnotationHighlightFromDict (_bdda *_df .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_abae :=PdfAnnotationHighlight {};_babe ,_ecea :=_dggec .newPdfAnnotationMarkupFromDict (_bdda );
if _ecea !=nil {return nil ,_ecea ;};_abae .PdfAnnotationMarkup =_babe ;_abae .QuadPoints =_bdda .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_abae ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_df .PdfObjectName ;Colorants _df .PdfObject ;Process _df .PdfObject ;MixingHints _df .PdfObject ;_gaab *_df .PdfIndirectObject ;};func (_bbgcb fontCommon )fontFlags ()int {if _bbgcb ._cada ==nil {return 0;
};return _bbgcb ._cada ._adafb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgeb *PdfColorspaceDeviceCMYK )ToPdfObject ()_df .PdfObject {return _df .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func _dgceb (_ecbde *_df .PdfObjectDictionary )(*PdfFieldChoice ,error ){_gbcb :=&PdfFieldChoice {};
_gbcb .Opt ,_ =_df .GetArray (_ecbde .Get ("\u004f\u0070\u0074"));_gbcb .TI ,_ =_df .GetInt (_ecbde .Get ("\u0054\u0049"));_gbcb .I ,_ =_df .GetArray (_ecbde .Get ("\u0049"));return _gbcb ,nil ;};

// SetDecode sets the decode image float slice.
func (_feggg *Image )SetDecode (decode []float64 ){_feggg ._afgg =decode };

// IsCID returns true if the underlying font is CID.
func (_acef *PdfFont )IsCID ()bool {return _acef .baseFields ().isCIDFont ()};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_eecf *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_daddf ,_cfaa :=_df .GetDict (_eecf ._dffed .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cfaa {_daddf =_df .MakeDict ();_eecf ._dffed .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_daddf );
};_bggef ,_cfaa :=_df .GetDict (_daddf .Get (_df .PdfObjectName (extName )));if !_cfaa {_bggef =_df .MakeDict ();_daddf .Set (_df .PdfObjectName (extName ),_bggef );};if _cdbeeg ,_ :=_df .GetNameVal (_bggef .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_cdbeeg !=baseVersion {_bggef .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_df .MakeName (baseVersion ));};if _dabgb ,_ :=_df .GetIntVal (_bggef .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_dabgb !=extLevel {_bggef .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_df .MakeInteger (int64 (extLevel )));};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;RD _df .PdfObject ;};

// B returns the value of the blue component of the color.
func (_bggg *PdfColorDeviceRGB )B ()float64 {return _bggg [2]};

// StdFontName represents name of a standard font.
type StdFontName =_aec .StdFontName ;

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gbaf *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bcdcb ,_gebc :=color .(*PdfColorDeviceRGB );if !_gebc {_gc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bcdcb ,nil ;};func (_bbga *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};func (_dfffeg *PdfWriter )getPdfVersion ()string {return _g .Sprintf ("\u0025\u0064\u002e%\u0064",_dfffeg ._ggaaa .Major ,_dfffeg ._ggaaa .Minor );};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_dfcfc *_df .PdfIndirectObject ;};func _bdega (_cecfa _df .PdfObject )(string ,error ){_cecfa =_df .TraceToDirectObject (_cecfa );switch _dgbagfe :=_cecfa .(type ){case *_df .PdfObjectString :return _dgbagfe .Str (),nil ;
case *_df .PdfObjectStream :_adeab ,_agacb :=_df .DecodeStream (_dgbagfe );if _agacb !=nil {return "",_agacb ;};return string (_adeab ),nil ;};return "",_g .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cecfa );
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_dbad *PdfColorspaceLab )GetNumComponents ()int {return 3};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _df .PdfObject ;Popup *PdfAnnotationPopup ;CA _df .PdfObject ;RC _df .PdfObject ;CreationDate _df .PdfObject ;IRT _df .PdfObject ;Subj _df .PdfObject ;RT _df .PdfObject ;IT _df .PdfObject ;ExData _df .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffcdd *PdfShadingType2 )ToPdfObject ()_df .PdfObject {_ffcdd .PdfShading .ToPdfObject ();_bdbaa ,_dgbce :=_ffcdd .getShadingDict ();if _dgbce !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdbaa ==nil {_gc .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _ffcdd .Coords !=nil {_bdbaa .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ffcdd .Coords );
};if _ffcdd .Domain !=nil {_bdbaa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ffcdd .Domain );};if _ffcdd .Function !=nil {if len (_ffcdd .Function )==1{_bdbaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffcdd .Function [0].ToPdfObject ());
}else {_daecb :=_df .MakeArray ();for _ ,_bddff :=range _ffcdd .Function {_daecb .Append (_bddff .ToPdfObject ());};_bdbaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daecb );};};if _ffcdd .Extend !=nil {_bdbaa .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ffcdd .Extend );
};return _ffcdd ._aedee ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_eagda *Image )GetParamsDict ()*_df .PdfObjectDictionary {_fdde :=_df .MakeDict ();_fdde .Set ("\u0057\u0069\u0064t\u0068",_df .MakeInteger (_eagda .Width ));_fdde .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_df .MakeInteger (_eagda .Height ));_fdde .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_df .MakeInteger (int64 (_eagda .ColorComponents )));
_fdde .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_df .MakeInteger (_eagda .BitsPerComponent ));return _fdde ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;BitsPerFlag *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};func (_gdegf *PdfReader )newPdfActionRenditionFromDict (_efc *_df .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_efc .Get ("\u0052"),AN :_efc .Get ("\u0041\u004e"),OP :_efc .Get ("\u004f\u0050"),JS :_efc .Get ("\u004a\u0053")},nil ;
};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_df .PdfObjectArray ;Domain *_df .PdfObjectArray ;Function []PdfFunction ;Extend *_df .PdfObjectArray ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_egdg *VRI )ToPdfObject ()*_df .PdfObjectDictionary {_gegf :=_df .MakeDict ();_gegf .SetIfNotNil (_df .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gbafee (_egdg .Cert ));_gegf .SetIfNotNil (_df .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gbafee (_egdg .OCSP ));
_gegf .SetIfNotNil (_df .PdfObjectName ("\u0043\u0052\u004c"),_gbafee (_egdg .CRL ));_gegf .SetIfNotNil ("\u0054\u0055",_egdg .TU );_gegf .SetIfNotNil ("\u0054\u0053",_egdg .TS );return _gegf ;};var _ pdfFont =(*pdfFontType3 )(nil );

// ToPdfObject implements interface PdfModel.
func (_fcgb *PdfActionNamed )ToPdfObject ()_df .PdfObject {_fcgb .PdfAction .ToPdfObject ();_gdeg :=_fcgb ._de ;_gbfg :=_gdeg .PdfObject .(*_df .PdfObjectDictionary );_gbfg .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeNamed )));_gbfg .SetIfNotNil ("\u004e",_fcgb .N );
return _gdeg ;};func _efaa (_dbfc _df .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gbce :=NewPdfColorspaceSpecialSeparation ();if _fabad ,_fcfdb :=_dbfc .(*_df .PdfIndirectObject );_fcfdb {_gbce ._ggfb =_fabad ;};_dbfc =_df .TraceToDirectObject (_dbfc );
_bfbd ,_ggag :=_dbfc .(*_df .PdfObjectArray );if !_ggag {return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _bfbd .Len ()!=4{return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_dbfc =_bfbd .Get (0);_gefb ,_ggag :=_dbfc .(*_df .PdfObjectName );if !_ggag {return nil ,_g .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gefb !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_g .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_dbfc =_bfbd .Get (1);_gefb ,_ggag =_dbfc .(*_df .PdfObjectName );if !_ggag {return nil ,_g .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gbce .ColorantName =_gefb ;_dbfc =_bfbd .Get (2);_aggf ,_gfcf :=NewPdfColorspaceFromPdfObject (_dbfc );if _gfcf !=nil {return nil ,_gfcf ;};_gbce .AlternateSpace =_aggf ;_bcagb ,_gfcf :=_ebcf (_bfbd .Get (3));if _gfcf !=nil {return nil ,_gfcf ;};_gbce .TintTransform =_bcagb ;
return _gbce ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdfa *PdfColorspaceDeviceGray )ToPdfObject ()_df .PdfObject {return _df .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// HasFontByName checks if has font resource by name.
func (_dacc *PdfPage )HasFontByName (name _df .PdfObjectName )bool {_fbfeb ,_feaf :=_dacc .Resources .Font .(*_df .PdfObjectDictionary );if !_feaf {return false ;};if _efedf :=_fbfeb .Get (name );_efedf !=nil {return true ;};return false ;};type pdfCIDFontType2 struct{fontCommon ;
_abefd *_df .PdfIndirectObject ;_efedg _cfe .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_df .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _df .PdfObject ;W _df .PdfObject ;DW2 _df .PdfObject ;W2 _df .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _df .PdfObject ;_acafg map[_cfe .CharCode ]float64 ;_ddeg float64 ;_dced map[rune ]int ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ecbc *PdfColorspaceSpecialIndexed )ToPdfObject ()_df .PdfObject {_efbe :=_df .MakeArray (_df .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_efbe .Append (_ecbc .Base .ToPdfObject ());_efbe .Append (_df .MakeInteger (int64 (_ecbc .HiVal )));
_efbe .Append (_ecbc .Lookup );if _ecbc ._bcdb !=nil {_ecbc ._bcdb .PdfObject =_efbe ;return _ecbc ._bcdb ;};return _efbe ;};

// ToPdfObject converts rectangle to a PDF object.
func (_bbece *PdfRectangle )ToPdfObject ()_df .PdfObject {return _df .MakeArray (_df .MakeFloat (_bbece .Llx ),_df .MakeFloat (_bbece .Lly ),_df .MakeFloat (_bbece .Urx ),_df .MakeFloat (_bbece .Ury ));};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;
XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject implements interface PdfModel.
func (_fbeg *PdfAnnotationPopup )ToPdfObject ()_df .PdfObject {_fbeg .PdfAnnotation .ToPdfObject ();_eeba :=_fbeg ._bef ;_gfdca :=_eeba .PdfObject .(*_df .PdfObjectDictionary );_gfdca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0050\u006f\u0070u\u0070"));
_gfdca .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbeg .Parent );_gfdca .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fbeg .Open );return _eeba ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_df .PdfObjectArray ;ExtGState _df .PdfObject ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_agee *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dda ,_egegd :=color .(*PdfColorDeviceCMYK );if !_egegd {_gc .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fggad :=_dda .C ();_agef :=_dda .M ();_cdcb :=_dda .Y ();_fbea :=_dda .K ();_fggad =_fggad *(1-_fbea )+_fbea ;_agef =_agef *(1-_fbea )+_fbea ;
_cdcb =_cdcb *(1-_fbea )+_fbea ;_gcfca :=1-_fggad ;_fabe :=1-_agef ;_egce :=1-_cdcb ;return NewPdfColorDeviceRGB (_gcfca ,_fabe ,_egce ),nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dccga :=&PdfOutlineItem {_dfee :_df .MakeIndirectObject (_df .MakeDict ())};_dccga ._dedbf =_dccga ;return _dccga ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_dbaa *PdfFont )SubsetRegistered ()error {switch _bfad :=_dbaa ._dfffe .(type ){case *pdfFontType0 :_cedbd :=_bfad .subsetRegistered ();if _cedbd !=nil {_gc .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cedbd );
return _cedbd ;};if _bfad ._gfdg !=nil {if _bfad ._degc !=nil {_bfad ._degc .ToPdfObject ();};_bfad .ToPdfObject ();};default:_gc .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bfad );
};return nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dg .ReadSeeker )(*PdfReader ,error ){const _bdegg ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _abag (rs ,&ReaderOpts {},false ,_bdegg );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eaeg pdfFontType3 )GetCharMetrics (code _cfe .CharCode )(_aec .CharMetrics ,bool ){if _dccgd ,_degb :=_eaeg ._fbfg [code ];_degb {return _aec .CharMetrics {Wx :_dccgd },true ;};if _aec .IsStdFont (_aec .StdFontName (_eaeg ._gbgf )){return _aec .CharMetrics {Wx :250},true ;
};return _aec .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_geg *PdfAnnotationCircle )ToPdfObject ()_df .PdfObject {_geg .PdfAnnotation .ToPdfObject ();_gagg :=_geg ._bef ;_fca :=_gagg .PdfObject .(*_df .PdfObjectDictionary );_geg .PdfAnnotationMarkup .appendToPdfDictionary (_fca );_fca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_fca .SetIfNotNil ("\u0042\u0053",_geg .BS );_fca .SetIfNotNil ("\u0049\u0043",_geg .IC );_fca .SetIfNotNil ("\u0042\u0045",_geg .BE );_fca .SetIfNotNil ("\u0052\u0044",_geg .RD );return _gagg ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_dfffb *PdfFieldText )ToPdfObject ()_df .PdfObject {_dfffb .PdfField .ToPdfObject ();_ageeb :=_dfffb ._gadcg ;_dedb :=_ageeb .PdfObject .(*_df .PdfObjectDictionary );_dedb .Set ("\u0046\u0054",_df .MakeName ("\u0054\u0078"));if _dfffb .DA !=nil {_dedb .Set ("\u0044\u0041",_dfffb .DA );
};if _dfffb .Q !=nil {_dedb .Set ("\u0051",_dfffb .Q );};if _dfffb .DS !=nil {_dedb .Set ("\u0044\u0053",_dfffb .DS );};if _dfffb .RV !=nil {_dedb .Set ("\u0052\u0056",_dfffb .RV );};if _dfffb .MaxLen !=nil {_dedb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_dfffb .MaxLen );
};return _ageeb ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_faeabd *PdfPageResources )GetXObjectImageByName (keyName _df .PdfObjectName )(*XObjectImage ,error ){_cfefc ,_fbefd :=_faeabd .GetXObjectByName (keyName );if _cfefc ==nil {return nil ,nil ;};if _fbefd !=XObjectTypeImage {return nil ,_cab .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_dfafc ,_aegf :=NewXObjectImageFromStream (_cfefc );if _aegf !=nil {return nil ,_aegf ;};return _dfafc ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dabe *PdfField )IsTerminal ()bool {return len (_dabe .Kids )==0};

// ToPdfObject returns the PDF representation of the function.
func (_ebcb *PdfFunctionType4 )ToPdfObject ()_df .PdfObject {_cbbbe :=_ebcb ._aabeb ;if _cbbbe ==nil {_ebcb ._aabeb =&_df .PdfObjectStream {};_cbbbe =_ebcb ._aabeb ;};_fffb :=_df .MakeDict ();_fffb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (4));
_adfff :=&_df .PdfObjectArray {};for _ ,_cacdf :=range _ebcb .Domain {_adfff .Append (_df .MakeFloat (_cacdf ));};_fffb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adfff );_gadaf :=&_df .PdfObjectArray {};for _ ,_dcedf :=range _ebcb .Range {_gadaf .Append (_df .MakeFloat (_dcedf ));
};_fffb .Set ("\u0052\u0061\u006eg\u0065",_gadaf );if _ebcb ._adbd ==nil &&_ebcb .Program !=nil {_ebcb ._adbd =[]byte (_ebcb .Program .String ());};_fffb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_ebcb ._adbd ))));_cbbbe .Stream =_ebcb ._adbd ;
_cbbbe .PdfObjectDictionary =_fffb ;return _cbbbe ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _df .PdfObject ;Name _df .PdfObject ;};func (_afdbeb *PdfWriter )hasObject (_faabd _df .PdfObject )bool {_ ,_fgdafc :=_afdbeb ._efced [_faabd ];return _fgdafc ;};func _bgece ()string {_dcdd .Lock ();
defer _dcdd .Unlock ();_dfbe :=_eec .GetLicenseKey ();if len (_bcef )> 0&&(_dfbe .IsLicensed ()||_bdcba ){return _bcef ;};return _g .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_afad (),_dfbe .TypeToString ());
};

// GetContainingPdfObject implements interface PdfModel.
func (_daaca *PdfSignature )GetContainingPdfObject ()_df .PdfObject {return _daaca ._cffgb };

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_dbdb *PdfColorspaceICCBased )GetContainingPdfObject ()_df .PdfObject {return _dbdb ._gddgg };func (_dagfe *pdfFontType0 )subsetRegistered ()error {_efaf ,_bbgcg :=_dagfe .DescendantFont ._dfffe .(*pdfCIDFontType2 );if !_bbgcg {_gc .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_dagfe .DescendantFont );
return nil ;};if _efaf ==nil {return nil ;};if _efaf ._cada ==nil {_gc .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _dagfe ._degc ==nil {_gc .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_cdaa ,_bbgcg :=_df .GetStream (_efaf ._cada .FontFile2 );if !_bbgcg {_gc .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cab .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dfef ,_fbgde :=_df .DecodeStream (_cdaa );if _fbgde !=nil {_gc .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fbgde );
return _fbgde ;};_efcgf ,_fbgde :=_ee .Parse (_dga .NewReader (_dfef ));if _fbgde !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cdaa .Stream ));
return _fbgde ;};var _cdafb []rune ;var _fbcg *_ee .Font ;switch _facefa :=_dagfe ._degc .(type ){case *_cfe .TrueTypeFontEncoder :_cdafb =_facefa .RegisteredRunes ();_fbcg ,_fbgde =_efcgf .SubsetKeepRunes (_cdafb );if _fbgde !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgde );
return _fbgde ;};_facefa .SubsetRegistered ();case *_cfe .IdentityEncoder :_cdafb =_facefa .RegisteredRunes ();_gcacf :=make ([]_ee .GlyphIndex ,len (_cdafb ));for _dbfa ,_fafeb :=range _cdafb {_gcacf [_dbfa ]=_ee .GlyphIndex (_fafeb );};_fbcg ,_fbgde =_efcgf .SubsetKeepIndices (_gcacf );
if _fbgde !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgde );return _fbgde ;};case _cfe .SimpleEncoder :_fcccc :=_facefa .Charcodes ();for _ ,_ggab :=range _fcccc {_baggg ,_fgda :=_facefa .CharcodeToRune (_ggab );if !_fgda {_gc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ggab );
continue ;};_cdafb =append (_cdafb ,_baggg );};default:return _g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_dagfe ._degc );
};var _befg _dga .Buffer ;_fbgde =_fbcg .Write (&_befg );if _fbgde !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgde );return _fbgde ;};if _dagfe ._eacb !=nil {_cffeg :=make (map[_fea .CharCode ]rune ,len (_cdafb ));for _ ,_ffaf :=range _cdafb {_adffb ,_dcbd :=_dagfe ._degc .RuneToCharcode (_ffaf );
if !_dcbd {continue ;};_cffeg [_fea .CharCode (_adffb )]=_ffaf ;};_dagfe ._eacb =_fea .NewToUnicodeCMap (_cffeg );};_cdaa ,_fbgde =_df .MakeStream (_befg .Bytes (),_df .NewFlateEncoder ());if _fbgde !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgde );
return _fbgde ;};_cdaa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_df .MakeInteger (int64 (_befg .Len ())));if _dfgfc ,_fgcfa :=_df .GetStream (_efaf ._cada .FontFile2 );_fgcfa {*_dfgfc =*_cdaa ;}else {_efaf ._cada .FontFile2 =_cdaa ;};_edfb :=_efdf ();
if len (_dagfe ._gbgf )> 0{_dagfe ._gbgf =_bfccb (_dagfe ._gbgf ,_edfb );};if len (_efaf ._gbgf )> 0{_efaf ._gbgf =_bfccb (_efaf ._gbgf ,_edfb );};if len (_dagfe ._eaebf )> 0{_dagfe ._eaebf =_bfccb (_dagfe ._eaebf ,_edfb );};if _efaf ._cada !=nil {_faef ,_eggbb :=_df .GetName (_efaf ._cada .FontName );
if _eggbb &&len (_faef .String ())> 0{_eacdg :=_bfccb (_faef .String (),_edfb );_efaf ._cada .FontName =_df .MakeName (_eacdg );};};return nil ;};

// Write writes out the PDF.
func (_abad *PdfWriter )Write (writer _dg .Writer )error {_gc .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ecfdb :=_abad .checkLicense ();if _ecfdb !=nil {return _ecfdb ;};if _ecfdb =_abad .writeOutlines ();_ecfdb !=nil {return _ecfdb ;};if _ecfdb =_abad .writeAcroFormFields ();
_ecfdb !=nil {return _ecfdb ;};_abad .checkPendingObjects ();if _ecfdb =_abad .writeOutputIntents ();_ecfdb !=nil {return _ecfdb ;};_abad .setCatalogVersion ();_abad .copyObjects ();if _ecfdb =_abad .optimize ();_ecfdb !=nil {return _ecfdb ;};if _ecfdb =_abad .optimizeDocument ();
_ecfdb !=nil {return _ecfdb ;};var _gddcf _ce .Hash ;if _abad ._ebeag {_gddcf =_gg .New ();writer =_dg .MultiWriter (_gddcf ,writer );};_abad .setWriter (writer );_ggacb :=_abad .checkCrossReferenceStream ();_gedae ,_ggacb :=_abad .mapObjectStreams (_ggacb );
_abad .adjustXRefAffectedVersion (_ggacb );_abad .writeDocumentVersion ();_abad .updateObjectNumbers ();_abad .writeObjects ();if _ecfdb =_abad .writeObjectsInStreams (_gedae );_ecfdb !=nil {return _ecfdb ;};_gagedb :=_abad ._debcg ;var _cgfgg int ;for _bgdfa :=range _abad ._bebee {if _bgdfa > _cgfgg {_cgfgg =_bgdfa ;
};};if _abad ._ebeag {if _ecfdb =_abad .setHashIDs (_gddcf );_ecfdb !=nil {return _ecfdb ;};};if _ggacb {if _ecfdb =_abad .writeXRefStreams (_cgfgg ,_gagedb );_ecfdb !=nil {return _ecfdb ;};}else {_abad .writeTrailer (_cgfgg );};_abad .makeOffSetReference (_gagedb );
if _ecfdb =_abad .flushWriter ();_ecfdb !=nil {return _ecfdb ;};return nil ;};

// SetAnnotations sets the annotations list.
func (_fgee *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_fgee ._fgbc =annotations };

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_eae *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_gc .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_gc .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_gc .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_gc .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_bbad ,_dcfb :=_fbg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gced ,img ._afgg );if _dcfb !=nil {return Image {},_dcfb ;};_becg ,_dcfb :=_fbg .NRGBAConverter .Convert (_bbad );if _dcfb !=nil {return Image {},_dcfb ;
};return _cgbga (_becg .Base ()),nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _df .PdfObject ;NewWindow _df .PdfObject ;T _df .PdfObject ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_cbab *PdfInfo )AddCustomInfo (name string ,value string )error {if _cbab ._ecbda ==nil {_cbab ._ecbda =_df .MakeDict ();};if _ ,_feef :=_bdgc [name ];_feef {return _g .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_cbab ._ecbda .SetIfNotNil (*_df .MakeName (name ),_df .MakeString (value ));return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_ccgd *PdfColorspaceICCBased )ToPdfObject ()_df .PdfObject {_bdcae :=&_df .PdfObjectArray {};_bdcae .Append (_df .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cbba *_df .PdfObjectStream ;if _ccgd ._gddgg !=nil {_cbba =_ccgd ._gddgg ;
}else {_cbba =&_df .PdfObjectStream {};};_cbdae :=_df .MakeDict ();_cbdae .Set ("\u004e",_df .MakeInteger (int64 (_ccgd .N )));if _ccgd .Alternate !=nil {_cbdae .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_ccgd .Alternate .ToPdfObject ());};if _ccgd .Metadata !=nil {_cbdae .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ccgd .Metadata );
};if _ccgd .Range !=nil {var _bcfcg []_df .PdfObject ;for _ ,_dbadc :=range _ccgd .Range {_bcfcg =append (_bcfcg ,_df .MakeFloat (_dbadc ));};_cbdae .Set ("\u0052\u0061\u006eg\u0065",_df .MakeArray (_bcfcg ...));};_cbdae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_ccgd .Data ))));
_cbba .Stream =_ccgd .Data ;_cbba .PdfObjectDictionary =_cbdae ;_bdcae .Append (_cbba );if _ccgd ._bcbff !=nil {_ccgd ._bcbff .PdfObject =_bdcae ;return _ccgd ._bcbff ;};return _bdcae ;};

// ToPdfObject implements interface PdfModel.
func (_eddg *PdfAnnotationUnderline )ToPdfObject ()_df .PdfObject {_eddg .PdfAnnotation .ToPdfObject ();_cgcc :=_eddg ._bef ;_ffcc :=_cgcc .PdfObject .(*_df .PdfObjectDictionary );_eddg .PdfAnnotationMarkup .appendToPdfDictionary (_ffcc );_ffcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ffcc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eddg .QuadPoints );return _cgcc ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_deefc *PdfPage )ToPdfObject ()_df .PdfObject {_dagcd :=_deefc ._dgbagf ;_deefc .GetPageDict ();return _dagcd ;};

// GetOptimizer returns current PDF optimizer.
func (_ceeag *PdfWriter )GetOptimizer ()Optimizer {return _ceeag ._adbbc };

// GetNumComponents returns the number of color components (3 for RGB).
func (_gda *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _dg .ReadSeeker )(*CompliancePdfReader ,error ){const _bedg ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_bccc ,_gccb :=_abag (rs ,&ReaderOpts {ComplianceMode :true },false ,_bedg );
if _gccb !=nil {return nil ,_gccb ;};return &CompliancePdfReader {PdfReader :_bccc },nil ;};func (_befd *PdfReader )newPdfAnnotationSquigglyFromDict (_dca *_df .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_eab :=PdfAnnotationSquiggly {};_gbcc ,_afge :=_befd .newPdfAnnotationMarkupFromDict (_dca );
if _afge !=nil {return nil ,_afge ;};_eab .PdfAnnotationMarkup =_gbcc ;_eab .QuadPoints =_dca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eab ,nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_cacfd *PdfPage )GetContentStreams ()([]string ,error ){_gffad :=_cacfd .GetContentStreamObjs ();var _bgfbc []string ;for _ ,_bcca :=range _gffad {_egdad ,_dgbdga :=_bdega (_bcca );if _dgbdga !=nil {return nil ,_dgbdga ;};_bgfbc =append (_bgfbc ,_egdad );
};return _bgfbc ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gbf *PdfAction )GetContext ()PdfModel {if _gbf ==nil {return nil ;};return _gbf ._eg ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aecad *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_gc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cab .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func (_aegda *PdfWriter )writeXRefStreams (_cabcc int ,_ceagbb int64 )error {_fadff :=_cabcc +1;_aegda ._bebee [_fadff ]=crossReference {Type :1,ObjectNumber :_fadff ,Offset :_ceagbb };
_efeffe :=_dga .NewBuffer (nil );_feddb :=_df .MakeArray ();for _bdad :=0;_bdad <=_cabcc ;{for ;_bdad <=_cabcc ;_bdad ++{_bafa ,_feecbe :=_aegda ._bebee [_bdad ];if _feecbe &&(!_aegda ._aaegc ||_aegda ._aaegc &&(_bafa .Type ==1&&_bafa .Offset >=_aegda ._gefdd ||_bafa .Type ==0)){break ;
};};var _gcedd int ;for _gcedd =_bdad +1;_gcedd <=_cabcc ;_gcedd ++{_ebfcg ,_agdee :=_aegda ._bebee [_gcedd ];if _agdee &&(!_aegda ._aaegc ||_aegda ._aaegc &&(_ebfcg .Type ==1&&_ebfcg .Offset > _aegda ._gefdd )){continue ;};break ;};_feddb .Append (_df .MakeInteger (int64 (_bdad )),_df .MakeInteger (int64 (_gcedd -_bdad )));
for _ccaad :=_bdad ;_ccaad < _gcedd ;_ccaad ++{_eebcga :=_aegda ._bebee [_ccaad ];switch _eebcga .Type {case 0:_d .Write (_efeffe ,_d .BigEndian ,byte (0));_d .Write (_efeffe ,_d .BigEndian ,uint32 (0));_d .Write (_efeffe ,_d .BigEndian ,uint16 (0xFFFF));
case 1:_d .Write (_efeffe ,_d .BigEndian ,byte (1));_d .Write (_efeffe ,_d .BigEndian ,uint32 (_eebcga .Offset ));_d .Write (_efeffe ,_d .BigEndian ,uint16 (_eebcga .Generation ));case 2:_d .Write (_efeffe ,_d .BigEndian ,byte (2));_d .Write (_efeffe ,_d .BigEndian ,uint32 (_eebcga .ObjectNumber ));
_d .Write (_efeffe ,_d .BigEndian ,uint16 (_eebcga .Index ));};};_bdad =_gcedd +1;};_bdfcef ,_addcb :=_df .MakeStream (_efeffe .Bytes (),_df .NewFlateEncoder ());if _addcb !=nil {return _addcb ;};_bdfcef .ObjectNumber =int64 (_fadff );_bdfcef .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0058\u0052\u0065\u0066"));
_bdfcef .PdfObjectDictionary .Set ("\u0057",_df .MakeArray (_df .MakeInteger (1),_df .MakeInteger (4),_df .MakeInteger (2)));_bdfcef .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_feddb );_bdfcef .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_df .MakeInteger (int64 (_fadff +1)));
_bdfcef .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_aegda ._eadb );_bdfcef .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_aegda ._dddgcc );if _aegda ._aaegc &&_aegda ._fcegd > 0{_bdfcef .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_df .MakeInteger (_aegda ._fcegd ));
};if _aegda ._gfda !=nil {_bdfcef .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_aegda ._dfeeb );};if _aegda ._gbaag ==nil &&_aegda ._cecfgg !=""&&_aegda ._dfabe !=""{_aegda ._gbaag =_df .MakeArray (_df .MakeHexString (_aegda ._cecfgg ),_df .MakeHexString (_aegda ._dfabe ));
};if _aegda ._gbaag !=nil {_gc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_aegda ._gbaag );_bdfcef .Set ("\u0049\u0044",_aegda ._gbaag );};_aegda .writeObject (int (_bdfcef .ObjectNumber ),_bdfcef );return nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dbfab *PdfPageResources )GetShadingByName (keyName _df .PdfObjectName )(*PdfShading ,bool ){if _dbfab .Shading ==nil {return nil ,false ;};_edebb ,_fagac :=_df .TraceToDirectObject (_dbfab .Shading ).(*_df .PdfObjectDictionary );if !_fagac {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbfab .Shading );
return nil ,false ;};if _fadc :=_edebb .Get (keyName );_fadc !=nil {_bccg ,_cbgf :=_dfbbc (_fadc );if _cbgf !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cbgf );
return nil ,false ;};return _bccg ,true ;};return nil ,false ;};

// Transform rectangle with the supplied matrix.
func (_dgeae *PdfRectangle )Transform (transformMatrix _ec .Matrix ){_dgeae .Llx ,_dgeae .Lly =transformMatrix .Transform (_dgeae .Llx ,_dgeae .Lly );_dgeae .Urx ,_dgeae .Ury =transformMatrix .Transform (_dgeae .Urx ,_dgeae .Ury );_dgeae .Normalize ();
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fddeef *PdfShadingPatternType2 )ToPdfObject ()_df .PdfObject {_fddeef .PdfPattern .ToPdfObject ();_acegec :=_fddeef .getDict ();if _fddeef .Shading !=nil {_acegec .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fddeef .Shading .ToPdfObject ());};
if _fddeef .Matrix !=nil {_acegec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fddeef .Matrix );};if _fddeef .ExtGState !=nil {_acegec .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fddeef .ExtGState );};return _fddeef ._fdceb ;};func (_bceba *PdfWriter )writeBytes (_bebeef []byte ){if _bceba ._baece !=nil {return ;
};_fccfe ,_deggc :=_bceba ._cfagf .Write (_bebeef );_bceba ._debcg +=int64 (_fccfe );_bceba ._baece =_deggc ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fa :=NewPdfAction ();_edd :=&PdfActionLaunch {};_edd .PdfAction =_fa ;_fa .SetContext (_edd );return _edd ;};func (_ccfba *PdfReader )resolveReference (_gdcf *_df .PdfObjectReference )(_df .PdfObject ,bool ,error ){_ecdd ,_fdagd :=_ccfba ._ecafc .ObjCache [int (_gdcf .ObjectNumber )];
if !_fdagd {_gc .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gdcf );_bbdcae ,_gccab :=_ccfba ._ecafc .LookupByReference (*_gdcf );if _gccab !=nil {return nil ,false ,_gccab ;};_ccfba ._ecafc .ObjCache [int (_gdcf .ObjectNumber )]=_bbdcae ;
return _bbdcae ,false ,nil ;};return _ecdd ,true ,nil ;};func _bbbef (_ddfbe *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_ddfbe }};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cfe .SimpleEncoder ,error ){_ffdg ,_facb :=_geeg (basefont );if _facb !=nil {return nil ,nil ,_facb ;};_bgead ,_fbeag :=_ffdg .Encoder ().(_cfe .SimpleEncoder );
if !_fbeag {return nil ,nil ,_g .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ffdg .Encoder ());
};_baae :=make (map[rune ]_cfe .GlyphName );for _ggadf :=range alphabet {if _ ,_fcffed :=_bgead .RuneToCharcode (_ggadf );!_fcffed {_ ,_bceedc :=_ffdg ._dfgaa .Read (_ggadf );if !_bceedc {_gc .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ggadf ,_ggadf );
continue ;};_cbdc ,_bceedc :=_cfe .RuneToGlyph (_ggadf );if !_bceedc {_gc .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ggadf ,_ggadf );continue ;};
if len (_baae )>=255{return nil ,nil ,_cab .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_baae [_ggadf ]=_cbdc ;};};var (_cfdc []_cfe .CharCode ;_gdfg []_cfe .CharCode ;);for _dgdcf :=_cfe .CharCode (1);_dgdcf <=0xff;_dgdcf ++{_dgfg ,_ffdb :=_bgead .CharcodeToRune (_dgdcf );if !_ffdb {_cfdc =append (_cfdc ,_dgdcf );continue ;};if _ ,_ffdb =alphabet [_dgfg ];
!_ffdb {_gdfg =append (_gdfg ,_dgdcf );};};_edaee :=append (_cfdc ,_gdfg ...);if len (_edaee )< len (_baae ){return nil ,nil ,_g .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_baae ),len (_edaee ));
};_effc :=make ([]rune ,0,len (_baae ));for _cfcb :=range _baae {_effc =append (_effc ,_cfcb );};_gb .Slice (_effc ,func (_fdfce ,_gfbf int )bool {return _effc [_fdfce ]< _effc [_gfbf ]});_fedf :=make (map[_cfe .CharCode ]_cfe .GlyphName ,len (_effc ));
for _ ,_acfa :=range _effc {_ebdb :=_edaee [0];_edaee =_edaee [1:];_fedf [_ebdb ]=_baae [_acfa ];};_bgead =_cfe .ApplyDifferences (_bgead ,_fedf );_ffdg .SetEncoder (_bgead );return &PdfFont {_dfffe :&_ffdg },_bgead ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ddcc *PdfPage )GetContainingPdfObject ()_df .PdfObject {return _ddcc ._dgbagf };func (_egaaeb *PdfWriter )updateObjectNumbers (){_agaba :=_egaaeb .ObjNumOffset ;_cbfa :=0;for _ ,_fece :=range _egaaeb ._ccdbg {_dabc :=int64 (_cbfa +1+_agaba );_aeeag :=true ;
if _egaaeb ._aaegc {if _dddfa ,_cgdbf :=_egaaeb ._geagg [_fece ];_cgdbf {_dabc =_dddfa ;_aeeag =false ;};};switch _fead :=_fece .(type ){case *_df .PdfIndirectObject :_fead .ObjectNumber =_dabc ;_fead .GenerationNumber =0;case *_df .PdfObjectStream :_fead .ObjectNumber =_dabc ;
_fead .GenerationNumber =0;case *_df .PdfObjectStreams :_fead .ObjectNumber =_dabc ;_fead .GenerationNumber =0;default:_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_fead );
continue ;};if _aeeag {_cbfa ++;};};_bdcaa :=func (_bdfe _df .PdfObject )int64 {switch _dbcgg :=_bdfe .(type ){case *_df .PdfIndirectObject :return _dbcgg .ObjectNumber ;case *_df .PdfObjectStream :return _dbcgg .ObjectNumber ;case *_df .PdfObjectStreams :return _dbcgg .ObjectNumber ;
};return 0;};_gb .SliceStable (_egaaeb ._ccdbg ,func (_fdgd ,_baabfc int )bool {return _bdcaa (_egaaeb ._ccdbg [_fdgd ])< _bdcaa (_egaaeb ._ccdbg [_baabfc ])});};func (_bdfb *PdfReader )loadAnnotations (_cgba _df .PdfObject )([]*PdfAnnotation ,error ){_cbaaf ,_bgeaa :=_df .GetArray (_cgba );
if !_bgeaa {return nil ,_g .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _ebbbf []*PdfAnnotation ;for _ ,_gagfc :=range _cbaaf .Elements (){_gagfc =_df .ResolveReference (_gagfc );
if _ ,_aebge :=_gagfc .(*_df .PdfObjectNull );_aebge {continue ;};_gcfbcd ,_ccbdd :=_gagfc .(*_df .PdfObjectDictionary );_bbcad ,_bcdfb :=_gagfc .(*_df .PdfIndirectObject );if _ccbdd {_bbcad =&_df .PdfIndirectObject {};_bbcad .PdfObject =_gcfbcd ;}else {if !_bcdfb {return nil ,_g .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_egedf ,_afdgd :=_bdfb .newPdfAnnotationFromIndirectObject (_bbcad );if _afdgd !=nil {return nil ,_afdgd ;};switch _egfbc :=_egedf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bdcfc :=range _bdfb .AcroForm .AllFields (){if _bdcfc ._gadcg ==_egfbc .Parent {_egfbc ._bfda =_bdcfc ;
break ;};};};if _egedf !=nil {_ebbbf =append (_ebbbf ,_egedf );};};return _ebbbf ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_dedea *pdfSignDictionary )WriteString ()string {_dedea ._efgbb =0;_dedea ._afedc =0;_dedea ._geafe =0;_dedea ._ccecd =0;_ebdbf :=_dga .NewBuffer (nil );_ebdbf .WriteString ("\u003c\u003c");for _ ,_dcfa :=range _dedea .Keys (){_fgaab :=_dedea .Get (_dcfa );
switch _dcfa {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ebdbf .WriteString (_dcfa .WriteString ());_ebdbf .WriteString ("\u0020");_dedea ._geafe =_ebdbf .Len ();_ebdbf .WriteString (_fgaab .WriteString ());_ebdbf .WriteString ("\u0020");_dedea ._ccecd =_ebdbf .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ebdbf .WriteString (_dcfa .WriteString ());_ebdbf .WriteString ("\u0020");_dedea ._efgbb =_ebdbf .Len ();_ebdbf .WriteString (_fgaab .WriteString ());_ebdbf .WriteString ("\u0020");_dedea ._afedc =_ebdbf .Len ()-1;
default:_ebdbf .WriteString (_dcfa .WriteString ());_ebdbf .WriteString ("\u0020");_ebdbf .WriteString (_fgaab .WriteString ());};};_ebdbf .WriteString ("\u003e\u003e");return _ebdbf .String ();};func (_fd *PdfReader )newPdfActionURIFromDict (_fgb *_df .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_fgb .Get ("\u0055\u0052\u0049"),IsMap :_fgb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fad *PdfAnnotation )GetContext ()PdfModel {if _fad ==nil {return nil ;};return _fad ._ged ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_ead *PdfAnnotation )ToPdfObject ()_df .PdfObject {_ddcd :=_ead ._bef ;_aeef :=_ddcd .PdfObject .(*_df .PdfObjectDictionary );_aeef .Clear ();_aeef .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0041\u006e\u006eo\u0074"));_aeef .SetIfNotNil ("\u0052\u0065\u0063\u0074",_ead .Rect );
_aeef .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ead .Contents );_aeef .SetIfNotNil ("\u0050",_ead .P );_aeef .SetIfNotNil ("\u004e\u004d",_ead .NM );_aeef .SetIfNotNil ("\u004d",_ead .M );_aeef .SetIfNotNil ("\u0046",_ead .F );_aeef .SetIfNotNil ("\u0041\u0050",_ead .AP );
_aeef .SetIfNotNil ("\u0041\u0053",_ead .AS );_aeef .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_ead .Border );_aeef .SetIfNotNil ("\u0043",_ead .C );_aeef .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ead .StructParent );
_aeef .SetIfNotNil ("\u004f\u0043",_ead .OC );return _ddcd ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cgaa FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cgaa .Mask ()|fl .Mask ())};func (_acgf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func _cdae (_bgde _df .PdfObject )(map[_cfe .CharCode ]float64 ,error ){if _bgde ==nil {return nil ,nil ;
};_bfadc ,_adgba :=_df .GetArray (_bgde );if !_adgba {return nil ,nil ;};_fcbca :=map[_cfe .CharCode ]float64 {};_daead :=_bfadc .Len ();for _gefbf :=0;_gefbf < _daead -1;_gefbf ++{_bfeg :=_df .TraceToDirectObject (_bfadc .Get (_gefbf ));_ddcb ,_dffgg :=_df .GetIntVal (_bfeg );
if !_dffgg {return nil ,_g .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gefbf ,_bfeg );};_gefbf ++;if _gefbf > _daead -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bfadc );
};_gcdag :=_df .TraceToDirectObject (_bfadc .Get (_gefbf ));switch _gcdag .(type ){case *_df .PdfObjectArray :_efee ,_ :=_df .GetArray (_gcdag );if _dgbdg ,_geddd :=_efee .ToFloat64Array ();_geddd ==nil {for _baaca :=0;_baaca < len (_dgbdg );_baaca ++{_fcbca [_cfe .CharCode (_ddcb +_baaca )]=_dgbdg [_baaca ];
};}else {return nil ,_g .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gefbf ,_gcdag );};case *_df .PdfObjectInteger :_egcc ,_beeg :=_df .GetIntVal (_gcdag );
if !_beeg {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gefbf ,_gcdag );};_gefbf ++;if _gefbf > _daead -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_bfadc );
};_cfgf :=_bfadc .Get (_gefbf );_cgbbea ,_fffaf :=_df .GetNumberAsFloat (_cfgf );if _fffaf !=nil {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gefbf ,_cfgf );
};for _gdbdc :=_ddcb ;_gdbdc <=_egcc ;_gdbdc ++{_fcbca [_cfe .CharCode (_gdbdc )]=_cgbbea ;};default:return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gefbf ,_gcdag );
};};return _fcbca ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_fceb ,_dgbag :=_aec .NewStdFontByName (HelveticaName );if !_dgbag {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_dffea :=_gagd (_fceb );return &PdfFont {_dfffe :&_dffea };};func (_fcbb *DSS )addOCSPs (_bggcd [][]byte )([]*_df .PdfObjectStream ,error ){return _fcbb .add (&_fcbb .OCSPs ,_fcbb ._ccgdf ,_bggcd );};func _cgffg (_gbgc *_df .PdfIndirectObject )(*PdfOutline ,error ){_acgcd ,_gffg :=_gbgc .PdfObject .(*_df .PdfObjectDictionary );
if !_gffg {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ffgba :=NewPdfOutline ();if _bdeae :=_acgcd .Get ("\u0054\u0079\u0070\u0065");
_bdeae !=nil {_ebff ,_aeaae :=_bdeae .(*_df .PdfObjectName );if _aeaae {if *_ebff !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ebff );
};};};if _gabdf :=_acgcd .Get ("\u0043\u006f\u0075n\u0074");_gabdf !=nil {_cbdef ,_cgaag :=_df .GetNumberAsInt64 (_gabdf );if _cgaag !=nil {return nil ,_cgaag ;};_ffgba .Count =&_cbdef ;};return _ffgba ,nil ;};var _dfceb =_cfb .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");


// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_eedd :=NewPdfAnnotation ();_cdg :=&PdfAnnotationPopup {};_cdg .PdfAnnotation =_eedd ;_eedd .SetContext (_cdg );return _cdg ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fcd :=&PdfAction {};_fcd ._de =_df .MakeIndirectObject (_df .MakeDict ());return _fcd ;};

// GetCerts returns the signature certificate chain.
func (_dfgad *PdfSignature )GetCerts ()([]*_ed .Certificate ,error ){var _ecgca []func ()([]*_ed .Certificate ,error );switch _bfaef ,_ :=_df .GetNameVal (_dfgad .SubFilter );_bfaef {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_ecgca =append (_ecgca ,_dfgad .extractChainFromPKCS7 ,_dfgad .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_ecgca =append (_ecgca ,_dfgad .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_ecgca =append (_ecgca ,_dfgad .extractChainFromPKCS7 );
default:return nil ,_g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bfaef );};for _ ,_ebgc :=range _ecgca {_bbbce ,_bedca :=_ebgc ();if _bedca !=nil {return nil ,_bedca ;
};if len (_bbbce )> 0{return _bbbce ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_ebeab *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ebeab .AlternateSpace ==nil {return nil ,_cab .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _ebeab .AlternateSpace .ColorToRGB (color );};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_df .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_df .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gbged *PdfPageResources )HasXObjectByName (keyName _df .PdfObjectName )bool {_dbdaf ,_ :=_gbged .GetXObjectByName (keyName );return _dbdaf !=nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dag :=NewPdfAnnotation ();_afeb :=&PdfAnnotationTrapNet {};_afeb .PdfAnnotation =_dag ;_dag .SetContext (_afeb );return _afeb ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);
FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);
FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);
FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// String returns the name of the colorspace (DeviceN).
func (_gabe *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_ggba FieldFlag )Has (fl FieldFlag )bool {return (_ggba .Mask ()&fl .Mask ())> 0};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dcdd .Lock ();defer _dcdd .Unlock ();_bdbda =keywords };

// ToInteger convert to an integer format.
func (_dbfec *PdfColorLab )ToInteger (bits int )[3]uint32 {_eadc :=_bf .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eadc *_dbfec .L ()),uint32 (_eadc *_dbfec .A ()),uint32 (_eadc *_dbfec .B ())};};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_df .PdfObjectDictionary )(*PdfPageResources ,error ){_daege :=NewPdfPageResources ();if _eeaaa :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_eeaaa !=nil {_daege .ExtGState =_eeaaa ;};if _gcgbe :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_gcgbe !=nil &&!_df .IsNullObject (_gcgbe ){_daege .ColorSpace =_gcgbe ;};if _cfdg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cfdg !=nil {_daege .Pattern =_cfdg ;};if _eaabg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_eaabg !=nil {_daege .Shading =_eaabg ;
};if _bedfd :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bedfd !=nil {_daege .XObject =_bedfd ;};if _aceed :=_df .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_aceed !=nil {_daege .Font =_aceed ;};if _cdgg :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_cdgg !=nil {_daege .ProcSet =_cdgg ;};if _dagbd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dagbd !=nil {_daege .Properties =_dagbd ;};return _daege ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_fcbd *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _geeda []_cfe .TextEncoder ;var _cegbe _cfe .CMapEncoder ;if _eefgd :=_fcbd .baseFields ()._eacb ;_eefgd !=nil {_cegbe =_cfe .NewCMapEncoder ("",nil ,_eefgd );};_ceec :=_fcbd .Encoder ();
if _ceec !=nil {switch _gbebb :=_ceec .(type ){case _cfe .SimpleEncoder :_efgc :=_gbebb .BaseName ();if _ ,_gdcd :=_cdde [_efgc ];_gdcd {_geeda =append (_geeda ,_ceec );};};};if len (_geeda )==0{if _fcbd .baseFields ()._eacb !=nil {_geeda =append (_geeda ,_cegbe );
};if _ceec !=nil {_geeda =append (_geeda ,_ceec );};};var _fgbba _dga .Buffer ;var _gfba int ;for _ ,_bdccdg :=range data {var _agab bool ;for _ ,_aeffg :=range _geeda {if _acdbff :=_aeffg .Encode (string (_bdccdg ));len (_acdbff )> 0{_fgbba .Write (_acdbff );
_agab =true ;break ;};};if !_agab {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bdccdg );
_gfba ++;};};if _gfba !=0{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_gfba ,_fcbd ,_geeda );
};return _fgbba .Bytes (),_gfba ;};

// ToPdfObject implements interface PdfModel.
func (_adeb *PdfAnnotationSquare )ToPdfObject ()_df .PdfObject {_adeb .PdfAnnotation .ToPdfObject ();_ffb :=_adeb ._bef ;_ddcg :=_ffb .PdfObject .(*_df .PdfObjectDictionary );if _adeb .PdfAnnotationMarkup !=nil {_adeb .PdfAnnotationMarkup .appendToPdfDictionary (_ddcg );
};_ddcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ddcg .SetIfNotNil ("\u0042\u0053",_adeb .BS );_ddcg .SetIfNotNil ("\u0049\u0043",_adeb .IC );_ddcg .SetIfNotNil ("\u0042\u0045",_adeb .BE );
_ddcg .SetIfNotNil ("\u0052\u0044",_adeb .RD );return _ffb ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bcccfc *PdfOutlineTreeNode )GetContext ()PdfModel {if _dffge ,_cacf :=_bcccfc ._dedbf .(*PdfOutline );_cacf {return _dffge ;};if _abgcc ,_efae :=_bcccfc ._dedbf .(*PdfOutlineItem );_efae {return _abgcc ;};_gc .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_gdcg *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ebba ,_ ,_eeagb :=_gdcg .CharcodesToUnicodeWithStats (_gdcg .BytesToCharcodes (data ));_cabc :=_cfe .ExpandLigatures (_ebba );return _cabc ,_a .RuneCountInString (_cabc ),_eeagb ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ccdga *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_affc ,_gegca :=_df .GetNumbersAsFloat (objects );
if _gegca !=nil {return nil ,_gegca ;};return _ccdga .ColorFromFloats (_affc );};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gdcb :=&PdfColorspaceDeviceN {};return _gdcb };

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;BitsPerFlag *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_edbe ,_adeaa :=_fb .Open (filePath );if _adeaa !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_adeaa );
return nil ,_adeaa ;};defer _edbe .Close ();return NewPdfFontFromTTF (_edbe );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_fcac *PdfColorspaceDeviceN )GetNumComponents ()int {return _fcac .ColorantNames .Len ()};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _df .PdfObject ;Open _df .PdfObject ;};func (_adcga *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_df .PdfObjectBool ;SigFlags *_df .PdfObjectInteger ;CO *_df .PdfObjectArray ;DR *PdfPageResources ;DA *_df .PdfObjectString ;Q *_df .PdfObjectInteger ;XFA _df .PdfObject ;_badgd *_df .PdfIndirectObject ;
};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_beag *PdfColorspaceLab )DecodeArray ()[]float64 {_bebb :=[]float64 {0,100};if _beag .Range !=nil &&len (_beag .Range )==4{_bebb =append (_bebb ,_beag .Range ...);}else {_bebb =append (_bebb ,-100,100,-100,100);};return _bebb ;};type fontCommon struct{_gbgf string ;
_fbegd string ;_eaebf string ;_gdca _df .PdfObject ;_eacb *_fea .CMap ;_cada *PdfFontDescriptor ;_faag int64 ;};

// GetVersion gets the document version.
func (_begag *PdfWriter )GetVersion ()_df .Version {return _begag ._ggaaa };

// String returns a string that describes `base`.
func (_abdd fontCommon )String ()string {return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_abdd .coreString ());};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dagdc *PdfColorspaceCalGray )ToPdfObject ()_df .PdfObject {_adcg :=&_df .PdfObjectArray {};_adcg .Append (_df .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_eaeb :=_df .MakeDict ();if _dagdc .WhitePoint !=nil {_eaeb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_df .MakeArray (_df .MakeFloat (_dagdc .WhitePoint [0]),_df .MakeFloat (_dagdc .WhitePoint [1]),_df .MakeFloat (_dagdc .WhitePoint [2])));
}else {_gc .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dagdc .BlackPoint !=nil {_eaeb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_df .MakeArray (_df .MakeFloat (_dagdc .BlackPoint [0]),_df .MakeFloat (_dagdc .BlackPoint [1]),_df .MakeFloat (_dagdc .BlackPoint [2])));
};_eaeb .Set ("\u0047\u0061\u006dm\u0061",_df .MakeFloat (_dagdc .Gamma ));_adcg .Append (_eaeb );if _dagdc ._dgdb !=nil {_dagdc ._dgdb .PdfObject =_adcg ;return _dagdc ._dgdb ;};return _adcg ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_gced []byte ;_afgg []float64 ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bgdec :=PdfWriter {};_bgdec ._efced =map[_df .PdfObject ]struct{}{};_bgdec ._ccdbg =[]_df .PdfObject {};_bgdec ._ccbecd =map[_df .PdfObject ][]*_df .PdfObjectDictionary {};_bgdec ._bdfae =map[_df .PdfObject ]struct{}{};_bgdec ._ggaaa .Major =1;
_bgdec ._ggaaa .Minor =3;_aefbg :=_df .MakeDict ();_gfagf :=[]struct{_eeddbd _df .PdfObjectName ;_ebfbdf string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bgece ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cefe ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cfeea ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_gdeef ()},{"\u0054\u0069\u0074l\u0065",_cefbd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_aebe ()}};
for _ ,_aadbd :=range _gfagf {if _aadbd ._ebfbdf !=""{_aefbg .Set (_aadbd ._eeddbd ,_df .MakeString (_aadbd ._ebfbdf ));};};if _afcaf :=_afdcc ();!_afcaf .IsZero (){if _ddbe ,_cadgd :=NewPdfDateFromTime (_afcaf );_cadgd ==nil {_aefbg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ddbe .ToPdfObject ());
};};if _badcgf :=_ffdab ();!_badcgf .IsZero (){if _gbeee ,_ffffb :=NewPdfDateFromTime (_badcgf );_ffffb ==nil {_aefbg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gbeee .ToPdfObject ());};};_cabg :=_df .PdfIndirectObject {};_cabg .PdfObject =_aefbg ;
_bgdec ._eadb =&_cabg ;_bgdec .addObject (&_cabg );_ggefdg :=_df .PdfIndirectObject {};_ddcbe :=_df .MakeDict ();_ddcbe .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ggefdg .PdfObject =_ddcbe ;_bgdec ._dddgcc =&_ggefdg ;
_bgdec .addObject (_bgdec ._dddgcc );_cbfeg ,_dcddd :=_ebbff ("\u0077");if _dcddd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcddd );};_bgdec ._efcd =_cbfeg ;_bffd :=_df .PdfIndirectObject {};_beeeg :=_df .MakeDict ();_beeeg .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050\u0061\u0067e\u0073"));
_gbecdd :=_df .PdfObjectArray {};_beeeg .Set ("\u004b\u0069\u0064\u0073",&_gbecdd );_beeeg .Set ("\u0043\u006f\u0075n\u0074",_df .MakeInteger (0));_bffd .PdfObject =_beeeg ;_bgdec ._fabbf =&_bffd ;_bgdec ._fcdaa =map[_df .PdfObject ]struct{}{};_bgdec .addObject (_bgdec ._fabbf );
_ddcbe .Set ("\u0050\u0061\u0067e\u0073",&_bffd );_bgdec ._dffed =_ddcbe ;_gc .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ggefdg );return _bgdec ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_aefbf *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _cacfe []*PdfField ;_ebcgg :=map[*_df .PdfIndirectObject ]struct{}{};for _ ,_edccg :=range _aefbf .PageList {_bbegd ,_adaef :=_edccg .GetAnnotations ();if _adaef !=nil {return _adaef ;
};for _ ,_ebcgb :=range _bbegd {var _bbfb *PdfField ;switch _fbbdb :=_ebcgb .GetContext ().(type ){case *PdfAnnotationWidget :if _fbbdb ._bfda !=nil {_bbfb =_fbbdb ._bfda ;break ;};if _dcdba ,_bacfc :=_df .GetIndirect (_fbbdb .Parent );_bacfc {_bbfb ,_adaef =_aefbf .newPdfFieldFromIndirectObject (_dcdba ,nil );
if _adaef ==nil {break ;};_gc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dcdba ,_adaef );
};if _fbbdb ._bef !=nil {_bbfb ,_adaef =_aefbf .newPdfFieldFromIndirectObject (_fbbdb ._bef ,nil );if _adaef ==nil {break ;};_gc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fbbdb ._bef ,_adaef );
};};if _bbfb ==nil {continue ;};if _ ,_cedga :=_ebcgg [_bbfb ._gadcg ];_cedga {continue ;};_ebcgg [_bbfb ._gadcg ]=struct{}{};_cacfe =append (_cacfe ,_bbfb );};};if len (_cacfe )==0{return nil ;};if _aefbf .AcroForm ==nil {_aefbf .AcroForm =NewPdfAcroForm ();
};_aefbf .AcroForm .Fields =&_cacfe ;return nil ;};var _cegc =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// GetPdfVersion gets the version of the PDF used within this document.
func (_cedbc *PdfWriter )GetPdfVersion ()string {return _cedbc .getPdfVersion ()};

// XObjectType represents the type of an XObject.
type XObjectType int ;func _cefe ()string {_dcdd .Lock ();defer _dcdd .Unlock ();if len (_cgdga )> 0{return _cgdga ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bdag *PdfPage )Size ()(float64 ,float64 ,error ){_bgdfd ,_edede :=_bdag .GetMediaBox ();if _edede !=nil {return 0,0,_edede ;};_ffbcf ,_egfa :=_bgdfd .Width (),_bgdfd .Height ();_eacbc ,_edede :=_bdag .GetRotate ();if _edede !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_edede .Error ());
};if _acbfd :=_eacbc ;_acbfd %360!=0&&_acbfd %90==0{if _efad :=(360+_acbfd %360)%360;_efad ==90||_efad ==270{_ffbcf ,_egfa =_egfa ,_ffbcf ;};};return _ffbcf ,_egfa ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_eaegb *PdfOutline )GetContainingPdfObject ()_df .PdfObject {return _eaegb ._affae };

// Fill populates `form` with values provided by `provider`.
func (_efeed *PdfAcroForm )Fill (provider FieldValueProvider )error {return _efeed .fill (provider ,nil )};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_febfg []byte )(_bafbf int ,_gccfa error );};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_acgdcf :=&PdfPageResourcesColorspaces {};_acgdcf .Names =[]string {};_acgdcf .Colorspaces =map[string ]PdfColorspace {};_acgdcf ._ebfbd =&_df .PdfIndirectObject {};return _acgdcf ;};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfActionResetForm )ToPdfObject ()_df .PdfObject {_fef .PdfAction .ToPdfObject ();_aee :=_fef ._de ;_bbf :=_aee .PdfObject .(*_df .PdfObjectDictionary );_bbf .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeResetForm )));_bbf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fef .Fields );
_bbf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fef .Flags );return _aee ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gddd ,_aebdf :=_geeg (basefont );if _aebdf !=nil {return nil ,_aebdf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gddd ._agga =_cfe .NewWinAnsiEncoder ();};return &PdfFont {_dfffe :&_gddd },nil ;
};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_df .PdfObjectString ;Q *_df .PdfObjectInteger ;DS *_df .PdfObjectString ;RV _df .PdfObject ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_bddfa *_df .PdfIndirectObject ;Certs []*_df .PdfObjectStream ;OCSPs []*_df .PdfObjectStream ;CRLs []*_df .PdfObjectStream ;VRI map[string ]*VRI ;_gead map[string ]*_df .PdfObjectStream ;_ccgdf map[string ]*_df .PdfObjectStream ;_dcaa map[string ]*_df .PdfObjectStream ;
};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_gebed :=&XObjectImage {};_deaaec :=&_df .PdfObjectStream {};_deaaec .PdfObjectDictionary =_df .MakeDict ();_gebed ._bbbgb =_deaaec ;return _gebed ;};func (_fege *PdfAppender )mergeResources (_eea ,_bfbg _df .PdfObject ,_ceff map[_df .PdfObjectName ]_df .PdfObjectName )_df .PdfObject {if _bfbg ==nil &&_eea ==nil {return nil ;
};if _bfbg ==nil {return _eea ;};_ebd ,_bfbgg :=_df .GetDict (_bfbg );if !_bfbgg {return _eea ;};if _eea ==nil {_fee :=_df .MakeDict ();_fee .Merge (_ebd );return _bfbg ;};_egaa ,_bfbgg :=_df .GetDict (_eea );if !_bfbgg {_gc .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_egaa =_df .MakeDict ();};for _ ,_eddga :=range _ebd .Keys (){if _caf ,_ccdd :=_ceff [_eddga ];_ccdd {_egaa .Set (_caf ,_ebd .Get (_eddga ));}else {_egaa .Set (_eddga ,_ebd .Get (_eddga ));};};return _egaa ;};

// GetPage returns the PdfPage model for the specified page number.
func (_fagg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _fagg ._ecafc .GetCrypter ()!=nil &&!_fagg ._ecafc .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_fagg ._fgec )< pageNumber {return nil ,_cab .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_ggcefa :=pageNumber -1;if _ggcefa < 0{return nil ,_g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_aedb :=_fagg .PageList [_ggcefa ];
return _aedb ,nil ;};func (_gfg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_feab *_df .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_efgb :=PdfAnnotationPrinterMark {};_efgb .MN =_feab .Get ("\u004d\u004e");return &_efgb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edbab *PdfShadingType1 )ToPdfObject ()_df .PdfObject {_edbab .PdfShading .ToPdfObject ();_cebdg ,_egfbb :=_edbab .getShadingDict ();if _egfbb !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edbab .Domain !=nil {_cebdg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edbab .Domain );};if _edbab .Matrix !=nil {_cebdg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_edbab .Matrix );};if _edbab .Function !=nil {if len (_edbab .Function )==1{_cebdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edbab .Function [0].ToPdfObject ());
}else {_efagf :=_df .MakeArray ();for _ ,_gagcf :=range _edbab .Function {_efagf .Append (_gagcf .ToPdfObject ());};_cebdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efagf );};};return _edbab ._aedee ;};

// String returns a string representation of what flags are set.
func (_adgb FieldFlag )String ()string {_eade :="";if _adgb ==FieldFlagClear {_eade ="\u0043\u006c\u0065a\u0072";return _eade ;};if _adgb &FieldFlagReadOnly > 0{_eade +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _adgb &FieldFlagRequired > 0{_eade +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _adgb &FieldFlagNoExport > 0{_eade +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _adgb &FieldFlagNoToggleToOff > 0{_eade +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _adgb &FieldFlagRadio > 0{_eade +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _adgb &FieldFlagPushbutton > 0{_eade +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _adgb &FieldFlagRadiosInUnision > 0{_eade +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _adgb &FieldFlagMultiline > 0{_eade +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _adgb &FieldFlagPassword > 0{_eade +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _adgb &FieldFlagFileSelect > 0{_eade +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _adgb &FieldFlagDoNotScroll > 0{_eade +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _adgb &FieldFlagComb > 0{_eade +="\u007c\u0043\u006fm\u0062";};if _adgb &FieldFlagRichText > 0{_eade +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _adgb &FieldFlagDoNotSpellCheck > 0{_eade +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _adgb &FieldFlagCombo > 0{_eade +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _adgb &FieldFlagEdit > 0{_eade +="\u007c\u0045\u0064i\u0074";};if _adgb &FieldFlagSort > 0{_eade +="\u007c\u0053\u006fr\u0074";};if _adgb &FieldFlagMultiSelect > 0{_eade +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _adgb &FieldFlagCommitOnSelChange > 0{_eade +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fg .Trim (_eade ,"\u007c");};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_df .PdfObjectArray ;Domain *_df .PdfObjectArray ;Function []PdfFunction ;Extend *_df .PdfObjectArray ;};type pdfFontType0 struct{fontCommon ;_gfdg *_df .PdfIndirectObject ;_degc _cfe .TextEncoder ;Encoding _df .PdfObject ;
DescendantFont *PdfFont ;_adab *_fea .CMap ;};

// IsValid checks if the given pdf output intent type is valid.
func (_gbae PdfOutputIntentType )IsValid ()bool {return _gbae >=PdfOutputIntentTypeA1 &&_gbae <=PdfOutputIntentTypeX ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dgdb *_df .PdfIndirectObject ;};func _fggcd (_fcgbd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fcgbd }};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bbea *PdfFieldButton )ToPdfObject ()_df .PdfObject {_bbea .PdfField .ToPdfObject ();_ddbc :=_bbea ._gadcg ;_eebec :=_ddbc .PdfObject .(*_df .PdfObjectDictionary );_eebec .Set ("\u0046\u0054",_df .MakeName ("\u0042\u0074\u006e"));if _bbea .Opt !=nil {_eebec .Set ("\u004f\u0070\u0074",_bbea .Opt );
};return _ddbc ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_aebad *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _aebad ._ecafc .GetRevisionNumber ()==0{return nil ,_cab .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _dccc ,_fbgab :=_aebad ._bbadeb [_aebad ];_fbgab {return _dccc ,nil ;};_eaag ,_efdb :=_aebad ._ecafc .GetPreviousRevisionReadSeeker ();if _efdb !=nil {return nil ,_efdb ;};_ecged ,_efdb :=_abag (_eaag ,_aebad ._aagfcb ,_aebad ._gbfbg ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _efdb !=nil {return nil ,_efdb ;};_aebad ._ababg [_aebad ._ecafc .GetRevisionNumber ()-1]=_ecged ;_aebad ._bbadeb [_aebad ]=_ecged ;_ecged ._bbadeb =_aebad ._bbadeb ;return _ecged ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_eeaac *PdfPageResources )ToPdfObject ()_df .PdfObject {_aeaca :=_eeaac ._fdbaec ;_aeaca .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eeaac .ExtGState );if _eeaac ._fbbca !=nil {_eeaac .ColorSpace =_eeaac ._fbbca .ToPdfObject ();
};_aeaca .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_eeaac .ColorSpace );_aeaca .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_eeaac .Pattern );_aeaca .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eeaac .Shading );
_aeaca .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_eeaac .XObject );_aeaca .SetIfNotNil ("\u0046\u006f\u006e\u0074",_eeaac .Font );_aeaca .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_eeaac .ProcSet );_aeaca .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_eeaac .Properties );
return _aeaca ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cagg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_eccg ,_acdc :=color .(*PdfColorCalGray );if !_acdc {_gc .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_eccg .Val ();X :=_cagg .WhitePoint [0]*_bf .Pow (ANorm ,_cagg .Gamma );Y :=_cagg .WhitePoint [1]*_bf .Pow (ANorm ,_cagg .Gamma );
Z :=_cagg .WhitePoint [2]*_bf .Pow (ANorm ,_cagg .Gamma );_abcd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_agae :=-0.969256*X +1.875992*Y +0.041556*Z ;_feedc :=0.055648*X +-0.204043*Y +1.057311*Z ;_abcd =_bf .Min (_bf .Max (_abcd ,0),1.0);_agae =_bf .Min (_bf .Max (_agae ,0),1.0);
_feedc =_bf .Min (_bf .Max (_feedc ,0),1.0);return NewPdfColorDeviceRGB (_abcd ,_agae ,_feedc ),nil ;};func _edacf (_abefc *_df .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cgef :=PdfShadingType1 {};if _fgedb :=_abefc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_fgedb !=nil {_fgedb =_df .TraceToDirectObject (_fgedb );_bgbd ,_aggde :=_fgedb .(*_df .PdfObjectArray );if !_aggde {_gc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgedb );
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgef .Domain =_bgbd ;};if _gfbgg :=_abefc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gfbgg !=nil {_gfbgg =_df .TraceToDirectObject (_gfbgg );
_bege ,_cbcfc :=_gfbgg .(*_df .PdfObjectArray );if !_cbcfc {_gc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfbgg );return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgef .Matrix =_bege ;};_acgeb :=_abefc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _acgeb ==nil {_gc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cgef .Function =[]PdfFunction {};if _fgdbf ,_accag :=_acgeb .(*_df .PdfObjectArray );_accag {for _ ,_fcdgc :=range _fgdbf .Elements (){_cgbggc ,_ggffd :=_ebcf (_fcdgc );if _ggffd !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggffd );
return nil ,_ggffd ;};_cgef .Function =append (_cgef .Function ,_cgbggc );};}else {_bfbf ,_cdafbc :=_ebcf (_acgeb );if _cdafbc !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdafbc );
return nil ,_cdafbc ;};_cgef .Function =append (_cgef .Function ,_bfbf );};return &_cgef ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cagf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cagf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cagf ._bcf =acroForm ;};func (_abccc *PdfSignature )extractChainFromCert ()([]*_ed .Certificate ,error ){var _ceagd *_df .PdfObjectArray ;
switch _bggda :=_abccc .Cert .(type ){case *_df .PdfObjectString :_ceagd =_df .MakeArray (_bggda );case *_df .PdfObjectArray :_ceagd =_bggda ;default:return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bggda );
};var _gccabf _dga .Buffer ;for _ ,_dfccd :=range _ceagd .Elements (){_eeef ,_dddfeg :=_df .GetString (_dfccd );if !_dddfeg {return nil ,_g .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dfccd );
};if _ ,_ebggca :=_gccabf .Write (_eeef .Bytes ());_ebggca !=nil {return nil ,_ebggca ;};};return _ed .ParseCertificates (_gccabf .Bytes ());};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_bcda :=&PdfShadingPatternType3 {};_bcda .Matrix =_df .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_bcda .PdfPattern =&PdfPattern {};_bcda .PdfPattern .PatternType =int64 (*_df .MakeInteger (2));
_bcda .PdfPattern ._bbdg =_bcda ;_bcda .PdfPattern ._fdceb =_df .MakeIndirectObject (_df .MakeDict ());return _bcda ;};

// ToPdfObject implements interface PdfModel.
func (_gebga *PdfAnnotationCaret )ToPdfObject ()_df .PdfObject {_gebga .PdfAnnotation .ToPdfObject ();_gcfa :=_gebga ._bef ;_bcbc :=_gcfa .PdfObject .(*_df .PdfObjectDictionary );_gebga .PdfAnnotationMarkup .appendToPdfDictionary (_bcbc );_bcbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0043\u0061\u0072e\u0074"));
_bcbc .SetIfNotNil ("\u0052\u0044",_gebga .RD );_bcbc .SetIfNotNil ("\u0053\u0079",_gebga .Sy );return _gcfa ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_aegc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _aegc .flattenFieldsWithOpts (false ,appgen ,opts );};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_dbccb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_fgddc :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_cfacc ,_adgcc :=_dbccb .GetNumPages ();if _adgcc !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adgcc );
return nil ,_adgcc ;};for _cadcb :=1;_cadcb <=_cfacc ;_cadcb ++{_eddc ,_eefbd :=_dbccb .GetPage (_cadcb );if _eefbd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eefbd );return nil ,_eefbd ;};if opts .PageProcessCallback !=nil {_eefbd =opts .PageProcessCallback (_cadcb ,_eddc );
if _eefbd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eefbd );return nil ,_eefbd ;};}else if opts .PageCallback !=nil {opts .PageCallback (_cadcb ,_eddc );};_eefbd =_fgddc .AddPage (_eddc );if _eefbd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eefbd );
return nil ,_eefbd ;};};_fgddc ._ggaaa =_dbccb .PdfVersion ();if !opts .SkipInfo {_fbbba ,_dfeae :=_dbccb .GetPdfInfo ();if _dfeae !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfeae );}else {_fgddc ._eadb .PdfObject =_fbbba .ToPdfObject ();
};};if !opts .SkipMetadata {if _daecc :=_dbccb ._fegcd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_daecc !=nil {if _bedc :=_fgddc .SetCatalogMetadata (_daecc );_bedc !=nil {return nil ,_bedc ;};};};if !opts .SkipAcroForm {_acbag :=_fgddc .SetForms (_dbccb .AcroForm );
if _acbag !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acbag );return nil ,_acbag ;};};if !opts .SkipOutlines {_fgddc .AddOutlineTree (_dbccb .GetOutlineTree ());};if !opts .SkipOCProperties {_aeefb ,_fgbec :=_dbccb .GetOCProperties ();
if _fgbec !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgbec );}else {_fgbec =_fgddc .SetOCProperties (_aeefb );if _fgbec !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgbec );};};};if !opts .SkipPageLabels {_faddb ,_afdf :=_dbccb .GetPageLabels ();
if _afdf !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afdf );}else {_afdf =_fgddc .SetPageLabels (_faddb );if _afdf !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afdf );};};};if !opts .SkipNamedDests {_bdcag ,_cbbbd :=_dbccb .GetNamedDestinations ();
if _cbbbd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbbbd );}else {_cbbbd =_fgddc .SetNamedDestinations (_bdcag );if _cbbbd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbbbd );};};};if !opts .SkipNameDictionary {_bgbba ,_effae :=_dbccb .GetNameDictionary ();
if _effae !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_effae );}else {_effae =_fgddc .SetNameDictionary (_bgbba );if _effae !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_effae );};};};if !opts .SkipRotation &&_dbccb .Rotate !=nil {if _eeagg :=_fgddc .SetRotation (*_dbccb .Rotate );
_eeagg !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eeagg );};};return &_fgddc ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_beaeg *PdfAcroForm )AllFields ()[]*PdfField {if _beaeg ==nil {return nil ;};var _eace []*PdfField ;if _beaeg .Fields !=nil {for _ ,_bffag :=range *_beaeg .Fields {_eace =append (_eace ,_aeaa (_bffag )...);};};return _eace ;};func (_deec *PdfReader )newPdfAnnotationProjectionFromDict (_dfdee *_df .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_dec :=&PdfAnnotationProjection {};
_aeeg ,_ccdg :=_deec .newPdfAnnotationMarkupFromDict (_dfdee );if _ccdg !=nil {return nil ,_ccdg ;};_dec .PdfAnnotationMarkup =_aeeg ;return _dec ,nil ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_bcabc *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _cab .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_bcabc .S =subtype ;return nil ;};func (_bfa *PdfReader )loadAction (_ceae _df .PdfObject )(*PdfAction ,error ){if _fgbb ,_gfec :=_df .GetIndirect (_ceae );_gfec {_fggd ,_ecf :=_bfa .newPdfActionFromIndirectObject (_fgbb );if _ecf !=nil {return nil ,_ecf ;
};return _fggd ,nil ;}else if !_df .IsNullObject (_ceae ){return nil ,_cab .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _df .PdfObject ;BS _df .PdfObject ;};

// ImageToRGB convert an indexed image to RGB.
func (_dbfb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_dbfb .Base .GetNumComponents ();if N < 1{return Image {},_g .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ecaf :=_fbg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._gced ,img ._afgg );_dfff :=_ac .NewReader (img .getBase ());_deed :=_ac .NewWriter (_ecaf );var (_bbgef uint32 ;_fcdag int ;_gbda error ;);for {_bbgef ,_gbda =_dfff .ReadSample ();
if _gbda ==_dg .EOF {break ;}else if _gbda !=nil {return img ,_gbda ;};_fcdag =int (_bbgef );_gc .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fcdag ,N ,len (_dbfb ._fcfb ));
if (_fcdag +1)*N > len (_dbfb ._fcfb ){_fcdag =len (_dbfb ._fcfb )/N -1;_gc .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fcdag );if _fcdag < 0{_gc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _eadd :=_fcdag *N ;_eadd < (_fcdag +1)*N ;_eadd ++{if _gbda =_deed .WriteSample (uint32 (_dbfb ._fcfb [_eadd ]));_gbda !=nil {return img ,_gbda ;};};};return _dbfb .Base .ImageToRGB (_cgbga (&_ecaf ));};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _df .PdfObjectArray )(*PdfRectangle ,error ){_aedcd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _cdabb error ;_aedcd .Llx ,_cdabb =_df .GetNumberAsFloat (arr .Get (0));if _cdabb !=nil {return nil ,_cdabb ;};_aedcd .Lly ,_cdabb =_df .GetNumberAsFloat (arr .Get (1));if _cdabb !=nil {return nil ,_cdabb ;};_aedcd .Urx ,_cdabb =_df .GetNumberAsFloat (arr .Get (2));
if _cdabb !=nil {return nil ,_cdabb ;};_aedcd .Ury ,_cdabb =_df .GetNumberAsFloat (arr .Get (3));if _cdabb !=nil {return nil ,_cdabb ;};return &_aedcd ,nil ;};func (_fgd *PdfReader )newPdfActionLaunchFromDict (_cabf *_df .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gdc ,_gfd :=_ddfg (_cabf .Get ("\u0046"));
if _gfd !=nil {return nil ,_gfd ;};return &PdfActionLaunch {Win :_cabf .Get ("\u0057\u0069\u006e"),Mac :_cabf .Get ("\u004d\u0061\u0063"),Unix :_cabf .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cabf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gdc },nil ;
};

// SetLocation sets the `Location` field of the signature.
func (_adbdc *PdfSignature )SetLocation (location string ){_adbdc .Location =_df .MakeString (location )};

// ValidateSignatures validates digital signatures in the document.
func (_dgebc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _dgebc .AcroForm ==nil {return nil ,nil ;};if _dgebc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_eaece *PdfSignature ;
_egba *PdfField ;_ecdf SignatureHandler ;};var _bgfed []*sigFieldPair ;for _ ,_gfaag :=range _dgebc .AcroForm .AllFields (){if _gfaag .V ==nil {continue ;};if _bbbfb ,_bgfbg :=_df .GetDict (_gfaag .V );_bgfbg {if _ceefg ,_fegcb :=_df .GetNameVal (_bbbfb .Get ("\u0054\u0079\u0070\u0065"));
_fegcb &&_ceefg =="\u0053\u0069\u0067"{_efbcg ,_ebfgc :=_df .GetIndirect (_gfaag .V );if !_ebfgc {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_ebbe ,_fdgfa :=_dgebc .newPdfSignatureFromIndirect (_efbcg );if _fdgfa !=nil {return nil ,_fdgfa ;};var _beaaf SignatureHandler ;for _ ,_gabca :=range handlers {if _gabca .IsApplicable (_ebbe ){_beaaf =_gabca ;break ;};};_bgfed =append (_bgfed ,&sigFieldPair {_eaece :_ebbe ,_egba :_gfaag ,_ecdf :_beaaf });
};};};var _egbg []SignatureValidationResult ;for _ ,_befdd :=range _bgfed {_dcfcg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_befdd ._egba }};if _befdd ._ecdf ==nil {_dcfcg .Errors =append (_dcfcg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_egbg =append (_egbg ,_dcfcg );continue ;};_eafba ,_fbcafc :=_befdd ._ecdf .NewDigest (_befdd ._eaece );if _fbcafc !=nil {_dcfcg .Errors =append (_dcfcg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fbcafc .Error ());_egbg =append (_egbg ,_dcfcg );
continue ;};_dffce :=_befdd ._eaece .ByteRange ;if _dffce ==nil {_dcfcg .Errors =append (_dcfcg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_egbg =append (_egbg ,_dcfcg );continue ;};for _eccd :=0;
_eccd < _dffce .Len ();_eccd =_eccd +2{_gaba ,_ :=_df .GetNumberAsInt64 (_dffce .Get (_eccd ));_cefff ,_ :=_df .GetIntVal (_dffce .Get (_eccd +1));if _ ,_cgacg :=_dgebc ._bdgca .Seek (_gaba ,_dg .SeekStart );_cgacg !=nil {return nil ,_cgacg ;};_fcgag :=make ([]byte ,_cefff );
if _ ,_ccdea :=_dgebc ._bdgca .Read (_fcgag );_ccdea !=nil {return nil ,_ccdea ;};_eafba .Write (_fcgag );};var _faed SignatureValidationResult ;if _cgddb ,_aedaf :=_befdd ._ecdf .(SignatureHandlerDocMDP );_aedaf {_faed ,_fbcafc =_cgddb .ValidateWithOpts (_befdd ._eaece ,_eafba ,SignatureHandlerDocMDPParams {Parser :_dgebc ._ecafc });
}else {_faed ,_fbcafc =_befdd ._ecdf .Validate (_befdd ._eaece ,_eafba );};if _fbcafc !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_fbcafc ,_befdd ._ecdf );_faed .Errors =append (_faed .Errors ,_fbcafc .Error ());
};_faed .Name =_befdd ._eaece .Name .Decoded ();_faed .Reason =_befdd ._eaece .Reason .Decoded ();if _befdd ._eaece .M !=nil {_badfd ,_abbbc :=NewPdfDate (_befdd ._eaece .M .String ());if _abbbc !=nil {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abbbc );
_faed .Errors =append (_faed .Errors ,_abbbc .Error ());continue ;};_faed .Date =_badfd ;};_faed .ContactInfo =_befdd ._eaece .ContactInfo .Decoded ();_faed .Location =_befdd ._eaece .Location .Decoded ();_faed .Fields =_dcfcg .Fields ;_egbg =append (_egbg ,_faed );
};return _egbg ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_beaegd *PdfFunctionType2 )ToPdfObject ()_df .PdfObject {_dgeff :=_df .MakeDict ();_dgeff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (2));_bebde :=&_df .PdfObjectArray {};for _ ,_cdbe :=range _beaegd .Domain {_bebde .Append (_df .MakeFloat (_cdbe ));
};_dgeff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bebde );if _beaegd .Range !=nil {_befda :=&_df .PdfObjectArray {};for _ ,_befbc :=range _beaegd .Range {_befda .Append (_df .MakeFloat (_befbc ));};_dgeff .Set ("\u0052\u0061\u006eg\u0065",_befda );
};if _beaegd .C0 !=nil {_effa :=&_df .PdfObjectArray {};for _ ,_ffff :=range _beaegd .C0 {_effa .Append (_df .MakeFloat (_ffff ));};_dgeff .Set ("\u0043\u0030",_effa );};if _beaegd .C1 !=nil {_dcgc :=&_df .PdfObjectArray {};for _ ,_egdfga :=range _beaegd .C1 {_dcgc .Append (_df .MakeFloat (_egdfga ));
};_dgeff .Set ("\u0043\u0031",_dcgc );};_dgeff .Set ("\u004e",_df .MakeFloat (_beaegd .N ));if _beaegd ._gaged !=nil {_beaegd ._gaged .PdfObject =_dgeff ;return _beaegd ._gaged ;};return _dgeff ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_eafa :=NewPdfAnnotation ();_fac :=&PdfAnnotationLink {};_fac .PdfAnnotation =_eafa ;_eafa .SetContext (_fac );return _fac ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_deafg *PdfShadingType4 )ToPdfObject ()_df .PdfObject {_deafg .PdfShading .ToPdfObject ();_cadcg ,_fcae :=_deafg .getShadingDict ();if _fcae !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _deafg .BitsPerCoordinate !=nil {_cadcg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_deafg .BitsPerCoordinate );};if _deafg .BitsPerComponent !=nil {_cadcg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_deafg .BitsPerComponent );
};if _deafg .BitsPerFlag !=nil {_cadcg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_deafg .BitsPerFlag );};if _deafg .Decode !=nil {_cadcg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_deafg .Decode );};if _deafg .Function !=nil {if len (_deafg .Function )==1{_cadcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deafg .Function [0].ToPdfObject ());
}else {_dged :=_df .MakeArray ();for _ ,_fceg :=range _deafg .Function {_dged .Append (_fceg .ToPdfObject ());};_cadcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dged );};};return _deafg ._aedee ;};

// Register registers (caches) a model to primitive object relationship.
func (_eacbe *modelManager )Register (primitive _df .PdfObject ,model PdfModel ){_eacbe ._dgdff [model ]=primitive ;_eacbe ._edgeb [primitive ]=model ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_eacba *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_dffef :=NewPdfOutlineItem ();_dffef .Title =_df .MakeEncodedString (_eacba .Title ,true );_dffef .Dest =_eacba .Dest .ToPdfObject ();var _geegb []*PdfOutlineItem ;var _fbbb int64 ;
var _gaea *PdfOutlineItem ;for _ ,_afggc :=range _eacba .Entries {_eabec ,_bagde :=_afggc .ToPdfOutlineItem ();_eabec .Parent =&_dffef .PdfOutlineTreeNode ;if _gaea !=nil {_gaea .Next =&_eabec .PdfOutlineTreeNode ;_eabec .Prev =&_gaea .PdfOutlineTreeNode ;
};_geegb =append (_geegb ,_eabec );_fbbb +=_bagde ;_gaea =_eabec ;};_dbbe :=len (_geegb );_fbbb +=int64 (_dbbe );if _dbbe > 0{_dffef .First =&_geegb [0].PdfOutlineTreeNode ;_dffef .Last =&_geegb [_dbbe -1].PdfOutlineTreeNode ;_dffef .Count =&_fbbb ;};return _dffef ,_fbbb ;
};func (_gce *PdfReader )newPdfActionJavaScriptFromDict (_adfe *_df .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_adfe .Get ("\u004a\u0053")},nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _df .PdfObject ;Name _df .PdfObject ;State _df .PdfObject ;StateModel _df .PdfObject ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _df .PdfObject ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_abcdg *PdfAcroForm )GetContainingPdfObject ()_df .PdfObject {return _abcdg ._badgd };func (_adff *DSS )addCRLs (_ffgfa [][]byte )([]*_df .PdfObjectStream ,error ){return _adff .add (&_adff .CRLs ,_adff ._dcaa ,_ffgfa );};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _df .PdfObject ;ColorSpace _df .PdfObject ;Pattern _df .PdfObject ;Shading _df .PdfObject ;XObject _df .PdfObject ;Font _df .PdfObject ;ProcSet _df .PdfObject ;Properties _df .PdfObject ;_fdbaec *_df .PdfObjectDictionary ;
_fbbca *PdfPageResourcesColorspaces ;};func (_egded *pdfFontType3 )baseFields ()*fontCommon {return &_egded .fontCommon };

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ddab *PdfPageResources )GetPatternByName (keyName _df .PdfObjectName )(*PdfPattern ,bool ){if _ddab .Pattern ==nil {return nil ,false ;};_aafdee ,_dcbdg :=_df .TraceToDirectObject (_ddab .Pattern ).(*_df .PdfObjectDictionary );if !_dcbdg {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddab .Pattern );
return nil ,false ;};if _accb :=_aafdee .Get (keyName );_accb !=nil {_cbfdc ,_eddec :=_facf (_accb );if _eddec !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_eddec );
return nil ,false ;};return _cbfdc ,true ;};return nil ,false ;};

// Encoder returns the font's text encoder.
func (_bffb pdfCIDFontType2 )Encoder ()_cfe .TextEncoder {return _bffb ._efedg };

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gdegc *DSS )ToPdfObject ()_df .PdfObject {_aagec :=_gdegc ._bddfa .PdfObject .(*_df .PdfObjectDictionary );_aagec .Clear ();_bcfea :=_df .MakeDict ();for _aecfa ,_acgff :=range _gdegc .VRI {_bcfea .Set (*_df .MakeName (_aecfa ),_acgff .ToPdfObject ());
};_aagec .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gbafee (_gdegc .Certs ));_aagec .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gbafee (_gdegc .OCSPs ));_aagec .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gbafee (_gdegc .CRLs ));_aagec .Set ("\u0056\u0052\u0049",_bcfea );
return _gdegc ._bddfa ;};func _edec (_dgdba *_df .PdfObjectDictionary ,_dcbb *fontCommon )(*pdfFontType3 ,error ){_gdge :=_acbae (_dcbb );_gggg :=_dgdba .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gggg ==nil {_gggg =_df .MakeInteger (0);};
_gdge .FirstChar =_gggg ;_aedfc ,_decc :=_df .GetIntVal (_gggg );if !_decc {_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gggg );
return nil ,_df .ErrTypeError ;};_dfbf :=_cfe .CharCode (_aedfc );_gggg =_dgdba .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gggg ==nil {_gggg =_df .MakeInteger (255);};_gdge .LastChar =_gggg ;_aedfc ,_decc =_df .GetIntVal (_gggg );if !_decc {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gggg );
return nil ,_df .ErrTypeError ;};_feabg :=_cfe .CharCode (_aedfc );_gggg =_dgdba .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gggg !=nil {_gdge .Resources =_gggg ;};_gggg =_dgdba .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _gggg ==nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_gggg );
return nil ,_df .ErrNotSupported ;};_gdge .CharProcs =_gggg ;_gggg =_dgdba .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _gggg ==nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_gggg );
return nil ,_df .ErrNotSupported ;};_gdge .FontMatrix =_gggg ;_gdge ._fbfg =make (map[_cfe .CharCode ]float64 );_gggg =_dgdba .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gggg !=nil {_gdge .Widths =_gggg ;_ggeea ,_aafg :=_df .GetArray (_gggg );if !_aafg {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gggg );
return nil ,_df .ErrTypeError ;};_bdacb ,_efbc :=_ggeea .ToFloat64Array ();if _efbc !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_efbc ;};if len (_bdacb )!=int (_feabg -_dfbf +1){_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_feabg -_dfbf +1,len (_bdacb ));
return nil ,_df .ErrRangeError ;};_aafb ,_aafg :=_df .GetArray (_gdge .FontMatrix );if !_aafg {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_aafb );
return nil ,_efbc ;};_feeg ,_efbc :=_aafb .ToFloat64Array ();if _efbc !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_efbc ;};_dcdbb :=_ec .NewMatrix (_feeg [0],_feeg [1],_feeg [2],_feeg [3],_feeg [4],_feeg [5]);for _badcg ,_eeda :=range _bdacb {_dbdaa ,_ :=_dcdbb .Transform (_eeda ,_eeda );_gdge ._fbfg [_dfbf +_cfe .CharCode (_badcg )]=_dbdaa ;};};_gdge .Encoding =_df .TraceToDirectObject (_dgdba .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_affag :=_dgdba .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _affag !=nil {_gdge ._gdca =_df .TraceToDirectObject (_affag );_cagbc ,_cdbd :=_ecdag (_gdge ._gdca ,&_gdge .fontCommon );if _cdbd !=nil {return nil ,_cdbd ;};_gdge ._eacb =_cagbc ;
};if _dgff :=_gdge ._eacb ;_dgff !=nil {_gdge ._gedgg =_cfe .NewCMapEncoder ("",nil ,_dgff );}else {_gdge ._gedgg =_cfe .NewPdfDocEncoder ();};return _gdge ,nil ;};

// GetBorderWidth returns the border style's width.
func (_dfda *PdfBorderStyle )GetBorderWidth ()float64 {if _dfda .W ==nil {return 1;};return *_dfda .W ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_fcebg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _fcebg ._aace ==nil {_fcebg ._aace =_ae .NewPSExecutor (_fcebg .Program );};var _agac []_ae .PSObject ;for _ ,_aebgc :=range xVec {_agac =append (_agac ,_ae .MakeReal (_aebgc ));
};_ccbcf ,_caggf :=_fcebg ._aace .Execute (_agac );if _caggf !=nil {return nil ,_caggf ;};_ggecf ,_caggf :=_ae .PSObjectArrayToFloat64Array (_ccbcf );if _caggf !=nil {return nil ,_caggf ;};return _ggecf ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_egfb :=map[rune ]int {};for _ ,_cgeca :=range text {_egfb [_cgeca ]++;};return _egfb ;};func _ebgag (_dfcfed *_df .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dgbde :=PdfShadingType5 {};_cdag :=_dfcfed .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _cdag ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gccabc ,_dceeb :=_cdag .(*_df .PdfObjectInteger );if !_dceeb {_gc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdag );
return nil ,_df .ErrTypeError ;};_dgbde .BitsPerCoordinate =_gccabc ;_cdag =_dfcfed .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cdag ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gccabc ,_dceeb =_cdag .(*_df .PdfObjectInteger );if !_dceeb {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cdag );
return nil ,_df .ErrTypeError ;};_dgbde .BitsPerComponent =_gccabc ;_cdag =_dfcfed .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cdag ==nil {_gc .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_gccabc ,_dceeb =_cdag .(*_df .PdfObjectInteger );if !_dceeb {_gc .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cdag );
return nil ,_df .ErrTypeError ;};_dgbde .VerticesPerRow =_gccabc ;_cdag =_dfcfed .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cdag ==nil {_gc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebffe ,_dceeb :=_cdag .(*_df .PdfObjectArray );if !_dceeb {_gc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdag );
return nil ,_df .ErrTypeError ;};_dgbde .Decode =_ebffe ;if _bdgaa :=_dfcfed .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bdgaa !=nil {_dgbde .Function =[]PdfFunction {};if _aedfdd ,_fddcc :=_bdgaa .(*_df .PdfObjectArray );_fddcc {for _ ,_gbgdd :=range _aedfdd .Elements (){_aeeba ,_bbde :=_ebcf (_gbgdd );
if _bbde !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbde );return nil ,_bbde ;};_dgbde .Function =append (_dgbde .Function ,_aeeba );
};}else {_cgcd ,_edcfd :=_ebcf (_bdgaa );if _edcfd !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edcfd );return nil ,_edcfd ;
};_dgbde .Function =append (_dgbde .Function ,_cgcd );};};return &_dgbde ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ae .PSProgram ;_aace *_ae .PSExecutor ;_adbd []byte ;_aabeb *_df .PdfObjectStream ;};func _ddfg (_dgg _df .PdfObject )(*PdfFilespec ,error ){if _dgg ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_dgg );
};

// GetXObjectByName gets XObject by name.
func (_agfda *PdfPage )GetXObjectByName (name _df .PdfObjectName )(_df .PdfObject ,bool ){_afcgg ,_fdda :=_agfda .Resources .XObject .(*_df .PdfObjectDictionary );if !_fdda {return nil ,false ;};if _gedab :=_afcgg .Get (name );_gedab !=nil {return _gedab ,true ;
};return nil ,false ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_cagcf *PdfPageResources )HasFontByName (keyName _df .PdfObjectName )bool {_ ,_gfegef :=_cagcf .GetFontByName (keyName );return _gfegef ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_eafee :map[_df .PdfObject ]struct{}{},_cggbe :_egcea (),_ecafc :_df .NewParserFromString (txt )};};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dgae *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_eafc :=range pages {_eafc =_eafc .Duplicate ();_cbcba (_eafc );_dgae ._ceee =append (_dgae ._ceee ,_eafc );};};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;VerticesPerRow *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_bccb :=&PdfShadingPatternType2 {};_bccb .Matrix =_df .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_bccb .PdfPattern =&PdfPattern {};_bccb .PdfPattern .PatternType =int64 (*_df .MakeInteger (2));
_bccb .PdfPattern ._bbdg =_bccb ;_bccb .PdfPattern ._fdceb =_df .MakeIndirectObject (_df .MakeDict ());return _bccb ;};var _ pdfFont =(*pdfFontType0 )(nil );

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ccbg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bgbf []float64 ;for _dgac :=0;_dgac < _ccbg .GetNumComponents ();_dgac ++{_bgbf =append (_bgbf ,0.0,1.0);};return _bgbf ;};func (_aagce *pdfFontType0 )bytesToCharcodes (_bfeaa []byte )([]_cfe .CharCode ,bool ){if _aagce ._adab ==nil {return nil ,false ;
};_ccbb ,_aefb :=_aagce ._adab .BytesToCharcodes (_bfeaa );if !_aefb {return nil ,false ;};_acgb :=make ([]_cfe .CharCode ,len (_ccbb ));for _fded ,_afccc :=range _ccbb {_acgb [_fded ]=_cfe .CharCode (_afccc );};return _acgb ,true ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_bgbb *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_fdaf :=0.3*_bgbb .R ()+0.59*_bgbb .G ()+0.11*_bgbb .B ();_fdaf =_bf .Min (_bf .Max (_fdaf ,0.0),1.0);return NewPdfColorDeviceGray (_fdaf );};

// GetContainingPdfObject implements interface PdfModel.
func (_fgf *PdfAction )GetContainingPdfObject ()_df .PdfObject {return _fgf ._de };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_ecbcd *PdfWriter )SetDocInfo (info *PdfInfo ){_ecbcd .setDocInfo (info .ToPdfObject ())};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_cbbbc *modelManager )GetModelFromPrimitive (primitive _df .PdfObject )PdfModel {model ,_agfed :=_cbbbc ._edgeb [primitive ];if !_agfed {return nil ;};return model ;};func _cefbd ()string {_dcdd .Lock ();defer _dcdd .Unlock ();return _baafa };func _bfead (_decee _df .PdfObject )[]*_df .PdfObjectStream {if _decee ==nil {return nil ;
};_eddabg ,_abgfa :=_df .GetArray (_decee );if !_abgfa ||_eddabg .Len ()==0{return nil ;};_ddge :=make ([]*_df .PdfObjectStream ,0,_eddabg .Len ());for _ ,_eaabb :=range _eddabg .Elements (){if _fabdf ,_fdebg :=_df .GetStream (_eaabb );_fdebg {_ddge =append (_ddge ,_fabdf );
};};return _ddge ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cdff DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cecc :=NewPdfAnnotation ();_agg :=&PdfAnnotationPolyLine {};_agg .PdfAnnotation =_cecc ;_agg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cecc .SetContext (_agg );return _agg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dgaf *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// GetSubFilter returns SubFilter value or empty string.
func (_dffgeb *pdfSignDictionary )GetSubFilter ()string {_bbedf :=_dffgeb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _bbedf ==nil {return "";};if _cgbgc ,_dcdegf :=_df .GetNameVal (_bbedf );_dcdegf {return _cgbgc ;};return "";};var _ pdfFont =(*pdfFontSimple )(nil );


// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_bcebe *CompliancePdfReader )error ;};type pdfFont interface{_aec .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_df .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_bgd *PdfActionMovie )ToPdfObject ()_df .PdfObject {_bgd .PdfAction .ToPdfObject ();_acf :=_bgd ._de ;_cag :=_acf .PdfObject .(*_df .PdfObjectDictionary );_cag .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeMovie )));_cag .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bgd .Annotation );
_cag .SetIfNotNil ("\u0054",_bgd .T );_cag .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bgd .Operation );return _acf ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func (_befc *PdfReader )newPdfAnnotationWidgetFromDict (_bad *_df .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_bcb :=PdfAnnotationWidget {};_bcb .H =_bad .Get ("\u0048");
_bcb .MK =_bad .Get ("\u004d\u004b");_bcb .A =_bad .Get ("\u0041");_bcb .AA =_bad .Get ("\u0041\u0041");_bcb .BS =_bad .Get ("\u0042\u0053");_bcb .Parent =_bad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_bcb ,nil ;};func (_gdcgc *PdfReader )newPdfOutlineItemFromIndirectObject (_aecd *_df .PdfIndirectObject )(*PdfOutlineItem ,error ){_edggb ,_cegcf :=_aecd .PdfObject .(*_df .PdfObjectDictionary );
if !_cegcf {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fbede :=NewPdfOutlineItem ();_bdefb :=_edggb .Get ("\u0054\u0069\u0074l\u0065");
if _bdefb ==nil {return nil ,_g .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_faffd ,_bcae :=_df .GetString (_bdefb );if !_bcae {return nil ,_g .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bdefb );};_fbede .Title =_faffd ;if _fdfeb :=_edggb .Get ("\u0043\u006f\u0075n\u0074");
_fdfeb !=nil {_gedc ,_gfed :=_fdfeb .(*_df .PdfObjectInteger );if !_gfed {return nil ,_g .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fdfeb );};_bcbbf :=int64 (*_gedc );
_fbede .Count =&_bcbbf ;};if _acbcd :=_edggb .Get ("\u0044\u0065\u0073\u0074");_acbcd !=nil {_fbede .Dest =_df .ResolveReference (_acbcd );if !_gdcgc ._afcgf {_dbaga :=_gdcgc .traverseObjectData (_fbede .Dest );if _dbaga !=nil {return nil ,_dbaga ;};};
};if _aedce :=_edggb .Get ("\u0041");_aedce !=nil {_fbede .A =_df .ResolveReference (_aedce );if !_gdcgc ._afcgf {_fddee :=_gdcgc .traverseObjectData (_fbede .A );if _fddee !=nil {return nil ,_fddee ;};};};if _fgad :=_edggb .Get ("\u0053\u0045");_fgad !=nil {_fbede .SE =nil ;
};if _dfcfe :=_edggb .Get ("\u0043");_dfcfe !=nil {_fbede .C =_df .ResolveReference (_dfcfe );};if _ddca :=_edggb .Get ("\u0046");_ddca !=nil {_fbede .F =_df .ResolveReference (_ddca );};return _fbede ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cefd pdfCIDFontType0 )GetRuneMetrics (r rune )(_aec .CharMetrics ,bool ){return _aec .CharMetrics {Wx :_cefd ._ecege },true ;};func (_aea *PdfReader )newPdfActionHideFromDict (_eba *_df .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_eba .Get ("\u0054"),H :_eba .Get ("\u0048")},nil ;
};func (_fffd *PdfWriter )setDocumentIDs (_gebbf ,_ddeef string ){_fffd ._gbaag =_df .MakeArray (_df .MakeHexString (_gebbf ),_df .MakeHexString (_ddeef ));};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_df .PdfObjectStream )(*XObjectForm ,error ){_fefbd :=&XObjectForm {};_fefbd ._aefcd =stream ;_cadec :=*(stream .PdfObjectDictionary );_bdfcc ,_ggfdb :=_df .NewEncoderFromStream (stream );if _ggfdb !=nil {return nil ,_ggfdb ;
};_fefbd .Filter =_bdfcc ;if _cbgdc :=_cadec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cbgdc !=nil {_dcgfb ,_bebgf :=_cbgdc .(*_df .PdfObjectName );if !_bebgf {return nil ,_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_dcgfb !="\u0046\u006f\u0072\u006d"{_gc .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cab .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _fcacd :=_cadec .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fcacd !=nil {_fefbd .FormType =_fcacd ;};if _fbcdb :=_cadec .Get ("\u0042\u0042\u006f\u0078");_fbcdb !=nil {_fefbd .BBox =_fbcdb ;};if _bbgaf :=_cadec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bbgaf !=nil {_fefbd .Matrix =_bbgaf ;};if _cbagcg :=_cadec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cbagcg !=nil {_cbagcg =_df .TraceToDirectObject (_cbagcg );_abgg ,_gfbge :=_cbagcg .(*_df .PdfObjectDictionary );if !_gfbge {_gc .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_df .ErrTypeError ;};_dbdg ,_gdcggg :=NewPdfPageResourcesFromDict (_abgg );if _gdcggg !=nil {_gc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_gdcggg ;};_fefbd .Resources =_dbdg ;_gc .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_fefbd .Resources );};_fefbd .Group =_cadec .Get ("\u0047\u0072\u006fu\u0070");
_fefbd .Ref =_cadec .Get ("\u0052\u0065\u0066");_fefbd .MetaData =_cadec .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_fefbd .PieceInfo =_cadec .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fefbd .LastModified =_cadec .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_fefbd .StructParent =_cadec .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fefbd .StructParents =_cadec .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fefbd .OPI =_cadec .Get ("\u004f\u0050\u0049");
_fefbd .OC =_cadec .Get ("\u004f\u0043");_fefbd .Name =_cadec .Get ("\u004e\u0061\u006d\u0065");_fefbd .Stream =stream .Stream ;return _fefbd ,nil ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_df .PdfObjectArray ;ExtGState _df .PdfObject ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_edcb *PdfOutputIntent )GetContainingPdfObject ()_df .PdfObject {return _edcb ._addaa };

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_cdef *XObjectImage )SetFilter (encoder _df .StreamEncoder )error {_eedg :=_cdef .Stream ;_ebbee ,_bfaae :=_cdef .Filter .DecodeBytes (_eedg );if _bfaae !=nil {return _bfaae ;};_cdef .Filter =encoder ;encoder .UpdateParams (_cdef .getParamsDict ());
_eedg ,_bfaae =encoder .EncodeBytes (_ebbee );if _bfaae !=nil {return _bfaae ;};_cdef .Stream =_eedg ;return nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ddegb *PdfWriter )AddPage (page *PdfPage )error {const _fdfgg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cbcba (page );_dadfg :=page .ToPdfObject ();_gc .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_gc .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_dadfg );_gacde ,_bceec :=_df .GetIndirect (_dadfg );if !_bceec {return _cab .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_gc .Log .Trace ("\u0025\u0073",_gacde );_gc .Log .Trace ("\u0025\u0073",_gacde .PdfObject );_fbabd ,_bceec :=_df .GetDict (_gacde .PdfObject );if !_bceec {return _cab .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgcaa ,_bceec :=_df .GetName (_fbabd .Get ("\u0054\u0079\u0070\u0065"));if !_bceec {return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fbabd .Get ("\u0054\u0079\u0070\u0065"));
};if _bgcaa .String ()!="\u0050\u0061\u0067\u0065"{return _cab .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gefbe :=[]_df .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_gbbab ,_gcgda :=_df .GetIndirect (_fbabd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_gc .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fbabd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gcgda );
for _gcgda {_gc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbbab );_cecdb ,_deadda :=_df .GetDict (_gbbab .PdfObject );if !_deadda {return _cab .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cbcgf :=range _gefbe {_gc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cbcgf );if _fbabd .Get (_cbcgf )!=nil {_gc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _egedc :=_cecdb .Get (_cbcgf );_egedc !=nil {_gc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cbcgf );_fbabd .Set (_cbcgf ,_egedc );};};_gbbab ,_gcgda =_df .GetIndirect (_cecdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_gc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cecdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fbabd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddegb ._fabbf );_gacde .PdfObject =_fbabd ;_caae ,_bceec :=_df .GetDict (_ddegb ._fabbf .PdfObject );if !_bceec {return _cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_edgb ,_bceec :=_df .GetArray (_caae .Get ("\u004b\u0069\u0064\u0073"));if !_bceec {return _cab .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_edgb .Append (_gacde );_ddegb ._fcdaa [_fbabd ]=struct{}{};_bgcfa ,_bceec :=_df .GetInt (_caae .Get ("\u0043\u006f\u0075n\u0074"));if !_bceec {return _cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_bgcfa =*_bgcfa +1;if page ._fadfc ==nil {_gcgefe :=_eec .Track (_ddegb ._efcd ,_fdfgg );if _gcgefe !=nil {return _gcgefe ;};}else {_degfe :=_eec .Track (page ._fadfc ._baffe ,_fdfgg );if _degfe !=nil {return _degfe ;};};_ddegb .addObject (_gacde );
_acgfcf :=_ddegb .addObjects (_fbabd );if _acgfcf !=nil {return _acgfcf ;};return nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func _egbd (_egga *_df .PdfObjectStream )(*PdfFunctionType0 ,error ){_fecdd :=&PdfFunctionType0 {};_fecdd ._dbdee =_egga ;_gfgd :=_egga .PdfObjectDictionary ;_bddfc ,_gfgff :=_df .TraceToDirectObject (_gfgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );
if !_gfgff {_gc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bddfc .Len ()< 0||_bddfc .Len ()%2!=0{_gc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cab .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_fecdd .NumInputs =_bddfc .Len ()/2;_degga ,_ddeb :=_bddfc .ToFloat64Array ();if _ddeb !=nil {return nil ,_ddeb ;};_fecdd .Domain =_degga ;_bddfc ,_gfgff =_df .TraceToDirectObject (_gfgd .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if !_gfgff {_gc .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bddfc .Len ()< 0||_bddfc .Len ()%2!=0{return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fecdd .NumOutputs =_bddfc .Len ()/2;_efafg ,_ddeb :=_bddfc .ToFloat64Array ();if _ddeb !=nil {return nil ,_ddeb ;};_fecdd .Range =_efafg ;_bddfc ,_gfgff =_df .TraceToDirectObject (_gfgd .Get ("\u0053\u0069\u007a\u0065")).(*_df .PdfObjectArray );if !_gfgff {_gc .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fgbde ,_ddeb :=_bddfc .ToIntegerArray ();
if _ddeb !=nil {return nil ,_ddeb ;};if len (_fgbde )!=_fecdd .NumInputs {_gc .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fecdd .Size =_fgbde ;_acad ,_gfgff :=_df .TraceToDirectObject (_gfgd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_df .PdfObjectInteger );
if !_gfgff {_gc .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_acad !=1&&*_acad !=2&&*_acad !=4&&*_acad !=8&&*_acad !=12&&*_acad !=16&&*_acad !=24&&*_acad !=32{_gc .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_acad );
return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fecdd .BitsPerSample =int (*_acad );_fecdd .Order =1;_acca ,_gfgff :=_df .TraceToDirectObject (_gfgd .Get ("\u004f\u0072\u0064e\u0072")).(*_df .PdfObjectInteger );
if _gfgff {if *_acca !=1&&*_acca !=3{_gc .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_acca );return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fecdd .Order =int (*_acca );
};_bddfc ,_gfgff =_df .TraceToDirectObject (_gfgd .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_df .PdfObjectArray );if _gfgff {_abbb ,_degca :=_bddfc .ToFloat64Array ();if _degca !=nil {return nil ,_degca ;};_fecdd .Encode =_abbb ;};_bddfc ,_gfgff =_df .TraceToDirectObject (_gfgd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_df .PdfObjectArray );
if _gfgff {_aacbc ,_fffg :=_bddfc .ToFloat64Array ();if _fffg !=nil {return nil ,_fffg ;};_fecdd .Decode =_aacbc ;};_efafc ,_ddeb :=_df .DecodeStream (_egga );if _ddeb !=nil {return nil ,_ddeb ;};_fecdd ._adgec =_efafc ;return _fecdd ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_df .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func _bfccb (_fcafa ,_ceaeg string )string {if _fg .Contains (_fcafa ,"\u002b"){_dffdb :=_fg .Split (_fcafa ,"\u002b");
if len (_dffdb )==2{_fcafa =_dffdb [1];};};return _ceaeg +"\u002b"+_fcafa ;};type pdfSignDictionary struct{*_df .PdfObjectDictionary ;_gdegb *SignatureHandler ;_cbbcg *PdfSignature ;_cggeg int64 ;_efgbb int ;_afedc int ;_geafe int ;_ccecd int ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_df .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ggfb *_df .PdfIndirectObject ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_cdcf *PdfField )GetContext ()PdfModel {return _cdcf ._cffe };func (_fbbf *PdfAnnotationMarkup )appendToPdfDictionary (_fcgg *_df .PdfObjectDictionary ){_fcgg .SetIfNotNil ("\u0054",_fbbf .T );if _fbbf .Popup !=nil {_fcgg .Set ("\u0050\u006f\u0070u\u0070",_fbbf .Popup .ToPdfObject ());
};_fcgg .SetIfNotNil ("\u0043\u0041",_fbbf .CA );_fcgg .SetIfNotNil ("\u0052\u0043",_fbbf .RC );_fcgg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fbbf .CreationDate );_fcgg .SetIfNotNil ("\u0049\u0052\u0054",_fbbf .IRT );
_fcgg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_fbbf .Subj );_fcgg .SetIfNotNil ("\u0052\u0054",_fbbf .RT );_fcgg .SetIfNotNil ("\u0049\u0054",_fbbf .IT );_fcgg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_fbbf .ExData );};

// ToPdfObject implements interface PdfModel.
func (_age *PdfActionTrans )ToPdfObject ()_df .PdfObject {_age .PdfAction .ToPdfObject ();_bfg :=_age ._de ;_ebb :=_bfg .PdfObject .(*_df .PdfObjectDictionary );_ebb .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeTrans )));_ebb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_age .Trans );
return _bfg ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_df .PdfObjectStream ;OCSP []*_df .PdfObjectStream ;CRL []*_df .PdfObjectStream ;TU *_df .PdfObjectString ;TS *_df .PdfObjectString ;};func _dcgb (_edcee *PdfField ,_abgc _df .PdfObject )error {switch _edcee .GetContext ().(type ){case *PdfFieldText :switch _cdeeg :=_abgc .(type ){case *_df .PdfObjectName :_egegb :=_cdeeg ;
_gc .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_egegb .String ());
_edcee .V =_df .MakeEncodedString (_cdeeg .String (),true );case *_df .PdfObjectString :_edcee .V =_df .MakeEncodedString (_cdeeg .String (),true );default:_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_cdeeg ,_cdeeg );
};case *PdfFieldButton :switch _abgc .(type ){case *_df .PdfObjectName :if len (_abgc .String ())> 0{_edcee .V =_abgc ;_acbad (_edcee ,_abgc );};case *_df .PdfObjectString :if len (_abgc .String ())> 0{_edcee .V =_df .MakeName (_abgc .String ());_acbad (_edcee ,_edcee .V );
};default:_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_edcee .PartialName (),_abgc );_edcee .V =_abgc ;};case *PdfFieldChoice :switch _abgc .(type ){case *_df .PdfObjectName :if len (_abgc .String ())> 0{_edcee .V =_df .MakeString (_abgc .String ());
_acbad (_edcee ,_abgc );};case *_df .PdfObjectString :if len (_abgc .String ())> 0{_edcee .V =_abgc ;_acbad (_edcee ,_df .MakeName (_abgc .String ()));};default:_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_edcee .PartialName (),_abgc );
_edcee .V =_abgc ;};case *PdfFieldSignature :_gc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_edcee .PartialName (),_abgc );
};return nil ;};func _fbaa (_befcg *_df .PdfObjectDictionary )(*PdfShadingType6 ,error ){_cgad :=PdfShadingType6 {};_baabg :=_befcg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _baabg ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dddfe ,_aaeeg :=_baabg .(*_df .PdfObjectInteger );if !_aaeeg {_gc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baabg );
return nil ,_df .ErrTypeError ;};_cgad .BitsPerCoordinate =_dddfe ;_baabg =_befcg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _baabg ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dddfe ,_aaeeg =_baabg .(*_df .PdfObjectInteger );if !_aaeeg {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_baabg );
return nil ,_df .ErrTypeError ;};_cgad .BitsPerComponent =_dddfe ;_baabg =_befcg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _baabg ==nil {_gc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dddfe ,_aaeeg =_baabg .(*_df .PdfObjectInteger );if !_aaeeg {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_baabg );
return nil ,_df .ErrTypeError ;};_cgad .BitsPerComponent =_dddfe ;_baabg =_befcg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _baabg ==nil {_gc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_beeaa ,_aaeeg :=_baabg .(*_df .PdfObjectArray );if !_aaeeg {_gc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_baabg );
return nil ,_df .ErrTypeError ;};_cgad .Decode =_beeaa ;if _cbgb :=_befcg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cbgb !=nil {_cgad .Function =[]PdfFunction {};if _egeb ,_baefe :=_cbgb .(*_df .PdfObjectArray );_baefe {for _ ,_baaec :=range _egeb .Elements (){_fgfac ,_cabed :=_ebcf (_baaec );
if _cabed !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cabed );return nil ,_cabed ;};_cgad .Function =append (_cgad .Function ,_fgfac );
};}else {_ecebd ,_daefe :=_ebcf (_cbgb );if _daefe !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daefe );return nil ,_daefe ;
};_cgad .Function =append (_cgad .Function ,_ecebd );};};return &_cgad ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_fbfb *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _fbfb ._fgbc !=nil {return _fbfb ._fgbc ,nil ;};if _fbfb .Annots ==nil {_fbfb ._fgbc =[]*PdfAnnotation {};return nil ,nil ;};if _fbfb ._fadfc ==nil {_fbfb ._fgbc =[]*PdfAnnotation {};
return nil ,nil ;};_cabfb ,_gfbc :=_fbfb ._fadfc .loadAnnotations (_fbfb .Annots );if _gfbc !=nil {return nil ,_gfbc ;};if _cabfb ==nil {_fbfb ._fgbc =[]*PdfAnnotation {};};_fbfb ._fgbc =_cabfb ;return _fbfb ._fgbc ,nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bcfad *PdfReader )GetNamedDestinations ()(_df .PdfObject ,error ){_eccbd :=_df .ResolveReference (_bcfad ._fegcd .Get ("\u0044\u0065\u0073t\u0073"));if _eccbd ==nil {return nil ,nil ;};if !_bcfad ._afcgf {_defc :=_bcfad .traverseObjectData (_eccbd );
if _defc !=nil {return nil ,_defc ;};};return _eccbd ,nil ;};

// String returns a string representation of the field.
func (_bfge *PdfField )String ()string {if _addc ,_cdcbb :=_bfge .ToPdfObject ().(*_df .PdfIndirectObject );_cdcbb {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bfge ._cffe ,_addc .PdfObject .String ());};return "";};

// AddImageResource adds an image to the XObject resources.
func (_aegdf *PdfPage )AddImageResource (name _df .PdfObjectName ,ximg *XObjectImage )error {var _begd *_df .PdfObjectDictionary ;if _aegdf .Resources .XObject ==nil {_begd =_df .MakeDict ();_aegdf .Resources .XObject =_begd ;}else {var _cdbed bool ;_begd ,_cdbed =(_aegdf .Resources .XObject ).(*_df .PdfObjectDictionary );
if !_cdbed {return _cab .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_begd .Set (name ,ximg .ToPdfObject ());return nil ;};

// ToInteger convert to an integer format.
func (_cffb *PdfColorCalGray )ToInteger (bits int )uint32 {_efgbg :=_bf .Pow (2,float64 (bits ))-1;return uint32 (_efgbg *_cffb .Val ());};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bgggg :=appender .Reader .DSS ;if _bgggg ==nil {_bgggg =NewDSS ();};if _gacaa :=_bgggg .generateHashMaps ();_gacaa !=nil {return nil ,_gacaa ;};return &LTV {CertClient :_fe .NewCertClient (),OCSPClient :_fe .NewOCSPClient (),CRLClient :_fe .NewCRLClient (),SkipExisting :true ,_agdeb :appender ,_ecdcg :_bgggg },nil ;
};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _df .PdfObject ;};func (_gcbec SignatureValidationResult )String ()string {var _feffb _dga .Buffer ;_feffb .WriteString (_g .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_gcbec .Name ));if _gcbec .Date ._affab > 0{_feffb .WriteString (_g .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_gcbec .Date .ToGoTime ().String ()));
}else {_feffb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_gcbec .Reason )> 0{_feffb .WriteString (_g .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gcbec .Reason ));
}else {_feffb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_gcbec .Location )> 0{_feffb .WriteString (_g .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_gcbec .Location ));
}else {_feffb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_gcbec .ContactInfo )> 0{_feffb .WriteString (_g .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_gcbec .ContactInfo ));
}else {_feffb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_feffb .WriteString (_g .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_gcbec .Fields )));
if _gcbec .IsSigned {_feffb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_feffb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _gcbec .IsVerified {_feffb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_feffb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _gcbec .IsTrusted {_feffb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_feffb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_gcbec .GeneralizedTime .IsZero (){_feffb .WriteString (_g .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_gcbec .GeneralizedTime .String ()));};if _gcbec .DiffResults !=nil {_feffb .WriteString (_g .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_gcbec .DiffResults .IsPermitted ()));
if len (_gcbec .DiffResults .Warnings )> 0{_feffb .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_gbfa :=range _gcbec .DiffResults .Warnings {_feffb .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_gbfa ));
};};if len (_gcbec .DiffResults .Errors )> 0{_feffb .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_gggge :=range _gcbec .DiffResults .Errors {_feffb .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_gggge ));
};};};return _feffb .String ();};func _ecdag (_dbfcc _df .PdfObject ,_fgae *fontCommon )(*_fea .CMap ,error ){_afdbe ,_efed :=_df .GetStream (_dbfcc );if !_efed {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dbfcc );
return nil ,_df .ErrTypeError ;};_cade ,_gddb :=_df .DecodeStream (_afdbe );if _gddb !=nil {return nil ,_gddb ;};_dcef ,_gddb :=_fea .LoadCmapFromData (_cade ,!_fgae .isCIDFont ());if _gddb !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afdbe .ObjectNumber ,_gddb );
};return _dcef ,_gddb ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _df .PdfObject ;LE _df .PdfObject ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;IT _df .PdfObject ;Measure _df .PdfObject ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_eaegg *PdfOutlineTreeNode )ToPdfObject ()_df .PdfObject {return _eaegg .GetContext ().ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_caffa *PdfSignatureReference )ToPdfObject ()_df .PdfObject {_dccfc :=_df .MakeDict ();_dccfc .SetIfNotNil ("\u0054\u0079\u0070\u0065",_caffa .Type );_dccfc .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_caffa .TransformMethod );
_dccfc .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_caffa .TransformParams );_dccfc .SetIfNotNil ("\u0044\u0061\u0074\u0061",_caffa .Data );_dccfc .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_caffa .DigestMethod );
return _dccfc ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_aeaf :=NewPdfAnnotation ();_cffd :=&PdfAnnotationScreen {};_cffd .PdfAnnotation =_aeaf ;_aeaf .SetContext (_cffd );return _cffd ;};func _facf (_dgdca _df .PdfObject )(*PdfPattern ,error ){_fcefd :=&PdfPattern {};
var _dadb *_df .PdfObjectDictionary ;if _gecbc ,_ddaca :=_df .GetIndirect (_dgdca );_ddaca {_fcefd ._fdceb =_gecbc ;_dgfgg ,_fdeff :=_gecbc .PdfObject .(*_df .PdfObjectDictionary );if !_fdeff {_gc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_gecbc .PdfObject );
return nil ,_df .ErrTypeError ;};_dadb =_dgfgg ;}else if _eeaab ,_ffgbdd :=_df .GetStream (_dgdca );_ffgbdd {_fcefd ._fdceb =_eeaab ;_dadb =_eeaab .PdfObjectDictionary ;}else {_gc .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dgdca );
return nil ,_df .ErrTypeError ;};_aadbg :=_dadb .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aadbg ==nil {_gc .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bagfd ,_afcde :=_aadbg .(*_df .PdfObjectInteger );if !_afcde {_gc .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aadbg );
return nil ,_df .ErrTypeError ;};if *_bagfd !=1&&*_bagfd !=2{_gc .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_bagfd );return nil ,_df .ErrRangeError ;
};_fcefd .PatternType =int64 (*_bagfd );switch *_bagfd {case 1:_ddggd ,_dbfaf :=_dafba (_dadb );if _dbfaf !=nil {return nil ,_dbfaf ;};_ddggd .PdfPattern =_fcefd ;_fcefd ._bbdg =_ddggd ;return _fcefd ,nil ;case 2:_fgcgc ,_abfca :=_gefde (_dadb );if _abfca !=nil {return nil ,_abfca ;
};_fgcgc .PdfPattern =_fcefd ;_fcefd ._bbdg =_fgcgc ;return _fcefd ,nil ;};return nil ,_cab .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _cbfgc (_ggdg *_df .PdfObjectDictionary )bool {for _ ,_afea :=range _ggdg .Keys (){if _ ,_edea :=_cegc [_afea .String ()];
_edea {return true ;};};return false ;};func _fdeda (_gdgda _df .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cfef :=&PdfPageResourcesColorspaces {};if _daabda ,_cgdd :=_gdgda .(*_df .PdfIndirectObject );_cgdd {_cfef ._ebfbd =_daabda ;_gdgda =_daabda .PdfObject ;
};_fcgd ,_aadc :=_df .GetDict (_gdgda );if !_aadc {return nil ,_cab .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cfef .Names =[]string {};_cfef .Colorspaces =map[string ]PdfColorspace {};
for _ ,_dffec :=range _fcgd .Keys (){_bceef :=_fcgd .Get (_dffec );_cfef .Names =append (_cfef .Names ,string (_dffec ));_ddfcg ,_cdeab :=NewPdfColorspaceFromPdfObject (_bceef );if _cdeab !=nil {return nil ,_cdeab ;};_cfef .Colorspaces [string (_dffec )]=_ddfcg ;
};return _cfef ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _df .PdfObject ;Flags _df .PdfObject ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_afee :=NewPdfAnnotation ();_dffg :=&PdfAnnotationSound {};_dffg .PdfAnnotation =_afee ;_dffg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afee .SetContext (_dffg );return _dffg ;};func (_aeaef *PdfReader )loadStructure ()error {if _aeaef ._ecafc .GetCrypter ()!=nil &&!_aeaef ._ecafc .IsAuthenticated (){return _g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fafgb :=_aeaef ._ecafc .GetTrailer ();if _fafgb ==nil {return _g .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bdcce ,_gbafc :=_fafgb .Get ("\u0052\u006f\u006f\u0074").(*_df .PdfObjectReference );if !_gbafc {return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_fafgb );
};_cdgf ,_egbbd :=_aeaef ._ecafc .LookupByReference (*_bdcce );if _egbbd !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_egbbd );
return _egbbd ;};_fdcag ,_gbafc :=_cdgf .(*_df .PdfIndirectObject );if !_gbafc {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cdgf ,*_fafgb );
return _cab .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_decdg ,_gbafc :=(*_fdcag ).PdfObject .(*_df .PdfObjectDictionary );if !_gbafc {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_fdcag .PdfObject );
return _cab .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_gc .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_decdg );_agbac ,_gbafc :=_decdg .Get ("\u0050\u0061\u0067e\u0073").(*_df .PdfObjectReference );
if !_gbafc {return _cab .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_eagce ,_egbbd :=_aeaef ._ecafc .LookupByReference (*_agbac );
if _egbbd !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _egbbd ;};_fdfa ,_gbafc :=_eagce .(*_df .PdfIndirectObject );if !_gbafc {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_gc .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fdfa );return _cab .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cgge ,_gbafc :=_fdfa .PdfObject .(*_df .PdfObjectDictionary );if !_gbafc {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fdfa );
return _cab .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eegc ,_gbafc :=_df .GetInt (_cgge .Get ("\u0043\u006f\u0075n\u0074"));if !_gbafc {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cab .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gbafc =_df .GetName (_cgge .Get ("\u0054\u0079\u0070\u0065"));!_gbafc {_gc .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_cgge .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050\u0061\u0067e\u0073"));};if _gegdb ,_cffgg :=_df .GetInt (_cgge .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_cffgg {_efafgb :=int64 (*_gegdb );_aeaef .Rotate =&_efafgb ;};_aeaef ._ebfa =_bdcce ;
_aeaef ._fegcd =_decdg ;_aeaef ._gafedb =_cgge ;_aeaef ._edded =_fdfa ;_aeaef ._dfaed =int (*_eegc );_aeaef ._fgec =[]*_df .PdfIndirectObject {};_fgdc :=map[_df .PdfObject ]struct{}{};_egbbd =_aeaef .buildPageList (_fdfa ,nil ,_fgdc );if _egbbd !=nil {return _egbbd ;
};_gc .Log .Trace ("\u002d\u002d\u002d");_gc .Log .Trace ("\u0054\u004f\u0043");_gc .Log .Trace ("\u0050\u0061\u0067e\u0073");_gc .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_aeaef ._fgec ),_aeaef ._fgec );_aeaef ._ddbd ,_egbbd =_aeaef .loadOutlines ();
if _egbbd !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_egbbd );
return _egbbd ;};_aeaef .AcroForm ,_egbbd =_aeaef .loadForms ();if _egbbd !=nil {return _egbbd ;};_aeaef .DSS ,_egbbd =_aeaef .loadDSS ();if _egbbd !=nil {return _egbbd ;};_aeaef ._fdga ,_egbbd =_aeaef .loadPerms ();if _egbbd !=nil {return _egbbd ;};return nil ;
};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ParserMetadata gets the parser  metadata.
func (_ceda *CompliancePdfReader )ParserMetadata ()_df .ParserMetadata {if _ceda ._bbbba ==(_df .ParserMetadata {}){_ceda ._bbbba ,_ =_ceda ._ecafc .ParserMetadata ();};return _ceda ._bbbba ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_fe .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_fe .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_fe .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_agdeb *PdfAppender ;_ecdcg *DSS ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_dgacc *PdfRectangle )Normalize (){if _dgacc .Llx > _dgacc .Urx {_dgacc .Llx ,_dgacc .Urx =_dgacc .Urx ,_dgacc .Llx ;};if _dgacc .Lly > _dgacc .Ury {_dgacc .Lly ,_dgacc .Ury =_dgacc .Ury ,_dgacc .Lly ;};};

// ToPdfObject implements interface PdfModel.
func (_afg *PdfActionLaunch )ToPdfObject ()_df .PdfObject {_afg .PdfAction .ToPdfObject ();_fcc :=_afg ._de ;_aa :=_fcc .PdfObject .(*_df .PdfObjectDictionary );_aa .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeLaunch )));if _afg .F !=nil {_aa .Set ("\u0046",_afg .F .ToPdfObject ());
};_aa .SetIfNotNil ("\u0057\u0069\u006e",_afg .Win );_aa .SetIfNotNil ("\u004d\u0061\u0063",_afg .Mac );_aa .SetIfNotNil ("\u0055\u006e\u0069\u0078",_afg .Unix );_aa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_afg .NewWindow );return _fcc ;
};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dcdd .Lock ();defer _dcdd .Unlock ();_bcef =producer };

// GetCharMetrics returns the char metrics for character code `code`.
func (_ebdc pdfCIDFontType0 )GetCharMetrics (code _cfe .CharCode )(_aec .CharMetrics ,bool ){_bgdcf :=_ebdc ._ecege ;if _egbf ,_cgdgb :=_ebdc ._gaffe [code ];_cgdgb {_bgdcf =_egbf ;};return _aec .CharMetrics {Wx :_bgdcf },true ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_fefea *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fefea ._fgbc ==nil {_fefea .GetAnnotations ();};_fefea ._fgbc =append (_fefea ._fgbc ,annot );};func _acbad (_gcae *PdfField ,_babdbg _df .PdfObject ){for _ ,_ggecb :=range _gcae .Annotations {_ggecb .AS =_babdbg ;
_ggecb .ToPdfObject ();};};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bdaf *PdfFont )ToPdfObject ()_df .PdfObject {if _bdaf ._dfffe ==nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _df .MakeNull ();
};return _bdaf ._dfffe .ToPdfObject ();};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _df .PdfObject ;NewWindow _df .PdfObject ;};func (_beea *PdfReader )newPdfAnnotationWatermarkFromDict (_fdba *_df .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ebac :=PdfAnnotationWatermark {};
_ebac .FixedPrint =_fdba .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_ebac ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_egde *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _df .GetNumberAsFloat (_egde .Ascent );};func _fcgcb (_bbecb *_df .PdfObjectArray )(float64 ,error ){_edafb ,_badda :=_bbecb .ToFloat64Array ();if _badda !=nil {_gc .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbecb ,_badda );
};switch len (_edafb ){case 1:return _edafb [0],nil ;case 3:_faced :=PdfColorspaceDeviceRGB {};_cbdbc ,_bbcab :=_faced .ColorFromFloats (_edafb );if _bbcab !=nil {return 0.0,_bbcab ;};return _cbdbc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_aegcf :=PdfColorspaceDeviceCMYK {};
_bbbfbe ,_beec :=_aegcf .ColorFromFloats (_edafb );if _beec !=nil {return 0.0,_beec ;};_gefgd ,_beec :=_aegcf .ColorToRGB (_bbbfbe .(*PdfColorDeviceCMYK ));if _beec !=nil {return 0.0,_beec ;};return _gefgd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};
_badda =_cab .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_gc .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbecb ,_badda );
return 0.0,_badda ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_bba :=NewPdfAnnotation ();_bfdb :=&PdfAnnotation3D {};_bfdb .PdfAnnotation =_bba ;_bba .SetContext (_bfdb );return _bfdb ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;IC _df .PdfObject ;RO _df .PdfObject ;OverlayText _df .PdfObject ;Repeat _df .PdfObject ;DA _df .PdfObject ;Q _df .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ccbe *PdfBorderStyle )ToPdfObject ()_df .PdfObject {_ffee :=_df .MakeDict ();if _ccbe ._cbaa !=nil {if _agda ,_cacg :=_ccbe ._cbaa .(*_df .PdfIndirectObject );_cacg {_agda .PdfObject =_ffee ;};};_ffee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _ccbe .W !=nil {_ffee .Set ("\u0057",_df .MakeFloat (*_ccbe .W ));};if _ccbe .S !=nil {_ffee .Set ("\u0053",_df .MakeName (_ccbe .S .GetPdfName ()));};if _ccbe .D !=nil {_ffee .Set ("\u0044",_df .MakeArrayFromIntegers (*_ccbe .D ));};if _ccbe ._cbaa !=nil {return _ccbe ._cbaa ;
};return _ffee ;};func _acee (_begba *_df .PdfObjectDictionary ,_abga *fontCommon )(*pdfCIDFontType0 ,error ){if _abga ._fbegd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_gc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_abga );
return nil ,_df .ErrRangeError ;};_dfggd :=_eeegg (_abga );_cdgde ,_dcefg :=_df .GetDict (_begba .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dcefg {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abga );
return nil ,ErrRequiredAttributeMissing ;};_dfggd .CIDSystemInfo =_cdgde ;_dfggd .DW =_begba .Get ("\u0044\u0057");_dfggd .W =_begba .Get ("\u0057");_dfggd .DW2 =_begba .Get ("\u0044\u0057\u0032");_dfggd .W2 =_begba .Get ("\u0057\u0032");_dfggd ._ecege =1000.0;
if _ecag ,_abaa :=_df .GetNumberAsFloat (_dfggd .DW );_abaa ==nil {_dfggd ._ecege =_ecag ;};_fegf ,_agcgb :=_cdae (_dfggd .W );if _agcgb !=nil {return nil ,_agcgb ;};if _fegf ==nil {_fegf =map[_cfe .CharCode ]float64 {};};_dfggd ._gaffe =_fegf ;return _dfggd ,nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_faa *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babcb ,_gfaaf :=_df .GetNumbersAsFloat (objects );
if _gfaaf !=nil {return nil ,_gfaaf ;};return _faa .ColorFromFloats (_babcb );};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bbbc *PdfField )SetContext (ctx PdfModel ){_bbbc ._cffe =ctx };

// ToPdfObject implements interface PdfModel.
func (_fba *PdfAnnotationRichMedia )ToPdfObject ()_df .PdfObject {_fba .PdfAnnotation .ToPdfObject ();_bgeb :=_fba ._bef ;_fcbg :=_bgeb .PdfObject .(*_df .PdfObjectDictionary );_fcbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_fcbg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_fba .RichMediaSettings );_fcbg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_fba .RichMediaContent );
return _bgeb ;};

// String returns a string describing the font descriptor.
func (_egbb *PdfFontDescriptor )String ()string {var _eegfa []string ;if _egbb .FontName !=nil {_eegfa =append (_eegfa ,_egbb .FontName .String ());};if _egbb .FontFamily !=nil {_eegfa =append (_eegfa ,_egbb .FontFamily .String ());};if _egbb .fontFile !=nil {_eegfa =append (_eegfa ,_egbb .fontFile .String ());
};if _egbb ._aggdg !=nil {_eegfa =append (_eegfa ,_egbb ._aggdg .String ());};_eegfa =append (_eegfa ,_g .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_egbb .FontFile3 !=nil ));return _g .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fg .Join (_eegfa ,"\u002c\u0020"));
};

// SetContentStream sets the pattern cell's content stream.
func (_beacd *PdfTilingPattern )SetContentStream (content []byte ,encoder _df .StreamEncoder )error {_gbcbdg ,_fbcaf :=_beacd ._fdceb .(*_df .PdfObjectStream );if !_fbcaf {_gc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_beacd ._fdceb );
return _df .ErrTypeError ;};if encoder ==nil {encoder =_df .NewRawEncoder ();};_bcfgd :=_gbcbdg .PdfObjectDictionary ;_gdgg :=encoder .MakeStreamDict ();_bcfgd .Merge (_gdgg );_dgfec ,_bfcf :=encoder .EncodeBytes (content );if _bfcf !=nil {return _bfcf ;
};_bcfgd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_dgfec ))));_gbcbdg .Stream =_dgfec ;return nil ;};func (_ddf *PdfReader )newPdfActionFromIndirectObject (_fcdfe *_df .PdfIndirectObject )(*PdfAction ,error ){_dad ,_ggb :=_fcdfe .PdfObject .(*_df .PdfObjectDictionary );
if !_ggb {return nil ,_g .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ddf ._cggbe .GetModelFromPrimitive (_dad );model !=nil {_cba ,_adb :=model .(*PdfAction );if !_adb {return nil ,_g .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _cba ,nil ;};_ggde :=&PdfAction {};_ggde ._de =_fcdfe ;_ddf ._cggbe .Register (_dad ,_ggde );if _bc :=_dad .Get ("\u0054\u0079\u0070\u0065");_bc !=nil {_deg ,_gfa :=_bc .(*_df .PdfObjectName );if !_gfa {_gc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bc );
}else {if *_deg !="\u0041\u0063\u0074\u0069\u006f\u006e"{_gc .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_deg );
};_ggde .Type =_deg ;};};if _cdb :=_dad .Get ("\u004e\u0065\u0078\u0074");_cdb !=nil {_ggde .Next =_cdb ;};if _fefa :=_dad .Get ("\u0053");_fefa !=nil {_ggde .S =_fefa ;};_gcaf ,_gef :=_ggde .S .(*_df .PdfObjectName );if !_gef {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ggde .S );
return nil ,_g .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ggde .S );};_bde :=PdfActionType (_gcaf .String ());
switch _bde {case ActionTypeGoTo :_fgg ,_dgb :=_ddf .newPdfActionGotoFromDict (_dad );if _dgb !=nil {return nil ,_dgb ;};_fgg .PdfAction =_ggde ;_ggde ._eg =_fgg ;return _ggde ,nil ;case ActionTypeGoToR :_bbfa ,_gdec :=_ddf .newPdfActionGotoRFromDict (_dad );
if _gdec !=nil {return nil ,_gdec ;};_bbfa .PdfAction =_ggde ;_ggde ._eg =_bbfa ;return _ggde ,nil ;case ActionTypeGoToE :_ecd ,_dcg :=_ddf .newPdfActionGotoEFromDict (_dad );if _dcg !=nil {return nil ,_dcg ;};_ecd .PdfAction =_ggde ;_ggde ._eg =_ecd ;
return _ggde ,nil ;case ActionTypeLaunch :_gff ,_cagb :=_ddf .newPdfActionLaunchFromDict (_dad );if _cagb !=nil {return nil ,_cagb ;};_gff .PdfAction =_ggde ;_ggde ._eg =_gff ;return _ggde ,nil ;case ActionTypeThread :_ecgf ,_ada :=_ddf .newPdfActionThreadFromDict (_dad );
if _ada !=nil {return nil ,_ada ;};_ecgf .PdfAction =_ggde ;_ggde ._eg =_ecgf ;return _ggde ,nil ;case ActionTypeURI :_dfa ,_ffc :=_ddf .newPdfActionURIFromDict (_dad );if _ffc !=nil {return nil ,_ffc ;};_dfa .PdfAction =_ggde ;_ggde ._eg =_dfa ;return _ggde ,nil ;
case ActionTypeSound :_daf ,_bea :=_ddf .newPdfActionSoundFromDict (_dad );if _bea !=nil {return nil ,_bea ;};_daf .PdfAction =_ggde ;_ggde ._eg =_daf ;return _ggde ,nil ;case ActionTypeMovie :_edg ,_dgc :=_ddf .newPdfActionMovieFromDict (_dad );if _dgc !=nil {return nil ,_dgc ;
};_edg .PdfAction =_ggde ;_ggde ._eg =_edg ;return _ggde ,nil ;case ActionTypeHide :_ffca ,_cbg :=_ddf .newPdfActionHideFromDict (_dad );if _cbg !=nil {return nil ,_cbg ;};_ffca .PdfAction =_ggde ;_ggde ._eg =_ffca ;return _ggde ,nil ;case ActionTypeNamed :_fbdd ,_fcf :=_ddf .newPdfActionNamedFromDict (_dad );
if _fcf !=nil {return nil ,_fcf ;};_fbdd .PdfAction =_ggde ;_ggde ._eg =_fbdd ;return _ggde ,nil ;case ActionTypeSubmitForm :_eecd ,_dfd :=_ddf .newPdfActionSubmitFormFromDict (_dad );if _dfd !=nil {return nil ,_dfd ;};_eecd .PdfAction =_ggde ;_ggde ._eg =_eecd ;
return _ggde ,nil ;case ActionTypeResetForm :_aaf ,_gaa :=_ddf .newPdfActionResetFormFromDict (_dad );if _gaa !=nil {return nil ,_gaa ;};_aaf .PdfAction =_ggde ;_ggde ._eg =_aaf ;return _ggde ,nil ;case ActionTypeImportData :_dff ,_ceb :=_ddf .newPdfActionImportDataFromDict (_dad );
if _ceb !=nil {return nil ,_ceb ;};_dff .PdfAction =_ggde ;_ggde ._eg =_dff ;return _ggde ,nil ;case ActionTypeSetOCGState :_fbb ,_dcf :=_ddf .newPdfActionSetOCGStateFromDict (_dad );if _dcf !=nil {return nil ,_dcf ;};_fbb .PdfAction =_ggde ;_ggde ._eg =_fbb ;
return _ggde ,nil ;case ActionTypeRendition :_eef ,_bcc :=_ddf .newPdfActionRenditionFromDict (_dad );if _bcc !=nil {return nil ,_bcc ;};_eef .PdfAction =_ggde ;_ggde ._eg =_eef ;return _ggde ,nil ;case ActionTypeTrans :_bgb ,_fab :=_ddf .newPdfActionTransFromDict (_dad );
if _fab !=nil {return nil ,_fab ;};_bgb .PdfAction =_ggde ;_ggde ._eg =_bgb ;return _ggde ,nil ;case ActionTypeGoTo3DView :_fge ,_gag :=_ddf .newPdfActionGoTo3DViewFromDict (_dad );if _gag !=nil {return nil ,_gag ;};_fge .PdfAction =_ggde ;_ggde ._eg =_fge ;
return _ggde ,nil ;case ActionTypeJavaScript :_afc ,_cee :=_ddf .newPdfActionJavaScriptFromDict (_dad );if _cee !=nil {return nil ,_cee ;};_afc .PdfAction =_ggde ;_ggde ._eg =_afc ;return _ggde ,nil ;};_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_bde );
return nil ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_caec :=&PdfAppender {_eeddb :reader ._bdgca ,Reader :reader ,_fgcg :reader ._ecafc ,_gcd :reader ._eafee };_cgga ,_adgf :=_caec ._eeddb .Seek (0,_dg .SeekEnd );if _adgf !=nil {return nil ,_adgf ;
};_caec ._ebbdf =_cgga ;if _ ,_adgf =_caec ._eeddb .Seek (0,_dg .SeekStart );_adgf !=nil {return nil ,_adgf ;};_caec ._cfaba ,_adgf =NewPdfReader (_caec ._eeddb );if _adgf !=nil {return nil ,_adgf ;};for _ ,_cfbed :=range _caec .Reader .GetObjectNums (){if _caec ._beb < _cfbed {_caec ._beb =_cfbed ;
};};_caec ._ffae =_caec ._fgcg .GetXrefTable ();_caec ._ccfc =_caec ._fgcg .GetXrefOffset ();_caec ._ceee =append (_caec ._ceee ,_caec ._cfaba .PageList ...);_caec ._beaa =make (map[_df .PdfObject ]struct{});_caec ._gaaca =make (map[_df .PdfObject ]int64 );
_caec ._efb =make (map[_df .PdfObject ]struct{});_caec ._bcf =_caec ._cfaba .AcroForm ;_caec ._aed =_caec ._cfaba .DSS ;return _caec ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_edefb *PdfTilingPattern )ToPdfObject ()_df .PdfObject {_edefb .PdfPattern .ToPdfObject ();_gebec :=_edefb .getDict ();if _edefb .PaintType !=nil {_gebec .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_edefb .PaintType );};if _edefb .TilingType !=nil {_gebec .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_edefb .TilingType );
};if _edefb .BBox !=nil {_gebec .Set ("\u0042\u0042\u006f\u0078",_edefb .BBox .ToPdfObject ());};if _edefb .XStep !=nil {_gebec .Set ("\u0058\u0053\u0074e\u0070",_edefb .XStep );};if _edefb .YStep !=nil {_gebec .Set ("\u0059\u0053\u0074e\u0070",_edefb .YStep );
};if _edefb .Resources !=nil {_gebec .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_edefb .Resources .ToPdfObject ());};if _edefb .Matrix !=nil {_gebec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_edefb .Matrix );};return _edefb ._fdceb ;};func (_cdfbg *PdfReader )buildNameNodes (_eaeeb *_df .PdfIndirectObject ,_begfc map[_df .PdfObject ]struct{})error {if _eaeeb ==nil {return nil ;
};if _ ,_fdae :=_begfc [_eaeeb ];_fdae {_gc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eaeeb .ObjectNumber );
return nil ;};_begfc [_eaeeb ]=struct{}{};_addfeg ,_fddce :=_eaeeb .PdfObject .(*_df .PdfObjectDictionary );if !_fddce {return _cab .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _cdegg ,_ggfd :=_df .GetDict (_addfeg .Get ("\u0044\u0065\u0073t\u0073"));
_ggfd {_dcee ,_ggeg :=_df .GetArray (_cdegg .Get ("\u004b\u0069\u0064\u0073"));if !_ggeg {return _cab .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_gc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dcee );
for _dgcf ,_egdgea :=range _dcee .Elements (){_ggda ,_eggac :=_df .GetIndirect (_egdgea );if !_eggac {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_ggda );
return _cab .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_dcee .Set (_dgcf ,_ggda );_bgabcf :=_cdfbg .buildNameNodes (_ggda ,_begfc );if _bgabcf !=nil {return _bgabcf ;
};};};if _gfgfg ,_ececc :=_df .GetDict (_addfeg );_ececc {if !_df .IsNullObject (_gfgfg .Get ("\u004b\u0069\u0064\u0073")){if _abcda ,_faebb :=_df .GetArray (_gfgfg .Get ("\u004b\u0069\u0064\u0073"));_faebb {for _caff ,_beagd :=range _abcda .Elements (){if _gcadd ,_bcadc :=_df .GetIndirect (_beagd );
_bcadc {_abcda .Set (_caff ,_gcadd );_eeccd :=_cdfbg .buildNameNodes (_gcadd ,_begfc );if _eeccd !=nil {return _eeccd ;};};};};};};return nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_adef *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func _eddb (_ceef _df .PdfObject )(*PdfBorderStyle ,error ){_dccd :=&PdfBorderStyle {};_dccd ._cbaa =_ceef ;var _gfbe *_df .PdfObjectDictionary ;_ceef =_df .TraceToDirectObject (_ceef );
_gfbe ,_bgg :=_ceef .(*_df .PdfObjectDictionary );if !_bgg {return nil ,_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ffe :=_gfbe .Get ("\u0054\u0079\u0070\u0065");_ffe !=nil {_ddfbc ,_geba :=_ffe .(*_df .PdfObjectName );
if !_geba {_gc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ffe );
}else {if *_ddfbc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_gc .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ddfbc );};};};if _gedb :=_gfbe .Get ("\u0057");
_gedb !=nil {_eabg ,_cge :=_df .GetNumberAsFloat (_gedb );if _cge !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cge );return nil ,_cge ;};_dccd .W =&_eabg ;
};if _dfeg :=_gfbe .Get ("\u0053");_dfeg !=nil {_ceag ,_ecbfa :=_dfeg .(*_df .PdfObjectName );if !_ecbfa {return nil ,_cab .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _egeg BorderStyle ;switch *_ceag {case "\u0053":_egeg =BorderStyleSolid ;case "\u0044":_egeg =BorderStyleDashed ;case "\u0042":_egeg =BorderStyleBeveled ;case "\u0049":_egeg =BorderStyleInset ;case "\u0055":_egeg =BorderStyleUnderline ;default:_gc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_ceag );
return nil ,_cab .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dccd .S =&_egeg ;};if _ddd :=_gfbe .Get ("\u0044");_ddd !=nil {_abca ,_bgab :=_ddd .(*_df .PdfObjectArray );
if !_bgab {_gc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_ddd );return nil ,_cab .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ggf ,_cbcb :=_abca .ToIntegerArray ();if _cbcb !=nil {_gc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cbcb );
return nil ,_cbcb ;};_dccd .D =&_ggf ;};return _dccd ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// AddExtGState adds a graphics state to the XObject resources.
func (_dfead *PdfPage )AddExtGState (name _df .PdfObjectName ,egs *_df .PdfObjectDictionary )error {if _dfead .Resources ==nil {_dfead .Resources =NewPdfPageResources ();};if _dfead .Resources .ExtGState ==nil {_dfead .Resources .ExtGState =_df .MakeDict ();
};_bddge ,_bdfgd :=_df .TraceToDirectObject (_dfead .Resources .ExtGState ).(*_df .PdfObjectDictionary );if !_bdfgd {_gc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_df .TraceToDirectObject (_dfead .Resources .ExtGState ));
return _cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bddge .Set (name ,egs );return nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dbcab *PdfColorspaceLab )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aebd ,_bbbf :=_df .GetNumbersAsFloat (objects );
if _bbbf !=nil {return nil ,_bbbf ;};return _dbcab .ColorFromFloats (_aebd );};

// SetVersion sets the PDF version of the output file.
func (_fcgba *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fcgba ._ggaaa .Major =majorVersion ;_fcgba ._ggaaa .Minor =minorVersion ;};func _dcfgg (_bcgc *_df .PdfObjectStream )(*PdfFunctionType4 ,error ){_faaa :=&PdfFunctionType4 {};_faaa ._aabeb =_bcgc ;
_fcedc :=_bcgc .PdfObjectDictionary ;_eebbg ,_daca :=_df .TraceToDirectObject (_fcedc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );if !_daca {_gc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eebbg .Len ()%2!=0{_gc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cab .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_afbda ,_baee :=_eebbg .ToFloat64Array ();if _baee !=nil {return nil ,_baee ;};_faaa .Domain =_afbda ;_eebbg ,_daca =_df .TraceToDirectObject (_fcedc .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );
if _daca {if _eebbg .Len ()< 0||_eebbg .Len ()%2!=0{return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_deeb ,_aaafc :=_eebbg .ToFloat64Array ();if _aaafc !=nil {return nil ,_aaafc ;};_faaa .Range =_deeb ;
};_ebgge ,_baee :=_df .DecodeStream (_bcgc );if _baee !=nil {return nil ,_baee ;};_faaa ._adbd =_ebgge ;_fadga :=_ae .NewPSParser (_ebgge );_baeef ,_baee :=_fadga .Parse ();if _baee !=nil {return nil ,_baee ;};_faaa .Program =_baeef ;return _faaa ,nil ;
};

// G returns the value of the green component of the color.
func (_eceb *PdfColorDeviceRGB )G ()float64 {return _eceb [1]};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ffcb *PdfFont )GetCharMetrics (code _cfe .CharCode )(CharMetrics ,bool ){var _ecfe _aec .CharMetrics ;switch _gbeca :=_ffcb ._dfffe .(type ){case *pdfFontSimple :if _abgbaa ,_gcfb :=_gbeca .GetCharMetrics (code );_gcfb {return _abgbaa ,_gcfb ;};
case *pdfFontType0 :if _bfae ,_fbdc :=_gbeca .GetCharMetrics (code );_fbdc {return _bfae ,_fbdc ;};case *pdfCIDFontType0 :if _caeab ,_afdb :=_gbeca .GetCharMetrics (code );_afdb {return _caeab ,_afdb ;};case *pdfCIDFontType2 :if _gcggd ,_bebgg :=_gbeca .GetCharMetrics (code );
_bebgg {return _gcggd ,_bebgg ;};case *pdfFontType3 :if _gdag ,_gbgd :=_gbeca .GetCharMetrics (code );_gbgd {return _gdag ,_gbgd ;};default:_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ffcb ._dfffe );
return _ecfe ,false ;};if _bgdae ,_eeecg :=_ffcb .GetFontDescriptor ();_eeecg ==nil &&_bgdae !=nil {return _aec .CharMetrics {Wx :_bgdae ._dcdb },true ;};_gc .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ffcb );
return _ecfe ,false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dgcdd *PdfShading )ToPdfObject ()_df .PdfObject {_ddaee :=_dgcdd ._aedee ;_bgcf ,_egfac :=_dgcdd .getShadingDict ();if _egfac !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dgcdd .ShadingType !=nil {_bgcf .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dgcdd .ShadingType );};if _dgcdd .ColorSpace !=nil {_bgcf .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dgcdd .ColorSpace .ToPdfObject ());
};if _dgcdd .Background !=nil {_bgcf .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_dgcdd .Background );};if _dgcdd .BBox !=nil {_bgcf .Set ("\u0042\u0042\u006f\u0078",_dgcdd .BBox .ToPdfObject ());};if _dgcdd .AntiAlias !=nil {_bgcf .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_dgcdd .AntiAlias );
};return _ddaee ;};

// Initialize initializes the PdfSignature.
func (_adfcd *PdfSignature )Initialize ()error {if _adfcd .Handler ==nil {return _cab .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _adfcd .Handler .InitSignature (_adfcd );};func (_eeeeag *PdfWriter )checkLicense ()error {_cffec :=_eec .GetLicenseKey ();if (_cffec ==nil ||!_cffec .IsLicensed ())&&!_bdcba {_g .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_g .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cab .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func (_ffcdf fontCommon )coreString ()string {_bebdc :="";if _ffcdf ._cada !=nil {_bebdc =_ffcdf ._cada .String ();};return _g .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ffcdf ._fbegd ,_ffcdf ._gbgf ,_ffcdf ._eaebf ,_ffcdf ._faag ,_ffcdf ._gdca !=nil ,_ffcdf .fontFlags (),_bebdc );
};

// ToPdfObject returns a PDF object representation of the outline.
func (_efddd *Outline )ToPdfObject ()_df .PdfObject {return _efddd .ToPdfOutline ().ToPdfObject ()};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_acec *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gdef ,_ebdge :=color .(*PdfColorPattern );if !_ebdge {_gc .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _gdef .Color ==nil {return color ,nil ;};if _acec .UnderlyingCS ==nil {return nil ,_cab .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _acec .UnderlyingCS .ColorToRGB (_gdef .Color );
};var (_dcdd _b .Mutex ;_adgeg ="";_geaeb _cb .Time ;_cgdga ="";_bdbda ="";_dfbddb _cb .Time ;_bcef ="";_cdeee ="";_baafa ="";);

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_daabc *PdfWriter )SetOptimizer (optimizer Optimizer ){_daabc ._adbbc =optimizer };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_agece *PdfPageResources )SetColorspaceByName (keyName _df .PdfObjectName ,cs PdfColorspace )error {_bffgb ,_deaea :=_agece .GetColorspaces ();if _deaea !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_deaea );
return _deaea ;};if _bffgb ==nil {_bffgb =NewPdfPageResourcesColorspaces ();_agece .SetColorSpace (_bffgb );};_bffgb .Set (keyName ,cs );return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ebce *PdfShadingPattern )ToPdfObject ()_df .PdfObject {_ebce .PdfPattern .ToPdfObject ();_bgbc :=_ebce .getDict ();if _ebce .Shading !=nil {_bgbc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ebce .Shading .ToPdfObject ());};if _ebce .Matrix !=nil {_bgbc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebce .Matrix );
};if _ebce .ExtGState !=nil {_bgbc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ebce .ExtGState );};return _ebce ._fdceb ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dfbdd *PdfReader )CheckAccessRights (password []byte )(bool ,_gcf .Permissions ,error ){return _dfbdd ._ecafc .CheckAccessRights (password );};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_ggeb :=NewPdfAnnotation ();_bdca :=&PdfAnnotationRedact {};_bdca .PdfAnnotation =_ggeb ;_bdca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggeb .SetContext (_bdca );return _bdca ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_afgfd *_df .PdfObjectDictionary ;};func _fgcd (_ebgg *PdfPage )map[_df .PdfObjectName ]_df .PdfObject {_dab :=make (map[_df .PdfObjectName ]_df .PdfObject );if _ebgg .Resources ==nil {return _dab ;};if _ebgg .Resources .Font !=nil {if _ceeea ,_face :=_df .GetDict (_ebgg .Resources .Font );
_face {for _ ,_bcfe :=range _ceeea .Keys (){_dab [_bcfe ]=_ceeea .Get (_bcfe );};};};if _ebgg .Resources .ExtGState !=nil {if _cdfg ,_dbf :=_df .GetDict (_ebgg .Resources .ExtGState );_dbf {for _ ,_bfcd :=range _cdfg .Keys (){_dab [_bfcd ]=_cdfg .Get (_bfcd );
};};};if _ebgg .Resources .XObject !=nil {if _abf ,_cefc :=_df .GetDict (_ebgg .Resources .XObject );_cefc {for _ ,_cbfe :=range _abf .Keys (){_dab [_cbfe ]=_abf .Get (_cbfe );};};};if _ebgg .Resources .Pattern !=nil {if _ddde ,_acaf :=_df .GetDict (_ebgg .Resources .Pattern );
_acaf {for _ ,_bbfd :=range _ddde .Keys (){_dab [_bbfd ]=_ddde .Get (_bbfd );};};};if _ebgg .Resources .Shading !=nil {if _dddg ,_bgae :=_df .GetDict (_ebgg .Resources .Shading );_bgae {for _ ,_gcca :=range _dddg .Keys (){_dab [_gcca ]=_dddg .Get (_gcca );
};};};if _ebgg .Resources .ProcSet !=nil {if _gdda ,_gdcc :=_df .GetDict (_ebgg .Resources .ProcSet );_gdcc {for _ ,_cbge :=range _gdda .Keys (){_dab [_cbge ]=_gdda .Get (_cbge );};};};if _ebgg .Resources .Properties !=nil {if _dgbb ,_ecbd :=_df .GetDict (_ebgg .Resources .Properties );
_ecbd {for _ ,_cda :=range _dgbb .Keys (){_dab [_cda ]=_dgbb .Get (_cda );};};};return _dab ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gadcg :_df .MakeIndirectObject (_df .MakeDict ())}};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_deb :=NewPdfAnnotation ();_bgf :=&PdfAnnotationPolygon {};_bgf .PdfAnnotation =_deb ;_bgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_deb .SetContext (_bgf );return _bgf ;};func (_dffb *PdfReader )newPdfAnnotationTrapNetFromDict (_bdde *_df .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dfcd :=PdfAnnotationTrapNet {};
return &_dfcd ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ffcaa :=NewPdfAnnotation ();_fgca :=&PdfAnnotationWatermark {};_fgca .PdfAnnotation =_ffcaa ;_ffcaa .SetContext (_fgca );return _fgca ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cdabf *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cdabf ._bbdg .(*PdfShadingPattern );};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _ggd .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_df .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_df .MakeInteger (int64 (permission )),V :_df .MakeName ("\u0031\u002e\u0032")};
};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_eced *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gcgef *PdfColorspaceDeviceNAttributes )ToPdfObject ()_df .PdfObject {_fecf :=_df .MakeDict ();if _gcgef .Subtype !=nil {_fecf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcgef .Subtype );};_fecf .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gcgef .Colorants );
_fecf .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gcgef .Process );_fecf .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gcgef .MixingHints );if _gcgef ._gaab !=nil {_gcgef ._gaab .PdfObject =_fecf ;return _gcgef ._gaab ;
};return _fecf ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_bgdfg PdfOutputIntentType )String ()string {switch _bgdfg {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bbdg PdfModel ;_fdceb _df .PdfObject ;};func (_acdd *PdfAppender )replaceObject (_bggc ,_eefa _df .PdfObject ){switch _dcgg :=_bggc .(type ){case *_df .PdfIndirectObject :_acdd ._gaaca [_eefa ]=_dcgg .ObjectNumber ;case *_df .PdfObjectStream :_acdd ._gaaca [_eefa ]=_dcgg .ObjectNumber ;
};};func _gbge (_bebca *_df .PdfObjectDictionary ,_fdad *fontCommon ,_cffa _cfe .TextEncoder )(*pdfFontSimple ,error ){_agde :=_bcbee (_fdad );_agde ._bebe =_cffa ;if _cffa ==nil {_ebag :=_bebca .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ebag ==nil {_ebag =_df .MakeInteger (0);
};_agde .FirstChar =_ebag ;_beccb ,_cadg :=_df .GetIntVal (_ebag );if !_cadg {_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ebag );
return nil ,_df .ErrTypeError ;};_cdddce :=_cfe .CharCode (_beccb );_ebag =_bebca .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ebag ==nil {_ebag =_df .MakeInteger (255);};_agde .LastChar =_ebag ;_beccb ,_cadg =_df .GetIntVal (_ebag );if !_cadg {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ebag );
return nil ,_df .ErrTypeError ;};_dffcd :=_cfe .CharCode (_beccb );_agde ._abaag =make (map[_cfe .CharCode ]float64 );_ebag =_bebca .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ebag !=nil {_agde .Widths =_ebag ;_caeb ,_dceg :=_df .GetArray (_ebag );
if !_dceg {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ebag );return nil ,_df .ErrTypeError ;
};_gcdba ,_efdd :=_caeb .ToFloat64Array ();if _efdd !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_efdd ;};if len (_gcdba )!=int (_dffcd -_cdddce +1){_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dffcd -_cdddce +1,len (_gcdba ));
return nil ,_df .ErrRangeError ;};for _abdde ,_dgda :=range _gcdba {_agde ._abaag [_cdddce +_cfe .CharCode (_abdde )]=_dgda ;};};};_agde .Encoding =_df .TraceToDirectObject (_bebca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _agde ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_dgag *PdfSignature )ToPdfObject ()_df .PdfObject {_cebcf :=_dgag ._cffgb ;var _efgfb *_df .PdfObjectDictionary ;if _edgc ,_bddef :=_cebcf .PdfObject .(*pdfSignDictionary );_bddef {_efgfb =_edgc .PdfObjectDictionary ;}else {_efgfb =_cebcf .PdfObject .(*_df .PdfObjectDictionary );
};_efgfb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dgag .Type );_efgfb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dgag .Filter );_efgfb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dgag .SubFilter );_efgfb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dgag .ByteRange );
_efgfb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dgag .Contents );_efgfb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dgag .Cert );_efgfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgag .Name );_efgfb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dgag .Reason );
_efgfb .SetIfNotNil ("\u004d",_dgag .M );_efgfb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dgag .Reference );_efgfb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dgag .Changes );_efgfb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dgag .ContactInfo );
return _cebcf ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bgaeg *PdfAcroForm )ToPdfObject ()_df .PdfObject {_eebg :=_bgaeg ._badgd ;_fdbfg :=_eebg .PdfObject .(*_df .PdfObjectDictionary );if _bgaeg .Fields !=nil {_abded :=_df .PdfObjectArray {};for _ ,_bcdbd :=range *_bgaeg .Fields {_fggaf :=_bcdbd .GetContext ();
if _fggaf !=nil {_abded .Append (_fggaf .ToPdfObject ());}else {_abded .Append (_bcdbd .ToPdfObject ());};};_fdbfg .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_abded );};if _bgaeg .NeedAppearances !=nil {_fdbfg .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bgaeg .NeedAppearances );
};if _bgaeg .SigFlags !=nil {_fdbfg .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bgaeg .SigFlags );};if _bgaeg .CO !=nil {_fdbfg .Set ("\u0043\u004f",_bgaeg .CO );};if _bgaeg .DR !=nil {_fdbfg .Set ("\u0044\u0052",_bgaeg .DR .ToPdfObject ());
};if _bgaeg .DA !=nil {_fdbfg .Set ("\u0044\u0041",_bgaeg .DA );};if _bgaeg .Q !=nil {_fdbfg .Set ("\u0051",_bgaeg .Q );};if _bgaeg .XFA !=nil {_fdbfg .Set ("\u0058\u0046\u0041",_bgaeg .XFA );};return _eebg ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};func (_dfefe *PdfPage )setContainer (_gdgd *_df .PdfIndirectObject ){_gdgd .PdfObject =_dfefe ._aaee ;_dfefe ._dgbagf =_gdgd ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _df .PdfObject )(*PdfFilespec ,error ){_afefb :=&PdfFilespec {};var _aaafe *_df .PdfObjectDictionary ;if _cfcc ,_abgb :=_df .GetIndirect (obj );_abgb {_afefb ._dfbd =_cfcc ;_gcfaf ,_cgbe :=_df .GetDict (_cfcc .PdfObject );
if !_cgbe {_gc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_df .ErrTypeError ;};_aaafe =_gcfaf ;}else if _eada ,_cdfgb :=_df .GetDict (obj );
_cdfgb {_afefb ._dfbd =_eada ;_aaafe =_eada ;}else {_gc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_df .ErrTypeError ;};if _aaafe ==nil {_gc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cab .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _egbe :=_aaafe .Get ("\u0054\u0079\u0070\u0065");_egbe !=nil {_ecdge ,_cbaf :=_egbe .(*_df .PdfObjectName );if !_cbaf {_gc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_egbe );
}else {if *_ecdge !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_gc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_ecdge );
};};};if _bacec :=_aaafe .Get ("\u0046\u0053");_bacec !=nil {_afefb .FS =_bacec ;};if _bbabb :=_aaafe .Get ("\u0046");_bbabb !=nil {_afefb .F =_bbabb ;};if _ebcaa :=_aaafe .Get ("\u0055\u0046");_ebcaa !=nil {_afefb .UF =_ebcaa ;};if _efaac :=_aaafe .Get ("\u0044\u004f\u0053");
_efaac !=nil {_afefb .DOS =_efaac ;};if _badf :=_aaafe .Get ("\u004d\u0061\u0063");_badf !=nil {_afefb .Mac =_badf ;};if _adade :=_aaafe .Get ("\u0055\u006e\u0069\u0078");_adade !=nil {_afefb .Unix =_adade ;};if _afbc :=_aaafe .Get ("\u0049\u0044");_afbc !=nil {_afefb .ID =_afbc ;
};if _gacd :=_aaafe .Get ("\u0056");_gacd !=nil {_afefb .V =_gacd ;};if _bcage :=_aaafe .Get ("\u0045\u0046");_bcage !=nil {_afefb .EF =_bcage ;};if _eggb :=_aaafe .Get ("\u0052\u0046");_eggb !=nil {_afefb .RF =_eggb ;};if _gcdc :=_aaafe .Get ("\u0044\u0065\u0073\u0063");
_gcdc !=nil {_afefb .Desc =_gcdc ;};if _cefbe :=_aaafe .Get ("\u0043\u0049");_cefbe !=nil {_afefb .CI =_cefbe ;};return _afefb ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_eccc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_eceg :=func (_bfdd float64 )float64 {if _bfdd >=6.0/29{return _bfdd *_bfdd *_bfdd ;};return 108.0/841*(_bfdd -4.0/29.0);};_dfega ,_aeda :=color .(*PdfColorLab );if !_aeda {_gc .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dfega .L ();AStar :=_dfega .A ();BStar :=_dfega .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_eccc .WhitePoint [0]*_eceg (L );Y :=_eccc .WhitePoint [1]*_eceg (M );Z :=_eccc .WhitePoint [2]*_eceg (N );_fdag :=3.240479*X +-1.537150*Y +-0.498535*Z ;_babdf :=-0.969256*X +1.875992*Y +0.041556*Z ;_aafc :=0.055648*X +-0.204043*Y +1.057311*Z ;_fdag =_bf .Min (_bf .Max (_fdag ,0),1.0);
_babdf =_bf .Min (_bf .Max (_babdf ,0),1.0);_aafc =_bf .Min (_bf .Max (_aafc ,0),1.0);return NewPdfColorDeviceRGB (_fdag ,_babdf ,_aafc ),nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ebea *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ebea .Range };

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ccce *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ccce .RunesToCharcodeBytes ([]rune (str ));};func (_cgegg *LTV )generateVRIKey (_bdcfb *PdfSignature )(string ,error ){_cegg ,_fbcfb :=_gaeeg (_bdcfb .Contents .Bytes ());if _fbcfb !=nil {return "",_fbcfb ;
};return _fg .ToUpper (_e .EncodeToString (_cegg )),nil ;};

// SetForms sets the Acroform for a PDF file.
func (_gadfb *PdfWriter )SetForms (form *PdfAcroForm )error {_gadfb ._gdcfa =form ;return nil };func (_fcff *PdfReader )newPdfAnnotation3DFromDict (_eacc *_df .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_aefe :=PdfAnnotation3D {};_aefe .T3DD =_eacc .Get ("\u0033\u0044\u0044");
_aefe .T3DV =_eacc .Get ("\u0033\u0044\u0056");_aefe .T3DA =_eacc .Get ("\u0033\u0044\u0041");_aefe .T3DI =_eacc .Get ("\u0033\u0044\u0049");_aefe .T3DB =_eacc .Get ("\u0033\u0044\u0042");return &_aefe ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_ddced *PdfField )GetContainingPdfObject ()_df .PdfObject {return _ddced ._gadcg };

// SetFillImage attach a model.Image to push button.
func (_gdbe *PdfFieldButton )SetFillImage (image *Image ){if _gdbe .IsPush (){_gdbe ._gfab =image ;};};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ecbcb :=&PdfOutline {_affae :_df .MakeIndirectObject (_df .MakeDict ())};_ecbcb ._dedbf =_ecbcb ;return _ecbcb ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_cdad *PdfReader )GetTrailer ()(*_df .PdfObjectDictionary ,error ){_cbgace :=_cdad ._ecafc .GetTrailer ();if _cbgace ==nil {return nil ,_cab .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cbgace ,nil ;
};func (_cfegb *PdfReader )newPdfSignatureFromIndirect (_cdcca *_df .PdfIndirectObject )(*PdfSignature ,error ){_bfcfb ,_cgebdc :=_cdcca .PdfObject .(*_df .PdfObjectDictionary );if !_cgebdc {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _dgbeb ,_adeec :=_cfegb ._cggbe .GetModelFromPrimitive (_cdcca ).(*PdfSignature );_adeec {return _dgbeb ,nil ;};_ecef :=&PdfSignature {};_ecef ._cffgb =_cdcca ;_ecef .Type ,_ =_df .GetName (_bfcfb .Get ("\u0054\u0079\u0070\u0065"));
_ecef .Filter ,_cgebdc =_df .GetName (_bfcfb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_cgebdc {_gc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ecef .SubFilter ,_ =_df .GetName (_bfcfb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ecef .Contents ,_cgebdc =_df .GetString (_bfcfb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_cgebdc {_gc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _bfabf ,_abgf :=_df .GetArray (_bfcfb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_abgf {_ecef .Reference =_df .MakeArray ();for _ ,_egad :=range _bfabf .Elements (){_dfgb ,_facgg :=_df .GetDict (_egad );
if !_facgg {_gc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_ceacb ,_ecfed :=_cfegb .newPdfSignatureReferenceFromDict (_dfgb );if _ecfed !=nil {return nil ,_ecfed ;};_ecef .Reference .Append (_ceacb .ToPdfObject ());};};_ecef .Cert =_bfcfb .Get ("\u0043\u0065\u0072\u0074");_ecef .ByteRange ,_ =_df .GetArray (_bfcfb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_ecef .Changes ,_ =_df .GetArray (_bfcfb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ecef .Name ,_ =_df .GetString (_bfcfb .Get ("\u004e\u0061\u006d\u0065"));_ecef .M ,_ =_df .GetString (_bfcfb .Get ("\u004d"));_ecef .Location ,_ =_df .GetString (_bfcfb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ecef .Reason ,_ =_df .GetString (_bfcfb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ecef .ContactInfo ,_ =_df .GetString (_bfcfb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ecef .R ,_ =_df .GetInt (_bfcfb .Get ("\u0052"));
_ecef .V ,_ =_df .GetInt (_bfcfb .Get ("\u0056"));_ecef .PropBuild ,_ =_df .GetDict (_bfcfb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ecef .PropAuthTime ,_ =_df .GetInt (_bfcfb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ecef .PropAuthType ,_ =_df .GetName (_bfcfb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_cfegb ._cggbe .Register (_cdcca ,_ecef );return _ecef ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_bdc *PdfAnnotationLink )SetAction (action *PdfAction ){_bdc ._eagd =action ;if action ==nil {_bdc .A =nil ;};};

// ToPdfObject implements interface PdfModel.
func (_afdc *PdfFilespec )ToPdfObject ()_df .PdfObject {_dffeb :=_afdc .getDict ();_dffeb .Clear ();_dffeb .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_dffeb .SetIfNotNil ("\u0046\u0053",_afdc .FS );
_dffeb .SetIfNotNil ("\u0046",_afdc .F );_dffeb .SetIfNotNil ("\u0055\u0046",_afdc .UF );_dffeb .SetIfNotNil ("\u0044\u004f\u0053",_afdc .DOS );_dffeb .SetIfNotNil ("\u004d\u0061\u0063",_afdc .Mac );_dffeb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_afdc .Unix );
_dffeb .SetIfNotNil ("\u0049\u0044",_afdc .ID );_dffeb .SetIfNotNil ("\u0056",_afdc .V );_dffeb .SetIfNotNil ("\u0045\u0046",_afdc .EF );_dffeb .SetIfNotNil ("\u0052\u0046",_afdc .RF );_dffeb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_afdc .Desc );_dffeb .SetIfNotNil ("\u0043\u0049",_afdc .CI );
return _afdc ._dfbd ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func _gfefg (_cbebfa _df .PdfObject )(*PdfFontDescriptor ,error ){_dfcdd :=&PdfFontDescriptor {};_cbebfa =_df .ResolveReference (_cbebfa );if _ebcd ,_ggaagg :=_cbebfa .(*_df .PdfIndirectObject );
_ggaagg {_dfcdd ._abac =_ebcd ;_cbebfa =_ebcd .PdfObject ;};_ddbaa ,_afde :=_df .GetDict (_cbebfa );if !_afde {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cbebfa );
return nil ,_df .ErrTypeError ;};if _acfeg :=_ddbaa .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_acfeg !=nil {_dfcdd .FontName =_acfeg ;}else {_gc .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_beba ,_ :=_df .GetName (_dfcdd .FontName );if _bbcd :=_ddbaa .Get ("\u0054\u0079\u0070\u0065");_bbcd !=nil {_gdbb ,_gdfgc :=_bbcd .(*_df .PdfObjectName );if !_gdfgc ||string (*_gdbb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_gc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bbcd ,_beba ,_dfcdd .FontName );
};}else {_gc .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_beba ,_dfcdd .FontName );
};_dfcdd .FontFamily =_ddbaa .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_dfcdd .FontStretch =_ddbaa .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_dfcdd .FontWeight =_ddbaa .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_dfcdd .Flags =_ddbaa .Get ("\u0046\u006c\u0061g\u0073");_dfcdd .FontBBox =_ddbaa .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_dfcdd .ItalicAngle =_ddbaa .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_dfcdd .Ascent =_ddbaa .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_dfcdd .Descent =_ddbaa .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_dfcdd .Leading =_ddbaa .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_dfcdd .CapHeight =_ddbaa .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_dfcdd .XHeight =_ddbaa .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_dfcdd .StemV =_ddbaa .Get ("\u0053\u0074\u0065m\u0056");_dfcdd .StemH =_ddbaa .Get ("\u0053\u0074\u0065m\u0048");_dfcdd .AvgWidth =_ddbaa .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_dfcdd .MaxWidth =_ddbaa .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_dfcdd .MissingWidth =_ddbaa .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_dfcdd .FontFile =_ddbaa .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_dfcdd .FontFile2 =_ddbaa .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_dfcdd .FontFile3 =_ddbaa .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_dfcdd .CharSet =_ddbaa .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_dfcdd .Style =_ddbaa .Get ("\u0053\u0074\u0079l\u0065");_dfcdd .Lang =_ddbaa .Get ("\u004c\u0061\u006e\u0067");
_dfcdd .FD =_ddbaa .Get ("\u0046\u0044");_dfcdd .CIDSet =_ddbaa .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _dfcdd .Flags !=nil {if _dfcfg ,_ccff :=_df .GetIntVal (_dfcdd .Flags );_ccff {_dfcdd ._adafb =_dfcfg ;};};if _dfcdd .MissingWidth !=nil {if _eedff ,_ecdb :=_df .GetNumberAsFloat (_dfcdd .MissingWidth );
_ecdb ==nil {_dfcdd ._dcdb =_eedff ;};};if _dfcdd .FontFile !=nil {_bfgg ,_dded :=_adfg (_dfcdd .FontFile );if _dded !=nil {return _dfcdd ,_dded ;};_gc .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bfgg );_dfcdd .fontFile =_bfgg ;
};if _dfcdd .FontFile2 !=nil {_gcfcg ,_cbbdc :=_aec .NewFontFile2FromPdfObject (_dfcdd .FontFile2 );if _cbbdc !=nil {return _dfcdd ,_cbbdc ;};_gc .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_gcfcg .String ());_dfcdd ._aggdg =&_gcfcg ;
};return _dfcdd ,nil ;};func (_egdfdf *PdfAcroForm )filteredFields (_cffde FieldFilterFunc ,_daac bool )[]*PdfField {if _egdfdf ==nil {return nil ;};return _geffg (_egdfdf .Fields ,_cffde ,_daac );};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_adaabe *PdfPage )AddContentStreamByString (contentStr string )error {_aagbbg ,_cbggc :=_df .MakeStream ([]byte (contentStr ),_df .NewFlateEncoder ());if _cbggc !=nil {return _cbggc ;};if _adaabe .Contents ==nil {_adaabe .Contents =_aagbbg ;}else {_feabd :=_df .TraceToDirectObject (_adaabe .Contents );
_bdeg ,_bbfff :=_feabd .(*_df .PdfObjectArray );if !_bbfff {_bdeg =_df .MakeArray (_feabd );};_bdeg .Append (_aagbbg );_adaabe .Contents =_bdeg ;};return nil ;};func (_afe *PdfReader )newPdfActionMovieFromDict (_dgbd *_df .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_dgbd .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_dgbd .Get ("\u0054"),Operation :_dgbd .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func _afcd (_gffcg []byte )bool {if len (_gffcg )< 4{return true ;};for _degad :=range _gffcg [:4]{_geffd :=rune (_degad );if !_da .Is (_da .ASCII_Hex_Digit ,_geffd )&&!_da .IsSpace (_geffd ){return true ;};};return false ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_cedb :=&PdfFilespec {};_cedb ._dfbd =_df .MakeIndirectObject (_df .MakeDict ());return _cedb ;};

// ToPdfObject implements interface PdfModel.
func (_cdd *PdfAnnotationSquiggly )ToPdfObject ()_df .PdfObject {_cdd .PdfAnnotation .ToPdfObject ();_fcfd :=_cdd ._bef ;_bfe :=_fcfd .PdfObject .(*_df .PdfObjectDictionary );_cdd .PdfAnnotationMarkup .appendToPdfDictionary (_bfe );_bfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bfe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdd .QuadPoints );return _fcfd ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_debbed *Image )ToGoImage ()(_cd .Image ,error ){_gc .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dcfec ,_deeff :=_fbg .NewImage (int (_debbed .Width ),int (_debbed .Height ),int (_debbed .BitsPerComponent ),_debbed .ColorComponents ,_debbed .Data ,_debbed ._gced ,_debbed ._afgg );
if _deeff !=nil {return nil ,_deeff ;};return _dcfec ,nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_bdac *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cfe .CharCode )(_dege []rune ,_fbag ,_ffbf int ){_ffeg ,_fbag ,_ffbf :=_bdac .CharcodesToStrings (charcodes );return []rune (_fg .Join (_ffeg ,"")),_fbag ,_ffbf ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_ggbad *PdfFont )CharcodesToUnicode (charcodes []_cfe .CharCode )[]rune {_egdge ,_ ,_ :=_ggbad .CharcodesToUnicodeWithStats (charcodes );return _egdge ;};func (_bfbe *PdfReader )newPdfAnnotationLinkFromDict (_cbc *_df .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_faeb :=PdfAnnotationLink {};
_faeb .A =_cbc .Get ("\u0041");_faeb .Dest =_cbc .Get ("\u0044\u0065\u0073\u0074");_faeb .H =_cbc .Get ("\u0048");_faeb .PA =_cbc .Get ("\u0050\u0041");_faeb .QuadPoints =_cbc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_faeb .BS =_cbc .Get ("\u0042\u0053");
return &_faeb ,nil ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_gccaad *PdfOutputIntent )ParsePdfObject (object _df .PdfObject )error {_acbd ,_aedag :=_df .GetDict (object );if !_aedag {_gc .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _cab .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_gccaad ._addaa =_acbd ;_gccaad .Type ,_ =_acbd .GetString ("\u0054\u0079\u0070\u0065");_cfdca ,_aedag :=_acbd .GetString ("\u0053");if _aedag {switch _cfdca {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_gccaad .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_gccaad .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_gccaad .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_gccaad .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_gccaad .S =PdfOutputIntentTypeX ;
};};_gccaad .OutputCondition ,_ =_acbd .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_gccaad .OutputConditionIdentifier ,_ =_acbd .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_gccaad .RegistryName ,_ =_acbd .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_gccaad .Info ,_ =_acbd .GetString ("\u0049\u006e\u0066\u006f");if _fada ,_fegc :=_df .GetStream (_acbd .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fegc {_gccaad .ColorComponents ,_ =_df .GetIntVal (_fada .Get ("\u004e"));_abbf ,_affac :=_df .DecodeStream (_fada );if _affac !=nil {return _affac ;};_gccaad .DestOutputProfile =_abbf ;};return nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_abcfg *PdfPageResources )HasColorspaceByName (keyName _df .PdfObjectName )bool {_dgbdd ,_bggfd :=_abcfg .GetColorspaces ();if _bggfd !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bggfd );
return false ;};if _dgbdd ==nil {return false ;};_ ,_ffga :=_dgbdd .Colorspaces [string (keyName )];return _ffga ;};func (_cgebdg *PdfWriter )checkCrossReferenceStream ()bool {_fbfebc :=_cgebdg ._ggaaa .Major > 1||(_cgebdg ._ggaaa .Major ==1&&_cgebdg ._ggaaa .Minor > 4);
if _cgebdg ._aeacf !=nil {_fbfebc =*_cgebdg ._aeacf ;};return _fbfebc ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_df .PdfObjectArray ;_gfab *Image ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cecff *_df .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fbga *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fbga .UnderlyingCS ==nil {return nil ,_cab .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _fbga .UnderlyingCS .ColorFromFloats (vals );};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cadb *PdfPage )Duplicate ()*PdfPage {_ecfa :=*_cadb ;_ecfa ._aaee =_df .MakeDict ();_ecfa ._dgbagf =_df .MakeIndirectObject (_ecfa ._aaee );return &_ecfa ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_fdgcd *PdfPageResources )HasExtGState (keyName _df .PdfObjectName )bool {_ ,_dgaa :=_fdgcd .GetFontByName (keyName );return _dgaa ;};

// SetContext sets the sub annotation (context).
func (_fdac *PdfAnnotation )SetContext (ctx PdfModel ){_fdac ._ged =ctx };func (_abde *PdfReader )newPdfAnnotationRedactFromDict (_gedg *_df .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gbec :=PdfAnnotationRedact {};_daa ,_ebaca :=_abde .newPdfAnnotationMarkupFromDict (_gedg );
if _ebaca !=nil {return nil ,_ebaca ;};_gbec .PdfAnnotationMarkup =_daa ;_gbec .QuadPoints =_gedg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gbec .IC =_gedg .Get ("\u0049\u0043");_gbec .RO =_gedg .Get ("\u0052\u004f");_gbec .OverlayText =_gedg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gbec .Repeat =_gedg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gbec .DA =_gedg .Get ("\u0044\u0041");_gbec .Q =_gedg .Get ("\u0051");return &_gbec ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _df .PdfObject ;LE _df .PdfObject ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;IT _df .PdfObject ;Measure _df .PdfObject ;};func (_fcb *PdfAnnotation )String ()string {_aba :="";
_gaf ,_ecgc :=_fcb .ToPdfObject ().(*_df .PdfIndirectObject );if _ecgc {_aba =_g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fcb ._ged ,_gaf .PdfObject .String ());};return _aba ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_bdge PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _bdge ._dfffe .getFontDescriptor (),nil ;};func (_cfab *PdfReader )newPdfAnnotationInkFromDict (_gcfc *_df .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cgaf :=PdfAnnotationInk {};
_abaf ,_dage :=_cfab .newPdfAnnotationMarkupFromDict (_gcfc );if _dage !=nil {return nil ,_dage ;};_cgaf .PdfAnnotationMarkup =_abaf ;_cgaf .InkList =_gcfc .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cgaf .BS =_gcfc .Get ("\u0042\u0053");return &_cgaf ,nil ;
};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_eca :=NewPdfAnnotation ();_afa :=&PdfAnnotationProjection {};_afa .PdfAnnotation =_eca ;_afa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eca .SetContext (_afa );return _afa ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fafaa int ,_ggabb *PdfPage );

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eeff *PdfWriter )SetNamedDestinations (dests _df .PdfObject )error {if dests ==nil {return nil ;};_gc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_eeff ._dffed .Set ("\u0044\u0065\u0073t\u0073",dests );return _eeff .addObjects (dests );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gaebe *PdfPageResources )SetXObjectImageByName (keyName _df .PdfObjectName ,ximg *XObjectImage )error {_gecge :=ximg .ToPdfObject ().(*_df .PdfObjectStream );_bcbed :=_gaebe .SetXObjectByName (keyName ,_gecge );return _bcbed ;};

// Add appends a top level outline item to the outline.
func (_afbf *Outline )Add (item *OutlineItem ){_afbf .Entries =append (_afbf .Entries ,item )};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _df .PdfObject ;Volume _df .PdfObject ;Synchronous _df .PdfObject ;Repeat _df .PdfObject ;Mix _df .PdfObject ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_geaa *Image )GetSamples ()[]uint32 {_gdebc :=_ac .ResampleBytes (_geaa .Data ,int (_geaa .BitsPerComponent ));if _geaa .BitsPerComponent < 8{_gdebc =_geaa .samplesTrimPadding (_gdebc );};_dcfe :=int (_geaa .Width )*int (_geaa .Height )*_geaa .ColorComponents ;
if len (_gdebc )< _dcfe {_gc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_gdebc ),_dcfe );
return _gdebc ;}else if len (_gdebc )> _dcfe {_gc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_gdebc ),_dcfe );
_gdebc =_gdebc [:_dcfe ];};return _gdebc ;};

// ToPdfObject implements interface PdfModel.
func (_fcgf *PdfActionGoToE )ToPdfObject ()_df .PdfObject {_fcgf .PdfAction .ToPdfObject ();_gfe :=_fcgf ._de ;_af :=_gfe .PdfObject .(*_df .PdfObjectDictionary );_af .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoToE )));if _fcgf .F !=nil {_af .Set ("\u0046",_fcgf .F .ToPdfObject ());
};_af .SetIfNotNil ("\u0044",_fcgf .D );_af .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fcgf .NewWindow );_af .SetIfNotNil ("\u0054",_fcgf .T );return _gfe ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_fgcb *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cab .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cbff ,_aagf :=_fbg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gced ,img ._afgg );if _aagf !=nil {return img ,_aagf ;};_ffebg ,_aagf :=_fbg .NRGBAConverter .Convert (_cbff );if _aagf !=nil {return img ,_aagf ;
};_dfegb :=_cgbga (_ffebg .Base ());_gc .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_gc .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_gc .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_dfegb .Data );
_gc .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_dfegb );return _dfegb ,nil ;};func (_aca *PdfReader )newPdfActionResetFormFromDict (_fda *_df .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_fda .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fda .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _fbbc (_eabgc *_df .PdfIndirectObject ,_debfa *_df .PdfObjectDictionary )(*DSS ,error ){if _eabgc ==nil {_eabgc =_df .MakeIndirectObject (nil );};_eabgc .PdfObject =_df .MakeDict ();_egdfd :=map[string ]*VRI {};if _bbab ,_ebaa :=_df .GetDict (_debfa .Get ("\u0056\u0052\u0049"));
_ebaa {for _ ,_eeeg :=range _bbab .Keys (){if _agaee ,_dfadc :=_df .GetDict (_bbab .Get (_eeeg ));_dfadc {_egdfd [_fg .ToUpper (_eeeg .String ())]=_dfga (_agaee );};};};return &DSS {Certs :_bfead (_debfa .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bfead (_debfa .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bfead (_debfa .Get ("\u0043\u0052\u004c\u0073")),VRI :_egdfd ,_bddfa :_eabgc },nil ;
};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _cb .Time )(PdfDate ,error ){_abeaeg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fabac ,_ :=_ga .ParseInt (_abeaeg [1:3],10,32);_fbgbd ,_ :=_ga .ParseInt (_abeaeg [4:6],10,32);return PdfDate {_affab :int64 (timeObj .Year ()),_acgcc :int64 (timeObj .Month ()),_bfgcg :int64 (timeObj .Day ()),_dfbbe :int64 (timeObj .Hour ()),_gebge :int64 (timeObj .Minute ()),_dceaa :int64 (timeObj .Second ()),_cefad :_abeaeg [0],_dbgfg :_fabac ,_bbgee :_fbgbd },nil ;
};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gecd *DSS )GetContainingPdfObject ()_df .PdfObject {return _gecd ._bddfa };

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_abgac *PdfReader )GetNameDictionary ()(_df .PdfObject ,error ){_egae :=_df .ResolveReference (_abgac ._fegcd .Get ("\u004e\u0061\u006de\u0073"));if _egae ==nil {return nil ,nil ;};if !_abgac ._afcgf {_cebfc :=_abgac .traverseObjectData (_egae );
if _cebfc !=nil {return nil ,_cebfc ;};};return _egae ,nil ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_cabcd *PdfReader )GetRevisionNumber ()int {return _cabcd ._ecafc .GetRevisionNumber ()};func (_cgac *LTV )getCRLs (_bdebc []*_ed .Certificate )([][]byte ,error ){_edeff :=make ([][]byte ,0,len (_bdebc ));for _ ,_cceaf :=range _bdebc {for _ ,_fdbfgb :=range _cceaf .CRLDistributionPoints {if _cgac .CertClient .IsCA (_cceaf ){continue ;
};_afdgb ,_ecdcb :=_cgac .CRLClient .MakeRequest (_fdbfgb ,_cceaf );if _ecdcb !=nil {_gc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ecdcb );continue ;
};_edeff =append (_edeff ,_afdgb );};};return _edeff ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fede *PdfFieldButton )IsRadio ()bool {return _fede .GetType ()==ButtonTypeRadio };

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_beafa *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _beafa ._fbbca !=nil {return _beafa ._fbbca ,nil ;};if _beafa .ColorSpace ==nil {return nil ,nil ;};_fggfc ,_fecfe :=_fdeda (_beafa .ColorSpace );if _fecfe !=nil {return nil ,_fecfe ;
};_beafa ._fbbca =_fggfc ;return _beafa ._fbbca ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_ged PdfModel ;Rect _df .PdfObject ;Contents _df .PdfObject ;P _df .PdfObject ;NM _df .PdfObject ;M _df .PdfObject ;F _df .PdfObject ;AP _df .PdfObject ;AS _df .PdfObject ;Border _df .PdfObject ;C _df .PdfObject ;StructParent _df .PdfObject ;
OC _df .PdfObject ;_bef *_df .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ccfg *PdfAnnotationMovie )ToPdfObject ()_df .PdfObject {_ccfg .PdfAnnotation .ToPdfObject ();_cbfg :=_ccfg ._bef ;_bdg :=_cbfg .PdfObject .(*_df .PdfObjectDictionary );_bdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u004d\u006f\u0076i\u0065"));
_bdg .SetIfNotNil ("\u0054",_ccfg .T );_bdg .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ccfg .Movie );_bdg .SetIfNotNil ("\u0041",_ccfg .A );return _cbfg ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _df .PdfObject ;_fcfb []byte ;_bcdb *_df .PdfIndirectObject ;};func (_adffbc *PdfAcroForm )fillImageWithAppearance (_afece FieldImageProvider ,_aead FieldAppearanceGenerator )error {if _adffbc ==nil {return nil ;
};_ffadf ,_ccgg :=_afece .FieldImageValues ();if _ccgg !=nil {return _ccgg ;};for _ ,_aagbcg :=range _adffbc .AllFields (){_bfgeb :=_aagbcg .PartialName ();_bfffg ,_ggagd :=_ffadf [_bfgeb ];if !_ggagd {if _dgdcb ,_ccga :=_aagbcg .FullName ();_ccga ==nil {_bfffg ,_ggagd =_ffadf [_dgdcb ];
};};if !_ggagd {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bfgeb );
continue ;};switch _bcfaa :=_aagbcg .GetContext ().(type ){case *PdfFieldButton :if _bcfaa .IsPush (){_bcfaa .SetFillImage (_bfffg );};};if _aead ==nil {continue ;};for _ ,_deadc :=range _aagbcg .Annotations {_gfgf ,_fgbg :=_aead .GenerateAppearanceDict (_adffbc ,_aagbcg ,_deadc );
if _fgbg !=nil {return _fgbg ;};_deadc .AP =_gfgf ;_deadc .ToPdfObject ();};};return nil ;};func (_bbgb *PdfReader )newPdfAnnotationFreeTextFromDict (_ceac *_df .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fga :=PdfAnnotationFreeText {};_bbeb ,_edaf :=_bbgb .newPdfAnnotationMarkupFromDict (_ceac );
if _edaf !=nil {return nil ,_edaf ;};_fga .PdfAnnotationMarkup =_bbeb ;_fga .DA =_ceac .Get ("\u0044\u0041");_fga .Q =_ceac .Get ("\u0051");_fga .RC =_ceac .Get ("\u0052\u0043");_fga .DS =_ceac .Get ("\u0044\u0053");_fga .CL =_ceac .Get ("\u0043\u004c");
_fga .IT =_ceac .Get ("\u0049\u0054");_fga .BE =_ceac .Get ("\u0042\u0045");_fga .RD =_ceac .Get ("\u0052\u0044");_fga .BS =_ceac .Get ("\u0042\u0053");_fga .LE =_ceac .Get ("\u004c\u0045");return &_fga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcc *PdfAnnotationPrinterMark )ToPdfObject ()_df .PdfObject {_gcc .PdfAnnotation .ToPdfObject ();_gfeg :=_gcc ._bef ;_gaff :=_gfeg .PdfObject .(*_df .PdfObjectDictionary );_gaff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_gaff .SetIfNotNil ("\u004d\u004e",_gcc .MN );return _gfeg ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_dcegd int ,_fcgce *PdfPage )error ;const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);type fontFile struct{_bdeac string ;_gdaa string ;_dcdcb _cfe .SimpleEncoder ;
};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_edbd DefaultImageHandler )NewImageFromGoImage (goimg _cd .Image )(*Image ,error ){_cbafb ,_abcab :=_fbg .FromGoImage (goimg );if _abcab !=nil {return nil ,_abcab ;};_dddgb :=_cgbga (_cbafb .Base ());return &_dddgb ,nil ;};

// Width returns the width of `rect`.
func (_gafd *PdfRectangle )Width ()float64 {return _bf .Abs (_gafd .Urx -_gafd .Llx )};type modelManager struct{_dgdff map[PdfModel ]_df .PdfObject ;_edgeb map[_df .PdfObject ]PdfModel ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gaccd *pdfCIDFontType2 )ToPdfObject ()_df .PdfObject {if _gaccd ._abefd ==nil {_gaccd ._abefd =&_df .PdfIndirectObject {};};_decb :=_gaccd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_gaccd ._abefd .PdfObject =_decb ;if _gaccd .CIDSystemInfo !=nil {_decb .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gaccd .CIDSystemInfo );};if _gaccd .DW !=nil {_decb .Set ("\u0044\u0057",_gaccd .DW );};if _gaccd .DW2 !=nil {_decb .Set ("\u0044\u0057\u0032",_gaccd .DW2 );
};if _gaccd .W !=nil {_decb .Set ("\u0057",_gaccd .W );};if _gaccd .W2 !=nil {_decb .Set ("\u0057\u0032",_gaccd .W2 );};if _gaccd .CIDToGIDMap !=nil {_decb .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gaccd .CIDToGIDMap );};return _gaccd ._abefd ;
};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _df .PdfObject ;BS _df .PdfObject ;LE _df .PdfObject ;IC _df .PdfObject ;LL _df .PdfObject ;LLE _df .PdfObject ;Cap _df .PdfObject ;IT _df .PdfObject ;LLO _df .PdfObject ;CP _df .PdfObject ;
Measure _df .PdfObject ;CO _df .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bfdga *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfff :=vals [0];if _cfff < 0.0||_cfff > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfff );
return nil ,ErrColorOutOfRange ;};_bebg :=vals [1];if _bebg < 0.0||_bebg > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bebg );return nil ,ErrColorOutOfRange ;
};_aabd :=vals [2];if _aabd < 0.0||_aabd > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aabd );return nil ,ErrColorOutOfRange ;};_bdcb :=NewPdfColorCalRGB (_cfff ,_bebg ,_aabd );
return _bdcb ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_aegbc *PdfPageResources )SetXObjectByName (keyName _df .PdfObjectName ,stream *_df .PdfObjectStream )error {if _aegbc .XObject ==nil {_aegbc .XObject =_df .MakeDict ();};_fafd :=_df .TraceToDirectObject (_aegbc .XObject );_bbbgf ,_bfabd :=_fafd .(*_df .PdfObjectDictionary );
if !_bfabd {_gc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_aegbc .XObject ,_fafd );return _cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bbbgf .Set (keyName ,stream );return nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_accg *PdfReader )GetCatalogMarkInfo ()(_df .PdfObject ,bool ){if _accg ._fegcd ==nil {return nil ,false ;};_fbega :=_accg ._fegcd .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _fbega ,_fbega !=nil ;};

// HasExtGState checks if ExtGState name is available.
func (_fbfa *PdfPage )HasExtGState (name _df .PdfObjectName )bool {if _fbfa .Resources ==nil {return false ;};if _fbfa .Resources .ExtGState ==nil {return false ;};_aaeggf ,_gdadf :=_df .TraceToDirectObject (_fbfa .Resources .ExtGState ).(*_df .PdfObjectDictionary );
if !_gdadf {_gc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_df .TraceToDirectObject (_fbfa .Resources .ExtGState ));
return false ;};_cgffa :=_aaeggf .Get (name );_gbbgc :=_cgffa !=nil ;return _gbbgc ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_aafcb *PdfPageResources )GetXObjectFormByName (keyName _df .PdfObjectName )(*XObjectForm ,error ){_dagea ,_ecadb :=_aafcb .GetXObjectByName (keyName );if _dagea ==nil {return nil ,nil ;};if _ecadb !=XObjectTypeForm {return nil ,_cab .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ebacdd ,_abbcf :=NewXObjectFormFromStream (_dagea );if _abbcf !=nil {return nil ,_abbcf ;};return _ebacdd ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfgacf *PdfPageResourcesColorspaces )ToPdfObject ()_df .PdfObject {_bfcgg :=_df .MakeDict ();for _ ,_cfdba :=range _cfgacf .Names {_bfcgg .Set (_df .PdfObjectName (_cfdba ),_cfgacf .Colorspaces [_cfdba ].ToPdfObject ());};if _cfgacf ._ebfbd !=nil {_cfgacf ._ebfbd .PdfObject =_bfcgg ;
return _cfgacf ._ebfbd ;};return _bfcgg ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_caa :=NewPdfAction ();_fbd :=&PdfActionURI {};_fbd .PdfAction =_caa ;_caa .SetContext (_fbd );return _fbd ;};func (_cga *PdfReader )newPdfActionImportDataFromDict (_ddfb *_df .PdfObjectDictionary )(*PdfActionImportData ,error ){_adf ,_fdc :=_ddfg (_ddfb .Get ("\u0046"));
if _fdc !=nil {return nil ,_fdc ;};return &PdfActionImportData {F :_adf },nil ;};func (_fbdef fontCommon )isCIDFont ()bool {if _fbdef ._fbegd ==""{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fbdef );
};_aecb :=false ;switch _fbdef ._fbegd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_aecb =true ;};_gc .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_aecb ,_fbdef );
return _aecb ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_dfffe pdfFont };

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_babb *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_aaeg :=_ac .NewReader (img .getBase ());_gbcd :=_fbg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._gced ,img ._afgg );
_deac :=_ac .NewWriter (_gbcd );_cfda :=_bf .Pow (2,float64 (img .BitsPerComponent ))-1;_dbcb :=_babb .GetNumComponents ();_dbgg :=make ([]uint32 ,_dbcb );_fgbd :=make ([]float64 ,_dbcb );for {_dafa :=_aaeg .ReadSamples (_dbgg );if _dafa ==_dg .EOF {break ;
}else if _dafa !=nil {return img ,_dafa ;};for _eafd :=0;_eafd < _dbcb ;_eafd ++{_efga :=float64 (_dbgg [_eafd ])/_cfda ;_fgbd [_eafd ]=_efga ;};_baec ,_dafa :=_babb .TintTransform .Evaluate (_fgbd );if _dafa !=nil {return img ,_dafa ;};for _ ,_feb :=range _baec {_feb =_bf .Min (_bf .Max (0,_feb ),1.0);
if _dafa =_deac .WriteSample (uint32 (_feb *_cfda ));_dafa !=nil {return img ,_dafa ;};};};return _babb .AlternateSpace .ImageToRGB (_cgbga (&_gbcd ));};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_cabd *PdfFont )ToUnicode ()string {if _cabd .baseFields ()._eacb ==nil {return "";};return _cabd .baseFields ()._eacb .Name ();};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_efeg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if _efeg .Alternate ==nil {if _efeg .N ==1{_fgde :=NewPdfColorspaceDeviceGray ();return _fgde .ColorFromPdfObjects (objects );}else if _efeg .N ==3{_eebe :=NewPdfColorspaceDeviceRGB ();
return _eebe .ColorFromPdfObjects (objects );}else if _efeg .N ==4{_eebf :=NewPdfColorspaceDeviceCMYK ();return _eebf .ColorFromPdfObjects (objects );}else {return nil ,_cab .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _efeg .Alternate .ColorFromPdfObjects (objects );};

// SetImage updates XObject Image with new image data.
func (_eddgg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_eddgg .Filter .UpdateParams (img .GetParamsDict ());_eeade ,_ffdfaa :=_eddgg .Filter .EncodeBytes (img .Data );if _ffdfaa !=nil {return _ffdfaa ;};_eddgg .Stream =_eeade ;_bfbbab :=img .Width ;
_eddgg .Width =&_bfbbab ;_efggd :=img .Height ;_eddgg .Height =&_efggd ;_dadfe :=img .BitsPerComponent ;_eddgg .BitsPerComponent =&_dadfe ;if cs ==nil {if img .ColorComponents ==1{_eddgg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_eddgg .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_eddgg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cab .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_eddgg .ColorSpace =cs ;};return nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aeac *PdfColorspaceSpecialSeparation )ToPdfObject ()_df .PdfObject {_faad :=_df .MakeArray (_df .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_faad .Append (_aeac .ColorantName );_faad .Append (_aeac .AlternateSpace .ToPdfObject ());
_faad .Append (_aeac .TintTransform .ToPdfObject ());if _aeac ._ggfb !=nil {_aeac ._ggfb .PdfObject =_faad ;return _aeac ._ggfb ;};return _faad ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_adcbg *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_ffgg :=_adcbg .GetContentStreamObjs ();wrapContents =wrapContents &&len (_ffgg )> 0;_bffe :=_df .NewFlateEncoder ();_faccb :=_df .MakeArray ();if wrapContents {_cgdf ,_ccgc :=_df .MakeStream ([]byte ("\u0071\u000a"),_bffe );
if _ccgc !=nil {return _ccgc ;};_faccb .Append (_cgdf );};_faccb .Append (_ffgg ...);if wrapContents {_cbbe ,_eebef :=_df .MakeStream ([]byte ("\u000a\u0051\u000a"),_bffe );if _eebef !=nil {return _eebef ;};_faccb .Append (_cbbe );};_bfccg ,_dfcad :=_df .MakeStream (cs ,_bffe );
if _dfcad !=nil {return _dfcad ;};_faccb .Append (_bfccg );_adcbg .Contents =_faccb ;return nil ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _df .PdfObject )(*PdfFont ,error ){return _cgdggg (fontObj ,true )};func (_gcbf *PdfPattern )getDict ()*_df .PdfObjectDictionary {if _cccc ,_accf :=_gcbf ._fdceb .(*_df .PdfIndirectObject );_accf {_gfde ,_cbfd :=_cccc .PdfObject .(*_df .PdfObjectDictionary );
if !_cbfd {return nil ;};return _gfde ;}else if _geagf ,_fgdaf :=_gcbf ._fdceb .(*_df .PdfObjectStream );_fgdaf {return _geagf .PdfObjectDictionary ;}else {_gc .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_gcbf ._fdceb );
return nil ;};};

// Mask returns the uin32 bitmask for the specific flag.
func (_caag FieldFlag )Mask ()uint32 {return uint32 (_caag )};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cgc :=NewPdfAction ();_eeg :=&PdfActionHide {};_eeg .PdfAction =_cgc ;_cgc .SetContext (_eeg );return _eeg ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ffcbc pdfFontType0 )GetRuneMetrics (r rune )(_aec .CharMetrics ,bool ){if _ffcbc .DescendantFont ==nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ffcbc );
return _aec .CharMetrics {},false ;};return _ffcbc .DescendantFont .GetRuneMetrics (r );};func (_dcc *PdfReader )newPdfActionGoTo3DViewFromDict (_dbd *_df .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_dbd .Get ("\u0054\u0041"),V :_dbd .Get ("\u0056")},nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bgafa *PdfShadingType7 )ToPdfObject ()_df .PdfObject {_bgafa .PdfShading .ToPdfObject ();_cbcfd ,_gfeb :=_bgafa .getShadingDict ();if _gfeb !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bgafa .BitsPerCoordinate !=nil {_cbcfd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bgafa .BitsPerCoordinate );};if _bgafa .BitsPerComponent !=nil {_cbcfd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bgafa .BitsPerComponent );
};if _bgafa .BitsPerFlag !=nil {_cbcfd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bgafa .BitsPerFlag );};if _bgafa .Decode !=nil {_cbcfd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bgafa .Decode );};if _bgafa .Function !=nil {if len (_bgafa .Function )==1{_cbcfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgafa .Function [0].ToPdfObject ());
}else {_gdcca :=_df .MakeArray ();for _ ,_gcggc :=range _bgafa .Function {_gdcca .Append (_gcggc .ToPdfObject ());};_cbcfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdcca );};};return _bgafa ._aedee ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dce :=PdfColorDeviceGray (grayVal );return &_dce ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ceagea *PdfPattern )SetContext (ctx PdfModel ){_ceagea ._bbdg =ctx };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_fced *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_dcfdf *PdfWriter )optimizeDocument ()error {if _dcfdf ._ggbfa ==nil {return nil ;};_ceefga ,_cgded :=_df .GetDict (_dcfdf ._eadb );if !_cgded {return _cab .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cdcd :=_bee .Document {ID :[2]string {_dcfdf ._cecfgg ,_dcfdf ._dfabe },Version :_dcfdf ._ggaaa ,Objects :_dcfdf ._ccdbg ,Info :_ceefga ,Crypt :_dcfdf ._gfda ,UseHashBasedID :_dcfdf ._ebeag };if _gacdd :=_dcfdf ._ggbfa .ApplyStandard (&_cdcd );_gacdd !=nil {return _gacdd ;
};_dcfdf ._cecfgg ,_dcfdf ._dfabe =_cdcd .ID [0],_cdcd .ID [1];_dcfdf ._ggaaa =_cdcd .Version ;_dcfdf ._ccdbg =_cdcd .Objects ;_dcfdf ._eadb .PdfObject =_cdcd .Info ;_dcfdf ._ebeag =_cdcd .UseHashBasedID ;_dcfdf ._gfda =_cdcd .Crypt ;_adffc :=make (map[_df .PdfObject ]struct{},len (_dcfdf ._ccdbg ));
for _ ,_fcdbeg :=range _dcfdf ._ccdbg {_adffc [_fcdbeg ]=struct{}{};};_dcfdf ._efced =_adffc ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dae *PdfActionURI )ToPdfObject ()_df .PdfObject {_dae .PdfAction .ToPdfObject ();_fgc :=_dae ._de ;_gbc :=_fgc .PdfObject .(*_df .PdfObjectDictionary );_gbc .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeURI )));_gbc .SetIfNotNil ("\u0055\u0052\u0049",_dae .URI );
_gbc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_dae .IsMap );return _fgc ;};func (_bgdcc *PdfWriter )writeOutlines ()error {if _bgdcc ._ceceea ==nil {return nil ;};_gc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bgdcc ._ceceea );
_bagfa :=_bgdcc ._ceceea .ToPdfObject ();_gc .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_bagfa ,_bagfa ,_bagfa );_bgdcc ._dffed .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_bagfa );
_cagcd :=_bgdcc .addObjects (_bagfa );if _cagcd !=nil {return _cagcd ;};return nil ;};var ErrColorOutOfRange =_cab .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");func (_abfc *LTV )buildCertChain (_dbcfd ,_gfbeg []*_ed .Certificate )([]*_ed .Certificate ,map[string ]*_ed .Certificate ,error ){_caee :=map[string ]*_ed .Certificate {};
for _ ,_eddgf :=range _dbcfd {_caee [_eddgf .Subject .CommonName ]=_eddgf ;};_dfdgd :=_dbcfd ;for _ ,_cbaga :=range _gfbeg {_adbbe :=_cbaga .Subject .CommonName ;if _ ,_dbgga :=_caee [_adbbe ];_dbgga {continue ;};_caee [_adbbe ]=_cbaga ;_dfdgd =append (_dfdgd ,_cbaga );
};if len (_dfdgd )==0{return nil ,nil ,ErrSignNoCertificates ;};var _beega error ;for _egdag :=_dfdgd [0];_egdag !=nil &&!_abfc .CertClient .IsCA (_egdag );{_cbgcgc ,_abbef :=_caee [_egdag .Issuer .CommonName ];if !_abbef {if _cbgcgc ,_beega =_abfc .CertClient .GetIssuer (_egdag );
_beega !=nil {_gc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_beega );
break ;};_caee [_egdag .Issuer .CommonName ]=_cbgcgc ;_dfdgd =append (_dfdgd ,_cbgcgc );};_egdag =_cbgcgc ;};return _dfdgd ,_caee ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_bdbdfg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_bdbdfg .GetNumComponents (){return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbd ,_gbab :=_bdbdfg .TintTransform .Evaluate (vals );
if _gbab !=nil {return nil ,_gbab ;};_bggf ,_gbab :=_bdbdfg .AlternateSpace .ColorFromFloats (_gfbd );if _gbab !=nil {return nil ,_gbab ;};return _bggf ,nil ;};func (_addff *pdfCIDFontType2 )baseFields ()*fontCommon {return &_addff .fontCommon };

// GetPerms returns the Permissions dictionary
func (_bbdd *PdfReader )GetPerms ()*Permissions {return _bbdd ._fdga };

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gbbg *LTV )EnableAll (extraCerts []*_ed .Certificate )error {_abcf :=_gbbg ._agdeb ._cfaba .AcroForm ;for _ ,_fgfd :=range _abcf .AllFields (){_bgbe ,_ :=_fgfd .GetContext ().(*PdfFieldSignature );if _bgbe ==nil {continue ;};_edac :=_bgbe .V ;if _bafgf :=_gbbg .validateSig (_edac );
_bafgf !=nil {_gc .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bafgf );
};if _agff :=_gbbg .Enable (_edac ,extraCerts );_agff !=nil {return _agff ;};};return nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gcbbg *PdfPage )GetContentStreamObjs ()[]_df .PdfObject {if _gcbbg .Contents ==nil {return nil ;};_cagd :=_df .TraceToDirectObject (_gcbbg .Contents );if _caacf ,_cbbf :=_cagd .(*_df .PdfObjectArray );_cbbf {return _caacf .Elements ();};return []_df .PdfObject {_cagd };
};

// ToPdfObject implements interface PdfModel.
func (_bcbe *PdfAnnotationFileAttachment )ToPdfObject ()_df .PdfObject {_bcbe .PdfAnnotation .ToPdfObject ();_bdba :=_bcbe ._bef ;_bcg :=_bdba .PdfObject .(*_df .PdfObjectDictionary );_bcbe .PdfAnnotationMarkup .appendToPdfDictionary (_bcg );_bcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_bcg .SetIfNotNil ("\u0046\u0053",_bcbe .FS );_bcg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcbe .Name );return _bdba ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_deeac *PdfColorspaceLab )ToPdfObject ()_df .PdfObject {_fbff :=_df .MakeArray ();_fbff .Append (_df .MakeName ("\u004c\u0061\u0062"));_bfba :=_df .MakeDict ();if _deeac .WhitePoint !=nil {_abef :=_df .MakeArray (_df .MakeFloat (_deeac .WhitePoint [0]),_df .MakeFloat (_deeac .WhitePoint [1]),_df .MakeFloat (_deeac .WhitePoint [2]));
_bfba .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_abef );}else {_gc .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _deeac .BlackPoint !=nil {_cfac :=_df .MakeArray (_df .MakeFloat (_deeac .BlackPoint [0]),_df .MakeFloat (_deeac .BlackPoint [1]),_df .MakeFloat (_deeac .BlackPoint [2]));_bfba .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cfac );
};if _deeac .Range !=nil {_feedg :=_df .MakeArray (_df .MakeFloat (_deeac .Range [0]),_df .MakeFloat (_deeac .Range [1]),_df .MakeFloat (_deeac .Range [2]),_df .MakeFloat (_deeac .Range [3]));_bfba .Set ("\u0052\u0061\u006eg\u0065",_feedg );};_fbff .Append (_bfba );
if _deeac ._cecff !=nil {_deeac ._cecff .PdfObject =_fbff ;return _deeac ._cecff ;};return _fbff ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _df .PdfObject ;};func (_fbcdd *PdfReader )newPdfSignatureReferenceFromDict (_eagg *_df .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _fgced ,_gfcbb :=_fbcdd ._cggbe .GetModelFromPrimitive (_eagg ).(*PdfSignatureReference );
_gfcbb {return _fgced ,nil ;};_ebdda :=&PdfSignatureReference {_adbabb :_eagg ,Data :_eagg .Get ("\u0044\u0061\u0074\u0061")};var _edeed bool ;_ebdda .Type ,_ =_df .GetName (_eagg .Get ("\u0054\u0079\u0070\u0065"));_ebdda .TransformMethod ,_edeed =_df .GetName (_eagg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_edeed {_gc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ebdda .TransformParams ,_ =_df .GetDict (_eagg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_ebdda .DigestMethod ,_ =_df .GetName (_eagg .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _ebdda ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_ffaca *PdfReader )IsEncrypted ()(bool ,error ){return _ffaca ._ecafc .IsEncrypted ()};func _cgbga (_ebdd *_fbg .ImageBase )(_ccaa Image ){_ccaa .Width =int64 (_ebdd .Width );_ccaa .Height =int64 (_ebdd .Height );_ccaa .BitsPerComponent =int64 (_ebdd .BitsPerComponent );
_ccaa .ColorComponents =_ebdd .ColorComponents ;_ccaa .Data =_ebdd .Data ;_ccaa ._afgg =_ebdd .Decode ;_ccaa ._gced =_ebdd .Alpha ;return _ccaa ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_df .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _df .PdfObject ;A _df .PdfObject ;SE _df .PdfObject ;C _df .PdfObject ;F _df .PdfObject ;
_dfee *_df .PdfIndirectObject ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_deefg *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_dcfd :=_deefg ._ecafc .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _dcfd {return nil ,_cab .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_dcfd {return _deefg ,nil ;};if _deefg ._ababg [revisionNumber ]!=nil {return _deefg ._ababg [revisionNumber ],nil ;};_debda :=_deefg ;for _fddc :=_dcfd -1;_fddc >=revisionNumber ;_fddc --{_bebbb ,_gaeb :=_debda .GetPreviousRevision ();
if _gaeb !=nil {return nil ,_gaeb ;};_deefg ._ababg [_fddc ]=_bebbb ;_debda =_bebbb ;};return _debda ,nil ;};func _aebe ()string {_dcdd .Lock ();defer _dcdd .Unlock ();return _bdbda };

// GetContainingPdfObject implements interface PdfModel.
func (_fbec *Permissions )GetContainingPdfObject ()_df .PdfObject {return _fbec ._afgfd };func _bfca (_baacgg _df .PdfObject )(*PdfFunctionType2 ,error ){_fbfd :=&PdfFunctionType2 {};var _bbfea *_df .PdfObjectDictionary ;if _cadda ,_aega :=_baacgg .(*_df .PdfIndirectObject );
_aega {_fefb ,_deae :=_cadda .PdfObject .(*_df .PdfObjectDictionary );if !_deae {return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbfd ._gaged =_cadda ;_bbfea =_fefb ;}else if _aefcc ,_cbdce :=_baacgg .(*_df .PdfObjectDictionary );
_cbdce {_bbfea =_aefcc ;}else {return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gc .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_bbfea .String ());_ddgd ,_bega :=_df .TraceToDirectObject (_bbfea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_df .PdfObjectArray );
if !_bega {_gc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cab .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ddgd .Len ()< 0||_ddgd .Len ()%2!=0{_gc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cab .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_dbeed ,_egcd :=_ddgd .ToFloat64Array ();if _egcd !=nil {return nil ,_egcd ;};_fbfd .Domain =_dbeed ;_ddgd ,_bega =_df .TraceToDirectObject (_bbfea .Get ("\u0052\u0061\u006eg\u0065")).(*_df .PdfObjectArray );if _bega {if _ddgd .Len ()< 0||_ddgd .Len ()%2!=0{return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bgbgg ,_bgebec :=_ddgd .ToFloat64Array ();if _bgebec !=nil {return nil ,_bgebec ;};_fbfd .Range =_bgbgg ;};_ddgd ,_bega =_df .TraceToDirectObject (_bbfea .Get ("\u0043\u0030")).(*_df .PdfObjectArray );if _bega {_efag ,_fcfg :=_ddgd .ToFloat64Array ();
if _fcfg !=nil {return nil ,_fcfg ;};_fbfd .C0 =_efag ;};_ddgd ,_bega =_df .TraceToDirectObject (_bbfea .Get ("\u0043\u0031")).(*_df .PdfObjectArray );if _bega {_cbeef ,_gcefd :=_ddgd .ToFloat64Array ();if _gcefd !=nil {return nil ,_gcefd ;};_fbfd .C1 =_cbeef ;
};if len (_fbfd .C0 )!=len (_fbfd .C1 ){_gc .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_df .ErrRangeError ;};N ,_egcd :=_df .GetNumberAsFloat (_df .TraceToDirectObject (_bbfea .Get ("\u004e")));
if _egcd !=nil {_gc .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_bbfea .String ());return nil ,_egcd ;};_fbfd .N =N ;
return _fbfd ,nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gfc :=NewPdfAnnotation ();_gge :=&PdfAnnotationFreeText {};_gge .PdfAnnotation =_gfc ;_gge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfc .SetContext (_gge );return _gge ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ecgg *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ecgg .updateObjectsDeep (dss .ToPdfObject (),nil );};_ecgg ._aed =dss ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_edceb *PdfTransformParamsDocMDP )String ()string {return _g .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_edceb .Type ,_edceb .P ,_edceb .V );};func (_bbdc *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bbdc ._cada };


// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_cffe PdfModel ;_gadcg *_df .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_df .PdfObjectName ;T *_df .PdfObjectString ;TU *_df .PdfObjectString ;TM *_df .PdfObjectString ;Ff *_df .PdfObjectInteger ;
V _df .PdfObject ;DV _df .PdfObject ;AA _df .PdfObject ;VariableText *VariableText ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _df .PdfObject ;FontFamily _df .PdfObject ;FontStretch _df .PdfObject ;FontWeight _df .PdfObject ;Flags _df .PdfObject ;FontBBox _df .PdfObject ;ItalicAngle _df .PdfObject ;Ascent _df .PdfObject ;Descent _df .PdfObject ;
Leading _df .PdfObject ;CapHeight _df .PdfObject ;XHeight _df .PdfObject ;StemV _df .PdfObject ;StemH _df .PdfObject ;AvgWidth _df .PdfObject ;MaxWidth _df .PdfObject ;MissingWidth _df .PdfObject ;FontFile _df .PdfObject ;FontFile2 _df .PdfObject ;FontFile3 _df .PdfObject ;
CharSet _df .PdfObject ;_adafb int ;_dcdb float64 ;*fontFile ;_aggdg *_aec .TtfType ;

// Additional entries for CIDFonts
Style _df .PdfObject ;Lang _df .PdfObject ;FD _df .PdfObject ;CIDSet _df .PdfObject ;_abac *_df .PdfIndirectObject ;};func _dfga (_bedgb *_df .PdfObjectDictionary )*VRI {_gecbd ,_ :=_df .GetString (_bedgb .Get ("\u0054\u0055"));_gcbc ,_ :=_df .GetString (_bedgb .Get ("\u0054\u0053"));
return &VRI {Cert :_bfead (_bedgb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bfead (_bedgb .Get ("\u004f\u0043\u0053\u0050")),CRL :_bfead (_bedgb .Get ("\u0043\u0052\u004c")),TU :_gecbd ,TS :_gcbc };};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bffbb *LTV )Enable (sig *PdfSignature ,extraCerts []*_ed .Certificate )error {if _cdeb :=_bffbb .validateSig (sig );_cdeb !=nil {return _cdeb ;};_fcdfa ,_cbbba :=_bffbb .generateVRIKey (sig );if _cbbba !=nil {return _cbbba ;};if _ ,_fedcaa :=_bffbb ._ecdcg .VRI [_fcdfa ];
_fedcaa &&_bffbb .SkipExisting {return nil ;};_ceedg ,_cbbba :=sig .GetCerts ();if _cbbba !=nil {return _cbbba ;};return _bffbb .enable (_ceedg ,extraCerts ,_fcdfa );};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _df .PdfObject ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_deadd *modelManager )GetPrimitiveFromModel (model PdfModel )_df .PdfObject {_fbgf ,_cdcge :=_deadd ._dgdff [model ];if !_cdcge {return nil ;};return _fbgf ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_bddfa :_df .MakeIndirectObject (_df .MakeDict ()),VRI :map[string ]*VRI {}};};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_dcfg *PdfFieldSignature )ToPdfObject ()_df .PdfObject {if _dcfg .PdfAnnotationWidget !=nil {_dcfg .PdfAnnotationWidget .ToPdfObject ();};_dcfg .PdfField .ToPdfObject ();_ddef :=_dcfg ._gadcg ;_fadda :=_ddef .PdfObject .(*_df .PdfObjectDictionary );
_fadda .SetIfNotNil ("\u0046\u0054",_df .MakeName ("\u0053\u0069\u0067"));_fadda .SetIfNotNil ("\u004c\u006f\u0063\u006b",_dcfg .Lock );_fadda .SetIfNotNil ("\u0053\u0056",_dcfg .SV );if _dcfg .V !=nil {_fadda .SetIfNotNil ("\u0056",_dcfg .V .ToPdfObject ());
};return _ddef ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_cebf :=&PdfColorPattern {};return _cebf };

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_ccfe :=&PdfShadingType3 {};_ccfe .PdfShading =&PdfShading {};_ccfe .PdfShading ._aedee =_df .MakeIndirectObject (_df .MakeDict ());_ccfe .PdfShading ._aceab =_ccfe ;return _ccfe ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fbafee *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _agbg []*PdfOutlineTreeNode ;var _cadf []string ;var _gfea func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gfea =func (_bedbff *PdfOutlineTreeNode ,_fcefad *[]*PdfOutlineTreeNode ,_feecb *[]string ,_bbdf int ){if _bedbff ==nil {return ;
};if _bedbff ._dedbf ==nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bccag ,_bacce :=_bedbff ._dedbf .(*PdfOutlineItem );if _bacce {*_fcefad =append (*_fcefad ,&_bccag .PdfOutlineTreeNode );
_eecca :=_fg .Repeat ("\u0020",_bbdf *2)+_bccag .Title .Decoded ();*_feecb =append (*_feecb ,_eecca );};if _bedbff .First !=nil {_gefge :=_fg .Repeat ("\u0020",_bbdf *2)+"\u002b";*_feecb =append (*_feecb ,_gefge );_gfea (_bedbff .First ,_fcefad ,_feecb ,_bbdf +1);
};if _bacce &&_bccag .Next !=nil {_gfea (_bccag .Next ,_fcefad ,_feecb ,_bbdf );};};_gfea (_fbafee ._ddbd ,&_agbg ,&_cadf ,0);return _agbg ,_cadf ,nil ;};func (_fegeg Image )getBase ()_fbg .ImageBase {return _fbg .NewImageBase (int (_fegeg .Width ),int (_fegeg .Height ),int (_fegeg .BitsPerComponent ),_fegeg .ColorComponents ,_fegeg .Data ,_fegeg ._gced ,_fegeg ._afgg );
};

// ToGoTime returns the date in time.Time format.
func (_fdgbf PdfDate )ToGoTime ()_cb .Time {_dfbcb :=int (_fdgbf ._dbgfg *60*60+_fdgbf ._bbgee *60);switch _fdgbf ._cefad {case '-':_dfbcb =-_dfbcb ;case 'Z':_dfbcb =0;};_bfecc :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fdgbf ._cefad ,_fdgbf ._dbgfg ,_fdgbf ._bbgee );
_eaef :=_cb .FixedZone (_bfecc ,_dfbcb );return _cb .Date (int (_fdgbf ._affab ),_cb .Month (_fdgbf ._acgcc ),int (_fdgbf ._bfgcg ),int (_fdgbf ._dfbbe ),int (_fdgbf ._gebge ),int (_fdgbf ._dceaa ),0,_eaef );};

// R returns the value of the red component of the color.
func (_gbff *PdfColorDeviceRGB )R ()float64 {return _gbff [0]};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_edf :=NewPdfAnnotation ();_dccg :=&PdfAnnotationSquiggly {};_dccg .PdfAnnotation =_edf ;_dccg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edf .SetContext (_dccg );return _dccg ;};func (_decfed *PdfWriter )setCatalogVersion (){_decfed ._dffed .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_df .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_decfed ._ggaaa .Major ,_decfed ._ggaaa .Minor )));
};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_cgec *PdfAppender )SetDocInfo (info *PdfInfo ){_cgec ._ggdef =info };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cbaa _df .PdfObject ;};func (_eddff *PdfReader )loadDSS ()(*DSS ,error ){if _eddff ._ecafc .GetCrypter ()!=nil &&!_eddff ._ecafc .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cffdf :=_eddff ._fegcd .Get ("\u0044\u0053\u0053");if _cffdf ==nil {return nil ,nil ;};_dabbd ,_ :=_df .GetIndirect (_cffdf );_cffdf =_df .TraceToDirectObject (_cffdf );switch _eagbgd :=_cffdf .(type ){case *_df .PdfObjectNull :return nil ,nil ;case *_df .PdfObjectDictionary :return _fbbc (_dabbd ,_eagbgd );
};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cffdf );};func (_ddbf *PdfWriter )seekByName (_feaaa _df .PdfObject ,_bcdac []string ,_fbfdf string )([]_df .PdfObject ,error ){_gc .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_feaaa );
var _dfadf []_df .PdfObject ;if _cbfga ,_cedae :=_feaaa .(*_df .PdfIndirectObject );_cedae {return _ddbf .seekByName (_cbfga .PdfObject ,_bcdac ,_fbfdf );};if _eccda ,_acgfb :=_feaaa .(*_df .PdfObjectStream );_acgfb {return _ddbf .seekByName (_eccda .PdfObjectDictionary ,_bcdac ,_fbfdf );
};if _acefa ,_gcfgg :=_feaaa .(*_df .PdfObjectDictionary );_gcfgg {_gc .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_eabb :=range _acefa .Keys (){_effef :=_acefa .Get (_eabb );if string (_eabb )==_fbfdf {_dfadf =append (_dfadf ,_effef );};for _ ,_bgaa :=range _bcdac {if string (_eabb )==_bgaa {_gc .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_bgaa );
_eaada ,_fefgf :=_ddbf .seekByName (_effef ,_bcdac ,_fbfdf );if _fefgf !=nil {return _dfadf ,_fefgf ;};_dfadf =append (_dfadf ,_eaada ...);break ;};};};return _dfadf ,nil ;};return _dfadf ,nil ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_adbabb *_df .PdfObjectDictionary ;Type *_df .PdfObjectName ;TransformMethod *_df .PdfObjectName ;TransformParams _df .PdfObject ;Data _df .PdfObject ;DigestMethod *_df .PdfObjectName ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_cdga pdfFontSimple )GetCharMetrics (code _cfe .CharCode )(_aec .CharMetrics ,bool ){if _gdga ,_dbgac :=_cdga ._abaag [code ];_dbgac {return _aec .CharMetrics {Wx :_gdga },true ;};if _aec .IsStdFont (_aec .StdFontName (_cdga ._gbgf )){return _aec .CharMetrics {Wx :250},true ;
};return _aec .CharMetrics {},false ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_eb :=NewPdfAction ();_bab :=&PdfActionThread {};_bab .PdfAction =_eb ;_eb .SetContext (_bab );return _bab ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eabgd *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _geca []*PdfField ;if _eabgd .AcroForm !=nil {_geca =_eabgd .AcroForm .AllFields ();};_eefc :=make (map[*PdfField ]struct{},len (_geca ));for _ ,_ddbbe :=range _geca {_eefc [_ddbbe ]=struct{}{};
};for _ ,_fecaa :=range _eabgd .PageList {_aeafa ,_cfacdc :=_fecaa .GetAnnotations ();if _cfacdc !=nil {return false ,_cfacdc ;};for _ ,_ffbga :=range _aeafa {_acecge ,_gefad :=_ffbga .GetContext ().(*PdfAnnotationWidget );if !_gefad {continue ;};_fgcfd :=_acecge .Field ();
if _fgcfd ==nil {return true ,nil ;};if _ ,_eabfa :=_eefc [_fgcfd ];!_eabfa {return true ,nil ;};};};return false ,nil ;};func (_debb *PdfReader )newPdfAnnotationSoundFromDict (_fadg *_df .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fdbc :=PdfAnnotationSound {};
_cfaf ,_aadg :=_debb .newPdfAnnotationMarkupFromDict (_fadg );if _aadg !=nil {return nil ,_aadg ;};_fdbc .PdfAnnotationMarkup =_cfaf ;_fdbc .Name =_fadg .Get ("\u004e\u0061\u006d\u0065");_fdbc .Sound =_fadg .Get ("\u0053\u006f\u0075n\u0064");return &_fdbc ,nil ;
};func (_ddfbg *PdfReader )newPdfActionSetOCGStateFromDict (_fbc *_df .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fbc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fbc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_bebd fontCommon )asPdfObjectDictionary (_fadb string )*_df .PdfObjectDictionary {if _fadb !=""&&_bebd ._fbegd !=""&&_fadb !=_bebd ._fbegd {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fadb ,_bebd );
}else if _fadb ==""&&_bebd ._fbegd ==""{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bebd );
}else if _bebd ._fbegd ==""{_bebd ._fbegd =_fadb ;};_ddfc :=_df .MakeDict ();_ddfc .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0046\u006f\u006e\u0074"));_ddfc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_df .MakeName (_bebd ._gbgf ));
_ddfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName (_bebd ._fbegd ));if _bebd ._cada !=nil {_ddfc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bebd ._cada .ToPdfObject ());};if _bebd ._gdca !=nil {_ddfc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bebd ._gdca );
}else if _bebd ._eacb !=nil {_dcbe ,_adaa :=_bebd ._eacb .Stream ();if _adaa !=nil {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_adaa );
}else {_ddfc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dcbe );};};return _ddfc ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_baf :=NewPdfAnnotation ();_bgdf :=&PdfAnnotationHighlight {};_bgdf .PdfAnnotation =_baf ;_bgdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_baf .SetContext (_bgdf );return _bgdf ;};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_dbeedb *PdfPage )GetRotate ()(int64 ,error ){if _dbeedb .Rotate !=nil {return *_dbeedb .Rotate ,nil ;};_adaga :=_dbeedb .Parent ;for _adaga !=nil {_fgedc ,_bgfec :=_df .GetDict (_adaga );if !_bgfec {return 0,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ddgcg :=_fgedc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ddgcg !=nil {_egdfe ,_agbce :=_df .GetInt (_ddgcg );if !_agbce {return 0,_cab .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _egdfe !=nil {return int64 (*_egdfe ),nil ;};return 0,_cab .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_adaga =_fgedc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_cab .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// GetPdfInfo returns the PDF info dictionary.
func (_fdddb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_fbefe ,_ccdaa :=_fdddb .GetTrailer ();if _ccdaa !=nil {return nil ,_ccdaa ;};var _deeg *_df .PdfObjectDictionary ;_gcdfg :=_fbefe .Get ("\u0049\u006e\u0066\u006f");switch _ggbf :=_gcdfg .(type ){case *_df .PdfObjectReference :_dbdac :=_ggbf ;
_gcdfg ,_ccdaa =_fdddb .GetIndirectObjectByNumber (int (_dbdac .ObjectNumber ));_gcdfg =_df .TraceToDirectObject (_gcdfg );if _ccdaa !=nil {return nil ,_ccdaa ;};_deeg ,_ =_gcdfg .(*_df .PdfObjectDictionary );case *_df .PdfObjectDictionary :_deeg =_ggbf ;
};if _deeg ==nil {return nil ,_cab .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_baabc ,_ccdaa :=NewPdfInfoFromObject (_deeg );if _ccdaa !=nil {return nil ,_ccdaa ;
};return _baabc ,nil ;};func (_gefa *PdfReader )newPdfPageFromDict (_ebdae *_df .PdfObjectDictionary )(*PdfPage ,error ){_eeadf :=NewPdfPage ();_eeadf ._aaee =_ebdae ;_ffdfa :=*_ebdae ;_fdgcc ,_fcgbdc :=_ffdfa .Get ("\u0054\u0079\u0070\u0065").(*_df .PdfObjectName );
if !_fcgbdc {return nil ,_cab .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_fdgcc !="\u0050\u0061\u0067\u0065"{return nil ,_cab .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _cacef :=_ffdfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_cacef !=nil {_eeadf .Parent =_cacef ;};if _dbfee :=_ffdfa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_dbfee !=nil {_acccc ,_efdfc :=_df .GetString (_dbfee );
if !_efdfc {return nil ,_cab .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gaeac ,_befba :=NewPdfDate (_acccc .Str ());if _befba !=nil {return nil ,_befba ;};_eeadf .LastModified =&_gaeac ;};if _ggcb :=_ffdfa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggcb !=nil &&!_df .IsNullObject (_ggcb ){_daefa ,_acdf :=_df .GetDict (_ggcb );
if !_acdf {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ggcb );};var _bdafb error ;_eeadf .Resources ,_bdafb =NewPdfPageResourcesFromDict (_daefa );
if _bdafb !=nil {return nil ,_bdafb ;};}else {_acdea ,_aeggg :=_eeadf .getParentResources ();if _aeggg !=nil {return nil ,_aeggg ;};if _acdea ==nil {_acdea =NewPdfPageResources ();};_eeadf .Resources =_acdea ;};if _eggad :=_ffdfa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_eggad !=nil {_gafede ,_ebccd :=_df .GetArray (_eggad );if !_ebccd {return nil ,_cab .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _addg error ;
_eeadf .MediaBox ,_addg =NewPdfRectangle (*_gafede );if _addg !=nil {return nil ,_addg ;};};if _facd :=_ffdfa .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_facd !=nil {_edfcga ,_adfa :=_df .GetArray (_facd );if !_adfa {return nil ,_cab .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _eedce error ;_eeadf .CropBox ,_eedce =NewPdfRectangle (*_edfcga );if _eedce !=nil {return nil ,_eedce ;};};if _cgcge :=_ffdfa .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cgcge !=nil {_bcdbg ,_caabc :=_df .GetArray (_cgcge );if !_caabc {return nil ,_cab .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _eefd error ;_eeadf .BleedBox ,_eefd =NewPdfRectangle (*_bcdbg );if _eefd !=nil {return nil ,_eefd ;};};if _bged :=_ffdfa .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_bged !=nil {_edbbg ,_ccbbb :=_df .GetArray (_bged );if !_ccbbb {return nil ,_cab .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gaega error ;_eeadf .TrimBox ,_gaega =NewPdfRectangle (*_edbbg );if _gaega !=nil {return nil ,_gaega ;};};if _cage :=_ffdfa .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cage !=nil {_bdefba ,_dddf :=_df .GetArray (_cage );if !_dddf {return nil ,_cab .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fgbab error ;_eeadf .ArtBox ,_fgbab =NewPdfRectangle (*_bdefba );if _fgbab !=nil {return nil ,_fgbab ;};};if _ebgd :=_ffdfa .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_ebgd !=nil {_eeadf .BoxColorInfo =_ebgd ;};
if _fedac :=_ffdfa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fedac !=nil {_eeadf .Contents =_fedac ;};if _dgacf :=_ffdfa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dgacf !=nil {_gdfd ,_gbfb :=_df .GetNumberAsInt64 (_dgacf );if _gbfb !=nil {return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eeadf .Rotate =&_gdfd ;};if _befa :=_ffdfa .Get ("\u0047\u0072\u006fu\u0070");_befa !=nil {_eeadf .Group =_befa ;};if _aeacc :=_ffdfa .Get ("\u0054\u0068\u0075m\u0062");_aeacc !=nil {_eeadf .Thumb =_aeacc ;};if _aecfgf :=_ffdfa .Get ("\u0042");_aecfgf !=nil {_eeadf .B =_aecfgf ;
};if _caca :=_ffdfa .Get ("\u0044\u0075\u0072");_caca !=nil {_eeadf .Dur =_caca ;};if _egbfd :=_ffdfa .Get ("\u0054\u0072\u0061n\u0073");_egbfd !=nil {_eeadf .Trans =_egbfd ;};if _cbcg :=_ffdfa .Get ("\u0041\u0041");_cbcg !=nil {_eeadf .AA =_cbcg ;};if _cacc :=_ffdfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_cacc !=nil {_eeadf .Metadata =_cacc ;};if _gdedg :=_ffdfa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gdedg !=nil {_eeadf .PieceInfo =_gdedg ;};if _dbcbg :=_ffdfa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_dbcbg !=nil {_eeadf .StructParents =_dbcbg ;};if _fgdf :=_ffdfa .Get ("\u0049\u0044");_fgdf !=nil {_eeadf .ID =_fgdf ;};if _gffgd :=_ffdfa .Get ("\u0050\u005a");_gffgd !=nil {_eeadf .PZ =_gffgd ;};if _fcdd :=_ffdfa .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_fcdd !=nil {_eeadf .SeparationInfo =_fcdd ;};if _afeed :=_ffdfa .Get ("\u0054\u0061\u0062\u0073");_afeed !=nil {_eeadf .Tabs =_afeed ;};if _dgfgf :=_ffdfa .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_dgfgf !=nil {_eeadf .TemplateInstantiated =_dgfgf ;};if _cgfaa :=_ffdfa .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_cgfaa !=nil {_eeadf .PresSteps =_cgfaa ;};if _aegga :=_ffdfa .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_aegga !=nil {_eeadf .UserUnit =_aegga ;
};if _bgcga :=_ffdfa .Get ("\u0056\u0050");_bgcga !=nil {_eeadf .VP =_bgcga ;};if _acfbe :=_ffdfa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_acfbe !=nil {_eeadf .Annots =_acfbe ;};_eeadf ._fadfc =_gefa ;return _eeadf ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_egbce OutlineDest )ToPdfObject ()_df .PdfObject {if (_egbce .PageObj ==nil &&_egbce .Page < 0)||_egbce .Mode ==""{return _df .MakeNull ();};_aceac :=_df .MakeArray ();if _egbce .PageObj !=nil {_aceac .Append (_egbce .PageObj );}else {_aceac .Append (_df .MakeInteger (_egbce .Page ));
};_aceac .Append (_df .MakeName (_egbce .Mode ));switch _egbce .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_aceac .Append (_df .MakeFloat (_egbce .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_aceac .Append (_df .MakeFloat (_egbce .X ));
case "\u0058\u0059\u005a":_aceac .Append (_df .MakeFloat (_egbce .X ));_aceac .Append (_df .MakeFloat (_egbce .Y ));_aceac .Append (_df .MakeFloat (_egbce .Zoom ));default:_aceac .Set (1,_df .MakeName ("\u0046\u0069\u0074"));};return _aceac ;};func (_fdcef *PdfWriter )copyObject (_gfgde _df .PdfObject ,_effaee map[_df .PdfObject ]_df .PdfObject ,_fgag map[_df .PdfObject ]struct{},_cfebb bool )_df .PdfObject {_fbaeg :=!_fdcef ._aaegc &&_fgag !=nil ;
if _efcdg ,_dagac :=_effaee [_gfgde ];_dagac {if _fbaeg &&!_cfebb {delete (_fgag ,_gfgde );};return _efcdg ;};if _gfgde ==nil {_edabg :=_df .MakeNull ();return _edabg ;};_ggdfbd :=_gfgde ;switch _dfeec :=_gfgde .(type ){case *_df .PdfObjectArray :_fadfcg :=_df .MakeArray ();
_ggdfbd =_fadfcg ;_effaee [_gfgde ]=_ggdfbd ;for _ ,_cgaba :=range _dfeec .Elements (){_fadfcg .Append (_fdcef .copyObject (_cgaba ,_effaee ,_fgag ,_cfebb ));};case *_df .PdfObjectStreams :_ggggb :=&_df .PdfObjectStreams {PdfObjectReference :_dfeec .PdfObjectReference };
_ggdfbd =_ggggb ;_effaee [_gfgde ]=_ggdfbd ;for _ ,_badcb :=range _dfeec .Elements (){_ggggb .Append (_fdcef .copyObject (_badcb ,_effaee ,_fgag ,_cfebb ));};case *_df .PdfObjectStream :_fgagd :=&_df .PdfObjectStream {Stream :_dfeec .Stream ,PdfObjectReference :_dfeec .PdfObjectReference };
_ggdfbd =_fgagd ;_effaee [_gfgde ]=_ggdfbd ;_fgagd .PdfObjectDictionary =_fdcef .copyObject (_dfeec .PdfObjectDictionary ,_effaee ,_fgag ,_cfebb ).(*_df .PdfObjectDictionary );case *_df .PdfObjectDictionary :var _ccabf bool ;if _fbaeg &&!_cfebb {if _bdeea ,_ :=_df .GetNameVal (_dfeec .Get ("\u0054\u0079\u0070\u0065"));
_bdeea =="\u0050\u0061\u0067\u0065"{_ ,_cddb :=_fdcef ._fcdaa [_dfeec ];_cfebb =!_cddb ;_ccabf =_cfebb ;};};_agbb :=_df .MakeDict ();_ggdfbd =_agbb ;_effaee [_gfgde ]=_ggdfbd ;for _ ,_ebaab :=range _dfeec .Keys (){_agbb .Set (_ebaab ,_fdcef .copyObject (_dfeec .Get (_ebaab ),_effaee ,_fgag ,_cfebb ));
};if _ccabf {_ggdfbd =_df .MakeNull ();_cfebb =false ;};case *_df .PdfIndirectObject :_cabedd :=&_df .PdfIndirectObject {PdfObjectReference :_dfeec .PdfObjectReference };_ggdfbd =_cabedd ;_effaee [_gfgde ]=_ggdfbd ;_cabedd .PdfObject =_fdcef .copyObject (_dfeec .PdfObject ,_effaee ,_fgag ,_cfebb );
case *_df .PdfObjectString :_fbffe :=*_dfeec ;_ggdfbd =&_fbffe ;_effaee [_gfgde ]=_ggdfbd ;case *_df .PdfObjectName :_eebeb :=*_dfeec ;_ggdfbd =&_eebeb ;_effaee [_gfgde ]=_ggdfbd ;case *_df .PdfObjectNull :_ggdfbd =_df .MakeNull ();_effaee [_gfgde ]=_ggdfbd ;
case *_df .PdfObjectInteger :_faab :=*_dfeec ;_ggdfbd =&_faab ;_effaee [_gfgde ]=_ggdfbd ;case *_df .PdfObjectReference :_ddegc :=*_dfeec ;_ggdfbd =&_ddegc ;_effaee [_gfgde ]=_ggdfbd ;case *_df .PdfObjectFloat :_cegdb :=*_dfeec ;_ggdfbd =&_cegdb ;_effaee [_gfgde ]=_ggdfbd ;
case *_df .PdfObjectBool :_decfe :=*_dfeec ;_ggdfbd =&_decfe ;_effaee [_gfgde ]=_ggdfbd ;case *pdfSignDictionary :_gfeag :=&pdfSignDictionary {PdfObjectDictionary :_df .MakeDict (),_gdegb :_dfeec ._gdegb ,_cbbcg :_dfeec ._cbbcg };_ggdfbd =_gfeag ;_effaee [_gfgde ]=_ggdfbd ;
for _ ,_gcgbg :=range _dfeec .Keys (){_gfeag .Set (_gcgbg ,_fdcef .copyObject (_dfeec .Get (_gcgbg ),_effaee ,_fgag ,_cfebb ));};default:_gc .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gfgde );
};if _fbaeg &&_cfebb {_fgag [_gfgde ]=struct{}{};};return _ggdfbd ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dcdd .Lock ();defer _dcdd .Unlock ();_baafa =title };

// GetNumPages returns the number of pages in the document.
func (_dcdeb *PdfReader )GetNumPages ()(int ,error ){if _dcdeb ._ecafc .GetCrypter ()!=nil &&!_dcdeb ._ecafc .IsAuthenticated (){return 0,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_dcdeb ._fgec ),nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cfa :=NewPdfAction ();_ab :=&PdfActionMovie {};_ab .PdfAction =_cfa ;_cfa .SetContext (_ab );return _ab ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fdaea :=&XObjectForm {};_agdff :=&_df .PdfObjectStream {};_agdff .PdfObjectDictionary =_df .MakeDict ();_fdaea ._aefcd =_agdff ;return _fdaea ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func _bgbcd (_fcafe *_df .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fface :=PdfShadingType3 {};_gabcf :=_fcafe .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gabcf ==nil {_gc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_feea ,_eagbb :=_gabcf .(*_df .PdfObjectArray );if !_eagbb {_gc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gabcf );
return nil ,_df .ErrTypeError ;};if _feea .Len ()!=6{_gc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_feea .Len ());return nil ,ErrInvalidAttribute ;
};_fface .Coords =_feea ;if _bgff :=_fcafe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bgff !=nil {_bgff =_df .TraceToDirectObject (_bgff );_becga ,_egggd :=_bgff .(*_df .PdfObjectArray );if !_egggd {_gc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgff );
return nil ,_df .ErrTypeError ;};_fface .Domain =_becga ;};_gabcf =_fcafe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gabcf ==nil {_gc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fface .Function =[]PdfFunction {};if _eebfc ,_ccaef :=_gabcf .(*_df .PdfObjectArray );_ccaef {for _ ,_fedda :=range _eebfc .Elements (){_gfcc ,_gaagc :=_ebcf (_fedda );if _gaagc !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaagc );
return nil ,_gaagc ;};_fface .Function =append (_fface .Function ,_gfcc );};}else {_dcad ,_adac :=_ebcf (_gabcf );if _adac !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adac );
return nil ,_adac ;};_fface .Function =append (_fface .Function ,_dcad );};if _feffa :=_fcafe .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_feffa !=nil {_feffa =_df .TraceToDirectObject (_feffa );_bgfaf ,_gcbaa :=_feffa .(*_df .PdfObjectArray );if !_gcbaa {_gc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feffa );
return nil ,_df .ErrTypeError ;};if _bgfaf .Len ()!=2{_gc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bgfaf .Len ());return nil ,ErrInvalidAttribute ;
};_fface .Extend =_bgfaf ;};return &_fface ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ag *PdfActionThread )ToPdfObject ()_df .PdfObject {_ag .PdfAction .ToPdfObject ();_gee :=_ag ._de ;_aac :=_gee .PdfObject .(*_df .PdfObjectDictionary );_aac .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeThread )));if _ag .F !=nil {_aac .Set ("\u0046",_ag .F .ToPdfObject ());
};_aac .SetIfNotNil ("\u0044",_ag .D );_aac .SetIfNotNil ("\u0042",_ag .B );return _gee ;};func (_begf *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _begf ._ecafc .GetCrypter ()!=nil &&!_begf ._ecafc .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecab :=_begf ._fegcd ;_eaaff :=_ecab .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eaaff ==nil {return nil ,nil ;};_gc .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_bgdaf :=_df .ResolveReference (_eaaff );
_gc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_bgdaf );if _gadg :=_df .IsNullObject (_bgdaf );_gadg {_gc .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_efdec ,_cffeb :=_bgdaf .(*_df .PdfIndirectObject );if !_cffeb {if _ ,_egdb :=_df .GetDict (_bgdaf );!_egdb {_gc .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_gc .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_efdec =_df .MakeIndirectObject (_bgdaf );};_fagfe ,_cffeb :=_efdec .PdfObject .(*_df .PdfObjectDictionary );if !_cffeb {return nil ,_cab .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_gc .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fagfe );_gged ,_ ,_gbgde :=_begf .buildOutlineTree (_efdec ,nil ,nil ,nil );if _gbgde !=nil {return nil ,_gbgde ;};_gc .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gged );
return _gged ,nil ;};func (_gcef *DSS )addCerts (_dgebe [][]byte )([]*_df .PdfObjectStream ,error ){return _gcef .add (&_gcef .Certs ,_gcef ._gead ,_dgebe );};

// ToPdfObject implements interface PdfModel.
func (_dc *PdfActionGoToR )ToPdfObject ()_df .PdfObject {_dc .PdfAction .ToPdfObject ();_gca :=_dc ._de ;_dbe :=_gca .PdfObject .(*_df .PdfObjectDictionary );_dbe .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoToR )));if _dc .F !=nil {_dbe .Set ("\u0046",_dc .F .ToPdfObject ());
};_dbe .SetIfNotNil ("\u0044",_dc .D );_dbe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dc .NewWindow );return _gca ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cffgb *_df .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_df .PdfObjectName ;Filter *_df .PdfObjectName ;SubFilter *_df .PdfObjectName ;Contents *_df .PdfObjectString ;Cert _df .PdfObject ;ByteRange *_df .PdfObjectArray ;Reference *_df .PdfObjectArray ;Changes *_df .PdfObjectArray ;Name *_df .PdfObjectString ;
M *_df .PdfObjectString ;Location *_df .PdfObjectString ;Reason *_df .PdfObjectString ;ContactInfo *_df .PdfObjectString ;R *_df .PdfObjectInteger ;V *_df .PdfObjectInteger ;PropBuild *_df .PdfObjectDictionary ;PropAuthTime *_df .PdfObjectInteger ;PropAuthType *_df .PdfObjectName ;
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _cb .Time ){_dcdd .Lock ();defer _dcdd .Unlock ();_geaeb =creationDate ;};

// Val returns the value of the color.
func (_eeec *PdfColorCalGray )Val ()float64 {return float64 (*_eeec )};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfActionHide )ToPdfObject ()_df .PdfObject {_ecb .PdfAction .ToPdfObject ();_fbe :=_ecb ._de ;_ea :=_fbe .PdfObject .(*_df .PdfObjectDictionary );_ea .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeHide )));_ea .SetIfNotNil ("\u0054",_ecb .T );
_ea .SetIfNotNil ("\u0048",_ecb .H );return _fbe ;};

// AddWatermarkImage adds a watermark to the page.
func (_edeg *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ddgcd ,_facbc :=_edeg .GetMediaBox ();if _facbc !=nil {return _facbc ;};_dagb :=_ddgcd .Urx -_ddgcd .Llx ;_edee :=_ddgcd .Ury -_ddgcd .Lly ;_egca :=float64 (*ximg .Width );
_bbdca :=(_dagb -_egca )/2;if opt .FitToWidth {_egca =_dagb ;_bbdca =0;};_dbfeb :=_edee ;_acafgf :=float64 (0);if opt .PreserveAspectRatio {_dbfeb =_egca *float64 (*ximg .Height )/float64 (*ximg .Width );_acafgf =(_edee -_dbfeb )/2;};if _edeg .Resources ==nil {_edeg .Resources =NewPdfPageResources ();
};_bfdea :=0;_cbabc :=_df .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_bfdea ));for _edeg .Resources .HasXObjectByName (_cbabc ){_bfdea ++;_cbabc =_df .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_bfdea ));};_facbc =_edeg .AddImageResource (_cbabc ,ximg );
if _facbc !=nil {return _facbc ;};_bfdea =0;_bgec :=_df .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_bfdea ));for _edeg .HasExtGState (_bgec ){_bfdea ++;_bgec =_df .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_bfdea ));};_eaaab :=_df .MakeDict ();
_eaaab .Set ("\u0042\u004d",_df .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_eaaab .Set ("\u0043\u0041",_df .MakeFloat (opt .Alpha ));_eaaab .Set ("\u0063\u0061",_df .MakeFloat (opt .Alpha ));_facbc =_edeg .AddExtGState (_bgec ,_eaaab );if _facbc !=nil {return _facbc ;
};_bgbgc :=_g .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_bgec ,_egca ,_dbfeb ,_bbdca ,_acafgf ,_cbabc );
_edeg .AddContentStreamByString (_bgbgc );return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_adfga *PdfFunctionType3 )ToPdfObject ()_df .PdfObject {_aefd :=_df .MakeDict ();_aefd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (3));_acdbb :=&_df .PdfObjectArray {};for _ ,_dfeb :=range _adfga .Domain {_acdbb .Append (_df .MakeFloat (_dfeb ));
};_aefd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acdbb );if _adfga .Range !=nil {_adebc :=&_df .PdfObjectArray {};for _ ,_ccbac :=range _adfga .Range {_adebc .Append (_df .MakeFloat (_ccbac ));};_aefd .Set ("\u0052\u0061\u006eg\u0065",_adebc );};if _adfga .Functions !=nil {_ecca :=&_df .PdfObjectArray {};
for _ ,_aagd :=range _adfga .Functions {_ecca .Append (_aagd .ToPdfObject ());};_aefd .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ecca );};if _adfga .Bounds !=nil {_fedb :=&_df .PdfObjectArray {};for _ ,_bagda :=range _adfga .Bounds {_fedb .Append (_df .MakeFloat (_bagda ));
};_aefd .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_fedb );};if _adfga .Encode !=nil {_agabb :=&_df .PdfObjectArray {};for _ ,_bbcg :=range _adfga .Encode {_agabb .Append (_df .MakeFloat (_bbcg ));};_aefd .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_agabb );
};if _adfga ._geddb !=nil {_adfga ._geddb .PdfObject =_aefd ;return _adfga ._geddb ;};return _aefd ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_abaaf *PdfWriter )SetNameDictionary (names _df .PdfObject )error {if names ==nil {return nil ;};_gc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_abaaf ._dffed .Set ("\u004e\u0061\u006de\u0073",names );return _abaaf .addObjects (names );};func (_gcfbg *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gcfbg ._ecafc .GetCrypter ()!=nil &&!_gcfbg ._ecafc .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dbegd :=_gcfbg ._fegcd ;_eadg :=_dbegd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _eadg ==nil {return nil ,nil ;};_bcaa ,_ :=_df .GetIndirect (_eadg );_eadg =_df .TraceToDirectObject (_eadg );if _df .IsNullObject (_eadg ){_gc .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bafef ,_gddcg :=_df .GetDict (_eadg );if !_gddcg {_gc .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eadg );_gc .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eadg );};_gc .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_gc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gcfbg ._afcgf {_ffde :=_gcfbg .traverseObjectData (_bafef );
if _ffde !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_ffde );
return nil ,_ffde ;};};_bgag ,_acccd :=_gcfbg .newPdfAcroFormFromDict (_bcaa ,_bafef );if _acccd !=nil {return nil ,_acccd ;};return _bgag ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_fegg *PdfFont )BytesToCharcodes (data []byte )[]_cfe .CharCode {_gc .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dbbab ,_ddgfa :=_fegg ._dfffe .(*pdfFontType0 );_ddgfa &&_dbbab ._adab !=nil {if _dafag ,_dceb :=_dbbab .bytesToCharcodes (data );_dceb {return _dafag ;};};var (_gefca =make ([]_cfe .CharCode ,0,len (data )+len (data )%2);_ffddf =_fegg .baseFields ();
);if _ffddf ._eacb !=nil {if _gdadg ,_addfe :=_ffddf ._eacb .BytesToCharcodes (data );_addfe {for _ ,_ceea :=range _gdadg {_gefca =append (_gefca ,_cfe .CharCode (_ceea ));};return _gefca ;};};if _ffddf .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bfab :=0;_bfab < len (data );_bfab +=2{_fcea :=uint16 (data [_bfab ])<<8|uint16 (data [_bfab +1]);_gefca =append (_gefca ,_cfe .CharCode (_fcea ));};}else {for _ ,_gddda :=range data {_gefca =append (_gefca ,_cfe .CharCode (_gddda ));
};};return _gefca ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bfbbb ,_gbfd :=_fb .Open (filePath );if _gbfd !=nil {_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gbfd );
return nil ,_gbfd ;};defer _bfbbb .Close ();return NewCompositePdfFontFromTTF (_bfbbb );};

// CustomKeys returns all custom info keys as list.
func (_dead *PdfInfo )CustomKeys ()[]string {if _dead ._ecbda ==nil {return nil ;};_dbcad :=make ([]string ,len (_dead ._ecbda .Keys ()));for _ ,_eegfgb :=range _dead ._ecbda .Keys (){_dbcad =append (_dbcad ,_eegfgb .String ());};return _dbcad ;};type crossReference struct{Type int ;


// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dcgcf *Image )SetSamples (samples []uint32 ){if _dcgcf .BitsPerComponent < 8{samples =_dcgcf .samplesAddPadding (samples );};_afdg :=_ac .ResampleUint32 (samples ,int (_dcgcf .BitsPerComponent ),8);_dcfcb :=make ([]byte ,len (_afdg ));for _cfgff ,_bfeb :=range _afdg {_dcfcb [_cfgff ]=byte (_bfeb );
};_dcgcf .Data =_dcfcb ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _df .PdfObject ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_df .PdfObjectArray ;TI *_df .PdfObjectInteger ;I *_df .PdfObjectArray ;};const (_dgcag =0x00001;_fafb =0x00002;_fcdbe =0x00004;_gdefa =0x00008;_agdf =0x00020;_bdfa =0x00040;_faga =0x10000;_acga =0x20000;_dgef =0x40000;
);

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_ceceec *XObjectForm )SetContentStream (content []byte ,encoder _df .StreamEncoder )error {_faaaf :=content ;if encoder ==nil {if _ceceec .Filter !=nil {encoder =_ceceec .Filter ;}else {encoder =_df .NewRawEncoder ();};};_gddcgc ,_ddfbd :=encoder .EncodeBytes (_faaaf );
if _ddfbd !=nil {return _ddfbd ;};_faaaf =_gddcgc ;_ceceec .Stream =_faaaf ;_ceceec .Filter =encoder ;return nil ;};func _aggg (_aefg []byte )[]byte {const _dbbgb =52845;const _fbegdc =22719;_eadef :=55665;for _ ,_acaa :=range _aefg [:4]{_eadef =(int (_acaa )+_eadef )*_dbbgb +_fbegdc ;
};_adaab :=make ([]byte ,len (_aefg )-4);for _dfcdg ,_agdc :=range _aefg [4:]{_adaab [_dfcdg ]=byte (int (_agdc )^_eadef >>8);_eadef =(int (_agdc )+_eadef )*_dbbgb +_fbegdc ;};return _adaab ;};func (_cacda *fontFile )parseASCIIPart (_egfg []byte )error {if len (_egfg )< 2||string (_egfg [:2])!="\u0025\u0021"{return _cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_acecg ,_fffeg ,_gdbbf :=_cfag (_egfg );if _gdbbf !=nil {return _gdbbf ;};_fbdg :=_gecg (_acecg );_cacda ._bdeac =_fbdg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cacda ._bdeac ==""{_gc .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fffeg !=""{_cbged ,_aacb :=_edce (_fffeg );if _aacb !=nil {return _aacb ;};_bfcbc ,_aacb :=_cfe .NewCustomSimpleTextEncoder (_cbged ,nil );if _aacb !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_aacb );
return nil ;};_cacda ._dcdcb =_bfcbc ;};return nil ;};func (_ceedc *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _babac []*PdfFieldSignature ;for _ ,_gbabe :=range _ceedc .AllFields (){switch _gffe :=_gbabe .GetContext ().(type ){case *PdfFieldSignature :_bfada :=_gffe ;
_babac =append (_babac ,_bfada );};};return _babac ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_eggg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gdeab *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_gaged *_df .PdfIndirectObject ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_ddafa *PdfWriter )ApplyStandard (optimizer StandardApplier ){_ddafa ._ggbfa =optimizer };

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_eddef *PdfReader )Decrypt (password []byte )(bool ,error ){_bfed ,_gcdaga :=_eddef ._ecafc .Decrypt (password );if _gcdaga !=nil {return false ,_gcdaga ;};if !_bfed {return false ,nil ;};_gcdaga =_eddef .loadStructure ();if _gcdaga !=nil {_gc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_gcdaga );
return false ,_gcdaga ;};return true ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_dcfce *Outline )ToPdfOutline ()*PdfOutline {_adgg :=NewPdfOutline ();var _edgg []*PdfOutlineItem ;var _aebgg int64 ;var _ffbfd *PdfOutlineItem ;for _ ,_gccc :=range _dcfce .Entries {_bbebac ,_ebdfg :=_gccc .ToPdfOutlineItem ();_bbebac .Parent =&_adgg .PdfOutlineTreeNode ;
if _ffbfd !=nil {_ffbfd .Next =&_bbebac .PdfOutlineTreeNode ;_bbebac .Prev =&_ffbfd .PdfOutlineTreeNode ;};_edgg =append (_edgg ,_bbebac );_aebgg +=_ebdfg ;_ffbfd =_bbebac ;};_gcfbc :=int64 (len (_edgg ));_aebgg +=_gcfbc ;if _gcfbc > 0{_adgg .First =&_edgg [0].PdfOutlineTreeNode ;
_adgg .Last =&_edgg [_gcfbc -1].PdfOutlineTreeNode ;_adgg .Count =&_aebgg ;};return _adgg ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_aaab *PdfShadingPatternType3 )ToPdfObject ()_df .PdfObject {_aaab .PdfPattern .ToPdfObject ();_dcffg :=_aaab .getDict ();if _aaab .Shading !=nil {_dcffg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_aaab .Shading .ToPdfObject ());};if _aaab .Matrix !=nil {_dcffg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_aaab .Matrix );
};if _aaab .ExtGState !=nil {_dcffg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_aaab .ExtGState );};return _aaab ._fdceb ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_fcca *PdfPageResources )SetFontByName (keyName _df .PdfObjectName ,obj _df .PdfObject )error {if _fcca .Font ==nil {_fcca .Font =_df .MakeDict ();};_fagcf ,_gdecb :=_df .TraceToDirectObject (_fcca .Font ).(*_df .PdfObjectDictionary );if !_gdecb {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_df .TraceToDirectObject (_fcca .Font ));
return _df .ErrTypeError ;};_fagcf .Set (keyName ,obj );return nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cadgb *PdfReader )GetPageLabels ()(_df .PdfObject ,error ){_dbfdg :=_df .ResolveReference (_cadgb ._fegcd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _dbfdg ==nil {return nil ,nil ;};if !_cadgb ._afcgf {_ddbda :=_cadgb .traverseObjectData (_dbfdg );
if _ddbda !=nil {return nil ,_ddbda ;};};return _dbfdg ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gcf .Permissions ;Algorithm EncryptionAlgorithm ;};

// GetContentStream returns the XObject Form's content stream.
func (_gedfb *XObjectForm )GetContentStream ()([]byte ,error ){_ggebg ,_ceefe :=_df .DecodeStream (_gedfb ._aefcd );if _ceefe !=nil {return nil ,_ceefe ;};return _ggebg ,nil ;};

// C returns the value of the C component of the color.
func (_cdfa *PdfColorCalRGB )C ()float64 {return _cdfa [2]};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_aagc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfeb :=vals [0];_afd :=[]float64 {_cfeb };_bbeg ,_dcff :=_aagc .TintTransform .Evaluate (_afd );
if _dcff !=nil {_gc .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dcff );_gc .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_aagc .TintTransform );
return nil ,_dcff ;};_gc .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bbeg ,_aagc .AlternateSpace );
_aeag ,_dcff :=_aagc .AlternateSpace .ColorFromFloats (_bbeg );if _dcff !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dcff );
return nil ,_dcff ;};return _aeag ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_ddac *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbf :=vals [0];if _gdbf < 0.0||_gdbf > 100.0{_gc .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_gdbf );
return nil ,ErrColorOutOfRange ;};_cedgg :=vals [1];_adaf :=float64 (-100);_fdead :=float64 (100);if len (_ddac .Range )> 1{_adaf =_ddac .Range [0];_fdead =_ddac .Range [1];};if _cedgg < _adaf ||_cedgg > _fdead {_gc .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cedgg ,_adaf ,_fdead );
return nil ,ErrColorOutOfRange ;};_daee :=vals [2];_fcag :=float64 (-100);_bebc :=float64 (100);if len (_ddac .Range )> 3{_fcag =_ddac .Range [2];_bebc =_ddac .Range [3];};if _daee < _fcag ||_daee > _bebc {_gc .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_daee ,_fcag ,_bebc );
return nil ,ErrColorOutOfRange ;};_abg :=NewPdfColorLab (_gdbf ,_cedgg ,_daee );return _abg ,nil ;};func (_cggec *PdfShading )getShadingDict ()(*_df .PdfObjectDictionary ,error ){_gbage :=_cggec ._aedee ;if _cbce ,_afgdc :=_gbage .(*_df .PdfIndirectObject );
_afgdc {_begge ,_caafa :=_cbce .PdfObject .(*_df .PdfObjectDictionary );if !_caafa {return nil ,_df .ErrTypeError ;};return _begge ,nil ;}else if _feaad ,_edcdc :=_gbage .(*_df .PdfObjectStream );_edcdc {return _feaad .PdfObjectDictionary ,nil ;}else if _feae ,_bbffc :=_gbage .(*_df .PdfObjectDictionary );
_bbffc {return _feae ,nil ;}else {_gc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_df .ErrTypeError ;
};};func (_begaa *PdfWriter )writeObjectsInStreams (_ecdaga map[_df .PdfObject ]bool )error {for _ ,_dbccd :=range _begaa ._ccdbg {if _affaf :=_ecdaga [_dbccd ];_affaf {continue ;};_dcfecd :=int64 (0);switch _feccf :=_dbccd .(type ){case *_df .PdfIndirectObject :_dcfecd =_feccf .ObjectNumber ;
case *_df .PdfObjectStream :_dcfecd =_feccf .ObjectNumber ;case *_df .PdfObjectStreams :_dcfecd =_feccf .ObjectNumber ;default:_gc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_dbccd );
return ErrTypeCheck ;};if _begaa ._gfda !=nil &&_dbccd !=_begaa ._dfeeb {_eebecf :=_begaa ._gfda .Encrypt (_dbccd ,_dcfecd ,0);if _eebecf !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_eebecf );
return _eebecf ;};};_begaa .writeObject (int (_dcfecd ),_dbccd );};return nil ;};func (_egff *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ccea :=_egff ._cada ;_ccea !=nil {return _ccea ;};return _egff ._gfcg ;};

// ToInteger convert to an integer format.
func (_bec *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_dfgd :=_bf .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_dfgd *_bec .C ()),uint32 (_dfgd *_bec .M ()),uint32 (_dfgd *_bec .Y ()),uint32 (_dfgd *_bec .K ())};};const (_ PdfOutputIntentType =iota ;
PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_gegfa *PdfWriter )SetOpenAction (dest _df .PdfObject )error {if dest ==nil ||_df .IsNullObject (dest ){return nil ;};_gegfa ._dffed .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _gegfa .addObjects (dest );};func (_gbbda *DSS )generateHashMaps ()error {_badcc ,_bddg :=_gbbda .generateHashMap (_gbbda .Certs );
if _bddg !=nil {return _bddg ;};_egaaa ,_bddg :=_gbbda .generateHashMap (_gbbda .OCSPs );if _bddg !=nil {return _bddg ;};_ebaff ,_bddg :=_gbbda .generateHashMap (_gbbda .CRLs );if _bddg !=nil {return _bddg ;};_gbbda ._gead =_badcc ;_gbbda ._ccgdf =_egaaa ;
_gbbda ._dcaa =_ebaff ;return nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dg .ReadSeeker )(*PdfFont ,error ){_gcdac ,_accc :=_ef .ReadAll (r );if _accc !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_accc );
return nil ,_accc ;};_dega ,_accc :=_aec .TtfParse (_dga .NewReader (_gcdac ));if _accc !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_accc );
return nil ,_accc ;};_gbdcc :=&pdfCIDFontType2 {fontCommon :fontCommon {_fbegd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_df .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dega .Widths )<=0{return nil ,_cab .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_fegbg :=1000.0/float64 (_dega .UnitsPerEm );_ccge :=_fegbg *float64 (_dega .Widths [0]);_bcbfg :=make (map[rune ]int );_gbag :=make (map[_aec .GID ]int );_bbec :=_aec .GID (len (_dega .Widths ));for _ceagec ,_cfabe :=range _dega .Chars {if _cfabe > _bbec -1{continue ;
};_fbceg :=int (_fegbg *float64 (_dega .Widths [_cfabe ]));_bcbfg [_ceagec ]=_fbceg ;_gbag [_cfabe ]=_fbceg ;};_gbdcc ._dced =_bcbfg ;_gbdcc .DW =_df .MakeInteger (int64 (_ccge ));_afbd :=_eecde (_gbag ,uint16 (_bbec ));_gbdcc .W =_df .MakeIndirectObject (_afbd );
_egdcc :=_df .MakeDict ();_egdcc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_df .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_egdcc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_df .MakeString ("\u0041\u0064\u006fb\u0065"));
_egdcc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_df .MakeInteger (0));_gbdcc .CIDSystemInfo =_egdcc ;_fafcf :=&PdfFontDescriptor {FontName :_df .MakeName (_dega .PostScriptName ),Ascent :_df .MakeFloat (_fegbg *float64 (_dega .TypoAscender )),Descent :_df .MakeFloat (_fegbg *float64 (_dega .TypoDescender )),CapHeight :_df .MakeFloat (_fegbg *float64 (_dega .CapHeight )),FontBBox :_df .MakeArrayFromFloats ([]float64 {_fegbg *float64 (_dega .Xmin ),_fegbg *float64 (_dega .Ymin ),_fegbg *float64 (_dega .Xmax ),_fegbg *float64 (_dega .Ymax )}),ItalicAngle :_df .MakeFloat (_dega .ItalicAngle ),MissingWidth :_df .MakeFloat (_ccge )};
_baff ,_accc :=_df .MakeStream (_gcdac ,_df .NewFlateEncoder ());if _accc !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_accc );
return nil ,_accc ;};_baff .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_df .MakeInteger (int64 (len (_gcdac ))));_fafcf .FontFile2 =_baff ;if _dega .Bold {_fafcf .StemV =_df .MakeInteger (120);}else {_fafcf .StemV =_df .MakeInteger (70);
};_bafga :=_fcdbe ;if _dega .IsFixedPitch {_bafga |=_dgcag ;};if _dega .ItalicAngle !=0{_bafga |=_bdfa ;};_fafcf .Flags =_df .MakeInteger (int64 (_bafga ));_gbdcc ._gbgf =_dega .PostScriptName ;_gbdcc ._cada =_fafcf ;_aaegg :=pdfFontType0 {fontCommon :fontCommon {_fbegd :"\u0054\u0079\u0070e\u0030",_gbgf :_dega .PostScriptName },DescendantFont :&PdfFont {_dfffe :_gbdcc },Encoding :_df .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_degc :_dega .NewEncoder ()};
if len (_dega .Chars )> 0{_fbdcb :=make (map[_fea .CharCode ]rune ,len (_dega .Chars ));for _afcf ,_fgef :=range _dega .Chars {_bfcg :=_fea .CharCode (_fgef );if _gded ,_adgbb :=_fbdcb [_bfcg ];!_adgbb ||(_adgbb &&_gded > _afcf ){_fbdcb [_bfcg ]=_afcf ;
};};_aaegg ._eacb =_fea .NewToUnicodeCMap (_fbdcb );};_baadg :=PdfFont {_dfffe :&_aaegg };return &_baadg ,nil ;};func (_edef *PdfField )inherit (_gdfb func (*PdfField )bool )(bool ,error ){_bbbfc :=map[*PdfField ]bool {};_dgce :=false ;_eged :=_edef ;for _eged !=nil {if _ ,_agbf :=_bbbfc [_eged ];
_agbf {return false ,_cab .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_dace :=_gdfb (_eged );if _dace {_dgce =true ;break ;};_bbbfc [_eged ]=true ;_eged =_eged .Parent ;};return _dgce ,nil ;
};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_aeggb *PdfColorspaceCalRGB )ToPdfObject ()_df .PdfObject {_adeg :=&_df .PdfObjectArray {};_adeg .Append (_df .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fcabb :=_df .MakeDict ();if _aeggb .WhitePoint !=nil {_dccgg :=_df .MakeArray (_df .MakeFloat (_aeggb .WhitePoint [0]),_df .MakeFloat (_aeggb .WhitePoint [1]),_df .MakeFloat (_aeggb .WhitePoint [2]));
_fcabb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dccgg );}else {_gc .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _aeggb .BlackPoint !=nil {_gfef :=_df .MakeArray (_df .MakeFloat (_aeggb .BlackPoint [0]),_df .MakeFloat (_aeggb .BlackPoint [1]),_df .MakeFloat (_aeggb .BlackPoint [2]));_fcabb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gfef );
};if _aeggb .Gamma !=nil {_fdafc :=_df .MakeArray (_df .MakeFloat (_aeggb .Gamma [0]),_df .MakeFloat (_aeggb .Gamma [1]),_df .MakeFloat (_aeggb .Gamma [2]));_fcabb .Set ("\u0047\u0061\u006dm\u0061",_fdafc );};if _aeggb .Matrix !=nil {_def :=_df .MakeArray (_df .MakeFloat (_aeggb .Matrix [0]),_df .MakeFloat (_aeggb .Matrix [1]),_df .MakeFloat (_aeggb .Matrix [2]),_df .MakeFloat (_aeggb .Matrix [3]),_df .MakeFloat (_aeggb .Matrix [4]),_df .MakeFloat (_aeggb .Matrix [5]),_df .MakeFloat (_aeggb .Matrix [6]),_df .MakeFloat (_aeggb .Matrix [7]),_df .MakeFloat (_aeggb .Matrix [8]));
_fcabb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_def );};_adeg .Append (_fcabb );if _aeggb ._gacc !=nil {_aeggb ._gacc .PdfObject =_adeg ;return _aeggb ._gacc ;};return _adeg ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gddg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_baaf ,_ffcd :=color .(*PdfColorDeviceGray );if !_ffcd {_gc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_baaf ),float64 (*_baaf ),float64 (*_baaf )),nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgdg *PdfAnnotation3D )ToPdfObject ()_df .PdfObject {_cgdg .PdfAnnotation .ToPdfObject ();_gfce :=_cgdg ._bef ;_bca :=_gfce .PdfObject .(*_df .PdfObjectDictionary );_bca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0033\u0044"));
_bca .SetIfNotNil ("\u0033\u0044\u0044",_cgdg .T3DD );_bca .SetIfNotNil ("\u0033\u0044\u0056",_cgdg .T3DV );_bca .SetIfNotNil ("\u0033\u0044\u0041",_cgdg .T3DA );_bca .SetIfNotNil ("\u0033\u0044\u0049",_cgdg .T3DI );_bca .SetIfNotNil ("\u0033\u0044\u0042",_cgdg .T3DB );
return _gfce ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _df .PdfObject ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_gfafgb *PdfReader )GetOCProperties ()(_df .PdfObject ,error ){_agccd :=_gfafgb ._fegcd ;_febac :=_agccd .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_febac =_df .ResolveReference (_febac );if !_gfafgb ._afcgf {_affd :=_gfafgb .traverseObjectData (_febac );
if _affd !=nil {return nil ,_affd ;};};return _febac ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ggg :=NewPdfAnnotation ();_cac :=&PdfAnnotationLine {};_cac .PdfAnnotation =_ggg ;_cac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggg .SetContext (_cac );return _cac ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_edfe *PdfPattern )IsTiling ()bool {return _edfe .PatternType ==1};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _df .PdfObject ;T3DV _df .PdfObject ;T3DA _df .PdfObject ;T3DI _df .PdfObject ;T3DB _df .PdfObject ;};

// WriteToFile writes the Appender output to file specified by path.
func (_gfbbc *PdfAppender )WriteToFile (outputPath string )error {_bcbf ,_caga :=_fb .Create (outputPath );if _caga !=nil {return _caga ;};defer _bcbf .Close ();return _gfbbc .Write (_bcbf );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdbfa *PdfColorspaceSpecialPattern )ToPdfObject ()_df .PdfObject {if _fdbfa .UnderlyingCS ==nil {return _df .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_bfea :=_df .MakeArray (_df .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bfea .Append (_fdbfa .UnderlyingCS .ToPdfObject ());
if _fdbfa ._dfcfc !=nil {_fdbfa ._dfcfc .PdfObject =_bfea ;return _fdbfa ._dfcfc ;};return _bfea ;};func (_gaad *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_df .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_bbfdb *_df .PdfIndirectObject ;};func _acdbf (_fbcf _df .PdfObject )(*PdfColorspaceDeviceN ,error ){_bgcc :=NewPdfColorspaceDeviceN ();
if _cgfg ,_eegfg :=_fbcf .(*_df .PdfIndirectObject );_eegfg {_bgcc ._bbfdb =_cgfg ;};_fbcf =_df .TraceToDirectObject (_fbcf );_bddc ,_gacfdc :=_fbcf .(*_df .PdfObjectArray );if !_gacfdc {return nil ,_g .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bddc .Len ()!=4&&_bddc .Len ()!=5{return nil ,_g .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fbcf =_bddc .Get (0);
_cgeb ,_gacfdc :=_fbcf .(*_df .PdfObjectName );if !_gacfdc {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cgeb !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_g .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_fbcf =_bddc .Get (1);
_fbcf =_df .TraceToDirectObject (_fbcf );_eefb ,_gacfdc :=_fbcf .(*_df .PdfObjectArray );if !_gacfdc {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_bgcc .ColorantNames =_eefb ;_fbcf =_bddc .Get (2);_fcdfd ,_dbbc :=NewPdfColorspaceFromPdfObject (_fbcf );if _dbbc !=nil {return nil ,_dbbc ;};_bgcc .AlternateSpace =_fcdfd ;_afdd ,_dbbc :=_ebcf (_bddc .Get (3));if _dbbc !=nil {return nil ,_dbbc ;};_bgcc .TintTransform =_afdd ;
if _bddc .Len ()==5{_ccfa ,_cagfb :=_eaddc (_bddc .Get (4));if _cagfb !=nil {return nil ,_cagfb ;};_bgcc .Attributes =_ccfa ;};return _bgcc ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gebbc *PdfReader )GetOutlines ()(*Outline ,error ){if _gebbc ==nil {return nil ,_cab .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fcdg :=_gebbc .GetOutlineTree ();if _fcdg ==nil {return nil ,_cab .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _gfceg func (_abcdf *PdfOutlineTreeNode ,_fggaa *[]*OutlineItem );_gfceg =func (_fedbe *PdfOutlineTreeNode ,_acaad *[]*OutlineItem ){if _fedbe ==nil {return ;};if _fedbe ._dedbf ==nil {_gc .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _efbf *OutlineItem ;if _efba ,_fbeac :=_fedbe ._dedbf .(*PdfOutlineItem );_fbeac {_efbfe :=_efba .Dest ;if (_efbfe ==nil ||_df .IsNullObject (_efbfe ))&&_efba .A !=nil {if _gdcgg ,_adfgc :=_df .GetDict (_efba .A );_adfgc {if _dcded ,_fbebe :=_df .GetArray (_gdcgg .Get ("\u0044"));
_fbebe {_efbfe =_dcded ;}else {_gfbdb ,_ggfgg :=_df .GetString (_gdcgg .Get ("\u0044"));if !_ggfgg {return ;};_egefa ,_ggfgg :=_gebbc ._fegcd .Get ("\u004e\u0061\u006de\u0073").(*_df .PdfObjectReference );if !_ggfgg {return ;};_dcdegb ,_bdgb :=_gebbc ._ecafc .LookupByReference (*_egefa );
if _bdgb !=nil {_gc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_bdgb .Error ());
return ;};_fbfef ,_ggfgg :=_dcdegb .(*_df .PdfIndirectObject );if !_ggfgg {return ;};_acbcc :=map[_df .PdfObject ]struct{}{};_bdgb =_gebbc .buildNameNodes (_fbfef ,_acbcc );if _bdgb !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_bdgb .Error ());
return ;};for _adggf :=range _acbcc {_bddag ,_fbge :=_df .GetDict (_adggf );if !_fbge {continue ;};_bacf ,_fbge :=_df .GetArray (_bddag .Get ("\u004e\u0061\u006de\u0073"));if !_fbge {continue ;};for _affec ,_ddfgf :=range _bacf .Elements (){switch _ddfgf .(type ){case *_df .PdfObjectString :if _ddfgf .String ()==_gfbdb .String (){if _dgbdb :=_bacf .Get (_affec +1);
_dgbdb !=nil {if _agdab ,_cabfbd :=_df .GetDict (_dgbdb );_cabfbd {_efbfe =_agdab .Get ("\u0044");break ;};};};};};};};};};var _bcdd OutlineDest ;if _efbfe !=nil &&!_df .IsNullObject (_efbfe ){if _daad ,_eegd :=_bbcdc (_efbfe ,_gebbc );_eegd ==nil {_bcdd =*_daad ;
}else {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_efbfe ,_eegd );
};};_efbf =NewOutlineItem (_efba .Title .Decoded (),_bcdd );*_acaad =append (*_acaad ,_efbf );if _efba .Next !=nil {_gfceg (_efba .Next ,_acaad );};};if _fedbe .First !=nil {if _efbf !=nil {_acaad =&_efbf .Entries ;};_gfceg (_fedbe .First ,_acaad );};};
_aecag :=NewOutline ();_gfceg (_fcdg ,&_aecag .Entries );return _aecag ,nil ;};func _dfbbc (_aeecab _df .PdfObject )(*PdfShading ,error ){_acbaec :=&PdfShading {};var _fdfba *_df .PdfObjectDictionary ;if _acecf ,_dacg :=_df .GetIndirect (_aeecab );_dacg {_acbaec ._aedee =_acecf ;
_aecg ,_afgec :=_acecf .PdfObject .(*_df .PdfObjectDictionary );if !_afgec {_gc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_df .ErrTypeError ;
};_fdfba =_aecg ;}else if _edcg ,_cddaa :=_df .GetStream (_aeecab );_cddaa {_acbaec ._aedee =_edcg ;_fdfba =_edcg .PdfObjectDictionary ;}else if _dgea ,_edbbc :=_df .GetDict (_aeecab );_edbbc {_acbaec ._aedee =_dgea ;_fdfba =_dgea ;}else {_gc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_aeecab );
return nil ,_df .ErrTypeError ;};if _fdfba ==nil {_gc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cab .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_aeecab =_fdfba .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _aeecab ==nil {_gc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aeecab =_df .TraceToDirectObject (_aeecab );_gedda ,_bedfa :=_aeecab .(*_df .PdfObjectInteger );if !_bedfa {_gc .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aeecab );
return nil ,_df .ErrTypeError ;};if *_gedda < 1||*_gedda > 7{_gc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gedda );
return nil ,_df .ErrTypeError ;};_acbaec .ShadingType =_gedda ;_aeecab =_fdfba .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _aeecab ==nil {_gc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbbee ,_bdbe :=NewPdfColorspaceFromPdfObject (_aeecab );if _bdbe !=nil {_gc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bdbe );
return nil ,_bdbe ;};_acbaec .ColorSpace =_bbbee ;_aeecab =_fdfba .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _aeecab !=nil {_aeecab =_df .TraceToDirectObject (_aeecab );_eaafb ,_fgdb :=_aeecab .(*_df .PdfObjectArray );if !_fgdb {_gc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aeecab );
return nil ,_df .ErrTypeError ;};_acbaec .Background =_eaafb ;};_aeecab =_fdfba .Get ("\u0042\u0042\u006f\u0078");if _aeecab !=nil {_aeecab =_df .TraceToDirectObject (_aeecab );_debg ,_dbagc :=_aeecab .(*_df .PdfObjectArray );if !_dbagc {_gc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aeecab );
return nil ,_df .ErrTypeError ;};_bcgcb ,_abgdc :=NewPdfRectangle (*_debg );if _abgdc !=nil {_gc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_abgdc );return nil ,_abgdc ;};_acbaec .BBox =_bcgcb ;};_aeecab =_fdfba .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _aeecab !=nil {_aeecab =_df .TraceToDirectObject (_aeecab );_deged ,_cffdfc :=_aeecab .(*_df .PdfObjectBool );if !_cffdfc {_gc .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aeecab );
return nil ,_df .ErrTypeError ;};_acbaec .AntiAlias =_deged ;};switch *_gedda {case 1:_dbeda ,_dcefb :=_edacf (_fdfba );if _dcefb !=nil {return nil ,_dcefb ;};_dbeda .PdfShading =_acbaec ;_acbaec ._aceab =_dbeda ;return _acbaec ,nil ;case 2:_eaegc ,_cadfg :=_abeae (_fdfba );
if _cadfg !=nil {return nil ,_cadfg ;};_eaegc .PdfShading =_acbaec ;_acbaec ._aceab =_eaegc ;return _acbaec ,nil ;case 3:_efafa ,_cdbede :=_bgbcd (_fdfba );if _cdbede !=nil {return nil ,_cdbede ;};_efafa .PdfShading =_acbaec ;_acbaec ._aceab =_efafa ;return _acbaec ,nil ;
case 4:_dcebg ,_dffefb :=_begc (_fdfba );if _dffefb !=nil {return nil ,_dffefb ;};_dcebg .PdfShading =_acbaec ;_acbaec ._aceab =_dcebg ;return _acbaec ,nil ;case 5:_dfdaf ,_debgd :=_ebgag (_fdfba );if _debgd !=nil {return nil ,_debgd ;};_dfdaf .PdfShading =_acbaec ;
_acbaec ._aceab =_dfdaf ;return _acbaec ,nil ;case 6:_aacf ,_cgab :=_fbaa (_fdfba );if _cgab !=nil {return nil ,_cgab ;};_aacf .PdfShading =_acbaec ;_acbaec ._aceab =_aacf ;return _acbaec ,nil ;case 7:_dcaab ,_ecaba :=_gfgcd (_fdfba );if _ecaba !=nil {return nil ,_ecaba ;
};_dcaab .PdfShading =_acbaec ;_acbaec ._aceab =_dcaab ;return _acbaec ,nil ;};return nil ,_cab .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gd :=NewPdfAction ();_cdf :=&PdfActionResetForm {};_cdf .PdfAction =_gd ;_gd .SetContext (_cdf );return _cdf ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_acffc *PdfPageResources )GetContainingPdfObject ()_df .PdfObject {return _acffc ._fdbaec };

// GetCustomInfo returns a custom info value for the specified name.
func (_dddeg *PdfInfo )GetCustomInfo (name string )*_df .PdfObjectString {var _dbce *_df .PdfObjectString ;if _dddeg ._ecbda ==nil {return _dbce ;};if _fadd ,_acc :=_dddeg ._ecbda .Get (*_df .MakeName (name )).(*_df .PdfObjectString );_acc {_dbce =_fadd ;
};return _dbce ;};

// SetDate sets the `M` field of the signature.
func (_bbged *PdfSignature )SetDate (date _cb .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bbged .M =_df .MakeString (date .Format (format ));
};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_eggc *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_bgdg *PdfAnnotationFreeText )ToPdfObject ()_df .PdfObject {_bgdg .PdfAnnotation .ToPdfObject ();_daec :=_bgdg ._bef ;_fbf :=_daec .PdfObject .(*_df .PdfObjectDictionary );_bgdg .PdfAnnotationMarkup .appendToPdfDictionary (_fbf );_fbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fbf .SetIfNotNil ("\u0044\u0041",_bgdg .DA );_fbf .SetIfNotNil ("\u0051",_bgdg .Q );_fbf .SetIfNotNil ("\u0052\u0043",_bgdg .RC );_fbf .SetIfNotNil ("\u0044\u0053",_bgdg .DS );_fbf .SetIfNotNil ("\u0043\u004c",_bgdg .CL );_fbf .SetIfNotNil ("\u0049\u0054",_bgdg .IT );
_fbf .SetIfNotNil ("\u0042\u0045",_bgdg .BE );_fbf .SetIfNotNil ("\u0052\u0044",_bgdg .RD );_fbf .SetIfNotNil ("\u0042\u0053",_bgdg .BS );_fbf .SetIfNotNil ("\u004c\u0045",_bgdg .LE );return _daec ;};func (_cbcff *PdfWriter )setHashIDs (_eafdea _ce .Hash )error {_eebfg :=_eafdea .Sum (nil );
if _cbcff ._cecfgg ==""{_cbcff ._cecfgg =_e .EncodeToString (_eebfg [:8]);};_cbcff .setDocumentIDs (_cbcff ._cecfgg ,_e .EncodeToString (_eebfg [8:]));return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_dedbf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _df .PdfObject ;Name _df .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dee *PdfActionSubmitForm )ToPdfObject ()_df .PdfObject {_dee .PdfAction .ToPdfObject ();_gab :=_dee ._de ;_efe :=_gab .PdfObject .(*_df .PdfObjectDictionary );_efe .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeSubmitForm )));if _dee .F !=nil {_efe .Set ("\u0046",_dee .F .ToPdfObject ());
};_efe .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dee .Fields );_efe .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dee .Flags );return _gab ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_ebdab *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_cddad :=_ebdab .fill (provider ,appGen );if _cddad !=nil {return _cddad ;};if _ ,_efbd :=provider .(FieldImageProvider );_efbd {_cddad =_ebdab .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _cddad ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cgdeg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cgdeg .Mask ()&^fl .Mask ())};

// K returns the value of the key component of the color.
func (_fdbf *PdfColorDeviceCMYK )K ()float64 {return _fdbf [3]};func (_efacb *PdfWriter )addObject (_eegb _df .PdfObject )bool {_dgdfb :=_efacb .hasObject (_eegb );if !_dgdfb {_acead :=_df .ResolveReferencesDeep (_eegb ,_efacb ._bdfae );if _acead !=nil {_gc .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_acead );
};_efacb ._ccdbg =append (_efacb ._ccdbg ,_eegb );_efacb ._efced [_eegb ]=struct{}{};return true ;};return false ;};func (_ccgb *PdfSignature )extractChainFromPKCS7 ()([]*_ed .Certificate ,error ){_effaf ,_ddfgb :=_dbg .Parse (_ccgb .Contents .Bytes ());
if _ddfgb !=nil {return nil ,_ddfgb ;};return _effaf .Certificates ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_ggbdc *_df .PdfObjectDictionary ;_gacc *_df .PdfIndirectObject ;};var ImageHandling ImageHandler =DefaultImageHandler {};func (_ggbgf *PdfWriter )adjustXRefAffectedVersion (_ffegca bool ){if _ffegca &&_ggbgf ._ggaaa .Major ==1&&_ggbgf ._ggaaa .Minor < 5{_ggbgf ._ggaaa .Minor =5;
};};func (_dagdg *PdfReader )flattenFieldsWithOpts (_ecacf bool ,_gegfb FieldAppearanceGenerator ,_bgcg *FieldFlattenOpts )error {if _bgcg ==nil {_bgcg =&FieldFlattenOpts {};};var _dcffa bool ;_aagbc :=map[*PdfAnnotation ]bool {};{var _ebggb []*PdfField ;
_gdbaa :=_dagdg .AcroForm ;if _gdbaa !=nil {if _bgcg .FilterFunc !=nil {_ebggb =_gdbaa .filteredFields (_bgcg .FilterFunc ,true );_dcffa =_gdbaa .Fields !=nil &&len (*_gdbaa .Fields )> 0;}else {_ebggb =_gdbaa .AllFields ();};};for _ ,_abbcg :=range _ebggb {for _ ,_dbfed :=range _abbcg .Annotations {_aagbc [_dbfed .PdfAnnotation ]=_abbcg .V !=nil ;
if _gegfb !=nil {_fafc ,_ddbba :=_gegfb .GenerateAppearanceDict (_gdbaa ,_abbcg ,_dbfed );if _ddbba !=nil {return _ddbba ;};_dbfed .AP =_fafc ;};};};};if _ecacf {for _ ,_geff :=range _dagdg .PageList {_dffd ,_cbgcg :=_geff .GetAnnotations ();if _cbgcg !=nil {return _cbgcg ;
};for _ ,_gdbfa :=range _dffd {_aagbc [_gdbfa ]=true ;};};};for _ ,_aedd :=range _dagdg .PageList {var _acfg []*PdfAnnotation ;if _gegfb !=nil {if _ffad :=_gegfb .WrapContentStream (_aedd );_ffad !=nil {return _ffad ;};};_adbe ,_ebfgf :=_aedd .GetAnnotations ();
if _ebfgf !=nil {return _ebfgf ;};for _ ,_gdbed :=range _adbe {_dbed ,_dffa :=_aagbc [_gdbed ];if !_dffa &&_bgcg .AnnotFilterFunc !=nil {if _ ,_dfbb :=_gdbed .GetContext ().(*PdfAnnotationWidget );!_dfbb {_dffa =_bgcg .AnnotFilterFunc (_gdbed );};};if !_dffa {_acfg =append (_acfg ,_gdbed );
continue ;};switch _gdbed .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_dbgbd ,_dcfba ,_eedcc :=_bcfa (_gdbed );if _eedcc !=nil {if !_dbed {_gc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_eedcc );
continue ;};if _dbgbd ==nil {continue ;};_cbfgcb :=_aedd .Resources .GenerateXObjectName ();_aedd .Resources .SetXObjectFormByName (_cbfgcb ,_dbgbd );_dddec ,_eedcc :=_febd (_dbgbd );if _eedcc !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_eedcc );
}else {_bcbbca :=_ec .IdentityMatrix ();_bcbbca =_bcbbca .Translate (-_dddec .Llx ,-_dddec .Lly );_bcbbca =_bcbbca .Scale (_dcfba .Width ()/_dddec .Width (),_dcfba .Height ()/_dddec .Height ());_dcfba .Transform (_bcbbca );};_dffc :=_bf .Min (_dcfba .Llx ,_dcfba .Urx );
_aefec :=_bf .Min (_dcfba .Lly ,_dcfba .Ury );var _ggaad []string ;_ggaad =append (_ggaad ,"\u0071");_ggaad =append (_ggaad ,_g .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_dffc ,_aefec ));
_ggaad =append (_ggaad ,_g .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cbfgcb .String ()));_ggaad =append (_ggaad ,"\u0051");_efcb :=_fg .Join (_ggaad ,"\u000a");_eedcc =_aedd .AppendContentStream (_efcb );if _eedcc !=nil {return _eedcc ;};if _dbgbd .Resources !=nil {_gfge ,_dffaf :=_df .GetDict (_dbgbd .Resources .Font );
if _dffaf {for _ ,_baea :=range _gfge .Keys (){if !_aedd .Resources .HasFontByName (_baea ){_aedd .Resources .SetFontByName (_baea ,_gfge .Get (_baea ));};};};};};if len (_acfg )> 0{_aedd ._fgbc =_acfg ;}else {_aedd ._fgbc =[]*PdfAnnotation {};};};if !_dcffa {_dagdg .AcroForm =nil ;
};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_daag *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gfgc :=_ac .NewReader (img .getBase ());_eeddgg :=_fbg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_edcff :=_ac .NewWriter (_eeddgg );
_fcec :=_bf .Pow (2,float64 (img .BitsPerComponent ))-1;_fedca :=make ([]uint32 ,3);var (_gbad error ;_bgfd ,_bdgd ,_afgf ,_dfad ,_eddgaa ,_dgaec float64 ;);for {_gbad =_gfgc .ReadSamples (_fedca );if _gbad ==_dg .EOF {break ;}else if _gbad !=nil {return img ,_gbad ;
};_bgfd =float64 (_fedca [0])/_fcec ;_bdgd =float64 (_fedca [1])/_fcec ;_afgf =float64 (_fedca [2])/_fcec ;_dfad =_daag .Matrix [0]*_bf .Pow (_bgfd ,_daag .Gamma [0])+_daag .Matrix [3]*_bf .Pow (_bdgd ,_daag .Gamma [1])+_daag .Matrix [6]*_bf .Pow (_afgf ,_daag .Gamma [2]);
_eddgaa =_daag .Matrix [1]*_bf .Pow (_bgfd ,_daag .Gamma [0])+_daag .Matrix [4]*_bf .Pow (_bdgd ,_daag .Gamma [1])+_daag .Matrix [7]*_bf .Pow (_afgf ,_daag .Gamma [2]);_dgaec =_daag .Matrix [2]*_bf .Pow (_bgfd ,_daag .Gamma [0])+_daag .Matrix [5]*_bf .Pow (_bdgd ,_daag .Gamma [1])+_daag .Matrix [8]*_bf .Pow (_afgf ,_daag .Gamma [2]);
_bgfd =3.240479*_dfad +-1.537150*_eddgaa +-0.498535*_dgaec ;_bdgd =-0.969256*_dfad +1.875992*_eddgaa +0.041556*_dgaec ;_afgf =0.055648*_dfad +-0.204043*_eddgaa +1.057311*_dgaec ;_bgfd =_bf .Min (_bf .Max (_bgfd ,0),1.0);_bdgd =_bf .Min (_bf .Max (_bdgd ,0),1.0);
_afgf =_bf .Min (_bf .Max (_afgf ,0),1.0);_fedca [0]=uint32 (_bgfd *_fcec );_fedca [1]=uint32 (_bdgd *_fcec );_fedca [2]=uint32 (_afgf *_fcec );if _gbad =_edcff .WriteSamples (_fedca );_gbad !=nil {return img ,_gbad ;};};return _cgbga (&_eeddgg ),nil ;
};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _df .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_df .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_abgdd ,_daegd :=encoder .EncodeBytes (img .Data );
if _daegd !=nil {_gc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_daegd );return nil ,_daegd ;};_agdbe :=NewXObjectImage ();_effaea :=img .Width ;_adgef :=img .Height ;
_agdbe .Width =&_effaea ;_agdbe .Height =&_adgef ;_feaeg :=img .BitsPerComponent ;_agdbe .BitsPerComponent =&_feaeg ;_agdbe .Filter =encoder ;_agdbe .Stream =_abgdd ;if cs ==nil {if img .ColorComponents ==1{_agdbe .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_agdbe .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_agdbe .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cab .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_agdbe .ColorSpace =cs ;};if len (img ._gced )!=0{_gfacf :=NewXObjectImage ();_gfacf .Filter =encoder ;_ecfdf ,_bdgf :=encoder .EncodeBytes (img ._gced );if _bdgf !=nil {_gc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bdgf );
return nil ,_bdgf ;};_gfacf .Stream =_ecfdf ;_gfacf .BitsPerComponent =_agdbe .BitsPerComponent ;_gfacf .Width =&img .Width ;_gfacf .Height =&img .Height ;_gfacf .ColorSpace =NewPdfColorspaceDeviceGray ();_agdbe .SMask =_gfacf .ToPdfObject ();}else {_agdbe .SMask =xobjIn .SMask ;
_agdbe .ImageMask =xobjIn .ImageMask ;if _agdbe .ColorSpace .GetNumComponents ()==1{_abadc (_agdbe );};};return _agdbe ,nil ;};

// A returns the value of the A component of the color.
func (_aceg *PdfColorLab )A ()float64 {return _aceg [1]};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _df .PdfObject )(*PdfInfo ,error ){var _eabef PdfInfo ;_gccf ,_bbfae :=obj .(*_df .PdfObjectDictionary );if !_bbfae {return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_dbcba :=range _gccf .Keys (){switch _dbcba {case "\u0054\u0069\u0074l\u0065":_eabef .Title ,_ =_df .GetString (_gccf .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_eabef .Author ,_ =_df .GetString (_gccf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_eabef .Subject ,_ =_df .GetString (_gccf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_eabef .Keywords ,_ =_df .GetString (_gccf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_eabef .Creator ,_ =_df .GetString (_gccf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_eabef .Producer ,_ =_df .GetString (_gccf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_eabef .Trapped ,_ =_df .GetName (_gccf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _gbdg ,_bbbea :=_df .GetString (_gccf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_bbbea &&_gbdg .String ()!=""{_gafe ,_gfaf :=NewPdfDate (_gbdg .String ());if _gfaf !=nil {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_gfaf );
};_eabef .CreationDate =&_gafe ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _bceb ,_bbfde :=_df .GetString (_gccf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_bbfde &&_bceb .String ()!=""{_badce ,_eedf :=NewPdfDate (_bceb .String ());if _eedf !=nil {return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_eedf );
};_eabef .ModifiedDate =&_badce ;};default:_gage ,_ :=_df .GetString (_gccf .Get (_dbcba ));if _eabef ._ecbda ==nil {_eabef ._ecbda =_df .MakeDict ();};_eabef ._ecbda .Set (_dbcba ,_gage );};};return &_eabef ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_afaa *PdfPageResources )SetPatternByName (keyName _df .PdfObjectName ,pattern _df .PdfObject )error {if _afaa .Pattern ==nil {_afaa .Pattern =_df .MakeDict ();};_bcbeeg ,_aaecc :=_df .GetDict (_afaa .Pattern );if !_aaecc {return _df .ErrTypeError ;
};_bcbeeg .Set (keyName ,pattern );return nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_caef :=NewPdfOutline ();_caef ._dedbf =&_caef ;return _caef };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_geebcc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _geebcc .Alternate ==nil {if _geebcc .N ==1{_abeg :=NewPdfColorspaceDeviceGray ();return _abeg .ColorFromFloats (vals );}else if _geebcc .N ==3{_cfedc :=NewPdfColorspaceDeviceRGB ();
return _cfedc .ColorFromFloats (vals );}else if _geebcc .N ==4{_agecd :=NewPdfColorspaceDeviceCMYK ();return _agecd .ColorFromFloats (vals );}else {return nil ,_cab .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _geebcc .Alternate .ColorFromFloats (vals );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_bcgbg *PdfOutlineItem )GetContainingPdfObject ()_df .PdfObject {return _bcgbg ._dfee };func (_gcad *LTV )validateSig (_fggafc *PdfSignature )error {if _fggafc ==nil ||_fggafc .Contents ==nil ||len (_fggafc .Contents .Bytes ())==0{return _g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fggafc );
};return nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_acbe *BorderStyle )GetPdfName ()string {switch *_acbe {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_df .PdfObjectStream )(*XObjectImage ,error ){_fcega :=&XObjectImage {};_fcega ._bbbgb =stream ;_dfgac :=*(stream .PdfObjectDictionary );_ecga ,_ddfadf :=_df .NewEncoderFromStream (stream );if _ddfadf !=nil {return nil ,_ddfadf ;
};_fcega .Filter =_ecga ;if _ffeff :=_df .TraceToDirectObject (_dfgac .Get ("\u0057\u0069\u0064t\u0068"));_ffeff !=nil {_ddcdb ,_dgacab :=_ffeff .(*_df .PdfObjectInteger );if !_dgacab {return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_gdafa :=int64 (*_ddcdb );_fcega .Width =&_gdafa ;}else {return nil ,_cab .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _afga :=_df .TraceToDirectObject (_dfgac .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_afga !=nil {_gdgfb ,_dcfad :=_afga .(*_df .PdfObjectInteger );if !_dcfad {return nil ,_cab .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ddcbg :=int64 (*_gdgfb );
_fcega .Height =&_ddcbg ;}else {return nil ,_cab .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fcbac :=_df .TraceToDirectObject (_dfgac .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_fcbac !=nil {_fcedd ,_dcae :=NewPdfColorspaceFromPdfObject (_fcbac );if _dcae !=nil {return nil ,_dcae ;};_fcega .ColorSpace =_fcedd ;}else {_gc .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_fcega .ColorSpace =NewPdfColorspaceDeviceGray ();};if _degcde :=_df .TraceToDirectObject (_dfgac .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_degcde !=nil {_fecdb ,_bfgd :=_degcde .(*_df .PdfObjectInteger );
if !_bfgd {return nil ,_cab .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_adffd :=int64 (*_fecdb );_fcega .BitsPerComponent =&_adffd ;};_fcega .Intent =_dfgac .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_fcega .ImageMask =_dfgac .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fcega .Mask =_dfgac .Get ("\u004d\u0061\u0073\u006b");_fcega .Decode =_dfgac .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fcega .Interpolate =_dfgac .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_fcega .Alternatives =_dfgac .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fcega .SMask =_dfgac .Get ("\u0053\u004d\u0061s\u006b");_fcega .SMaskInData =_dfgac .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_fcega .Matte =_dfgac .Get ("\u004d\u0061\u0074t\u0065");_fcega .Name =_dfgac .Get ("\u004e\u0061\u006d\u0065");_fcega .StructParent =_dfgac .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fcega .ID =_dfgac .Get ("\u0049\u0044");
_fcega .OPI =_dfgac .Get ("\u004f\u0050\u0049");_fcega .Metadata =_dfgac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fcega .OC =_dfgac .Get ("\u004f\u0043");_fcega .Stream =stream .Stream ;return _fcega ,nil ;};func (_cbda *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};
func (_gfbeb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gfbeb ._cada ==nil &&_gfbeb .DescendantFont !=nil {return _gfbeb .DescendantFont .FontDescriptor ();};return _gfbeb ._cada ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fdgf pdfFontType0 )GetCharMetrics (code _cfe .CharCode )(_aec .CharMetrics ,bool ){if _fdgf .DescendantFont ==nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_fdgf );
return _aec .CharMetrics {},false ;};return _fdgf .DescendantFont .GetCharMetrics (code );};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _df .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _df .PdfObject ;Contents _df .PdfObject ;
Rotate *int64 ;Group _df .PdfObject ;Thumb _df .PdfObject ;B _df .PdfObject ;Dur _df .PdfObject ;Trans _df .PdfObject ;AA _df .PdfObject ;Metadata _df .PdfObject ;PieceInfo _df .PdfObject ;StructParents _df .PdfObject ;ID _df .PdfObject ;PZ _df .PdfObject ;
SeparationInfo _df .PdfObject ;Tabs _df .PdfObject ;TemplateInstantiated _df .PdfObject ;PresSteps _df .PdfObject ;UserUnit _df .PdfObject ;VP _df .PdfObject ;Annots _df .PdfObject ;_fgbc []*PdfAnnotation ;_aaee *_df .PdfObjectDictionary ;_dgbagf *_df .PdfIndirectObject ;
_fadfc *PdfReader ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dcag *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// String implements interface PdfObject.
func (_ecg *PdfAction )String ()string {_bae ,_cbb :=_ecg .ToPdfObject ().(*_df .PdfIndirectObject );if _cbb {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ecg ._eg ,_bae .PdfObject .String ());};return "";};func (_bgda *PdfFilespec )getDict ()*_df .PdfObjectDictionary {if _febf ,_bbba :=_bgda ._dfbd .(*_df .PdfIndirectObject );
_bbba {_gfca ,_eeca :=_febf .PdfObject .(*_df .PdfObjectDictionary );if !_eeca {return nil ;};return _gfca ;}else if _eddgae ,_bgfb :=_bgda ._dfbd .(*_df .PdfObjectDictionary );_bgfb {return _eddgae ;}else {_gc .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_bgda ._dfbd );
return nil ;};};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gcfd :=NewPdfAnnotation ();_cefa :=&PdfAnnotationMovie {};_cefa .PdfAnnotation =_gcfd ;_gcfd .SetContext (_cefa );return _cefa ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dgddg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_affee :=RC4_128bit ;if options !=nil {_affee =options .Algorithm ;};_fdbaa :=_gcf .PermOwner ;if options !=nil {_fdbaa =options .Permissions ;};var _aeecc _ad .Filter ;
switch _affee {case RC4_128bit :_aeecc =_ad .NewFilterV2 (16);case AES_128bit :_aeecc =_ad .NewFilterAESV2 ();case AES_256bit :_aeecc =_ad .NewFilterAESV3 ();default:return _g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_ffab ,_bgcca ,_bcfgb :=_df .PdfCryptNewEncrypt (_aeecc ,userPass ,ownerPass ,_fdbaa );if _bcfgb !=nil {return _bcfgb ;};_dgddg ._gfda =_ffab ;if _bgcca .Major !=0{_dgddg .SetVersion (_bgcca .Major ,_bgcca .Minor );};_dgddg ._fdaff =_bgcca .Encrypt ;
_dgddg ._cecfgg ,_dgddg ._dfabe =_bgcca .ID0 ,_bgcca .ID1 ;_fddgcd :=_df .MakeIndirectObject (_bgcca .Encrypt );_dgddg ._dfeeb =_fddgcd ;_dgddg .addObject (_fddgcd );return nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fddg *PdfAcroForm ,_ggage *PdfField ,_bfaf *PdfAnnotationWidget )(*_df .PdfObjectDictionary ,error );};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _df .PdfObject ;B _df .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bceed *PdfColorspaceDeviceRGB )ToPdfObject ()_df .PdfObject {return _df .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gadea *PdfOutline )ToPdfObject ()_df .PdfObject {_geag :=_gadea ._affae ;_fcfcd :=_geag .PdfObject .(*_df .PdfObjectDictionary );_fcfcd .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _gadea .First !=nil {_fcfcd .Set ("\u0046\u0069\u0072s\u0074",_gadea .First .ToPdfObject ());
};if _gadea .Last !=nil {_fcfcd .Set ("\u004c\u0061\u0073\u0074",_gadea .Last .GetContext ().GetContainingPdfObject ());};if _gadea .Parent !=nil {_fcfcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gadea .Parent .GetContext ().GetContainingPdfObject ());
};if _gadea .Count !=nil {_fcfcd .Set ("\u0043\u006f\u0075n\u0074",_df .MakeInteger (*_gadea .Count ));};return _geag ;};

// ToPdfObject implements interface PdfModel.
func (_bga *PdfActionSound )ToPdfObject ()_df .PdfObject {_bga .PdfAction .ToPdfObject ();_gde :=_bga ._de ;_aad :=_gde .PdfObject .(*_df .PdfObjectDictionary );_aad .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeSound )));_aad .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bga .Sound );
_aad .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bga .Volume );_aad .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bga .Synchronous );_aad .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bga .Repeat );_aad .SetIfNotNil ("\u004d\u0069\u0078",_bga .Mix );
return _gde ;};

// GetAction returns the PDF action for the annotation link.
func (_aaaf *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _aaaf ._eagd !=nil {return _aaaf ._eagd ,nil ;};if _aaaf .A ==nil {return nil ,nil ;};if _aaaf ._fdd ==nil {return nil ,nil ;};_gaag ,_adba :=_aaaf ._fdd .loadAction (_aaaf .A );if _adba !=nil {return nil ,_adba ;
};_aaaf ._eagd =_gaag ;return _aaaf ._eagd ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_edfcf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dg .ReadSeeker )(*PdfFont ,error ){const _aebdb =_cfe .CharCode (32);const _edada =_cfe .CharCode (255);_fbafc ,_cgfa :=_ef .ReadAll (r );if _cgfa !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cgfa );
return nil ,_cgfa ;};_bdbgg ,_cgfa :=_aec .TtfParse (_dga .NewReader (_fbafc ));if _cgfa !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cgfa );
return nil ,_cgfa ;};_aede :=&pdfFontSimple {_abaag :make (map[_cfe .CharCode ]float64 ),fontCommon :fontCommon {_fbegd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_aede ._agga =_cfe .NewWinAnsiEncoder ();_aede ._gbgf =_bdbgg .PostScriptName ;
_aede .FirstChar =_df .MakeInteger (int64 (_aebdb ));_aede .LastChar =_df .MakeInteger (int64 (_edada ));_bddd :=1000.0/float64 (_bdbgg .UnitsPerEm );if len (_bdbgg .Widths )<=0{return nil ,_cab .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfdgff :=_bddd *float64 (_bdbgg .Widths [0]);_affa :=make ([]float64 ,0,_edada -_aebdb +1);for _gcbe :=_aebdb ;_gcbe <=_edada ;_gcbe ++{_effe ,_fceae :=_aede .Encoder ().CharcodeToRune (_gcbe );if !_fceae {_gc .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_gcbe );
_affa =append (_affa ,_bfdgff );continue ;};_gfcdd ,_cgbef :=_bdbgg .Chars [_effe ];if !_cgbef {_gc .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_affa =append (_affa ,_bfdgff );continue ;
};_aeagd :=_bddd *float64 (_bdbgg .Widths [_gfcdd ]);_affa =append (_affa ,_aeagd );};_aede .Widths =_df .MakeIndirectObject (_df .MakeArrayFromFloats (_affa ));if len (_affa )< int (_edada -_aebdb +1){_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_affa ),255-32+1);
return nil ,_df .ErrRangeError ;};for _gebab :=_aebdb ;_gebab <=_edada ;_gebab ++{_aede ._abaag [_gebab ]=_affa [_gebab -_aebdb ];};_aede .Encoding =_df .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_bcbgb :=&PdfFontDescriptor {};
_bcbgb .FontName =_df .MakeName (_bdbgg .PostScriptName );_bcbgb .Ascent =_df .MakeFloat (_bddd *float64 (_bdbgg .TypoAscender ));_bcbgb .Descent =_df .MakeFloat (_bddd *float64 (_bdbgg .TypoDescender ));_bcbgb .CapHeight =_df .MakeFloat (_bddd *float64 (_bdbgg .CapHeight ));
_bcbgb .FontBBox =_df .MakeArrayFromFloats ([]float64 {_bddd *float64 (_bdbgg .Xmin ),_bddd *float64 (_bdbgg .Ymin ),_bddd *float64 (_bdbgg .Xmax ),_bddd *float64 (_bdbgg .Ymax )});_bcbgb .ItalicAngle =_df .MakeFloat (_bdbgg .ItalicAngle );_bcbgb .MissingWidth =_df .MakeFloat (_bddd *float64 (_bdbgg .Widths [0]));
_bfaa ,_cgfa :=_df .MakeStream (_fbafc ,_df .NewFlateEncoder ());if _cgfa !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cgfa );
return nil ,_cgfa ;};_bfaa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_df .MakeInteger (int64 (len (_fbafc ))));_bcbgb .FontFile2 =_bfaa ;if _bdbgg .Bold {_bcbgb .StemV =_df .MakeInteger (120);}else {_bcbgb .StemV =_df .MakeInteger (70);
};_bfgca :=_agdf ;if _bdbgg .IsFixedPitch {_bfgca |=_dgcag ;};if _bdbgg .ItalicAngle !=0{_bfgca |=_bdfa ;};_bcbgb .Flags =_df .MakeInteger (int64 (_bfgca ));_aede ._cada =_bcbgb ;_bdecga :=&PdfFont {_dfffe :_aede };return _bdecga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbae *PdfAnnotationProjection )ToPdfObject ()_df .PdfObject {_fbae .PdfAnnotation .ToPdfObject ();_gacg :=_fbae ._bef ;_gebgg :=_gacg .PdfObject .(*_df .PdfObjectDictionary );_fbae .PdfAnnotationMarkup .appendToPdfDictionary (_gebgg );return _gacg ;
};func (_dfac *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bcbdc :=_dfac .Parent ;for _bcbdc !=nil {_ggef ,_bgba :=_df .GetDict (_bcbdc );if !_bgba {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cab .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _acge :=_ggef .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_acge !=nil {_fefag ,_cbffab :=_df .GetDict (_acge );
if !_cbffab {return nil ,_cab .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_dfeeg ,_aceeg :=NewPdfPageResourcesFromDict (_fefag );if _aceeg !=nil {return nil ,_aceeg ;};return _dfeeg ,nil ;
};_bcbdc =_ggef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func _afad ()string {return _gc .Version };func _gbafee (_dfgbc []*_df .PdfObjectStream )*_df .PdfObjectArray {if len (_dfgbc )==0{return nil ;};_bbgefd :=make ([]_df .PdfObject ,0,len (_dfgbc ));
for _ ,_caebd :=range _dfgbc {_bbgefd =append (_bbgefd ,_caebd );};return _df .MakeArray (_bbgefd ...);};

// GetDescent returns the Descent of the font `descriptor`.
func (_cfebc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _df .GetNumberAsFloat (_cfebc .Descent );};func _abadc (_bgfbcb *XObjectImage )error {if _bgfbcb .SMask ==nil {return nil ;};_cfeed ,_egbba :=_bgfbcb .SMask .(*_df .PdfObjectStream );
if !_egbba {_gc .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _df .ErrTypeError ;};_bbfgc :=_cfeed .PdfObjectDictionary ;
_cegbc :=_bbfgc .Get ("\u004d\u0061\u0074t\u0065");if _cegbc ==nil {return nil ;};_edbda ,_begagd :=_fcgcb (_cegbc .(*_df .PdfObjectArray ));if _begagd !=nil {return _begagd ;};_bgecec :=_df .MakeArrayFromFloats ([]float64 {_edbda });_bbfgc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bgecec );
return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dfabgc *PdfPattern )GetContainingPdfObject ()_df .PdfObject {return _dfabgc ._fdceb };

// GetContentStream returns the pattern cell's content stream
func (_dgfa *PdfTilingPattern )GetContentStream ()([]byte ,error ){_fcga ,_ ,_adce :=_dgfa .GetContentStreamWithEncoder ();return _fcga ,_adce ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aabed pdfCIDFontType2 )GetRuneMetrics (r rune )(_aec .CharMetrics ,bool ){_cccfe ,_gdbgd :=_aabed ._dced [r ];if !_gdbgd {_eafg ,_bceab :=_df .GetInt (_aabed .DW );if !_bceab {return _aec .CharMetrics {},false ;};_cccfe =int (*_eafg );};return _aec .CharMetrics {Wx :float64 (_cccfe )},true ;
};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_edc :=NewPdfAction ();_bdd :=&PdfActionGoTo {};_bdd .PdfAction =_edc ;_edc .SetContext (_bdd );return _bdd ;};

// ToPdfObject implements interface PdfModel.
func (_deggg *PdfTransformParamsDocMDP )ToPdfObject ()_df .PdfObject {_caecd :=_df .MakeDict ();_caecd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_deggg .Type );_caecd .SetIfNotNil ("\u0056",_deggg .V );_caecd .SetIfNotNil ("\u0050",_deggg .P );return _caecd ;
};func (_aeddg *pdfFontSimple )addEncoding ()error {var (_eegg string ;_aegbb map[_cfe .CharCode ]_cfe .GlyphName ;_abgae _cfe .SimpleEncoder ;);if _aeddg .Encoder ()!=nil {_ggdfe ,_cggg :=_aeddg .Encoder ().(_cfe .SimpleEncoder );if _cggg &&_ggdfe !=nil {_eegg =_ggdfe .BaseName ();
};};if _aeddg .Encoding !=nil {_dccgb ,_ggfaf ,_deaa :=_aeddg .getFontEncoding ();if _deaa !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aeddg ._gbgf ,_aeddg ._fbegd ,_aeddg .Encoding ,_aeddg .Encoding ,_deaa );
return _deaa ;};if _dccgb !=""{_eegg =_dccgb ;};_aegbb =_ggfaf ;_abgae ,_deaa =_cfe .NewSimpleTextEncoder (_eegg ,_aegbb );if _deaa !=nil {return _deaa ;};};if _abgae ==nil {_bgfaa :=_aeddg ._cada ;if _bgfaa !=nil {switch _aeddg ._fbegd {case "\u0054\u0079\u0070e\u0031":if _bgfaa .fontFile !=nil &&_bgfaa .fontFile ._dcdcb !=nil {_gc .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_abgae =_bgfaa .fontFile ._dcdcb ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _bgfaa ._aggdg !=nil {_gc .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_aggbc ,_agdbfc :=_bgfaa ._aggdg .MakeEncoder ();
if _agdbfc ==nil {_abgae =_aggbc ;};};};};};if _abgae !=nil {if _aegbb !=nil {_gc .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aegbb ,_aeddg .baseFields ());
_abgae =_cfe .ApplyDifferences (_abgae ,_aegbb );};_aeddg .SetEncoder (_abgae );};return nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _df .PdfObject ;Movie _df .PdfObject ;A _df .PdfObject ;};

// SetOCProperties sets the optional content properties.
func (_bfecce *PdfWriter )SetOCProperties (ocProperties _df .PdfObject )error {_ddfgd :=_bfecce ._dffed ;if ocProperties !=nil {_gc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ddfgd .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _bfecce .addObjects (ocProperties );};return nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_abdfa *XObjectImage )GetContainingPdfObject ()_df .PdfObject {return _abdfa ._bbbgb };

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_dbde :=&PdfColorPatternType2 {};return _dbde };

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _df .PdfObject ;H _df .PdfObject ;};func (_bdf *PdfReader )newPdfActionGotoRFromDict (_cde *_df .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cbe ,_gec :=_ddfg (_cde .Get ("\u0046"));if _gec !=nil {return nil ,_gec ;
};return &PdfActionGoToR {D :_cde .Get ("\u0044"),NewWindow :_cde .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cbe },nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _dg .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _bedbf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _abag (rs ,opts ,true ,_bedbf );
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_afec *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daeb :=vals [0];if _daeb < 0.0||_daeb > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_daeb );
return nil ,ErrColorOutOfRange ;};_dge :=vals [1];if _dge < 0.0||_dge > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_daeb );return nil ,ErrColorOutOfRange ;
};_aagb :=vals [2];if _aagb < 0.0||_aagb > 1.0{_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_daeb );return nil ,ErrColorOutOfRange ;};_addf :=NewPdfColorDeviceRGB (_daeb ,_dge ,_aagb );
return _addf ,nil ;};func _gfgcd (_dfcee *_df .PdfObjectDictionary )(*PdfShadingType7 ,error ){_aagg :=PdfShadingType7 {};_aecda :=_dfcee .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aecda ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdffg ,_ceacg :=_aecda .(*_df .PdfObjectInteger );if !_ceacg {_gc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aecda );
return nil ,_df .ErrTypeError ;};_aagg .BitsPerCoordinate =_bdffg ;_aecda =_dfcee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aecda ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bdffg ,_ceacg =_aecda .(*_df .PdfObjectInteger );if !_ceacg {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aecda );
return nil ,_df .ErrTypeError ;};_aagg .BitsPerComponent =_bdffg ;_aecda =_dfcee .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aecda ==nil {_gc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bdffg ,_ceacg =_aecda .(*_df .PdfObjectInteger );if !_ceacg {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aecda );
return nil ,_df .ErrTypeError ;};_aagg .BitsPerComponent =_bdffg ;_aecda =_dfcee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aecda ==nil {_gc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bffgbe ,_ceacg :=_aecda .(*_df .PdfObjectArray );if !_ceacg {_gc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aecda );
return nil ,_df .ErrTypeError ;};_aagg .Decode =_bffgbe ;if _cebcg :=_dfcee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cebcg !=nil {_aagg .Function =[]PdfFunction {};if _degfc ,_dafe :=_cebcg .(*_df .PdfObjectArray );_dafe {for _ ,_fbbfb :=range _degfc .Elements (){_ccaf ,_egbdf :=_ebcf (_fbbfb );
if _egbdf !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egbdf );return nil ,_egbdf ;};_aagg .Function =append (_aagg .Function ,_ccaf );
};}else {_dadf ,_gcffg :=_ebcf (_cebcg );if _gcffg !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcffg );return nil ,_gcffg ;
};_aagg .Function =append (_aagg .Function ,_dadf );};};return &_aagg ,nil ;};func _bbcdc (_ecagc _df .PdfObject ,_gfcbf *PdfReader )(*OutlineDest ,error ){_acbc ,_egcge :=_df .GetArray (_ecagc );if !_egcge {return nil ,_cab .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_adgda :=_acbc .Len ();if _adgda < 2{return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_adgda );
};_fgfb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_aedc :=_acbc .Get (0);if _egage ,_dgfe :=_df .GetIndirect (_aedc );_dgfe {if _ ,_ddec ,_ebeg :=_gfcbf .PageFromIndirectObject (_egage );_ebeg ==nil {_fgfb .Page =int64 (_ddec -1);}else {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_egage );
};_fgfb .PageObj =_egage ;}else if _bdebf ,_cbdag :=_df .GetIntVal (_aedc );_cbdag {if _bdebf >=0&&_bdebf < len (_gfcbf .PageList ){_fgfb .PageObj =_gfcbf .PageList [_bdebf ].GetPageAsIndirectObject ();}else {_gc .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_bdebf );
};_fgfb .Page =int64 (_bdebf );}else {return nil ,_g .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_aedc );};_ddee ,_egcge :=_df .GetNameVal (_acbc .Get (1));
if !_egcge {_gc .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_acbc .Get (1));
return _fgfb ,nil ;};switch _ddee {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _adgda > 2{_fgfb .Y ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_acbc .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _adgda > 2{_fgfb .X ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_acbc .Get (2)));
};case "\u0058\u0059\u005a":if _adgda > 4{_fgfb .X ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_acbc .Get (2)));_fgfb .Y ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_acbc .Get (3)));_fgfb .Zoom ,_ =_df .GetNumberAsFloat (_df .TraceToDirectObject (_acbc .Get (4)));
};default:_ddee ="\u0046\u0069\u0074";};_fgfb .Mode =_ddee ;return _fgfb ,nil ;};func (_cbaec *PdfWriter )mapObjectStreams (_fdfad bool )(map[_df .PdfObject ]bool ,bool ){_afgge :=make (map[_df .PdfObject ]bool );for _ ,_cegad :=range _cbaec ._ccdbg {if _eaebb ,_dgfgc :=_cegad .(*_df .PdfObjectStreams );
_dgfgc {_fdfad =true ;for _ ,_ebec :=range _eaebb .Elements (){_afgge [_ebec ]=true ;if _fgbdd ,_gedfa :=_ebec .(*_df .PdfIndirectObject );_gedfa {_afgge [_fgbdd .PdfObject ]=true ;};};};};return _afgge ,_fdfad ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_fade *PdfReader )GetObjectNums ()[]int {return _fade ._ecafc .GetObjectNums ()};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_df .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_df .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_df .PdfObjectBool ;_aceab PdfModel ;_aedee _df .PdfObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// ToPdfObject implements interface PdfModel.
func (_edfc *PdfAnnotationText )ToPdfObject ()_df .PdfObject {_edfc .PdfAnnotation .ToPdfObject ();_begb :=_edfc ._bef ;_gabg :=_begb .PdfObject .(*_df .PdfObjectDictionary );if _edfc .PdfAnnotationMarkup !=nil {_edfc .PdfAnnotationMarkup .appendToPdfDictionary (_gabg );
};_gabg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0054\u0065\u0078\u0074"));_gabg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_edfc .Open );_gabg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edfc .Name );_gabg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_edfc .State );
_gabg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_edfc .StateModel );return _begb ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_dba :=NewPdfAction ();_baa :=&PdfActionImportData {};_baa .PdfAction =_dba ;_dba .SetContext (_baa );return _baa ;};func (_gefeb *PdfWriter )writeDocumentVersion (){if _gefeb ._aaegc {_gefeb .writeString ("\u000a");
}else {_gefeb .writeString (_g .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gefeb ._ggaaa .Major ,_gefeb ._ggaaa .Minor ));_gefeb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};func (_eeage *LTV )getCerts (_baedd []*_ed .Certificate )([][]byte ,error ){_ebggd :=make ([][]byte ,0,len (_baedd ));
for _ ,_dfffc :=range _baedd {_ebggd =append (_ebggd ,_dfffc .Raw );};return _ebggd ,nil ;};

// WriteToFile writes the output PDF to file.
func (_ceba *PdfWriter )WriteToFile (outputFilePath string )error {_acgba ,_ddggf :=_fb .Create (outputFilePath );if _ddggf !=nil {return _ddggf ;};defer _acgba .Close ();return _ceba .Write (_acgba );};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_df .PdfObjectString ;Q *_df .PdfObjectInteger ;DS *_df .PdfObjectString ;RV _df .PdfObject ;MaxLen *_df .PdfObjectInteger ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_acg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cab .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ebfb :=field .V ;if _ebfb ==nil {return _cab .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cace :=pageNum -1;
if _cace < 0||_cace > len (_acg ._ceee )-1{return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_fdeb :=_acg .Reader .PageList [_cace ];field .P =_fdeb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_df .MakeString (_g .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_fdeb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _acg ._bcf ==_acg ._cfaba .AcroForm {_acg ._bcf =_acg .Reader .AcroForm ;};_ded :=_acg ._bcf ;if _ded ==nil {_ded =NewPdfAcroForm ();};_ded .SigFlags =_df .MakeInteger (3);_beff :=append (_ded .AllFields (),field .PdfField );
_ded .Fields =&_beff ;_acg .ReplaceAcroForm (_ded );_acg .UpdatePage (_fdeb );_acg ._ceee [_cace ]=_fdeb ;if _ ,_ebbg :=field .V .GetDocMDPPermission ();_ebbg {_acg ._fgffb =NewPermissions (field .V );};return nil ;};

// SetBorderWidth sets the style's border width.
func (_bccd *PdfBorderStyle )SetBorderWidth (width float64 ){_bccd .W =&width };

// ToPdfObject implements interface PdfModel.
func (_efg *PdfActionGoTo )ToPdfObject ()_df .PdfObject {_efg .PdfAction .ToPdfObject ();_fcg :=_efg ._de ;_ff :=_fcg .PdfObject .(*_df .PdfObjectDictionary );_ff .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoTo )));_ff .SetIfNotNil ("\u0044",_efg .D );
return _fcg ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_bfaba *Image )ColorAt (x ,y int )(_dbc .Color ,error ){_ddaec :=_fbg .BytesPerLine (int (_bfaba .Width ),int (_bfaba .BitsPerComponent ),_bfaba .ColorComponents );switch _bfaba .ColorComponents {case 1:return _fbg .ColorAtGrayscale (x ,y ,int (_bfaba .BitsPerComponent ),_ddaec ,_bfaba .Data ,_bfaba ._afgg );
case 3:return _fbg .ColorAtNRGBA (x ,y ,int (_bfaba .Width ),_ddaec ,int (_bfaba .BitsPerComponent ),_bfaba .Data ,_bfaba ._gced ,_bfaba ._afgg );case 4:return _fbg .ColorAtCMYK (x ,y ,int (_bfaba .Width ),_bfaba .Data ,_bfaba ._afgg );};_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfaba .ColorComponents ,_bfaba .BitsPerComponent );
return nil ,_cab .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fdcbe *PdfWriter )SetPageLabels (pageLabels _df .PdfObject )error {if pageLabels ==nil {return nil ;};_gc .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_fdcbe ._dffed .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _fdcbe .addObjects (pageLabels );};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gfbg *PdfPage )GetPageAsIndirectObject ()*_df .PdfIndirectObject {return _gfbg ._dgbagf };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dcdd .Lock ();defer _dcdd .Unlock ();_cgdga =creator };func _dfab (_fabfe *_df .PdfObjectDictionary )(*PdfFieldText ,error ){_bcac :=&PdfFieldText {};_bcac .DA ,_ =_df .GetString (_fabfe .Get ("\u0044\u0041"));_bcac .Q ,_ =_df .GetInt (_fabfe .Get ("\u0051"));
_bcac .DS ,_ =_df .GetString (_fabfe .Get ("\u0044\u0053"));_bcac .RV =_fabfe .Get ("\u0052\u0056");_bcac .MaxLen ,_ =_df .GetInt (_fabfe .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _bcac ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_faee *Image )AlphaMap (mapFunc AlphaMapFunc ){for _ccbec ,_gfga :=range _faee ._gced {_faee ._gced [_ccbec ]=mapFunc (_gfga );};};

// ToPdfObject implements interface PdfModel.
func (_caad *PdfAnnotationRedact )ToPdfObject ()_df .PdfObject {_caad .PdfAnnotation .ToPdfObject ();_gbca :=_caad ._bef ;_gcgg :=_gbca .PdfObject .(*_df .PdfObjectDictionary );_caad .PdfAnnotationMarkup .appendToPdfDictionary (_gcgg );_gcgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_gcgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_caad .QuadPoints );_gcgg .SetIfNotNil ("\u0049\u0043",_caad .IC );_gcgg .SetIfNotNil ("\u0052\u004f",_caad .RO );_gcgg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_caad .OverlayText );
_gcgg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_caad .Repeat );_gcgg .SetIfNotNil ("\u0044\u0041",_caad .DA );_gcgg .SetIfNotNil ("\u0051",_caad .Q );return _gbca ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _df .PdfObject ;RichMediaContent _df .PdfObject ;};

// ToPdfObject converts the font to a PDF representation.
func (_dbdeb *pdfFontType3 )ToPdfObject ()_df .PdfObject {if _dbdeb ._becf ==nil {_dbdeb ._becf =&_df .PdfIndirectObject {};};_cdgbf :=_dbdeb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_dbdeb ._becf .PdfObject =_cdgbf ;if _dbdeb .FirstChar !=nil {_cdgbf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_dbdeb .FirstChar );
};if _dbdeb .LastChar !=nil {_cdgbf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_dbdeb .LastChar );};if _dbdeb .Widths !=nil {_cdgbf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_dbdeb .Widths );};if _dbdeb .Encoding !=nil {_cdgbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dbdeb .Encoding );
}else if _dbdeb ._gedgg !=nil {_cfcd :=_dbdeb ._gedgg .ToPdfObject ();if _cfcd !=nil {_cdgbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cfcd );};};if _dbdeb .FontBBox !=nil {_cdgbf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dbdeb .FontBBox );
};if _dbdeb .FontMatrix !=nil {_cdgbf .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_dbdeb .FontMatrix );};if _dbdeb .CharProcs !=nil {_cdgbf .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_dbdeb .CharProcs );};if _dbdeb .Resources !=nil {_cdgbf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dbdeb .Resources );
};return _dbdeb ._becf ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_aadba *PdfPattern )GetContext ()PdfModel {return _aadba ._bbdg };

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_eeea *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_eecba :=&PdfColorPattern {};_gaeg ,_bffg :=objects [len (objects )-1].(*_df .PdfObjectName );if !_bffg {_gc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_eecba .PatternName =*_gaeg ;if len (objects )> 1{_aecfg :=objects [0:len (objects )-1];if _eeea .UnderlyingCS ==nil {_gc .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cab .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_bace ,_dgdg :=_eeea .UnderlyingCS .ColorFromPdfObjects (_aecfg );if _dgdg !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dgdg );
return nil ,_dgdg ;};_eecba .Color =_bace ;};return _eecba ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_beda *PdfPageResources )GetXObjectByName (keyName _df .PdfObjectName )(*_df .PdfObjectStream ,XObjectType ){if _beda .XObject ==nil {return nil ,XObjectTypeUndefined ;};_gfbbf ,_fceca :=_df .TraceToDirectObject (_beda .XObject ).(*_df .PdfObjectDictionary );
if !_fceca {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_df .TraceToDirectObject (_beda .XObject ));
return nil ,XObjectTypeUndefined ;};if _dbebda :=_gfbbf .Get (keyName );_dbebda !=nil {_dbbaa ,_dbdde :=_df .GetStream (_dbebda );if !_dbdde {_gc .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dbebda );
return nil ,XObjectTypeUndefined ;};_cacag :=_dbbaa .PdfObjectDictionary ;_afcfc ,_dbdde :=_df .TraceToDirectObject (_cacag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_df .PdfObjectName );if !_dbdde {_gc .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_cacag .String ());
return nil ,XObjectTypeUndefined ;};if *_afcfc =="\u0049\u006d\u0061g\u0065"{return _dbbaa ,XObjectTypeImage ;}else if *_afcfc =="\u0046\u006f\u0072\u006d"{return _dbbaa ,XObjectTypeForm ;}else if *_afcfc =="\u0050\u0053"{return _dbbaa ,XObjectTypePS ;
}else {_gc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_afcfc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _df .StreamEncoder ;FormType _df .PdfObject ;BBox _df .PdfObject ;Matrix _df .PdfObject ;Resources *PdfPageResources ;Group _df .PdfObject ;Ref _df .PdfObject ;MetaData _df .PdfObject ;PieceInfo _df .PdfObject ;LastModified _df .PdfObject ;
StructParent _df .PdfObject ;StructParents _df .PdfObject ;OPI _df .PdfObject ;OC _df .PdfObject ;Name _df .PdfObject ;

// Stream data.
Stream []byte ;_aefcd *_df .PdfObjectStream ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_gea :=PdfColorLab {l ,a ,b };return &_gea };

// GetFillImage get attached model.Image in push button.
func (_bdbf *PdfFieldButton )GetFillImage ()*Image {if _bdbf .IsPush (){return _bdbf ._gfab ;};return nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gbcab *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cab .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_dfagg ,_fbed :=_fbg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gced ,img ._afgg );if _fbed !=nil {return img ,_fbed ;};_acfff ,_fbed :=_fbg .GrayConverter .Convert (_dfagg );if _fbed !=nil {return img ,_fbed ;
};return _cgbga (_acfff .Base ()),nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fgbfd *Outline )Insert (index uint ,item *OutlineItem ){_dfegc :=uint (len (_fgbfd .Entries ));if index > _dfegc {index =_dfegc ;};_fgbfd .Entries =append (_fgbfd .Entries [:index ],append ([]*OutlineItem {item },_fgbfd .Entries [index :]...)...);
};func (_fbfe *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _fbfe ._cada };

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cbgcfg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abee ,_gefg :=_df .GetNumbersAsFloat (objects );
if _gefg !=nil {return nil ,_gefg ;};return _cbgcfg .ColorFromFloats (_abee );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_aefc pdfCIDFontType2 )GetCharMetrics (code _cfe .CharCode )(_aec .CharMetrics ,bool ){if _cdcg ,_adfed :=_aefc ._acafg [code ];_adfed {return _aec .CharMetrics {Wx :_cdcg },true ;};_dggee :=rune (code );_ebaecg ,_agecf :=_aefc ._dced [_dggee ];if !_agecf {_ebaecg =int (_aefc ._ddeg );
};return _aec .CharMetrics {Wx :float64 (_ebaecg )},true ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// L returns the value of the L component of the color.
func (_bgfa *PdfColorLab )L ()float64 {return _bgfa [0]};func (_aada *PdfReader )newPdfAnnotationUnderlineFromDict (_cbgcf *_df .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bce :=PdfAnnotationUnderline {};_adgc ,_ege :=_aada .newPdfAnnotationMarkupFromDict (_cbgcf );
if _ege !=nil {return nil ,_ege ;};_bce .PdfAnnotationMarkup =_adgc ;_bce .QuadPoints =_cbgcf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bce ,nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _df .StreamEncoder )(*XObjectImage ,error ){_aabdcg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_aabdcg ,img ,cs ,encoder );};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_aeeb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_df .StreamEncoder ,error ){_bffc ,_geddba :=_aeeb ._fdceb .(*_df .PdfObjectStream );if !_geddba {_gc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aeeb ._fdceb );
return nil ,nil ,_df .ErrTypeError ;};_caaca ,_gecdf :=_df .DecodeStream (_bffc );if _gecdf !=nil {_gc .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gecdf );
return nil ,nil ,_gecdf ;};_bcgbb ,_gecdf :=_df .NewEncoderFromStream (_bffc );if _gecdf !=nil {_gc .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gecdf );
return nil ,nil ,_gecdf ;};return _caaca ,_bcgbb ,nil ;};func _edce (_cbgac string )(map[_cfe .CharCode ]_cfe .GlyphName ,error ){_fcgfe :=_fg .Split (_cbgac ,"\u000a");_fgdd :=make (map[_cfe .CharCode ]_cfe .GlyphName );for _ ,_gaca :=range _fcgfe {_bfbgf :=_gcgd .FindStringSubmatch (_gaca );
if _bfbgf ==nil {continue ;};_edeac ,_gcbef :=_bfbgf [1],_bfbgf [2];_aecae ,_gbafe :=_ga .Atoi (_edeac );if _gbafe !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gaca );
return nil ,_df .ErrTypeError ;};_fgdd [_cfe .CharCode (_aecae )]=_cfe .GlyphName (_gcbef );};_gc .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_fgdd );
return _fgdd ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dfba *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_cffc :=_ac .NewReader (img .getBase ());_bcbbc :=_fbg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dfba .AlternateSpace .GetNumComponents (),nil ,img ._gced ,nil );
_ecda :=_ac .NewWriter (_bcbbc );_dggb :=_bf .Pow (2,float64 (img .BitsPerComponent ))-1;_gc .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_gc .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dfba .TintTransform );_abbce :=_dfba .AlternateSpace .DecodeArray ();var (_baccb uint32 ;_cega error ;);for {_baccb ,_cega =_cffc .ReadSample ();
if _cega ==_dg .EOF {break ;};if _cega !=nil {return img ,_cega ;};_egaaf :=float64 (_baccb )/_dggb ;_eaeef ,_aeea :=_dfba .TintTransform .Evaluate ([]float64 {_egaaf });if _aeea !=nil {return img ,_aeea ;};for _gcbd ,_agcc :=range _eaeef {_bbebg :=_fbg .LinearInterpolate (_agcc ,_abbce [_gcbd *2],_abbce [_gcbd *2+1],0,1);
if _aeea =_ecda .WriteSample (uint32 (_bbebg *_dggb ));_aeea !=nil {return img ,_aeea ;};};};return _dfba .AlternateSpace .ImageToRGB (_cgbga (&_bcbbc ));};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dbfe *PdfColorLab )GetNumComponents ()int {return 3};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_ggca *PdfFieldButton )SetType (btype ButtonType ){_dcdf :=uint32 (0);if _ggca .Ff !=nil {_dcdf =uint32 (*_ggca .Ff );};switch btype {case ButtonTypePush :_dcdf |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dcdf |=FieldFlagRadio .Mask ();
};_ggca .Ff =_df .MakeInteger (int64 (_dcdf ));};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gbddc *OutlineItem )ToPdfObject ()_df .PdfObject {_cbbbcg ,_ :=_gbddc .ToPdfOutlineItem ();return _cbbbcg .ToPdfObject ();};func (_gbbc *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_agf *PdfAnnotationHighlight )ToPdfObject ()_df .PdfObject {_agf .PdfAnnotation .ToPdfObject ();_ced :=_agf ._bef ;_gaaac :=_ced .PdfObject .(*_df .PdfObjectDictionary );_agf .PdfAnnotationMarkup .appendToPdfDictionary (_gaaac );_gaaac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gaaac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agf .QuadPoints );return _ced ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_dfgc *PdfInfo )ToPdfObject ()_df .PdfObject {_egdf :=_df .MakeDict ();_egdf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_dfgc .Title );_egdf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_dfgc .Author );_egdf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_dfgc .Subject );
_egdf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_dfgc .Keywords );_egdf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_dfgc .Creator );_egdf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dfgc .Producer );
_egdf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_dfgc .Trapped );if _dfgc .CreationDate !=nil {_egdf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dfgc .CreationDate .ToPdfObject ());};if _dfgc .ModifiedDate !=nil {_egdf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_dfgc .ModifiedDate .ToPdfObject ());
};for _ ,_edfa :=range _dfgc ._ecbda .Keys (){_egdf .SetIfNotNil (_edfa ,_dfgc ._ecbda .Get (_edfa ));};return _egdf ;};func _gagd (_fcbcf _aec .StdFont )pdfFontSimple {_cadd :=_fcbcf .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_fbegd :"\u0054\u0079\u0070e\u0031",_gbgf :_fcbcf .Name ()},_dfgaa :_fcbcf .GetMetricsTable (),_gfcg :&PdfFontDescriptor {FontName :_df .MakeName (string (_cadd .Name )),FontFamily :_df .MakeName (_cadd .Family ),FontWeight :_df .MakeFloat (float64 (_cadd .Weight )),Flags :_df .MakeInteger (int64 (_cadd .Flags )),FontBBox :_df .MakeArrayFromFloats (_cadd .BBox [:]),ItalicAngle :_df .MakeFloat (_cadd .ItalicAngle ),Ascent :_df .MakeFloat (_cadd .Ascent ),Descent :_df .MakeFloat (_cadd .Descent ),CapHeight :_df .MakeFloat (_cadd .CapHeight ),XHeight :_df .MakeFloat (_cadd .XHeight ),StemV :_df .MakeFloat (_cadd .StemV ),StemH :_df .MakeFloat (_cadd .StemH )},_bebe :_fcbcf .Encoder ()};
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_fbcga *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _fbcga .MediaBox !=nil {return _fbcga .MediaBox ,nil ;};_eagff :=_fbcga .Parent ;for _eagff !=nil {_abecb ,_cfedf :=_df .GetDict (_eagff );if !_cfedf {return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dbgfa :=_abecb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dbgfa !=nil {_dccb ,_fcdaf :=_df .GetArray (_dbgfa );if !_fcdaf {return nil ,_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_aeaea ,_bfcag :=NewPdfRectangle (*_dccb );if _bfcag !=nil {return nil ,_bfcag ;};return _aeaea ,nil ;};_eagff =_abecb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cab .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_badd :=Permissions {};_badd .DocMDP =docMdp ;_fccgf :=_df .MakeDict ();_fccgf .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_badd ._afgfd =_fccgf ;return &_badd ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_efac *PdfAppender )UpdatePage (page *PdfPage ){_efac .updateObjectsDeep (page .ToPdfObject (),nil )};var (ErrRequiredAttributeMissing =_cab .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dfagf =_cab .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cab .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cab .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_add .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_df .ErrNotSupported );ErrType1CFontNotSupported =_add .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_df .ErrNotSupported );
ErrType3FontNotSupported =_add .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_df .ErrNotSupported );
ErrTTCmapNotSupported =_add .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_df .ErrNotSupported );
ErrSignNotEnoughSpace =_add .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_add .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func _ebfg (_dfcc _df .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_gc .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dfcc .String (),_dfcc );
_efge :=NewPdfColorspaceSpecialPattern ();if _gccaa ,_gacf :=_dfcc .(*_df .PdfIndirectObject );_gacf {_efge ._dfcfc =_gccaa ;};_dfcc =_df .TraceToDirectObject (_dfcc );if _ccbc ,_gbcg :=_dfcc .(*_df .PdfObjectName );_gbcg {if *_ccbc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _efge ,nil ;};_ccddb ,_dfagd :=_dfcc .(*_df .PdfObjectArray );if !_dfagd {_gc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dfcc );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _ccddb .Len ()!=1&&_ccddb .Len ()!=2{_gc .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_ccddb );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dfcc =_ccddb .Get (0);if _bdceb ,_bbed :=_dfcc .(*_df .PdfObjectName );_bbed {if *_bdceb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_gc .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bdceb );
return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _ccddb .Len ()> 1{_dfcc =_ccddb .Get (1);_dfcc =_df .TraceToDirectObject (_dfcc );_eacd ,_dcga :=NewPdfColorspaceFromPdfObject (_dfcc );if _dcga !=nil {return nil ,_dcga ;
};_efge .UnderlyingCS =_eacd ;};_gc .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_efge .UnderlyingCS );
return _efge ,nil ;};

// Height returns the height of `rect`.
func (_gbdf *PdfRectangle )Height ()float64 {return _bf .Abs (_gbdf .Ury -_gbdf .Lly )};func (_dfg *PdfReader )newPdfAnnotationFromIndirectObject (_bdcg *_df .PdfIndirectObject )(*PdfAnnotation ,error ){_dfgf ,_gddc :=_bdcg .PdfObject .(*_df .PdfObjectDictionary );
if !_gddc {return nil ,_g .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_dfg ._cggbe .GetModelFromPrimitive (_dfgf );model !=nil {_dbca ,_aecf :=model .(*PdfAnnotation );if !_aecf {return nil ,_g .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _dbca ,nil ;};_cgb :=&PdfAnnotation {};_cgb ._bef =_bdcg ;_dfg ._cggbe .Register (_dfgf ,_cgb );if _dagd :=_dfgf .Get ("\u0054\u0079\u0070\u0065");_dagd !=nil {_fbcb ,_gecb :=_dagd .(*_df .PdfObjectName );if !_gecb {_gc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dagd );
}else {if *_fbcb !="\u0041\u006e\u006eo\u0074"{_gc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_fbcb );};};};
if _bcdc :=_dfgf .Get ("\u0052\u0065\u0063\u0074");_bcdc !=nil {_cgb .Rect =_bcdc ;};if _abd :=_dfgf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_abd !=nil {_cgb .Contents =_abd ;};if _acd :=_dfgf .Get ("\u0050");_acd !=nil {_cgb .P =_acd ;
};if _faff :=_dfgf .Get ("\u004e\u004d");_faff !=nil {_cgb .NM =_faff ;};if _gdg :=_dfgf .Get ("\u004d");_gdg !=nil {_cgb .M =_gdg ;};if _agdb :=_dfgf .Get ("\u0046");_agdb !=nil {_cgb .F =_agdb ;};if _fggc :=_dfgf .Get ("\u0041\u0050");_fggc !=nil {_cgb .AP =_fggc ;
};if _dfag :=_dfgf .Get ("\u0041\u0053");_dfag !=nil {_cgb .AS =_dfag ;};if _cacb :=_dfgf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cacb !=nil {_cgb .Border =_cacb ;};if _fdf :=_dfgf .Get ("\u0043");_fdf !=nil {_cgb .C =_fdf ;};if _fcda :=_dfgf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_fcda !=nil {_cgb .StructParent =_fcda ;};if _bge :=_dfgf .Get ("\u004f\u0043");_bge !=nil {_cgb .OC =_bge ;};_ecc :=_dfgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _ecc ==nil {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_cgb ._ged =nil ;return _cgb ,nil ;};_eeddg ,_aef :=_ecc .(*_df .PdfObjectName );if !_aef {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ecc );
return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_ecc );};switch *_eeddg {case "\u0054\u0065\u0078\u0074":_gga ,_fde :=_dfg .newPdfAnnotationTextFromDict (_dfgf );
if _fde !=nil {return nil ,_fde ;};_gga .PdfAnnotation =_cgb ;_cgb ._ged =_gga ;return _cgb ,nil ;case "\u004c\u0069\u006e\u006b":_feda ,_ccd :=_dfg .newPdfAnnotationLinkFromDict (_dfgf );if _ccd !=nil {return nil ,_ccd ;};_feda .PdfAnnotation =_cgb ;_cgb ._ged =_feda ;
return _cgb ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fafg ,_faba :=_dfg .newPdfAnnotationFreeTextFromDict (_dfgf );if _faba !=nil {return nil ,_faba ;};_fafg .PdfAnnotation =_cgb ;_cgb ._ged =_fafg ;return _cgb ,nil ;case "\u004c\u0069\u006e\u0065":_ddc ,_bgca :=_dfg .newPdfAnnotationLineFromDict (_dfgf );
if _bgca !=nil {return nil ,_bgca ;};_ddc .PdfAnnotation =_cgb ;_cgb ._ged =_ddc ;_gc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cgb ,_cgb );
_gc .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ddc ,_ddc );_gc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ddc .PdfAnnotationMarkup ,_ddc .PdfAnnotationMarkup );
return _cgb ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cgbc ,_geed :=_dfg .newPdfAnnotationSquareFromDict (_dfgf );if _geed !=nil {return nil ,_geed ;};_cgbc .PdfAnnotation =_cgb ;_cgb ._ged =_cgbc ;return _cgb ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ddg ,_cad :=_dfg .newPdfAnnotationCircleFromDict (_dfgf );
if _cad !=nil {return nil ,_cad ;};_ddg .PdfAnnotation =_cgb ;_cgb ._ged =_ddg ;return _cgb ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cebe ,_fecb :=_dfg .newPdfAnnotationPolygonFromDict (_dfgf );if _fecb !=nil {return nil ,_fecb ;};_cebe .PdfAnnotation =_cgb ;
_cgb ._ged =_cebe ;return _cgb ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cegb ,_egg :=_dfg .newPdfAnnotationPolyLineFromDict (_dfgf );if _egg !=nil {return nil ,_egg ;};_cegb .PdfAnnotation =_cgb ;_cgb ._ged =_cegb ;return _cgb ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_beg ,_eagdb :=_dfg .newPdfAnnotationHighlightFromDict (_dfgf );if _eagdb !=nil {return nil ,_eagdb ;};_beg .PdfAnnotation =_cgb ;_cgb ._ged =_beg ;return _cgb ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_gac ,_eac :=_dfg .newPdfAnnotationUnderlineFromDict (_dfgf );
if _eac !=nil {return nil ,_eac ;};_gac .PdfAnnotation =_cgb ;_cgb ._ged =_gac ;return _cgb ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bafg ,_fdb :=_dfg .newPdfAnnotationSquigglyFromDict (_dfgf );if _fdb !=nil {return nil ,_fdb ;};_bafg .PdfAnnotation =_cgb ;
_cgb ._ged =_bafg ;return _cgb ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_cfbd ,_babc :=_dfg .newPdfAnnotationStrikeOut (_dfgf );if _babc !=nil {return nil ,_babc ;};_cfbd .PdfAnnotation =_cgb ;_cgb ._ged =_cfbd ;return _cgb ,nil ;case "\u0043\u0061\u0072e\u0074":_cece ,_cfbe :=_dfg .newPdfAnnotationCaretFromDict (_dfgf );
if _cfbe !=nil {return nil ,_cfbe ;};_cece .PdfAnnotation =_cgb ;_cgb ._ged =_cece ;return _cgb ,nil ;case "\u0053\u0074\u0061m\u0070":_gfag ,_efcg :=_dfg .newPdfAnnotationStampFromDict (_dfgf );if _efcg !=nil {return nil ,_efcg ;};_gfag .PdfAnnotation =_cgb ;
_cgb ._ged =_gfag ;return _cgb ,nil ;case "\u0049\u006e\u006b":_bdb ,_dcd :=_dfg .newPdfAnnotationInkFromDict (_dfgf );if _dcd !=nil {return nil ,_dcd ;};_bdb .PdfAnnotation =_cgb ;_cgb ._ged =_bdb ;return _cgb ,nil ;case "\u0050\u006f\u0070u\u0070":_cffg ,_dgd :=_dfg .newPdfAnnotationPopupFromDict (_dfgf );
if _dgd !=nil {return nil ,_dgd ;};_cffg .PdfAnnotation =_cgb ;_cgb ._ged =_cffg ;return _cgb ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_aegb ,_fcbc :=_dfg .newPdfAnnotationFileAttachmentFromDict (_dfgf );
if _fcbc !=nil {return nil ,_fcbc ;};_aegb .PdfAnnotation =_cgb ;_cgb ._ged =_aegb ;return _cgb ,nil ;case "\u0053\u006f\u0075n\u0064":_bdcc ,_ggee :=_dfg .newPdfAnnotationSoundFromDict (_dfgf );if _ggee !=nil {return nil ,_ggee ;};_bdcc .PdfAnnotation =_cgb ;
_cgb ._ged =_bdcc ;return _cgb ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_egc ,_aae :=_dfg .newPdfAnnotationRichMediaFromDict (_dfgf );if _aae !=nil {return nil ,_aae ;};_egc .PdfAnnotation =_cgb ;_cgb ._ged =_egc ;return _cgb ,nil ;case "\u004d\u006f\u0076i\u0065":_bfc ,_gbcf :=_dfg .newPdfAnnotationMovieFromDict (_dfgf );
if _gbcf !=nil {return nil ,_gbcf ;};_bfc .PdfAnnotation =_cgb ;_cgb ._ged =_bfc ;return _cgb ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_eda ,_baab :=_dfg .newPdfAnnotationScreenFromDict (_dfgf );if _baab !=nil {return nil ,_baab ;};_eda .PdfAnnotation =_cgb ;
_cgb ._ged =_eda ;return _cgb ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gfcb ,_aaac :=_dfg .newPdfAnnotationWidgetFromDict (_dfgf );if _aaac !=nil {return nil ,_aaac ;};_gfcb .PdfAnnotation =_cgb ;_cgb ._ged =_gfcb ;return _cgb ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_ebf ,_gggb :=_dfg .newPdfAnnotationPrinterMarkFromDict (_dfgf );
if _gggb !=nil {return nil ,_gggb ;};_ebf .PdfAnnotation =_cgb ;_cgb ._ged =_ebf ;return _cgb ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_gfdc ,_cgg :=_dfg .newPdfAnnotationTrapNetFromDict (_dfgf );if _cgg !=nil {return nil ,_cgg ;};_gfdc .PdfAnnotation =_cgb ;
_cgb ._ged =_gfdc ;return _cgb ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_aga ,_dadd :=_dfg .newPdfAnnotationWatermarkFromDict (_dfgf );if _dadd !=nil {return nil ,_dadd ;};_aga .PdfAnnotation =_cgb ;_cgb ._ged =_aga ;return _cgb ,nil ;
case "\u0033\u0044":_gbde ,_aaef :=_dfg .newPdfAnnotation3DFromDict (_dfgf );if _aaef !=nil {return nil ,_aaef ;};_gbde .PdfAnnotation =_cgb ;_cgb ._ged =_gbde ;return _cgb ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_dac ,_gbe :=_dfg .newPdfAnnotationProjectionFromDict (_dfgf );
if _gbe !=nil {return nil ,_gbe ;};_dac .PdfAnnotation =_cgb ;_cgb ._ged =_dac ;return _cgb ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_fedc ,_aege :=_dfg .newPdfAnnotationRedactFromDict (_dfgf );if _aege !=nil {return nil ,_aege ;};_fedc .PdfAnnotation =_cgb ;
_cgb ._ged =_fedc ;return _cgb ,nil ;};_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_eeddg );
return nil ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_df .PdfIndirectObject )*PdfOutlineItem {_bcccf :=PdfOutlineItem {};_bcccf ._dedbf =&_bcccf ;_bcccf .Title =_df .MakeString (title );_abge :=_df .MakeArray ();_abge .Append (page );_abge .Append (_df .MakeName ("\u0046\u0069\u0074"));
_bcccf .Dest =_abge ;return &_bcccf ;};func _gbgcf (_aabgg _df .PdfObject ){_gc .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_aabgg ,_aabgg .String ());if _bggged ,_baadf :=_aabgg .(*_df .PdfObjectStream );_baadf {_aebaf ,_edgeg :=_df .DecodeStream (_bggged );
if _edgeg !=nil {_gc .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_edgeg );return ;};_gc .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_aebaf );}else if _ffba ,_ceggc :=_aabgg .(*_df .PdfIndirectObject );_ceggc {_gc .Log .Debug ("\u0025\u0054\u0020%\u0076",_ffba .PdfObject ,_ffba .PdfObject );
_gc .Log .Debug ("\u0025\u0073",_ffba .PdfObject .String ());};};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_df .PdfObjectStream ;Data []byte ;_bcbff *_df .PdfIndirectObject ;_gddgg *_df .PdfObjectStream ;};

// SetFlag sets the flag for the field.
func (_cgda *PdfField )SetFlag (flag FieldFlag ){_cgda .Ff =_df .MakeInteger (int64 (flag ))};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cbd :=NewPdfAction ();_aeg :=&PdfActionSound {};_aeg .PdfAction =_cbd ;_cbd .SetContext (_aeg );return _aeg ;};

// ToPdfObject converts date to a PDF string object.
func (_dbgegc *PdfDate )ToPdfObject ()_df .PdfObject {_effd :=_g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_dbgegc ._affab ,_dbgegc ._acgcc ,_dbgegc ._bfgcg ,_dbgegc ._dfbbe ,_dbgegc ._gebge ,_dbgegc ._dceaa ,_dbgegc ._cefad ,_dbgegc ._dbgfg ,_dbgegc ._bbgee );
return _df .MakeString (_effd );};func _afdcc ()_cb .Time {_dcdd .Lock ();defer _dcdd .Unlock ();return _geaeb };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_acgg *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_acgg .ToPdfOutline ().PdfOutlineTreeNode ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gabd :=&PdfColorspaceLab {};_gabd .BlackPoint =[]float64 {0.0,0.0,0.0};_gabd .Range =[]float64 {-100,100,-100,100};return _gabd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdgbd *PdfShadingType5 )ToPdfObject ()_df .PdfObject {_fdgbd .PdfShading .ToPdfObject ();_bfegc ,_fadea :=_fdgbd .getShadingDict ();if _fadea !=nil {_gc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fdgbd .BitsPerCoordinate !=nil {_bfegc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fdgbd .BitsPerCoordinate );};if _fdgbd .BitsPerComponent !=nil {_bfegc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdgbd .BitsPerComponent );
};if _fdgbd .VerticesPerRow !=nil {_bfegc .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fdgbd .VerticesPerRow );};if _fdgbd .Decode !=nil {_bfegc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fdgbd .Decode );};
if _fdgbd .Function !=nil {if len (_fdgbd .Function )==1{_bfegc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdgbd .Function [0].ToPdfObject ());}else {_dbgeg :=_df .MakeArray ();for _ ,_agad :=range _fdgbd .Function {_dbgeg .Append (_agad .ToPdfObject ());
};_bfegc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbgeg );};};return _fdgbd ._aedee ;};

// String returns a human readable description of `fontfile`.
func (_dbdag *fontFile )String ()string {_dfdcgc :="\u005b\u004e\u006f\u006e\u0065\u005d";if _dbdag ._dcdcb !=nil {_dfdcgc =_dbdag ._dcdcb .String ();};return _g .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_dbdag ._bdeac ,_dfdcgc );
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_cdcgd *PdfFunctionType0 )processSamples ()error {_egbc :=_ac .ResampleBytes (_cdcgd ._adgec ,_cdcgd .BitsPerSample );_cdcgd ._ebfeb =_egbc ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_adc *PdfAnnotationPolygon )ToPdfObject ()_df .PdfObject {_adc .PdfAnnotation .ToPdfObject ();_fega :=_adc ._bef ;_gaaa :=_fega .PdfObject .(*_df .PdfObjectDictionary );_adc .PdfAnnotationMarkup .appendToPdfDictionary (_gaaa );_gaaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_gaaa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_adc .Vertices );_gaaa .SetIfNotNil ("\u004c\u0045",_adc .LE );_gaaa .SetIfNotNil ("\u0042\u0053",_adc .BS );_gaaa .SetIfNotNil ("\u0049\u0043",_adc .IC );_gaaa .SetIfNotNil ("\u0042\u0045",_adc .BE );
_gaaa .SetIfNotNil ("\u0049\u0054",_adc .IT );_gaaa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_adc .Measure );return _fega ;};func _efdf ()string {_bbcc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _dedg _dga .Buffer ;for _afaba :=0;_afaba < 6;_afaba ++{_dedg .WriteRune (rune (_bbcc [_ba .Intn (len (_bbcc ))]));};return _dedg .String ();};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_geddb *_df .PdfIndirectObject ;};func (_aadfg *PdfWriter )writeTrailer (_cbec int ){_aadfg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _feeac :=0;_feeac <=_cbec ;{for ;_feeac <=_cbec ;_feeac ++{_gabbd ,_ddbcg :=_aadfg ._bebee [_feeac ];if _ddbcg &&(!_aadfg ._aaegc ||_aadfg ._aaegc &&(_gabbd .Type ==1&&_gabbd .Offset >=_aadfg ._gefdd ||_gabbd .Type ==0)){break ;};};var _cceddc int ;
for _cceddc =_feeac +1;_cceddc <=_cbec ;_cceddc ++{_ebage ,_dfdd :=_aadfg ._bebee [_cceddc ];if _dfdd &&(!_aadfg ._aaegc ||_aadfg ._aaegc &&(_ebage .Type ==1&&_ebage .Offset > _aadfg ._gefdd )){continue ;};break ;};_cdebe :=_g .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_feeac ,_cceddc -_feeac );
_aadfg .writeString (_cdebe );for _ceagg :=_feeac ;_ceagg < _cceddc ;_ceagg ++{_gfgec :=_aadfg ._bebee [_ceagg ];switch _gfgec .Type {case 0:_cdebe =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_aadfg .writeString (_cdebe );case 1:_cdebe =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gfgec .Offset ,0);_aadfg .writeString (_cdebe );};};_feeac =_cceddc +1;};_bcccb :=_df .MakeDict ();_bcccb .Set ("\u0049\u006e\u0066\u006f",_aadfg ._eadb );
_bcccb .Set ("\u0052\u006f\u006f\u0074",_aadfg ._dddgcc );_bcccb .Set ("\u0053\u0069\u007a\u0065",_df .MakeInteger (int64 (_cbec +1)));if _aadfg ._aaegc &&_aadfg ._fcegd > 0{_bcccb .Set ("\u0050\u0072\u0065\u0076",_df .MakeInteger (_aadfg ._fcegd ));};
if _aadfg ._gfda !=nil {_bcccb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_aadfg ._dfeeb );};if _aadfg ._gbaag ==nil &&_aadfg ._cecfgg !=""&&_aadfg ._dfabe !=""{_aadfg ._gbaag =_df .MakeArray (_df .MakeHexString (_aadfg ._cecfgg ),_df .MakeHexString (_aadfg ._dfabe ));
};if _aadfg ._gbaag !=nil {_bcccb .Set ("\u0049\u0044",_aadfg ._gbaag );_gc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_aadfg ._gbaag );};_aadfg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_aadfg .writeString (_bcccb .WriteString ());
_aadfg .writeString ("\u000a");};

// ToPdfObject implements interface PdfModel.
func (_gad *PdfActionGoTo3DView )ToPdfObject ()_df .PdfObject {_gad .PdfAction .ToPdfObject ();_bff :=_gad ._de ;_agc :=_bff .PdfObject .(*_df .PdfObjectDictionary );_agc .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeGoTo3DView )));_agc .SetIfNotNil ("\u0054\u0041",_gad .TA );
_agc .SetIfNotNil ("\u0056",_gad .V );return _bff ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ecaga byte )byte ;

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ge :=NewPdfAction ();_bb :=&PdfActionGoToE {};_bb .PdfAction =_ge ;_ge .SetContext (_bb );return _bb ;};func (_abdcfb *PdfWriter )optimize ()error {if _abdcfb ._adbbc ==nil {return nil ;};var _agbag error ;_abdcfb ._ccdbg ,_agbag =_abdcfb ._adbbc .Optimize (_abdcfb ._ccdbg );
if _agbag !=nil {return _agbag ;};_bdffe :=make (map[_df .PdfObject ]struct{},len (_abdcfb ._ccdbg ));for _ ,_fbaac :=range _abdcfb ._ccdbg {_bdffe [_fbaac ]=struct{}{};};_abdcfb ._efced =_bdffe ;return nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fggf *Image )Resample (targetBitsPerComponent int64 ){if _fggf .BitsPerComponent ==targetBitsPerComponent {return ;};_ebga :=_fggf .GetSamples ();if targetBitsPerComponent < _fggf .BitsPerComponent {_bcbeb :=_fggf .BitsPerComponent -targetBitsPerComponent ;
for _abab :=range _ebga {_ebga [_abab ]>>=uint (_bcbeb );};}else if targetBitsPerComponent > _fggf .BitsPerComponent {_gbgda :=targetBitsPerComponent -_fggf .BitsPerComponent ;for _gbaa :=range _ebga {_ebga [_gbaa ]<<=uint (_gbgda );};};_fggf .BitsPerComponent =targetBitsPerComponent ;
if _fggf .BitsPerComponent < 8{_fggf .resampleLowBits (_ebga );return ;};_bdfgf :=_fbg .BytesPerLine (int (_fggf .Width ),int (_fggf .BitsPerComponent ),_fggf .ColorComponents );_debfe :=make ([]byte ,_bdfgf *int (_fggf .Height ));var (_geaag ,_cbgg ,_dgcab ,_dffcdd int ;
_geadc uint32 ;);for _dgcab =0;_dgcab < int (_fggf .Height );_dgcab ++{_geaag =_dgcab *_bdfgf ;_cbgg =(_dgcab +1)*_bdfgf -1;_gbbdc :=_ac .ResampleUint32 (_ebga [_geaag :_cbgg ],int (targetBitsPerComponent ),8);for _dffcdd ,_geadc =range _gbbdc {_debfe [_dffcdd +_geaag ]=byte (_geadc );
};};_fggf .Data =_debfe ;};

// SetContext sets the sub action (context).
func (_bd *PdfAction )SetContext (ctx PdfModel ){_bd ._eg =ctx };

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_acgd DefaultImageHandler )NewGrayImageFromGoImage (goimg _cd .Image )(*Image ,error ){_fdbd :=goimg .Bounds ();_cbcac :=&Image {Width :int64 (_fdbd .Dx ()),Height :int64 (_fdbd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gbddg :=goimg .(type ){case *_cd .Gray :if len (_gbddg .Pix )!=_fdbd .Dx ()*_fdbd .Dy (){_bceaa ,_aagfc :=_fbg .GrayConverter .Convert (goimg );
if _aagfc !=nil {return nil ,_aagfc ;};_cbcac .Data =_bceaa .Pix ();}else {_cbcac .Data =_gbddg .Pix ;};case *_cd .Gray16 :_cbcac .BitsPerComponent =16;if len (_gbddg .Pix )!=_fdbd .Dx ()*_fdbd .Dy ()*2{_daeg ,_gfcgg :=_fbg .Gray16Converter .Convert (goimg );
if _gfcgg !=nil {return nil ,_gfcgg ;};_cbcac .Data =_daeg .Pix ();}else {_cbcac .Data =_gbddg .Pix ;};case _fbg .Image :_degce :=_gbddg .Base ();if _degce .ColorComponents ==1{_cbcac .BitsPerComponent =int64 (_degce .BitsPerComponent );_cbcac .Data =_degce .Data ;
return _cbcac ,nil ;};_dfgcf ,_cbebfaa :=_fbg .GrayConverter .Convert (goimg );if _cbebfaa !=nil {return nil ,_cbebfaa ;};_cbcac .Data =_dfgcf .Pix ();default:_bcab ,_abbgd :=_fbg .GrayConverter .Convert (goimg );if _abbgd !=nil {return nil ,_abbgd ;};
_cbcac .Data =_bcab .Pix ();};return _cbcac ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gggf :=&PdfColorspaceCalRGB {};_gggf .BlackPoint =[]float64 {0.0,0.0,0.0};_gggf .Gamma =[]float64 {1.0,1.0,1.0};_gggf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gggf ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_efbea *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _efbea ._bbdg .(*PdfTilingPattern );};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _df .PdfObject ;T _df .PdfObject ;Operation _df .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_bfcc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// Y returns the value of the yellow component of the color.
func (_aaed *PdfColorDeviceCMYK )Y ()float64 {return _aaed [2]};

// IsColored specifies if the pattern is colored.
func (_dgegd *PdfTilingPattern )IsColored ()bool {if _dgegd .PaintType !=nil &&*_dgegd .PaintType ==1{return true ;};return false ;};func (_efgdd *PdfReader )lookupPageByObject (_gbdde _df .PdfObject )(*PdfPage ,error ){return nil ,_cab .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// BaseFont returns the font's "BaseFont" field.
func (_eeeab *PdfFont )BaseFont ()string {return _eeeab .baseFields ()._gbgf };

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cgbgg *PdfPage )AppendContentStream (contentStr string )error {_gdabc ,_bgdde :=_cgbgg .GetContentStreams ();if _bgdde !=nil {return _bgdde ;};if len (_gdabc )==0{_gdabc =[]string {contentStr };return _cgbgg .SetContentStreams (_gdabc ,_df .NewFlateEncoder ());
};var _cfedce _dga .Buffer ;_cfedce .WriteString (_gdabc [len (_gdabc )-1]);_cfedce .WriteString ("\u000a");_cfedce .WriteString (contentStr );_gdabc [len (_gdabc )-1]=_cfedce .String ();return _cgbgg .SetContentStreams (_gdabc ,_df .NewFlateEncoder ());
};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_acggc *PdfSignature )GetDocMDPPermission ()(_ggd .DocMDPPermission ,bool ){for _ ,_gcbfb :=range _acggc .Reference .Elements (){if _egab ,_ggaaf :=_df .GetDict (_gcbfb );_ggaaf {if _bfaea ,_bgfea :=_df .GetNameVal (_egab .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_bgfea &&_bfaea =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _ggdfb ,_fecfb :=_df .GetDict (_egab .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fecfb {if P ,_beegb :=_df .GetIntVal (_ggdfb .Get ("\u0050"));_beegb {return _ggd .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_agd :=NewPdfAnnotation ();_fcgbg :=&PdfAnnotationInk {};_fcgbg .PdfAnnotation =_agd ;_fcgbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agd .SetContext (_fcgbg );return _fcgbg ;};func (_cgd *PdfReader )newPdfActionThreadFromDict (_afcg *_df .PdfObjectDictionary )(*PdfActionThread ,error ){_gbd ,_dgge :=_ddfg (_afcg .Get ("\u0046"));
if _dgge !=nil {return nil ,_dgge ;};return &PdfActionThread {D :_afcg .Get ("\u0044"),B :_afcg .Get ("\u0042"),F :_gbd },nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_gebgc *XObjectForm )GetContainingPdfObject ()_df .PdfObject {return _gebgc ._aefcd };

// SetContext set the sub annotation (context).
func (_dddc *PdfShading )SetContext (ctx PdfModel ){_dddc ._aceab =ctx };

// Evaluate runs the function on the passed in slice and returns the results.
func (_egcg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_egcg .NumInputs {_gc .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cab .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _egcg ._ebfeb ==nil {_afce :=_egcg .processSamples ();if _afce !=nil {return nil ,_afce ;};};_fabb :=_egcg .Encode ;if _fabb ==nil {_fabb =[]float64 {};
for _aade :=0;_aade < len (_egcg .Size );_aade ++{_fabb =append (_fabb ,0);_fabb =append (_fabb ,float64 (_egcg .Size [_aade ]-1));};};_eedfg :=_egcg .Decode ;if _eedfg ==nil {_eedfg =_egcg .Range ;};_cfgg :=make ([]int ,len (x ));for _egeab :=0;_egeab < len (x );
_egeab ++{_ggdba :=x [_egeab ];_gaaec :=_bf .Min (_bf .Max (_ggdba ,_egcg .Domain [2*_egeab ]),_egcg .Domain [2*_egeab +1]);_befe :=_fbg .LinearInterpolate (_gaaec ,_egcg .Domain [2*_egeab ],_egcg .Domain [2*_egeab +1],_fabb [2*_egeab ],_fabb [2*_egeab +1]);
_fbbd :=_bf .Min (_bf .Max (_befe ,0),float64 (_egcg .Size [_egeab ]-1));_bfddd :=int (_bf .Floor (_fbbd +0.5));if _bfddd < 0{_bfddd =0;}else if _bfddd > _egcg .Size [_egeab ]{_bfddd =_egcg .Size [_egeab ]-1;};_cfgg [_egeab ]=_bfddd ;};_bgeaf :=_cfgg [0];
for _dfaee :=1;_dfaee < _egcg .NumInputs ;_dfaee ++{_bggd :=_cfgg [_dfaee ];for _ecace :=0;_ecace < _dfaee ;_ecace ++{_bggd *=_egcg .Size [_ecace ];};_bgeaf +=_bggd ;};_bgeaf *=_egcg .NumOutputs ;var _fcde []float64 ;for _cecba :=0;_cecba < _egcg .NumOutputs ;
_cecba ++{_gegcg :=_bgeaf +_cecba ;if _gegcg >=len (_egcg ._ebfeb ){_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_abea :=_egcg ._ebfeb [_gegcg ];_fbcd :=_fbg .LinearInterpolate (float64 (_abea ),0,_bf .Pow (2,float64 (_egcg .BitsPerSample )),_eedfg [2*_cecba ],_eedfg [2*_cecba +1]);_afed :=_bf .Min (_bf .Max (_fbcd ,_egcg .Range [2*_cecba ]),_egcg .Range [2*_cecba +1]);
_fcde =append (_fcde ,_afed );};return _fcde ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_abfa *PdfPage )SetContentStreams (cStreams []string ,encoder _df .StreamEncoder )error {if len (cStreams )==0{_abfa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_df .NewRawEncoder ();};var _bgabd []*_df .PdfObjectStream ;for _ ,_faadb :=range cStreams {_ccfbe :=&_df .PdfObjectStream {};
_ffbg :=encoder .MakeStreamDict ();_agbff ,_edbee :=encoder .EncodeBytes ([]byte (_faadb ));if _edbee !=nil {return _edbee ;};_ffbg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_df .MakeInteger (int64 (len (_agbff ))));_ccfbe .PdfObjectDictionary =_ffbg ;
_ccfbe .Stream =_agbff ;_bgabd =append (_bgabd ,_ccfbe );};if len (_bgabd )==1{_abfa .Contents =_bgabd [0];}else {_dacb :=_df .MakeArray ();for _ ,_eeaeb :=range _bgabd {_dacb .Append (_eeaeb );};_abfa .Contents =_dacb ;};return nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cedad :=PdfPage {};_cedad ._aaee =_df .MakeDict ();_cedad .Resources =NewPdfPageResources ();_efcag :=_df .PdfIndirectObject {};_efcag .PdfObject =_cedad ._aaee ;_cedad ._dgbagf =&_efcag ;return &_cedad ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gagc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gagc .Alternate ==nil {_gc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gagc .N ==1{_gc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_edab :=NewPdfColorspaceDeviceGray ();return _edab .ColorToRGB (color );}else if _gagc .N ==3{_gc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gagc .N ==4{_gc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bgcb :=NewPdfColorspaceDeviceCMYK ();return _bgcb .ColorToRGB (color );}else {return nil ,_cab .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gagc );
return _gagc .Alternate .ColorToRGB (color );};var (_bage =_cfb .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_agfeb =_cfb .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_gcgd =_cfb .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_ffce ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_ccde ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cbca ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_ggac *PdfReader )newPdfAnnotationLineFromDict (_aaefd *_df .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_dfcf :=PdfAnnotationLine {};_fgbe ,_cgce :=_ggac .newPdfAnnotationMarkupFromDict (_aaefd );if _cgce !=nil {return nil ,_cgce ;};_dfcf .PdfAnnotationMarkup =_fgbe ;
_dfcf .L =_aaefd .Get ("\u004c");_dfcf .BS =_aaefd .Get ("\u0042\u0053");_dfcf .LE =_aaefd .Get ("\u004c\u0045");_dfcf .IC =_aaefd .Get ("\u0049\u0043");_dfcf .LL =_aaefd .Get ("\u004c\u004c");_dfcf .LLE =_aaefd .Get ("\u004c\u004c\u0045");_dfcf .Cap =_aaefd .Get ("\u0043\u0061\u0070");
_dfcf .IT =_aaefd .Get ("\u0049\u0054");_dfcf .LLO =_aaefd .Get ("\u004c\u004c\u004f");_dfcf .CP =_aaefd .Get ("\u0043\u0050");_dfcf .Measure =_aaefd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_dfcf .CO =_aaefd .Get ("\u0043\u004f");return &_dfcf ,nil ;
};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_cbdd *OutlineItem )Insert (index uint ,item *OutlineItem ){_cegbd :=uint (len (_cbdd .Entries ));if index > _cegbd {index =_cegbd ;};_cbdd .Entries =append (_cbdd .Entries [:index ],append ([]*OutlineItem {item },_cbdd .Entries [index :]...)...);
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_abdca *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_abdca .Base .GetNumComponents ();_bbbb :=int (vals [0])*N ;
if _bbbb < 0||(_bbbb +N -1)>=len (_abdca ._fcfb ){_gc .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bbbb );return nil ,ErrColorOutOfRange ;};_faebd :=_abdca ._fcfb [_bbbb :_bbbb +N ];
var _dfce []float64 ;for _ ,_bfec :=range _faebd {_dfce =append (_dfce ,float64 (_bfec )/255.0);};_acfe ,_fbcag :=_abdca .Base .ColorFromFloats (_dfce );if _fbcag !=nil {return nil ,_fbcag ;};return _acfe ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_afdcf *XObjectImage )ToImage ()(*Image ,error ){_aceeb :=&Image {};if _afdcf .Height ==nil {return nil ,_cab .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_aceeb .Height =*_afdcf .Height ;if _afdcf .Width ==nil {return nil ,_cab .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aceeb .Width =*_afdcf .Width ;if _afdcf .BitsPerComponent ==nil {switch _afdcf .Filter .(type ){case *_df .CCITTFaxEncoder ,*_df .JBIG2Encoder :_aceeb .BitsPerComponent =1;
case *_df .LZWEncoder ,*_df .RunLengthEncoder :_aceeb .BitsPerComponent =8;default:return nil ,_cab .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_aceeb .BitsPerComponent =*_afdcf .BitsPerComponent ;};_aceeb .ColorComponents =_afdcf .ColorSpace .GetNumComponents ();_afdcf ._bbbgb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_df .MakeInteger (int64 (_aceeb .ColorComponents )));
_fbbgd ,_eadbg :=_df .DecodeStream (_afdcf ._bbbgb );if _eadbg !=nil {return nil ,_eadbg ;};_aceeb .Data =_fbbgd ;if _afdcf .Decode !=nil {_afaga ,_daecca :=_afdcf .Decode .(*_df .PdfObjectArray );if !_daecca {_gc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cab .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_fbded ,_egdga :=_afaga .ToFloat64Array ();if _egdga !=nil {return nil ,_egdga ;};_aceeb ._afgg =_fbded ;};return _aceeb ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_dfge *OutlineItem )Add (item *OutlineItem ){_dfge .Entries =append (_dfge .Entries ,item )};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_acege *pdfFontSimple )ToPdfObject ()_df .PdfObject {if _acege ._fgeg ==nil {_acege ._fgeg =&_df .PdfIndirectObject {};};_gcga :=_acege .baseFields ().asPdfObjectDictionary ("");_acege ._fgeg .PdfObject =_gcga ;if _acege .FirstChar !=nil {_gcga .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_acege .FirstChar );
};if _acege .LastChar !=nil {_gcga .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_acege .LastChar );};if _acege .Widths !=nil {_gcga .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_acege .Widths );};if _acege .Encoding !=nil {_gcga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acege .Encoding );
}else if _acege ._agga !=nil {_daeff :=_acege ._agga .ToPdfObject ();if _daeff !=nil {_gcga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_daeff );};};return _acege ._fgeg ;};func _acbae (_decf *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_decf }};


// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_dfe :=NewPdfAction ();_bg :=&PdfActionGoToR {};_bg .PdfAction =_dfe ;_dfe .SetContext (_bg );return _bg ;};

// ToPdfObject implements interface PdfModel.
func (_geb *PdfActionSetOCGState )ToPdfObject ()_df .PdfObject {_geb .PdfAction .ToPdfObject ();_bac :=_geb ._de ;_ffg :=_bac .PdfObject .(*_df .PdfObjectDictionary );_ffg .SetIfNotNil ("\u0053",_df .MakeName (string (ActionTypeSetOCGState )));_ffg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_geb .State );
_ffg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_geb .PreserveRB );return _bac ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fcagc *PdfPattern )IsShading ()bool {return _fcagc .PatternType ==2};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bbac :=NewPdfAnnotation ();_acb :=&PdfAnnotationWidget {};_acb .PdfAnnotation =_bbac ;_bbac .SetContext (_acb );return _acb ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_df .PdfObject ;};func _geffg (_ebggc *[]*PdfField ,_cged FieldFilterFunc ,_adddf bool )[]*PdfField {if _ebggc ==nil {return nil ;};_eddf :=*_ebggc ;if len (*_ebggc )==0{return nil ;
};_dffca :=_eddf [:0];if _cged ==nil {_cged =func (*PdfField )bool {return true };};var _cgae []*PdfField ;for _ ,_adfeb :=range _eddf {_cbgee :=_cged (_adfeb );if _cbgee {_cgae =append (_cgae ,_adfeb );if len (_adfeb .Kids )> 0{_cgae =append (_cgae ,_geffg (&_adfeb .Kids ,_cged ,_adddf )...);
};};if !_adddf ||!_cbgee ||len (_adfeb .Kids )> 0{_dffca =append (_dffca ,_adfeb );};};*_ebggc =_dffca ;return _cgae ;};func (_dbbg *PdfReader )newPdfAnnotationScreenFromDict (_aegd *_df .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ebc :=PdfAnnotationScreen {};
_ebc .T =_aegd .Get ("\u0054");_ebc .MK =_aegd .Get ("\u004d\u004b");_ebc .A =_aegd .Get ("\u0041");_ebc .AA =_aegd .Get ("\u0041\u0041");return &_ebc ,nil ;};func _eecde (_fgfcd map[_aec .GID ]int ,_edba uint16 )*_df .PdfObjectArray {_adee :=&_df .PdfObjectArray {};
_affe :=_aec .GID (_edba );for _dagdf :=_aec .GID (0);_dagdf < _affe ;{_febg ,_cdee :=_fgfcd [_dagdf ];if !_cdee {_dagdf ++;continue ;};_edaac :=_dagdf ;for _bagd :=_edaac +1;_bagd < _affe ;_bagd ++{if _dfdcg ,_debae :=_fgfcd [_bagd ];!_debae ||_febg !=_dfdcg {break ;
};_edaac =_bagd ;};_adee .Append (_df .MakeInteger (int64 (_dagdf )));_adee .Append (_df .MakeInteger (int64 (_edaac )));_adee .Append (_df .MakeInteger (int64 (_febg )));_dagdf =_edaac +1;};return _adee ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bbbab *PdfPageResources )GenerateXObjectName ()_df .PdfObjectName {_ceebg :=1;for {_caacaf :=_df .MakeName (_g .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_ceebg ));if !_bbbab .HasXObjectByName (*_caacaf ){return *_caacaf ;};_ceebg ++;};};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_df .PdfObjectName ;P *_df .PdfObjectInteger ;V *_df .PdfObjectName ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_cecf :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_cecf ;};

// C returns the value of the cyan component of the color.
func (_cbeea *PdfColorDeviceCMYK )C ()float64 {return _cbeea [0]};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_bfbgc *_bee .Document )error ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _bcbee (_bada *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bada }};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_aeeca *PdfShading )GetContainingPdfObject ()_df .PdfObject {return _aeeca ._aedee };

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _df .StreamEncoder ;Intent _df .PdfObject ;ImageMask _df .PdfObject ;Mask _df .PdfObject ;Matte _df .PdfObject ;Decode _df .PdfObject ;Interpolate _df .PdfObject ;Alternatives _df .PdfObject ;
SMask _df .PdfObject ;SMaskInData _df .PdfObject ;Name _df .PdfObject ;StructParent _df .PdfObject ;ID _df .PdfObject ;OPI _df .PdfObject ;Metadata _df .PdfObject ;OC _df .PdfObject ;Stream []byte ;_bbbgb *_df .PdfObjectStream ;};func _febd (_feaa *XObjectForm )(*PdfRectangle ,error ){if _fbddc ,_cdcbf :=_feaa .BBox .(*_df .PdfObjectArray );
_cdcbf {_cadc ,_fdebc :=NewPdfRectangle (*_fbddc );if _fdebc !=nil {return nil ,_fdebc ;};if _adbc ,_bdcd :=_feaa .Matrix .(*_df .PdfObjectArray );_bdcd {_abgd ,_fbab :=_adbc .ToFloat64Array ();if _fbab !=nil {return nil ,_fbab ;};_abce :=_ec .IdentityMatrix ();
if len (_abgd )==6{_abce =_ec .NewMatrix (_abgd [0],_abgd [1],_abgd [2],_abgd [3],_abgd [4],_abgd [5]);};_cadc .Transform (_abce );return _cadc ,nil ;};};return nil ,_cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// GetPageDict converts the Page to a PDF object dictionary.
func (_agba *PdfPage )GetPageDict ()*_df .PdfObjectDictionary {_aeagf :=_agba ._aaee ;_aeagf .Clear ();_aeagf .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050\u0061\u0067\u0065"));_aeagf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agba .Parent );
if _agba .LastModified !=nil {_aeagf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_agba .LastModified .ToPdfObject ());};if _agba .Resources !=nil {_aeagf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_agba .Resources .ToPdfObject ());
};if _agba .CropBox !=nil {_aeagf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_agba .CropBox .ToPdfObject ());};if _agba .MediaBox !=nil {_aeagf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_agba .MediaBox .ToPdfObject ());};if _agba .BleedBox !=nil {_aeagf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_agba .BleedBox .ToPdfObject ());
};if _agba .TrimBox !=nil {_aeagf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_agba .TrimBox .ToPdfObject ());};if _agba .ArtBox !=nil {_aeagf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_agba .ArtBox .ToPdfObject ());};_aeagf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_agba .BoxColorInfo );
_aeagf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_agba .Contents );if _agba .Rotate !=nil {_aeagf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_df .MakeInteger (*_agba .Rotate ));};_aeagf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_agba .Group );
_aeagf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_agba .Thumb );_aeagf .SetIfNotNil ("\u0042",_agba .B );_aeagf .SetIfNotNil ("\u0044\u0075\u0072",_agba .Dur );_aeagf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_agba .Trans );_aeagf .SetIfNotNil ("\u0041\u0041",_agba .AA );
_aeagf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_agba .Metadata );_aeagf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_agba .PieceInfo );_aeagf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_agba .StructParents );
_aeagf .SetIfNotNil ("\u0049\u0044",_agba .ID );_aeagf .SetIfNotNil ("\u0050\u005a",_agba .PZ );_aeagf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_agba .SeparationInfo );_aeagf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_agba .Tabs );
_aeagf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_agba .TemplateInstantiated );_aeagf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_agba .PresSteps );_aeagf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_agba .UserUnit );
_aeagf .SetIfNotNil ("\u0056\u0050",_agba .VP );if _agba ._fgbc !=nil {_baef :=_df .MakeArray ();for _ ,_ggdeg :=range _agba ._fgbc {if _cfgac :=_ggdeg .GetContext ();_cfgac !=nil {_baef .Append (_cfgac .ToPdfObject ());}else {_baef .Append (_ggdeg .ToPdfObject ());
};};if _baef .Len ()> 0{_aeagf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_baef );};}else if _agba .Annots !=nil {_aeagf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_agba .Annots );};return _aeagf ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_addaa *_df .PdfObjectDictionary ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_df .PdfObjectArray ;ExtGState _df .PdfObject ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_bebab *PdfReader )PageFromIndirectObject (ind *_df .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_bebab .PageList )!=len (_bebab ._fgec ){return nil ,0,_cab .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _cced ,_bgdab :=range _bebab ._fgec {if _bgdab ==ind {return _bebab .PageList [_cced ],_cced +1,nil ;};};return nil ,0,_cab .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_efgf *PdfAppender )Write (w _dg .Writer )error {if _efgf ._fbde {return _cab .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_bbag :=NewPdfWriter ();_cbag ,_agec :=_df .GetDict (_bbag ._fabbf );if !_agec {return _cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bgdc ,_agec :=_cbag .Get ("\u004b\u0069\u0064\u0073").(*_df .PdfObjectArray );if !_agec {return _cab .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bdce ,_agec :=_cbag .Get ("\u0043\u006f\u0075n\u0074").(*_df .PdfObjectInteger );if !_agec {return _cab .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dccf :=_efgf ._cfaba ._ecafc ;_cbdb :=_dccf .GetTrailer ();if _cbdb ==nil {return _cab .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_acff ,_agec :=_df .GetIndirect (_cbdb .Get ("\u0052\u006f\u006f\u0074"));
if !_agec {return _cab .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_bdec ,_agec :=_df .GetDict (_acff );if !_agec {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_acff ,*_cbdb );
return _cab .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_fgaa :=range _bdec .Keys (){if _bbag ._dffed .Get (_fgaa )==nil {_cccd :=_bdec .Get (_fgaa );_bbag ._dffed .Set (_fgaa ,_cccd );};};if _efgf ._bcf !=nil {_bbag ._dffed .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_efgf ._bcf .ToPdfObject ());
_efgf .updateObjectsDeep (_efgf ._bcf .ToPdfObject (),nil );};if _efgf ._aed !=nil {_efgf .updateObjectsDeep (_efgf ._aed .ToPdfObject (),nil );_bbag ._dffed .Set ("\u0044\u0053\u0053",_efgf ._aed .GetContainingPdfObject ());};if _efgf ._fgffb !=nil {_bbag ._dffed .Set ("\u0050\u0065\u0072m\u0073",_efgf ._fgffb .ToPdfObject ());
_efgf .updateObjectsDeep (_efgf ._fgffb .ToPdfObject (),nil );};if _bbag ._ggaaa .Major < 2{_bbag .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_bbag .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _ggfe ,_ddce :=_df .GetDict (_cbdb .Get ("\u0049\u006e\u0066\u006f"));
_ddce {if _acdb ,_bgfe :=_df .GetDict (_bbag ._eadb );_bgfe {for _ ,_cgfe :=range _ggfe .Keys (){if _acdb .Get (_cgfe )==nil {_acdb .Set (_cgfe ,_ggfe .Get (_cgfe ));};};};};if _efgf ._ggdef !=nil {_bbag ._eadb =_df .MakeIndirectObject (_efgf ._ggdef .ToPdfObject ());
};_efgf .addNewObject (_bbag ._eadb );_efgf .addNewObject (_bbag ._dddgcc );_fbgb :=false ;if len (_efgf ._cfaba .PageList )!=len (_efgf ._ceee ){_fbgb =true ;}else {for _gbdca :=range _efgf ._cfaba .PageList {switch {case _efgf ._ceee [_gbdca ]==_efgf ._cfaba .PageList [_gbdca ]:case _efgf ._ceee [_gbdca ]==_efgf .Reader .PageList [_gbdca ]:default:_fbgb =true ;
};if _fbgb {break ;};};};if _fbgb {_efgf .updateObjectsDeep (_bbag ._fabbf ,nil );}else {_efgf ._efb [_bbag ._fabbf ]=struct{}{};};_bbag ._fabbf .ObjectNumber =_efgf .Reader ._edded .ObjectNumber ;_efgf ._gaaca [_bbag ._fabbf ]=_efgf .Reader ._edded .ObjectNumber ;
_bgaee :=[]_df .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_bfcb :=range _efgf ._ceee {_beggc :=_bfcb .ToPdfObject ();
*_bdce =*_bdce +1;if _cgdgg ,_adbfd :=_beggc .(*_df .PdfIndirectObject );_adbfd &&_cgdgg .GetParser ()==_efgf ._cfaba ._ecafc {_bgdc .Append (&_cgdgg .PdfObjectReference );continue ;};if _gcag ,_decd :=_df .GetDict (_beggc );_decd {_dbegf ,_ffd :=_gcag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_df .PdfIndirectObject );
for _ffd {_gc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbegf );_bdbd ,_acba :=_dbegf .PdfObject .(*_df .PdfObjectDictionary );if !_acba {return _cab .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_egag :=range _bgaee {_gc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egag );if _gcag .Get (_egag )!=nil {_gc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gedf :=_bdbd .Get (_egag );_gedf !=nil {_gc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egag );_gcag .Set (_egag ,_gedf );};};_dbegf ,_ffd =_bdbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_df .PdfIndirectObject );
_gc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bdbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gcag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbag ._fabbf );};_efgf .updateObjectsDeep (_beggc ,nil );
_bgdc .Append (_beggc );};if _ ,_cccb :=_efgf ._eeddb .Seek (0,_dg .SeekStart );_cccb !=nil {return _cccb ;};_fce :=make (map[SignatureHandler ]_dg .Writer );_fcab :=_df .MakeArray ();for _ ,_cacd :=range _efgf ._gegc {if _bdbg ,_cedg :=_df .GetIndirect (_cacd );
_cedg {if _edaa ,_agfe :=_bdbg .PdfObject .(*pdfSignDictionary );_agfe {_ccda :=*_edaa ._gdegb ;var _eddab error ;_fce [_ccda ],_eddab =_ccda .NewDigest (_edaa ._cbbcg );if _eddab !=nil {return _eddab ;};_fcab .Append (_df .MakeInteger (0xfffff),_df .MakeInteger (0xfffff));
};};};if _fcab .Len ()> 0{_fcab .Append (_df .MakeInteger (0xfffff),_df .MakeInteger (0xfffff));};for _ ,_egd :=range _efgf ._gegc {if _dbcce ,_eaac :=_df .GetIndirect (_egd );_eaac {if _bbafg ,_fcffe :=_dbcce .PdfObject .(*pdfSignDictionary );_fcffe {_bbafg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fcab );
};};};_bbdb :=len (_fce )> 0;var _ebaec _dg .Reader =_efgf ._eeddb ;if _bbdb {_cbebf :=make ([]_dg .Writer ,0,len (_fce ));for _ ,_edae :=range _fce {_cbebf =append (_cbebf ,_edae );};_ebaec =_dg .TeeReader (_efgf ._eeddb ,_dg .MultiWriter (_cbebf ...));
};_cgag ,_bade :=_dg .Copy (w ,_ebaec );if _bade !=nil {return _bade ;};if len (_efgf ._gegc )==0{return nil ;};_bbag ._ecdab =_cgag ;_bbag .ObjNumOffset =_efgf ._beb ;_bbag ._aaegc =true ;_bbag ._befag =_efgf ._ffae ;_bbag ._fcegd =_efgf ._ccfc ;_bbag ._gefdd =_efgf ._ebbdf ;
_bbag ._ggaaa =_efgf ._cfaba .PdfVersion ();_bbag ._geagg =_efgf ._gaaca ;_bbag ._gfda =_efgf ._fgcg .GetCrypter ();_bbag ._dfeeb =_efgf ._fgcg .GetEncryptObj ();_cddd :=_efgf ._fgcg .GetXrefType ();if _cddd !=nil {_ggbd :=*_cddd ==_df .XrefTypeObjectStream ;
_bbag ._aeacf =&_ggbd ;};_bbag ._efced =map[_df .PdfObject ]struct{}{};_bbag ._ccdbg =[]_df .PdfObject {};for _ ,_bcfc :=range _efgf ._gegc {if _ ,_agce :=_efgf ._efb [_bcfc ];_agce {continue ;};_bbag .addObject (_bcfc );};_gagb :=w ;if _bbdb {_gagb =_dga .NewBuffer (nil );
};if _efgf ._fgfc !=""&&_bbag ._gfda ==nil {_bbag .Encrypt ([]byte (_efgf ._fgfc ),[]byte (_efgf ._fgfc ),_efgf ._gaae );};if _bcbb :=_cbdb .Get ("\u0049\u0044");_bcbb !=nil {if _dcde ,_abbc :=_df .GetArray (_bcbb );_abbc {_bbag ._gbaag =_dcde ;};};if _adga :=_bbag .Write (_gagb );
_adga !=nil {return _adga ;};if _bbdb {_ffbb :=_gagb .(*_dga .Buffer ).Bytes ();_cefcf :=_df .MakeArray ();var _gba []*pdfSignDictionary ;var _gbba int64 ;for _ ,_afef :=range _bbag ._ccdbg {if _cabe ,_gdbg :=_df .GetIndirect (_afef );_gdbg {if _bfac ,_aadb :=_cabe .PdfObject .(*pdfSignDictionary );
_aadb {_gba =append (_gba ,_bfac );_bddb :=_bfac ._cggeg +int64 (_bfac ._efgbb );_cefcf .Append (_df .MakeInteger (_gbba ),_df .MakeInteger (_bddb -_gbba ));_gbba =_bfac ._cggeg +int64 (_bfac ._afedc );};};};_cefcf .Append (_df .MakeInteger (_gbba ),_df .MakeInteger (_cgag +int64 (len (_ffbb ))-_gbba ));
_aab :=[]byte (_cefcf .WriteString ());for _ ,_cdgd :=range _gba {_eeag :=int (_cdgd ._cggeg -_cgag );for _adad :=_cdgd ._geafe ;_adad < _cdgd ._ccecd ;_adad ++{_ffbb [_eeag +_adad ]=' ';};_gcge :=_ffbb [_eeag +_cdgd ._geafe :_eeag +_cdgd ._ccecd ];copy (_gcge ,_aab );
};var _ddfgg int ;for _ ,_cbgd :=range _gba {_ecbe :=int (_cbgd ._cggeg -_cgag );_egda :=_ffbb [_ddfgg :_ecbe +_cbgd ._efgbb ];_fgab :=*_cbgd ._gdegb ;_fce [_fgab ].Write (_egda );_ddfgg =_ecbe +_cbgd ._afedc ;};for _ ,_ddb :=range _gba {_gfff :=_ffbb [_ddfgg :];
_egf :=*_ddb ._gdegb ;_fce [_egf ].Write (_gfff );};for _ ,_babab :=range _gba {_faea :=int (_babab ._cggeg -_cgag );_cbee :=*_babab ._gdegb ;_agecc :=_fce [_cbee ];if _adcf :=_cbee .Sign (_babab ._cbbcg ,_agecc );_adcf !=nil {return _adcf ;};_babab ._cbbcg .ByteRange =_cefcf ;
_ggfeg :=[]byte (_babab ._cbbcg .Contents .WriteString ());for _bdeee :=_babab ._geafe ;_bdeee < _babab ._ccecd ;_bdeee ++{_ffbb [_faea +_bdeee ]=' ';};for _abbd :=_babab ._efgbb ;_abbd < _babab ._afedc ;_abbd ++{_ffbb [_faea +_abbd ]=' ';};_gafaf :=_ffbb [_faea +_babab ._geafe :_faea +_babab ._ccecd ];
copy (_gafaf ,_aab );_gafaf =_ffbb [_faea +_babab ._efgbb :_faea +_babab ._afedc ];copy (_gafaf ,_ggfeg );};_cgfb :=_dga .NewBuffer (_ffbb );_ ,_bade =_dg .Copy (w ,_cgfb );if _bade !=nil {return _bade ;};};_efgf ._fbde =true ;return nil ;};func (_bced *PdfWriter )writeAcroFormFields ()error {if _bced ._gdcfa ==nil {return nil ;
};_gc .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_gaaee :=_bced ._gdcfa .ToPdfObject ();_gc .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gaaee );
_bced ._dffed .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gaaee );_fbgbg :=_bced .addObjects (_gaaee );if _fbgbg !=nil {return _fbgbg ;};return nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _df .PdfObject ;V _df .PdfObject ;};func (_cggf *PdfWriter )writeObjects (){_gc .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cggf ._ccdbg ));_cggf ._bebee =make (map[int ]crossReference );
_cggf ._bebee [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cggf ._befag .ObjectMap !=nil {for _dacf ,_ecbgg :=range _cggf ._befag .ObjectMap {if _dacf ==0{continue ;};if _ecbgg .XType ==_df .XrefTypeObjectStream {_egfc :=crossReference {Type :2,ObjectNumber :_ecbgg .OsObjNumber ,Index :_ecbgg .OsObjIndex };
_cggf ._bebee [_dacf ]=_egfc ;};if _ecbgg .XType ==_df .XrefTypeTableEntry {_fbfce :=crossReference {Type :1,ObjectNumber :_ecbgg .ObjectNumber ,Offset :_ecbgg .Offset };_cggf ._bebee [_dacf ]=_fbfce ;};};};};func (_eff *PdfReader )newPdfAnnotationTextFromDict (_dfdg *_df .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gdeb :=PdfAnnotationText {};
_bda ,_bfde :=_eff .newPdfAnnotationMarkupFromDict (_dfdg );if _bfde !=nil {return nil ,_bfde ;};_gdeb .PdfAnnotationMarkup =_bda ;_gdeb .Open =_dfdg .Get ("\u004f\u0070\u0065\u006e");_gdeb .Name =_dfdg .Get ("\u004e\u0061\u006d\u0065");_gdeb .State =_dfdg .Get ("\u0053\u0074\u0061t\u0065");
_gdeb .StateModel =_dfdg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gdeb ,nil ;};func (_gafg *PdfReader )newPdfFieldFromIndirectObject (_egb *_df .PdfIndirectObject ,_aaba *PdfField )(*PdfField ,error ){if _agbc ,_ecae :=_gafg ._cggbe .GetModelFromPrimitive (_egb ).(*PdfField );
_ecae {return _agbc ,nil ;};_eccgc ,_faaf :=_df .GetDict (_egb );if !_faaf {return nil ,_g .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eefg :=NewPdfField ();_eefg ._gadcg =_egb ;_eefg ._gadcg .PdfObject =_eccgc ;if _acde ,_dbcg :=_df .GetName (_eccgc .Get ("\u0046\u0054"));_dbcg {_eefg .FT =_acde ;};if _aaba !=nil {_eefg .Parent =_aaba ;};_eefg .T ,_ =_eccgc .Get ("\u0054").(*_df .PdfObjectString );
_eefg .TU ,_ =_eccgc .Get ("\u0054\u0055").(*_df .PdfObjectString );_eefg .TM ,_ =_eccgc .Get ("\u0054\u004d").(*_df .PdfObjectString );_eefg .Ff ,_ =_eccgc .Get ("\u0046\u0066").(*_df .PdfObjectInteger );_eefg .V =_eccgc .Get ("\u0056");_eefg .DV =_eccgc .Get ("\u0044\u0056");
_eefg .AA =_eccgc .Get ("\u0041\u0041");if DA :=_eccgc .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_df .GetString (DA );_eefg .VariableText =&VariableText {DA :DA };Q ,_ :=_eccgc .Get ("\u0051").(*_df .PdfObjectInteger );DS ,_ :=_eccgc .Get ("\u0044\u0053").(*_df .PdfObjectString );
RV :=_eccgc .Get ("\u0052\u0056");_eefg .VariableText .Q =Q ;_eefg .VariableText .DS =DS ;_eefg .VariableText .RV =RV ;};_dabg :=_eefg .FT ;if _dabg ==nil &&_aaba !=nil {_dabg =_aaba .FT ;};if _dabg !=nil {switch *_dabg {case "\u0054\u0078":_cabeb ,_gdeba :=_dfab (_eccgc );
if _gdeba !=nil {return nil ,_gdeba ;};_cabeb .PdfField =_eefg ;_eefg ._cffe =_cabeb ;case "\u0043\u0068":_eedc ,_dbbge :=_dgceb (_eccgc );if _dbbge !=nil {return nil ,_dbbge ;};_eedc .PdfField =_eefg ;_eefg ._cffe =_eedc ;case "\u0042\u0074\u006e":_agcf ,_dggc :=_dgaca (_eccgc );
if _dggc !=nil {return nil ,_dggc ;};_agcf .PdfField =_eefg ;_eefg ._cffe =_agcf ;case "\u0053\u0069\u0067":_deeag ,_ecad :=_gafg .newPdfFieldSignatureFromDict (_eccgc );if _ecad !=nil {return nil ,_ecad ;};_deeag .PdfField =_eefg ;_eefg ._cffe =_deeag ;
default:_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_eefg .FT );return nil ,_cab .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bcge ,_acfc :=_df .GetName (_eccgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_acfc {if *_bcge =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bdecg ,_ddaf :=_gafg .newPdfAnnotationFromIndirectObject (_egb );if _ddaf !=nil {return nil ,_ddaf ;};
_gfafd ,_bggca :=_bdecg .GetContext ().(*PdfAnnotationWidget );if !_bggca {return nil ,_cab .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_gfafd ._bfda =_eefg ;_gfafd .Parent =_eefg ._gadcg ;
_eefg .Annotations =append (_eefg .Annotations ,_gfafd );return _eefg ,nil ;};};_ddgb :=true ;if _dafgf ,_cedgd :=_df .GetArray (_eccgc .Get ("\u004b\u0069\u0064\u0073"));_cedgd {_geaf :=make ([]*_df .PdfIndirectObject ,0,_dafgf .Len ());for _ ,_ggcf :=range _dafgf .Elements (){_badg ,_eeaef :=_df .GetIndirect (_ggcf );
if !_eeaef {_defg ,_ccbea :=_df .GetStream (_ggcf );if _ccbea &&_defg .PdfObjectDictionary !=nil {_ecdc ,_dgba :=_df .GetNameVal (_defg .Get ("\u0054\u0079\u0070\u0065"));if _dgba &&_ecdc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_gc .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cab .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_agcg ,_fadgc :=_df .GetDict (_badg );
if !_fadgc {return nil ,ErrTypeCheck ;};if _ddgb {_ddgb =!_cbfgc (_agcg );};_geaf =append (_geaf ,_badg );};for _ ,_fgaf :=range _geaf {if _ddgb {_fedd ,_acdba :=_gafg .newPdfAnnotationFromIndirectObject (_fgaf );if _acdba !=nil {_gc .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_acdba );
return nil ,_acdba ;};_eebcg ,_bbgc :=_fedd ._ged .(*PdfAnnotationWidget );if !_bbgc {return nil ,ErrTypeCheck ;};_eebcg ._bfda =_eefg ;_eefg .Annotations =append (_eefg .Annotations ,_eebcg );}else {_eccbb ,_afagb :=_gafg .newPdfFieldFromIndirectObject (_fgaf ,_eefg );
if _afagb !=nil {_gc .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_afagb );return nil ,_afagb ;};_eefg .Kids =append (_eefg .Kids ,_eccbb );
};};};return _eefg ,nil ;};func _ffdab ()_cb .Time {_dcdd .Lock ();defer _dcdd .Unlock ();return _dfbddb };

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _df .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _bcgg *_df .PdfIndirectObject ;var _cbcc *_df .PdfObjectName ;var _bcbg *_df .PdfObjectArray ;if _fdbb ,_ggbg :=obj .(*_df .PdfIndirectObject );
_ggbg {_bcgg =_fdbb ;};obj =_df .TraceToDirectObject (obj );switch _gadc :=obj .(type ){case *_df .PdfObjectArray :_bcbg =_gadc ;case *_df .PdfObjectName :_cbcc =_gadc ;};if _cbcc !=nil {switch *_cbcc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_gc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cbcc );return nil ,_dfagf ;};};if _bcbg !=nil &&_bcbg .Len ()> 0{var _dedfc _df .PdfObject =_bcgg ;
if _bcgg ==nil {_dedfc =_bcbg ;};if _eafcd ,_egcf :=_df .GetName (_bcbg .Get (0));_egcf {switch _eafcd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bcbg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bcbg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bcbg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _bbafc (_dedfc );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _adcd (_dedfc );
case "\u004c\u0061\u0062":return _edfd (_dedfc );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dgebf (_dedfc );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ebfg (_dedfc );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eagc (_dedfc );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _efaa (_dedfc );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _acdbf (_dedfc );default:_gc .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_eafcd );
};};};_gc .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dbda pdfFontType3 )GetRuneMetrics (r rune )(_aec .CharMetrics ,bool ){_eaad :=_dbda .Encoder ();if _eaad ==nil {_gc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dbda );
return _aec .CharMetrics {},false ;};_afdbf ,_fddgc :=_eaad .RuneToCharcode (r );if !_fddgc {if r !=' '{_gc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dbda );
};return _aec .CharMetrics {},false ;};_dcfc ,_adgce :=_dbda .GetCharMetrics (_afdbf );return _dcfc ,_adgce ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_df .PdfIndirectObject ;SV *_df .PdfIndirectObject ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_df .PdfObjectInteger ;BitsPerComponent *_df .PdfObjectInteger ;BitsPerFlag *_df .PdfObjectInteger ;Decode *_df .PdfObjectArray ;Function []PdfFunction ;};func (_gcff *PdfReader )traverseObjectData (_dbgd _df .PdfObject )error {return _df .ResolveReferencesDeep (_dbgd ,_gcff ._eafee );
};

// ToPdfObject implements interface PdfModel.
func (_begg *PdfAnnotationScreen )ToPdfObject ()_df .PdfObject {_begg .PdfAnnotation .ToPdfObject ();_gdgf :=_begg ._bef ;_gdb :=_gdgf .PdfObject .(*_df .PdfObjectDictionary );_gdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_gdb .SetIfNotNil ("\u0054",_begg .T );_gdb .SetIfNotNil ("\u004d\u004b",_begg .MK );_gdb .SetIfNotNil ("\u0041",_begg .A );_gdb .SetIfNotNil ("\u0041\u0041",_begg .AA );return _gdgf ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ebfbd *_df .PdfIndirectObject ;};

// Subtype returns the font's "Subtype" field.
func (_baecc *PdfFont )Subtype ()string {_bdgea :=_baecc .baseFields ()._fbegd ;if _bcad ,_afaf :=_baecc ._dfffe .(*pdfFontType0 );_afaf {_bdgea =_bdgea +"\u003a"+_bcad .DescendantFont .Subtype ();};return _bdgea ;};func (_ebgad *PdfWriter )writeObject (_ddgcgc int ,_adbcd _df .PdfObject ){_gc .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_ddgcgc );
if _efegc ,_adde :=_adbcd .(*_df .PdfIndirectObject );_adde {_ebgad ._bebee [_ddgcgc ]=crossReference {Type :1,Offset :_ebgad ._debcg ,Generation :_efegc .GenerationNumber };_ffafd :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ddgcgc );
if _aedafa ,_cebab :=_efegc .PdfObject .(*pdfSignDictionary );_cebab {_aedafa ._cggeg =_ebgad ._debcg +int64 (len (_ffafd ));};if _efegc .PdfObject ==nil {_gc .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_efegc .PdfObject =_df .MakeNull ();};_ffafd +=_efegc .PdfObject .WriteString ();_ffafd +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_ebgad .writeString (_ffafd );return ;};if _aeafg ,_fefc :=_adbcd .(*_df .PdfObjectStream );_fefc {_ebgad ._bebee [_ddgcgc ]=crossReference {Type :1,Offset :_ebgad ._debcg ,Generation :_aeafg .GenerationNumber };
_fdfgf :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ddgcgc );_fdfgf +=_aeafg .PdfObjectDictionary .WriteString ();_fdfgf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebgad .writeString (_fdfgf );_ebgad .writeBytes (_aeafg .Stream );
_ebgad .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gdabb ,_afac :=_adbcd .(*_df .PdfObjectStreams );_afac {_ebgad ._bebee [_ddgcgc ]=crossReference {Type :1,Offset :_ebgad ._debcg ,Generation :_gdabb .GenerationNumber };
_aaedc :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ddgcgc );var _dagfa []string ;var _efffa string ;var _fagca int64 ;for _ebege ,_bbfdbd :=range _gdabb .Elements (){_abgeb ,_afdfe :=_bbfdbd .(*_df .PdfIndirectObject );if !_afdfe {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_ddgcgc ,_bbfdbd );
continue ;};_fggbd :=_abgeb .PdfObject .WriteString ()+"\u0020";_efffa =_efffa +_fggbd ;_dagfa =append (_dagfa ,_g .Sprintf ("\u0025\u0064\u0020%\u0064",_abgeb .ObjectNumber ,_fagca ));_ebgad ._bebee [int (_abgeb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_ddgcgc ,Index :_ebege };
_fagca =_fagca +int64 (len ([]byte (_fggbd )));};_fggea :=_fg .Join (_dagfa ,"\u0020")+"\u0020";_fdefb :=_df .NewFlateEncoder ();_efgg :=_fdefb .MakeStreamDict ();_efgg .Set (_df .PdfObjectName ("\u0054\u0079\u0070\u0065"),_df .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_dgfcb :=int64 (_gdabb .Len ());_efgg .Set (_df .PdfObjectName ("\u004e"),_df .MakeInteger (_dgfcb ));_bbgae :=int64 (len (_fggea ));_efgg .Set (_df .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_df .MakeInteger (_bbgae ));_gbebg ,_ :=_fdefb .EncodeBytes ([]byte (_fggea +_efffa ));
_baggb :=int64 (len (_gbebg ));_efgg .Set (_df .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_df .MakeInteger (_baggb ));_aaedc +=_efgg .WriteString ();_aaedc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebgad .writeString (_aaedc );
_ebgad .writeBytes (_gbebg );_ebgad .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_ebgad .writeString (_adbcd .WriteString ());};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_ggaa *PdfAppender )UpdateObject (obj _df .PdfObject ){_ggaa .replaceObject (obj ,obj );if _ ,_aaff :=_ggaa ._beaa [obj ];!_aaff {_ggaa ._gegc =append (_ggaa ._gegc ,obj );_ggaa ._beaa [obj ]=struct{}{};};};func (_ccdb *pdfFontSimple )baseFields ()*fontCommon {return &_ccdb .fontCommon };
func (_cdec *PdfReader )buildPageList (_feged *_df .PdfIndirectObject ,_geade *_df .PdfIndirectObject ,_efeff map[_df .PdfObject ]struct{})error {if _feged ==nil {return nil ;};if _ ,_effb :=_efeff [_feged ];_effb {_gc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_feged .ObjectNumber );
return nil ;};_efeff [_feged ]=struct{}{};_aegcd ,_bcgf :=_feged .PdfObject .(*_df .PdfObjectDictionary );if !_bcgf {return _cab .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_aggec ,_bcgf :=(*_aegcd ).Get ("\u0054\u0079\u0070\u0065").(*_df .PdfObjectName );
if !_bcgf {if _aegcd .Get ("\u004b\u0069\u0064\u0073")==nil {return _cab .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_gc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_aggec =_df .MakeName ("\u0050\u0061\u0067e\u0073");_aegcd .Set ("\u0054\u0079\u0070\u0065",_aggec );};_gc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_aggec ,_feged );
if *_aggec =="\u0050\u0061\u0067\u0065"{_cfbb ,_eedeb :=_cdec .newPdfPageFromDict (_aegcd );if _eedeb !=nil {return _eedeb ;};_cfbb .setContainer (_feged );if _geade !=nil {_aegcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_geade );};_cdec ._fgec =append (_cdec ._fgec ,_feged );
_cdec .PageList =append (_cdec .PageList ,_cfbb );return nil ;};if *_aggec !="\u0050\u0061\u0067e\u0073"{_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_aggec );
return _cab .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _geade !=nil {_aegcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_geade );};if !_cdec ._afcgf {_eebcf :=_cdec .traverseObjectData (_feged );if _eebcf !=nil {return _eebcf ;};};_efda ,_cggcb :=_cdec ._ecafc .Resolve (_aegcd .Get ("\u004b\u0069\u0064\u0073"));
if _cggcb !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cggcb ;};var _ccec *_df .PdfObjectArray ;
_ccec ,_bcgf =_efda .(*_df .PdfObjectArray );if !_bcgf {_bdbc ,_cdafe :=_efda .(*_df .PdfIndirectObject );if !_cdafe {return _cab .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ccec ,_bcgf =_bdbc .PdfObject .(*_df .PdfObjectArray );
if !_bcgf {return _cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_gc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ccec );
for _dbbgg ,_ccfff :=range _ccec .Elements (){_bdcbf ,_ecbee :=_df .GetIndirect (_ccfff );if !_ecbee {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_bdcbf );
return _cab .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ccec .Set (_dbbgg ,_bdcbf );_cggcb =_cdec .buildPageList (_bdcbf ,_feged ,_efeff );if _cggcb !=nil {return _cggcb ;
};};return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// MergePageWith appends page content to source Pdf file page content.
func (_agca *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_adcc :=pageNum -1;var _babg *PdfPage ;for _cafd ,_gcdg :=range _agca ._ceee {if _cafd ==_adcc {_babg =_gcdg ;};};if _babg ==nil {return _g .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _babg ._dgbagf !=nil &&_babg ._dgbagf .GetParser ()==_agca ._cfaba ._ecafc {_babg =_babg .Duplicate ();_agca ._ceee [_adcc ]=_babg ;};page =page .Duplicate ();_cbcba (page );_ggadc :=_fgcd (_babg );_ecbg :=_fgcd (page );_adbaa :=make (map[_df .PdfObjectName ]_df .PdfObjectName );
for _ebe :=range _ecbg {if _ ,_gffd :=_ggadc [_ebe ];_gffd {for _daab :=1;true ;_daab ++{_fff :=_df .PdfObjectName (string (_ebe )+_ga .Itoa (_daab ));if _ ,_cggc :=_ggadc [_fff ];!_cggc {_adbaa [_ebe ]=_fff ;break ;};};};};_adca ,_feed :=page .GetContentStreams ();
if _feed !=nil {return _feed ;};_cgafc ,_feed :=_babg .GetContentStreams ();if _feed !=nil {return _feed ;};for _cdea ,_bcee :=range _adca {for _dgdf ,_gace :=range _adbaa {_bcee =_fg .Replace (_bcee ,"\u002f"+string (_dgdf ),"\u002f"+string (_gace ),-1);
};_adca [_cdea ]=_bcee ;};_cgafc =append (_cgafc ,_adca ...);if _gade :=_babg .SetContentStreams (_cgafc ,_df .NewFlateEncoder ());_gade !=nil {return _gade ;};_babg ._fgbc =append (_babg ._fgbc ,page ._fgbc ...);if _babg .Resources ==nil {_babg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_babg .Resources .Font =_agca .mergeResources (_babg .Resources .Font ,page .Resources .Font ,_adbaa );_babg .Resources .XObject =_agca .mergeResources (_babg .Resources .XObject ,page .Resources .XObject ,_adbaa );_babg .Resources .Properties =_agca .mergeResources (_babg .Resources .Properties ,page .Resources .Properties ,_adbaa );
if _babg .Resources .ProcSet ==nil {_babg .Resources .ProcSet =page .Resources .ProcSet ;};_babg .Resources .Shading =_agca .mergeResources (_babg .Resources .Shading ,page .Resources .Shading ,_adbaa );_babg .Resources .ExtGState =_agca .mergeResources (_babg .Resources .ExtGState ,page .Resources .ExtGState ,_adbaa );
};_facef ,_feed :=_babg .GetMediaBox ();if _feed !=nil {return _feed ;};_fgga ,_feed :=page .GetMediaBox ();if _feed !=nil {return _feed ;};var _bcdcc bool ;if _facef .Llx > _fgga .Llx {_facef .Llx =_fgga .Llx ;_bcdcc =true ;};if _facef .Lly > _fgga .Lly {_facef .Lly =_fgga .Lly ;
_bcdcc =true ;};if _facef .Urx < _fgga .Urx {_facef .Urx =_fgga .Urx ;_bcdcc =true ;};if _facef .Ury < _fgga .Ury {_facef .Ury =_fgga .Ury ;_bcdcc =true ;};if _bcdcc {_babg .MediaBox =_facef ;};return nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_eeb :=NewPdfAnnotation ();_bcd :=&PdfAnnotationUnderline {};_bcd .PdfAnnotation =_eeb ;_bcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeb .SetContext (_bcd );return _bcd ;};func (_gedde *LTV )getOCSPs (_aegdd []*_ed .Certificate ,_gefd map[string ]*_ed .Certificate )([][]byte ,error ){_fadf :=make ([][]byte ,0,len (_aegdd ));
for _ ,_egdedb :=range _aegdd {for _ ,_bgcd :=range _egdedb .OCSPServer {if _gedde .CertClient .IsCA (_egdedb ){continue ;};_gcegb ,_daba :=_gefd [_egdedb .Issuer .CommonName ];if !_daba {_gc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_adeeb ,_becdb :=_gedde .OCSPClient .MakeRequest (_bgcd ,_egdedb ,_gcegb );if _becdb !=nil {_gc .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_becdb );
continue ;};_fadf =append (_fadf ,_adeeb );};};return _fadf ,nil ;};

// B returns the value of the B component of the color.
func (_aacda *PdfColorLab )B ()float64 {return _aacda [2]};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_ggd .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _cb .Time ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _df .PdfObject ;MK _df .PdfObject ;A _df .PdfObject ;AA _df .PdfObject ;BS _df .PdfObject ;Parent _df .PdfObject ;_bfda *PdfField ;_gebg bool ;};func (_fcedb *Image )samplesTrimPadding (_ggaf []uint32 )[]uint32 {_aeaga :=_fcedb .ColorComponents *int (_fcedb .Width )*int (_fcedb .Height );
if len (_ggaf )==_aeaga {return _ggaf ;};_ffbc :=make ([]uint32 ,_aeaga );_bbfdf :=int (_fcedb .Width )*_fcedb .ColorComponents ;var _cdbee ,_aacg ,_cfeeb ,_cegdd int ;_gfecd :=_fbg .BytesPerLine (int (_fcedb .Width ),int (_fcedb .BitsPerComponent ),_fcedb .ColorComponents );
for _cdbee =0;_cdbee < int (_fcedb .Height );_cdbee ++{_aacg =_cdbee *int (_fcedb .Width );_cfeeb =_cdbee *_gfecd ;for _cegdd =0;_cegdd < _bbfdf ;_cegdd ++{_ffbc [_aacg +_cegdd ]=_ggaf [_cfeeb +_cegdd ];};};return _ffbc ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bfbb *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func (_cdbc *PdfReader )newPdfAnnotationRichMediaFromDict (_dagc *_df .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dafg :=&PdfAnnotationRichMedia {};_dafg .RichMediaSettings =_dagc .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_dafg .RichMediaContent =_dagc .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _dafg ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dg .ReadSeeker )(*PdfReader ,error ){const _cfae ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _abag (rs ,&ReaderOpts {LazyLoad :true },false ,_cfae );
};

// ToPdfObject implements interface PdfModel.
func (_cfc *PdfAnnotationTrapNet )ToPdfObject ()_df .PdfObject {_cfc .PdfAnnotation .ToPdfObject ();_baac :=_cfc ._bef ;_baacg :=_baac .PdfObject .(*_df .PdfObjectDictionary );_baacg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _baac ;};func (_bdfce *PdfReader )loadPerms ()(*Permissions ,error ){if _beffc :=_bdfce ._fegcd .Get ("\u0050\u0065\u0072m\u0073");_beffc !=nil {if _efbcc ,_gdagd :=_df .GetDict (_beffc );_gdagd {_dcffc :=_efbcc .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _dcffc ==nil {return nil ,nil ;};if _faaab ,_ddbcd :=_df .GetIndirect (_dcffc );_ddbcd {_aggae ,_daeab :=_bdfce .newPdfSignatureFromIndirect (_faaab );if _daeab !=nil {return nil ,_daeab ;};return NewPermissions (_aggae ),nil ;};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cede *LTV )EnableByName (name string ,extraCerts []*_ed .Certificate )error {_feee :=_cede ._agdeb ._cfaba .AcroForm ;for _ ,_ggce :=range _feee .AllFields (){_gdbfd ,_ :=_ggce .GetContext ().(*PdfFieldSignature );if _gdbfd ==nil {continue ;};if _fegfd :=_gdbfd .PartialName ();
_fegfd !=name {continue ;};return _cede .Enable (_gdbfd .V ,extraCerts );};return nil ;};

// GetNumComponents returns the number of color components.
func (_daea *PdfColorspaceICCBased )GetNumComponents ()int {return _daea .N };func _cgdggg (_bcagd _df .PdfObject ,_fecd bool )(*PdfFont ,error ){_bcfg ,_dgec ,_faacg :=_bagf (_bcagd );if _bcfg !=nil {_aagfa (_bcfg );};if _faacg !=nil {if _faacg ==ErrType1CFontNotSupported {_feabb ,_cdfgd :=_gbge (_bcfg ,_dgec ,nil );
if _cdfgd !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dgec ,_cdfgd );
return nil ,_faacg ;};return &PdfFont {_dfffe :_feabb },_faacg ;};return nil ,_faacg ;};_cbffa :=&PdfFont {};switch _dgec ._fbegd {case "\u0054\u0079\u0070e\u0030":if !_fecd {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgec );
return nil ,_cab .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dcbf ,_gdad :=_aabdc (_bcfg ,_dgec );if _gdad !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgec ,_gdad );
return nil ,_gdad ;};_cbffa ._dfffe =_dcbf ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bcgb *pdfFontSimple ;_egdc ,_dcffad :=_aec .NewStdFontByName (_aec .StdFontName (_dgec ._gbgf ));
if _dcffad {_aabaa :=_gagd (_egdc );_cbffa ._dfffe =&_aabaa ;_eeee :=_df .TraceToDirectObject (_aabaa .ToPdfObject ());_dece ,_cdfad ,_aafag :=_bagf (_eeee );if _aafag !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dgec ,_aabaa );
return nil ,_aafag ;};for _ ,_ecadd :=range _bcfg .Keys (){_dece .Set (_ecadd ,_bcfg .Get (_ecadd ));};_bcgb ,_aafag =_gbge (_dece ,_cdfad ,_aabaa ._bebe );if _aafag !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dgec ,_aabaa );
return nil ,_aafag ;};_bcgb ._abaag =_aabaa ._abaag ;_bcgb ._dfgaa =_aabaa ._dfgaa ;if _bcgb ._gfcg ==nil {_bcgb ._gfcg =_aabaa ._gfcg ;};}else {_bcgb ,_faacg =_gbge (_bcfg ,_dgec ,nil );if _faacg !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dgec ,_faacg );
return nil ,_faacg ;};};_faacg =_bcgb .addEncoding ();if _faacg !=nil {return nil ,_faacg ;};if _dcffad {_bcgb .updateStandard14Font ();};if _dcffad &&_bcgb ._agga ==nil &&_bcgb ._bebe ==nil {_gc .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcgb );
_gc .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_egdc );};if len (_bcgb ._abaag )==0{_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bcgb );};_cbffa ._dfffe =_bcgb ;
case "\u0054\u0079\u0070e\u0033":_dgeg ,_ggecg :=_edec (_bcfg ,_dgec );if _ggecg !=nil {_gc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_ggecg );
return nil ,_ggecg ;};_cbffa ._dfffe =_dgeg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_agfa ,_dbbd :=_acee (_bcfg ,_dgec );if _dbbd !=nil {_gc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dbbd );
return nil ,_dbbd ;};_cbffa ._dfffe =_agfa ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gcec ,_bcgbd :=_cfgb (_bcfg ,_dgec );if _bcgbd !=nil {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgec ,_bcgbd );
return nil ,_bcgbd ;};_cbffa ._dfffe =_gcec ;default:_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_dgec );
return nil ,_g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgec );};return _cbffa ,nil ;};func _eeegg (_cabb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cabb }};
var _ecde =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_cdbeb *PdfPageResources )HasShadingByName (keyName _df .PdfObjectName )bool {_ ,_bfffe :=_cdbeb .GetShadingByName (keyName );return _bfffe ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_aeec *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_cce *PdfReader )newPdfAnnotationFileAttachmentFromDict (_adag *_df .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_abdc :=PdfAnnotationFileAttachment {};_gadb ,_aecfb :=_cce .newPdfAnnotationMarkupFromDict (_adag );
if _aecfb !=nil {return nil ,_aecfb ;};_abdc .PdfAnnotationMarkup =_gadb ;_abdc .FS =_adag .Get ("\u0046\u0053");_abdc .Name =_adag .Get ("\u004e\u0061\u006d\u0065");return &_abdc ,nil ;};func _egcea ()*modelManager {_bfbeb :=modelManager {};_bfbeb ._dgdff =map[PdfModel ]_df .PdfObject {};
_bfbeb ._edgeb =map[_df .PdfObject ]PdfModel {};return &_bfbeb ;};func _edfd (_cfec _df .PdfObject )(*PdfColorspaceLab ,error ){_ccab :=NewPdfColorspaceLab ();if _cccfd ,_caed :=_cfec .(*_df .PdfIndirectObject );_caed {_ccab ._cecff =_cccfd ;};_cfec =_df .TraceToDirectObject (_cfec );
_gcdd ,_dddgf :=_cfec .(*_df .PdfObjectArray );if !_dddgf {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcdd .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cfec =_df .TraceToDirectObject (_gcdd .Get (0));_gdeabe ,_dddgf :=_cfec .(*_df .PdfObjectName );if !_dddgf {return nil ,_g .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_gdeabe !="\u004c\u0061\u0062"{return nil ,_g .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cfec =_df .TraceToDirectObject (_gcdd .Get (1));_fcaa ,_dddgf :=_cfec .(*_df .PdfObjectDictionary );
if !_dddgf {return nil ,_g .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_cfec =_fcaa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cfec =_df .TraceToDirectObject (_cfec );_gbcfa ,_dddgf :=_cfec .(*_df .PdfObjectArray );if !_dddgf {return nil ,_g .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _gbcfa .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_eabe ,_gbeb :=_gbcfa .GetAsFloat64Slice ();
if _gbeb !=nil {return nil ,_gbeb ;};_ccab .WhitePoint =_eabe ;_cfec =_fcaa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cfec !=nil {_cfec =_df .TraceToDirectObject (_cfec );_fgffe ,_eddgd :=_cfec .(*_df .PdfObjectArray );if !_eddgd {return nil ,_g .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");
};if _fgffe .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fdcf ,_bcdg :=_fgffe .GetAsFloat64Slice ();
if _bcdg !=nil {return nil ,_bcdg ;};_ccab .BlackPoint =_fdcf ;};_cfec =_fcaa .Get ("\u0052\u0061\u006eg\u0065");if _cfec !=nil {_cfec =_df .TraceToDirectObject (_cfec );_fafa ,_ccee :=_cfec .(*_df .PdfObjectArray );if !_ccee {_gc .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
return nil ,_g .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fafa .Len ()!=4{_gc .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_acgc ,_fcef :=_fafa .GetAsFloat64Slice ();if _fcef !=nil {return nil ,_fcef ;};_ccab .Range =_acgc ;};return _ccab ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _df .PdfObject ;Dest _df .PdfObject ;H _df .PdfObject ;PA _df .PdfObject ;QuadPoints _df .PdfObject ;BS _df .PdfObject ;_eagd *PdfAction ;_fdd *PdfReader ;};

// Val returns the color value.
func (_dfb *PdfColorDeviceGray )Val ()float64 {return float64 (*_dfb )};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ceffe *PdfFontDescriptor )ToPdfObject ()_df .PdfObject {_bcfbg :=_df .MakeDict ();if _ceffe ._abac ==nil {_ceffe ._abac =&_df .PdfIndirectObject {};};_ceffe ._abac .PdfObject =_bcfbg ;_bcfbg .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ceffe .FontName !=nil {_bcfbg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ceffe .FontName );};if _ceffe .FontFamily !=nil {_bcfbg .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ceffe .FontFamily );};if _ceffe .FontStretch !=nil {_bcfbg .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ceffe .FontStretch );
};if _ceffe .FontWeight !=nil {_bcfbg .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ceffe .FontWeight );};if _ceffe .Flags !=nil {_bcfbg .Set ("\u0046\u006c\u0061g\u0073",_ceffe .Flags );};if _ceffe .FontBBox !=nil {_bcfbg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ceffe .FontBBox );
};if _ceffe .ItalicAngle !=nil {_bcfbg .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ceffe .ItalicAngle );};if _ceffe .Ascent !=nil {_bcfbg .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ceffe .Ascent );};if _ceffe .Descent !=nil {_bcfbg .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ceffe .Descent );
};if _ceffe .Leading !=nil {_bcfbg .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ceffe .Leading );};if _ceffe .CapHeight !=nil {_bcfbg .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ceffe .CapHeight );};if _ceffe .XHeight !=nil {_bcfbg .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ceffe .XHeight );
};if _ceffe .StemV !=nil {_bcfbg .Set ("\u0053\u0074\u0065m\u0056",_ceffe .StemV );};if _ceffe .StemH !=nil {_bcfbg .Set ("\u0053\u0074\u0065m\u0048",_ceffe .StemH );};if _ceffe .AvgWidth !=nil {_bcfbg .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ceffe .AvgWidth );
};if _ceffe .MaxWidth !=nil {_bcfbg .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ceffe .MaxWidth );};if _ceffe .MissingWidth !=nil {_bcfbg .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ceffe .MissingWidth );};
if _ceffe .FontFile !=nil {_bcfbg .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ceffe .FontFile );};if _ceffe .FontFile2 !=nil {_bcfbg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ceffe .FontFile2 );};if _ceffe .FontFile3 !=nil {_bcfbg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ceffe .FontFile3 );
};if _ceffe .CharSet !=nil {_bcfbg .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ceffe .CharSet );};if _ceffe .Style !=nil {_bcfbg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ceffe .FontName );};if _ceffe .Lang !=nil {_bcfbg .Set ("\u004c\u0061\u006e\u0067",_ceffe .Lang );
};if _ceffe .FD !=nil {_bcfbg .Set ("\u0046\u0044",_ceffe .FD );};if _ceffe .CIDSet !=nil {_bcfbg .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ceffe .CIDSet );};return _ceffe ._abac ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _df .PdfObject ;IC _df .PdfObject ;BE _df .PdfObject ;RD _df .PdfObject ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ToPdfObject implements interface PdfModel.
func (_gdba *PdfAnnotationWatermark )ToPdfObject ()_df .PdfObject {_gdba .PdfAnnotation .ToPdfObject ();_ecbf :=_gdba ._bef ;_aff :=_ecbf .PdfObject .(*_df .PdfObjectDictionary );_aff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_aff .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gdba .FixedPrint );return _ecbf ;};func _gdeef ()string {_dcdd .Lock ();defer _dcdd .Unlock ();return _cdeee };

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _df .PdfObject ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ecafc *_df .PdfParser ;_ebfa _df .PdfObject ;_edded *_df .PdfIndirectObject ;_gafedb *_df .PdfObjectDictionary ;_fgec []*_df .PdfIndirectObject ;PageList []*PdfPage ;_dfaed int ;_fegcd *_df .PdfObjectDictionary ;_ddbd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fdga *Permissions ;_bbadeb map[*PdfReader ]*PdfReader ;_ababg []*PdfReader ;_cggbe *modelManager ;_afcgf bool ;_eafee map[_df .PdfObject ]struct{};_bdgca _dg .ReadSeeker ;_baffe string ;_cbebe bool ;_aagfcb *ReaderOpts ;
_gbfbg bool ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bfcagf *PdfShading )GetContext ()PdfModel {return _bfcagf ._aceab };func (_acce *PdfWriter )writeString (_eeebf string ){if _acce ._baece !=nil {return ;};_dadbc ,_gddbc :=_acce ._cfagf .WriteString (_eeebf );_acce ._debcg +=int64 (_dadbc );_acce ._baece =_gddbc ;
};func (_dbbgc *PdfReader )newPdfAcroFormFromDict (_gfbab *_df .PdfIndirectObject ,_egeaf *_df .PdfObjectDictionary )(*PdfAcroForm ,error ){_addddc :=NewPdfAcroForm ();if _gfbab !=nil {_addddc ._badgd =_gfbab ;_gfbab .PdfObject =_df .MakeDict ();};if _deded :=_egeaf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");
_deded !=nil &&!_df .IsNullObject (_deded ){_bcdga ,_agge :=_df .GetArray (_deded );if !_agge {return nil ,_g .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_deded );
};var _fdgg []*PdfField ;for _ ,_egcb :=range _bcdga .Elements (){_ceaa ,_cbae :=_df .GetIndirect (_egcb );if !_cbae {if _ ,_gebe :=_egcb .(*_df .PdfObjectNull );_gebe {_gc .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_gc .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_egcb );
return nil ,_g .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ddfaf ,_cafed :=_dbbgc .newPdfFieldFromIndirectObject (_ceaa ,nil );
if _cafed !=nil {return nil ,_cafed ;};_gc .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ddfaf );_fdgg =append (_fdgg ,_ddfaf );};_addddc .Fields =&_fdgg ;};if _dgbe :=_egeaf .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dgbe !=nil {_faae ,_cgebd :=_df .GetBool (_dgbe );if _cgebd {_addddc .NeedAppearances =_faae ;}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dgbe );
};};if _edcea :=_egeaf .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_edcea !=nil {_dgegf ,_bgabc :=_df .GetInt (_edcea );if _bgabc {_addddc .SigFlags =_dgegf ;}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edcea );
};};if _efef :=_egeaf .Get ("\u0043\u004f");_efef !=nil {_fdfca ,_acda :=_df .GetArray (_efef );if _acda {_addddc .CO =_fdfca ;}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_efef );
};};if _bfgcc :=_egeaf .Get ("\u0044\u0052");_bfgcc !=nil {if _adaea ,_beaef :=_df .GetDict (_bfgcc );_beaef {_beaf ,_ebgf :=NewPdfPageResourcesFromDict (_adaea );if _ebgf !=nil {_gc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ebgf );
return nil ,_ebgf ;};_addddc .DR =_beaf ;}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bfgcc );};};if _dgdfe :=_egeaf .Get ("\u0044\u0041");
_dgdfe !=nil {_ffbeg ,_gccfd :=_df .GetString (_dgdfe );if _gccfd {_addddc .DA =_ffbeg ;}else {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dgdfe );
};};if _addb :=_egeaf .Get ("\u0051");_addb !=nil {_effed ,_bbffa :=_df .GetInt (_addb );if _bbffa {_addddc .Q =_effed ;}else {_gc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_addb );
};};if _gfgg :=_egeaf .Get ("\u0058\u0046\u0041");_gfgg !=nil {_addddc .XFA =_gfgg ;};_addddc .ToPdfObject ();return _addddc ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_adg :=NewPdfAnnotation ();_ddff :=&PdfAnnotationFileAttachment {};_ddff .PdfAnnotation =_adg ;_ddff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adg .SetContext (_ddff );return _ddff ;
};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ggaag :=PdfColorCalRGB {a ,b ,c };return &_ggaag ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func _ebcf (_dffbd _df .PdfObject )(PdfFunction ,error ){_dffbd =_df .ResolveReference (_dffbd );if _dcgf ,_adgd :=_dffbd .(*_df .PdfObjectStream );_adgd {_gdde :=_dcgf .PdfObjectDictionary ;
_dcaaa ,_afff :=_gdde .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_df .PdfObjectInteger );if !_afff {_gc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dcaaa ==0{return _egbd (_dcgf );}else if *_dcaaa ==4{return _dcfgg (_dcgf );
}else {return nil ,_cab .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cdfe ,_acaag :=_dffbd .(*_df .PdfIndirectObject );_acaag {_dfea ,_acbaa :=_cdfe .PdfObject .(*_df .PdfObjectDictionary );
if !_acbaa {_gc .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_deaae ,_acbaa :=_dfea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_df .PdfObjectInteger );
if !_acbaa {_gc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_deaae ==2{return _bfca (_cdfe );}else if *_deaae ==3{return _bagb (_cdfe );}else {return nil ,_cab .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _edaea ,_badgc :=_dffbd .(*_df .PdfObjectDictionary );
_badgc {_daae ,_aafgg :=_edaea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_df .PdfObjectInteger );if !_aafgg {_gc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cab .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_daae ==2{return _bfca (_edaea );}else if *_daae ==3{return _bagb (_edaea );
}else {return nil ,_cab .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_gc .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dffbd );
return nil ,_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// SetShadingByName sets a shading resource specified by keyName.
func (_egfab *PdfPageResources )SetShadingByName (keyName _df .PdfObjectName ,shadingObj _df .PdfObject )error {if _egfab .Shading ==nil {_egfab .Shading =_df .MakeDict ();};_agfaf ,_deedb :=_df .GetDict (_egfab .Shading );if !_deedb {return _df .ErrTypeError ;
};_agfaf .Set (keyName ,shadingObj );return nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_dbdc *PdfPage )AddFont (name _df .PdfObjectName ,font _df .PdfObject )error {if _dbdc .Resources ==nil {_dbdc .Resources =NewPdfPageResources ();};if _dbdc .Resources .Font ==nil {_dbdc .Resources .Font =_df .MakeDict ();};_cbgef ,_ecedf :=_df .TraceToDirectObject (_dbdc .Resources .Font ).(*_df .PdfObjectDictionary );
if !_ecedf {_gc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_df .TraceToDirectObject (_dbdc .Resources .Font ));
return _cab .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbgef .Set (name ,font );return nil ;};

// ReplacePage replaces the original page to a new page.
func (_ffeb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_afcb :=pageNum -1;for _dbcc :=range _ffeb ._ceee {if _dbcc ==_afcb {_fbgd :=page .Duplicate ();_cbcba (_fbgd );_ffeb ._ceee [_dbcc ]=_fbgd ;};};};

// HasXObjectByName checks if has XObject resource by name.
func (_cedgdg *PdfPage )HasXObjectByName (name _df .PdfObjectName )bool {_dbge ,_eeac :=_cedgdg .Resources .XObject .(*_df .PdfObjectDictionary );if !_eeac {return false ;};if _gbac :=_dbge .Get (name );_gbac !=nil {return true ;};return false ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_fb .File ,error ){const _ebcab ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fdadg ,_egeac :=_fb .Open (pdfFile );if _egeac !=nil {return nil ,nil ,_egeac ;};_degd ,_egeac :=_abag (_fdadg ,opts ,true ,_ebcab );if _egeac !=nil {_fdadg .Close ();return nil ,nil ,_egeac ;};return _degd ,_fdadg ,nil ;};func (_ccbd *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// Encoder returns the font's text encoder.
func (_cafe pdfCIDFontType0 )Encoder ()_cfe .TextEncoder {return _cafe ._gfafg };

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_baecb *PdfReader )GetCatalogStructTreeRoot ()(_df .PdfObject ,bool ){if _baecb ._fegcd ==nil {return nil ,false ;};_gaef :=_baecb ._fegcd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _gaef ,_gaef !=nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dcb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbgc ,_gcda :=_df .GetNumbersAsFloat (objects );
if _gcda !=nil {return nil ,_gcda ;};return _dcb .ColorFromFloats (_fbgc );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_aecc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_faead :=_aecc .actualFont ();if _faead ==nil {_gc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_aecc ._dfffe );
return _aec .CharMetrics {},false ;};if _dadc ,_cddc :=_faead .GetRuneMetrics (r );_cddc {return _dadc ,true ;};if _gddcc ,_efec :=_aecc .GetFontDescriptor ();_efec ==nil &&_gddcc !=nil {return _aec .CharMetrics {Wx :_gddcc ._dcdb },true ;};_gc .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aecc );
return _aec .CharMetrics {},false ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_cccfa *pdfFontSimple )getFontEncoding ()(_cfbgc string ,_gdcdd map[_cfe .CharCode ]_cfe .GlyphName ,_ddcea error ){_cfbgc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _cefcc ,_agdg :=_ecde [_cccfa ._gbgf ];
_agdg {_cfbgc =_cefcc ;}else if _cccfa .fontFlags ()&_fcdbe !=0{for _cbga ,_eggcg :=range _ecde {if _fg .Contains (_cccfa ._gbgf ,_cbga ){_cfbgc =_eggcg ;break ;};};};if _cccfa .Encoding ==nil {return _cfbgc ,nil ,nil ;};switch _gcfgb :=_cccfa .Encoding .(type ){case *_df .PdfObjectName :return string (*_gcfgb ),nil ,nil ;
case *_df .PdfObjectDictionary :_fbbgg ,_bdef :=_df .GetName (_gcfgb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bdef {_cfbgc =_fbbgg .String ();};if _ffcag :=_gcfgb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_ffcag !=nil {_gege ,_gbdga :=_df .GetArray (_ffcag );if !_gbdga {_gc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gcfgb ,_gcfgb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_df .ErrTypeError ;};_gdcdd ,_ddcea =_cfe .FromFontDifferences (_gege );};return _cfbgc ,_gdcdd ,_ddcea ;default:_gc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cccfa .Encoding ,_cccfa .Encoding );
return "",nil ,_df .ErrTypeError ;};};func (_edcf *PdfReader )newPdfAnnotationPolyLineFromDict (_addd *_df .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_acbf :=PdfAnnotationPolyLine {};_aaec ,_fgff :=_edcf .newPdfAnnotationMarkupFromDict (_addd );
if _fgff !=nil {return nil ,_fgff ;};_acbf .PdfAnnotationMarkup =_aaec ;_acbf .Vertices =_addd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_acbf .LE =_addd .Get ("\u004c\u0045");_acbf .BS =_addd .Get ("\u0042\u0053");_acbf .IC =_addd .Get ("\u0049\u0043");
_acbf .BE =_addd .Get ("\u0042\u0045");_acbf .IT =_addd .Get ("\u0049\u0054");_acbf .Measure =_addd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_acbf ,nil ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_gddbb *PdfPageResources )HasPatternByName (keyName _df .PdfObjectName )bool {_ ,_cecdd :=_gddbb .GetPatternByName (keyName );return _cecdd ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _df .PdfObject )(*PdfOutputIntent ,error ){_cdbef :=&PdfOutputIntent {};if _bfcaa :=_cdbef .ParsePdfObject (object );_bfcaa !=nil {return nil ,_bfcaa ;};return _cdbef ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_adcb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _adcb .UnderlyingCS .GetNumComponents ();};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bdace *LTV )EnableChain (chain []*_ed .Certificate )error {return _bdace .enable (nil ,chain ,"")};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_eeddb _dg .ReadSeeker ;_fgcg *_df .PdfParser ;_cfaba *PdfReader ;Reader *PdfReader ;_ceee []*PdfPage ;_bcf *PdfAcroForm ;_aed *DSS ;_fgffb *Permissions ;_ffae _df .XrefTable ;_ccfc int64 ;_beb int ;_gegc []_df .PdfObject ;_beaa map[_df .PdfObject ]struct{};
_gaaca map[_df .PdfObject ]int64 ;_efb map[_df .PdfObject ]struct{};_gcd map[_df .PdfObject ]struct{};_ebbdf int64 ;_fbde bool ;_fgfc string ;_gaae *EncryptOptions ;_ggdef *PdfInfo ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_fcfe *PdfFieldChoice )ToPdfObject ()_df .PdfObject {_fcfe .PdfField .ToPdfObject ();_fcdb :=_fcfe ._gadcg ;_afb :=_fcdb .PdfObject .(*_df .PdfObjectDictionary );_afb .Set ("\u0046\u0054",_df .MakeName ("\u0043\u0068"));if _fcfe .Opt !=nil {_afb .Set ("\u004f\u0070\u0074",_fcfe .Opt );
};if _fcfe .TI !=nil {_afb .Set ("\u0054\u0049",_fcfe .TI );};if _fcfe .I !=nil {_afb .Set ("\u0049",_fcfe .I );};return _fcdb ;};

// Encoder returns the font's text encoder.
func (_ddgg pdfFontType0 )Encoder ()_cfe .TextEncoder {return _ddgg ._degc };

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _df .PdfObject ;Flags _df .PdfObject ;};func _gefde (_gdabg *_df .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bbacb :=&PdfShadingPattern {};_ebgbeb :=_gdabg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _ebgbeb ==nil {_gc .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fcefa ,_dfebc :=_dfbbc (_ebgbeb );if _dfebc !=nil {_gc .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dfebc );
return nil ,_dfebc ;};_bbacb .Shading =_fcefa ;if _dbbgd :=_gdabg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dbbgd !=nil {_ececf ,_adgcg :=_dbbgd .(*_df .PdfObjectArray );if !_adgcg {_gc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbbgd );
return nil ,_df .ErrTypeError ;};_bbacb .Matrix =_ececf ;};if _ggcgb :=_gdabg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ggcgb !=nil {_bbacb .ExtGState =_ggcgb ;};return _bbacb ,nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_gdae *PdfColorspaceDeviceN )ToPdfObject ()_df .PdfObject {_afcgd :=_df .MakeArray (_df .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_afcgd .Append (_gdae .ColorantNames );_afcgd .Append (_gdae .AlternateSpace .ToPdfObject ());_afcgd .Append (_gdae .TintTransform .ToPdfObject ());
if _gdae .Attributes !=nil {_afcgd .Append (_gdae .Attributes .ToPdfObject ());};if _gdae ._bbfdb !=nil {_gdae ._bbfdb .PdfObject =_afcgd ;return _gdae ._bbfdb ;};return _afcgd ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_cgbb *PdfField )FullName ()(string ,error ){var _bbc _dga .Buffer ;_dbgb :=[]string {};if _cgbb .T !=nil {_dbgb =append (_dbgb ,_cgbb .T .Decoded ());};_cbbc :=map[*PdfField ]bool {};_cbbc [_cgbb ]=true ;_bagg :=_cgbb .Parent ;for _bagg !=nil {if _ ,_beca :=_cbbc [_bagg ];
_beca {return _bbc .String (),_cab .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bagg .T ==nil {return _bbc .String (),_cab .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_dbgb =append (_dbgb ,_bagg .T .Decoded ());_cbbc [_bagg ]=true ;_bagg =_bagg .Parent ;};for _adege :=len (_dbgb )-1;_adege >=0;_adege --{_bbc .WriteString (_dbgb [_adege ]);if _adege > 0{_bbc .WriteString ("\u002e");};};return _bbc .String (),nil ;};


// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bacc PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_df .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_dcdeg []_df .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gfac []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func _cbcba (_aggac *PdfPage ){_gbgfe :=_eec .GetLicenseKey ();if _gbgfe !=nil &&_gbgfe .IsLicensed (){return ;};_fegd :=_df .PdfObjectName ("\u0055\u0046\u0031");if !_aggac .Resources .HasFontByName (_fegd ){_aggac .Resources .SetFontByName (_fegd ,DefaultFont ().ToPdfObject ());
};var _gdebcc []string ;_gdebcc =append (_gdebcc ,"\u0071");_gdebcc =append (_gdebcc ,"\u0042\u0054");_gdebcc =append (_gdebcc ,_g .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fegd .String ()));_gdebcc =append (_gdebcc ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_gdebcc =append (_gdebcc ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_afbgb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_gdebcc =append (_gdebcc ,_g .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_afbgb ));_gdebcc =append (_gdebcc ,"\u0045\u0054");_gdebcc =append (_gdebcc ,"\u0051");_ceeca :=_fg .Join (_gdebcc ,"\u000a");_aggac .AddContentStreamByString (_ceeca );_aggac .ToPdfObject ();
};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_bcba *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_bcba .HiVal )};};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_df .PdfObjectInteger ;TilingType *_df .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_df .PdfObjectFloat ;YStep *_df .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_df .PdfObjectArray ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gaac *PdfAnnotationWidget )Field ()*PdfField {return _gaac ._bfda };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ceed *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ceed .Alternate ==nil {_gc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ceed .N ==1{_gc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_aeca :=NewPdfColorspaceDeviceGray ();return _aeca .ImageToRGB (img );}else if _ceed .N ==3{_gc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ceed .N ==4{_gc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_dbbaf :=NewPdfColorspaceDeviceCMYK ();return _dbbaf .ImageToRGB (img );}else {return img ,_cab .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_gc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ceed );
_cbbd ,_ddbb :=_ceed .Alternate .ImageToRGB (img );_gc .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_gc .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cbbd );
return _cbbd ,_ddbb ;};func (_ffaag *LTV )enable (_facgc ,_ccbbc []*_ed .Certificate ,_gffa string )error {_afecd ,_gbcbd ,_dbbb :=_ffaag .buildCertChain (_facgc ,_ccbbc );if _dbbb !=nil {return _dbbb ;};_bcaf ,_dbbb :=_ffaag .getCerts (_afecd );if _dbbb !=nil {return _dbbb ;
};var _cbef ,_cgeae [][]byte ;if _ffaag .OCSPClient !=nil {_cbef ,_dbbb =_ffaag .getOCSPs (_afecd ,_gbcbd );if _dbbb !=nil {return _dbbb ;};};if _ffaag .CRLClient !=nil {_cgeae ,_dbbb =_ffaag .getCRLs (_afecd );if _dbbb !=nil {return _dbbb ;};};_ecdcc :=_ffaag ._ecdcg ;
_fgbed ,_dbbb :=_ecdcc .addCerts (_bcaf );if _dbbb !=nil {return _dbbb ;};_bgebg ,_dbbb :=_ecdcc .addOCSPs (_cbef );if _dbbb !=nil {return _dbbb ;};_egceg ,_dbbb :=_ecdcc .addCRLs (_cgeae );if _dbbb !=nil {return _dbbb ;};if _gffa !=""{_ecdcc .VRI [_gffa ]=&VRI {Cert :_fgbed ,OCSP :_bgebg ,CRL :_egceg };
};_ffaag ._agdeb .SetDSS (_ecdcc );return nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};var _bdgc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_adgec []byte ;_ebfeb []uint32 ;_dbdee *_df .PdfObjectStream ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ebca *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_addaa :_df .MakeDict (),ColorComponents :colorComponents };
};func (_gafafg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_gafafg .fontCommon };

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_ceca *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_dbdcc *PdfSignature ,_ecgd Hasher ,_edbaa SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _df .PdfObject ;};

// SetName sets the `Name` field of the signature.
func (_gacfc *PdfSignature )SetName (name string ){_gacfc .Name =_df .MakeString (name )};func (_ffcba *PdfAcroForm )fill (_ebbf FieldValueProvider ,_adfca FieldAppearanceGenerator )error {if _ffcba ==nil {return nil ;};_agag ,_geae :=_ebbf .FieldValues ();
if _geae !=nil {return _geae ;};for _ ,_cegf :=range _ffcba .AllFields (){_acbac :=_cegf .PartialName ();_dbfbb ,_dbbcg :=_agag [_acbac ];if !_dbbcg {if _efabb ,_cfea :=_cegf .FullName ();_cfea ==nil {_dbfbb ,_dbbcg =_agag [_efabb ];};};if !_dbbcg {_gc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_acbac );
continue ;};if _efcc :=_dcgb (_cegf ,_dbfbb );_efcc !=nil {return _efcc ;};if _adfca ==nil {continue ;};for _ ,_cgbd :=range _cegf .Annotations {_daefd ,_gcgb :=_adfca .GenerateAppearanceDict (_ffcba ,_cegf ,_cgbd );if _gcgb !=nil {return _gcgb ;};_cgbd .AP =_daefd ;
_cgbd .ToPdfObject ();};};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_adae *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccfb ,_bbbe :=_df .GetNumbersAsFloat (objects );
if _bbbe !=nil {return nil ,_bbbe ;};return _adae .ColorFromFloats (_ccfb );};func (_bddf *PdfReader )newPdfActionGotoEFromDict (_gfbb *_df .PdfObjectDictionary )(*PdfActionGoToE ,error ){_fabd ,_bfd :=_ddfg (_gfbb .Get ("\u0046"));if _bfd !=nil {return nil ,_bfd ;
};return &PdfActionGoToE {D :_gfbb .Get ("\u0044"),NewWindow :_gfbb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gfbb .Get ("\u0054"),F :_fabd },nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aebf *PdfOutlineItem )ToPdfObject ()_df .PdfObject {_abdcf :=_aebf ._dfee ;_abeda :=_abdcf .PdfObject .(*_df .PdfObjectDictionary );_abeda .Set ("\u0054\u0069\u0074l\u0065",_aebf .Title );if _aebf .A !=nil {_abeda .Set ("\u0041",_aebf .A );};if _dcdce :=_abeda .Get ("\u0053\u0045");
_dcdce !=nil {_abeda .Remove ("\u0053\u0045");};if _aebf .C !=nil {_abeda .Set ("\u0043",_aebf .C );};if _aebf .Dest !=nil {_abeda .Set ("\u0044\u0065\u0073\u0074",_aebf .Dest );};if _aebf .F !=nil {_abeda .Set ("\u0046",_aebf .F );};if _aebf .Count !=nil {_abeda .Set ("\u0043\u006f\u0075n\u0074",_df .MakeInteger (*_aebf .Count ));
};if _aebf .Next !=nil {_abeda .Set ("\u004e\u0065\u0078\u0074",_aebf .Next .ToPdfObject ());};if _aebf .First !=nil {_abeda .Set ("\u0046\u0069\u0072s\u0074",_aebf .First .ToPdfObject ());};if _aebf .Prev !=nil {_abeda .Set ("\u0050\u0072\u0065\u0076",_aebf .Prev .GetContext ().GetContainingPdfObject ());
};if _aebf .Last !=nil {_abeda .Set ("\u004c\u0061\u0073\u0074",_aebf .Last .GetContext ().GetContainingPdfObject ());};if _aebf .Parent !=nil {_abeda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aebf .Parent .GetContext ().GetContainingPdfObject ());
};return _abdcf ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_ebcg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_cebff []_df .PdfObject )([]_df .PdfObject ,error );};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_df .PdfObjectString ;Author *_df .PdfObjectString ;Subject *_df .PdfObjectString ;Keywords *_df .PdfObjectString ;Creator *_df .PdfObjectString ;Producer *_df .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_df .PdfObjectName ;
_ecbda *_df .PdfObjectDictionary ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_gfee *PdfWriter )SetRotation (rotate int64 )error {_babdd ,_ccafa :=_df .GetDict (_gfee ._fabbf );if !_ccafa {return ErrTypeCheck ;};_babdd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_df .MakeInteger (rotate ));return nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_ffgff *PdfPattern )ToPdfObject ()_df .PdfObject {_bedf :=_ffgff .getDict ();_bedf .Set ("\u0054\u0079\u0070\u0065",_df .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bedf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_df .MakeInteger (_ffgff .PatternType ));
return _ffgff ._fdceb ;};func _begc (_ebgbf *_df .PdfObjectDictionary )(*PdfShadingType4 ,error ){_aggdb :=PdfShadingType4 {};_effaa :=_ebgbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _effaa ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcbg ,_fagfed :=_effaa .(*_df .PdfObjectInteger );if !_fagfed {_gc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_effaa );
return nil ,_df .ErrTypeError ;};_aggdb .BitsPerCoordinate =_dcbg ;_effaa =_ebgbf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _effaa ==nil {_gc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcbg ,_fagfed =_effaa .(*_df .PdfObjectInteger );if !_fagfed {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_effaa );
return nil ,_df .ErrTypeError ;};_aggdb .BitsPerComponent =_dcbg ;_effaa =_ebgbf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _effaa ==nil {_gc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcbg ,_fagfed =_effaa .(*_df .PdfObjectInteger );if !_fagfed {_gc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_effaa );
return nil ,_df .ErrTypeError ;};_aggdb .BitsPerComponent =_dcbg ;_effaa =_ebgbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _effaa ==nil {_gc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aacba ,_fagfed :=_effaa .(*_df .PdfObjectArray );if !_fagfed {_gc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_effaa );
return nil ,_df .ErrTypeError ;};_aggdb .Decode =_aacba ;_effaa =_ebgbf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _effaa ==nil {_gc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_aggdb .Function =[]PdfFunction {};if _dgfc ,_aaebg :=_effaa .(*_df .PdfObjectArray );_aaebg {for _ ,_ffge :=range _dgfc .Elements (){_eggea ,_fgabe :=_ebcf (_ffge );if _fgabe !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgabe );
return nil ,_fgabe ;};_aggdb .Function =append (_aggdb .Function ,_eggea );};}else {_ccgaf ,_abbfa :=_ebcf (_effaa );if _abbfa !=nil {_gc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abbfa );
return nil ,_abbfa ;};_aggdb .Function =append (_aggdb .Function ,_ccgaf );};return &_aggdb ,nil ;};var _cdde =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_ebacd *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _ebacd .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// SetAlpha sets the alpha layer for the image.
func (_efgd *Image )SetAlpha (alpha []byte ){_efgd ._gced =alpha };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_cggd *PdfPageResources )GetColorspaceByName (keyName _df .PdfObjectName )(PdfColorspace ,bool ){_aafcd ,_cebbf :=_cggd .GetColorspaces ();if _cebbf !=nil {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cebbf );
return nil ,false ;};if _aafcd ==nil {return nil ,false ;};_fcbe ,_bbgbd :=_aafcd .Colorspaces [string (keyName )];if !_bbgbd {return nil ,false ;};return _fcbe ,true ;};

// ToPdfObject implements model.PdfModel interface.
func (_eead *PdfOutputIntent )ToPdfObject ()_df .PdfObject {if _eead ._addaa ==nil {_eead ._addaa =_df .MakeDict ();};_fcded :=_eead ._addaa ;if _eead .Type !=""{_fcded .Set ("\u0054\u0079\u0070\u0065",_df .MakeName (_eead .Type ));};_fcded .Set ("\u0053",_df .MakeName (_eead .S .String ()));
if _eead .OutputCondition !=""{_fcded .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_df .MakeString (_eead .OutputCondition ));};_fcded .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_df .MakeString (_eead .OutputConditionIdentifier ));
_fcded .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_df .MakeString (_eead .RegistryName ));if _eead .Info !=""{_fcded .Set ("\u0049\u006e\u0066\u006f",_df .MakeString (_eead .Info ));};if len (_eead .DestOutputProfile )!=0{_fdab ,_fafga :=_df .MakeStream (_eead .DestOutputProfile ,_df .NewFlateEncoder ());
if _fafga !=nil {_gc .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fafga );
};_fdab .PdfObjectDictionary .Set ("\u004e",_df .MakeInteger (int64 (_eead .ColorComponents )));_gbdccf :=make ([]float64 ,_eead .ColorComponents *2);for _fabca :=0;_fabca < _eead .ColorComponents *2;_fabca ++{_eadf :=0.0;if _fabca %2!=0{_eadf =1.0;};_gbdccf [_fabca ]=_eadf ;
};_fdab .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_df .MakeArrayFromFloats (_gbdccf ));_fcded .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_fdab );};return _fcded ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cbeb :=NewPdfAnnotation ();_bed :=&PdfAnnotationCaret {};_bed .PdfAnnotation =_cbeb ;_bed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbeb .SetContext (_bed );return _bed ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_dfcde :=&PdfShadingType2 {};_dfcde .PdfShading =&PdfShading {};_dfcde .PdfShading ._aedee =_df .MakeIndirectObject (_df .MakeDict ());_dfcde .PdfShading ._aceab =_dfcde ;return _dfcde ;};func _eaddc (_beaca _df .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cdeg :=&PdfColorspaceDeviceNAttributes {};
var _eage *_df .PdfObjectDictionary ;switch _bbef :=_beaca .(type ){case *_df .PdfIndirectObject :_cdeg ._gaab =_bbef ;var _fggb bool ;_eage ,_fggb =_bbef .PdfObject .(*_df .PdfObjectDictionary );if !_fggb {_gc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_df .PdfObjectDictionary :_eage =_bbef ;case *_df .PdfObjectReference :_fbgce :=_bbef .Resolve ();return _eaddc (_fbgce );default:_gc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebed :=_eage .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ebed !=nil {_ccfd ,_bcbd :=_df .TraceToDirectObject (_ebed ).(*_df .PdfObjectName );if !_bcbd {_gc .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cab .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cdeg .Subtype =_ccfd ;};if _gedd :=_eage .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gedd !=nil {_cdeg .Colorants =_gedd ;};if _fccg :=_eage .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_fccg !=nil {_cdeg .Process =_fccg ;};if _ebbb :=_eage .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ebbb !=nil {_cdeg .MixingHints =_ebbb ;};return _cdeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgffc *Permissions )ToPdfObject ()_df .PdfObject {return _bgffc ._afgfd };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_gffde *PdfPageResources )GetExtGState (keyName _df .PdfObjectName )(_df .PdfObject ,bool ){if _gffde .ExtGState ==nil {return nil ,false ;};_agefe ,_cfad :=_df .TraceToDirectObject (_gffde .ExtGState ).(*_df .PdfObjectDictionary );if !_cfad {_gc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gffde .ExtGState );
return nil ,false ;};if _bdab :=_agefe .Get (keyName );_bdab !=nil {return _bdab ,true ;};return nil ,false ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_cbbdf *Image )ToJBIG2Image ()(*_df .JBIG2Image ,error ){_cbcf ,_cacbd :=_cbbdf .ToGoImage ();if _cacbd !=nil {return nil ,_cacbd ;};return _df .GoImageToJBIG2 (_cbcf ,_df .JB2ImageAutoThreshold );};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_efd *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dddgd ,_fcgga :=_df .GetNumbersAsFloat (objects );
if _fcgga !=nil {return nil ,_fcgga ;};return _efd .ColorFromFloats (_dddgd );};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gegcag ,_abff :=NewStandard14Font (basefont );if _abff !=nil {panic (_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gegcag ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_fdffe *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_fdffe ._fbbca =colorspace ;};func (_adfc *DSS )generateHashMap (_gdead []*_df .PdfObjectStream )(map[string ]*_df .PdfObjectStream ,error ){_dbbf :=map[string ]*_df .PdfObjectStream {};
for _ ,_ccdag :=range _gdead {_eeebb ,_acbb :=_df .DecodeStream (_ccdag );if _acbb !=nil {return nil ,_acbb ;};_cgff ,_acbb :=_gaeeg (_eeebb );if _acbb !=nil {return nil ,_acbb ;};_dbbf [string (_cgff )]=_ccdag ;};return _dbbf ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );


// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dcdd .Lock ();defer _dcdd .Unlock ();_cdeee =subject };func (_beab *PdfWriter )setWriter (_ddga _dg .Writer ){_beab ._debcg =_beab ._ecdab ;_beab ._cfagf =_f .NewWriter (_ddga );};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdgc pdfFontSimple )GetRuneMetrics (r rune )(_aec .CharMetrics ,bool ){if _fdgc ._dfgaa !=nil {_edde ,_efaad :=_fdgc ._dfgaa .Read (r );if _efaad {return _edde ,true ;};};_acfb :=_fdgc .Encoder ();if _acfb ==nil {_gc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdgc );
return _aec .CharMetrics {},false ;};_gggd ,_dfdab :=_acfb .RuneToCharcode (r );if !_dfdab {if r !=' '{_gc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdgc );
};return _aec .CharMetrics {},false ;};_bdeaf ,_eebcc :=_fdgc .GetCharMetrics (_gggd );return _bdeaf ,_eebcc ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fabc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_df .PdfObject )(PdfColor ,error ){if len (objects )!=_fabc .GetNumComponents (){return nil ,_cab .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_begbc ,_abfb :=_df .GetNumbersAsFloat (objects );
if _abfb !=nil {return nil ,_abfb ;};return _fabc .ColorFromFloats (_begbc );};

// ToPdfObject implements interface PdfModel.
func (_agcb *PdfAnnotationStrikeOut )ToPdfObject ()_df .PdfObject {_agcb .PdfAnnotation .ToPdfObject ();_ega :=_agcb ._bef ;_dbeb :=_ega .PdfObject .(*_df .PdfObjectDictionary );_agcb .PdfAnnotationMarkup .appendToPdfDictionary (_dbeb );_dbeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_df .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dbeb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_agcb .QuadPoints );return _ega ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func _dgebf (_fffe _df .PdfObject )(*PdfColorspaceICCBased ,error ){_ebfe :=&PdfColorspaceICCBased {};if _aebac ,_adea :=_fffe .(*_df .PdfIndirectObject );_adea {_ebfe ._bcbff =_aebac ;};_fffe =_df .TraceToDirectObject (_fffe );
_gegb ,_acea :=_fffe .(*_df .PdfObjectArray );if !_acea {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gegb .Len ()!=2{return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_fffe =_df .TraceToDirectObject (_gegb .Get (0));_gaccg ,_acea :=_fffe .(*_df .PdfObjectName );if !_acea {return nil ,_g .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_gaccg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_g .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fffe =_gegb .Get (1);
_ggbe ,_acea :=_df .GetStream (_fffe );if !_acea {_gc .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_fffe );
return nil ,_g .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dfdb :=_ggbe .PdfObjectDictionary ;_ecac ,_acea :=_dfdb .Get ("\u004e").(*_df .PdfObjectInteger );
if !_acea {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ecac !=1&&*_ecac !=3&&*_ecac !=4{return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_ebfe .N =int (*_ecac );if _gfacd :=_dfdb .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_gfacd !=nil {_edeb ,_bfdgf :=NewPdfColorspaceFromPdfObject (_gfacd );if _bfdgf !=nil {return nil ,_bfdgf ;};_ebfe .Alternate =_edeb ;};if _bbfg :=_dfdb .Get ("\u0052\u0061\u006eg\u0065");
_bbfg !=nil {_bbfg =_df .TraceToDirectObject (_bbfg );_dfae ,_dabf :=_bbfg .(*_df .PdfObjectArray );if !_dabf {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _dfae .Len ()!=2*_ebfe .N {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_abbe ,_afag :=_dfae .GetAsFloat64Slice ();if _afag !=nil {return nil ,_afag ;};_ebfe .Range =_abbe ;}else {_ebfe .Range =make ([]float64 ,2*_ebfe .N );for _ccg :=0;_ccg < _ebfe .N ;_ccg ++{_ebfe .Range [2*_ccg ]=0.0;_ebfe .Range [2*_ccg +1]=1.0;};};
if _bfgc :=_dfdb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bfgc !=nil {_edbb ,_beac :=_bfgc .(*_df .PdfObjectStream );if !_beac {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_ebfe .Metadata =_edbb ;};_ffccc ,_fdced :=_df .DecodeStream (_ggbe );if _fdced !=nil {return nil ,_fdced ;};_ebfe .Data =_ffccc ;_ebfe ._gddgg =_ggbe ;return _ebfe ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ace :=NewPdfAction ();_cfd :=&PdfActionSetOCGState {};_cfd .PdfAction =_ace ;_ace .SetContext (_cfd );return _cfd ;};func (_cgf *PdfReader )newPdfAnnotationCircleFromDict (_baba *_df .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_dgf :=PdfAnnotationCircle {};
_dbb ,_gcfg :=_cgf .newPdfAnnotationMarkupFromDict (_baba );if _gcfg !=nil {return nil ,_gcfg ;};_dgf .PdfAnnotationMarkup =_dbb ;_dgf .BS =_baba .Get ("\u0042\u0053");_dgf .IC =_baba .Get ("\u0049\u0043");_dgf .BE =_baba .Get ("\u0042\u0045");_dgf .RD =_baba .Get ("\u0052\u0044");
return &_dgf ,nil ;};type pdfFontSimple struct{fontCommon ;_fgeg *_df .PdfIndirectObject ;_abaag map[_cfe .CharCode ]float64 ;_agga _cfe .TextEncoder ;_bebe _cfe .TextEncoder ;_gfcg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _df .PdfObject ;LastChar _df .PdfObject ;Widths _df .PdfObject ;Encoding _df .PdfObject ;_dfgaa *_aec .RuneCharSafeMap ;};func _bbafc (_egaae _df .PdfObject )(*PdfColorspaceCalGray ,error ){_dbga :=NewPdfColorspaceCalGray ();if _ddae ,_ebdg :=_egaae .(*_df .PdfIndirectObject );
_ebdg {_dbga ._dgdb =_ddae ;};_egaae =_df .TraceToDirectObject (_egaae );_bccfb ,_adddd :=_egaae .(*_df .PdfObjectArray );if !_adddd {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bccfb .Len ()!=2{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_egaae =_df .TraceToDirectObject (_bccfb .Get (0));_ggdf ,_adddd :=_egaae .(*_df .PdfObjectName );if !_adddd {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ggdf !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_g .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_egaae =_df .TraceToDirectObject (_bccfb .Get (1));
_eecb ,_adddd :=_egaae .(*_df .PdfObjectDictionary );if !_adddd {return nil ,_g .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_egaae =_eecb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_egaae =_df .TraceToDirectObject (_egaae );_aage ,_adddd :=_egaae .(*_df .PdfObjectArray );if !_adddd {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _aage .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_agcaf ,_bafe :=_aage .GetAsFloat64Slice ();
if _bafe !=nil {return nil ,_bafe ;};_dbga .WhitePoint =_agcaf ;_egaae =_eecb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _egaae !=nil {_egaae =_df .TraceToDirectObject (_egaae );_dbba ,_degg :=_egaae .(*_df .PdfObjectArray );
if !_degg {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _dbba .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_dafbg ,_faec :=_dbba .GetAsFloat64Slice ();if _faec !=nil {return nil ,_faec ;};_dbga .BlackPoint =_dafbg ;};_egaae =_eecb .Get ("\u0047\u0061\u006dm\u0061");if _egaae !=nil {_egaae =_df .TraceToDirectObject (_egaae );_acae ,_beee :=_df .GetNumberAsFloat (_egaae );
if _beee !=nil {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_dbga .Gamma =_acae ;};return _dbga ,nil ;};