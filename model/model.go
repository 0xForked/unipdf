//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_de "bytes";_df "crypto/md5";_bg "crypto/rand";_b "crypto/sha1";_fa "crypto/x509";_f "encoding/binary";_e "encoding/hex";_ee "errors";_d "fmt";_gd "github.com/unidoc/pkcs7";_aa "github.com/unidoc/unipdf/v3/common";_fdb "github.com/unidoc/unipdf/v3/core";
_bf "github.com/unidoc/unipdf/v3/core/security";_ec "github.com/unidoc/unipdf/v3/core/security/crypt";_cgc "github.com/unidoc/unipdf/v3/internal/cmap";_ff "github.com/unidoc/unipdf/v3/internal/imageutil";_bfg "github.com/unidoc/unipdf/v3/internal/license";
_cd "github.com/unidoc/unipdf/v3/internal/sampling";_eb "github.com/unidoc/unipdf/v3/internal/textencoding";_gge "github.com/unidoc/unipdf/v3/internal/timeutils";_ffb "github.com/unidoc/unipdf/v3/internal/transform";_eec "github.com/unidoc/unipdf/v3/model/internal/docutil";
_fc "github.com/unidoc/unipdf/v3/model/internal/fonts";_gf "github.com/unidoc/unipdf/v3/model/mdp";_aae "github.com/unidoc/unipdf/v3/model/sigutil";_be "github.com/unidoc/unipdf/v3/ps";_dg "github.com/unidoc/unitype";_fdd "golang.org/x/xerrors";_ac "hash";
_bd "image";_gb "image/color";_ "image/gif";_ "image/png";_ca "io";_abb "io/ioutil";_fag "math";_fde "math/rand";_fgc "os";_fdc "regexp";_gg "sort";_bge "strconv";_gga "strings";_a "sync";_ag "time";_fd "unicode";_cg "unicode/utf8";);

// ToInteger convert to an integer format.
func (_dbdc *PdfColorLab )ToInteger (bits int )[3]uint32 {_adfa :=_fag .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_adfa *_dbdc .L ()),uint32 (_adfa *_dbdc .A ()),uint32 (_adfa *_dbdc .B ())};};

// GetPdfInfo returns the PDF info dictionary.
func (_ddefe *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_aafga ,_eage :=_ddefe .GetTrailer ();if _eage !=nil {return nil ,_eage ;};var _bccba *_fdb .PdfObjectDictionary ;_adgbee :=_aafga .Get ("\u0049\u006e\u0066\u006f");switch _agdg :=_adgbee .(type ){case *_fdb .PdfObjectReference :_cecdd :=_agdg ;
_adgbee ,_eage =_ddefe .GetIndirectObjectByNumber (int (_cecdd .ObjectNumber ));_adgbee =_fdb .TraceToDirectObject (_adgbee );if _eage !=nil {return nil ,_eage ;};_bccba ,_ =_adgbee .(*_fdb .PdfObjectDictionary );case *_fdb .PdfObjectDictionary :_bccba =_agdg ;
};if _bccba ==nil {return nil ,_ee .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_acfaf ,_eage :=NewPdfInfoFromObject (_bccba );if _eage !=nil {return nil ,_eage ;
};return _acfaf ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_fcef FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_fcef .Mask ()|fl .Mask ())};func (_fdaf *PdfReader )newPdfFieldSignatureFromDict (_gdgg *_fdb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_ddee :=&PdfFieldSignature {};_dgfb ,_fedaf :=_fdb .GetIndirect (_gdgg .Get ("\u0056"));
if _fedaf {var _bdgec error ;_ddee .V ,_bdgec =_fdaf .newPdfSignatureFromIndirect (_dgfb );if _bdgec !=nil {return nil ,_bdgec ;};};_ddee .Lock ,_ =_fdb .GetIndirect (_gdgg .Get ("\u004c\u006f\u0063\u006b"));_ddee .SV ,_ =_fdb .GetIndirect (_gdgg .Get ("\u0053\u0056"));
return _ddee ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_cf :=NewPdfAction ();_fe :=&PdfActionGoToR {};_fe .PdfAction =_cf ;_cf .SetContext (_fe );return _fe ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_ecbdae *PdfInfo )ToPdfObject ()_fdb .PdfObject {_gedfac :=_fdb .MakeDict ();_gedfac .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_ecbdae .Title );_gedfac .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_ecbdae .Author );_gedfac .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_ecbdae .Subject );
_gedfac .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ecbdae .Keywords );_gedfac .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_ecbdae .Creator );_gedfac .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ecbdae .Producer );
_gedfac .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_ecbdae .Trapped );if _ecbdae .CreationDate !=nil {_gedfac .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ecbdae .CreationDate .ToPdfObject ());};if _ecbdae .ModifiedDate !=nil {_gedfac .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_ecbdae .ModifiedDate .ToPdfObject ());
};for _ ,_dfcc :=range _ecbdae ._ecgdf .Keys (){_gedfac .SetIfNotNil (_dfcc ,_ecbdae ._ecgdf .Get (_dfcc ));};return _gedfac ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_gccae *XObjectForm )GetContainingPdfObject ()_fdb .PdfObject {return _gccae ._eeafe };

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;var _ pdfFont =(*pdfFontType3 )(nil );

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ggfdd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ggfdd .Alternate ==nil {if _ggfdd .N ==1{_egfb :=NewPdfColorspaceDeviceGray ();return _egfb .ColorFromFloats (vals );}else if _ggfdd .N ==3{_aacdg :=NewPdfColorspaceDeviceRGB ();
return _aacdg .ColorFromFloats (vals );}else if _ggfdd .N ==4{_babe :=NewPdfColorspaceDeviceCMYK ();return _babe .ColorFromFloats (vals );}else {return nil ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ggfdd .Alternate .ColorFromFloats (vals );};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func (_gaca *PdfReader )newPdfActionSoundFromDict (_fgb *_fdb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_fgb .Get ("\u0053\u006f\u0075n\u0064"),Volume :_fgb .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_fgb .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_fgb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_fgb .Get ("\u004d\u0069\u0078")},nil ;
};func _fgagf (_ceaaa _ca .ReadSeeker ,_eaab *ReaderOpts ,_gffbe bool ,_afdcb string )(*PdfReader ,error ){if _eaab ==nil {_eaab =NewReaderOpts ();};_fdcaa :=*_eaab ;_bgbe :=&PdfReader {_baaad :_ceaaa ,_cccf :map[_fdb .PdfObject ]struct{}{},_ggdg :_ebcbe (),_fbgeb :_eaab .LazyLoad ,_caac :_eaab .ComplianceMode ,_ecbf :_gffbe ,_ffafd :&_fdcaa };
_deagg ,_abed :=_fbbba ("\u0072");if _abed !=nil {return nil ,_abed ;};_abed =_bfg .Track (_deagg ,_afdcb );if _abed !=nil {return nil ,_abed ;};_bgbe ._afedgg =_deagg ;var _faed *_fdb .PdfParser ;if !_bgbe ._caac {_faed ,_abed =_fdb .NewParser (_ceaaa );
}else {_faed ,_abed =_fdb .NewCompliancePdfParser (_ceaaa );};if _abed !=nil {return nil ,_abed ;};_bgbe ._dbbec =_faed ;_ebbed ,_abed :=_bgbe .IsEncrypted ();if _abed !=nil {return nil ,_abed ;};if !_ebbed {_abed =_bgbe .loadStructure ();if _abed !=nil {return nil ,_abed ;
};}else if _gffbe {_cdagae ,_adeeg :=_bgbe .Decrypt ([]byte (_eaab .Password ));if _adeeg !=nil {return nil ,_adeeg ;};if !_cdagae {return nil ,_ee .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_bgbe ._eegeda =make (map[*PdfReader ]*PdfReader );_bgbe ._eggca =make ([]*PdfReader ,_faed .GetRevisionNumber ());return _bgbe ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fggda *PdfField )FullName ()(string ,error ){var _beefbe _de .Buffer ;_fcbd :=[]string {};if _fggda .T !=nil {_fcbd =append (_fcbd ,_fggda .T .Decoded ());};_cebgf :=map[*PdfField ]bool {};_cebgf [_fggda ]=true ;_cabf :=_fggda .Parent ;for _cabf !=nil {if _ ,_dcbb :=_cebgf [_cabf ];
_dcbb {return _beefbe .String (),_ee .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _cabf .T ==nil {return _beefbe .String (),_ee .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fcbd =append (_fcbd ,_cabf .T .Decoded ());_cebgf [_cabf ]=true ;_cabf =_cabf .Parent ;};for _aedc :=len (_fcbd )-1;_aedc >=0;_aedc --{_beefbe .WriteString (_fcbd [_aedc ]);if _aedc > 0{_beefbe .WriteString ("\u002e");};};return _beefbe .String (),nil ;
};func (_eeddd *PdfReader )buildNameNodes (_bcdd *_fdb .PdfIndirectObject ,_abdge map[_fdb .PdfObject ]struct{})error {if _bcdd ==nil {return nil ;};if _ ,_ebcga :=_abdge [_bcdd ];_ebcga {_aa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bcdd .ObjectNumber );
return nil ;};_abdge [_bcdd ]=struct{}{};_gebeg ,_cccga :=_bcdd .PdfObject .(*_fdb .PdfObjectDictionary );if !_cccga {return _ee .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _fbeed ,_acdge :=_fdb .GetDict (_gebeg .Get ("\u0044\u0065\u0073t\u0073"));
_acdge {_ceggb ,_fedag :=_fdb .GetArray (_fbeed .Get ("\u004b\u0069\u0064\u0073"));if !_fedag {return _ee .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_aa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_ceggb );
for _dcfbf ,_fggeb :=range _ceggb .Elements (){_dafab ,_cgdff :=_fdb .GetIndirect (_fggeb );if !_cgdff {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_dafab );
return _ee .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_ceggb .Set (_dcfbf ,_dafab );_cgee :=_eeddd .buildNameNodes (_dafab ,_abdge );if _cgee !=nil {return _cgee ;
};};};if _dade ,_fgece :=_fdb .GetDict (_gebeg );_fgece {if !_fdb .IsNullObject (_dade .Get ("\u004b\u0069\u0064\u0073")){if _facdc ,_edcgfe :=_fdb .GetArray (_dade .Get ("\u004b\u0069\u0064\u0073"));_edcgfe {for _aadfb ,_cbfbb :=range _facdc .Elements (){if _gcgbbb ,_gfcae :=_fdb .GetIndirect (_cbfbb );
_gfcae {_facdc .Set (_aadfb ,_gcgbbb );_feafb :=_eeddd .buildNameNodes (_gcgbbb ,_abdge );if _feafb !=nil {return _feafb ;};};};};};};return nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_begb :=PdfColorDeviceGray (grayVal );return &_begb ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fegb *pdfFontSimple )ToPdfObject ()_fdb .PdfObject {if _fegb ._gabca ==nil {_fegb ._gabca =&_fdb .PdfIndirectObject {};};_ceaca :=_fegb .baseFields ().asPdfObjectDictionary ("");_fegb ._gabca .PdfObject =_ceaca ;if _fegb .FirstChar !=nil {_ceaca .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fegb .FirstChar );
};if _fegb .LastChar !=nil {_ceaca .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fegb .LastChar );};if _fegb .Widths !=nil {_ceaca .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fegb .Widths );};if _fegb .Encoding !=nil {_ceaca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fegb .Encoding );
}else if _fegb ._cafgd !=nil {_ffcgb :=_fegb ._cafgd .ToPdfObject ();if _ffcgb !=nil {_ceaca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ffcgb );};};return _fegb ._gabca ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfaa *PdfColorspaceDeviceRGB )ToPdfObject ()_fdb .PdfObject {return _fdb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_efbf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_efbf .NumInputs {_aa .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ee .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _efbf ._acdaa ==nil {_fade :=_efbf .processSamples ();if _fade !=nil {return nil ,_fade ;};};_bggbe :=_efbf .Encode ;if _bggbe ==nil {_bggbe =[]float64 {};
for _fbbbd :=0;_fbbbd < len (_efbf .Size );_fbbbd ++{_bggbe =append (_bggbe ,0);_bggbe =append (_bggbe ,float64 (_efbf .Size [_fbbbd ]-1));};};_fdbcg :=_efbf .Decode ;if _fdbcg ==nil {_fdbcg =_efbf .Range ;};_dcdbe :=make ([]int ,len (x ));for _gcgge :=0;
_gcgge < len (x );_gcgge ++{_abgef :=x [_gcgge ];_edcdf :=_fag .Min (_fag .Max (_abgef ,_efbf .Domain [2*_gcgge ]),_efbf .Domain [2*_gcgge +1]);_dgaaf :=_ff .LinearInterpolate (_edcdf ,_efbf .Domain [2*_gcgge ],_efbf .Domain [2*_gcgge +1],_bggbe [2*_gcgge ],_bggbe [2*_gcgge +1]);
_fcgfc :=_fag .Min (_fag .Max (_dgaaf ,0),float64 (_efbf .Size [_gcgge ]-1));_egaff :=int (_fag .Floor (_fcgfc +0.5));if _egaff < 0{_egaff =0;}else if _egaff > _efbf .Size [_gcgge ]{_egaff =_efbf .Size [_gcgge ]-1;};_dcdbe [_gcgge ]=_egaff ;};_fccd :=_dcdbe [0];
for _cfcfb :=1;_cfcfb < _efbf .NumInputs ;_cfcfb ++{_gggce :=_dcdbe [_cfcfb ];for _gfcc :=0;_gfcc < _cfcfb ;_gfcc ++{_gggce *=_efbf .Size [_gfcc ];};_fccd +=_gggce ;};_fccd *=_efbf .NumOutputs ;var _adefcc []float64 ;for _bggbg :=0;_bggbg < _efbf .NumOutputs ;
_bggbg ++{_efgaf :=_fccd +_bggbg ;if _efgaf >=len (_efbf ._acdaa ){_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_bfag :=_efbf ._acdaa [_efgaf ];_gdec :=_ff .LinearInterpolate (float64 (_bfag ),0,_fag .Pow (2,float64 (_efbf .BitsPerSample )),_fdbcg [2*_bggbg ],_fdbcg [2*_bggbg +1]);_bgecfc :=_fag .Min (_fag .Max (_gdec ,_efbf .Range [2*_bggbg ]),_efbf .Range [2*_bggbg +1]);
_adefcc =append (_adefcc ,_bgecfc );};return _adefcc ,nil ;};func (_cbeg *PdfReader )newPdfAnnotationLinkFromDict (_bad *_fdb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_efg :=PdfAnnotationLink {};_efg .A =_bad .Get ("\u0041");_efg .Dest =_bad .Get ("\u0044\u0065\u0073\u0074");
_efg .H =_bad .Get ("\u0048");_efg .PA =_bad .Get ("\u0050\u0041");_efg .QuadPoints =_bad .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_efg .BS =_bad .Get ("\u0042\u0053");return &_efg ,nil ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_fdb .PdfParser ;DiffPolicy _gf .DiffPolicy ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bfce *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bfce .baseFields ()._ecde !=nil {return _bfce .baseFields ()._ecde ;};if _gadbd :=_bfce ._babcd .getFontDescriptor ();_gadbd !=nil {return _gadbd ;};_aa .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bfce );
return nil ;};func (_febb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _febb ._ecde };

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_egdga *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fdb .GetNumberAsFloat (_egdga .CapHeight );};func (_cbfe *PdfReader )newPdfAnnotationMovieFromDict (_cabc *_fdb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ccec :=PdfAnnotationMovie {};
_ccec .T =_cabc .Get ("\u0054");_ccec .Movie =_cabc .Get ("\u004d\u006f\u0076i\u0065");_ccec .A =_cabc .Get ("\u0041");return &_ccec ,nil ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;var _fdada =false ;

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fdb .PdfObject ;};func _cdbdc (_dagg *_ff .ImageBase )(_cfcac Image ){_cfcac .Width =int64 (_dagg .Width );_cfcac .Height =int64 (_dagg .Height );_cfcac .BitsPerComponent =int64 (_dagg .BitsPerComponent );
_cfcac .ColorComponents =_dagg .ColorComponents ;_cfcac .Data =_dagg .Data ;_cfcac ._gcgd =_dagg .Decode ;_cfcac ._dcaf =_dagg .Alpha ;return _cfcac ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fdb .PdfObjectInteger ;BitsPerComponent *_fdb .PdfObjectInteger ;VerticesPerRow *_fdb .PdfObjectInteger ;Decode *_fdb .PdfObjectArray ;Function []PdfFunction ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gebf *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbc :=vals [0];if _cfbc < 0.0||_cfbc > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cfbc );
return nil ,ErrColorOutOfRange ;};_bcaf :=vals [1];if _bcaf < 0.0||_bcaf > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bcaf );return nil ,ErrColorOutOfRange ;
};_fcbca :=vals [2];if _fcbca < 0.0||_fcbca > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcbca );return nil ,ErrColorOutOfRange ;};_bcgb :=vals [3];
if _bcgb < 0.0||_bcgb > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bcgb );return nil ,ErrColorOutOfRange ;};_acfde :=NewPdfColorDeviceCMYK (_cfbc ,_bcaf ,_fcbca ,_bcgb );
return _acfde ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_bbcc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bdfe ,_aacab :=range _bbcc ._dcaf {_bbcc ._dcaf [_bdfe ]=mapFunc (_aacab );};};func (_ddc *PdfReader )newPdfActionGotoRFromDict (_egd *_fdb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_ddcg ,_bdg :=_gaef (_egd .Get ("\u0046"));
if _bdg !=nil {return nil ,_bdg ;};return &PdfActionGoToR {D :_egd .Get ("\u0044"),NewWindow :_egd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ddcg },nil ;};func (_edf *PdfReader )newPdfAnnotationTextFromDict (_fbfg *_fdb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_egdc :=PdfAnnotationText {};
_bed ,_beg :=_edf .newPdfAnnotationMarkupFromDict (_fbfg );if _beg !=nil {return nil ,_beg ;};_egdc .PdfAnnotationMarkup =_bed ;_egdc .Open =_fbfg .Get ("\u004f\u0070\u0065\u006e");_egdc .Name =_fbfg .Get ("\u004e\u0061\u006d\u0065");_egdc .State =_fbfg .Get ("\u0053\u0074\u0061t\u0065");
_egdc .StateModel =_fbfg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_egdc ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_fega PdfModel ;_gdgea *_fdb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fdb .PdfObjectName ;T *_fdb .PdfObjectString ;TU *_fdb .PdfObjectString ;TM *_fdb .PdfObjectString ;Ff *_fdb .PdfObjectInteger ;
V _fdb .PdfObject ;DV _fdb .PdfObject ;AA _fdb .PdfObject ;VariableText *VariableText ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_cggc *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _agfgg []_eb .TextEncoder ;var _baef _eb .CMapEncoder ;if _beca :=_cggc .baseFields ()._egadb ;_beca !=nil {_baef =_eb .NewCMapEncoder ("",nil ,_beca );};_ggcd :=_cggc .Encoder ();
if _ggcd !=nil {switch _eebe :=_ggcd .(type ){case _eb .SimpleEncoder :_egceef :=_eebe .BaseName ();if _ ,_cfabg :=_gcdgbc [_egceef ];_cfabg {_agfgg =append (_agfgg ,_ggcd );};};};if len (_agfgg )==0{if _cggc .baseFields ()._egadb !=nil {_agfgg =append (_agfgg ,_baef );
};if _ggcd !=nil {_agfgg =append (_agfgg ,_ggcd );};};var _ecgc _de .Buffer ;var _dgbf int ;for _ ,_dfce :=range data {var _cedea bool ;for _ ,_cfda :=range _agfgg {if _cdee :=_cfda .Encode (string (_dfce ));len (_cdee )> 0{_ecgc .Write (_cdee );_cedea =true ;
break ;};};if !_cedea {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dfce );
_dgbf ++;};};if _dgbf !=0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dgbf ,_cggc ,_agfgg );
};return _ecgc .Bytes (),_dgbf ;};func (_fcde *PdfReader )newPdfActionURIFromDict (_ddfd *_fdb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_ddfd .Get ("\u0055\u0052\u0049"),IsMap :_ddfd .Get ("\u0049\u0073\u004da\u0070")},nil ;
};func (_cccg *PdfReader )newPdfActionResetFormFromDict (_bgg *_fdb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bgg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ada :=NewPdfAnnotation ();_fcg :=&PdfAnnotationLink {};_fcg .PdfAnnotation =_ada ;_ada .SetContext (_fcg );return _fcg ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_efef *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _efef ._edbbc .(*PdfTilingPattern );};func (_efbd *PdfWriter )adjustXRefAffectedVersion (_aagbb bool ){if _aagbb &&_efbd ._bgagb .Major ==1&&_efbd ._bgagb .Minor < 5{_efbd ._bgagb .Minor =5;
};};func (_bdbc *PdfReader )newPdfAnnotationWatermarkFromDict (_ccccf *_fdb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_eeag :=PdfAnnotationWatermark {};_eeag .FixedPrint =_ccccf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_eeag ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_gaede *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// GetContentStream returns the pattern cell's content stream
func (_eddgb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_bcdge ,_ ,_cdcbf :=_eddgb .GetContentStreamWithEncoder ();return _bcdge ,_cdcbf ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_cdca *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func _ccdbc (_egcc _fdb .PdfObject )(*PdfFunctionType3 ,error ){_dgcf :=&PdfFunctionType3 {};var _aeae *_fdb .PdfObjectDictionary ;if _ffgf ,_bcgbg :=_egcc .(*_fdb .PdfIndirectObject );
_bcgbg {_fadbb ,_cdec :=_ffgf .PdfObject .(*_fdb .PdfObjectDictionary );if !_cdec {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dgcf ._fdaec =_ffgf ;_aeae =_fadbb ;}else if _aaceg ,_badce :=_egcc .(*_fdb .PdfObjectDictionary );
_badce {_aeae =_aaceg ;}else {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecec ,_bcbdf :=_fdb .TraceToDirectObject (_aeae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fdb .PdfObjectArray );
if !_bcbdf {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ecec .Len ()!=2{_aa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fabfd ,_aggd :=_ecec .ToFloat64Array ();
if _aggd !=nil {return nil ,_aggd ;};_dgcf .Domain =_fabfd ;_ecec ,_bcbdf =_fdb .TraceToDirectObject (_aeae .Get ("\u0052\u0061\u006eg\u0065")).(*_fdb .PdfObjectArray );if _bcbdf {if _ecec .Len ()< 0||_ecec .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ecafd ,_fagb :=_ecec .ToFloat64Array ();if _fagb !=nil {return nil ,_fagb ;};_dgcf .Range =_ecafd ;};_ecec ,_bcbdf =_fdb .TraceToDirectObject (_aeae .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fdb .PdfObjectArray );if !_bcbdf {_aa .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dgcf .Functions =[]PdfFunction {};
for _ ,_agbb :=range _ecec .Elements (){_fdfaa ,_efcgd :=_cfgbc (_agbb );if _efcgd !=nil {return nil ,_efcgd ;};_dgcf .Functions =append (_dgcf .Functions ,_fdfaa );};_ecec ,_bcbdf =_fdb .TraceToDirectObject (_aeae .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fdb .PdfObjectArray );
if !_bcbdf {_aa .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_defe ,_aggd :=_ecec .ToFloat64Array ();if _aggd !=nil {return nil ,_aggd ;};_dgcf .Bounds =_defe ;if len (_dgcf .Bounds )!=len (_dgcf .Functions )-1{_aa .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dgcf .Bounds ),len (_dgcf .Functions ));
return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecec ,_bcbdf =_fdb .TraceToDirectObject (_aeae .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fdb .PdfObjectArray );if !_bcbdf {_aa .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ccfd ,_aggd :=_ecec .ToFloat64Array ();
if _aggd !=nil {return nil ,_aggd ;};_dgcf .Encode =_ccfd ;if len (_dgcf .Encode )!=2*len (_dgcf .Functions ){_aa .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dgcf .Encode ),len (_dgcf .Functions ));
return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dgcf ,nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fdb .PdfObject ;Dest _fdb .PdfObject ;H _fdb .PdfObject ;PA _fdb .PdfObject ;QuadPoints _fdb .PdfObject ;BS _fdb .PdfObject ;_faaa *PdfAction ;_ecgf *PdfReader ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// SetAction sets the PDF action for the annotation link.
func (_fagf *PdfAnnotationLink )SetAction (action *PdfAction ){_fagf ._faaa =action ;if action ==nil {_fagf .A =nil ;};};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_edag *PdfField )GetContext ()PdfModel {return _edag ._fega };

// ToPdfObject implements interface PdfModel.
func (_aba *PdfAnnotationPolygon )ToPdfObject ()_fdb .PdfObject {_aba .PdfAnnotation .ToPdfObject ();_fbbb :=_aba ._cgbd ;_gegg :=_fbbb .PdfObject .(*_fdb .PdfObjectDictionary );_aba .PdfAnnotationMarkup .appendToPdfDictionary (_gegg );_gegg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_gegg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_aba .Vertices );_gegg .SetIfNotNil ("\u004c\u0045",_aba .LE );_gegg .SetIfNotNil ("\u0042\u0053",_aba .BS );_gegg .SetIfNotNil ("\u0049\u0043",_aba .IC );_gegg .SetIfNotNil ("\u0042\u0045",_aba .BE );
_gegg .SetIfNotNil ("\u0049\u0054",_aba .IT );_gegg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_aba .Measure );return _fbbb ;};func (_abf *PdfReader )newPdfActionMovieFromDict (_bga *_fdb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_bga .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_bga .Get ("\u0054"),Operation :_bga .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// Encoder returns the font's text encoder.
func (_eecdc pdfCIDFontType0 )Encoder ()_eb .TextEncoder {return _eecdc ._dbdbc };

// ToPdfObject implements interface PdfModel.
func (_gde *PdfAnnotationFileAttachment )ToPdfObject ()_fdb .PdfObject {_gde .PdfAnnotation .ToPdfObject ();_gfdd :=_gde ._cgbd ;_bbfb :=_gfdd .PdfObject .(*_fdb .PdfObjectDictionary );_gde .PdfAnnotationMarkup .appendToPdfDictionary (_bbfb );_bbfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_bbfb .SetIfNotNil ("\u0046\u0053",_gde .FS );_bbfb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gde .Name );return _gfdd ;};var _bdga =_fdc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_cgdb :=NewPdfAnnotation ();_bff :=&PdfAnnotationPolygon {};_bff .PdfAnnotation =_cgdb ;_bff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgdb .SetContext (_bff );return _bff ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cgea _fdb .ParserMetadata ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fdb .PdfObject ;Flags _fdb .PdfObject ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_effge *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fdb .GetNumberAsFloat (_effge .Ascent );};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dad :=NewPdfAnnotation ();_fgca :=&PdfAnnotationSquiggly {};_fgca .PdfAnnotation =_dad ;_fgca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dad .SetContext (_fgca );return _fgca ;};type fontFile struct{_gefd string ;
_cgdeae string ;_aabc _eb .SimpleEncoder ;};

// PdfVersion returns version of the PDF file.
func (_cgabc *PdfReader )PdfVersion ()_fdb .Version {return _cgabc ._dbbec .PdfVersion ()};

// K returns the value of the key component of the color.
func (_bbece *PdfColorDeviceCMYK )K ()float64 {return _bbece [3]};

// MergePageWith appends page content to source Pdf file page content.
func (_bbcde *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_afbc :=pageNum -1;var _baed *PdfPage ;for _aff ,_dffeb :=range _bbcde ._fdagd {if _aff ==_afbc {_baed =_dffeb ;};};if _baed ==nil {return _d .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _baed ._fccfd !=nil &&_baed ._fccfd .GetParser ()==_bbcde ._abcd ._dbbec {_baed =_baed .Duplicate ();_bbcde ._fdagd [_afbc ]=_baed ;};page =page .Duplicate ();_cgcge (page );_afag :=_bgec (_baed );_aedb :=_bgec (page );_gfdg :=make (map[_fdb .PdfObjectName ]_fdb .PdfObjectName );
for _gfdf :=range _aedb {if _ ,_badfd :=_afag [_gfdf ];_badfd {for _ccccc :=1;true ;_ccccc ++{_agg :=_fdb .PdfObjectName (string (_gfdf )+_bge .Itoa (_ccccc ));if _ ,_agbd :=_afag [_agg ];!_agbd {_gfdg [_gfdf ]=_agg ;break ;};};};};_ceba ,_dcfea :=page .GetContentStreams ();
if _dcfea !=nil {return _dcfea ;};_gfcb ,_dcfea :=_baed .GetContentStreams ();if _dcfea !=nil {return _dcfea ;};for _bade ,_efcg :=range _ceba {for _cgdc ,_bda :=range _gfdg {_efcg =_gga .Replace (_efcg ,"\u002f"+string (_cgdc ),"\u002f"+string (_bda ),-1);
};_ceba [_bade ]=_efcg ;};_gfcb =append (_gfcb ,_ceba ...);if _egbb :=_baed .SetContentStreams (_gfcb ,_fdb .NewFlateEncoder ());_egbb !=nil {return _egbb ;};_baed ._bcde =append (_baed ._bcde ,page ._bcde ...);if _baed .Resources ==nil {_baed .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_baed .Resources .Font =_bbcde .mergeResources (_baed .Resources .Font ,page .Resources .Font ,_gfdg );_baed .Resources .XObject =_bbcde .mergeResources (_baed .Resources .XObject ,page .Resources .XObject ,_gfdg );_baed .Resources .Properties =_bbcde .mergeResources (_baed .Resources .Properties ,page .Resources .Properties ,_gfdg );
if _baed .Resources .ProcSet ==nil {_baed .Resources .ProcSet =page .Resources .ProcSet ;};_baed .Resources .Shading =_bbcde .mergeResources (_baed .Resources .Shading ,page .Resources .Shading ,_gfdg );_baed .Resources .ExtGState =_bbcde .mergeResources (_baed .Resources .ExtGState ,page .Resources .ExtGState ,_gfdg );
};_cedb ,_dcfea :=_baed .GetMediaBox ();if _dcfea !=nil {return _dcfea ;};_ceaf ,_dcfea :=page .GetMediaBox ();if _dcfea !=nil {return _dcfea ;};var _ecgd bool ;if _cedb .Llx > _ceaf .Llx {_cedb .Llx =_ceaf .Llx ;_ecgd =true ;};if _cedb .Lly > _ceaf .Lly {_cedb .Lly =_ceaf .Lly ;
_ecgd =true ;};if _cedb .Urx < _ceaf .Urx {_cedb .Urx =_ceaf .Urx ;_ecgd =true ;};if _cedb .Ury < _ceaf .Ury {_cedb .Ury =_ceaf .Ury ;_ecgd =true ;};if _ecgd {_baed .MediaBox =_cedb ;};return nil ;};

// SetContext sets the sub action (context).
func (_ggb *PdfAction )SetContext (ctx PdfModel ){_ggb ._gc =ctx };func (_egcg *PdfReader )newPdfAnnotationWidgetFromDict (_efe *_fdb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_baee :=PdfAnnotationWidget {};_baee .H =_efe .Get ("\u0048");_baee .MK =_efe .Get ("\u004d\u004b");
_baee .A =_efe .Get ("\u0041");_baee .AA =_efe .Get ("\u0041\u0041");_baee .BS =_efe .Get ("\u0042\u0053");_baee .Parent =_efe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_baee ,nil ;};

// SetAnnotations sets the annotations list.
func (_daed *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_daed ._bcde =annotations };

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_affac []byte ;_acdaa []uint32 ;_cgaea *_fdb .PdfObjectStream ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ced :=NewPdfAnnotation ();_ffbg :=&PdfAnnotationUnderline {};_ffbg .PdfAnnotation =_ced ;_ffbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ced .SetContext (_ffbg );return _ffbg ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_dfab *PdfPage )GetPageDict ()*_fdb .PdfObjectDictionary {_bbfcd :=_dfab ._dacb ;_bbfcd .Clear ();_bbfcd .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0050\u0061\u0067\u0065"));_bbfcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dfab .Parent );
if _dfab .LastModified !=nil {_bbfcd .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dfab .LastModified .ToPdfObject ());};if _dfab .Resources !=nil {_bbfcd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dfab .Resources .ToPdfObject ());
};if _dfab .CropBox !=nil {_bbfcd .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_dfab .CropBox .ToPdfObject ());};if _dfab .MediaBox !=nil {_bbfcd .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_dfab .MediaBox .ToPdfObject ());};if _dfab .BleedBox !=nil {_bbfcd .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_dfab .BleedBox .ToPdfObject ());
};if _dfab .TrimBox !=nil {_bbfcd .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_dfab .TrimBox .ToPdfObject ());};if _dfab .ArtBox !=nil {_bbfcd .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_dfab .ArtBox .ToPdfObject ());};_bbfcd .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_dfab .BoxColorInfo );
_bbfcd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dfab .Contents );if _dfab .Rotate !=nil {_bbfcd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fdb .MakeInteger (*_dfab .Rotate ));};_bbfcd .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dfab .Group );
_bbfcd .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_dfab .Thumb );_bbfcd .SetIfNotNil ("\u0042",_dfab .B );_bbfcd .SetIfNotNil ("\u0044\u0075\u0072",_dfab .Dur );_bbfcd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dfab .Trans );_bbfcd .SetIfNotNil ("\u0041\u0041",_dfab .AA );
_bbfcd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dfab .Metadata );_bbfcd .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dfab .PieceInfo );_bbfcd .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dfab .StructParents );
_bbfcd .SetIfNotNil ("\u0049\u0044",_dfab .ID );_bbfcd .SetIfNotNil ("\u0050\u005a",_dfab .PZ );_bbfcd .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_dfab .SeparationInfo );_bbfcd .SetIfNotNil ("\u0054\u0061\u0062\u0073",_dfab .Tabs );
_bbfcd .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_dfab .TemplateInstantiated );_bbfcd .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_dfab .PresSteps );_bbfcd .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_dfab .UserUnit );
_bbfcd .SetIfNotNil ("\u0056\u0050",_dfab .VP );if _dfab ._bcde !=nil {_debd :=_fdb .MakeArray ();for _ ,_agafd :=range _dfab ._bcde {if _aaedb :=_agafd .GetContext ();_aaedb !=nil {_debd .Append (_aaedb .ToPdfObject ());}else {_debd .Append (_agafd .ToPdfObject ());
};};if _debd .Len ()> 0{_bbfcd .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_debd );};}else if _dfab .Annots !=nil {_bbfcd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_dfab .Annots );};return _bbfcd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cagba *PdfFilespec )GetContainingPdfObject ()_fdb .PdfObject {return _cagba ._addf };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_afedb pdfCIDFontType0 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){return _fc .CharMetrics {Wx :_afedb ._gafda },true ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_bgag *PdfFieldButton )IsCheckbox ()bool {return _bgag .GetType ()==ButtonTypeCheckbox };func _cgfgc ()string {return _aa .Version };

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fdb .PdfObjectName ;};

// M returns the value of the magenta component of the color.
func (_cdaa *PdfColorDeviceCMYK )M ()float64 {return _cdaa [1]};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_addgc *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_addgc .ToPdfOutline ().PdfOutlineTreeNode ;};func (_ddef *PdfReader )newPdfAnnotationCaretFromDict (_aaed *_fdb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gcbf :=PdfAnnotationCaret {};
_gca ,_eaba :=_ddef .newPdfAnnotationMarkupFromDict (_aaed );if _eaba !=nil {return nil ,_eaba ;};_gcbf .PdfAnnotationMarkup =_gca ;_gcbf .RD =_aaed .Get ("\u0052\u0044");_gcbf .Sy =_aaed .Get ("\u0053\u0079");return &_gcbf ,nil ;};func _faca (_bacbd *_fdb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cdcbe :=&PdfShadingPattern {};
_bfda :=_bacbd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bfda ==nil {_aa .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_abaaa ,_ffcgc :=_dacgdc (_bfda );
if _ffcgc !=nil {_aa .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_ffcgc );return nil ,_ffcgc ;};_cdcbe .Shading =_abaaa ;if _bbaac :=_bacbd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bbaac !=nil {_aedcd ,_geegdc :=_bbaac .(*_fdb .PdfObjectArray );if !_geegdc {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbaac );
return nil ,_fdb .ErrTypeError ;};_cdcbe .Matrix =_aedcd ;};if _ddcbec :=_bacbd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ddcbec !=nil {_cdcbe .ExtGState =_ddcbec ;};return _cdcbe ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dcgc :=&PdfAppender {_dfe :reader ._baaad ,Reader :reader ,_fgbe :reader ._dbbec ,_bgadb :reader ._cccf };_daae ,_ebeae :=_dcgc ._dfe .Seek (0,_ca .SeekEnd );if _ebeae !=nil {return nil ,_ebeae ;
};_dcgc ._gcag =_daae ;if _ ,_ebeae =_dcgc ._dfe .Seek (0,_ca .SeekStart );_ebeae !=nil {return nil ,_ebeae ;};_dcgc ._abcd ,_ebeae =NewPdfReader (_dcgc ._dfe );if _ebeae !=nil {return nil ,_ebeae ;};for _ ,_feb :=range _dcgc .Reader .GetObjectNums (){if _dcgc ._edfd < _feb {_dcgc ._edfd =_feb ;
};};_dcgc ._defa =_dcgc ._fgbe .GetXrefTable ();_dcgc ._decae =_dcgc ._fgbe .GetXrefOffset ();_dcgc ._fdagd =append (_dcgc ._fdagd ,_dcgc ._abcd .PageList ...);_dcgc ._acbb =make (map[_fdb .PdfObject ]struct{});_dcgc ._eaa =make (map[_fdb .PdfObject ]int64 );
_dcgc ._fgde =make (map[_fdb .PdfObject ]struct{});_dcgc ._ebbc =_dcgc ._abcd .AcroForm ;_dcgc ._bddg =_dcgc ._abcd .DSS ;return _dcgc ,nil ;};func (_agfbe *PdfWriter )writeTrailer (_eaaga int ){_agfbe .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _fdfaf :=0;_fdfaf <=_eaaga ;{for ;_fdfaf <=_eaaga ;_fdfaf ++{_dfccbe ,_gfagd :=_agfbe ._bbbeb [_fdfaf ];if _gfagd &&(!_agfbe ._ddfef ||_agfbe ._ddfef &&(_dfccbe .Type ==1&&_dfccbe .Offset >=_agfbe ._bgdgba ||_dfccbe .Type ==0)){break ;};};var _adcbg int ;
for _adcbg =_fdfaf +1;_adcbg <=_eaaga ;_adcbg ++{_eceg ,_cdfe :=_agfbe ._bbbeb [_adcbg ];if _cdfe &&(!_agfbe ._ddfef ||_agfbe ._ddfef &&(_eceg .Type ==1&&_eceg .Offset > _agfbe ._bgdgba )){continue ;};break ;};_gccd :=_d .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_fdfaf ,_adcbg -_fdfaf );
_agfbe .writeString (_gccd );for _fbebc :=_fdfaf ;_fbebc < _adcbg ;_fbebc ++{_adgaf :=_agfbe ._bbbeb [_fbebc ];switch _adgaf .Type {case 0:_gccd =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_agfbe .writeString (_gccd );
case 1:_gccd =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_adgaf .Offset ,0);_agfbe .writeString (_gccd );};};_fdfaf =_adcbg +1;};_dacbaa :=_fdb .MakeDict ();_dacbaa .Set ("\u0049\u006e\u0066\u006f",_agfbe ._fecbc );
_dacbaa .Set ("\u0052\u006f\u006f\u0074",_agfbe ._edda );_dacbaa .Set ("\u0053\u0069\u007a\u0065",_fdb .MakeInteger (int64 (_eaaga +1)));if _agfbe ._ddfef &&_agfbe ._faggc > 0{_dacbaa .Set ("\u0050\u0072\u0065\u0076",_fdb .MakeInteger (_agfbe ._faggc ));
};if _agfbe ._gbdba !=nil {_dacbaa .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_agfbe ._dfbdf );};if _agfbe ._dcdea ==nil &&_agfbe ._aebag !=""&&_agfbe ._gefad !=""{_agfbe ._dcdea =_fdb .MakeArray (_fdb .MakeHexString (_agfbe ._aebag ),_fdb .MakeHexString (_agfbe ._gefad ));
};if _agfbe ._dcdea !=nil {_dacbaa .Set ("\u0049\u0044",_agfbe ._dcdea );_aa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_agfbe ._dcdea );};_agfbe .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_agfbe .writeString (_dacbaa .WriteString ());
_agfbe .writeString ("\u000a");};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_fbfeda *Image )ToJBIG2Image ()(*_fdb .JBIG2Image ,error ){_feca ,_gffa :=_fbfeda .ToGoImage ();if _gffa !=nil {return nil ,_gffa ;};return _fdb .GoImageToJBIG2 (_feca ,_fdb .JB2ImageAutoThreshold );};

// ToPdfObject implements interface PdfModel.
func (_acfd *PdfAnnotationCircle )ToPdfObject ()_fdb .PdfObject {_acfd .PdfAnnotation .ToPdfObject ();_cece :=_acfd ._cgbd ;_fdec :=_cece .PdfObject .(*_fdb .PdfObjectDictionary );_acfd .PdfAnnotationMarkup .appendToPdfDictionary (_fdec );_fdec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_fdec .SetIfNotNil ("\u0042\u0053",_acfd .BS );_fdec .SetIfNotNil ("\u0049\u0043",_acfd .IC );_fdec .SetIfNotNil ("\u0042\u0045",_acfd .BE );_fdec .SetIfNotNil ("\u0052\u0044",_acfd .RD );return _cece ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cdbg *Image )ColorAt (x ,y int )(_gb .Color ,error ){_edfag :=_ff .BytesPerLine (int (_cdbg .Width ),int (_cdbg .BitsPerComponent ),_cdbg .ColorComponents );switch _cdbg .ColorComponents {case 1:return _ff .ColorAtGrayscale (x ,y ,int (_cdbg .BitsPerComponent ),_edfag ,_cdbg .Data ,_cdbg ._gcgd );
case 3:return _ff .ColorAtNRGBA (x ,y ,int (_cdbg .Width ),_edfag ,int (_cdbg .BitsPerComponent ),_cdbg .Data ,_cdbg ._dcaf ,_cdbg ._gcgd );case 4:return _ff .ColorAtCMYK (x ,y ,int (_cdbg .Width ),_cdbg .Data ,_cdbg ._gcgd );};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdbg .ColorComponents ,_cdbg .BitsPerComponent );
return nil ,_ee .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cgdag *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cgdag .AlternateSpace ==nil {return nil ,_ee .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cgdag .AlternateSpace .ColorToRGB (color );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_aagfa pdfFontType3 )GetCharMetrics (code _eb .CharCode )(_fc .CharMetrics ,bool ){if _afdad ,_agggb :=_aagfa ._dafe [code ];_agggb {return _fc .CharMetrics {Wx :_afdad },true ;};if _fc .IsStdFont (_fc .StdFontName (_aagfa ._gfdda )){return _fc .CharMetrics {Wx :250},true ;
};return _fc .CharMetrics {},false ;};func (_dcbbg *PdfReader )newPdfSignatureReferenceFromDict (_gebcc *_fdb .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _aaae ,_bfge :=_dcbbg ._ggdg .GetModelFromPrimitive (_gebcc ).(*PdfSignatureReference );
_bfge {return _aaae ,nil ;};_afbb :=&PdfSignatureReference {_ebgged :_gebcc ,Data :_gebcc .Get ("\u0044\u0061\u0074\u0061")};var _ccaf bool ;_afbb .Type ,_ =_fdb .GetName (_gebcc .Get ("\u0054\u0079\u0070\u0065"));_afbb .TransformMethod ,_ccaf =_fdb .GetName (_gebcc .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_ccaf {_aa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_afbb .TransformParams ,_ =_fdb .GetDict (_gebcc .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_afbb .DigestMethod ,_ =_fdb .GetName (_gebcc .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _afbb ,nil ;};func _gdggc (_bbgf _fdb .PdfObject )(*PdfFontDescriptor ,error ){_eacdb :=&PdfFontDescriptor {};_bbgf =_fdb .ResolveReference (_bbgf );if _bfec ,_caefg :=_bbgf .(*_fdb .PdfIndirectObject );_caefg {_eacdb ._daaad =_bfec ;_bbgf =_bfec .PdfObject ;
};_bcecd ,_eecc :=_fdb .GetDict (_bbgf );if !_eecc {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bbgf );
return nil ,_fdb .ErrTypeError ;};if _ceaea :=_bcecd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ceaea !=nil {_eacdb .FontName =_ceaea ;}else {_aa .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_acfadf ,_ :=_fdb .GetName (_eacdb .FontName );if _ecgdcc :=_bcecd .Get ("\u0054\u0079\u0070\u0065");_ecgdcc !=nil {_gbbc ,_bggag :=_ecgdcc .(*_fdb .PdfObjectName );if !_bggag ||string (*_gbbc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_aa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ecgdcc ,_acfadf ,_eacdb .FontName );
};}else {_aa .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_acfadf ,_eacdb .FontName );
};_eacdb .FontFamily =_bcecd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_eacdb .FontStretch =_bcecd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_eacdb .FontWeight =_bcecd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_eacdb .Flags =_bcecd .Get ("\u0046\u006c\u0061g\u0073");_eacdb .FontBBox =_bcecd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_eacdb .ItalicAngle =_bcecd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_eacdb .Ascent =_bcecd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_eacdb .Descent =_bcecd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_eacdb .Leading =_bcecd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_eacdb .CapHeight =_bcecd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_eacdb .XHeight =_bcecd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_eacdb .StemV =_bcecd .Get ("\u0053\u0074\u0065m\u0056");_eacdb .StemH =_bcecd .Get ("\u0053\u0074\u0065m\u0048");_eacdb .AvgWidth =_bcecd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_eacdb .MaxWidth =_bcecd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_eacdb .MissingWidth =_bcecd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_eacdb .FontFile =_bcecd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_eacdb .FontFile2 =_bcecd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_eacdb .FontFile3 =_bcecd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_eacdb .CharSet =_bcecd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_eacdb .Style =_bcecd .Get ("\u0053\u0074\u0079l\u0065");_eacdb .Lang =_bcecd .Get ("\u004c\u0061\u006e\u0067");
_eacdb .FD =_bcecd .Get ("\u0046\u0044");_eacdb .CIDSet =_bcecd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _eacdb .Flags !=nil {if _fcfga ,_bfdbfa :=_fdb .GetIntVal (_eacdb .Flags );_bfdbfa {_eacdb ._ceac =_fcfga ;};};if _eacdb .MissingWidth !=nil {if _aebf ,_gbbda :=_fdb .GetNumberAsFloat (_eacdb .MissingWidth );
_gbbda ==nil {_eacdb ._gbcb =_aebf ;};};if _eacdb .FontFile !=nil {_aefe ,_gegd :=_gecf (_eacdb .FontFile );if _gegd !=nil {return _eacdb ,_gegd ;};_aa .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_aefe );_eacdb .fontFile =_aefe ;
};if _eacdb .FontFile2 !=nil {_dgfa ,_caggge :=_fc .NewFontFile2FromPdfObject (_eacdb .FontFile2 );if _caggge !=nil {return _eacdb ,_caggge ;};_aa .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dgfa .String ());_eacdb ._dgcgb =&_dgfa ;
};return _eacdb ,nil ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cegac *PdfSignature )GetDocMDPPermission ()(_gf .DocMDPPermission ,bool ){for _ ,_cbdfc :=range _cegac .Reference .Elements (){if _bdgcg ,_ggda :=_fdb .GetDict (_cbdfc );_ggda {if _egecg ,_ceca :=_fdb .GetNameVal (_bdgcg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_ceca &&_egecg =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _fdgfgd ,_eaed :=_fdb .GetDict (_bdgcg .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_eaed {if P ,_fffeae :=_fdb .GetIntVal (_fdgfgd .Get ("\u0050"));
_fffeae {return _gf .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// PartialName returns the partial name of the field.
func (_eaef *PdfField )PartialName ()string {_adacf :="";if _eaef .T !=nil {_adacf =_eaef .T .Decoded ();}else {_aa .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _adacf ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dbcgd *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dbcgd ._edbbc .(*PdfShadingPattern );};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_ecbda :=&PdfColorspaceSpecialSeparation {};return _ecbda ;};func (_cge *PdfReader )newPdfAnnotationCircleFromDict (_cbgc *_fdb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bcf :=PdfAnnotationCircle {};
_fbc ,_fad :=_cge .newPdfAnnotationMarkupFromDict (_cbgc );if _fad !=nil {return nil ,_fad ;};_bcf .PdfAnnotationMarkup =_fbc ;_bcf .BS =_cbgc .Get ("\u0042\u0053");_bcf .IC =_cbgc .Get ("\u0049\u0043");_bcf .BE =_cbgc .Get ("\u0042\u0045");_bcf .RD =_cbgc .Get ("\u0052\u0044");
return &_bcf ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fdb .PdfObject ;T _fdb .PdfObject ;Operation _fdb .PdfObject ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_babcd pdfFont };

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fdb .PdfObject ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_eecd :=map[rune ]int {};for _ ,_gaba :=range text {_eecd [_gaba ]++;};return _eecd ;};func (_ccdf *PdfReader )newPdfAnnotationStrikeOut (_gfc *_fdb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_bcba :=PdfAnnotationStrikeOut {};
_dcfd ,_dag :=_ccdf .newPdfAnnotationMarkupFromDict (_gfc );if _dag !=nil {return nil ,_dag ;};_bcba .PdfAnnotationMarkup =_dcfd ;_bcba .QuadPoints =_gfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bcba ,nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fdb .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_edaa *PdfColorspaceLab )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfca ,_gegaf :=_fdb .GetNumbersAsFloat (objects );
if _gegaf !=nil {return nil ,_gegaf ;};return _edaa .ColorFromFloats (_cfca );};func (_aeffa *DSS )addOCSPs (_gbdc [][]byte )([]*_fdb .PdfObjectStream ,error ){return _aeffa .add (&_aeffa .OCSPs ,_aeffa ._cebea ,_gbdc );};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_acece *PdfPage )Duplicate ()*PdfPage {_gecfb :=*_acece ;_gecfb ._dacb =_fdb .MakeDict ();_gecfb ._fccfd =_fdb .MakeIndirectObject (_gecfb ._dacb );return &_gecfb ;};

// Initialize initializes the PdfSignature.
func (_babb *PdfSignature )Initialize ()error {if _babb .Handler ==nil {return _ee .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _babb .Handler .InitSignature (_babb );};

// ToPdfObject implements interface PdfModel.
func (_agd *PdfAnnotationText )ToPdfObject ()_fdb .PdfObject {_agd .PdfAnnotation .ToPdfObject ();_gabc :=_agd ._cgbd ;_facg :=_gabc .PdfObject .(*_fdb .PdfObjectDictionary );if _agd .PdfAnnotationMarkup !=nil {_agd .PdfAnnotationMarkup .appendToPdfDictionary (_facg );
};_facg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0054\u0065\u0078\u0074"));_facg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_agd .Open );_facg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_agd .Name );_facg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_agd .State );
_facg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_agd .StateModel );return _gabc ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dfff :=NewPdfAnnotation ();_dcf :=&PdfAnnotationInk {};_dcf .PdfAnnotation =_dfff ;_dcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfff .SetContext (_dcf );return _dcf ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_dcdbf *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ee .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_dcdbf .S =subtype ;return nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_aadae *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_dfb *PdfReader )newPdfActionGoTo3DViewFromDict (_geb *_fdb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_geb .Get ("\u0054\u0041"),V :_geb .Get ("\u0056")},nil ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bbaf pdfCIDFontType2 )GetCharMetrics (code _eb .CharCode )(_fc .CharMetrics ,bool ){if _gagef ,_fafd :=_bbaf ._daabe [code ];_fafd {return _fc .CharMetrics {Wx :_gagef },true ;};_addg :=rune (code );_edfb ,_eada :=_bbaf ._dadbc [_addg ];if !_eada {_edfb =int (_bbaf ._afagc );
};return _fc .CharMetrics {Wx :float64 (_edfb )},true ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_geeeb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _geeeb .Range };

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fdb .PdfObject ;};func _bgbbgb (_ebeb *_fdb .PdfObjectDictionary ,_acfcf *fontCommon )(*pdfFontType0 ,error ){_afeb ,_efbc :=_fdb .GetArray (_ebeb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_efbc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_acfcf );
return nil ,_fdb .ErrRangeError ;};if _afeb .Len ()!=1{_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_afeb .Len ());return nil ,_fdb .ErrRangeError ;
};_ggbga ,_dbcb :=_cddf (_afeb .Get (0),false );if _dbcb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_dbcb ,_acfcf );
return nil ,_dbcb ;};_bedb :=_geef (_acfcf );_bedb .DescendantFont =_ggbga ;_geagagb ,_efbc :=_fdb .GetNameVal (_ebeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _efbc {if _geagagb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_geagagb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bedb ._beaaf =_eb .NewIdentityTextEncoder (_geagagb );
}else if _cgc .IsPredefinedCMap (_geagagb ){_bedb ._accfe ,_dbcb =_cgc .LoadPredefinedCMap (_geagagb );if _dbcb !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_geagagb ,_dbcb );
};}else {_aa .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_geagagb );};};if _acbef :=_ggbga .baseFields ()._egadb ;_acbef !=nil {if _dfba :=_acbef .Name ();_dfba =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_dfba =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_dfba =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_dfba =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bedb ._beaaf =_eb .NewCMapEncoder (_geagagb ,_bedb ._accfe ,_acbef );
};};return _bedb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aed *PdfAnnotationPopup )ToPdfObject ()_fdb .PdfObject {_aed .PdfAnnotation .ToPdfObject ();_gbbb :=_aed ._cgbd ;_dcd :=_gbbb .PdfObject .(*_fdb .PdfObjectDictionary );_dcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0050\u006f\u0070u\u0070"));
_dcd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aed .Parent );_dcd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_aed .Open );return _gbbb ;};func (_efaf *PdfAppender )updateObjectsDeep (_fdef _fdb .PdfObject ,_fbcd map[_fdb .PdfObject ]struct{}){if _fbcd ==nil {_fbcd =map[_fdb .PdfObject ]struct{}{};
};if _ ,_cdc :=_fbcd [_fdef ];_cdc ||_fdef ==nil {return ;};_fbcd [_fdef ]=struct{}{};_eefb :=_fdb .ResolveReferencesDeep (_fdef ,_efaf ._bgadb );if _eefb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eefb );};switch _eacdf :=_fdef .(type ){case *_fdb .PdfIndirectObject :switch {case _eacdf .GetParser ()==_efaf ._abcd ._dbbec :return ;
case _eacdf .GetParser ()==_efaf .Reader ._dbbec :_fbbd ,_ :=_efaf ._abcd .GetIndirectObjectByNumber (int (_eacdf .ObjectNumber ));_gbea ,_aefb :=_fbbd .(*_fdb .PdfIndirectObject );if _aefb &&_gbea !=nil {if _gbea .PdfObject !=_eacdf .PdfObject &&_gbea .PdfObject .WriteString ()!=_eacdf .PdfObject .WriteString (){_efaf .addNewObject (_fdef );
_efaf ._eaa [_fdef ]=_eacdf .ObjectNumber ;};};default:_efaf .addNewObject (_fdef );};_efaf .updateObjectsDeep (_eacdf .PdfObject ,_fbcd );case *_fdb .PdfObjectArray :for _ ,_bfgg :=range _eacdf .Elements (){_efaf .updateObjectsDeep (_bfgg ,_fbcd );};case *_fdb .PdfObjectDictionary :for _ ,_dbda :=range _eacdf .Keys (){_efaf .updateObjectsDeep (_eacdf .Get (_dbda ),_fbcd );
};case *_fdb .PdfObjectStreams :if _eacdf .GetParser ()!=_efaf ._abcd ._dbbec {for _ ,_gbag :=range _eacdf .Elements (){_efaf .updateObjectsDeep (_gbag ,_fbcd );};};case *_fdb .PdfObjectStream :switch {case _eacdf .GetParser ()==_efaf ._abcd ._dbbec :return ;
case _eacdf .GetParser ()==_efaf .Reader ._dbbec :if _gfbg ,_baba :=_efaf ._abcd ._dbbec .LookupByReference (_eacdf .PdfObjectReference );_baba ==nil {var _bfb bool ;if _ceb ,_gedc :=_fdb .GetStream (_gfbg );_gedc &&_de .Equal (_ceb .Stream ,_eacdf .Stream ){_bfb =true ;
};if _begg ,_fgged :=_fdb .GetDict (_gfbg );_bfb &&_fgged {_bfb =_begg .WriteString ()==_eacdf .PdfObjectDictionary .WriteString ();};if _bfb {return ;};};if _eacdf .ObjectNumber !=0{_efaf ._eaa [_fdef ]=_eacdf .ObjectNumber ;};default:if _ ,_ddae :=_efaf ._acbb [_fdef ];
!_ddae {_efaf .addNewObject (_fdef );};};_efaf .updateObjectsDeep (_eacdf .PdfObjectDictionary ,_fbcd );};};func _gfabc (_cegca string )(map[_eb .CharCode ]_eb .GlyphName ,error ){_aege :=_gga .Split (_cegca ,"\u000a");_gadde :=make (map[_eb .CharCode ]_eb .GlyphName );
for _ ,_gecff :=range _aege {_geae :=_ebfgde .FindStringSubmatch (_gecff );if _geae ==nil {continue ;};_dfgbd ,_dgba :=_geae [1],_geae [2];_ffcgg ,_adbe :=_bge .Atoi (_dfgbd );if _adbe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gecff );
return nil ,_fdb .ErrTypeError ;};_gadde [_eb .CharCode (_ffcgg )]=_eb .GlyphName (_dgba );};_aa .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_gadde );
return _gadde ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afbf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccgf :=vals [0];if _ccgf < 0.0||_ccgf > 1.0{_aa .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ccgf < 0.0{_ccgf =0.0;}else if _ccgf > 1.0{_ccgf =1.0;};return NewPdfColorDeviceGray (_ccgf ),nil ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fdb .PdfObjectStream )(*XObjectForm ,error ){_gbcff :=&XObjectForm {};_gbcff ._eeafe =stream ;_deabfd :=*(stream .PdfObjectDictionary );_abfba ,_bfccd :=_fdb .NewEncoderFromStream (stream );if _bfccd !=nil {return nil ,_bfccd ;
};_gbcff .Filter =_abfba ;if _abffeb :=_deabfd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_abffeb !=nil {_fcafd ,_ggebd :=_abffeb .(*_fdb .PdfObjectName );if !_ggebd {return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_fcafd !="\u0046\u006f\u0072\u006d"{_aa .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _fggeg :=_deabfd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fggeg !=nil {_gbcff .FormType =_fggeg ;};if _cddda :=_deabfd .Get ("\u0042\u0042\u006f\u0078");_cddda !=nil {_gbcff .BBox =_cddda ;};if _gacb :=_deabfd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_gacb !=nil {_gbcff .Matrix =_gacb ;};if _agffe :=_deabfd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_agffe !=nil {_agffe =_fdb .TraceToDirectObject (_agffe );_ddcce ,_fgdfab :=_agffe .(*_fdb .PdfObjectDictionary );if !_fgdfab {_aa .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fdb .ErrTypeError ;};_effcb ,_fdagg :=NewPdfPageResourcesFromDict (_ddcce );if _fdagg !=nil {_aa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_fdagg ;};_gbcff .Resources =_effcb ;_aa .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gbcff .Resources );};_gbcff .Group =_deabfd .Get ("\u0047\u0072\u006fu\u0070");
_gbcff .Ref =_deabfd .Get ("\u0052\u0065\u0066");_gbcff .MetaData =_deabfd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gbcff .PieceInfo =_deabfd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gbcff .LastModified =_deabfd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_gbcff .StructParent =_deabfd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gbcff .StructParents =_deabfd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gbcff .OPI =_deabfd .Get ("\u004f\u0050\u0049");
_gbcff .OC =_deabfd .Get ("\u004f\u0043");_gbcff .Name =_deabfd .Get ("\u004e\u0061\u006d\u0065");_gbcff .Stream =stream .Stream ;return _gbcff ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ececac *PdfShadingType4 )ToPdfObject ()_fdb .PdfObject {_ececac .PdfShading .ToPdfObject ();_gecfbd ,_bdbbd :=_ececac .getShadingDict ();if _bdbbd !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ececac .BitsPerCoordinate !=nil {_gecfbd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ececac .BitsPerCoordinate );};if _ececac .BitsPerComponent !=nil {_gecfbd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ececac .BitsPerComponent );
};if _ececac .BitsPerFlag !=nil {_gecfbd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ececac .BitsPerFlag );};if _ececac .Decode !=nil {_gecfbd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ececac .Decode );};if _ececac .Function !=nil {if len (_ececac .Function )==1{_gecfbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ececac .Function [0].ToPdfObject ());
}else {_egdcd :=_fdb .MakeArray ();for _ ,_dccb :=range _ececac .Function {_egdcd .Append (_dccb .ToPdfObject ());};_gecfbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egdcd );};};return _ececac ._dcfdb ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_caec *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_fcbgf :=_cd .NewReader (img .getBase ());_cgdd :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cbeb :=_cd .NewWriter (_cgdd );
_efaee :=_fag .Pow (2,float64 (img .BitsPerComponent ))-1;_ccga :=make ([]uint32 ,3);var (_cagbg error ;_egga ,_aab ,_aacd ,_dbdb ,_afab ,_ebeac float64 ;);for {_cagbg =_fcbgf .ReadSamples (_ccga );if _cagbg ==_ca .EOF {break ;}else if _cagbg !=nil {return img ,_cagbg ;
};_egga =float64 (_ccga [0])/_efaee ;_aab =float64 (_ccga [1])/_efaee ;_aacd =float64 (_ccga [2])/_efaee ;_dbdb =_caec .Matrix [0]*_fag .Pow (_egga ,_caec .Gamma [0])+_caec .Matrix [3]*_fag .Pow (_aab ,_caec .Gamma [1])+_caec .Matrix [6]*_fag .Pow (_aacd ,_caec .Gamma [2]);
_afab =_caec .Matrix [1]*_fag .Pow (_egga ,_caec .Gamma [0])+_caec .Matrix [4]*_fag .Pow (_aab ,_caec .Gamma [1])+_caec .Matrix [7]*_fag .Pow (_aacd ,_caec .Gamma [2]);_ebeac =_caec .Matrix [2]*_fag .Pow (_egga ,_caec .Gamma [0])+_caec .Matrix [5]*_fag .Pow (_aab ,_caec .Gamma [1])+_caec .Matrix [8]*_fag .Pow (_aacd ,_caec .Gamma [2]);
_egga =3.240479*_dbdb +-1.537150*_afab +-0.498535*_ebeac ;_aab =-0.969256*_dbdb +1.875992*_afab +0.041556*_ebeac ;_aacd =0.055648*_dbdb +-0.204043*_afab +1.057311*_ebeac ;_egga =_fag .Min (_fag .Max (_egga ,0),1.0);_aab =_fag .Min (_fag .Max (_aab ,0),1.0);
_aacd =_fag .Min (_fag .Max (_aacd ,0),1.0);_ccga [0]=uint32 (_egga *_efaee );_ccga [1]=uint32 (_aab *_efaee );_ccga [2]=uint32 (_aacd *_efaee );if _cagbg =_cbeb .WriteSamples (_ccga );_cagbg !=nil {return img ,_cagbg ;};};return _cdbdc (&_cgdd ),nil ;
};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dfe _ca .ReadSeeker ;_fgbe *_fdb .PdfParser ;_abcd *PdfReader ;Reader *PdfReader ;_fdagd []*PdfPage ;_ebbc *PdfAcroForm ;_bddg *DSS ;_ggd *Permissions ;_defa _fdb .XrefTable ;_decae int64 ;_edfd int ;_gdgb []_fdb .PdfObject ;_acbb map[_fdb .PdfObject ]struct{};
_eaa map[_fdb .PdfObject ]int64 ;_fgde map[_fdb .PdfObject ]struct{};_bgadb map[_fdb .PdfObject ]struct{};_gcag int64 ;_fed bool ;_egfd string ;_cbegg *EncryptOptions ;_afbg *PdfInfo ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_cfbba *_fdb .PdfObjectDictionary ;};

// SetName sets the `Name` field of the signature.
func (_geebef *PdfSignature )SetName (name string ){_geebef .Name =_fdb .MakeString (name )};

// ToPdfObject implements interface PdfModel.
func (_edea *PdfFilespec )ToPdfObject ()_fdb .PdfObject {_dgcab :=_edea .getDict ();_dgcab .Clear ();_dgcab .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_dgcab .SetIfNotNil ("\u0046\u0053",_edea .FS );
_dgcab .SetIfNotNil ("\u0046",_edea .F );_dgcab .SetIfNotNil ("\u0055\u0046",_edea .UF );_dgcab .SetIfNotNil ("\u0044\u004f\u0053",_edea .DOS );_dgcab .SetIfNotNil ("\u004d\u0061\u0063",_edea .Mac );_dgcab .SetIfNotNil ("\u0055\u006e\u0069\u0078",_edea .Unix );
_dgcab .SetIfNotNil ("\u0049\u0044",_edea .ID );_dgcab .SetIfNotNil ("\u0056",_edea .V );_dgcab .SetIfNotNil ("\u0045\u0046",_edea .EF );_dgcab .SetIfNotNil ("\u0052\u0046",_edea .RF );_dgcab .SetIfNotNil ("\u0044\u0065\u0073\u0063",_edea .Desc );_dgcab .SetIfNotNil ("\u0043\u0049",_edea .CI );
return _edea ._addf ;};func _bfad ()string {_ccaeg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _dfgc _de .Buffer ;for _fbfd :=0;_fbfd < 6;_fbfd ++{_dfgc .WriteRune (rune (_ccaeg [_fde .Intn (len (_ccaeg ))]));
};return _dfgc .String ();};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_abbc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _abbc ._bcde !=nil {return _abbc ._bcde ,nil ;};if _abbc .Annots ==nil {_abbc ._bcde =[]*PdfAnnotation {};return nil ,nil ;};if _abbc ._afgg ==nil {_abbc ._bcde =[]*PdfAnnotation {};return nil ,nil ;
};_acfcge ,_fcbgg :=_abbc ._afgg .loadAnnotations (_abbc .Annots );if _fcbgg !=nil {return nil ,_fcbgg ;};if _acfcge ==nil {_abbc ._bcde =[]*PdfAnnotation {};};_abbc ._bcde =_acfcge ;return _abbc ._bcde ,nil ;};

// Add appends a top level outline item to the outline.
func (_fbeg *Outline )Add (item *OutlineItem ){_fbeg .Entries =append (_fbeg .Entries ,item )};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_bbcg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_addd :=_bbcg .fill (provider ,appGen );if _addd !=nil {return _addd ;};if _ ,_feacf :=provider .(FieldImageProvider );_feacf {_addd =_bbcg .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _addd ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cgfdcb *PdfPageResources )GetShadingByName (keyName _fdb .PdfObjectName )(*PdfShading ,bool ){if _cgfdcb .Shading ==nil {return nil ,false ;};_ffff ,_dedb :=_fdb .TraceToDirectObject (_cgfdcb .Shading ).(*_fdb .PdfObjectDictionary );if !_dedb {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgfdcb .Shading );
return nil ,false ;};if _aedbe :=_ffff .Get (keyName );_aedbe !=nil {_ccdfc ,_adece :=_dacgdc (_aedbe );if _adece !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_adece );
return nil ,false ;};return _ccdfc ,true ;};return nil ,false ;};func _eaece (_aagfe *_fdb .PdfIndirectObject )(*PdfOutline ,error ){_eccec ,_abda :=_aagfe .PdfObject .(*_fdb .PdfObjectDictionary );if !_abda {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgcfb :=NewPdfOutline ();if _cfffeg :=_eccec .Get ("\u0054\u0079\u0070\u0065");_cfffeg !=nil {_afgfb ,_bbaaf :=_cfffeg .(*_fdb .PdfObjectName );if _bbaaf {if *_afgfb !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_afgfb );
};};};if _edbc :=_eccec .Get ("\u0043\u006f\u0075n\u0074");_edbc !=nil {_ccbbf ,_fdgfg :=_fdb .GetNumberAsInt64 (_edbc );if _fdgfg !=nil {return nil ,_fdgfg ;};_dgcfb .Count =&_ccbbf ;};return _dgcfb ,nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_aae .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_aae .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_aae .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_daba *PdfAppender ;_cdbea *DSS ;};func (_bccd fontCommon )fontFlags ()int {if _bccd ._ecde ==nil {return 0;};return _bccd ._ecde ._ceac ;};

// Height returns the height of `rect`.
func (_fabffd *PdfRectangle )Height ()float64 {return _fag .Abs (_fabffd .Ury -_fabffd .Lly )};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gfaaa *PdfField )SetContext (ctx PdfModel ){_gfaaa ._fega =ctx };type pdfFontType0 struct{fontCommon ;_eeged *_fdb .PdfIndirectObject ;_beaaf _eb .TextEncoder ;Encoding _fdb .PdfObject ;DescendantFont *PdfFont ;_accfe *_cgc .CMap ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ffge :=NewPdfAnnotation ();_gcdg :=&PdfAnnotationFileAttachment {};_gcdg .PdfAnnotation =_ffge ;_gcdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffge .SetContext (_gcdg );return _gcdg ;
};func (_ecca *PdfReader )newPdfActionRenditionFromDict (_dfc *_fdb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dfc .Get ("\u0052"),AN :_dfc .Get ("\u0041\u004e"),OP :_dfc .Get ("\u004f\u0050"),JS :_dfc .Get ("\u004a\u0053")},nil ;
};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fgg :=NewPdfAnnotation ();_eca :=&PdfAnnotation3D {};_eca .PdfAnnotation =_fgg ;_fgg .SetContext (_eca );return _eca ;};func (_fcfdc *PdfWriter )addObjects (_eefea _fdb .PdfObject )error {_aa .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _cfaa ,_fcdad :=_eefea .(*_fdb .PdfIndirectObject );_fcdad {_aa .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_aa .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_eefea ,_cfaa );_aa .Log .Trace ("\u002d\u0020\u0025\u0073",_cfaa .PdfObject );
if _fcfdc .addObject (_cfaa ){_caddb :=_fcfdc .addObjects (_cfaa .PdfObject );if _caddb !=nil {return _caddb ;};};return nil ;};if _gddcb ,_gdcgb :=_eefea .(*_fdb .PdfObjectStream );_gdcgb {_aa .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_aa .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_eefea ,_eefea );
if _fcfdc .addObject (_gddcb ){_agag :=_fcfdc .addObjects (_gddcb .PdfObjectDictionary );if _agag !=nil {return _agag ;};};return nil ;};if _ebcac ,_gagba :=_eefea .(*_fdb .PdfObjectDictionary );_gagba {_aa .Log .Trace ("\u0044\u0069\u0063\u0074");_aa .Log .Trace ("\u002d\u0020\u0025\u0073",_eefea );
for _ ,_bebfb :=range _ebcac .Keys (){_bagc :=_ebcac .Get (_bebfb );if _bdaef ,_bafb :=_bagc .(*_fdb .PdfObjectReference );_bafb {_bagc =_bdaef .Resolve ();_ebcac .Set (_bebfb ,_bagc );};if _bebfb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fgbbf :=_fcfdc .addObjects (_bagc );
_fgbbf !=nil {return _fgbbf ;};}else {if _ ,_bagcd :=_bagc .(*_fdb .PdfObjectNull );_bagcd {continue ;};if _gaccd :=_fcfdc .hasObject (_bagc );!_gaccd {_aa .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bagc ,_bagc ,_bagc );
_fcfdc ._eebcf [_bagc ]=append (_fcfdc ._eebcf [_bagc ],_ebcac );};};};return nil ;};if _cabaa ,_geaff :=_eefea .(*_fdb .PdfObjectArray );_geaff {_aa .Log .Trace ("\u0041\u0072\u0072a\u0079");_aa .Log .Trace ("\u002d\u0020\u0025\u0073",_eefea );if _cabaa ==nil {return _ee .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gbegd ,_cgdgab :=range _cabaa .Elements (){if _affba ,_fcaef :=_cgdgab .(*_fdb .PdfObjectReference );_fcaef {_cgdgab =_affba .Resolve ();_cabaa .Set (_gbegd ,_cgdgab );};if _acagge :=_fcfdc .addObjects (_cgdgab );_acagge !=nil {return _acagge ;};
};return nil ;};if _ ,_dabae :=_eefea .(*_fdb .PdfObjectReference );_dabae {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_eefea );
return _ee .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dfgb pdfFontType0 )GetCharMetrics (code _eb .CharCode )(_fc .CharMetrics ,bool ){if _dfgb .DescendantFont ==nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dfgb );
return _fc .CharMetrics {},false ;};return _dfgb .DescendantFont .GetCharMetrics (code );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fdb .PdfObject )(_fdb .PdfObjectName ,error ){var _gef *_fdb .PdfObjectName ;var _cgeg *_fdb .PdfObjectArray ;if _affd ,_gcfa :=obj .(*_fdb .PdfIndirectObject );_gcfa {if _eege ,_dfag :=_affd .PdfObject .(*_fdb .PdfObjectArray );
_dfag {_cgeg =_eege ;}else if _ffde ,_fffe :=_affd .PdfObject .(*_fdb .PdfObjectName );_fffe {_gef =_ffde ;};}else if _fgdf ,_dbca :=obj .(*_fdb .PdfObjectArray );_dbca {_cgeg =_fgdf ;}else if _eeedb ,_fdcgb :=obj .(*_fdb .PdfObjectName );_fdcgb {_gef =_eeedb ;
};if _gef !=nil {switch *_gef {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gef ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gef ,nil ;
};};if _cgeg !=nil &&_cgeg .Len ()> 0{if _bgeca ,_acbe :=_cgeg .Get (0).(*_fdb .PdfObjectName );_acbe {switch *_bgeca {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cgeg .Len ()==1{return *_bgeca ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_bgeca ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_bgeca ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_bgeca ,nil ;};};};return "",nil ;};

// B returns the value of the blue component of the color.
func (_bdgf *PdfColorDeviceRGB )B ()float64 {return _bdgf [2]};func _ddbfgc (_gdfgb []byte )([]byte ,error ){_bccfb :=_b .New ();if _ ,_addef :=_ca .Copy (_bccfb ,_de .NewReader (_gdfgb ));_addef !=nil {return nil ,_addef ;};return _bccfb .Sum (nil ),nil ;
};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fdb .PdfObject ;Movie _fdb .PdfObject ;A _fdb .PdfObject ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gbb :=NewPdfAnnotation ();_cda :=&PdfAnnotationStamp {};_cda .PdfAnnotation =_gbb ;_cda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbb .SetContext (_cda );return _cda ;};func (_fcaf *PdfReader )newPdfAnnotationProjectionFromDict (_fdfc *_fdb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_acc :=&PdfAnnotationProjection {};
_fef ,_edaf :=_fcaf .newPdfAnnotationMarkupFromDict (_fdfc );if _edaf !=nil {return nil ,_edaf ;};_acc .PdfAnnotationMarkup =_fef ;return _acc ,nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_feae *PdfPage )SetContentStreams (cStreams []string ,encoder _fdb .StreamEncoder )error {if len (cStreams )==0{_feae .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fdb .NewRawEncoder ();};var _edbce []*_fdb .PdfObjectStream ;for _ ,_egbfc :=range cStreams {_ffab :=&_fdb .PdfObjectStream {};
_fbee :=encoder .MakeStreamDict ();_bdfea ,_eeeb :=encoder .EncodeBytes ([]byte (_egbfc ));if _eeeb !=nil {return _eeeb ;};_fbee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_bdfea ))));_ffab .PdfObjectDictionary =_fbee ;
_ffab .Stream =_bdfea ;_edbce =append (_edbce ,_ffab );};if len (_edbce )==1{_feae .Contents =_edbce [0];}else {_gdgc :=_fdb .MakeArray ();for _ ,_cfggf :=range _edbce {_gdgc .Append (_cfggf );};_feae .Contents =_gdgc ;};return nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _ca .ReadSeeker )(*CompliancePdfReader ,error ){const _fabab ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_fabge ,_gacg :=_fgagf (rs ,&ReaderOpts {ComplianceMode :true },false ,_fabab );
if _gacg !=nil {return nil ,_gacg ;};return &CompliancePdfReader {PdfReader :_fabge },nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fggf *OutlineItem )Insert (index uint ,item *OutlineItem ){_cefge :=uint (len (_fggf .Entries ));if index > _cefge {index =_cefge ;};_fggf .Entries =append (_fggf .Entries [:index ],append ([]*OutlineItem {item },_fggf .Entries [index :]...)...);
};func (_edba fontCommon )isCIDFont ()bool {if _edba ._eaae ==""{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_edba );
};_fadc :=false ;switch _edba ._eaae {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fadc =true ;};_aa .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fadc ,_edba );
return _fadc ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ebab *Image )Resample (targetBitsPerComponent int64 ){if _ebab .BitsPerComponent ==targetBitsPerComponent {return ;};_gefg :=_ebab .GetSamples ();if targetBitsPerComponent < _ebab .BitsPerComponent {_cgabd :=_ebab .BitsPerComponent -targetBitsPerComponent ;
for _ddbfg :=range _gefg {_gefg [_ddbfg ]>>=uint (_cgabd );};}else if targetBitsPerComponent > _ebab .BitsPerComponent {_dbge :=targetBitsPerComponent -_ebab .BitsPerComponent ;for _bfcfa :=range _gefg {_gefg [_bfcfa ]<<=uint (_dbge );};};_ebab .BitsPerComponent =targetBitsPerComponent ;
if _ebab .BitsPerComponent < 8{_ebab .resampleLowBits (_gefg );return ;};_eabge :=_ff .BytesPerLine (int (_ebab .Width ),int (_ebab .BitsPerComponent ),_ebab .ColorComponents );_bfabe :=make ([]byte ,_eabge *int (_ebab .Height ));var (_bfcbc ,_fefee ,_fcbaf ,_gacge int ;
_fdeb uint32 ;);for _fcbaf =0;_fcbaf < int (_ebab .Height );_fcbaf ++{_bfcbc =_fcbaf *_eabge ;_fefee =(_fcbaf +1)*_eabge -1;_gaaa :=_cd .ResampleUint32 (_gefg [_bfcbc :_fefee ],int (targetBitsPerComponent ),8);for _gacge ,_fdeb =range _gaaa {_bfabe [_gacge +_bfcbc ]=byte (_fdeb );
};};_ebab .Data =_bfabe ;};var _cfg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// GetNumComponents returns the number of color components (1 for Separation).
func (_fgeb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gdcad :=appender .Reader .DSS ;if _gdcad ==nil {_gdcad =NewDSS ();};if _fgcc :=_gdcad .generateHashMaps ();_fgcc !=nil {return nil ,_fgcc ;};return &LTV {CertClient :_aae .NewCertClient (),OCSPClient :_aae .NewOCSPClient (),CRLClient :_aae .NewCRLClient (),SkipExisting :true ,_daba :appender ,_cdbea :_gdcad },nil ;
};var _ pdfFont =(*pdfFontType0 )(nil );

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bdbaa *PdfFont )CharcodesToStrings (charcodes []_eb .CharCode )([]string ,int ,int ){_effc :=_bdbaa .baseFields ();_cbea :=make ([]string ,0,len (charcodes ));_fbbbc :=0;_dbec :=_bdbaa .Encoder ();_aabg :=_effc ._egadb !=nil &&_bdbaa .IsSimple ()&&_bdbaa .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_gga .Contains (_effc ._egadb .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_aabg &&_dbec !=nil {switch _ecfc :=_dbec .(type ){case _eb .SimpleEncoder :_bgdgb :=_ecfc .BaseName ();if _ ,_bbedg :=_gcdgbc [_bgdgb ];_bbedg {for _ ,_ffce :=range charcodes {if _gadg ,_beffe :=_dbec .CharcodeToRune (_ffce );_beffe {_cbea =append (_cbea ,string (_gadg ));
}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ffce ,charcodes ,_effc .isCIDFont (),_bdbaa ,_dbec );
_fbbbc ++;_cbea =append (_cbea ,_cgc .MissingCodeString );};};return _cbea ,len (_cbea ),_fbbbc ;};};};for _ ,_cadg :=range charcodes {if _effc ._egadb !=nil {if _dgfcg ,_agce :=_effc ._egadb .CharcodeToUnicode (_cgc .CharCode (_cadg ));_agce {_cbea =append (_cbea ,_dgfcg );
continue ;};};if _dbec !=nil {if _ecab ,_bfdd :=_dbec .CharcodeToRune (_cadg );_bfdd {_cbea =append (_cbea ,string (_ecab ));continue ;};};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cadg ,charcodes ,_effc .isCIDFont (),_bdbaa ,_dbec );
_fbbbc ++;_cbea =append (_cbea ,_cgc .MissingCodeString );};if _fbbbc !=0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fbbbc ,_bdbaa );
};return _cbea ,len (_cbea ),_fbbbc ;};func (_dfcd *PdfReader )newPdfAnnotationSquigglyFromDict (_egba *_fdb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gdca :=PdfAnnotationSquiggly {};_cfcf ,_egfc :=_dfcd .newPdfAnnotationMarkupFromDict (_egba );
if _egfc !=nil {return nil ,_egfc ;};_gdca .PdfAnnotationMarkup =_cfcf ;_gdca .QuadPoints =_egba .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gdca ,nil ;};

// ToInteger convert to an integer format.
func (_gcddb *PdfColorCalGray )ToInteger (bits int )uint32 {_fbgb :=_fag .Pow (2,float64 (bits ))-1;return uint32 (_fbgb *_gcddb .Val ());};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject implements interface PdfModel.
func (_cdedg *PdfTransformParamsDocMDP )ToPdfObject ()_fdb .PdfObject {_facbb :=_fdb .MakeDict ();_facbb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cdedg .Type );_facbb .SetIfNotNil ("\u0056",_cdedg .V );_facbb .SetIfNotNil ("\u0050",_cdedg .P );return _facbb ;
};type pdfFont interface{_fc .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fdb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bfcc :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bfcc ;};

// SetDate sets the `M` field of the signature.
func (_bgfea *PdfSignature )SetDate (date _ag .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bgfea .M =_fdb .MakeString (date .Format (format ));
};

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfActionLaunch )ToPdfObject ()_fdb .PdfObject {_ddf .PdfAction .ToPdfObject ();_ffg :=_ddf ._ae ;_bea :=_ffg .PdfObject .(*_fdb .PdfObjectDictionary );_bea .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeLaunch )));if _ddf .F !=nil {_bea .Set ("\u0046",_ddf .F .ToPdfObject ());
};_bea .SetIfNotNil ("\u0057\u0069\u006e",_ddf .Win );_bea .SetIfNotNil ("\u004d\u0061\u0063",_ddf .Mac );_bea .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ddf .Unix );_bea .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ddf .NewWindow );return _ffg ;
};func (_bbca *DSS )addCerts (_ggbeb [][]byte )([]*_fdb .PdfObjectStream ,error ){return _bbca .add (&_bbca .Certs ,_bbca ._dbdd ,_ggbeb );};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fdb .StreamEncoder )(*XObjectImage ,error ){_fdeg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_fdeg ,img ,cs ,encoder );};func (_adc *PdfReader )newPdfActionHideFromDict (_cddc *_fdb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cddc .Get ("\u0054"),H :_cddc .Get ("\u0048")},nil ;
};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_cca :=NewPdfAnnotation ();_gfe :=&PdfAnnotationPopup {};_gfe .PdfAnnotation =_cca ;_cca .SetContext (_gfe );return _gfe ;};

// A returns the value of the A component of the color.
func (_bdgbc *PdfColorCalRGB )A ()float64 {return _bdgbc [0]};

// SetBorderWidth sets the style's border width.
func (_ded *PdfBorderStyle )SetBorderWidth (width float64 ){_ded .W =&width };

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_bbb :=NewPdfAction ();_ba :=&PdfActionLaunch {};_ba .PdfAction =_bbb ;_bbb .SetContext (_ba );return _ba ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_dbdaf *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_acef ,_abag :=color .(*PdfColorDeviceRGB );if !_abag {_aa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _acef ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_fc .StdFontName ;

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_eb .SimpleEncoder ,error ){_fecc ,_agcf :=_dabgb (basefont );if _agcf !=nil {return nil ,nil ,_agcf ;};_caeg ,_dced :=_fecc .Encoder ().(_eb .SimpleEncoder );
if !_dced {return nil ,nil ,_d .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fecc .Encoder ());
};_gdcb :=make (map[rune ]_eb .GlyphName );for _gage :=range alphabet {if _ ,_fdeca :=_caeg .RuneToCharcode (_gage );!_fdeca {_ ,_ecgdd :=_fecc ._gabe .Read (_gage );if !_ecgdd {_aa .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gage ,_gage );
continue ;};_gbde ,_ecgdd :=_eb .RuneToGlyph (_gage );if !_ecgdd {_aa .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gage ,_gage );continue ;};if len (_gdcb )>=255{return nil ,nil ,_ee .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gdcb [_gage ]=_gbde ;};};var (_edgdb []_eb .CharCode ;_gcgba []_eb .CharCode ;);for _dabf :=_eb .CharCode (1);_dabf <=0xff;_dabf ++{_gadd ,_degdg :=_caeg .CharcodeToRune (_dabf );if !_degdg {_edgdb =append (_edgdb ,_dabf );continue ;};if _ ,_degdg =alphabet [_gadd ];
!_degdg {_gcgba =append (_gcgba ,_dabf );};};_gdcae :=append (_edgdb ,_gcgba ...);if len (_gdcae )< len (_gdcb ){return nil ,nil ,_d .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gdcb ),len (_gdcae ));
};_ebbd :=make ([]rune ,0,len (_gdcb ));for _eggaa :=range _gdcb {_ebbd =append (_ebbd ,_eggaa );};_gg .Slice (_ebbd ,func (_ceeb ,_abab int )bool {return _ebbd [_ceeb ]< _ebbd [_abab ]});_baab :=make (map[_eb .CharCode ]_eb .GlyphName ,len (_ebbd ));for _ ,_bfcbf :=range _ebbd {_fdbgf :=_gdcae [0];
_gdcae =_gdcae [1:];_baab [_fdbgf ]=_gdcb [_bfcbf ];};_caeg =_eb .ApplyDifferences (_caeg ,_baab );_fecc .SetEncoder (_caeg );return &PdfFont {_babcd :&_fecc },_caeg ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_fadee *Outline )ToPdfOutline ()*PdfOutline {_bcdg :=NewPdfOutline ();var _aaabg []*PdfOutlineItem ;var _fdca int64 ;var _dagad *PdfOutlineItem ;for _ ,_dggb :=range _fadee .Entries {_gfde ,_beea :=_dggb .ToPdfOutlineItem ();_gfde .Parent =&_bcdg .PdfOutlineTreeNode ;
if _dagad !=nil {_dagad .Next =&_gfde .PdfOutlineTreeNode ;_gfde .Prev =&_dagad .PdfOutlineTreeNode ;};_aaabg =append (_aaabg ,_gfde );_fdca +=_beea ;_dagad =_gfde ;};_cdage :=int64 (len (_aaabg ));_fdca +=_cdage ;if _cdage > 0{_bcdg .First =&_aaabg [0].PdfOutlineTreeNode ;
_bcdg .Last =&_aaabg [_cdage -1].PdfOutlineTreeNode ;_bcdg .Count =&_fdca ;};return _bcdg ;};

// ToPdfObject implements interface PdfModel.
func (_bdge *PdfAnnotationStrikeOut )ToPdfObject ()_fdb .PdfObject {_bdge .PdfAnnotation .ToPdfObject ();_edgd :=_bdge ._cgbd ;_dfacb :=_edgd .PdfObject .(*_fdb .PdfObjectDictionary );_bdge .PdfAnnotationMarkup .appendToPdfDictionary (_dfacb );_dfacb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_dfacb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdge .QuadPoints );return _edgd ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_eeabe *_fdb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fdb .PdfObjectName ;Filter *_fdb .PdfObjectName ;SubFilter *_fdb .PdfObjectName ;Contents *_fdb .PdfObjectString ;Cert _fdb .PdfObject ;ByteRange *_fdb .PdfObjectArray ;Reference *_fdb .PdfObjectArray ;Changes *_fdb .PdfObjectArray ;Name *_fdb .PdfObjectString ;
M *_fdb .PdfObjectString ;Location *_fdb .PdfObjectString ;Reason *_fdb .PdfObjectString ;ContactInfo *_fdb .PdfObjectString ;R *_fdb .PdfObjectInteger ;V *_fdb .PdfObjectInteger ;PropBuild *_fdb .PdfObjectDictionary ;PropAuthTime *_fdb .PdfObjectInteger ;
PropAuthType *_fdb .PdfObjectName ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_accac *PdfFieldButton )SetType (btype ButtonType ){_abaae :=uint32 (0);if _accac .Ff !=nil {_abaae =uint32 (*_accac .Ff );};switch btype {case ButtonTypePush :_abaae |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_abaae |=FieldFlagRadio .Mask ();
};_accac .Ff =_fdb .MakeInteger (int64 (_abaae ));};func _ccbg ()_ag .Time {_dacba .Lock ();defer _dacba .Unlock ();return _fggdgb };

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_dcbac *PdfFont )CharcodesToUnicode (charcodes []_eb .CharCode )[]rune {_gfbed ,_ ,_ :=_dcbac .CharcodesToUnicodeWithStats (charcodes );return _gfbed ;};func _daabd (_fcbgb _fdb .PdfObject )(string ,error ){_fcbgb =_fdb .TraceToDirectObject (_fcbgb );
switch _ffgae :=_fcbgb .(type ){case *_fdb .PdfObjectString :return _ffgae .Str (),nil ;case *_fdb .PdfObjectStream :_ddgbd ,_edcg :=_fdb .DecodeStream (_ffgae );if _edcg !=nil {return "",_edcg ;};return string (_ddgbd ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fcbgb );
};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_eaaba *PdfRectangle )Normalize (){if _eaaba .Llx > _eaaba .Urx {_eaaba .Llx ,_eaaba .Urx =_eaaba .Urx ,_eaaba .Llx ;};if _eaaba .Lly > _eaaba .Ury {_eaaba .Lly ,_eaaba .Ury =_eaaba .Ury ,_eaaba .Lly ;};};func (_beabd *PdfPage )setContainer (_ggag *_fdb .PdfIndirectObject ){_ggag .PdfObject =_beabd ._dacb ;
_beabd ._fccfd =_ggag ;};

// ToPdfObject implements interface PdfModel.
func (_gfa *PdfActionRendition )ToPdfObject ()_fdb .PdfObject {_gfa .PdfAction .ToPdfObject ();_dgg :=_gfa ._ae ;_gafg :=_dgg .PdfObject .(*_fdb .PdfObjectDictionary );_gafg .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeRendition )));_gafg .SetIfNotNil ("\u0052",_gfa .R );
_gafg .SetIfNotNil ("\u0041\u004e",_gfa .AN );_gafg .SetIfNotNil ("\u004f\u0050",_gfa .OP );_gafg .SetIfNotNil ("\u004a\u0053",_gfa .JS );return _dgg ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fdb .PdfObject )(*PdfFont ,error ){return _cddf (fontObj ,true )};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_bbed :=NewPdfAnnotation ();_gff :=&PdfAnnotationCircle {};_gff .PdfAnnotation =_bbed ;_gff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbed .SetContext (_gff );return _gff ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_aada *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_bebcge *PdfPattern )GetContainingPdfObject ()_fdb .PdfObject {return _bebcge ._adccf };func (_fgbeg *PdfPattern )getDict ()*_fdb .PdfObjectDictionary {if _bbcff ,_edggb :=_fgbeg ._adccf .(*_fdb .PdfIndirectObject );_edggb {_cegcb ,_bccge :=_bbcff .PdfObject .(*_fdb .PdfObjectDictionary );
if !_bccge {return nil ;};return _cegcb ;}else if _cafdb ,_fcgcf :=_fgbeg ._adccf .(*_fdb .PdfObjectStream );_fcgcf {return _cafdb .PdfObjectDictionary ;}else {_aa .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fgbeg ._adccf );
return nil ;};};

// GetOCProperties returns the optional content properties PdfObject.
func (_abfb *PdfReader )GetOCProperties ()(_fdb .PdfObject ,error ){_fbdad :=_abfb ._adefa ;_adfadd :=_fbdad .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_adfadd =_fdb .ResolveReference (_adfadd );if !_abfb ._fbgeb {_cbffa :=_abfb .traverseObjectData (_adfadd );
if _cbffa !=nil {return nil ,_cbffa ;};};return _adfadd ,nil ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _fdb .PdfObject )(*PdfInfo ,error ){var _becd PdfInfo ;_cdbe ,_aabfg :=obj .(*_fdb .PdfObjectDictionary );if !_aabfg {return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_efgg :=range _cdbe .Keys (){switch _efgg {case "\u0054\u0069\u0074l\u0065":_becd .Title ,_ =_fdb .GetString (_cdbe .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_becd .Author ,_ =_fdb .GetString (_cdbe .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_becd .Subject ,_ =_fdb .GetString (_cdbe .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_becd .Keywords ,_ =_fdb .GetString (_cdbe .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_becd .Creator ,_ =_fdb .GetString (_cdbe .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_becd .Producer ,_ =_fdb .GetString (_cdbe .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_becd .Trapped ,_ =_fdb .GetName (_cdbe .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _cgefa ,_ccgge :=_fdb .GetString (_cdbe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_ccgge &&_cgefa .String ()!=""{_fdcbg ,_egcdf :=NewPdfDate (_cgefa .String ());if _egcdf !=nil {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_egcdf );
};_becd .CreationDate =&_fdcbg ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _cgabg ,_dfbf :=_fdb .GetString (_cdbe .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_dfbf &&_cgabg .String ()!=""{_dadf ,_gebbd :=NewPdfDate (_cgabg .String ());if _gebbd !=nil {return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_gebbd );
};_becd .ModifiedDate =&_dadf ;};default:_ffdf ,_ :=_fdb .GetString (_cdbe .Get (_efgg ));if _becd ._ecgdf ==nil {_becd ._ecgdf =_fdb .MakeDict ();};_becd ._ecgdf .Set (_efgg ,_ffdf );};};return &_becd ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_ggdba *PdfShading )GetContext ()PdfModel {return _ggdba ._eaefc };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fdb .PdfObjectArray ;ExtGState _fdb .PdfObject ;};func (_bbcd *PdfReader )newPdfAnnotationLineFromDict (_cffc *_fdb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_bgfd :=PdfAnnotationLine {};
_eece ,_dbac :=_bbcd .newPdfAnnotationMarkupFromDict (_cffc );if _dbac !=nil {return nil ,_dbac ;};_bgfd .PdfAnnotationMarkup =_eece ;_bgfd .L =_cffc .Get ("\u004c");_bgfd .BS =_cffc .Get ("\u0042\u0053");_bgfd .LE =_cffc .Get ("\u004c\u0045");_bgfd .IC =_cffc .Get ("\u0049\u0043");
_bgfd .LL =_cffc .Get ("\u004c\u004c");_bgfd .LLE =_cffc .Get ("\u004c\u004c\u0045");_bgfd .Cap =_cffc .Get ("\u0043\u0061\u0070");_bgfd .IT =_cffc .Get ("\u0049\u0054");_bgfd .LLO =_cffc .Get ("\u004c\u004c\u004f");_bgfd .CP =_cffc .Get ("\u0043\u0050");
_bgfd .Measure =_cffc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_bgfd .CO =_cffc .Get ("\u0043\u004f");return &_bgfd ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_cccbb *PdfAppender )WriteToFile (outputPath string )error {_afedg ,_dfde :=_fgc .Create (outputPath );if _dfde !=nil {return _dfde ;};defer _afedg .Close ();return _cccbb .Write (_afedg );};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fdb .PdfObject ;};func _cbgfa (_dbba *_fdb .PdfObjectDictionary ,_ebdbb *fontCommon )(*pdfFontType3 ,error ){_bdegf :=_aaeda (_ebdbb );_bbbf :=_dbba .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bbbf ==nil {_bbbf =_fdb .MakeInteger (0);
};_bdegf .FirstChar =_bbbf ;_afceb ,_gdee :=_fdb .GetIntVal (_bbbf );if !_gdee {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bbbf );
return nil ,_fdb .ErrTypeError ;};_aace :=_eb .CharCode (_afceb );_bbbf =_dbba .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bbbf ==nil {_bbbf =_fdb .MakeInteger (255);};_bdegf .LastChar =_bbbf ;_afceb ,_gdee =_fdb .GetIntVal (_bbbf );if !_gdee {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bbbf );
return nil ,_fdb .ErrTypeError ;};_gffb :=_eb .CharCode (_afceb );_bbbf =_dbba .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bbbf !=nil {_bdegf .Resources =_bbbf ;};_bbbf =_dbba .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bbbf ==nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bbbf );
return nil ,_fdb .ErrNotSupported ;};_bdegf .CharProcs =_bbbf ;_bbbf =_dbba .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bbbf ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bbbf );
return nil ,_fdb .ErrNotSupported ;};_bdegf .FontMatrix =_bbbf ;_bdegf ._dafe =make (map[_eb .CharCode ]float64 );_bbbf =_dbba .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bbbf !=nil {_bdegf .Widths =_bbbf ;_gbfa ,_dffgc :=_fdb .GetArray (_bbbf );
if !_dffgc {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bbbf );return nil ,_fdb .ErrTypeError ;
};_efgge ,_abcf :=_gbfa .ToFloat64Array ();if _abcf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_abcf ;};if len (_efgge )!=int (_gffb -_aace +1){_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gffb -_aace +1,len (_efgge ));
return nil ,_fdb .ErrRangeError ;};_befa ,_dffgc :=_fdb .GetArray (_bdegf .FontMatrix );if !_dffgc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_befa );
return nil ,_abcf ;};_geagd ,_abcf :=_befa .ToFloat64Array ();if _abcf !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_abcf ;};_cfaff :=_ffb .NewMatrix (_geagd [0],_geagd [1],_geagd [2],_geagd [3],_geagd [4],_geagd [5]);for _ccbc ,_acdc :=range _efgge {_ggcfd ,_ :=_cfaff .Transform (_acdc ,_acdc );_bdegf ._dafe [_aace +_eb .CharCode (_ccbc )]=_ggcfd ;};};_bdegf .Encoding =_fdb .TraceToDirectObject (_dbba .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_dabee :=_dbba .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _dabee !=nil {_bdegf ._fcgga =_fdb .TraceToDirectObject (_dabee );_beaae ,_abca :=_aeecf (_bdegf ._fcgga ,&_bdegf .fontCommon );if _abca !=nil {return nil ,_abca ;};_bdegf ._egadb =_beaae ;
};if _afdac :=_bdegf ._egadb ;_afdac !=nil {_bdegf ._cgddd =_eb .NewCMapEncoder ("",nil ,_afdac );}else {_bdegf ._cgddd =_eb .NewPdfDocEncoder ();};return _bdegf ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_eefd *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the function.
func (_degbe *PdfFunctionType4 )ToPdfObject ()_fdb .PdfObject {_abade :=_degbe ._dcceg ;if _abade ==nil {_degbe ._dcceg =&_fdb .PdfObjectStream {};_abade =_degbe ._dcceg ;};_bbgb :=_fdb .MakeDict ();_bbgb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fdb .MakeInteger (4));
_fgfgg :=&_fdb .PdfObjectArray {};for _ ,_edafc :=range _degbe .Domain {_fgfgg .Append (_fdb .MakeFloat (_edafc ));};_bbgb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgfgg );_afebb :=&_fdb .PdfObjectArray {};for _ ,_abbb :=range _degbe .Range {_afebb .Append (_fdb .MakeFloat (_abbb ));
};_bbgb .Set ("\u0052\u0061\u006eg\u0065",_afebb );if _degbe ._cbba ==nil &&_degbe .Program !=nil {_degbe ._cbba =[]byte (_degbe .Program .String ());};_bbgb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_degbe ._cbba ))));
_abade .Stream =_degbe ._cbba ;_abade .PdfObjectDictionary =_bbgb ;return _abade ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_dadcc :=NewPdfOutline ();_dadcc ._fcfd =&_dadcc ;return _dadcc ;};func _aeeec (_dbddbc _fdb .PdfObject ,_fceaf *PdfReader )(*OutlineDest ,error ){_dfdbd ,_dgfcf :=_fdb .GetArray (_dbddbc );if !_dgfcf {return nil ,_ee .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_deeef :=_dfdbd .Len ();if _deeef < 2{return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_deeef );
};_effd :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cfdee :=_dfdbd .Get (0);if _bbddc ,_bcbgf :=_fdb .GetIndirect (_cfdee );_bcbgf {if _ ,_faafd ,_egbgg :=_fceaf .PageFromIndirectObject (_bbddc );_egbgg ==nil {_effd .Page =int64 (_faafd -1);}else {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bbddc );
};_effd .PageObj =_bbddc ;}else if _ebfab ,_gcdad :=_fdb .GetIntVal (_cfdee );_gcdad {if _ebfab >=0&&_ebfab < len (_fceaf .PageList ){_effd .PageObj =_fceaf .PageList [_ebfab ].GetPageAsIndirectObject ();}else {_aa .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ebfab );
};_effd .Page =int64 (_ebfab );}else {return nil ,_d .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cfdee );};_edfc ,_dgfcf :=_fdb .GetNameVal (_dfdbd .Get (1));
if !_dgfcf {_aa .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dfdbd .Get (1));
return _effd ,nil ;};switch _edfc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _deeef > 2{_effd .Y ,_ =_fdb .GetNumberAsFloat (_fdb .TraceToDirectObject (_dfdbd .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _deeef > 2{_effd .X ,_ =_fdb .GetNumberAsFloat (_fdb .TraceToDirectObject (_dfdbd .Get (2)));
};case "\u0058\u0059\u005a":if _deeef > 4{_effd .X ,_ =_fdb .GetNumberAsFloat (_fdb .TraceToDirectObject (_dfdbd .Get (2)));_effd .Y ,_ =_fdb .GetNumberAsFloat (_fdb .TraceToDirectObject (_dfdbd .Get (3)));_effd .Zoom ,_ =_fdb .GetNumberAsFloat (_fdb .TraceToDirectObject (_dfdbd .Get (4)));
};default:_edfc ="\u0046\u0069\u0074";};_effd .Mode =_edfc ;return _effd ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_fagag *PdfPage )AddContentStreamByString (contentStr string )error {_faccb ,_cgbb :=_fdb .MakeStream ([]byte (contentStr ),_fdb .NewFlateEncoder ());if _cgbb !=nil {return _cgbb ;};if _fagag .Contents ==nil {_fagag .Contents =_faccb ;}else {_abega :=_fdb .TraceToDirectObject (_fagag .Contents );
_fgga ,_gbfgf :=_abega .(*_fdb .PdfObjectArray );if !_gbfgf {_fgga =_fdb .MakeArray (_abega );};_fgga .Append (_faccb );_fagag .Contents =_fgga ;};return nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_acac *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdfgg ,_aafc :=_fdb .GetNumbersAsFloat (objects );
if _aafc !=nil {return nil ,_aafc ;};return _acac .ColorFromFloats (_gdfgg );};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_fcfc int ,_dcadf *PdfPage )error ;var _ pdfFont =(*pdfCIDFontType2 )(nil );func (_ggffg *PdfReader )loadDSS ()(*DSS ,error ){if _ggffg ._dbbec .GetCrypter ()!=nil &&!_ggffg ._dbbec .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gebfg :=_ggffg ._adefa .Get ("\u0044\u0053\u0053");if _gebfg ==nil {return nil ,nil ;};_abebe ,_ :=_fdb .GetIndirect (_gebfg );_gebfg =_fdb .TraceToDirectObject (_gebfg );switch _bdcdeb :=_gebfg .(type ){case *_fdb .PdfObjectNull :return nil ,nil ;case *_fdb .PdfObjectDictionary :return _bgaf (_abebe ,_bdcdeb );
};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_gebfg );};

// IsValid checks if the given pdf output intent type is valid.
func (_ffag PdfOutputIntentType )IsValid ()bool {return _ffag >=PdfOutputIntentTypeA1 &&_ffag <=PdfOutputIntentTypeX ;};

// String returns a string representation of what flags are set.
func (_agbf FieldFlag )String ()string {_cbfa :="";if _agbf ==FieldFlagClear {_cbfa ="\u0043\u006c\u0065a\u0072";return _cbfa ;};if _agbf &FieldFlagReadOnly > 0{_cbfa +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _agbf &FieldFlagRequired > 0{_cbfa +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _agbf &FieldFlagNoExport > 0{_cbfa +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _agbf &FieldFlagNoToggleToOff > 0{_cbfa +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _agbf &FieldFlagRadio > 0{_cbfa +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _agbf &FieldFlagPushbutton > 0{_cbfa +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _agbf &FieldFlagRadiosInUnision > 0{_cbfa +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _agbf &FieldFlagMultiline > 0{_cbfa +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _agbf &FieldFlagPassword > 0{_cbfa +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _agbf &FieldFlagFileSelect > 0{_cbfa +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _agbf &FieldFlagDoNotScroll > 0{_cbfa +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _agbf &FieldFlagComb > 0{_cbfa +="\u007c\u0043\u006fm\u0062";};if _agbf &FieldFlagRichText > 0{_cbfa +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _agbf &FieldFlagDoNotSpellCheck > 0{_cbfa +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _agbf &FieldFlagCombo > 0{_cbfa +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _agbf &FieldFlagEdit > 0{_cbfa +="\u007c\u0045\u0064i\u0074";};if _agbf &FieldFlagSort > 0{_cbfa +="\u007c\u0053\u006fr\u0074";};if _agbf &FieldFlagMultiSelect > 0{_cbfa +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _agbf &FieldFlagCommitOnSelChange > 0{_cbfa +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _gga .Trim (_cbfa ,"\u007c");};func (_dcc *PdfAnnotationMarkup )appendToPdfDictionary (_gbeg *_fdb .PdfObjectDictionary ){_gbeg .SetIfNotNil ("\u0054",_dcc .T );
if _dcc .Popup !=nil {_gbeg .Set ("\u0050\u006f\u0070u\u0070",_dcc .Popup .ToPdfObject ());};_gbeg .SetIfNotNil ("\u0043\u0041",_dcc .CA );_gbeg .SetIfNotNil ("\u0052\u0043",_dcc .RC );_gbeg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dcc .CreationDate );
_gbeg .SetIfNotNil ("\u0049\u0052\u0054",_dcc .IRT );_gbeg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_dcc .Subj );_gbeg .SetIfNotNil ("\u0052\u0054",_dcc .RT );_gbeg .SetIfNotNil ("\u0049\u0054",_dcc .IT );_gbeg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_dcc .ExData );
};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_ebbadg *XObjectImage )SetFilter (encoder _fdb .StreamEncoder )error {_abacd :=_ebbadg .Stream ;_efddfc ,_eddef :=_ebbadg .Filter .DecodeBytes (_abacd );if _eddef !=nil {return _eddef ;};_ebbadg .Filter =encoder ;encoder .UpdateParams (_ebbadg .getParamsDict ());
_abacd ,_eddef =encoder .EncodeBytes (_efddfc );if _eddef !=nil {return _eddef ;};_ebbadg .Stream =_abacd ;return nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_gbcg *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ebaf DefaultImageHandler )NewImageFromGoImage (goimg _bd .Image )(*Image ,error ){_egeef ,_fgaeb :=_ff .FromGoImage (goimg );if _fgaeb !=nil {return nil ,_fgaeb ;};_gaecf :=_cdbdc (_egeef .Base ());return &_gaecf ,nil ;};func (_febbe *pdfCIDFontType2 )baseFields ()*fontCommon {return &_febbe .fontCommon };


// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bggd *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ee .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fcga ,_gcgg :=_ff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dcaf ,img ._gcgd );if _gcgg !=nil {return img ,_gcgg ;};_gedg ,_gcgg :=_ff .GrayConverter .Convert (_fcga );if _gcgg !=nil {return img ,_gcgg ;
};return _cdbdc (_gedg .Base ()),nil ;};func _fbce (_bacgg *_fdb .PdfObjectDictionary )bool {for _ ,_edcbb :=range _bacgg .Keys (){if _ ,_fegae :=_cfg [_edcbb .String ()];_fegae {return true ;};};return false ;};func _dcfga (_fddac *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fddac }};
func (_ebdfg *PdfWriter )setHashIDs (_bcffe _ac .Hash )error {_cbfcc :=_bcffe .Sum (nil );if _ebdfg ._aebag ==""{_ebdfg ._aebag =_e .EncodeToString (_cbfcc [:8]);};_ebdfg .setDocumentIDs (_ebdfg ._aebag ,_e .EncodeToString (_cbfcc [8:]));return nil ;};


// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_ebg :=NewPdfAnnotation ();_gcb :=&PdfAnnotationPolyLine {};_gcb .PdfAnnotation =_ebg ;_gcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebg .SetContext (_gcb );return _gcb ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_gbcgc *Image )SetSamples (samples []uint32 ){if _gbcgc .BitsPerComponent < 8{samples =_gbcgc .samplesAddPadding (samples );};_fgbbg :=_cd .ResampleUint32 (samples ,int (_gbcgc .BitsPerComponent ),8);_ecgae :=make ([]byte ,len (_fgbbg ));for _dbab ,_ddfbf :=range _fgbbg {_ecgae [_dbab ]=byte (_ddfbf );
};_gbcgc .Data =_ecgae ;};

// ToPdfObject returns the PDF representation of the function.
func (_bcedd *PdfFunctionType2 )ToPdfObject ()_fdb .PdfObject {_acfcg :=_fdb .MakeDict ();_acfcg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fdb .MakeInteger (2));_egafe :=&_fdb .PdfObjectArray {};for _ ,_bbga :=range _bcedd .Domain {_egafe .Append (_fdb .MakeFloat (_bbga ));
};_acfcg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egafe );if _bcedd .Range !=nil {_aedad :=&_fdb .PdfObjectArray {};for _ ,_bcggc :=range _bcedd .Range {_aedad .Append (_fdb .MakeFloat (_bcggc ));};_acfcg .Set ("\u0052\u0061\u006eg\u0065",_aedad );
};if _bcedd .C0 !=nil {_eadfc :=&_fdb .PdfObjectArray {};for _ ,_efeg :=range _bcedd .C0 {_eadfc .Append (_fdb .MakeFloat (_efeg ));};_acfcg .Set ("\u0043\u0030",_eadfc );};if _bcedd .C1 !=nil {_gcggf :=&_fdb .PdfObjectArray {};for _ ,_ggaad :=range _bcedd .C1 {_gcggf .Append (_fdb .MakeFloat (_ggaad ));
};_acfcg .Set ("\u0043\u0031",_gcggf );};_acfcg .Set ("\u004e",_fdb .MakeFloat (_bcedd .N ));if _bcedd ._bbfc !=nil {_bcedd ._bbfc .PdfObject =_acfcg ;return _bcedd ._bbfc ;};return _acfcg ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_gded *PdfOutputIntent )GetContainingPdfObject ()_fdb .PdfObject {return _gded ._cfbba };

// Items returns all children outline items.
func (_bcege *Outline )Items ()[]*OutlineItem {return _bcege .Entries };

// Subtype returns the font's "Subtype" field.
func (_gaae *PdfFont )Subtype ()string {_fbab :=_gaae .baseFields ()._eaae ;if _beac ,_dbbc :=_gaae ._babcd .(*pdfFontType0 );_dbbc {_fbab =_fbab +"\u003a"+_beac .DescendantFont .Subtype ();};return _fbab ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bdgg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_afgc *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ebcgc :=_cd .NewReader (img .getBase ());_aeab :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bbbe :=_cd .NewWriter (_aeab );
_gagf :=_fag .Pow (2,float64 (img .BitsPerComponent ))-1;_befc :=make ([]uint32 ,3);var (_aede uint32 ;ANorm ,X ,Y ,Z ,_gggg ,_eae ,_egcee float64 ;_edbf error ;);for {_aede ,_edbf =_ebcgc .ReadSample ();if _edbf ==_ca .EOF {break ;}else if _edbf !=nil {return img ,_edbf ;
};ANorm =float64 (_aede )/_gagf ;X =_afgc .WhitePoint [0]*_fag .Pow (ANorm ,_afgc .Gamma );Y =_afgc .WhitePoint [1]*_fag .Pow (ANorm ,_afgc .Gamma );Z =_afgc .WhitePoint [2]*_fag .Pow (ANorm ,_afgc .Gamma );_gggg =3.240479*X +-1.537150*Y +-0.498535*Z ;
_eae =-0.969256*X +1.875992*Y +0.041556*Z ;_egcee =0.055648*X +-0.204043*Y +1.057311*Z ;_gggg =_fag .Min (_fag .Max (_gggg ,0),1.0);_eae =_fag .Min (_fag .Max (_eae ,0),1.0);_egcee =_fag .Min (_fag .Max (_egcee ,0),1.0);_befc [0]=uint32 (_gggg *_gagf );
_befc [1]=uint32 (_eae *_gagf );_befc [2]=uint32 (_egcee *_gagf );if _edbf =_bbbe .WriteSamples (_befc );_edbf !=nil {return img ,_edbf ;};};return _cdbdc (&_aeab ),nil ;};func (_dbcag *PdfWriter )copyObjects (){_acecb :=make (map[_fdb .PdfObject ]_fdb .PdfObject );
_cbeggg :=make ([]_fdb .PdfObject ,0,len (_dbcag ._gbabc ));_fcgbe :=make (map[_fdb .PdfObject ]struct{},len (_dbcag ._gbabc ));_adefbc :=make (map[_fdb .PdfObject ]struct{});for _ ,_cdedgf :=range _dbcag ._gbabc {_efcde :=_dbcag .copyObject (_cdedgf ,_acecb ,_adefbc ,false );
if _ ,_ffcd :=_adefbc [_cdedgf ];_ffcd {continue ;};_cbeggg =append (_cbeggg ,_efcde );_fcgbe [_efcde ]=struct{}{};};_dbcag ._gbabc =_cbeggg ;_dbcag ._fbeb =_fcgbe ;_dbcag ._fecbc =_dbcag .copyObject (_dbcag ._fecbc ,_acecb ,nil ,false ).(*_fdb .PdfIndirectObject );
_dbcag ._edda =_dbcag .copyObject (_dbcag ._edda ,_acecb ,nil ,false ).(*_fdb .PdfIndirectObject );if _dbcag ._dfbdf !=nil {_dbcag ._dfbdf =_dbcag .copyObject (_dbcag ._dfbdf ,_acecb ,nil ,false ).(*_fdb .PdfIndirectObject );};if _dbcag ._ddfef {_afec :=make (map[_fdb .PdfObject ]int64 );
for _bbgba ,_aedg :=range _dbcag ._adeg {if _dadef ,_bccbg :=_acecb [_bbgba ];_bccbg {_afec [_dadef ]=_aedg ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_dbcag ._adeg =_afec ;};};

// GetVersion gets the document version.
func (_fccaa *PdfWriter )GetVersion ()_fdb .Version {return _fccaa ._bgagb };func (_cfff *PdfReader )newPdfActionGotoEFromDict (_cfd *_fdb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gbf ,_dea :=_gaef (_cfd .Get ("\u0046"));if _dea !=nil {return nil ,_dea ;
};return &PdfActionGoToE {D :_cfd .Get ("\u0044"),NewWindow :_cfd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_cfd .Get ("\u0054"),F :_gbf },nil ;};

// GetPerms returns the Permissions dictionary
func (_gedb *PdfReader )GetPerms ()*Permissions {return _gedb ._gbee };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_fdb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fffc *_fdb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_eff *PdfActionTrans )ToPdfObject ()_fdb .PdfObject {_eff .PdfAction .ToPdfObject ();_bfd :=_eff ._ae ;_gaa :=_bfd .PdfObject .(*_fdb .PdfObjectDictionary );_gaa .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeTrans )));_gaa .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_eff .Trans );
return _bfd ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_abdb *PdfOutlineTreeNode )ToPdfObject ()_fdb .PdfObject {return _abdb .GetContext ().ToPdfObject ();};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_bagda *PdfColorCalGray )GetNumComponents ()int {return 1};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_add :=NewPdfAnnotation ();_aag :=&PdfAnnotationRichMedia {};_aag .PdfAnnotation =_add ;_add .SetContext (_aag );return _aag ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fdb .PdfObject ;};func (_bbdfe *PdfWriter )writeObject (_adab int ,_bfadf _fdb .PdfObject ){_aa .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_adab );if _efdc ,_ecfbc :=_bfadf .(*_fdb .PdfIndirectObject );
_ecfbc {_bbdfe ._bbbeb [_adab ]=crossReference {Type :1,Offset :_bbdfe ._cbgbba ,Generation :_efdc .GenerationNumber };_facbba :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_adab );if _debf ,_eddfd :=_efdc .PdfObject .(*pdfSignDictionary );
_eddfd {_debf ._bcdcf =_bbdfe ._cbgbba +int64 (len (_facbba ));};if _efdc .PdfObject ==nil {_aa .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_efdc .PdfObject =_fdb .MakeNull ();};_facbba +=_efdc .PdfObject .WriteString ();_facbba +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bbdfe .writeString (_facbba );return ;};if _caabb ,_fgfgb :=_bfadf .(*_fdb .PdfObjectStream );_fgfgb {_bbdfe ._bbbeb [_adab ]=crossReference {Type :1,Offset :_bbdfe ._cbgbba ,Generation :_caabb .GenerationNumber };
_gafdb :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_adab );_gafdb +=_caabb .PdfObjectDictionary .WriteString ();_gafdb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bbdfe .writeString (_gafdb );_bbdfe .writeBytes (_caabb .Stream );
_bbdfe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _affeg ,_cfeab :=_bfadf .(*_fdb .PdfObjectStreams );_cfeab {_bbdfe ._bbbeb [_adab ]=crossReference {Type :1,Offset :_bbdfe ._cbgbba ,Generation :_affeg .GenerationNumber };
_gbded :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_adab );var _fgaad []string ;var _bceaf string ;var _eeeba int64 ;for _ecfee ,_cfbga :=range _affeg .Elements (){_ececc ,_ebdcg :=_cfbga .(*_fdb .PdfIndirectObject );if !_ebdcg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_adab ,_cfbga );
continue ;};_bgagbf :=_ececc .PdfObject .WriteString ()+"\u0020";_bceaf =_bceaf +_bgagbf ;_fgaad =append (_fgaad ,_d .Sprintf ("\u0025\u0064\u0020%\u0064",_ececc .ObjectNumber ,_eeeba ));_bbdfe ._bbbeb [int (_ececc .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_adab ,Index :_ecfee };
_eeeba =_eeeba +int64 (len ([]byte (_bgagbf )));};_ceecff :=_gga .Join (_fgaad ,"\u0020")+"\u0020";_adada :=_fdb .NewFlateEncoder ();_ceadf :=_adada .MakeStreamDict ();_ceadf .Set (_fdb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fdb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_abdf :=int64 (_affeg .Len ());_ceadf .Set (_fdb .PdfObjectName ("\u004e"),_fdb .MakeInteger (_abdf ));_eaaca :=int64 (len (_ceecff ));_ceadf .Set (_fdb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fdb .MakeInteger (_eaaca ));_gcfaf ,_ :=_adada .EncodeBytes ([]byte (_ceecff +_bceaf ));
_baffd :=int64 (len (_gcfaf ));_ceadf .Set (_fdb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fdb .MakeInteger (_baffd ));_gbded +=_ceadf .WriteString ();_gbded +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bbdfe .writeString (_gbded );
_bbdfe .writeBytes (_gcfaf );_bbdfe .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bbdfe .writeString (_bfadf .WriteString ());};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dacba .Lock ();defer _dacba .Unlock ();_fcdde =creator };

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bfef *PdfFieldText )ToPdfObject ()_fdb .PdfObject {_bfef .PdfField .ToPdfObject ();_bgfc :=_bfef ._gdgea ;_cdbbf :=_bgfc .PdfObject .(*_fdb .PdfObjectDictionary );_cdbbf .Set ("\u0046\u0054",_fdb .MakeName ("\u0054\u0078"));if _bfef .DA !=nil {_cdbbf .Set ("\u0044\u0041",_bfef .DA );
};if _bfef .Q !=nil {_cdbbf .Set ("\u0051",_bfef .Q );};if _bfef .DS !=nil {_cdbbf .Set ("\u0044\u0053",_bfef .DS );};if _bfef .RV !=nil {_cdbbf .Set ("\u0052\u0056",_bfef .RV );};if _bfef .MaxLen !=nil {_cdbbf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bfef .MaxLen );
};return _bgfc ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_affc *PdfOutlineItem )ToPdfObject ()_fdb .PdfObject {_eacdc :=_affc ._ecge ;_badg :=_eacdc .PdfObject .(*_fdb .PdfObjectDictionary );_badg .Set ("\u0054\u0069\u0074l\u0065",_affc .Title );if _affc .A !=nil {_badg .Set ("\u0041",_affc .A );};if _caab :=_badg .Get ("\u0053\u0045");
_caab !=nil {_badg .Remove ("\u0053\u0045");};if _affc .C !=nil {_badg .Set ("\u0043",_affc .C );};if _affc .Dest !=nil {_badg .Set ("\u0044\u0065\u0073\u0074",_affc .Dest );};if _affc .F !=nil {_badg .Set ("\u0046",_affc .F );};if _affc .Count !=nil {_badg .Set ("\u0043\u006f\u0075n\u0074",_fdb .MakeInteger (*_affc .Count ));
};if _affc .Next !=nil {_badg .Set ("\u004e\u0065\u0078\u0074",_affc .Next .ToPdfObject ());};if _affc .First !=nil {_badg .Set ("\u0046\u0069\u0072s\u0074",_affc .First .ToPdfObject ());};if _affc .Prev !=nil {_badg .Set ("\u0050\u0072\u0065\u0076",_affc .Prev .GetContext ().GetContainingPdfObject ());
};if _affc .Last !=nil {_badg .Set ("\u004c\u0061\u0073\u0074",_affc .Last .GetContext ().GetContainingPdfObject ());};if _affc .Parent !=nil {_badg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_affc .Parent .GetContext ().GetContainingPdfObject ());};
return _eacdc ;};

// CustomKeys returns all custom info keys as list.
func (_efgb *PdfInfo )CustomKeys ()[]string {if _efgb ._ecgdf ==nil {return nil ;};_dcad :=make ([]string ,len (_efgb ._ecgdf .Keys ()));for _ ,_bdcc :=range _efgb ._ecgdf .Keys (){_dcad =append (_dcad ,_bdcc .String ());};return _dcad ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gccgfe *PdfPage )ToPdfObject ()_fdb .PdfObject {_cgge :=_gccgfe ._fccfd ;_gccgfe .GetPageDict ();return _cgge ;};func (_adde *PdfReader )newPdfAnnotationInkFromDict (_dgf *_fdb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_bgfda :=PdfAnnotationInk {};
_ceg ,_bcd :=_adde .newPdfAnnotationMarkupFromDict (_dgf );if _bcd !=nil {return nil ,_bcd ;};_bgfda .PdfAnnotationMarkup =_ceg ;_bgfda .InkList =_dgf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_bgfda .BS =_dgf .Get ("\u0042\u0053");return &_bgfda ,nil ;
};func (_gfcag *Image )samplesAddPadding (_dafb []uint32 )[]uint32 {_egfdf :=_ff .BytesPerLine (int (_gfcag .Width ),int (_gfcag .BitsPerComponent ),_gfcag .ColorComponents )*(8/int (_gfcag .BitsPerComponent ));_feeea :=_egfdf *int (_gfcag .Height );if len (_dafb )==_feeea {return _dafb ;
};_ababa :=make ([]uint32 ,_feeea );_feeae :=int (_gfcag .Width )*_gfcag .ColorComponents ;for _gdbe :=0;_gdbe < int (_gfcag .Height );_gdbe ++{_ggaf :=_gdbe *int (_gfcag .Width );_bfgaf :=_gdbe *_egfdf ;for _dcfdg :=0;_dcfdg < _feeae ;_dcfdg ++{_ababa [_bfgaf +_dcfdg ]=_dafb [_ggaf +_dcfdg ];
};};return _ababa ;};func (_eagb *DSS )add (_bdeg *[]*_fdb .PdfObjectStream ,_fbd map[string ]*_fdb .PdfObjectStream ,_cgbg [][]byte )([]*_fdb .PdfObjectStream ,error ){_bgbd :=make ([]*_fdb .PdfObjectStream ,0,len (_cgbg ));for _ ,_bafc :=range _cgbg {_fgaed ,_gdcgg :=_ddbfgc (_bafc );
if _gdcgg !=nil {return nil ,_gdcgg ;};_fceg ,_bdcde :=_fbd [string (_fgaed )];if !_bdcde {_fceg ,_gdcgg =_fdb .MakeStream (_bafc ,_fdb .NewRawEncoder ());if _gdcgg !=nil {return nil ,_gdcgg ;};_fbd [string (_fgaed )]=_fceg ;*_bdeg =append (*_bdeg ,_fceg );
};_bgbd =append (_bgbd ,_fceg );};return _bgbd ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_bbffec PdfDate )ToGoTime ()_ag .Time {_ccdge :=int (_bbffec ._dbbad *60*60+_bbffec ._gfacg *60);switch _bbffec ._gcddcc {case '-':_ccdge =-_ccdge ;case 'Z':_ccdge =0;};_ebebb :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_bbffec ._gcddcc ,_bbffec ._dbbad ,_bbffec ._gfacg );
_dfdff :=_ag .FixedZone (_ebebb ,_ccdge );return _ag .Date (int (_bbffec ._aabcd ),_ag .Month (_bbffec ._gdgeae ),int (_bbffec ._dgfdg ),int (_bbffec ._dcdgg ),int (_bbffec ._gece ),int (_bbffec ._bfegga ),0,_dfdff );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dggf pdfCIDFontType0 )GetCharMetrics (code _eb .CharCode )(_fc .CharMetrics ,bool ){_eadf :=_dggf ._gafda ;if _bbgda ,_bcbbb :=_dggf ._aaab [code ];_bcbbb {_eadf =_bbgda ;};return _fc .CharMetrics {Wx :_eadf },true ;};var _cacd =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func (_aedag *DSS )addCRLs (_fbgg [][]byte )([]*_fdb .PdfObjectStream ,error ){return _aedag .add (&_aedag .CRLs ,_aedag ._aeba ,_fbgg );};func _ccgd (_abff _fdb .PdfObject )(*PdfColorspaceCalGray ,error ){_adcg :=NewPdfColorspaceCalGray ();if _bede ,_fbag :=_abff .(*_fdb .PdfIndirectObject );
_fbag {_adcg ._abdca =_bede ;};_abff =_fdb .TraceToDirectObject (_abff );_aaga ,_acdfa :=_abff .(*_fdb .PdfObjectArray );if !_acdfa {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aaga .Len ()!=2{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_abff =_fdb .TraceToDirectObject (_aaga .Get (0));_fdbc ,_acdfa :=_abff .(*_fdb .PdfObjectName );if !_acdfa {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fdbc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_d .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_abff =_fdb .TraceToDirectObject (_aaga .Get (1));
_bdebg ,_acdfa :=_abff .(*_fdb .PdfObjectDictionary );if !_acdfa {return nil ,_d .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_abff =_bdebg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_abff =_fdb .TraceToDirectObject (_abff );_gfbc ,_acdfa :=_abff .(*_fdb .PdfObjectArray );if !_acdfa {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _gfbc .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_afce ,_ebef :=_gfbc .GetAsFloat64Slice ();
if _ebef !=nil {return nil ,_ebef ;};_adcg .WhitePoint =_afce ;_abff =_bdebg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _abff !=nil {_abff =_fdb .TraceToDirectObject (_abff );_ggde ,_bfae :=_abff .(*_fdb .PdfObjectArray );
if !_bfae {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ggde .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_aea ,_fgfd :=_ggde .GetAsFloat64Slice ();if _fgfd !=nil {return nil ,_fgfd ;};_adcg .BlackPoint =_aea ;};_abff =_bdebg .Get ("\u0047\u0061\u006dm\u0061");if _abff !=nil {_abff =_fdb .TraceToDirectObject (_abff );_fcbg ,_fbaf :=_fdb .GetNumberAsFloat (_abff );
if _fbaf !=nil {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_adcg .Gamma =_fcbg ;};return _adcg ,nil ;};func (_caeag *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_bacg :=PdfColorLab {l ,a ,b };return &_bacg };

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_gfaab :=&PdfAppender {_dfe :reader ._baaad ,Reader :reader ,_fgbe :reader ._dbbec ,_bgadb :reader ._cccf };_fgdg ,_facc :=_gfaab ._dfe .Seek (0,_ca .SeekEnd );
if _facc !=nil {return nil ,_facc ;};_gfaab ._gcag =_fgdg ;if _ ,_facc =_gfaab ._dfe .Seek (0,_ca .SeekStart );_facc !=nil {return nil ,_facc ;};_gfaab ._abcd ,_facc =NewPdfReaderWithOpts (_gfaab ._dfe ,opts );if _facc !=nil {return nil ,_facc ;};for _ ,_cgde :=range _gfaab .Reader .GetObjectNums (){if _gfaab ._edfd < _cgde {_gfaab ._edfd =_cgde ;
};};_gfaab ._defa =_gfaab ._fgbe .GetXrefTable ();_gfaab ._decae =_gfaab ._fgbe .GetXrefOffset ();_gfaab ._fdagd =append (_gfaab ._fdagd ,_gfaab ._abcd .PageList ...);_gfaab ._acbb =make (map[_fdb .PdfObject ]struct{});_gfaab ._eaa =make (map[_fdb .PdfObject ]int64 );
_gfaab ._fgde =make (map[_fdb .PdfObject ]struct{});_gfaab ._ebbc =_gfaab ._abcd .AcroForm ;_gfaab ._bddg =_gfaab ._abcd .DSS ;if opts !=nil {_gfaab ._egfd =opts .Password ;};if encryptOptions !=nil {_gfaab ._cbegg =encryptOptions ;};return _gfaab ,nil ;
};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_cfac *PdfColorspaceSpecialIndexed )ToPdfObject ()_fdb .PdfObject {_bddgb :=_fdb .MakeArray (_fdb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_bddgb .Append (_cfac .Base .ToPdfObject ());_bddgb .Append (_fdb .MakeInteger (int64 (_cfac .HiVal )));
_bddgb .Append (_cfac .Lookup );if _cfac ._gcea !=nil {_cfac ._gcea .PdfObject =_bddgb ;return _cfac ._gcea ;};return _bddgb ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_cfbba :_fdb .MakeDict ()};
};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fge :=NewPdfAction ();_cgd :=&PdfActionGoTo3DView {};_cgd .PdfAction =_fge ;_fge .SetContext (_cgd );return _cgd ;};func (_bbce *PdfReader )newPdfAnnotationPopupFromDict (_def *_fdb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_ggfdf :=PdfAnnotationPopup {};
_ggfdf .Parent =_def .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_ggfdf .Open =_def .Get ("\u004f\u0070\u0065\u006e");return &_ggfdf ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_bdfca *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _bdfca ._dbbec .GetRevisionNumber ()==0{return nil ,_ee .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fbbde ,_gfcbf :=_bdfca ._eegeda [_bdfca ];_gfcbf {return _fbbde ,nil ;};_bcfgc ,_faecg :=_bdfca ._dbbec .GetPreviousRevisionReadSeeker ();if _faecg !=nil {return nil ,_faecg ;};_abdga ,_faecg :=_fgagf (_bcfgc ,_bdfca ._ffafd ,_bdfca ._ecbf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _faecg !=nil {return nil ,_faecg ;};_bdfca ._eggca [_bdfca ._dbbec .GetRevisionNumber ()-1]=_abdga ;_bdfca ._eegeda [_bdfca ]=_abdga ;_abdga ._eegeda =_bdfca ._eegeda ;return _abdga ,nil ;};func _badeb (_dcbga *PdfField )[]*PdfField {_abge :=[]*PdfField {_dcbga };
for _ ,_adagc :=range _dcbga .Kids {_abge =append (_abge ,_badeb (_adagc )...);};return _abge ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fdb .PdfObject ;AN _fdb .PdfObject ;OP _fdb .PdfObject ;JS _fdb .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ca .ReadSeeker )(*PdfReader ,error ){const _bfegc ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _fgagf (rs ,&ReaderOpts {LazyLoad :true },false ,_bfegc );
};

// RemovePage removes a page by number.
func (_baf *PdfAppender )RemovePage (pageNum int ){_acde :=pageNum -1;_baf ._fdagd =append (_baf ._fdagd [0:_acde ],_baf ._fdagd [pageNum :]...);};func (_bffad *PdfReader )flattenFieldsWithOpts (_ebdg bool ,_adeef FieldAppearanceGenerator ,_ffgdf *FieldFlattenOpts )error {if _ffgdf ==nil {_ffgdf =&FieldFlattenOpts {};
};var _efggd bool ;_gedgc :=map[*PdfAnnotation ]bool {};{var _gddc []*PdfField ;_gbaab :=_bffad .AcroForm ;if _gbaab !=nil {if _ffgdf .FilterFunc !=nil {_gddc =_gbaab .filteredFields (_ffgdf .FilterFunc ,true );_efggd =_gbaab .Fields !=nil &&len (*_gbaab .Fields )> 0;
}else {_gddc =_gbaab .AllFields ();};};for _ ,_gaeg :=range _gddc {for _ ,_bedf :=range _gaeg .Annotations {_gedgc [_bedf .PdfAnnotation ]=_gaeg .V !=nil ;if _adeef !=nil {_ebbe ,_dddb :=_adeef .GenerateAppearanceDict (_gbaab ,_gaeg ,_bedf );if _dddb !=nil {return _dddb ;
};_bedf .AP =_ebbe ;};};};};if _ebdg {for _ ,_ggbae :=range _bffad .PageList {_babc ,_fceba :=_ggbae .GetAnnotations ();if _fceba !=nil {return _fceba ;};for _ ,_egdgf :=range _babc {_gedgc [_egdgf ]=true ;};};};for _ ,_adcd :=range _bffad .PageList {var _fcdcb []*PdfAnnotation ;
if _adeef !=nil {if _egad :=_adeef .WrapContentStream (_adcd );_egad !=nil {return _egad ;};};_aadbc ,_cdabe :=_adcd .GetAnnotations ();if _cdabe !=nil {return _cdabe ;};for _ ,_daaae :=range _aadbc {_dbcdg ,_gffd :=_gedgc [_daaae ];if !_gffd &&_ffgdf .AnnotFilterFunc !=nil {if _ ,_gafb :=_daaae .GetContext ().(*PdfAnnotationWidget );
!_gafb {_gffd =_ffgdf .AnnotFilterFunc (_daaae );};};if !_gffd {_fcdcb =append (_fcdcb ,_daaae );continue ;};switch _daaae .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_afdd ,_edfa ,_agec :=_daga (_daaae );if _agec !=nil {if !_dbcdg {_aa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_agec );
continue ;};if _afdd ==nil {continue ;};_ggeac :=_adcd .Resources .GenerateXObjectName ();_adcd .Resources .SetXObjectFormByName (_ggeac ,_afdd );_eggd :=_fag .Min (_edfa .Llx ,_edfa .Urx );_cgdea :=_fag .Min (_edfa .Lly ,_edfa .Ury );var _gfeeb []string ;
_gfeeb =append (_gfeeb ,"\u0071");_gfeeb =append (_gfeeb ,_d .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_eggd ,_cgdea ));
_gfeeb =append (_gfeeb ,_d .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ggeac .String ()));_gfeeb =append (_gfeeb ,"\u0051");_fgcdg :=_gga .Join (_gfeeb ,"\u000a");_agec =_adcd .AppendContentStream (_fgcdg );if _agec !=nil {return _agec ;};if _afdd .Resources !=nil {_dece ,_ddaf :=_fdb .GetDict (_afdd .Resources .Font );
if _ddaf {for _ ,_afcb :=range _dece .Keys (){if !_adcd .Resources .HasFontByName (_afcb ){_adcd .Resources .SetFontByName (_afcb ,_dece .Get (_afcb ));};};};};};if len (_fcdcb )> 0{_adcd ._bcde =_fcdcb ;}else {_adcd ._bcde =[]*PdfAnnotation {};};};if !_efggd {_bffad .AcroForm =nil ;
};return nil ;};func _egadf ()string {_dacba .Lock ();defer _dacba .Unlock ();return _bacfc };func _bgbc (_eaeb *_fdb .PdfObjectDictionary )*VRI {_dbea ,_ :=_fdb .GetString (_eaeb .Get ("\u0054\u0055"));_gaada ,_ :=_fdb .GetString (_eaeb .Get ("\u0054\u0053"));
return &VRI {Cert :_dbdg (_eaeb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_dbdg (_eaeb .Get ("\u004f\u0043\u0053\u0050")),CRL :_dbdg (_eaeb .Get ("\u0043\u0052\u004c")),TU :_dbea ,TS :_gaada };};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_fdaec *_fdb .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bgcc *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ggbf :=NewPdfAction ();_fb :=&PdfActionImportData {};_fb .PdfAction =_ggbf ;_ggbf .SetContext (_fb );return _fb ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fdb .PdfObject ;FS _fdb .PdfObject ;F _fdb .PdfObject ;UF _fdb .PdfObject ;DOS _fdb .PdfObject ;Mac _fdb .PdfObject ;Unix _fdb .PdfObject ;ID _fdb .PdfObject ;V _fdb .PdfObject ;EF _fdb .PdfObject ;RF _fdb .PdfObject ;Desc _fdb .PdfObject ;
CI _fdb .PdfObject ;_addf _fdb .PdfObject ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fdb .PdfObjectArray )(*PdfRectangle ,error ){_aggbc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _ccfg error ;_aggbc .Llx ,_ccfg =_fdb .GetNumberAsFloat (arr .Get (0));if _ccfg !=nil {return nil ,_ccfg ;};_aggbc .Lly ,_ccfg =_fdb .GetNumberAsFloat (arr .Get (1));if _ccfg !=nil {return nil ,_ccfg ;};_aggbc .Urx ,_ccfg =_fdb .GetNumberAsFloat (arr .Get (2));
if _ccfg !=nil {return nil ,_ccfg ;};_aggbc .Ury ,_ccfg =_fdb .GetNumberAsFloat (arr .Get (3));if _ccfg !=nil {return nil ,_ccfg ;};return &_aggbc ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fdb .PdfObjectInteger ;BitsPerComponent *_fdb .PdfObjectInteger ;BitsPerFlag *_fdb .PdfObjectInteger ;Decode *_fdb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fdb .PdfObject ;};

// ToPdfObject converts the font to a PDF representation.
func (_gcaff *pdfFontType3 )ToPdfObject ()_fdb .PdfObject {if _gcaff ._agdf ==nil {_gcaff ._agdf =&_fdb .PdfIndirectObject {};};_ddgb :=_gcaff .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_gcaff ._agdf .PdfObject =_ddgb ;if _gcaff .FirstChar !=nil {_ddgb .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gcaff .FirstChar );
};if _gcaff .LastChar !=nil {_ddgb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gcaff .LastChar );};if _gcaff .Widths !=nil {_ddgb .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gcaff .Widths );};if _gcaff .Encoding !=nil {_ddgb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gcaff .Encoding );
}else if _gcaff ._cgddd !=nil {_fgeac :=_gcaff ._cgddd .ToPdfObject ();if _fgeac !=nil {_ddgb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgeac );};};if _gcaff .FontBBox !=nil {_ddgb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gcaff .FontBBox );
};if _gcaff .FontMatrix !=nil {_ddgb .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_gcaff .FontMatrix );};if _gcaff .CharProcs !=nil {_ddgb .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_gcaff .CharProcs );};if _gcaff .Resources !=nil {_ddgb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gcaff .Resources );
};return _gcaff ._agdf ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ccbd ,_affb :=_fgc .Open (filePath );if _affb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_affb );
return nil ,_affb ;};defer _ccbd .Close ();return NewPdfFontFromTTF (_ccbd );};

// IsCID returns true if the underlying font is CID.
func (_acage *PdfFont )IsCID ()bool {return _acage .baseFields ().isCIDFont ()};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_fbfc *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _fbfc ._cfggc ==nil {_fbfc ._cfggc =_be .NewPSExecutor (_fbfc .Program );};var _fffg []_be .PSObject ;for _ ,_bebf :=range xVec {_fffg =append (_fffg ,_be .MakeReal (_bebf ));
};_cbbab ,_ebcd :=_fbfc ._cfggc .Execute (_fffg );if _ebcd !=nil {return nil ,_ebcd ;};_cfbd ,_ebcd :=_be .PSObjectArrayToFloat64Array (_cbbab );if _ebcd !=nil {return nil ,_ebcd ;};return _cfbd ,nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_egdge *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_fbbcg ,_ ,_cdbaa :=_egdge .CharcodesToUnicodeWithStats (_egdge .BytesToCharcodes (data ));_dccfc :=_eb .ExpandLigatures (_fbbcg );return _dccfc ,_cg .RuneCountInString (_dccfc ),_cdbaa ;
};

// AddWatermarkImage adds a watermark to the page.
func (_fagfe *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_gged ,_bcae :=_fagfe .GetMediaBox ();if _bcae !=nil {return _bcae ;};_gccea :=_gged .Urx -_gged .Llx ;_ffecbb :=_gged .Ury -_gged .Lly ;_cagga :=float64 (*ximg .Width );
_ddbb :=(_gccea -_cagga )/2;if opt .FitToWidth {_cagga =_gccea ;_ddbb =0;};_cdabd :=_ffecbb ;_baage :=float64 (0);if opt .PreserveAspectRatio {_cdabd =_cagga *float64 (*ximg .Height )/float64 (*ximg .Width );_baage =(_ffecbb -_cdabd )/2;};if _fagfe .Resources ==nil {_fagfe .Resources =NewPdfPageResources ();
};_fcfag :=0;_ecabd :=_fdb .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_fcfag ));for _fagfe .Resources .HasXObjectByName (_ecabd ){_fcfag ++;_ecabd =_fdb .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_fcfag ));};_bcae =_fagfe .AddImageResource (_ecabd ,ximg );
if _bcae !=nil {return _bcae ;};_fcfag =0;_bcebf :=_fdb .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_fcfag ));for _fagfe .HasExtGState (_bcebf ){_fcfag ++;_bcebf =_fdb .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_fcfag ));};_cbbgc :=_fdb .MakeDict ();
_cbbgc .Set ("\u0042\u004d",_fdb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cbbgc .Set ("\u0043\u0041",_fdb .MakeFloat (opt .Alpha ));_cbbgc .Set ("\u0063\u0061",_fdb .MakeFloat (opt .Alpha ));_bcae =_fagfe .AddExtGState (_bcebf ,_cbbgc );if _bcae !=nil {return _bcae ;
};_fgdfg :=_d .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_bcebf ,_cagga ,_cdabd ,_ddbb ,_baage ,_ecabd );
_fagfe .AddContentStreamByString (_fgdfg );return nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_gfaaae *PdfPattern )ToPdfObject ()_fdb .PdfObject {_badga :=_gfaaae .getDict ();_badga .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_badga .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fdb .MakeInteger (_gfaaae .PatternType ));
return _gfaaae ._adccf ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);func (_cebeb *pdfFontSimple )getFontEncoding ()(_aagfdg string ,_bafd map[_eb .CharCode ]_eb .GlyphName ,_gebe error ){_aagfdg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _cebgc ,_fgcda :=_baeg [_cebeb ._gfdda ];_fgcda {_aagfdg =_cebgc ;}else if _cebeb .fontFlags ()&_bfdbf !=0{for _fabba ,_afde :=range _baeg {if _gga .Contains (_cebeb ._gfdda ,_fabba ){_aagfdg =_afde ;break ;};};};if _cebeb .Encoding ==nil {return _aagfdg ,nil ,nil ;
};switch _caead :=_cebeb .Encoding .(type ){case *_fdb .PdfObjectName :return string (*_caead ),nil ,nil ;case *_fdb .PdfObjectDictionary :_fcbcb ,_dacgc :=_fdb .GetName (_caead .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _dacgc {_aagfdg =_fcbcb .String ();};if _ffdbf :=_caead .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ffdbf !=nil {_daef ,_bgfdc :=_fdb .GetArray (_ffdbf );if !_bgfdc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_caead ,_caead .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fdb .ErrTypeError ;};_bafd ,_gebe =_eb .FromFontDifferences (_daef );};return _aagfdg ,_bafd ,_gebe ;default:_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_cebeb .Encoding ,_cebeb .Encoding );
return "",nil ,_fdb .ErrTypeError ;};};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_abdg PdfModel ;Rect _fdb .PdfObject ;Contents _fdb .PdfObject ;P _fdb .PdfObject ;NM _fdb .PdfObject ;M _fdb .PdfObject ;F _fdb .PdfObject ;AP _fdb .PdfObject ;AS _fdb .PdfObject ;Border _fdb .PdfObject ;C _fdb .PdfObject ;StructParent _fdb .PdfObject ;
OC _fdb .PdfObject ;_cgbd *_fdb .PdfIndirectObject ;};func (_edgec *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _beabg []*PdfFieldSignature ;for _ ,_fgecc :=range _edgec .AllFields (){switch _dacgdb :=_fgecc .GetContext ().(type ){case *PdfFieldSignature :_gefa :=_dacgdb ;
_beabg =append (_beabg ,_gefa );};};return _beabg ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_egbd :=NewPdfAnnotation ();_fff :=&PdfAnnotationScreen {};_fff .PdfAnnotation =_egbd ;_egbd .SetContext (_fff );return _fff ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_cgab *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ee .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_ccaa :=field .V ;if _ccaa ==nil {return _ee .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_fead :=pageNum -1;
if _fead < 0||_fead > len (_cgab ._fdagd )-1{return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_deb :=_cgab .Reader .PageList [_fead ];field .P =_deb .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fdb .MakeString (_d .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_deb .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _cgab ._ebbc ==_cgab ._abcd .AcroForm {_cgab ._ebbc =_cgab .Reader .AcroForm ;};_dbdeb :=_cgab ._ebbc ;if _dbdeb ==nil {_dbdeb =NewPdfAcroForm ();};_dbdeb .SigFlags =_fdb .MakeInteger (3);
_bdea :=append (_dbdeb .AllFields (),field .PdfField );_dbdeb .Fields =&_bdea ;_cgab .ReplaceAcroForm (_dbdeb );_cgab .UpdatePage (_deb );_cgab ._fdagd [_fead ]=_deb ;if _ ,_dccg :=field .V .GetDocMDPPermission ();_dccg {_cgab ._ggd =NewPermissions (field .V );
};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gdge *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbbc ,_fgee :=_fdb .GetNumbersAsFloat (objects );
if _fgee !=nil {return nil ,_fgee ;};return _gdge .ColorFromFloats (_bbbc );};func _fffefd (_ebgc *_fdb .PdfObjectDictionary )(*PdfFieldButton ,error ){_fggdg :=&PdfFieldButton {};_fggdg .PdfField =NewPdfField ();_fggdg .PdfField .SetContext (_fggdg );
_fggdg .Opt ,_ =_fdb .GetArray (_ebgc .Get ("\u004f\u0070\u0074"));_cade :=NewPdfAnnotationWidget ();_cade .A ,_ =_fdb .GetDict (_ebgc .Get ("\u0041"));_cade .AP ,_ =_fdb .GetDict (_ebgc .Get ("\u0041\u0050"));_cade .SetContext (_fggdg );_fggdg .PdfField .Annotations =append (_fggdg .PdfField .Annotations ,_cade );
return _fggdg ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_ccbbb []_fdb .PdfObject )([]_fdb .PdfObject ,error );};func (_edg *PdfReader )newPdfActionSubmitFormFromDict (_dca *_fdb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_fee ,_bfgf :=_gaef (_dca .Get ("\u0046"));
if _bfgf !=nil {return nil ,_bfgf ;};return &PdfActionSubmitForm {F :_fee ,Fields :_dca .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dca .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_agaed *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_agaed ._fcbdb =outlineTree };func _dcffb (_efbfc *_fdb .PdfObjectStream )(*PdfFunctionType4 ,error ){_gdfc :=&PdfFunctionType4 {};_gdfc ._dcceg =_efbfc ;_efbaa :=_efbfc .PdfObjectDictionary ;
_cfad ,_bdegc :=_fdb .TraceToDirectObject (_efbaa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fdb .PdfObjectArray );if !_bdegc {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cfad .Len ()%2!=0{_aa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bfdg ,_deeed :=_cfad .ToFloat64Array ();
if _deeed !=nil {return nil ,_deeed ;};_gdfc .Domain =_bfdg ;_cfad ,_bdegc =_fdb .TraceToDirectObject (_efbaa .Get ("\u0052\u0061\u006eg\u0065")).(*_fdb .PdfObjectArray );if _bdegc {if _cfad .Len ()< 0||_cfad .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_edfba ,_gdcgf :=_cfad .ToFloat64Array ();if _gdcgf !=nil {return nil ,_gdcgf ;};_gdfc .Range =_edfba ;};_aggga ,_deeed :=_fdb .DecodeStream (_efbfc );if _deeed !=nil {return nil ,_deeed ;};_gdfc ._cbba =_aggga ;_feceg :=_be .NewPSParser (_aggga );_bgdc ,_deeed :=_feceg .Parse ();
if _deeed !=nil {return nil ,_deeed ;};_gdfc .Program =_bgdc ;return _gdfc ,nil ;};func (_acdfd *PdfReader )lookupPageByObject (_afac _fdb .PdfObject )(*PdfPage ,error ){return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func (_fdaag *PdfWriter )copyObject (_caddg _fdb .PdfObject ,_cadda map[_fdb .PdfObject ]_fdb .PdfObject ,_aeaf map[_fdb .PdfObject ]struct{},_ebefd bool )_fdb .PdfObject {_gcdde :=!_fdaag ._ddfef &&_aeaf !=nil ;if _acgg ,_babccd :=_cadda [_caddg ];_babccd {if _gcdde &&!_ebefd {delete (_aeaf ,_caddg );
};return _acgg ;};if _caddg ==nil {_gdfb :=_fdb .MakeNull ();return _gdfb ;};_efaed :=_caddg ;switch _afdcd :=_caddg .(type ){case *_fdb .PdfObjectArray :_eeeea :=_fdb .MakeArray ();_efaed =_eeeea ;_cadda [_caddg ]=_efaed ;for _ ,_agafg :=range _afdcd .Elements (){_eeeea .Append (_fdaag .copyObject (_agafg ,_cadda ,_aeaf ,_ebefd ));
};case *_fdb .PdfObjectStreams :_daefc :=&_fdb .PdfObjectStreams {PdfObjectReference :_afdcd .PdfObjectReference };_efaed =_daefc ;_cadda [_caddg ]=_efaed ;for _ ,_addec :=range _afdcd .Elements (){_daefc .Append (_fdaag .copyObject (_addec ,_cadda ,_aeaf ,_ebefd ));
};case *_fdb .PdfObjectStream :_cgdeaa :=&_fdb .PdfObjectStream {Stream :_afdcd .Stream ,PdfObjectReference :_afdcd .PdfObjectReference };_efaed =_cgdeaa ;_cadda [_caddg ]=_efaed ;_cgdeaa .PdfObjectDictionary =_fdaag .copyObject (_afdcd .PdfObjectDictionary ,_cadda ,_aeaf ,_ebefd ).(*_fdb .PdfObjectDictionary );
case *_fdb .PdfObjectDictionary :var _aabgd bool ;if _gcdde &&!_ebefd {if _dbfbe ,_ :=_fdb .GetNameVal (_afdcd .Get ("\u0054\u0079\u0070\u0065"));_dbfbe =="\u0050\u0061\u0067\u0065"{_ ,_bagce :=_fdaag ._fdbff [_afdcd ];_ebefd =!_bagce ;_aabgd =_ebefd ;
};};_abbae :=_fdb .MakeDict ();_efaed =_abbae ;_cadda [_caddg ]=_efaed ;for _ ,_afcee :=range _afdcd .Keys (){_abbae .Set (_afcee ,_fdaag .copyObject (_afdcd .Get (_afcee ),_cadda ,_aeaf ,_ebefd ));};if _aabgd {_efaed =_fdb .MakeNull ();_ebefd =false ;
};case *_fdb .PdfIndirectObject :_dadfac :=&_fdb .PdfIndirectObject {PdfObjectReference :_afdcd .PdfObjectReference };_efaed =_dadfac ;_cadda [_caddg ]=_efaed ;_dadfac .PdfObject =_fdaag .copyObject (_afdcd .PdfObject ,_cadda ,_aeaf ,_ebefd );case *_fdb .PdfObjectString :_dgaab :=*_afdcd ;
_efaed =&_dgaab ;_cadda [_caddg ]=_efaed ;case *_fdb .PdfObjectName :_faadd :=*_afdcd ;_efaed =&_faadd ;_cadda [_caddg ]=_efaed ;case *_fdb .PdfObjectNull :_efaed =_fdb .MakeNull ();_cadda [_caddg ]=_efaed ;case *_fdb .PdfObjectInteger :_gaefd :=*_afdcd ;
_efaed =&_gaefd ;_cadda [_caddg ]=_efaed ;case *_fdb .PdfObjectReference :_aceaf :=*_afdcd ;_efaed =&_aceaf ;_cadda [_caddg ]=_efaed ;case *_fdb .PdfObjectFloat :_dacaa :=*_afdcd ;_efaed =&_dacaa ;_cadda [_caddg ]=_efaed ;case *_fdb .PdfObjectBool :_dadce :=*_afdcd ;
_efaed =&_dadce ;_cadda [_caddg ]=_efaed ;case *pdfSignDictionary :_ggaag :=&pdfSignDictionary {PdfObjectDictionary :_fdb .MakeDict (),_cdgac :_afdcd ._cdgac ,_daadf :_afdcd ._daadf };_efaed =_ggaag ;_cadda [_caddg ]=_efaed ;for _ ,_ccea :=range _afdcd .Keys (){_ggaag .Set (_ccea ,_fdaag .copyObject (_afdcd .Get (_ccea ),_cadda ,_aeaf ,_ebefd ));
};default:_aa .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_caddg );
};if _gcdde &&_ebefd {_aeaf [_caddg ]=struct{}{};};return _efaed ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fdcf :=&PdfColorspaceCalRGB {};_fdcf .BlackPoint =[]float64 {0.0,0.0,0.0};_fdcf .Gamma =[]float64 {1.0,1.0,1.0};_fdcf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fdcf ;};func (_facag *PdfSignature )extractChainFromCert ()([]*_fa .Certificate ,error ){var _fabbf *_fdb .PdfObjectArray ;
switch _feceb :=_facag .Cert .(type ){case *_fdb .PdfObjectString :_fabbf =_fdb .MakeArray (_feceb );case *_fdb .PdfObjectArray :_fabbf =_feceb ;default:return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_feceb );
};var _fffd _de .Buffer ;for _ ,_cafde :=range _fabbf .Elements (){_bdega ,_abdba :=_fdb .GetString (_cafde );if !_abdba {return nil ,_d .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_cafde );
};if _ ,_cdde :=_fffd .Write (_bdega .Bytes ());_cdde !=nil {return nil ,_cdde ;};};return _fa .ParseCertificates (_fffd .Bytes ());};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_acba *PdfOutlineTreeNode )GetContext ()PdfModel {if _bfcca ,_eebfd :=_acba ._fcfd .(*PdfOutline );_eebfd {return _bfcca ;};if _eacdfe ,_bddfd :=_acba ._fcfd .(*PdfOutlineItem );_bddfd {return _eacdfe ;};_aa .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fdb .PdfObjectStream )(*XObjectImage ,error ){_afaaa :=&XObjectImage {};_afaaa ._aagea =stream ;_debed :=*(stream .PdfObjectDictionary );_fcgaf ,_bbced :=_fdb .NewEncoderFromStream (stream );if _bbced !=nil {return nil ,_bbced ;
};_afaaa .Filter =_fcgaf ;if _acae :=_fdb .TraceToDirectObject (_debed .Get ("\u0057\u0069\u0064t\u0068"));_acae !=nil {_bfaae ,_ggcdf :=_acae .(*_fdb .PdfObjectInteger );if !_ggcdf {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_faaaf :=int64 (*_bfaae );_afaaa .Width =&_faaaf ;}else {return nil ,_ee .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _feaa :=_fdb .TraceToDirectObject (_debed .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_feaa !=nil {_fedad ,_dbeec :=_feaa .(*_fdb .PdfObjectInteger );if !_dbeec {return nil ,_ee .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ceffg :=int64 (*_fedad );
_afaaa .Height =&_ceffg ;}else {return nil ,_ee .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _dcfgf :=_fdb .TraceToDirectObject (_debed .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_dcfgf !=nil {_faadc ,_cbdbc :=NewPdfColorspaceFromPdfObject (_dcfgf );if _cbdbc !=nil {return nil ,_cbdbc ;};_afaaa .ColorSpace =_faadc ;}else {_aa .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_afaaa .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cgdfd :=_fdb .TraceToDirectObject (_debed .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cgdfd !=nil {_edfbg ,_efade :=_cgdfd .(*_fdb .PdfObjectInteger );
if !_efade {return nil ,_ee .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_feaee :=int64 (*_edfbg );_afaaa .BitsPerComponent =&_feaee ;};_afaaa .Intent =_debed .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_afaaa .ImageMask =_debed .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_afaaa .Mask =_debed .Get ("\u004d\u0061\u0073\u006b");_afaaa .Decode =_debed .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_afaaa .Interpolate =_debed .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_afaaa .Alternatives =_debed .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_afaaa .SMask =_debed .Get ("\u0053\u004d\u0061s\u006b");_afaaa .SMaskInData =_debed .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_afaaa .Matte =_debed .Get ("\u004d\u0061\u0074t\u0065");_afaaa .Name =_debed .Get ("\u004e\u0061\u006d\u0065");_afaaa .StructParent =_debed .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_afaaa .ID =_debed .Get ("\u0049\u0044");
_afaaa .OPI =_debed .Get ("\u004f\u0050\u0049");_afaaa .Metadata =_debed .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_afaaa .OC =_debed .Get ("\u004f\u0043");_afaaa .Stream =stream .Stream ;return _afaaa ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_gdged *PdfSignature )SetLocation (location string ){_gdged .Location =_fdb .MakeString (location )};

// ToPdfObject implements interface PdfModel.
func (_ce *PdfActionNamed )ToPdfObject ()_fdb .PdfObject {_ce .PdfAction .ToPdfObject ();_gafa :=_ce ._ae ;_bag :=_gafa .PdfObject .(*_fdb .PdfObjectDictionary );_bag .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeNamed )));_bag .SetIfNotNil ("\u004e",_ce .N );
return _gafa ;};func _bgaf (_ccdg *_fdb .PdfIndirectObject ,_ddcgd *_fdb .PdfObjectDictionary )(*DSS ,error ){if _ccdg ==nil {_ccdg =_fdb .MakeIndirectObject (nil );};_ccdg .PdfObject =_fdb .MakeDict ();_cgfg :=map[string ]*VRI {};if _ggcf ,_bafeg :=_fdb .GetDict (_ddcgd .Get ("\u0056\u0052\u0049"));
_bafeg {for _ ,_acda :=range _ggcf .Keys (){if _cedg ,_caca :=_fdb .GetDict (_ggcf .Get (_acda ));_caca {_cgfg [_gga .ToUpper (_acda .String ())]=_bgbc (_cedg );};};};return &DSS {Certs :_dbdg (_ddcgd .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_dbdg (_ddcgd .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_dbdg (_ddcgd .Get ("\u0043\u0052\u004c\u0073")),VRI :_cgfg ,_bcfcg :_ccdg },nil ;
};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_ebaed *PdfFont )ToPdfObject ()_fdb .PdfObject {if _ebaed ._babcd ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fdb .MakeNull ();
};return _ebaed ._babcd .ToPdfObject ();};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fcggab *PdfPageResources )GetExtGState (keyName _fdb .PdfObjectName )(_fdb .PdfObject ,bool ){if _fcggab .ExtGState ==nil {return nil ,false ;};_ccba ,_ccee :=_fdb .TraceToDirectObject (_fcggab .ExtGState ).(*_fdb .PdfObjectDictionary );if !_ccee {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcggab .ExtGState );
return nil ,false ;};if _cebee :=_ccba .Get (keyName );_cebee !=nil {return _cebee ,true ;};return nil ,false ;};func (_cdgc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_bbgdd *PdfReader )GetCatalogMarkInfo ()(_fdb .PdfObject ,bool ){if _bbgdd ._adefa ==nil {return nil ,false ;};_dbee :=_bbgdd ._adefa .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _dbee ,_dbee !=nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dddee *PdfColorspaceSpecialSeparation )ToPdfObject ()_fdb .PdfObject {_edcfb :=_fdb .MakeArray (_fdb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_edcfb .Append (_dddee .ColorantName );_edcfb .Append (_dddee .AlternateSpace .ToPdfObject ());
_edcfb .Append (_dddee .TintTransform .ToPdfObject ());if _dddee ._abccb !=nil {_dddee ._abccb .PdfObject =_edcfb ;return _dddee ._abccb ;};return _edcfb ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fbbcdb *PdfWriter )SetNameDictionary (names _fdb .PdfObject )error {if names ==nil {return nil ;};_aa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fbbcdb ._gbged .Set ("\u004e\u0061\u006de\u0073",names );return _fbbcdb .addObjects (names );};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_bbfc *_fdb .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gfff *PdfColorspaceSpecialPattern )ToPdfObject ()_fdb .PdfObject {if _gfff .UnderlyingCS ==nil {return _fdb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_fcdc :=_fdb .MakeArray (_fdb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_fcdc .Append (_gfff .UnderlyingCS .ToPdfObject ());if _gfff ._fgbd !=nil {_gfff ._fgbd .PdfObject =_fcdc ;return _gfff ._fgbd ;};return _fcdc ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_cccf :map[_fdb .PdfObject ]struct{}{},_ggdg :_ebcbe (),_dbbec :_fdb .NewParserFromString (txt )};};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fegbdd *PdfPageResources )HasXObjectByName (keyName _fdb .PdfObjectName )bool {_defec ,_ :=_fegbdd .GetXObjectByName (keyName );return _defec !=nil ;};func _ebcbe ()*modelManager {_fgdab :=modelManager {};_fgdab ._dbed =map[PdfModel ]_fdb .PdfObject {};
_fgdab ._abfff =map[_fdb .PdfObject ]PdfModel {};return &_fgdab ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fdb .PdfObject ;BS _fdb .PdfObject ;LE _fdb .PdfObject ;IC _fdb .PdfObject ;LL _fdb .PdfObject ;LLE _fdb .PdfObject ;Cap _fdb .PdfObject ;IT _fdb .PdfObject ;LLO _fdb .PdfObject ;CP _fdb .PdfObject ;
Measure _fdb .PdfObject ;CO _fdb .PdfObject ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ebafg *LTV )EnableByName (name string ,extraCerts []*_fa .Certificate )error {_dfdee :=_ebafg ._daba ._abcd .AcroForm ;for _ ,_ebdgc :=range _dfdee .AllFields (){_ffegg ,_ :=_ebdgc .GetContext ().(*PdfFieldSignature );if _ffegg ==nil {continue ;
};if _ebgdd :=_ffegg .PartialName ();_ebgdd !=name {continue ;};return _ebafg .Enable (_ffegg .V ,extraCerts );};return nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_cgbf FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_cgbf .Mask ()&^fl .Mask ())};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gddeb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gddeb ._ffdfg =optimizer };func (_baeff *LTV )getCerts (_acdg []*_fa .Certificate )([][]byte ,error ){_dbcbc :=make ([][]byte ,0,len (_acdg ));for _ ,_geggb :=range _acdg {_dbcbc =append (_dbcbc ,_geggb .Raw );
};return _dbcbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dda *PdfActionImportData )ToPdfObject ()_fdb .PdfObject {_dda .PdfAction .ToPdfObject ();_gac :=_dda ._ae ;_dff :=_gac .PdfObject .(*_fdb .PdfObjectDictionary );_dff .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeImportData )));if _dda .F !=nil {_dff .Set ("\u0046",_dda .F .ToPdfObject ());
};return _gac ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_egbff *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gcdge :=_egbff .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gcdge )> 0;_afcab :=_fdb .NewFlateEncoder ();_aafb :=_fdb .MakeArray ();if wrapContents {_bagdaa ,_ebfba :=_fdb .MakeStream ([]byte ("\u0071\u000a"),_afcab );
if _ebfba !=nil {return _ebfba ;};_aafb .Append (_bagdaa );};_aafb .Append (_gcdge ...);if wrapContents {_dgcgbe ,_afaf :=_fdb .MakeStream ([]byte ("\u000a\u0051\u000a"),_afcab );if _afaf !=nil {return _afaf ;};_aafb .Append (_dgcgbe );};_gaccb ,_gcbd :=_fdb .MakeStream (cs ,_afcab );
if _gcbd !=nil {return _gcbd ;};_aafb .Append (_gaccb );_egbff .Contents =_aafb ;return nil ;};func _faff (_bgadd []byte )(_bgca ,_efccba string ,_ggdc error ){_aa .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bgadd ));
_cccag :=_bdbcag .FindIndex (_bgadd );if _cccag ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_fdb .ErrTypeError ;};_cbaa :=_cccag [1];_abdd :=_gga .Index (string (_bgadd [_cbaa :]),_ebbf );if _abdd < 0{_bgca =string (_bgadd [_cbaa :]);return _bgca ,"",nil ;};_gefc :=_cbaa +_abdd ;_bgca =string (_bgadd [_cbaa :_gefc ]);_eeef :=_gefc ;
_abdd =_gga .Index (string (_bgadd [_eeef :]),_cdgd );if _abdd < 0{_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggdc );
return "","",_fdb .ErrTypeError ;};_bbbfb :=_eeef +_abdd ;_efccba =string (_bgadd [_eeef :_bbbfb ]);return _bgca ,_efccba ,nil ;};func _bfdb (_feeb *_fdb .PdfObjectDictionary )(*PdfFieldText ,error ){_cffe :=&PdfFieldText {};_cffe .DA ,_ =_fdb .GetString (_feeb .Get ("\u0044\u0041"));
_cffe .Q ,_ =_fdb .GetInt (_feeb .Get ("\u0051"));_cffe .DS ,_ =_fdb .GetString (_feeb .Get ("\u0044\u0053"));_cffe .RV =_feeb .Get ("\u0052\u0056");_cffe .MaxLen ,_ =_fdb .GetInt (_feeb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _cffe ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_abdc *PdfAnnotationStamp )ToPdfObject ()_fdb .PdfObject {_abdc .PdfAnnotation .ToPdfObject ();_fdfag :=_abdc ._cgbd ;_deca :=_fdfag .PdfObject .(*_fdb .PdfObjectDictionary );_abdc .PdfAnnotationMarkup .appendToPdfDictionary (_deca );_deca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0053\u0074\u0061m\u0070"));
_deca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abdc .Name );return _fdfag ;};func (_bdccd *PdfWriter )checkCrossReferenceStream ()bool {_ggeg :=_bdccd ._bgagb .Major > 1||(_bdccd ._bgagb .Major ==1&&_bdccd ._bgagb .Minor > 4);if _bdccd ._baedg !=nil {_ggeg =*_bdccd ._baedg ;
};return _ggeg ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_eedf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_acdfe :=PdfColorCalGray (grayVal );return &_acdfe ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dacba .Lock ();defer _dacba .Unlock ();_ecfaa =subject };

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func (_bbfde *LTV )validateSig (_edee *PdfSignature )error {if _edee ==nil ||_edee .Contents ==nil ||len (_edee .Contents .Bytes ())==0{return _d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_edee );
};return nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_fdbdd :_fdb .MakeIndirectObject (_fdb .MakeDict ())};};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fdb .PdfObjectInteger ;BitsPerComponent *_fdb .PdfObjectInteger ;BitsPerFlag *_fdb .PdfObjectInteger ;Decode *_fdb .PdfObjectArray ;Function []PdfFunction ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_cdagg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fdfg :=_cd .NewReader (img .getBase ());_efdfa :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._dcaf ,img ._gcgd );
_acbd :=_cd .NewWriter (_efdfa );_fcdce :=_fag .Pow (2,float64 (img .BitsPerComponent ))-1;_efge :=_cdagg .GetNumComponents ();_ddcf :=make ([]uint32 ,_efge );_bacbc :=make ([]float64 ,_efge );for {_ebad :=_fdfg .ReadSamples (_ddcf );if _ebad ==_ca .EOF {break ;
}else if _ebad !=nil {return img ,_ebad ;};for _fgadg :=0;_fgadg < _efge ;_fgadg ++{_bdeaf :=float64 (_ddcf [_fgadg ])/_fcdce ;_bacbc [_fgadg ]=_bdeaf ;};_geed ,_ebad :=_cdagg .TintTransform .Evaluate (_bacbc );if _ebad !=nil {return img ,_ebad ;};for _ ,_cdfa :=range _geed {_cdfa =_fag .Min (_fag .Max (0,_cdfa ),1.0);
if _ebad =_acbd .WriteSample (uint32 (_cdfa *_fcdce ));_ebad !=nil {return img ,_ebad ;};};};return _cdagg .AlternateSpace .ImageToRGB (_cdbdc (&_efdfa ));};func _fafe (_gadc _fdb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_gcbg :=NewPdfColorspaceSpecialIndexed ();
if _ddgf ,_bfcf :=_gadc .(*_fdb .PdfIndirectObject );_bfcf {_gcbg ._gcea =_ddgf ;};_gadc =_fdb .TraceToDirectObject (_gadc );_ebfc ,_ebeaf :=_gadc .(*_fdb .PdfObjectArray );if !_ebeaf {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ebfc .Len ()!=4{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gadc =_ebfc .Get (0);
_fggc ,_ebeaf :=_gadc .(*_fdb .PdfObjectName );if !_ebeaf {return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_fggc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gadc =_ebfc .Get (1);_cage ,_cdcg :=DetermineColorspaceNameFromPdfObject (_gadc );if _cdcg !=nil {return nil ,_cdcg ;};if _cage =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_cage =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aa .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_cage );
return nil ,_abcg ;};_cdeb ,_cdcg :=NewPdfColorspaceFromPdfObject (_gadc );if _cdcg !=nil {return nil ,_cdcg ;};_gcbg .Base =_cdeb ;_gadc =_ebfc .Get (2);_ddfa ,_cdcg :=_fdb .GetNumberAsInt64 (_gadc );if _cdcg !=nil {return nil ,_cdcg ;};if _ddfa > 255{return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_gcbg .HiVal =int (_ddfa );_gadc =_ebfc .Get (3);_gcbg .Lookup =_gadc ;_gadc =_fdb .TraceToDirectObject (_gadc );var _faccg []byte ;if _agcac ,_cccca :=_gadc .(*_fdb .PdfObjectString );_cccca {_faccg =_agcac .Bytes ();_aa .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_faccg );
}else if _abgd ,_bcfe :=_gadc .(*_fdb .PdfObjectStream );_bcfe {_aa .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gadc .String ());_aa .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_abgd .Stream ),_abgd .Stream );
_caad ,_cbd :=_fdb .DecodeStream (_abgd );if _cbd !=nil {return nil ,_cbd ;};_aa .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_caad ),_caad );_faccg =_caad ;}else {_aa .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gadc );
return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_faccg )< _gcbg .Base .GetNumComponents ()*(_gcbg .HiVal +1){_aa .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_aa .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_faccg ),_gcbg .Base .GetNumComponents (),_gcbg .HiVal );
}else {_faccg =_faccg [:_gcbg .Base .GetNumComponents ()*(_gcbg .HiVal +1)];};_gcbg ._gcef =_faccg ;return _gcbg ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_eea :=NewPdfAnnotation ();_aagg :=&PdfAnnotationProjection {};_aagg .PdfAnnotation =_eea ;_aagg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eea .SetContext (_aagg );return _aagg ;};func (_feeef *PdfReader )newPdfOutlineItemFromIndirectObject (_bdeae *_fdb .PdfIndirectObject )(*PdfOutlineItem ,error ){_eeeg ,_bcaaa :=_bdeae .PdfObject .(*_fdb .PdfObjectDictionary );
if !_bcaaa {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bcafc :=NewPdfOutlineItem ();_gbfga :=_eeeg .Get ("\u0054\u0069\u0074l\u0065");
if _gbfga ==nil {return nil ,_d .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_faeag ,_acebe :=_fdb .GetString (_gbfga );if !_acebe {return nil ,_d .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_gbfga );};_bcafc .Title =_faeag ;if _babgg :=_eeeg .Get ("\u0043\u006f\u0075n\u0074");
_babgg !=nil {_geca ,_fbac :=_babgg .(*_fdb .PdfObjectInteger );if !_fbac {return nil ,_d .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_babgg );};_ffedg :=int64 (*_geca );
_bcafc .Count =&_ffedg ;};if _cgca :=_eeeg .Get ("\u0044\u0065\u0073\u0074");_cgca !=nil {_bcafc .Dest =_fdb .ResolveReference (_cgca );if !_feeef ._fbgeb {_fbfb :=_feeef .traverseObjectData (_bcafc .Dest );if _fbfb !=nil {return nil ,_fbfb ;};};};if _cdfgf :=_eeeg .Get ("\u0041");
_cdfgf !=nil {_bcafc .A =_fdb .ResolveReference (_cdfgf );if !_feeef ._fbgeb {_ecff :=_feeef .traverseObjectData (_bcafc .A );if _ecff !=nil {return nil ,_ecff ;};};};if _fdccb :=_eeeg .Get ("\u0053\u0045");_fdccb !=nil {_bcafc .SE =nil ;};if _cfcbb :=_eeeg .Get ("\u0043");
_cfcbb !=nil {_bcafc .C =_fdb .ResolveReference (_cfcbb );};if _cgdad :=_eeeg .Get ("\u0046");_cgdad !=nil {_bcafc .F =_fdb .ResolveReference (_cgdad );};return _bcafc ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_ffebg *PdfShadingPattern )ToPdfObject ()_fdb .PdfObject {_ffebg .PdfPattern .ToPdfObject ();_dadfa :=_ffebg .getDict ();if _ffebg .Shading !=nil {_dadfa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ffebg .Shading .ToPdfObject ());};if _ffebg .Matrix !=nil {_dadfa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ffebg .Matrix );
};if _ffebg .ExtGState !=nil {_dadfa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ffebg .ExtGState );};return _ffebg ._adccf ;};func _geadc (_cgec *_fdb .PdfObjectDictionary ,_egda *fontCommon )(*pdfCIDFontType2 ,error ){if _egda ._eaae !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_egda );
return nil ,_fdb .ErrRangeError ;};_faab :=_bcgc (_egda );_efab ,_fgbee :=_fdb .GetDict (_cgec .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fgbee {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_egda );
return nil ,ErrRequiredAttributeMissing ;};_faab .CIDSystemInfo =_efab ;_faab .DW =_cgec .Get ("\u0044\u0057");_faab .W =_cgec .Get ("\u0057");_faab .DW2 =_cgec .Get ("\u0044\u0057\u0032");_faab .W2 =_cgec .Get ("\u0057\u0032");_faab .CIDToGIDMap =_cgec .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_faab ._afagc =1000.0;if _baeef ,_dfgge :=_fdb .GetNumberAsFloat (_faab .DW );_dfgge ==nil {_faab ._afagc =_baeef ;};_abbeb ,_afdb :=_dffa (_faab .W );if _afdb !=nil {return nil ,_afdb ;};if _abbeb ==nil {_abbeb =map[_eb .CharCode ]float64 {};};_faab ._daabe =_abbeb ;
return _faab ,nil ;};func _fbbba (_edddd string )(string ,error ){var _cbdfe _de .Buffer ;_cbdfe .WriteString (_edddd );_fbfcg :=make ([]byte ,8+16);_faae :=_ag .Now ().UTC ().UnixNano ();_f .BigEndian .PutUint64 (_fbfcg ,uint64 (_faae ));_ ,_accegb :=_bg .Read (_fbfcg [8:]);
if _accegb !=nil {return "",_accegb ;};_cbdfe .WriteString (_e .EncodeToString (_fbfcg ));return _cbdfe .String (),nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bbff :=NewPdfAnnotation ();_egcd :=&PdfAnnotationTrapNet {};_egcd .PdfAnnotation =_bbff ;_bbff .SetContext (_egcd );return _egcd ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_abbe :=NewPdfAction ();_acfe :=&PdfActionJavaScript {};_acfe .PdfAction =_abbe ;_abbe .SetContext (_acfe );return _acfe ;};

// String returns a string that describes `base`.
func (_gadbg fontCommon )String ()string {return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gadbg .coreString ());};func (_dccfcb *PdfWriter )setCatalogVersion (){_dccfcb ._gbged .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fdb .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_dccfcb ._bgagb .Major ,_dccfcb ._bgagb .Minor )));
};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_eab *PdfReader )newPdfAnnotationFreeTextFromDict (_gfb *_fdb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fdfa :=PdfAnnotationFreeText {};_bgdg ,_gaad :=_eab .newPdfAnnotationMarkupFromDict (_gfb );
if _gaad !=nil {return nil ,_gaad ;};_fdfa .PdfAnnotationMarkup =_bgdg ;_fdfa .DA =_gfb .Get ("\u0044\u0041");_fdfa .Q =_gfb .Get ("\u0051");_fdfa .RC =_gfb .Get ("\u0052\u0043");_fdfa .DS =_gfb .Get ("\u0044\u0053");_fdfa .CL =_gfb .Get ("\u0043\u004c");
_fdfa .IT =_gfb .Get ("\u0049\u0054");_fdfa .BE =_gfb .Get ("\u0042\u0045");_fdfa .RD =_gfb .Get ("\u0052\u0044");_fdfa .BS =_gfb .Get ("\u0042\u0053");_fdfa .LE =_gfb .Get ("\u004c\u0045");return &_fdfa ,nil ;};func _fgbca (_begc _fdb .PdfObject )(*PdfPattern ,error ){_fgbbbc :=&PdfPattern {};
var _dgcbe *_fdb .PdfObjectDictionary ;if _affbb ,_eafb :=_fdb .GetIndirect (_begc );_eafb {_fgbbbc ._adccf =_affbb ;_gbda ,_gbaf :=_affbb .PdfObject .(*_fdb .PdfObjectDictionary );if !_gbaf {_aa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_affbb .PdfObject );
return nil ,_fdb .ErrTypeError ;};_dgcbe =_gbda ;}else if _gccaf ,_fagd :=_fdb .GetStream (_begc );_fagd {_fgbbbc ._adccf =_gccaf ;_dgcbe =_gccaf .PdfObjectDictionary ;}else {_aa .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_begc );
return nil ,_fdb .ErrTypeError ;};_eedgf :=_dgcbe .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _eedgf ==nil {_aa .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eagc ,_ggaed :=_eedgf .(*_fdb .PdfObjectInteger );if !_ggaed {_aa .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eedgf );
return nil ,_fdb .ErrTypeError ;};if *_eagc !=1&&*_eagc !=2{_aa .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_eagc );return nil ,_fdb .ErrRangeError ;
};_fgbbbc .PatternType =int64 (*_eagc );switch *_eagc {case 1:_cacdb ,_gcbgb :=_eeea (_dgcbe );if _gcbgb !=nil {return nil ,_gcbgb ;};_cacdb .PdfPattern =_fgbbbc ;_fgbbbc ._edbbc =_cacdb ;return _fgbbbc ,nil ;case 2:_bffec ,_fdgb :=_faca (_dgcbe );if _fdgb !=nil {return nil ,_fdgb ;
};_bffec .PdfPattern =_fgbbbc ;_fgbbbc ._edbbc =_bffec ;return _fgbbbc ,nil ;};return nil ,_ee .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func _aaeda (_fedcg *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_fedcg }};
func _dffa (_aedaf _fdb .PdfObject )(map[_eb .CharCode ]float64 ,error ){if _aedaf ==nil {return nil ,nil ;};_afbdd ,_acbfa :=_fdb .GetArray (_aedaf );if !_acbfa {return nil ,nil ;};_afgce :=map[_eb .CharCode ]float64 {};_cdcfg :=_afbdd .Len ();for _fgff :=0;
_fgff < _cdcfg -1;_fgff ++{_gbdfg :=_fdb .TraceToDirectObject (_afbdd .Get (_fgff ));_degc ,_babcc :=_fdb .GetIntVal (_gbdfg );if !_babcc {return nil ,_d .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_fgff ,_gbdfg );
};_fgff ++;if _fgff > _cdcfg -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_afbdd );};_fccbe :=_fdb .TraceToDirectObject (_afbdd .Get (_fgff ));
switch _fccbe .(type ){case *_fdb .PdfObjectArray :_gdafb ,_ :=_fdb .GetArray (_fccbe );if _fgfb ,_agaf :=_gdafb .ToFloat64Array ();_agaf ==nil {for _becf :=0;_becf < len (_fgfb );_becf ++{_afgce [_eb .CharCode (_degc +_becf )]=_fgfb [_becf ];};}else {return nil ,_d .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fgff ,_fccbe );
};case *_fdb .PdfObjectInteger :_fecgb ,_bgagg :=_fdb .GetIntVal (_fccbe );if !_bgagg {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fgff ,_fccbe );
};_fgff ++;if _fgff > _cdcfg -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_afbdd );};_babad :=_afbdd .Get (_fgff );_fgaf ,_bafcb :=_fdb .GetNumberAsFloat (_babad );
if _bafcb !=nil {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fgff ,_babad );};for _cgefg :=_degc ;_cgefg <=_fecgb ;
_cgefg ++{_afgce [_eb .CharCode (_cgefg )]=_fgaf ;};default:return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fgff ,_fccbe );
};};return _afgce ,nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_adga *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbfa ,_edcb :=color .(*PdfColorDeviceCMYK );if !_edcb {_aa .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbfe :=_dbfa .C ();_fgag :=_dbfa .M ();_abea :=_dbfa .Y ();_bccf :=_dbfa .K ();_fbfe =_fbfe *(1-_bccf )+_bccf ;_fgag =_fgag *(1-_bccf )+_bccf ;
_abea =_abea *(1-_bccf )+_bccf ;_geaa :=1-_fbfe ;_feec :=1-_fgag ;_babag :=1-_abea ;return NewPdfColorDeviceRGB (_geaa ,_feec ,_babag ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_gada *PdfAnnotationProjection )ToPdfObject ()_fdb .PdfObject {_gada .PdfAnnotation .ToPdfObject ();_beafe :=_gada ._cgbd ;_egdg :=_beafe .PdfObject .(*_fdb .PdfObjectDictionary );_gada .PdfAnnotationMarkup .appendToPdfDictionary (_egdg );return _beafe ;
};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_gabga *Image )ConvertToBinary ()error {if _gabga .ColorComponents ==1&&_gabga .BitsPerComponent ==1{return nil ;};_fcfgf ,_bffg :=_gabga .ToGoImage ();if _bffg !=nil {return _bffg ;};_afagg ,_bffg :=_ff .MonochromeConverter .Convert (_fcfgf );if _bffg !=nil {return _bffg ;
};_gabga .Data =_afagg .Base ().Data ;_gabga ._dcaf ,_bffg =_ff .ScaleAlphaToMonochrome (_gabga ._dcaf ,int (_gabga .Width ),int (_gabga .Height ));if _bffg !=nil {return _bffg ;};_gabga .BitsPerComponent =1;_gabga .ColorComponents =1;_gabga ._gcgd =nil ;
return nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_geaec *PdfReader )Decrypt (password []byte )(bool ,error ){_ggef ,_fgcbgd :=_geaec ._dbbec .Decrypt (password );if _fgcbgd !=nil {return false ,_fgcbgd ;};if !_ggef {return false ,nil ;};_fgcbgd =_geaec .loadStructure ();if _fgcbgd !=nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_fgcbgd );
return false ,_fgcbgd ;};return true ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_deeb *PdfWriter )AddPage (page *PdfPage )error {const _fgbgd ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cgcge (page );_bbbcbb :=page .ToPdfObject ();_aa .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_aa .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_bbbcbb );_cfga ,_gebcd :=_fdb .GetIndirect (_bbbcbb );if !_gebcd {return _ee .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_aa .Log .Trace ("\u0025\u0073",_cfga );_aa .Log .Trace ("\u0025\u0073",_cfga .PdfObject );_gefag ,_gebcd :=_fdb .GetDict (_cfga .PdfObject );if !_gebcd {return _ee .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgdf ,_gebcd :=_fdb .GetName (_gefag .Get ("\u0054\u0079\u0070\u0065"));if !_gebcd {return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_gefag .Get ("\u0054\u0079\u0070\u0065"));
};if _bgdf .String ()!="\u0050\u0061\u0067\u0065"{return _ee .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fdbcc :=[]_fdb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_dcca ,_gdfd :=_fdb .GetIndirect (_gefag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_aa .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_gefag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gdfd );
for _gdfd {_aa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dcca );_dggfc ,_faaaa :=_fdb .GetDict (_dcca .PdfObject );if !_faaaa {return _ee .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cffgc :=range _fdbcc {_aa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cffgc );if _gefag .Get (_cffgc )!=nil {_aa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _afcae :=_dggfc .Get (_cffgc );_afcae !=nil {_aa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cffgc );_gefag .Set (_cffgc ,_afcae );};};_dcca ,_gdfd =_fdb .GetIndirect (_dggfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_aa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dggfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_aa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_gefag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_deeb ._ffacb );_cfga .PdfObject =_gefag ;_dbcdd ,_gebcd :=_fdb .GetDict (_deeb ._ffacb .PdfObject );if !_gebcd {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bfcgd ,_gebcd :=_fdb .GetArray (_dbcdd .Get ("\u004b\u0069\u0064\u0073"));if !_gebcd {return _ee .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bfcgd .Append (_cfga );_deeb ._fdbff [_gefag ]=struct{}{};_ccdae ,_gebcd :=_fdb .GetInt (_dbcdd .Get ("\u0043\u006f\u0075n\u0074"));if !_gebcd {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ccdae =*_ccdae +1;if page ._afgg ==nil {_ccdc :=_bfg .Track (_deeb ._ccddc ,_fgbgd );if _ccdc !=nil {return _ccdc ;};}else {_cbffg :=_bfg .Track (page ._afgg ._afedgg ,_fgbgd );if _cbffg !=nil {return _cbffg ;};};_deeb .addObject (_cfga );_bddeg :=_deeb .addObjects (_gefag );
if _bddeg !=nil {return _bddeg ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cagd *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfca :=vals [0];_efgc :=[]float64 {_gfca };_feg ,_deab :=_cagd .TintTransform .Evaluate (_efgc );
if _deab !=nil {_aa .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_deab );_aa .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cagd .TintTransform );
return nil ,_deab ;};_aa .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_feg ,_cagd .AlternateSpace );
_ggbd ,_deab :=_cagd .AlternateSpace .ColorFromFloats (_feg );if _deab !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_deab );
return nil ,_deab ;};return _ggbd ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_bdecd *PdfPageResources )HasFontByName (keyName _fdb .PdfObjectName )bool {_ ,_geabe :=_bdecd .GetFontByName (keyName );return _geabe ;};type pdfSignDictionary struct{*_fdb .PdfObjectDictionary ;_cdgac *SignatureHandler ;_daadf *PdfSignature ;_bcdcf int64 ;
_defecc int ;_fcggag int ;_fgbdg int ;_ebbfc int ;};

// ToPdfObject implements interface PdfModel.
func (_fda *PdfAction )ToPdfObject ()_fdb .PdfObject {_fdde :=_fda ._ae ;_ggbb :=_fdde .PdfObject .(*_fdb .PdfObjectDictionary );_ggbb .Clear ();_ggbb .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ggbb .SetIfNotNil ("\u0053",_fda .S );
_ggbb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fda .Next );return _fdde ;};

// SetOCProperties sets the optional content properties.
func (_ccbdf *PdfWriter )SetOCProperties (ocProperties _fdb .PdfObject )error {_cegaa :=_ccbdf ._gbged ;if ocProperties !=nil {_aa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_cegaa .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ccbdf .addObjects (ocProperties );};return nil ;};func (_eeff *PdfReader )newPdfAnnotationRedactFromDict (_eedg *_fdb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gdad :=PdfAnnotationRedact {};
_eedd ,_gabb :=_eeff .newPdfAnnotationMarkupFromDict (_eedg );if _gabb !=nil {return nil ,_gabb ;};_gdad .PdfAnnotationMarkup =_eedd ;_gdad .QuadPoints =_eedg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gdad .IC =_eedg .Get ("\u0049\u0043");
_gdad .RO =_eedg .Get ("\u0052\u004f");_gdad .OverlayText =_eedg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_gdad .Repeat =_eedg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gdad .DA =_eedg .Get ("\u0044\u0041");_gdad .Q =_eedg .Get ("\u0051");
return &_gdad ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fdb .PdfObject ;FontFamily _fdb .PdfObject ;FontStretch _fdb .PdfObject ;FontWeight _fdb .PdfObject ;Flags _fdb .PdfObject ;FontBBox _fdb .PdfObject ;ItalicAngle _fdb .PdfObject ;Ascent _fdb .PdfObject ;Descent _fdb .PdfObject ;
Leading _fdb .PdfObject ;CapHeight _fdb .PdfObject ;XHeight _fdb .PdfObject ;StemV _fdb .PdfObject ;StemH _fdb .PdfObject ;AvgWidth _fdb .PdfObject ;MaxWidth _fdb .PdfObject ;MissingWidth _fdb .PdfObject ;FontFile _fdb .PdfObject ;FontFile2 _fdb .PdfObject ;
FontFile3 _fdb .PdfObject ;CharSet _fdb .PdfObject ;_ceac int ;_gbcb float64 ;*fontFile ;_dgcgb *_fc .TtfType ;

// Additional entries for CIDFonts
Style _fdb .PdfObject ;Lang _fdb .PdfObject ;FD _fdb .PdfObject ;CIDSet _fdb .PdfObject ;_daaad *_fdb .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_gegf *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_gfege *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_dgdc :=NewPdfOutlineItem ();_dgdc .Title =_fdb .MakeEncodedString (_gfege .Title ,true );_dgdc .Dest =_gfege .Dest .ToPdfObject ();var _gdfcb []*PdfOutlineItem ;var _febca int64 ;
var _adaf *PdfOutlineItem ;for _ ,_dccfcg :=range _gfege .Entries {_cbbgg ,_agege :=_dccfcg .ToPdfOutlineItem ();_cbbgg .Parent =&_dgdc .PdfOutlineTreeNode ;if _adaf !=nil {_adaf .Next =&_cbbgg .PdfOutlineTreeNode ;_cbbgg .Prev =&_adaf .PdfOutlineTreeNode ;
};_gdfcb =append (_gdfcb ,_cbbgg );_febca +=_agege ;_adaf =_cbbgg ;};_dcfc :=len (_gdfcb );_febca +=int64 (_dcfc );if _dcfc > 0{_dgdc .First =&_gdfcb [0].PdfOutlineTreeNode ;_dgdc .Last =&_gdfcb [_dcfc -1].PdfOutlineTreeNode ;_dgdc .Count =&_febca ;};return _dgdc ,_febca ;
};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_faadb :=NewPdfAnnotation ();_aaac :=&PdfAnnotationWatermark {};_aaac .PdfAnnotation =_faadb ;_faadb .SetContext (_aaac );return _aaac ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_bccfa *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _bccfa .Alternate ==nil {_aa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bccfa .N ==1{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ebde :=NewPdfColorspaceDeviceGray ();return _ebde .ImageToRGB (img );}else if _bccfa .N ==3{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _bccfa .N ==4{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_aagd :=NewPdfColorspaceDeviceCMYK ();return _aagd .ImageToRGB (img );}else {return img ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_aa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bccfa );
_bdba ,_abfc :=_bccfa .Alternate .ImageToRGB (img );_aa .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_aa .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_bdba );
return _bdba ,_abfc ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_bcfcg :_fdb .MakeIndirectObject (_fdb .MakeDict ()),VRI :map[string ]*VRI {}};};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_dgdf *PdfPage )GetRotate ()(int64 ,error ){if _dgdf .Rotate !=nil {return *_dgdf .Rotate ,nil ;};_eacfa :=_dgdf .Parent ;for _eacfa !=nil {_baeba ,_bbbad :=_fdb .GetDict (_eacfa );if !_bbbad {return 0,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _beag :=_baeba .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_beag !=nil {_fcebf ,_eefgf :=_fdb .GetInt (_beag );if !_eefgf {return 0,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _fcebf !=nil {return int64 (*_fcebf ),nil ;
};return 0,_ee .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_eacfa =_baeba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ee .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ga :=NewPdfAction ();_gdf :=&PdfActionGoToE {};_gdf .PdfAction =_ga ;_ga .SetContext (_gdf );return _gdf ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_fgd :=NewPdfAnnotation ();_cbf :=&PdfAnnotationCaret {};_cbf .PdfAnnotation =_fgd ;_cbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgd .SetContext (_cbf );return _cbf ;};

// ToPdfObject implements interface PdfModel.
func (_gag *PdfActionSound )ToPdfObject ()_fdb .PdfObject {_gag .PdfAction .ToPdfObject ();_fgce :=_gag ._ae ;_cae :=_fgce .PdfObject .(*_fdb .PdfObjectDictionary );_cae .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeSound )));_cae .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gag .Sound );
_cae .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gag .Volume );_cae .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gag .Synchronous );_cae .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gag .Repeat );_cae .SetIfNotNil ("\u004d\u0069\u0078",_gag .Mix );
return _fgce ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fc .CharMetrics ;

// R returns the value of the red component of the color.
func (_gdbd *PdfColorDeviceRGB )R ()float64 {return _gdbd [0]};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ecgcd *PdfPage )AppendContentStream (contentStr string )error {_cdfcd ,_efggfc :=_ecgcd .GetContentStreams ();if _efggfc !=nil {return _efggfc ;};if len (_cdfcd )==0{_cdfcd =[]string {contentStr };return _ecgcd .SetContentStreams (_cdfcd ,_fdb .NewFlateEncoder ());
};var _acbdf _de .Buffer ;_acbdf .WriteString (_cdfcd [len (_cdfcd )-1]);_acbdf .WriteString ("\u000a");_acbdf .WriteString (contentStr );_cdfcd [len (_cdfcd )-1]=_acbdf .String ();return _ecgcd .SetContentStreams (_cdfcd ,_fdb .NewFlateEncoder ());};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fdb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_fdb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_ggbdg ,_febbda :=encoder .EncodeBytes (img .Data );
if _febbda !=nil {_aa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_febbda );return nil ,_febbda ;};_eaea :=NewXObjectImage ();_gebae :=img .Width ;_dgeacd :=img .Height ;
_eaea .Width =&_gebae ;_eaea .Height =&_dgeacd ;_fcgcg :=img .BitsPerComponent ;_eaea .BitsPerComponent =&_fcgcg ;_eaea .Filter =encoder ;_eaea .Stream =_ggbdg ;if cs ==nil {if img .ColorComponents ==1{_eaea .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_eaea .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_eaea .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ee .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_eaea .ColorSpace =cs ;};if len (img ._dcaf )!=0{_abfbab :=NewXObjectImage ();
_abfbab .Filter =encoder ;_acebee ,_cbdag :=encoder .EncodeBytes (img ._dcaf );if _cbdag !=nil {_aa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cbdag );
return nil ,_cbdag ;};_abfbab .Stream =_acebee ;_abfbab .BitsPerComponent =_eaea .BitsPerComponent ;_abfbab .Width =&img .Width ;_abfbab .Height =&img .Height ;_abfbab .ColorSpace =NewPdfColorspaceDeviceGray ();_eaea .SMask =_abfbab .ToPdfObject ();}else {_eaea .SMask =xobjIn .SMask ;
_eaea .ImageMask =xobjIn .ImageMask ;if _eaea .ColorSpace .GetNumComponents ()==1{_geggf (_eaea );};};return _eaea ,nil ;};

// GetBorderWidth returns the border style's width.
func (_ebfg *PdfBorderStyle )GetBorderWidth ()float64 {if _ebfg .W ==nil {return 1;};return *_ebfg .W ;};func _cdaff (_bbbde *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bbbde }};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fec :=NewPdfAnnotation ();_dba :=&PdfAnnotationPrinterMark {};_dba .PdfAnnotation =_fec ;_fec .SetContext (_dba );return _dba ;};func (_beeg *LTV )buildCertChain (_ageb ,_bagec []*_fa .Certificate )([]*_fa .Certificate ,map[string ]*_fa .Certificate ,error ){_deec :=map[string ]*_fa .Certificate {};
for _ ,_bedeb :=range _ageb {_deec [_bedeb .Subject .CommonName ]=_bedeb ;};_cacb :=_ageb ;for _ ,_dbbf :=range _bagec {_ddeg :=_dbbf .Subject .CommonName ;if _ ,_cagde :=_deec [_ddeg ];_cagde {continue ;};_deec [_ddeg ]=_dbbf ;_cacb =append (_cacb ,_dbbf );
};if len (_cacb )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ffgca error ;for _ccfb :=_cacb [0];_ccfb !=nil &&!_beeg .CertClient .IsCA (_ccfb );{_begac ,_ceaeg :=_deec [_ccfb .Issuer .CommonName ];if !_ceaeg {if _begac ,_ffgca =_beeg .CertClient .GetIssuer (_ccfb );
_ffgca !=nil {_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ffgca );
break ;};_deec [_ccfb .Issuer .CommonName ]=_begac ;_cacb =append (_cacb ,_begac );};_ccfb =_begac ;};return _cacb ,_deec ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fdb .PdfObject ;Open _fdb .PdfObject ;};

// GetPage returns the PdfPage model for the specified page number.
func (_ggead *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ggead ._dbbec .GetCrypter ()!=nil &&!_ggead ._dbbec .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ggead ._dbged )< pageNumber {return nil ,_ee .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_bgdcd :=pageNumber -1;if _bgdcd < 0{return nil ,_d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cfag :=_ggead .PageList [_bgdcd ];
return _cfag ,nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_cdfb *_fdb .PdfObjectDictionary ;};

// String returns a string representation of the field.
func (_edcba *PdfField )String ()string {if _cabb ,_bebc :=_edcba .ToPdfObject ().(*_fdb .PdfIndirectObject );_bebc {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_edcba ._fega ,_cabb .PdfObject .String ());};return "";};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_cde :=NewPdfAction ();_aad :=&PdfActionRendition {};_aad .PdfAction =_cde ;_cde .SetContext (_aad );return _aad ;};func _adgbe (_cgdaa *_fdb .PdfObjectDictionary ,_caba *fontCommon )(*pdfCIDFontType0 ,error ){if _caba ._eaae !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_caba );
return nil ,_fdb .ErrRangeError ;};_eedcd :=_dcfga (_caba );_edge ,_cdcba :=_fdb .GetDict (_cgdaa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cdcba {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_caba );
return nil ,ErrRequiredAttributeMissing ;};_eedcd .CIDSystemInfo =_edge ;_eedcd .DW =_cgdaa .Get ("\u0044\u0057");_eedcd .W =_cgdaa .Get ("\u0057");_eedcd .DW2 =_cgdaa .Get ("\u0044\u0057\u0032");_eedcd .W2 =_cgdaa .Get ("\u0057\u0032");_eedcd ._gafda =1000.0;
if _effa ,_ceffd :=_fdb .GetNumberAsFloat (_eedcd .DW );_ceffd ==nil {_eedcd ._gafda =_effa ;};_bedeg ,_aeffd :=_dffa (_eedcd .W );if _aeffd !=nil {return nil ,_aeffd ;};if _bedeg ==nil {_bedeg =map[_eb .CharCode ]float64 {};};_eedcd ._aaab =_bedeg ;return _eedcd ,nil ;
};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_ffege *PdfField )ToPdfObject ()_fdb .PdfObject {_gfed :=_ffege ._gdgea ;_baeeg :=_gfed .PdfObject .(*_fdb .PdfObjectDictionary );_effg :=_fdb .MakeArray ();for _ ,_caecf :=range _ffege .Kids {_effg .Append (_caecf .ToPdfObject ());};for _ ,_dfeb :=range _ffege .Annotations {if _dfeb ._cgbd !=_ffege ._gdgea {_effg .Append (_dfeb .GetContext ().ToPdfObject ());
};};if _ffege .Parent !=nil {_baeeg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffege .Parent .GetContainingPdfObject ());};if _effg .Len ()> 0{_baeeg .Set ("\u004b\u0069\u0064\u0073",_effg );};_baeeg .SetIfNotNil ("\u0046\u0054",_ffege .FT );
_baeeg .SetIfNotNil ("\u0054",_ffege .T );_baeeg .SetIfNotNil ("\u0054\u0055",_ffege .TU );_baeeg .SetIfNotNil ("\u0054\u004d",_ffege .TM );_baeeg .SetIfNotNil ("\u0046\u0066",_ffege .Ff );_baeeg .SetIfNotNil ("\u0056",_ffege .V );_baeeg .SetIfNotNil ("\u0044\u0056",_ffege .DV );
_baeeg .SetIfNotNil ("\u0041\u0041",_ffege .AA );if _ffege .VariableText !=nil {_baeeg .SetIfNotNil ("\u0044\u0041",_ffege .VariableText .DA );_baeeg .SetIfNotNil ("\u0051",_ffege .VariableText .Q );_baeeg .SetIfNotNil ("\u0044\u0053",_ffege .VariableText .DS );
_baeeg .SetIfNotNil ("\u0052\u0056",_ffege .VariableText .RV );};return _gfed ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fdb .PdfObject ;Mac _fdb .PdfObject ;Unix _fdb .PdfObject ;NewWindow _fdb .PdfObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ffga *PdfOutline )ToPdfObject ()_fdb .PdfObject {_aebc :=_ffga ._edgb ;_fgbbb :=_aebc .PdfObject .(*_fdb .PdfObjectDictionary );_fgbbb .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ffga .First !=nil {_fgbbb .Set ("\u0046\u0069\u0072s\u0074",_ffga .First .ToPdfObject ());
};if _ffga .Last !=nil {_fgbbb .Set ("\u004c\u0061\u0073\u0074",_ffga .Last .GetContext ().GetContainingPdfObject ());};if _ffga .Parent !=nil {_fgbbb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffga .Parent .GetContext ().GetContainingPdfObject ());
};if _ffga .Count !=nil {_fgbbb .Set ("\u0043\u006f\u0075n\u0074",_fdb .MakeInteger (*_ffga .Count ));};return _aebc ;};

// Encoder returns the font's text encoder.
func (_ggfa pdfFontType0 )Encoder ()_eb .TextEncoder {return _ggfa ._beaaf };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gaedbe pdfCIDFontType2 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){_cdfc ,_fgcaf :=_gaedbe ._dadbc [r ];if !_fgcaf {_bada ,_fbgbcg :=_fdb .GetInt (_gaedbe .DW );if !_fbgbcg {return _fc .CharMetrics {},false ;};_cdfc =int (*_bada );};return _fc .CharMetrics {Wx :float64 (_cdfc )},true ;
};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_geeg ,_aebfg :=_fgc .Open (filePath );if _aebfg !=nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aebfg );
return nil ,_aebfg ;};defer _geeg .Close ();return NewCompositePdfFontFromTTF (_geeg );};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject converts the font to a PDF representation.
func (_bdbag *pdfFontType0 )ToPdfObject ()_fdb .PdfObject {if _bdbag ._eeged ==nil {_bdbag ._eeged =&_fdb .PdfIndirectObject {};};_ggdf :=_bdbag .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bdbag ._eeged .PdfObject =_ggdf ;if _bdbag .Encoding !=nil {_ggdf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bdbag .Encoding );
}else if _bdbag ._beaaf !=nil {_ggdf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bdbag ._beaaf .ToPdfObject ());};if _bdbag .DescendantFont !=nil {_ggdf .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fdb .MakeArray (_bdbag .DescendantFont .ToPdfObject ()));
};return _bdbag ._eeged ;};

// ToPdfObject returns the PDF representation of the function.
func (_ebeed *PdfFunctionType0 )ToPdfObject ()_fdb .PdfObject {if _ebeed ._cgaea ==nil {_ebeed ._cgaea =&_fdb .PdfObjectStream {};};_efdda :=_fdb .MakeDict ();_efdda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fdb .MakeInteger (0));
_gbdgc :=&_fdb .PdfObjectArray {};for _ ,_fabc :=range _ebeed .Domain {_gbdgc .Append (_fdb .MakeFloat (_fabc ));};_efdda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbdgc );_ebcgf :=&_fdb .PdfObjectArray {};for _ ,_cdggd :=range _ebeed .Range {_ebcgf .Append (_fdb .MakeFloat (_cdggd ));
};_efdda .Set ("\u0052\u0061\u006eg\u0065",_ebcgf );_bggfg :=&_fdb .PdfObjectArray {};for _ ,_gdaa :=range _ebeed .Size {_bggfg .Append (_fdb .MakeInteger (int64 (_gdaa )));};_efdda .Set ("\u0053\u0069\u007a\u0065",_bggfg );_efdda .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fdb .MakeInteger (int64 (_ebeed .BitsPerSample )));
if _ebeed .Order !=1{_efdda .Set ("\u004f\u0072\u0064e\u0072",_fdb .MakeInteger (int64 (_ebeed .Order )));};_efdda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_ebeed ._affac ))));_ebeed ._cgaea .Stream =_ebeed ._affac ;_ebeed ._cgaea .PdfObjectDictionary =_efdda ;
return _ebeed ._cgaea ;};

// HasXObjectByName checks if has XObject resource by name.
func (_gdaae *PdfPage )HasXObjectByName (name _fdb .PdfObjectName )bool {_fbdag ,_fedaa :=_gdaae .Resources .XObject .(*_fdb .PdfObjectDictionary );if !_fedaa {return false ;};if _gcecd :=_fbdag .Get (name );_gcecd !=nil {return true ;};return false ;};


// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_agcege *PdfWriter )SetCatalogMetadata (meta _fdb .PdfObject )error {if meta ==nil {_agcege ._gbged .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_gaece ,_gcaba :=_fdb .GetStream (meta );if !_gcaba {return _ee .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_agcege .addObject (_gaece );_agcege ._gbged .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gaece );return nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_caed *PdfTilingPattern )SetContentStream (content []byte ,encoder _fdb .StreamEncoder )error {_afgee ,_dfgbg :=_caed ._adccf .(*_fdb .PdfObjectStream );if !_dfgbg {_aa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caed ._adccf );
return _fdb .ErrTypeError ;};if encoder ==nil {encoder =_fdb .NewRawEncoder ();};_dacf :=_afgee .PdfObjectDictionary ;_ddagb :=encoder .MakeStreamDict ();_dacf .Merge (_ddagb );_cgefd ,_cddgaa :=encoder .EncodeBytes (content );if _cddgaa !=nil {return _cddgaa ;
};_dacf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_cgefd ))));_afgee .Stream =_cgefd ;return nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ca .ReadSeeker )(*PdfReader ,error ){const _ccbcf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _fgagf (rs ,&ReaderOpts {},false ,_ccbcf );};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cabdd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cabdd ._bcde ==nil {_cabdd .GetAnnotations ();};_cabdd ._bcde =append (_cabdd ._bcde ,annot );};func (_dace *PdfWriter )writeString (_dbfd string ){if _dace ._abgbd !=nil {return ;};_ccaca ,_edfg :=_dace ._bddce .WriteString (_dbfd );
_dace ._cbgbba +=int64 (_ccaca );_dace ._abgbd =_edfg ;};func (_dbc *PdfAppender )mergeResources (_cadc ,_feag _fdb .PdfObject ,_fbgc map[_fdb .PdfObjectName ]_fdb .PdfObjectName )_fdb .PdfObject {if _feag ==nil &&_cadc ==nil {return nil ;};if _feag ==nil {return _cadc ;
};_eefac ,_ceea :=_fdb .GetDict (_feag );if !_ceea {return _cadc ;};if _cadc ==nil {_cgfd :=_fdb .MakeDict ();_cgfd .Merge (_eefac );return _feag ;};_dbag ,_ceea :=_fdb .GetDict (_cadc );if !_ceea {_aa .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dbag =_fdb .MakeDict ();};for _ ,_dfbd :=range _eefac .Keys (){if _ddefb ,_eeca :=_fbgc [_dfbd ];_eeca {_dbag .Set (_ddefb ,_eefac .Get (_dfbd ));}else {_dbag .Set (_dfbd ,_eefac .Get (_dfbd ));};};return _dbag ;};

// GetOutlineTree returns the outline tree.
func (_becff *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _becff ._fgaaa };

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dcfdgf *PdfWriter )SetPageLabels (pageLabels _fdb .PdfObject )error {if pageLabels ==nil {return nil ;};_aa .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_dcfdgf ._gbged .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _dcfdgf .addObjects (pageLabels );};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fbgaf *PdfFieldButton )ToPdfObject ()_fdb .PdfObject {_fbgaf .PdfField .ToPdfObject ();_gecg :=_fbgaf ._gdgea ;_bgbb :=_gecg .PdfObject .(*_fdb .PdfObjectDictionary );_bgbb .Set ("\u0046\u0054",_fdb .MakeName ("\u0042\u0074\u006e"));if _fbgaf .Opt !=nil {_bgbb .Set ("\u004f\u0070\u0074",_fbgaf .Opt );
};return _gecg ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fdb .PdfObject ;MK _fdb .PdfObject ;A _fdb .PdfObject ;AA _fdb .PdfObject ;BS _fdb .PdfObject ;Parent _fdb .PdfObject ;_ccg *PdfField ;_fcded bool ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_dccff *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dccff .Base ==nil {return nil ,_ee .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dccff .Base .ColorToRGB (color );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_bcfcg *_fdb .PdfIndirectObject ;Certs []*_fdb .PdfObjectStream ;OCSPs []*_fdb .PdfObjectStream ;CRLs []*_fdb .PdfObjectStream ;VRI map[string ]*VRI ;_dbdd map[string ]*_fdb .PdfObjectStream ;_cebea map[string ]*_fdb .PdfObjectStream ;_aeba map[string ]*_fdb .PdfObjectStream ;
};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fdb .PdfObject ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_abe *PdfAppender )Write (w _ca .Writer )error {if _abe ._fed {return _ee .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_gfeg :=NewPdfWriter ();_ddgd ,_cdcd :=_fdb .GetDict (_gfeg ._ffacb );if !_cdcd {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_abeb ,_cdcd :=_ddgd .Get ("\u004b\u0069\u0064\u0073").(*_fdb .PdfObjectArray );if !_cdcd {return _ee .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_edcd ,_cdcd :=_ddgd .Get ("\u0043\u006f\u0075n\u0074").(*_fdb .PdfObjectInteger );if !_cdcd {return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_edae :=_abe ._abcd ._dbbec ;_dcbe :=_edae .GetTrailer ();if _dcbe ==nil {return _ee .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_egea ,_cdcd :=_fdb .GetIndirect (_dcbe .Get ("\u0052\u006f\u006f\u0074"));
if !_cdcd {return _ee .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fdda ,_cdcd :=_fdb .GetDict (_egea );if !_cdcd {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_egea ,*_dcbe );
return _ee .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_fgdd :=range _fdda .Keys (){if _gfeg ._gbged .Get (_fgdd )==nil {_caag :=_fdda .Get (_fgdd );_gfeg ._gbged .Set (_fgdd ,_caag );};};if _abe ._ebbc !=nil {_gfeg ._gbged .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_abe ._ebbc .ToPdfObject ());
_abe .updateObjectsDeep (_abe ._ebbc .ToPdfObject (),nil );};if _abe ._bddg !=nil {_abe .updateObjectsDeep (_abe ._bddg .ToPdfObject (),nil );_gfeg ._gbged .Set ("\u0044\u0053\u0053",_abe ._bddg .GetContainingPdfObject ());};if _abe ._ggd !=nil {_gfeg ._gbged .Set ("\u0050\u0065\u0072m\u0073",_abe ._ggd .ToPdfObject ());
_abe .updateObjectsDeep (_abe ._ggd .ToPdfObject (),nil );};if _gfeg ._bgagb .Major < 2{_gfeg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_gfeg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _eba ,_dcaef :=_fdb .GetDict (_dcbe .Get ("\u0049\u006e\u0066\u006f"));
_dcaef {if _ddbf ,_bebg :=_fdb .GetDict (_gfeg ._fecbc );_bebg {for _ ,_aec :=range _eba .Keys (){if _ddbf .Get (_aec )==nil {_ddbf .Set (_aec ,_eba .Get (_aec ));};};};};if _abe ._afbg !=nil {_gfeg ._fecbc =_fdb .MakeIndirectObject (_abe ._afbg .ToPdfObject ());
};_abe .addNewObject (_gfeg ._fecbc );_abe .addNewObject (_gfeg ._edda );_gcbc :=false ;if len (_abe ._abcd .PageList )!=len (_abe ._fdagd ){_gcbc =true ;}else {for _feee :=range _abe ._abcd .PageList {switch {case _abe ._fdagd [_feee ]==_abe ._abcd .PageList [_feee ]:case _abe ._fdagd [_feee ]==_abe .Reader .PageList [_feee ]:default:_gcbc =true ;
};if _gcbc {break ;};};};if _gcbc {_abe .updateObjectsDeep (_gfeg ._ffacb ,nil );}else {_abe ._fgde [_gfeg ._ffacb ]=struct{}{};};_gfeg ._ffacb .ObjectNumber =_abe .Reader ._gbed .ObjectNumber ;_abe ._eaa [_gfeg ._ffacb ]=_abe .Reader ._gbed .ObjectNumber ;
_dgcd :=[]_fdb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_aeee :=range _abe ._fdagd {_fbgda :=_aeee .ToPdfObject ();
*_edcd =*_edcd +1;if _acgc ,_ccge :=_fbgda .(*_fdb .PdfIndirectObject );_ccge &&_acgc .GetParser ()==_abe ._abcd ._dbbec {_abeb .Append (&_acgc .PdfObjectReference );continue ;};if _gebb ,_bafe :=_fdb .GetDict (_fbgda );_bafe {_aga ,_afed :=_gebb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fdb .PdfIndirectObject );
for _afed {_aa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aga );_efeb ,_dabd :=_aga .PdfObject .(*_fdb .PdfObjectDictionary );if !_dabd {return _ee .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_egcb :=range _dgcd {_aa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egcb );if _gebb .Get (_egcb )!=nil {_aa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _febd :=_efeb .Get (_egcb );_febd !=nil {_aa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egcb );_gebb .Set (_egcb ,_febd );};};_aga ,_afed =_efeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fdb .PdfIndirectObject );
_aa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_efeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gebb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfeg ._ffacb );};_abe .updateObjectsDeep (_fbgda ,nil );
_abeb .Append (_fbgda );};if _ ,_egcdd :=_abe ._dfe .Seek (0,_ca .SeekStart );_egcdd !=nil {return _egcdd ;};_adgb :=make (map[SignatureHandler ]_ca .Writer );_bagb :=_fdb .MakeArray ();for _ ,_fagfg :=range _abe ._gdgb {if _adag ,_fbga :=_fdb .GetIndirect (_fagfg );
_fbga {if _cebe ,_ddff :=_adag .PdfObject .(*pdfSignDictionary );_ddff {_eag :=*_cebe ._cdgac ;var _gdbf error ;_adgb [_eag ],_gdbf =_eag .NewDigest (_cebe ._daadf );if _gdbf !=nil {return _gdbf ;};_bagb .Append (_fdb .MakeInteger (0xfffff),_fdb .MakeInteger (0xfffff));
};};};if _bagb .Len ()> 0{_bagb .Append (_fdb .MakeInteger (0xfffff),_fdb .MakeInteger (0xfffff));};for _ ,_bbeda :=range _abe ._gdgb {if _decaa ,_ffac :=_fdb .GetIndirect (_bbeda );_ffac {if _gadf ,_eegd :=_decaa .PdfObject .(*pdfSignDictionary );_eegd {_gadf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bagb );
};};};_egbf :=len (_adgb )> 0;var _geee _ca .Reader =_abe ._dfe ;if _egbf {_ebcg :=make ([]_ca .Writer ,0,len (_adgb ));for _ ,_fgbcb :=range _adgb {_ebcg =append (_ebcg ,_fgbcb );};_geee =_ca .TeeReader (_abe ._dfe ,_ca .MultiWriter (_ebcg ...));};_acgca ,_dbad :=_ca .Copy (w ,_geee );
if _dbad !=nil {return _dbad ;};if len (_abe ._gdgb )==0{return nil ;};_gfeg ._cffde =_acgca ;_gfeg .ObjNumOffset =_abe ._edfd ;_gfeg ._ddfef =true ;_gfeg ._aaeba =_abe ._defa ;_gfeg ._faggc =_abe ._decae ;_gfeg ._bgdgba =_abe ._gcag ;_gfeg ._bgagb =_abe ._abcd .PdfVersion ();
_gfeg ._adeg =_abe ._eaa ;_gfeg ._gbdba =_abe ._fgbe .GetCrypter ();_gfeg ._dfbdf =_abe ._fgbe .GetEncryptObj ();_fdce :=_abe ._fgbe .GetXrefType ();if _fdce !=nil {_eeaa :=*_fdce ==_fdb .XrefTypeObjectStream ;_gfeg ._baedg =&_eeaa ;};_gfeg ._fbeb =map[_fdb .PdfObject ]struct{}{};
_gfeg ._gbabc =[]_fdb .PdfObject {};for _ ,_dfdd :=range _abe ._gdgb {if _ ,_gffgf :=_abe ._fgde [_dfdd ];_gffgf {continue ;};_gfeg .addObject (_dfdd );};_bced :=w ;if _egbf {_bced =_de .NewBuffer (nil );};if _abe ._egfd !=""&&_gfeg ._gbdba ==nil {_gfeg .Encrypt ([]byte (_abe ._egfd ),[]byte (_abe ._egfd ),_abe ._cbegg );
};if _fgaa :=_dcbe .Get ("\u0049\u0044");_fgaa !=nil {if _cdfd ,_daca :=_fdb .GetArray (_fgaa );_daca {_gfeg ._dcdea =_cdfd ;};};if _febdb :=_gfeg .Write (_bced );_febdb !=nil {return _febdb ;};if _egbf {_ebeg :=_bced .(*_de .Buffer ).Bytes ();_cfb :=_fdb .MakeArray ();
var _acfg []*pdfSignDictionary ;var _ecadd int64 ;for _ ,_ceeae :=range _gfeg ._gbabc {if _edef ,_fdge :=_fdb .GetIndirect (_ceeae );_fdge {if _egce ,_fbbf :=_edef .PdfObject .(*pdfSignDictionary );_fbbf {_acfg =append (_acfg ,_egce );_faggd :=_egce ._bcdcf +int64 (_egce ._defecc );
_cfb .Append (_fdb .MakeInteger (_ecadd ),_fdb .MakeInteger (_faggd -_ecadd ));_ecadd =_egce ._bcdcf +int64 (_egce ._fcggag );};};};_cfb .Append (_fdb .MakeInteger (_ecadd ),_fdb .MakeInteger (_acgca +int64 (len (_ebeg ))-_ecadd ));_dcgg :=[]byte (_cfb .WriteString ());
for _ ,_ggbc :=range _acfg {_fcfg :=int (_ggbc ._bcdcf -_acgca );for _ebcb :=_ggbc ._fgbdg ;_ebcb < _ggbc ._ebbfc ;_ebcb ++{_ebeg [_fcfg +_ebcb ]=' ';};_fecf :=_ebeg [_fcfg +_ggbc ._fgbdg :_fcfg +_ggbc ._ebbfc ];copy (_fecf ,_dcgg );};var _geac int ;for _ ,_ecdf :=range _acfg {_bbab :=int (_ecdf ._bcdcf -_acgca );
_adgd :=_ebeg [_geac :_bbab +_ecdf ._defecc ];_cagb :=*_ecdf ._cdgac ;_adgb [_cagb ].Write (_adgd );_geac =_bbab +_ecdf ._fcggag ;};for _ ,_gbdf :=range _acfg {_gbef :=_ebeg [_geac :];_cba :=*_gbdf ._cdgac ;_adgb [_cba ].Write (_gbef );};for _ ,_bdbcc :=range _acfg {_gcdc :=int (_bdbcc ._bcdcf -_acgca );
_fdcb :=*_bdbcc ._cdgac ;_gbgb :=_adgb [_fdcb ];if _baa :=_fdcb .Sign (_bdbcc ._daadf ,_gbgb );_baa !=nil {return _baa ;};_bdbcc ._daadf .ByteRange =_cfb ;_cegg :=[]byte (_bdbcc ._daadf .Contents .WriteString ());for _aecc :=_bdbcc ._fgbdg ;_aecc < _bdbcc ._ebbfc ;
_aecc ++{_ebeg [_gcdc +_aecc ]=' ';};for _fabb :=_bdbcc ._defecc ;_fabb < _bdbcc ._fcggag ;_fabb ++{_ebeg [_gcdc +_fabb ]=' ';};_efae :=_ebeg [_gcdc +_bdbcc ._fgbdg :_gcdc +_bdbcc ._ebbfc ];copy (_efae ,_dcgg );_efae =_ebeg [_gcdc +_bdbcc ._defecc :_gcdc +_bdbcc ._fcggag ];
copy (_efae ,_cegg );};_dgfe :=_de .NewBuffer (_ebeg );_ ,_dbad =_ca .Copy (w ,_dgfe );if _dbad !=nil {return _dbad ;};};_abe ._fed =true ;return nil ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_cdege *PdfInfo )AddCustomInfo (name string ,value string )error {if _cdege ._ecgdf ==nil {_cdege ._ecgdf =_fdb .MakeDict ();};if _ ,_gdbda :=_cacd [name ];_gdbda {return _d .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_cdege ._ecgdf .SetIfNotNil (*_fdb .MakeName (name ),_fdb .MakeString (value ));return nil ;};func _edec (_gbeffa string )map[string ]string {_gcfega :=_bdga .Split (_gbeffa ,-1);_bdgbcg :=map[string ]string {};for _ ,_dgcgf :=range _gcfega {_bedbg :=_dgeba .FindStringSubmatch (_dgcgf );
if _bedbg ==nil {continue ;};_ccfa ,_abbf :=_bedbg [1],_bedbg [2];_bdgbcg [_ccfa ]=_abbf ;};return _bdgbcg ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gffgfa *PdfPage )error ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bceg *PdfColorspaceDeviceGray )ToPdfObject ()_fdb .PdfObject {return _fdb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fdb .PdfObject ;MK _fdb .PdfObject ;A _fdb .PdfObject ;AA _fdb .PdfObject ;};func (_cdcbb *fontFile )loadFromSegments (_adaac ,_gecga []byte )error {_aa .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_adaac ),len (_gecga ));
_fdedd :=_cdcbb .parseASCIIPart (_adaac );if _fdedd !=nil {return _fdedd ;};_aa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cdcbb );if len (_gecga )==0{return nil ;};_aa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cdcbb );
return nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fdb .PdfObjectString ;Author *_fdb .PdfObjectString ;Subject *_fdb .PdfObjectString ;Keywords *_fdb .PdfObjectString ;Creator *_fdb .PdfObjectString ;Producer *_fdb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_fdb .PdfObjectName ;_ecgdf *_fdb .PdfObjectDictionary ;};func _badc (_aaea *PdfField ,_afff _fdb .PdfObject )error {switch _aaea .GetContext ().(type ){case *PdfFieldText :switch _bfbd :=_afff .(type ){case *_fdb .PdfObjectName :_dbae :=_bfbd ;
_aa .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_dbae .String ());
_aaea .V =_fdb .MakeEncodedString (_bfbd .String (),true );case *_fdb .PdfObjectString :_aaea .V =_fdb .MakeEncodedString (_bfbd .String (),true );default:_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_bfbd ,_bfbd );
};case *PdfFieldButton :switch _afff .(type ){case *_fdb .PdfObjectName :if len (_afff .String ())> 0{_aaea .V =_afff ;_cafda (_aaea ,_afff );};case *_fdb .PdfObjectString :if len (_afff .String ())> 0{_aaea .V =_fdb .MakeName (_afff .String ());_cafda (_aaea ,_aaea .V );
};default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aaea .PartialName (),_afff );_aaea .V =_afff ;};case *PdfFieldChoice :switch _afff .(type ){case *_fdb .PdfObjectName :if len (_afff .String ())> 0{_aaea .V =_fdb .MakeString (_afff .String ());
_cafda (_aaea ,_afff );};case *_fdb .PdfObjectString :if len (_afff .String ())> 0{_aaea .V =_afff ;_cafda (_aaea ,_fdb .MakeName (_afff .String ()));};default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_aaea .PartialName (),_afff );
_aaea .V =_afff ;};case *PdfFieldSignature :_aa .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_aaea .PartialName (),_afff );
};return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_degdc int ,_cbga *PdfPage );func (_eadb *PdfReader )traverseObjectData (_fggdb _fdb .PdfObject )error {return _fdb .ResolveReferencesDeep (_fggdb ,_eadb ._cccf );};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fccb *PdfFieldButton )IsRadio ()bool {return _fccb .GetType ()==ButtonTypeRadio };

// GetStandardApplier gets currently used StandardApplier..
func (_daadfc *PdfWriter )GetStandardApplier ()StandardApplier {return _daadfc ._ffdfg };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_dbdf *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=_dbdf .GetNumComponents (){return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gegb ,_cegc :=_fdb .GetNumbersAsFloat (objects );
if _cegc !=nil {return nil ,_cegc ;};return _dbdf .ColorFromFloats (_gegb );};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_dcdff *PdfPage )GetAllContentStreams ()(string ,error ){_cgad ,_dbeaf :=_dcdff .GetContentStreams ();if _dbeaf !=nil {return "",_dbeaf ;};return _gga .Join (_cgad ,"\u0020"),nil ;};func (_faba *PdfReader )newPdfActionSetOCGStateFromDict (_aceb *_fdb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_aceb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_aceb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fdb .PdfObject ;IsMap _fdb .PdfObject ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dbff _fdb .PdfObject ;};func _bcgc (_bcdaa *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_bcdaa }};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aegd *PdfFieldSignature )ToPdfObject ()_fdb .PdfObject {if _aegd .PdfAnnotationWidget !=nil {_aegd .PdfAnnotationWidget .ToPdfObject ();};_aegd .PdfField .ToPdfObject ();_afbd :=_aegd ._gdgea ;_gbff :=_afbd .PdfObject .(*_fdb .PdfObjectDictionary );
_gbff .SetIfNotNil ("\u0046\u0054",_fdb .MakeName ("\u0053\u0069\u0067"));_gbff .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aegd .Lock );_gbff .SetIfNotNil ("\u0053\u0056",_aegd .SV );if _aegd .V !=nil {_gbff .SetIfNotNil ("\u0056",_aegd .V .ToPdfObject ());
};return _afbd ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_dfbdd *PdfPageResourcesColorspaces )Set (key _fdb .PdfObjectName ,val PdfColorspace ){if _ ,_feeeg :=_dfbdd .Colorspaces [string (key )];!_feeeg {_dfbdd .Names =append (_dfbdd .Names ,string (key ));};_dfbdd .Colorspaces [string (key )]=val ;};type pdfFontType3 struct{fontCommon ;
_agdf *_fdb .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fdb .PdfObject ;Encoding _fdb .PdfObject ;FontBBox _fdb .PdfObject ;FontMatrix _fdb .PdfObject ;FirstChar _fdb .PdfObject ;LastChar _fdb .PdfObject ;Widths _fdb .PdfObject ;Resources _fdb .PdfObject ;_dafe map[_eb .CharCode ]float64 ;_cgddd _eb .TextEncoder ;
};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _fdb .PdfObject )(*PdfOutputIntent ,error ){_gegde :=&PdfOutputIntent {};if _gbgbf :=_gegde .ParsePdfObject (object );_gbgbf !=nil {return nil ,_gbgbf ;};return _gegde ,nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_debg *PdfPageResources )SetPatternByName (keyName _fdb .PdfObjectName ,pattern _fdb .PdfObject )error {if _debg .Pattern ==nil {_debg .Pattern =_fdb .MakeDict ();};_dedda ,_aaefg :=_debg .Pattern .(*_fdb .PdfObjectDictionary );if !_aaefg {return _fdb .ErrTypeError ;
};_dedda .Set (keyName ,pattern );return nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_ddfba *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ddfba .Base .GetNumComponents ();if N < 1{return Image {},_d .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ggbgc :=_ff .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._dcaf ,img ._gcgd );_ecdb :=_cd .NewReader (img .getBase ());_faag :=_cd .NewWriter (_ggbgc );var (_gcge uint32 ;_cfab int ;_gbcd error ;);for {_gcge ,_gbcd =_ecdb .ReadSample ();
if _gbcd ==_ca .EOF {break ;}else if _gbcd !=nil {return img ,_gbcd ;};_cfab =int (_gcge );_aa .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_cfab ,N ,len (_ddfba ._gcef ));
if (_cfab +1)*N > len (_ddfba ._gcef ){_cfab =len (_ddfba ._gcef )/N -1;_aa .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_cfab );if _cfab < 0{_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _cbac :=_cfab *N ;_cbac < (_cfab +1)*N ;_cbac ++{if _gbcd =_faag .WriteSample (uint32 (_ddfba ._gcef [_cbac ]));_gbcd !=nil {return img ,_gbcd ;};};};return _ddfba .Base .ImageToRGB (_cdbdc (&_ggbgc ));};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fdb .PdfObject ;Flags _fdb .PdfObject ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_eeecc *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _eeecc ._gdbgb !=nil {return _eeecc ._gdbgb ,nil ;};if _eeecc .ColorSpace ==nil {return nil ,nil ;};_bcgaa ,_cfgbcb :=_caecc (_eeecc .ColorSpace );if _cfgbcb !=nil {return nil ,_cfgbcb ;
};_eeecc ._gdbgb =_bcgaa ;return _eeecc ._gdbgb ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_daafc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_adea :=[]float64 {0.0};if _daafc .C0 !=nil {_adea =_daafc .C0 ;};_aeffg :=[]float64 {1.0};if _daafc .C1 !=nil {_aeffg =_daafc .C1 ;};var _bfdc []float64 ;for _bfbf :=0;_bfbf < len (_adea );_bfbf ++{_edbe :=_adea [_bfbf ]+_fag .Pow (x [0],_daafc .N )*(_aeffg [_bfbf ]-_adea [_bfbf ]);
_bfdc =append (_bfdc ,_edbe );};return _bfdc ,nil ;};func (_ecdfea *pdfFontSimple )baseFields ()*fontCommon {return &_ecdfea .fontCommon };

// Items returns all children outline items.
func (_eedbf *OutlineItem )Items ()[]*OutlineItem {return _eedbf .Entries };

// GetFontDescriptor returns the font descriptor for `font`.
func (_fgbead PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fgbead ._babcd .getFontDescriptor (),nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_aaadb ,_dffgf :=_fc .NewStdFontByName (HelveticaName );if !_dffgf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_aagfd :=_agff (_aaadb );return &PdfFont {_babcd :&_aagfd };};

// AddPages adds pages to be appended to the end of the source PDF.
func (_egbc *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bdeb :=range pages {_bdeb =_bdeb .Duplicate ();_cgcge (_bdeb );_egbc ._fdagd =append (_egbc ._fdagd ,_bdeb );};};

// IsColored specifies if the pattern is colored.
func (_eeaf *PdfTilingPattern )IsColored ()bool {if _eeaf .PaintType !=nil &&*_eeaf .PaintType ==1{return true ;};return false ;};func (_cdaac *pdfFontType0 )bytesToCharcodes (_eddb []byte )([]_eb .CharCode ,bool ){if _cdaac ._accfe ==nil {return nil ,false ;
};_bcbfg ,_babf :=_cdaac ._accfe .BytesToCharcodes (_eddb );if !_babf {return nil ,false ;};_bedg :=make ([]_eb .CharCode ,len (_bcbfg ));for _ceaa ,_ggbgg :=range _bcbfg {_bedg [_ceaa ]=_eb .CharCode (_ggbgg );};return _bedg ,true ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gcaaf *PdfReader )GetOutlines ()(*Outline ,error ){if _gcaaf ==nil {return nil ,_ee .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_ecgdcce :=_gcaaf .GetOutlineTree ();if _ecgdcce ==nil {return nil ,_ee .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dafdf func (_edagb *PdfOutlineTreeNode ,_fddb *[]*OutlineItem );_dafdf =func (_bebac *PdfOutlineTreeNode ,_bfdga *[]*OutlineItem ){if _bebac ==nil {return ;};if _bebac ._fcfd ==nil {_aa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _cbge *OutlineItem ;if _gbfac ,_fcdcd :=_bebac ._fcfd .(*PdfOutlineItem );_fcdcd {_egafa :=_gbfac .Dest ;if (_egafa ==nil ||_fdb .IsNullObject (_egafa ))&&_gbfac .A !=nil {if _gebca ,_ebefc :=_fdb .GetDict (_gbfac .A );_ebefc {if _gbabg ,_bbgdc :=_fdb .GetArray (_gebca .Get ("\u0044"));
_bbgdc {_egafa =_gbabg ;}else {_eebdg ,_geabg :=_fdb .GetString (_gebca .Get ("\u0044"));if !_geabg {return ;};_gabf ,_geabg :=_gcaaf ._adefa .Get ("\u004e\u0061\u006de\u0073").(*_fdb .PdfObjectReference );if !_geabg {return ;};_beadd ,_febdfb :=_gcaaf ._dbbec .LookupByReference (*_gabf );
if _febdfb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_febdfb .Error ());
return ;};_becc ,_geabg :=_beadd .(*_fdb .PdfIndirectObject );if !_geabg {return ;};_acebd :=map[_fdb .PdfObject ]struct{}{};_febdfb =_gcaaf .buildNameNodes (_becc ,_acebd );if _febdfb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_febdfb .Error ());
return ;};for _cadd :=range _acebd {_daeb ,_bfbg :=_fdb .GetDict (_cadd );if !_bfbg {continue ;};_ddbef ,_bfbg :=_fdb .GetArray (_daeb .Get ("\u004e\u0061\u006de\u0073"));if !_bfbg {continue ;};for _eadac ,_ebca :=range _ddbef .Elements (){switch _ebca .(type ){case *_fdb .PdfObjectString :if _ebca .String ()==_eebdg .String (){if _eeeae :=_ddbef .Get (_eadac +1);
_eeeae !=nil {if _egcca ,_dbfcc :=_fdb .GetDict (_eeeae );_dbfcc {_egafa =_egcca .Get ("\u0044");break ;};};};};};};};};};var _eaffe OutlineDest ;if _egafa !=nil &&!_fdb .IsNullObject (_egafa ){if _dgbc ,_dcgfc :=_aeeec (_egafa ,_gcaaf );_dcgfc ==nil {_eaffe =*_dgbc ;
}else {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_egafa ,_dcgfc );
};};_cbge =NewOutlineItem (_gbfac .Title .Decoded (),_eaffe );*_bfdga =append (*_bfdga ,_cbge );if _gbfac .Next !=nil {_dafdf (_gbfac .Next ,_bfdga );};};if _bebac .First !=nil {if _cbge !=nil {_bfdga =&_cbge .Entries ;};_dafdf (_bebac .First ,_bfdga );
};};_dbfff :=NewOutline ();_dafdf (_ecgdcce ,&_dbfff .Entries );return _dbfff ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fdb .PdfObject ;Sy _fdb .PdfObject ;};var ErrColorOutOfRange =_ee .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fgcd :=NewPdfAction ();_aeg :=&PdfActionNamed {};_aeg .PdfAction =_fgcd ;_fgcd .SetContext (_aeg );return _aeg ;};func _cfgbc (_cffa _fdb .PdfObject )(PdfFunction ,error ){_cffa =_fdb .ResolveReference (_cffa );
if _cbfae ,_cggdc :=_cffa .(*_fdb .PdfObjectStream );_cggdc {_dgea :=_cbfae .PdfObjectDictionary ;_gdea ,_gfeab :=_dgea .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fdb .PdfObjectInteger );if !_gfeab {_aa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gdea ==0{return _bdgcb (_cbfae );}else if *_gdea ==4{return _dcffb (_cbfae );
}else {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dfgcb ,_fcefe :=_cffa .(*_fdb .PdfIndirectObject );_fcefe {_bbfdg ,_gfbbf :=_dfgcb .PdfObject .(*_fdb .PdfObjectDictionary );
if !_gfbbf {_aa .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_abde ,_gfbbf :=_bbfdg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fdb .PdfObjectInteger );
if !_gfbbf {_aa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_abde ==2{return _ffaca (_dfgcb );}else if *_abde ==3{return _ccdbc (_dfgcb );}else {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gcca ,_bbaca :=_cffa .(*_fdb .PdfObjectDictionary );
_bbaca {_dfeac ,_fecba :=_gcca .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fdb .PdfObjectInteger );if !_fecba {_aa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dfeac ==2{return _ffaca (_gcca );}else if *_dfeac ==3{return _ccdbc (_gcca );
}else {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_aa .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cffa );
return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};var (CourierName =_fc .CourierName ;CourierBoldName =_fc .CourierBoldName ;CourierObliqueName =_fc .CourierObliqueName ;CourierBoldObliqueName =_fc .CourierBoldObliqueName ;
HelveticaName =_fc .HelveticaName ;HelveticaBoldName =_fc .HelveticaBoldName ;HelveticaObliqueName =_fc .HelveticaObliqueName ;HelveticaBoldObliqueName =_fc .HelveticaBoldObliqueName ;SymbolName =_fc .SymbolName ;ZapfDingbatsName =_fc .ZapfDingbatsName ;
TimesRomanName =_fc .TimesRomanName ;TimesBoldName =_fc .TimesBoldName ;TimesItalicName =_fc .TimesItalicName ;TimesBoldItalicName =_fc .TimesBoldItalicName ;);

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fdb .PdfObject ;T3DV _fdb .PdfObject ;T3DA _fdb .PdfObject ;T3DI _fdb .PdfObject ;T3DB _fdb .PdfObject ;};func _acaga (_geda map[_fc .GID ]int ,_ece uint16 )*_fdb .PdfObjectArray {_gdbfg :=&_fdb .PdfObjectArray {};
_cacf :=_fc .GID (_ece );for _cedeb :=_fc .GID (0);_cedeb < _cacf ;{_efea ,_eccg :=_geda [_cedeb ];if !_eccg {_cedeb ++;continue ;};_dacaee :=_cedeb ;for _ecddc :=_dacaee +1;_ecddc < _cacf ;_ecddc ++{if _cffg ,_baecg :=_geda [_ecddc ];!_baecg ||_efea !=_cffg {break ;
};_dacaee =_ecddc ;};_gdbfg .Append (_fdb .MakeInteger (int64 (_cedeb )));_gdbfg .Append (_fdb .MakeInteger (int64 (_dacaee )));_gdbfg .Append (_fdb .MakeInteger (int64 (_efea )));_cedeb =_dacaee +1;};return _gdbfg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdggg *PdfShadingType2 )ToPdfObject ()_fdb .PdfObject {_bdggg .PdfShading .ToPdfObject ();_caadg ,_egbea :=_bdggg .getShadingDict ();if _egbea !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _caadg ==nil {_aa .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _bdggg .Coords !=nil {_caadg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bdggg .Coords );
};if _bdggg .Domain !=nil {_caadg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bdggg .Domain );};if _bdggg .Function !=nil {if len (_bdggg .Function )==1{_caadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdggg .Function [0].ToPdfObject ());
}else {_bggg :=_fdb .MakeArray ();for _ ,_dbfge :=range _bdggg .Function {_bggg .Append (_dbfge .ToPdfObject ());};_caadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bggg );};};if _bdggg .Extend !=nil {_caadg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bdggg .Extend );
};return _bdggg ._dcfdb ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fdb .PdfObjectName ;Colorants _fdb .PdfObject ;Process _fdb .PdfObject ;MixingHints _fdb .PdfObject ;_dgcba *_fdb .PdfIndirectObject ;};func _fggde ()string {_dacba .Lock ();defer _dacba .Unlock ();return _fdadg };


// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cbgag *PdfReader )IsEncrypted ()(bool ,error ){return _cbgag ._dbbec .IsEncrypted ()};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_cfbba :_fdb .MakeDict (),ColorComponents :colorComponents };
};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fdb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_gedfg *PdfColorspaceCalGray )ToPdfObject ()_fdb .PdfObject {_eadgb :=&_fdb .PdfObjectArray {};_eadgb .Append (_fdb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_bgeec :=_fdb .MakeDict ();if _gedfg .WhitePoint !=nil {_bgeec .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fdb .MakeArray (_fdb .MakeFloat (_gedfg .WhitePoint [0]),_fdb .MakeFloat (_gedfg .WhitePoint [1]),_fdb .MakeFloat (_gedfg .WhitePoint [2])));
}else {_aa .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gedfg .BlackPoint !=nil {_bgeec .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fdb .MakeArray (_fdb .MakeFloat (_gedfg .BlackPoint [0]),_fdb .MakeFloat (_gedfg .BlackPoint [1]),_fdb .MakeFloat (_gedfg .BlackPoint [2])));
};_bgeec .Set ("\u0047\u0061\u006dm\u0061",_fdb .MakeFloat (_gedfg .Gamma ));_eadgb .Append (_bgeec );if _gedfg ._abdca !=nil {_gedfg ._abdca .PdfObject =_eadgb ;return _gedfg ._abdca ;};return _eadgb ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_cdebb *PdfReader )GetObjectNums ()[]int {return _cdebb ._dbbec .GetObjectNums ()};func (_dafda *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gdgea :_fdb .MakeIndirectObject (_fdb .MakeDict ())}};func (_abffe *pdfCIDFontType0 )baseFields ()*fontCommon {return &_abffe .fontCommon };func _geef (_aceba *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_aceba }};
func _daga (_ffbb *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bbeb ,_egca :=_fdb .GetDict (_ffbb .AP );if !_egca {return nil ,nil ,_ee .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _bbeb ==nil {return nil ,nil ,nil ;};_dagc ,_egca :=_fdb .GetArray (_ffbb .Rect );if !_egca ||_dagc .Len ()!=4{return nil ,nil ,_ee .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ffecc ,_egag :=NewPdfRectangle (*_dagc );
if _egag !=nil {return nil ,nil ,_egag ;};_beda :=_fdb .TraceToDirectObject (_bbeb .Get ("\u004e"));switch _adaga :=_beda .(type ){case *_fdb .PdfObjectStream :_dbebb :=_adaga ;_accg ,_fffeb :=NewXObjectFormFromStream (_dbebb );return _accg ,_ffecc ,_fffeb ;
case *_fdb .PdfObjectDictionary :_aeec :=_adaga ;_gacf ,_dadfb :=_fdb .GetName (_ffbb .AS );if !_dadfb {return nil ,nil ,nil ;};if _aeec .Get (*_gacf )==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_gbcdc ,_dadfb :=_fdb .GetStream (_aeec .Get (*_gacf ));if !_dadfb {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gacf );
return nil ,nil ,_ee .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dbacd ,_egee :=NewXObjectFormFromStream (_gbcdc );return _dbacd ,_ffecc ,_egee ;};_aa .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_beda );
return nil ,nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func _cedgg (_dcbf *_fdb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_eeccf :=PdfShadingType6 {};_gefgb :=_dcbf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gefgb ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dgcgd ,_cccfc :=_gefgb .(*_fdb .PdfObjectInteger );if !_cccfc {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gefgb );
return nil ,_fdb .ErrTypeError ;};_eeccf .BitsPerCoordinate =_dgcgd ;_gefgb =_dcbf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gefgb ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dgcgd ,_cccfc =_gefgb .(*_fdb .PdfObjectInteger );if !_cccfc {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gefgb );
return nil ,_fdb .ErrTypeError ;};_eeccf .BitsPerComponent =_dgcgd ;_gefgb =_dcbf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gefgb ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dgcgd ,_cccfc =_gefgb .(*_fdb .PdfObjectInteger );if !_cccfc {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gefgb );
return nil ,_fdb .ErrTypeError ;};_eeccf .BitsPerComponent =_dgcgd ;_gefgb =_dcbf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gefgb ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cafge ,_cccfc :=_gefgb .(*_fdb .PdfObjectArray );if !_cccfc {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gefgb );
return nil ,_fdb .ErrTypeError ;};_eeccf .Decode =_cafge ;if _gbbdc :=_dcbf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gbbdc !=nil {_eeccf .Function =[]PdfFunction {};if _cfedd ,_cbed :=_gbbdc .(*_fdb .PdfObjectArray );_cbed {for _ ,_aagb :=range _cfedd .Elements (){_efeec ,_cddbg :=_cfgbc (_aagb );
if _cddbg !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cddbg );return nil ,_cddbg ;};_eeccf .Function =append (_eeccf .Function ,_efeec );
};}else {_gabeb ,_gbefb :=_cfgbc (_gbbdc );if _gbefb !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbefb );return nil ,_gbefb ;
};_eeccf .Function =append (_eeccf .Function ,_gabeb );};};return &_eeccf ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_bcdca *PdfPage )AddExtGState (name _fdb .PdfObjectName ,egs *_fdb .PdfObjectDictionary )error {if _bcdca .Resources ==nil {_bcdca .Resources =NewPdfPageResources ();};if _bcdca .Resources .ExtGState ==nil {_bcdca .Resources .ExtGState =_fdb .MakeDict ();
};_adefb ,_fgdbd :=_fdb .TraceToDirectObject (_bcdca .Resources .ExtGState ).(*_fdb .PdfObjectDictionary );if !_fgdbd {_aa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fdb .TraceToDirectObject (_bcdca .Resources .ExtGState ));
return _ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adefb .Set (name ,egs );return nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eacf *_fdb .PdfIndirectObject ;};func _aeecf (_agfb _fdb .PdfObject ,_faec *fontCommon )(*_cgc .CMap ,error ){_geff ,_gdfa :=_fdb .GetStream (_agfb );if !_gdfa {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_agfb );
return nil ,_fdb .ErrTypeError ;};_bbgg ,_dbaf :=_fdb .DecodeStream (_geff );if _dbaf !=nil {return nil ,_dbaf ;};_eaec ,_dbaf :=_cgc .LoadCmapFromData (_bbgg ,!_faec .isCIDFont ());if _dbaf !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_geff .ObjectNumber ,_dbaf );
};return _eaec ,_dbaf ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bgafeg :=&XObjectImage {};_ddadg :=&_fdb .PdfObjectStream {};_ddadg .PdfObjectDictionary =_fdb .MakeDict ();_bgafeg ._aagea =_ddadg ;return _bgafeg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bbbb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fgcea *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfea :=vals [0];if _bfea < 0.0||_bfea > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfea );
return nil ,ErrColorOutOfRange ;};_eaac :=NewPdfColorCalGray (_bfea );return _eaac ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fcd :=NewPdfAction ();_fcf :=&PdfActionThread {};_fcf .PdfAction =_fcd ;_fcd .SetContext (_fcf );return _fcf ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_efba *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gbcab :=_cd .NewReader (img .getBase ());_adgad :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_efba .AlternateSpace .GetNumComponents (),nil ,img ._dcaf ,nil );
_eefae :=_cd .NewWriter (_adgad );_bggc :=_fag .Pow (2,float64 (img .BitsPerComponent ))-1;_aa .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_aa .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_efba .TintTransform );_dgcae :=_efba .AlternateSpace .DecodeArray ();var (_ddffc uint32 ;_cddg error ;);for {_ddffc ,_cddg =_gbcab .ReadSample ();
if _cddg ==_ca .EOF {break ;};if _cddg !=nil {return img ,_cddg ;};_egaf :=float64 (_ddffc )/_bggc ;_fedf ,_beefb :=_efba .TintTransform .Evaluate ([]float64 {_egaf });if _beefb !=nil {return img ,_beefb ;};for _gedfa ,_ebae :=range _fedf {_dbbe :=_ff .LinearInterpolate (_ebae ,_dgcae [_gedfa *2],_dgcae [_gedfa *2+1],0,1);
if _beefb =_eefae .WriteSample (uint32 (_dbbe *_bggc ));_beefb !=nil {return img ,_beefb ;};};};return _efba .AlternateSpace .ImageToRGB (_cdbdc (&_adgad ));};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fdb .PdfObject ,error );};func (_gcfcf *Image )samplesTrimPadding (_baga []uint32 )[]uint32 {_babd :=_gcfcf .ColorComponents *int (_gcfcf .Width )*int (_gcfcf .Height );if len (_baga )==_babd {return _baga ;
};_ceec :=make ([]uint32 ,_babd );_afgf :=int (_gcfcf .Width )*_gcfcf .ColorComponents ;var _cggg ,_eeedd ,_fabd ,_abba int ;_bgbca :=_ff .BytesPerLine (int (_gcfcf .Width ),int (_gcfcf .BitsPerComponent ),_gcfcf .ColorComponents );for _cggg =0;_cggg < int (_gcfcf .Height );
_cggg ++{_eeedd =_cggg *int (_gcfcf .Width );_fabd =_cggg *_bgbca ;for _abba =0;_abba < _afgf ;_abba ++{_ceec [_eeedd +_abba ]=_baga [_fabd +_abba ];};};return _ceec ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_egae *PdfReader )GetPageLabels ()(_fdb .PdfObject ,error ){_dcgfg :=_fdb .ResolveReference (_egae ._adefa .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _dcgfg ==nil {return nil ,nil ;};if !_egae ._fbgeb {_ddcffc :=_egae .traverseObjectData (_dcgfg );
if _ddcffc !=nil {return nil ,_ddcffc ;};};return _dcgfg ,nil ;};

// A returns the value of the A component of the color.
func (_bccb *PdfColorLab )A ()float64 {return _bccb [1]};func (_bbdbf *PdfReader )loadPerms ()(*Permissions ,error ){if _gcfcc :=_bbdbf ._adefa .Get ("\u0050\u0065\u0072m\u0073");_gcfcc !=nil {if _geeeg ,_acbbc :=_fdb .GetDict (_gcfcc );_acbbc {_fcgcd :=_geeeg .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _fcgcd ==nil {return nil ,nil ;};if _ecabg ,_gcfg :=_fdb .GetIndirect (_fcgcd );_gcfg {_fbfba ,_ebefcb :=_bbdbf .newPdfSignatureFromIndirect (_ecabg );if _ebefcb !=nil {return nil ,_ebefcb ;};return NewPermissions (_fbfba ),nil ;};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_fgecf *OutlineItem )Add (item *OutlineItem ){_fgecf .Entries =append (_fgecf .Entries ,item )};func _cafda (_afcf *PdfField ,_dgcge _fdb .PdfObject ){for _ ,_gbaae :=range _afcf .Annotations {_gbaae .AS =_dgcge ;_gbaae .ToPdfObject ();};};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fdb .PdfObjectBool ;SigFlags *_fdb .PdfObjectInteger ;CO *_fdb .PdfObjectArray ;DR *PdfPageResources ;DA *_fdb .PdfObjectString ;Q *_fdb .PdfObjectInteger ;XFA _fdb .PdfObject ;_fdbdd *_fdb .PdfIndirectObject ;
};func (_afcd *PdfAcroForm )filteredFields (_face FieldFilterFunc ,_eegcf bool )[]*PdfField {if _afcd ==nil {return nil ;};return _dfadd (_afcd .Fields ,_face ,_eegcf );};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ggea :=NewPdfAnnotation ();_gbae :=&PdfAnnotationStrikeOut {};_gbae .PdfAnnotation =_ggea ;_gbae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggea .SetContext (_gbae );return _gbae ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_bdaf *PdfPageResources )SetShadingByName (keyName _fdb .PdfObjectName ,shadingObj _fdb .PdfObject )error {if _bdaf .Shading ==nil {_bdaf .Shading =_fdb .MakeDict ();};_gabd ,_bebdd :=_bdaf .Shading .(*_fdb .PdfObjectDictionary );if !_bebdd {return _fdb .ErrTypeError ;
};_gabd .Set (keyName ,shadingObj );return nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ecg :=NewPdfAction ();_ggab :=&PdfActionSound {};_ggab .PdfAction =_ecg ;_ecg .SetContext (_ggab );return _ggab ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gbc :=NewPdfAnnotation ();_cef :=&PdfAnnotationFreeText {};_cef .PdfAnnotation =_gbc ;_cef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbc .SetContext (_cef );return _cef ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_eagg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbdg ,_fgbea :=_fdb .GetNumbersAsFloat (objects );
if _fgbea !=nil {return nil ,_fgbea ;};return _eagg .ColorFromFloats (_gbdg );};

// IsSimple returns true if `font` is a simple font.
func (_fdcfc *PdfFont )IsSimple ()bool {_ ,_cggcb :=_fdcfc ._babcd .(*pdfFontSimple );return _cggcb };var ImageHandling ImageHandler =DefaultImageHandler {};

// ToPdfObject implements interface PdfModel.
func (_bbgd *PdfAnnotationWidget )ToPdfObject ()_fdb .PdfObject {_bbgd .PdfAnnotation .ToPdfObject ();_bfeg :=_bbgd ._cgbd ;_dfcb :=_bfeg .PdfObject .(*_fdb .PdfObjectDictionary );if _bbgd ._fcded {return _bfeg ;};_bbgd ._fcded =true ;_dfcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_dfcb .SetIfNotNil ("\u0048",_bbgd .H );_dfcb .SetIfNotNil ("\u004d\u004b",_bbgd .MK );_dfcb .SetIfNotNil ("\u0041",_bbgd .A );_dfcb .SetIfNotNil ("\u0041\u0041",_bbgd .AA );_dfcb .SetIfNotNil ("\u0042\u0053",_bbgd .BS );_bebe :=_bbgd .Parent ;if _bbgd ._ccg !=nil {if _bbgd ._ccg ._gdgea ==_bbgd ._cgbd {_bbgd ._ccg .ToPdfObject ();
};_bebe =_bbgd ._ccg .GetContainingPdfObject ();};if _bebe !=_bfeg {_dfcb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bebe );};_bbgd ._fcded =false ;return _bfeg ;};

// WriteString outputs the object as it is to be written to file.
func (_gfcca *pdfSignDictionary )WriteString ()string {_gfcca ._defecc =0;_gfcca ._fcggag =0;_gfcca ._fgbdg =0;_gfcca ._ebbfc =0;_fcggc :=_de .NewBuffer (nil );_fcggc .WriteString ("\u003c\u003c");for _ ,_dfeff :=range _gfcca .Keys (){_gbdcf :=_gfcca .Get (_dfeff );
switch _dfeff {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fcggc .WriteString (_dfeff .WriteString ());_fcggc .WriteString ("\u0020");_gfcca ._fgbdg =_fcggc .Len ();_fcggc .WriteString (_gbdcf .WriteString ());_fcggc .WriteString ("\u0020");_gfcca ._ebbfc =_fcggc .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fcggc .WriteString (_dfeff .WriteString ());_fcggc .WriteString ("\u0020");_gfcca ._defecc =_fcggc .Len ();_fcggc .WriteString (_gbdcf .WriteString ());_fcggc .WriteString ("\u0020");_gfcca ._fcggag =_fcggc .Len ()-1;
default:_fcggc .WriteString (_dfeff .WriteString ());_fcggc .WriteString ("\u0020");_fcggc .WriteString (_gbdcf .WriteString ());};};_fcggc .WriteString ("\u003e\u003e");return _fcggc .String ();};

// Fill populates `form` with values provided by `provider`.
func (_dgaf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _dgaf .fill (provider ,nil )};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_dde :=NewPdfAnnotation ();_aaa :=&PdfAnnotationHighlight {};_aaa .PdfAnnotation =_dde ;_aaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dde .SetContext (_aaa );return _aaa ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_dcaf []byte ;_gcgd []float64 ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fdb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fdb .PdfObject ;Contents _fdb .PdfObject ;
Rotate *int64 ;Group _fdb .PdfObject ;Thumb _fdb .PdfObject ;B _fdb .PdfObject ;Dur _fdb .PdfObject ;Trans _fdb .PdfObject ;AA _fdb .PdfObject ;Metadata _fdb .PdfObject ;PieceInfo _fdb .PdfObject ;StructParents _fdb .PdfObject ;ID _fdb .PdfObject ;PZ _fdb .PdfObject ;
SeparationInfo _fdb .PdfObject ;Tabs _fdb .PdfObject ;TemplateInstantiated _fdb .PdfObject ;PresSteps _fdb .PdfObject ;UserUnit _fdb .PdfObject ;VP _fdb .PdfObject ;Annots _fdb .PdfObject ;_bcde []*PdfAnnotation ;_dacb *_fdb .PdfObjectDictionary ;_fccfd *_fdb .PdfIndirectObject ;
_afgg *PdfReader ;};func (_decdd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _decdd ._ecde };

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fdb .PdfObject ;LE _fdb .PdfObject ;BS _fdb .PdfObject ;IC _fdb .PdfObject ;BE _fdb .PdfObject ;IT _fdb .PdfObject ;Measure _fdb .PdfObject ;};

// GetCerts returns the signature certificate chain.
func (_gedaa *PdfSignature )GetCerts ()([]*_fa .Certificate ,error ){var _fbdb []func ()([]*_fa .Certificate ,error );switch _fdefd ,_ :=_fdb .GetNameVal (_gedaa .SubFilter );_fdefd {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_fbdb =append (_fbdb ,_gedaa .extractChainFromPKCS7 ,_gedaa .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_fbdb =append (_fbdb ,_gedaa .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_fbdb =append (_fbdb ,_gedaa .extractChainFromPKCS7 );
default:return nil ,_d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_fdefd );};for _ ,_dfbb :=range _fbdb {_gceab ,_fbdbc :=_dfbb ();if _fbdbc !=nil {return nil ,_fbdbc ;
};if len (_gceab )> 0{return _gceab ,nil ;};};return nil ,ErrSignNoCertificates ;};func _dfadd (_bgecf *[]*PdfField ,_cdfg FieldFilterFunc ,_bddee bool )[]*PdfField {if _bgecf ==nil {return nil ;};_fgfg :=*_bgecf ;if len (*_bgecf )==0{return nil ;};_bfeaa :=_fgfg [:0];
if _cdfg ==nil {_cdfg =func (*PdfField )bool {return true };};var _geadf []*PdfField ;for _ ,_gagfa :=range _fgfg {_gafdaa :=_cdfg (_gagfa );if _gafdaa {_geadf =append (_geadf ,_gagfa );if len (_gagfa .Kids )> 0{_geadf =append (_geadf ,_dfadd (&_gagfa .Kids ,_cdfg ,_bddee )...);
};};if !_bddee ||!_gafdaa ||len (_gagfa .Kids )> 0{_bfeaa =append (_bfeaa ,_gagfa );};};*_bgecf =_bfeaa ;return _geadf ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_bfgaa *PdfInfo )GetCustomInfo (name string )*_fdb .PdfObjectString {var _feegd *_fdb .PdfObjectString ;if _bfgaa ._ecgdf ==nil {return _feegd ;};if _bddc ,_bdbce :=_bfgaa ._ecgdf .Get (*_fdb .MakeName (name )).(*_fdb .PdfObjectString );_bdbce {_feegd =_bddc ;
};return _feegd ;};func (_gead *PdfReader )loadAction (_edeb _fdb .PdfObject )(*PdfAction ,error ){if _bcbba ,_caef :=_fdb .GetIndirect (_edeb );_caef {_bbedb ,_ebdb :=_gead .newPdfActionFromIndirectObject (_bcbba );if _ebdb !=nil {return nil ,_ebdb ;};
return _bbedb ,nil ;}else if !_fdb .IsNullObject (_edeb ){return nil ,_ee .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};var (ErrRequiredAttributeMissing =_ee .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_abcg =_ee .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ee .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_ee .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_fdd .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fdb .ErrNotSupported );
ErrType1CFontNotSupported =_fdd .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fdb .ErrNotSupported );
ErrType3FontNotSupported =_fdd .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fdb .ErrNotSupported );
ErrTTCmapNotSupported =_fdd .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fdb .ErrNotSupported );
ErrSignNotEnoughSpace =_fdd .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_fdd .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fdb .PdfObject ;};func _ecga (_gcee _fdb .PdfObject )(*PdfBorderStyle ,error ){_eabc :=&PdfBorderStyle {};_eabc ._dbff =_gcee ;var _gaff *_fdb .PdfObjectDictionary ;_gcee =_fdb .TraceToDirectObject (_gcee );
_gaff ,_cgda :=_gcee .(*_fdb .PdfObjectDictionary );if !_cgda {return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _egff :=_gaff .Get ("\u0054\u0079\u0070\u0065");_egff !=nil {_dgfc ,_cbegb :=_egff .(*_fdb .PdfObjectName );
if !_cbegb {_aa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_egff );
}else {if *_dgfc !="\u0042\u006f\u0072\u0064\u0065\u0072"{_aa .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_dgfc );};};};if _aefff :=_gaff .Get ("\u0057");
_aefff !=nil {_accf ,_fdcgc :=_fdb .GetNumberAsFloat (_aefff );if _fdcgc !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fdcgc );return nil ,_fdcgc ;};_eabc .W =&_accf ;
};if _addab :=_gaff .Get ("\u0053");_addab !=nil {_bagd ,_bgad :=_addab .(*_fdb .PdfObjectName );if !_bgad {return nil ,_ee .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _adac BorderStyle ;switch *_bagd {case "\u0053":_adac =BorderStyleSolid ;case "\u0044":_adac =BorderStyleDashed ;case "\u0042":_adac =BorderStyleBeveled ;case "\u0049":_adac =BorderStyleInset ;case "\u0055":_adac =BorderStyleUnderline ;default:_aa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bagd );
return nil ,_ee .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_eabc .S =&_adac ;};if _caggg :=_gaff .Get ("\u0044");_caggg !=nil {_beffb ,_dgca :=_caggg .(*_fdb .PdfObjectArray );
if !_dgca {_aa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_caggg );return nil ,_ee .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_aaacg ,_cbbg :=_beffb .ToIntegerArray ();if _cbbg !=nil {_aa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cbbg );
return nil ,_cbbg ;};_eabc .D =&_aaacg ;};return _eabc ,nil ;};func _dbdg (_cfbfe _fdb .PdfObject )[]*_fdb .PdfObjectStream {if _cfbfe ==nil {return nil ;};_ecfag ,_adfac :=_fdb .GetArray (_cfbfe );if !_adfac ||_ecfag .Len ()==0{return nil ;};_afba :=make ([]*_fdb .PdfObjectStream ,0,_ecfag .Len ());
for _ ,_fbeff :=range _ecfag .Elements (){if _gfba ,_gbedc :=_fdb .GetStream (_fbeff );_gbedc {_afba =append (_afba ,_gfba );};};return _afba ;};func (_fbeca *XObjectImage )getParamsDict ()*_fdb .PdfObjectDictionary {_fgaaab :=_fdb .MakeDict ();_fgaaab .Set ("\u0057\u0069\u0064t\u0068",_fdb .MakeInteger (*_fbeca .Width ));
_fgaaab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fdb .MakeInteger (*_fbeca .Height ));_fgaaab .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fdb .MakeInteger (int64 (_fbeca .ColorSpace .GetNumComponents ())));
_fgaaab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdb .MakeInteger (*_fbeca .BitsPerComponent ));return _fgaaab ;};func (_babeb *PdfFont )baseFields ()*fontCommon {if _babeb ._babcd ==nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _babeb ._babcd .baseFields ();};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_gfegg *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_gacee ,_dcdfd :=_fdb .GetDict (_gfegg ._gbged .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_dcdfd {_gacee =_fdb .MakeDict ();_gfegg ._gbged .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_gacee );
};_aacc ,_dcdfd :=_fdb .GetDict (_gacee .Get (_fdb .PdfObjectName (extName )));if !_dcdfd {_aacc =_fdb .MakeDict ();_gacee .Set (_fdb .PdfObjectName (extName ),_aacc );};if _gbgbe ,_ :=_fdb .GetNameVal (_aacc .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_gbgbe !=baseVersion {_aacc .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fdb .MakeName (baseVersion ));};if _cedbe ,_ :=_fdb .GetIntVal (_aacc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cedbe !=extLevel {_aacc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fdb .MakeInteger (int64 (extLevel )));};};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_cbgff *modelManager )GetPrimitiveFromModel (model PdfModel )_fdb .PdfObject {_dbcef ,_dggeb :=_cbgff ._dbed [model ];if !_dggeb {return nil ;};return _dbcef ;};func (_ebda *PdfReader )newPdfPageFromDict (_cdeec *_fdb .PdfObjectDictionary )(*PdfPage ,error ){_acgf :=NewPdfPage ();
_acgf ._dacb =_cdeec ;_adbd :=*_cdeec ;_aabd ,_cgaa :=_adbd .Get ("\u0054\u0079\u0070\u0065").(*_fdb .PdfObjectName );if !_cgaa {return nil ,_ee .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_aabd !="\u0050\u0061\u0067\u0065"{return nil ,_ee .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _edfda :=_adbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_edfda !=nil {_acgf .Parent =_edfda ;};if _aggba :=_adbd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_aggba !=nil {_bcdgd ,_baega :=_fdb .GetString (_aggba );if !_baega {return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_fgfcbg ,_fgebf :=NewPdfDate (_bcdgd .Str ());if _fgebf !=nil {return nil ,_fgebf ;};_acgf .LastModified =&_fgfcbg ;};if _baac :=_adbd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_baac !=nil &&!_fdb .IsNullObject (_baac ){_degcd ,_eeaag :=_fdb .GetDict (_baac );
if !_eeaag {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_baac );};var _gbcf error ;_acgf .Resources ,_gbcf =NewPdfPageResourcesFromDict (_degcd );
if _gbcf !=nil {return nil ,_gbcf ;};}else {_ddaea ,_eefba :=_acgf .getParentResources ();if _eefba !=nil {return nil ,_eefba ;};if _ddaea ==nil {_ddaea =NewPdfPageResources ();};_acgf .Resources =_ddaea ;};if _bccda :=_adbd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_bccda !=nil {_ggfge ,_gagbb :=_fdb .GetArray (_bccda );if !_gagbb {return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _bffe error ;
_acgf .MediaBox ,_bffe =NewPdfRectangle (*_ggfge );if _bffe !=nil {return nil ,_bffe ;};};if _bdace :=_adbd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bdace !=nil {_fdddg ,_ggabf :=_fdb .GetArray (_bdace );if !_ggabf {return nil ,_ee .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _agadd error ;_acgf .CropBox ,_agadd =NewPdfRectangle (*_fdddg );if _agadd !=nil {return nil ,_agadd ;};};if _ccfba :=_adbd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_ccfba !=nil {_cbeae ,_acbdg :=_fdb .GetArray (_ccfba );if !_acbdg {return nil ,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _bbffe error ;_acgf .BleedBox ,_bbffe =NewPdfRectangle (*_cbeae );if _bbffe !=nil {return nil ,_bbffe ;};};if _babagf :=_adbd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_babagf !=nil {_cdaef ,_gebad :=_fdb .GetArray (_babagf );if !_gebad {return nil ,_ee .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bfgge error ;_acgf .TrimBox ,_bfgge =NewPdfRectangle (*_cdaef );if _bfgge !=nil {return nil ,_bfgge ;};};if _dgag :=_adbd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dgag !=nil {_dbade ,_cfed :=_fdb .GetArray (_dgag );if !_cfed {return nil ,_ee .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eegdd error ;_acgf .ArtBox ,_eegdd =NewPdfRectangle (*_dbade );if _eegdd !=nil {return nil ,_eegdd ;};};if _dbfgd :=_adbd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dbfgd !=nil {_acgf .BoxColorInfo =_dbfgd ;};if _gcfad :=_adbd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_gcfad !=nil {_acgf .Contents =_gcfad ;};if _gccgf :=_adbd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gccgf !=nil {_gfef ,_ecdbcg :=_fdb .GetNumberAsInt64 (_gccgf );if _ecdbcg !=nil {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_acgf .Rotate =&_gfef ;};if _gdebe :=_adbd .Get ("\u0047\u0072\u006fu\u0070");_gdebe !=nil {_acgf .Group =_gdebe ;};if _cced :=_adbd .Get ("\u0054\u0068\u0075m\u0062");_cced !=nil {_acgf .Thumb =_cced ;};if _ggaec :=_adbd .Get ("\u0042");_ggaec !=nil {_acgf .B =_ggaec ;
};if _gacc :=_adbd .Get ("\u0044\u0075\u0072");_gacc !=nil {_acgf .Dur =_gacc ;};if _ccedf :=_adbd .Get ("\u0054\u0072\u0061n\u0073");_ccedf !=nil {_acgf .Trans =_ccedf ;};if _bgccf :=_adbd .Get ("\u0041\u0041");_bgccf !=nil {_acgf .AA =_bgccf ;};if _dgfbe :=_adbd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_dgfbe !=nil {_acgf .Metadata =_dgfbe ;};if _gafc :=_adbd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gafc !=nil {_acgf .PieceInfo =_gafc ;};if _fgaae :=_adbd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_fgaae !=nil {_acgf .StructParents =_fgaae ;};if _gbgea :=_adbd .Get ("\u0049\u0044");_gbgea !=nil {_acgf .ID =_gbgea ;};if _bgdb :=_adbd .Get ("\u0050\u005a");_bgdb !=nil {_acgf .PZ =_bgdb ;};if _cace :=_adbd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_cace !=nil {_acgf .SeparationInfo =_cace ;};if _aage :=_adbd .Get ("\u0054\u0061\u0062\u0073");_aage !=nil {_acgf .Tabs =_aage ;};if _bbbbb :=_adbd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bbbbb !=nil {_acgf .TemplateInstantiated =_bbbbb ;};if _ecaba :=_adbd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_ecaba !=nil {_acgf .PresSteps =_ecaba ;};if _cfgbdd :=_adbd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_cfgbdd !=nil {_acgf .UserUnit =_cfgbdd ;
};if _gbffd :=_adbd .Get ("\u0056\u0050");_gbffd !=nil {_acgf .VP =_gbffd ;};if _bedab :=_adbd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_bedab !=nil {_acgf .Annots =_bedab ;};_acgf ._afgg =_ebda ;return _acgf ,nil ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_ebgged *_fdb .PdfObjectDictionary ;Type *_fdb .PdfObjectName ;TransformMethod *_fdb .PdfObjectName ;TransformParams _fdb .PdfObject ;Data _fdb .PdfObject ;DigestMethod *_fdb .PdfObjectName ;};func (_fcge *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fcge ._ecde };


// DecodeArray returns the component range values for the Separation colorspace.
func (_gaag *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_bccbb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_egac :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_cgdeb ,_abbaf :=_bccbb .GetNumPages ();if _abbaf !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abbaf );
return nil ,_abbaf ;};for _cffff :=1;_cffff <=_cgdeb ;_cffff ++{_fgcbg ,_facca :=_bccbb .GetPage (_cffff );if _facca !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_facca );return nil ,_facca ;};if opts .PageProcessCallback !=nil {_facca =opts .PageProcessCallback (_cffff ,_fgcbg );
if _facca !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_facca );return nil ,_facca ;};}else if opts .PageCallback !=nil {opts .PageCallback (_cffff ,_fgcbg );};_facca =_egac .AddPage (_fgcbg );if _facca !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_facca );
return nil ,_facca ;};};_egac ._bgagb =_bccbb .PdfVersion ();if !opts .SkipInfo {_gffe ,_eddce :=_bccbb .GetPdfInfo ();if _eddce !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eddce );}else {_egac ._fecbc .PdfObject =_gffe .ToPdfObject ();
};};if !opts .SkipMetadata {if _dfgbc :=_bccbb ._adefa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dfgbc !=nil {if _gaadb :=_egac .SetCatalogMetadata (_dfgbc );_gaadb !=nil {return nil ,_gaadb ;};};};if !opts .SkipAcroForm {_acgb :=_egac .SetForms (_bccbb .AcroForm );
if _acgb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acgb );return nil ,_acgb ;};};if !opts .SkipOutlines {_egac .AddOutlineTree (_bccbb .GetOutlineTree ());};if !opts .SkipOCProperties {_dfafg ,_bfcfb :=_bccbb .GetOCProperties ();
if _bfcfb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcfb );}else {_bfcfb =_egac .SetOCProperties (_dfafg );if _bfcfb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfcfb );};};};if !opts .SkipPageLabels {_bcef ,_agdb :=_bccbb .GetPageLabels ();
if _agdb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agdb );}else {_agdb =_egac .SetPageLabels (_bcef );if _agdb !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agdb );};};};if !opts .SkipNamedDests {_gadbf ,_gfce :=_bccbb .GetNamedDestinations ();
if _gfce !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfce );}else {_gfce =_egac .SetNamedDestinations (_gadbf );if _gfce !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfce );};};};if !opts .SkipNameDictionary {_cged ,_deeea :=_bccbb .GetNameDictionary ();
if _deeea !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deeea );}else {_deeea =_egac .SetNameDictionary (_cged );if _deeea !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deeea );};};};if !opts .SkipRotation &&_bccbb .Rotate !=nil {if _dcbacd :=_egac .SetRotation (*_bccbb .Rotate );
_dcbacd !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcbacd );};};return &_egac ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_eccff *PdfOutlineItem )GetContainingPdfObject ()_fdb .PdfObject {return _eccff ._ecge };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_aaee :=&PdfOutlineItem {_ecge :_fdb .MakeIndirectObject (_fdb .MakeDict ())};_aaee ._fcfd =_aaee ;return _aaee ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fbgdd :=PdfColorDeviceRGB {r ,g ,b };return &_fbgdd ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gbec *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gbec .flattenFieldsWithOpts (false ,appgen ,opts );};

// ToPdfObject implements interface PdfModel.
func (_cdd *PdfActionThread )ToPdfObject ()_fdb .PdfObject {_cdd .PdfAction .ToPdfObject ();_gba :=_cdd ._ae ;_fgea :=_gba .PdfObject .(*_fdb .PdfObjectDictionary );_fgea .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeThread )));if _cdd .F !=nil {_fgea .Set ("\u0046",_cdd .F .ToPdfObject ());
};_fgea .SetIfNotNil ("\u0044",_cdd .D );_fgea .SetIfNotNil ("\u0042",_cdd .B );return _gba ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_baae *LTV )EnableAll (extraCerts []*_fa .Certificate )error {_bebd :=_baae ._daba ._abcd .AcroForm ;for _ ,_faeb :=range _bebd .AllFields (){_fdad ,_ :=_faeb .GetContext ().(*PdfFieldSignature );if _fdad ==nil {continue ;};_ccdd :=_fdad .V ;if _edegc :=_baae .validateSig (_ccdd );
_edegc !=nil {_aa .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_edegc );
};if _afad :=_baae .Enable (_ccdd ,extraCerts );_afad !=nil {return _afad ;};};return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func _gecf (_cbdb _fdb .PdfObject )(*fontFile ,error ){_aa .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_cbdb );
_dgff :=&fontFile {};_cbdb =_fdb .TraceToDirectObject (_cbdb );_acfca ,_ccaee :=_cbdb .(*_fdb .PdfObjectStream );if !_ccaee {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_cbdb );
return nil ,_fdb .ErrTypeError ;};_fbbbf :=_acfca .PdfObjectDictionary ;_cbce ,_gbeff :=_fdb .DecodeStream (_acfca );if _gbeff !=nil {return nil ,_gbeff ;};_ebaa ,_ccaee :=_fdb .GetNameVal (_fbbbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ccaee {_dgff ._cgdeae =_ebaa ;
if _ebaa =="\u0054\u0079\u0070\u0065\u0031\u0043"{_aa .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_ccac ,_ :=_fdb .GetIntVal (_fbbbf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_cdgga ,_ :=_fdb .GetIntVal (_fbbbf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ccac > len (_cbce ){_ccac =len (_cbce );
};if _ccac +_cdgga > len (_cbce ){_cdgga =len (_cbce )-_ccac ;};_caadc :=_cbce [:_ccac ];var _bbagf []byte ;if _cdgga > 0{_bbagf =_cbce [_ccac :_ccac +_cdgga ];};if _ccac > 0&&_cdgga > 0{_edbfb :=_dgff .loadFromSegments (_caadc ,_bbagf );if _edbfb !=nil {return nil ,_edbfb ;
};};return _dgff ,nil ;};func _bbbdc (_fceb _fdb .PdfObject )(*PdfColorspaceICCBased ,error ){_cafgg :=&PdfColorspaceICCBased {};if _edeg ,_aeabc :=_fceb .(*_fdb .PdfIndirectObject );_aeabc {_cafgg ._ddeb =_edeg ;};_fceb =_fdb .TraceToDirectObject (_fceb );
_ggdb ,_cgdg :=_fceb .(*_fdb .PdfObjectArray );if !_cgdg {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ggdb .Len ()!=2{return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_fceb =_fdb .TraceToDirectObject (_ggdb .Get (0));_eeab ,_cgdg :=_fceb .(*_fdb .PdfObjectName );if !_cgdg {return nil ,_d .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_eeab !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_d .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fceb =_ggdb .Get (1);
_fgaeg ,_cgdg :=_fdb .GetStream (_fceb );if !_cgdg {_aa .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_fceb );
return nil ,_d .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_agge :=_fgaeg .PdfObjectDictionary ;_ggc ,_cgdg :=_agge .Get ("\u004e").(*_fdb .PdfObjectInteger );
if !_cgdg {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ggc !=1&&*_ggc !=3&&*_ggc !=4{return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_cafgg .N =int (*_ggc );if _fbcg :=_agge .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_fbcg !=nil {_ccbbc ,_fagfa :=NewPdfColorspaceFromPdfObject (_fbcg );if _fagfa !=nil {return nil ,_fagfa ;};_cafgg .Alternate =_ccbbc ;};if _eeec :=_agge .Get ("\u0052\u0061\u006eg\u0065");
_eeec !=nil {_eeec =_fdb .TraceToDirectObject (_eeec );_agged ,_ebee :=_eeec .(*_fdb .PdfObjectArray );if !_ebee {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _agged .Len ()!=2*_cafgg .N {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_bded ,_feea :=_agged .GetAsFloat64Slice ();if _feea !=nil {return nil ,_feea ;};_cafgg .Range =_bded ;}else {_cafgg .Range =make ([]float64 ,2*_cafgg .N );for _dgacf :=0;_dgacf < _cafgg .N ;_dgacf ++{_cafgg .Range [2*_dgacf ]=0.0;_cafgg .Range [2*_dgacf +1]=1.0;
};};if _ddbe :=_agge .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ddbe !=nil {_aabe ,_fddd :=_ddbe .(*_fdb .PdfObjectStream );if !_fddd {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_cafgg .Metadata =_aabe ;};_dee ,_addc :=_fdb .DecodeStream (_fgaeg );if _addc !=nil {return nil ,_addc ;};_cafgg .Data =_dee ;_cafgg ._daec =_fgaeg ;return _cafgg ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_ead *PdfAnnotationWidget )Field ()*PdfField {return _ead ._ccg };

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_eegdb *XObjectImage )GetContainingPdfObject ()_fdb .PdfObject {return _eegdb ._aagea };

// SetContext sets the sub annotation (context).
func (_ggba *PdfAnnotation )SetContext (ctx PdfModel ){_ggba ._abdg =ctx };

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fdb .PdfObject ;};func (_dgcgc *PdfWriter )setWriter (_bcddc _ca .Writer ){_dgcgc ._cbgbba =_dgcgc ._cffde ;_dgcgc ._bddce =_c .NewWriter (_bcddc );};func (_ddg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gadb *_fdb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_aaf :=PdfAnnotationFileAttachment {};
_bdbd ,_dga :=_ddg .newPdfAnnotationMarkupFromDict (_gadb );if _dga !=nil {return nil ,_dga ;};_aaf .PdfAnnotationMarkup =_bdbd ;_aaf .FS =_gadb .Get ("\u0046\u0053");_aaf .Name =_gadb .Get ("\u004e\u0061\u006d\u0065");return &_aaf ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_ecea *PdfWriter )GetPdfVersion ()string {return _ecea .getPdfVersion ()};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bfead *Image )ToGoImage ()(_bd .Image ,error ){_aa .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gebcf ,_dafg :=_ff .NewImage (int (_bfead .Width ),int (_bfead .Height ),int (_bfead .BitsPerComponent ),_bfead .ColorComponents ,_bfead .Data ,_bfead ._dcaf ,_bfead ._gcgd );
if _dafg !=nil {return nil ,_dafg ;};return _gebcf ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fdb .PdfObject ;IC _fdb .PdfObject ;BE _fdb .PdfObject ;RD _fdb .PdfObject ;};func _edfcf (_egcgf *_fdb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dbdba :=PdfShadingType7 {};
_fccfe :=_egcgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fccfe ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efebd ,_abeae :=_fccfe .(*_fdb .PdfObjectInteger );if !_abeae {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fccfe );
return nil ,_fdb .ErrTypeError ;};_dbdba .BitsPerCoordinate =_efebd ;_fccfe =_egcgf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fccfe ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_efebd ,_abeae =_fccfe .(*_fdb .PdfObjectInteger );if !_abeae {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fccfe );
return nil ,_fdb .ErrTypeError ;};_dbdba .BitsPerComponent =_efebd ;_fccfe =_egcgf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fccfe ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_efebd ,_abeae =_fccfe .(*_fdb .PdfObjectInteger );if !_abeae {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fccfe );
return nil ,_fdb .ErrTypeError ;};_dbdba .BitsPerComponent =_efebd ;_fccfe =_egcgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fccfe ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbfb ,_abeae :=_fccfe .(*_fdb .PdfObjectArray );if !_abeae {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fccfe );
return nil ,_fdb .ErrTypeError ;};_dbdba .Decode =_dbfb ;if _aebfc :=_egcgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aebfc !=nil {_dbdba .Function =[]PdfFunction {};if _efada ,_cgbdda :=_aebfc .(*_fdb .PdfObjectArray );_cgbdda {for _ ,_dfcba :=range _efada .Elements (){_ddab ,_bdgd :=_cfgbc (_dfcba );
if _bdgd !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdgd );return nil ,_bdgd ;};_dbdba .Function =append (_dbdba .Function ,_ddab );
};}else {_effb ,_dfec :=_cfgbc (_aebfc );if _dfec !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfec );return nil ,_dfec ;};
_dbdba .Function =append (_dbdba .Function ,_effb );};};return &_dbdba ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bcdb ,_ecgfg :=NewStandard14Font (basefont );if _ecgfg !=nil {panic (_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bcdb ;};

// ToPdfObject implements interface PdfModel.
func (_agb *PdfActionJavaScript )ToPdfObject ()_fdb .PdfObject {_agb .PdfAction .ToPdfObject ();_ggf :=_agb ._ae ;_eac :=_ggf .PdfObject .(*_fdb .PdfObjectDictionary );_eac .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeJavaScript )));_eac .SetIfNotNil ("\u004a\u0053",_agb .JS );
return _ggf ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_egeb FieldFlag )Mask ()uint32 {return uint32 (_egeb )};

// Encoder returns the font's text encoder.
func (_dgbd pdfCIDFontType2 )Encoder ()_eb .TextEncoder {return _dgbd ._facgd };

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_abdca *_fdb .PdfIndirectObject ;};func (_fdaa *fontFile )parseASCIIPart (_bgaef []byte )error {if len (_bgaef )< 2||string (_bgaef [:2])!="\u0025\u0021"{return _ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_gaegb ,_cecg ,_cfbf :=_faff (_bgaef );if _cfbf !=nil {return _cfbf ;};_eedfac :=_edec (_gaegb );_fdaa ._gefd =_eedfac ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _fdaa ._gefd ==""{_aa .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cecg !=""{_acgdg ,_abgda :=_gfabc (_cecg );if _abgda !=nil {return _abgda ;};_geedd ,_abgda :=_eb .NewCustomSimpleTextEncoder (_acgdg ,nil );if _abgda !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_abgda );
return nil ;};_fdaa ._aabc =_geedd ;};return nil ;};func _bfdfe ()string {_dacba .Lock ();defer _dacba .Unlock ();return _ecfaa };

// ToPdfObject implements interface PdfModel.
func (_fce *PdfActionGoTo )ToPdfObject ()_fdb .PdfObject {_fce .PdfAction .ToPdfObject ();_gaf :=_fce ._ae ;_aadd :=_gaf .PdfObject .(*_fdb .PdfObjectDictionary );_aadd .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeGoTo )));_aadd .SetIfNotNil ("\u0044",_fce .D );
return _gaf ;};

// AddFont adds a font dictionary to the Font resources.
func (_ebgfg *PdfPage )AddFont (name _fdb .PdfObjectName ,font _fdb .PdfObject )error {if _ebgfg .Resources ==nil {_ebgfg .Resources =NewPdfPageResources ();};if _ebgfg .Resources .Font ==nil {_ebgfg .Resources .Font =_fdb .MakeDict ();};_aaceb ,_ffcb :=_fdb .TraceToDirectObject (_ebgfg .Resources .Font ).(*_fdb .PdfObjectDictionary );
if !_ffcb {_aa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fdb .TraceToDirectObject (_ebgfg .Resources .Font ));
return _ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaceb .Set (name ,font );return nil ;};func (_dbcbb *LTV )getCRLs (_febfc []*_fa .Certificate )([][]byte ,error ){_geba :=make ([][]byte ,0,len (_febfc ));
for _ ,_acdaf :=range _febfc {for _ ,_gdbg :=range _acdaf .CRLDistributionPoints {if _dbcbb .CertClient .IsCA (_acdaf ){continue ;};_gafge ,_fgfdb :=_dbcbb .CRLClient .MakeRequest (_gdbg ,_acdaf );if _fgfdb !=nil {_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fgfdb );
continue ;};_geba =append (_geba ,_gafge );};};return _geba ,nil ;};

// G returns the value of the green component of the color.
func (_ffbf *PdfColorDeviceRGB )G ()float64 {return _ffbf [1]};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gaga *PdfColorspaceLab )ToPdfObject ()_fdb .PdfObject {_decd :=_fdb .MakeArray ();_decd .Append (_fdb .MakeName ("\u004c\u0061\u0062"));_becg :=_fdb .MakeDict ();if _gaga .WhitePoint !=nil {_cgae :=_fdb .MakeArray (_fdb .MakeFloat (_gaga .WhitePoint [0]),_fdb .MakeFloat (_gaga .WhitePoint [1]),_fdb .MakeFloat (_gaga .WhitePoint [2]));
_becg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cgae );}else {_aa .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _gaga .BlackPoint !=nil {_afabe :=_fdb .MakeArray (_fdb .MakeFloat (_gaga .BlackPoint [0]),_fdb .MakeFloat (_gaga .BlackPoint [1]),_fdb .MakeFloat (_gaga .BlackPoint [2]));_becg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_afabe );
};if _gaga .Range !=nil {_deaf :=_fdb .MakeArray (_fdb .MakeFloat (_gaga .Range [0]),_fdb .MakeFloat (_gaga .Range [1]),_fdb .MakeFloat (_gaga .Range [2]),_fdb .MakeFloat (_gaga .Range [3]));_becg .Set ("\u0052\u0061\u006eg\u0065",_deaf );};_decd .Append (_becg );
if _gaga ._eacf !=nil {_gaga ._eacf .PdfObject =_decd ;return _gaga ._eacf ;};return _decd ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_fgc .File ,error ){const _bead ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_abdbc ,_ccdga :=_fgc .Open (pdfFile );if _ccdga !=nil {return nil ,nil ,_ccdga ;};_cdaab ,_ccdga :=_fgagf (_abdbc ,opts ,true ,_bead );if _ccdga !=nil {_abdbc .Close ();return nil ,nil ,_ccdga ;};return _cdaab ,_abdbc ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fdb .PdfObject ;Q _fdb .PdfObject ;RC _fdb .PdfObject ;DS _fdb .PdfObject ;CL _fdb .PdfObject ;IT _fdb .PdfObject ;BE _fdb .PdfObject ;RD _fdb .PdfObject ;BS _fdb .PdfObject ;LE _fdb .PdfObject ;
};

// ToPdfObject implements interface PdfModel.
func (_aefa *PdfAnnotationHighlight )ToPdfObject ()_fdb .PdfObject {_aefa .PdfAnnotation .ToPdfObject ();_cdag :=_aefa ._cgbd ;_cbec :=_cdag .PdfObject .(*_fdb .PdfObjectDictionary );_aefa .PdfAnnotationMarkup .appendToPdfDictionary (_cbec );_cbec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_cbec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aefa .QuadPoints );return _cdag ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_cede *_fdb .PdfObjectDictionary ;_baea *_fdb .PdfIndirectObject ;};func (_dgcb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};func (_daa *PdfReader )newPdfActionNamedFromDict (_eda *_fdb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_eda .Get ("\u004e")},nil ;};

// GetOptimizer returns current PDF optimizer.
func (_acebb *PdfWriter )GetOptimizer ()Optimizer {return _acebb ._ffbbb };const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_ffdb *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};func (_ecdbc *pdfFontSimple )updateStandard14Font (){_afdc ,_baca :=_ecdbc .Encoder ().(_eb .SimpleEncoder );if !_baca {_aa .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ecdbc .Encoder (),_ecdbc );
return ;};_ggaea :=_afdc .Charcodes ();_ecdbc ._fgfcb =make (map[_eb .CharCode ]float64 ,len (_ggaea ));for _ ,_aggb :=range _ggaea {_gaeed ,_ :=_afdc .CharcodeToRune (_aggb );_fage ,_ :=_ecdbc ._gabe .Read (_gaeed );_ecdbc ._fgfcb [_aggb ]=_fage .Wx ;
};};func (_gbdbf *PdfWriter )optimizeDocument ()error {if _gbdbf ._ffdfg ==nil {return nil ;};_acfb ,_gdcgc :=_fdb .GetDict (_gbdbf ._fecbc );if !_gdcgc {return _ee .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fedca :=_eec .Document {ID :[2]string {_gbdbf ._aebag ,_gbdbf ._gefad },Version :_gbdbf ._bgagb ,Objects :_gbdbf ._gbabc ,Info :_acfb ,Crypt :_gbdbf ._gbdba ,UseHashBasedID :_gbdbf ._ddegb };if _cebgfc :=_gbdbf ._ffdfg .ApplyStandard (&_fedca );_cebgfc !=nil {return _cebgfc ;
};_gbdbf ._aebag ,_gbdbf ._gefad =_fedca .ID [0],_fedca .ID [1];_gbdbf ._bgagb =_fedca .Version ;_gbdbf ._gbabc =_fedca .Objects ;_gbdbf ._fecbc .PdfObject =_fedca .Info ;_gbdbf ._ddegb =_fedca .UseHashBasedID ;_gbdbf ._gbdba =_fedca .Crypt ;_ccfcb :=make (map[_fdb .PdfObject ]struct{},len (_gbdbf ._gbabc ));
for _ ,_ggeda :=range _gbdbf ._gbabc {_ccfcb [_ggeda ]=struct{}{};};_gbdbf ._fbeb =_ccfcb ;return nil ;};func (_efee fontCommon )asPdfObjectDictionary (_ggbee string )*_fdb .PdfObjectDictionary {if _ggbee !=""&&_efee ._eaae !=""&&_ggbee !=_efee ._eaae {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_ggbee ,_efee );
}else if _ggbee ==""&&_efee ._eaae ==""{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_efee );
}else if _efee ._eaae ==""{_efee ._eaae =_ggbee ;};_eeee :=_fdb .MakeDict ();_eeee .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0046\u006f\u006e\u0074"));_eeee .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fdb .MakeName (_efee ._gfdda ));
_eeee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName (_efee ._eaae ));if _efee ._ecde !=nil {_eeee .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_efee ._ecde .ToPdfObject ());};if _efee ._fcgga !=nil {_eeee .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_efee ._fcgga );
}else if _efee ._egadb !=nil {_fcgb ,_febg :=_efee ._egadb .Stream ();if _febg !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_febg );
}else {_eeee .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fcgb );};};return _eeee ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_cdfag *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_gcfgg :=_cdfag ._dbbec .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _gcfgg {return nil ,_ee .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_gcfgg {return _cdfag ,nil ;};if _cdfag ._eggca [revisionNumber ]!=nil {return _cdfag ._eggca [revisionNumber ],nil ;};_bcgabc :=_cdfag ;for _egbbd :=_gcfgg -1;_egbbd >=revisionNumber ;_egbbd --{_abdbf ,_aefd :=_bcgabc .GetPreviousRevision ();
if _aefd !=nil {return nil ,_aefd ;};_cdfag ._eggca [_egbbd ]=_abdbf ;_bcgabc =_abdbf ;};return _bcgabc ,nil ;};func (_gcd *PdfReader )newPdfActionFromIndirectObject (_fcbf *_fdb .PdfIndirectObject )(*PdfAction ,error ){_edc ,_gae :=_fcbf .PdfObject .(*_fdb .PdfObjectDictionary );
if !_gae {return nil ,_d .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gcd ._ggdg .GetModelFromPrimitive (_edc );model !=nil {_eed ,_bde :=model .(*PdfAction );if !_bde {return nil ,_d .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _eed ,nil ;};_fddf :=&PdfAction {};_fddf ._ae =_fcbf ;_gcd ._ggdg .Register (_edc ,_fddf );if _aee :=_edc .Get ("\u0054\u0079\u0070\u0065");_aee !=nil {_eefa ,_dgd :=_aee .(*_fdb .PdfObjectName );if !_dgd {_aa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aee );
}else {if *_eefa !="\u0041\u0063\u0074\u0069\u006f\u006e"{_aa .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_eefa );
};_fddf .Type =_eefa ;};};if _aca :=_edc .Get ("\u004e\u0065\u0078\u0074");_aca !=nil {_fddf .Next =_aca ;};if _fbg :=_edc .Get ("\u0053");_fbg !=nil {_fddf .S =_fbg ;};_edd ,_geab :=_fddf .S .(*_fdb .PdfObjectName );if !_geab {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fddf .S );
return nil ,_d .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fddf .S );};_caeec :=PdfActionType (_edd .String ());
switch _caeec {case ActionTypeGoTo :_gee ,_abd :=_gcd .newPdfActionGotoFromDict (_edc );if _abd !=nil {return nil ,_abd ;};_gee .PdfAction =_fddf ;_fddf ._gc =_gee ;return _fddf ,nil ;case ActionTypeGoToR :_cec ,_egc :=_gcd .newPdfActionGotoRFromDict (_edc );
if _egc !=nil {return nil ,_egc ;};_cec .PdfAction =_fddf ;_fddf ._gc =_cec ;return _fddf ,nil ;case ActionTypeGoToE :_dc ,_bgd :=_gcd .newPdfActionGotoEFromDict (_edc );if _bgd !=nil {return nil ,_bgd ;};_dc .PdfAction =_fddf ;_fddf ._gc =_dc ;return _fddf ,nil ;
case ActionTypeLaunch :_dfa ,_cbg :=_gcd .newPdfActionLaunchFromDict (_edc );if _cbg !=nil {return nil ,_cbg ;};_dfa .PdfAction =_fddf ;_fddf ._gc =_dfa ;return _fddf ,nil ;case ActionTypeThread :_fcee ,_gad :=_gcd .newPdfActionThreadFromDict (_edc );if _gad !=nil {return nil ,_gad ;
};_fcee .PdfAction =_fddf ;_fddf ._gc =_fcee ;return _fddf ,nil ;case ActionTypeURI :_ecgg ,_cad :=_gcd .newPdfActionURIFromDict (_edc );if _cad !=nil {return nil ,_cad ;};_ecgg .PdfAction =_fddf ;_fddf ._gc =_ecgg ;return _fddf ,nil ;case ActionTypeSound :_dffg ,_cbe :=_gcd .newPdfActionSoundFromDict (_edc );
if _cbe !=nil {return nil ,_cbe ;};_dffg .PdfAction =_fddf ;_fddf ._gc =_dffg ;return _fddf ,nil ;case ActionTypeMovie :_gfd ,_bgc :=_gcd .newPdfActionMovieFromDict (_edc );if _bgc !=nil {return nil ,_bgc ;};_gfd .PdfAction =_fddf ;_fddf ._gc =_gfd ;return _fddf ,nil ;
case ActionTypeHide :_gaed ,_eefc :=_gcd .newPdfActionHideFromDict (_edc );if _eefc !=nil {return nil ,_eefc ;};_gaed .PdfAction =_fddf ;_fddf ._gc =_gaed ;return _fddf ,nil ;case ActionTypeNamed :_fgec ,_egb :=_gcd .newPdfActionNamedFromDict (_edc );if _egb !=nil {return nil ,_egb ;
};_fgec .PdfAction =_fddf ;_fddf ._gc =_fgec ;return _fddf ,nil ;case ActionTypeSubmitForm :_efcd ,_adb :=_gcd .newPdfActionSubmitFormFromDict (_edc );if _adb !=nil {return nil ,_adb ;};_efcd .PdfAction =_fddf ;_fddf ._gc =_efcd ;return _fddf ,nil ;case ActionTypeResetForm :_bcc ,_fbgd :=_gcd .newPdfActionResetFormFromDict (_edc );
if _fbgd !=nil {return nil ,_fbgd ;};_bcc .PdfAction =_fddf ;_fddf ._gc =_bcc ;return _fddf ,nil ;case ActionTypeImportData :_faa ,_da :=_gcd .newPdfActionImportDataFromDict (_edc );if _da !=nil {return nil ,_da ;};_faa .PdfAction =_fddf ;_fddf ._gc =_faa ;
return _fddf ,nil ;case ActionTypeSetOCGState :_fcea ,_gce :=_gcd .newPdfActionSetOCGStateFromDict (_edc );if _gce !=nil {return nil ,_gce ;};_fcea .PdfAction =_fddf ;_fddf ._gc =_fcea ;return _fddf ,nil ;case ActionTypeRendition :_eedc ,_gagc :=_gcd .newPdfActionRenditionFromDict (_edc );
if _gagc !=nil {return nil ,_gagc ;};_eedc .PdfAction =_fddf ;_fddf ._gc =_eedc ;return _fddf ,nil ;case ActionTypeTrans :_ccb ,_bef :=_gcd .newPdfActionTransFromDict (_edc );if _bef !=nil {return nil ,_bef ;};_ccb .PdfAction =_fddf ;_fddf ._gc =_ccb ;
return _fddf ,nil ;case ActionTypeGoTo3DView :_abbd ,_ccd :=_gcd .newPdfActionGoTo3DViewFromDict (_edc );if _ccd !=nil {return nil ,_ccd ;};_abbd .PdfAction =_fddf ;_fddf ._gc =_abbd ;return _fddf ,nil ;case ActionTypeJavaScript :_dge ,_ebc :=_gcd .newPdfActionJavaScriptFromDict (_edc );
if _ebc !=nil {return nil ,_ebc ;};_dge .PdfAction =_fddf ;_fddf ._gc =_dge ;return _fddf ,nil ;};_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_caeec );
return nil ,nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gfeea PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fdb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_acaf []_fdb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_fbbe []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// Write writes out the PDF.
func (_fcgce *PdfWriter )Write (writer _ca .Writer )error {_aa .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cfgab :=_fcgce .checkLicense ();if _cfgab !=nil {return _cfgab ;};if _cfgab =_fcgce .writeOutlines ();_cfgab !=nil {return _cfgab ;};if _cfgab =_fcgce .writeAcroFormFields ();
_cfgab !=nil {return _cfgab ;};_fcgce .checkPendingObjects ();if _cfgab =_fcgce .writeOutputIntents ();_cfgab !=nil {return _cfgab ;};_fcgce .setCatalogVersion ();_fcgce .copyObjects ();if _cfgab =_fcgce .optimize ();_cfgab !=nil {return _cfgab ;};if _cfgab =_fcgce .optimizeDocument ();
_cfgab !=nil {return _cfgab ;};var _eafe _ac .Hash ;if _fcgce ._ddegb {_eafe =_df .New ();writer =_ca .MultiWriter (_eafe ,writer );};_fcgce .setWriter (writer );_eaafc :=_fcgce .checkCrossReferenceStream ();_dgdbg ,_eaafc :=_fcgce .mapObjectStreams (_eaafc );
_fcgce .adjustXRefAffectedVersion (_eaafc );_fcgce .writeDocumentVersion ();_fcgce .updateObjectNumbers ();_fcgce .writeObjects ();if _cfgab =_fcgce .writeObjectsInStreams (_dgdbg );_cfgab !=nil {return _cfgab ;};_bcgegg :=_fcgce ._cbgbba ;var _effdbf int ;
for _cfbfc :=range _fcgce ._bbbeb {if _cfbfc > _effdbf {_effdbf =_cfbfc ;};};if _fcgce ._ddegb {if _cfgab =_fcgce .setHashIDs (_eafe );_cfgab !=nil {return _cfgab ;};};if _eaafc {if _cfgab =_fcgce .writeXRefStreams (_effdbf ,_bcgegg );_cfgab !=nil {return _cfgab ;
};}else {_fcgce .writeTrailer (_effdbf );};_fcgce .makeOffSetReference (_bcgegg );if _cfgab =_fcgce .flushWriter ();_cfgab !=nil {return _cfgab ;};return nil ;};

// SetVersion sets the PDF version of the output file.
func (_ffacbe *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ffacbe ._bgagb .Major =majorVersion ;_ffacbe ._bgagb .Minor =minorVersion ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fdfae *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_aafe :=func (_cbaf float64 )float64 {if _cbaf >=6.0/29{return _cbaf *_cbaf *_cbaf ;};return 108.0/841*(_cbaf -4/29);};_bcec :=img ._gcgd ;if len (_bcec )!=6{_aa .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_bcec =_fdfae .DecodeArray ();};_febcb :=_cd .NewReader (img .getBase ());_ggaa :=_ff .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._dcaf ,img ._gcgd );_bcbd :=_cd .NewWriter (_ggaa );_cbab :=_fag .Pow (2,float64 (img .BitsPerComponent ))-1;
_baag :=make ([]uint32 ,3);var (_cgff error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fbgac ,_fdfda ,_bfcg float64 ;);for {_cgff =_febcb .ReadSamples (_baag );if _cgff ==_ca .EOF {break ;}else if _cgff !=nil {return img ,_cgff ;};Ls =float64 (_baag [0])/_cbab ;As =float64 (_baag [1])/_cbab ;
Bs =float64 (_baag [2])/_cbab ;Ls =_ff .LinearInterpolate (Ls ,0.0,1.0,_bcec [0],_bcec [1]);As =_ff .LinearInterpolate (As ,0.0,1.0,_bcec [2],_bcec [3]);Bs =_ff .LinearInterpolate (Bs ,0.0,1.0,_bcec [4],_bcec [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_fdfae .WhitePoint [0]*_aafe (L );Y =_fdfae .WhitePoint [1]*_aafe (M );Z =_fdfae .WhitePoint [2]*_aafe (N );_fbgac =3.240479*X +-1.537150*Y +-0.498535*Z ;_fdfda =-0.969256*X +1.875992*Y +0.041556*Z ;_bfcg =0.055648*X +-0.204043*Y +1.057311*Z ;
_fbgac =_fag .Min (_fag .Max (_fbgac ,0),1.0);_fdfda =_fag .Min (_fag .Max (_fdfda ,0),1.0);_bfcg =_fag .Min (_fag .Max (_bfcg ,0),1.0);_baag [0]=uint32 (_fbgac *_cbab );_baag [1]=uint32 (_fdfda *_cbab );_baag [2]=uint32 (_bfcg *_cbab );if _cgff =_bcbd .WriteSamples (_baag );
_cgff !=nil {return img ,_cgff ;};};return _cdbdc (&_ggaa ),nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_fgcb :=NewPdfAnnotation ();_caf :=&PdfAnnotationRedact {};_caf .PdfAnnotation =_fgcb ;_caf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgcb .SetContext (_caf );return _caf ;};func (_dbgag *PdfWriter )writeDocumentVersion (){if _dbgag ._ddfef {_dbgag .writeString ("\u000a");
}else {_dbgag .writeString (_d .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_dbgag ._bgagb .Major ,_dbgag ._bgagb .Minor ));_dbgag .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_cffd :=&PdfColorspaceLab {};_cffd .BlackPoint =[]float64 {0.0,0.0,0.0};_cffd .Range =[]float64 {-100,100,-100,100};return _cffd ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_abgg *PdfPage )Size ()(float64 ,float64 ,error ){_ddged ,_fcbge :=_abgg .GetMediaBox ();if _fcbge !=nil {return 0,0,_fcbge ;};_daag ,_abgb :=_ddged .Width (),_ddged .Height ();_bbfff ,_fcbge :=_abgg .GetRotate ();if _fcbge !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_fcbge .Error ());
};if _efadb :=_bbfff ;_efadb %360!=0&&_efadb %90==0{if _abecb :=(360+_efadb %360)%360;_abecb ==90||_abecb ==270{_daag ,_abgb =_abgb ,_daag ;};};return _daag ,_abgb ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ca .ReadSeeker )(*PdfFont ,error ){const _gfda =_eb .CharCode (32);const _fdafg =_eb .CharCode (255);_gfedg ,_eccfe :=_abb .ReadAll (r );if _eccfe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_eccfe );
return nil ,_eccfe ;};_dfdb ,_eccfe :=_fc .TtfParse (_de .NewReader (_gfedg ));if _eccfe !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_eccfe );
return nil ,_eccfe ;};_fgda :=&pdfFontSimple {_fgfcb :make (map[_eb .CharCode ]float64 ),fontCommon :fontCommon {_eaae :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fgda ._cafgd =_eb .NewWinAnsiEncoder ();_fgda ._gfdda =_dfdb .PostScriptName ;
_fgda .FirstChar =_fdb .MakeInteger (int64 (_gfda ));_fgda .LastChar =_fdb .MakeInteger (int64 (_fdafg ));_afcgg :=1000.0/float64 (_dfdb .UnitsPerEm );if len (_dfdb .Widths )<=0{return nil ,_ee .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gcgbb :=_afcgg *float64 (_dfdb .Widths [0]);_dfced :=make ([]float64 ,0,_fdafg -_gfda +1);for _adbac :=_gfda ;_adbac <=_fdafg ;_adbac ++{_becab ,_fdecf :=_fgda .Encoder ().CharcodeToRune (_adbac );if !_fdecf {_aa .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_adbac );
_dfced =append (_dfced ,_gcgbb );continue ;};_adaa ,_fedcd :=_dfdb .Chars [_becab ];if !_fedcd {_aa .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dfced =append (_dfced ,_gcgbb );continue ;
};_ebged :=_afcgg *float64 (_dfdb .Widths [_adaa ]);_dfced =append (_dfced ,_ebged );};_fgda .Widths =_fdb .MakeIndirectObject (_fdb .MakeArrayFromFloats (_dfced ));if len (_dfced )< int (_fdafg -_gfda +1){_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dfced ),255-32+1);
return nil ,_fdb .ErrRangeError ;};for _eecb :=_gfda ;_eecb <=_fdafg ;_eecb ++{_fgda ._fgfcb [_eecb ]=_dfced [_eecb -_gfda ];};_fgda .Encoding =_fdb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_eccd :=&PdfFontDescriptor {};
_eccd .FontName =_fdb .MakeName (_dfdb .PostScriptName );_eccd .Ascent =_fdb .MakeFloat (_afcgg *float64 (_dfdb .TypoAscender ));_eccd .Descent =_fdb .MakeFloat (_afcgg *float64 (_dfdb .TypoDescender ));_eccd .CapHeight =_fdb .MakeFloat (_afcgg *float64 (_dfdb .CapHeight ));
_eccd .FontBBox =_fdb .MakeArrayFromFloats ([]float64 {_afcgg *float64 (_dfdb .Xmin ),_afcgg *float64 (_dfdb .Ymin ),_afcgg *float64 (_dfdb .Xmax ),_afcgg *float64 (_dfdb .Ymax )});_eccd .ItalicAngle =_fdb .MakeFloat (_dfdb .ItalicAngle );_eccd .MissingWidth =_fdb .MakeFloat (_afcgg *float64 (_dfdb .Widths [0]));
_gdggb ,_eccfe :=_fdb .MakeStream (_gfedg ,_fdb .NewFlateEncoder ());if _eccfe !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_eccfe );
return nil ,_eccfe ;};_gdggb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fdb .MakeInteger (int64 (len (_gfedg ))));_eccd .FontFile2 =_gdggb ;if _dfdb .Bold {_eccd .StemV =_fdb .MakeInteger (120);}else {_eccd .StemV =_fdb .MakeInteger (70);
};_fcdbb :=_bege ;if _dfdb .IsFixedPitch {_fcdbb |=_bgede ;};if _dfdb .ItalicAngle !=0{_fcdbb |=_fcddf ;};_eccd .Flags =_fdb .MakeInteger (int64 (_fcdbb ));_fgda ._ecde =_eccd ;_gdeba :=&PdfFont {_babcd :_fgda };return _gdeba ,nil ;};func (_ebgcd *PdfReader )newPdfSignatureFromIndirect (_agcd *_fdb .PdfIndirectObject )(*PdfSignature ,error ){_bfcag ,_ggecd :=_agcd .PdfObject .(*_fdb .PdfObjectDictionary );
if !_ggecd {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fdga ,_aedafb :=_ebgcd ._ggdg .GetModelFromPrimitive (_agcd ).(*PdfSignature );_aedafb {return _fdga ,nil ;};_gfag :=&PdfSignature {};_gfag ._eeabe =_agcd ;_gfag .Type ,_ =_fdb .GetName (_bfcag .Get ("\u0054\u0079\u0070\u0065"));
_gfag .Filter ,_ggecd =_fdb .GetName (_bfcag .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_ggecd {_aa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gfag .SubFilter ,_ =_fdb .GetName (_bfcag .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_gfag .Contents ,_ggecd =_fdb .GetString (_bfcag .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_ggecd {_aa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _ebegb ,_ccbca :=_fdb .GetArray (_bfcag .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ccbca {_gfag .Reference =_fdb .MakeArray ();for _ ,_gcbbb :=range _ebegb .Elements (){_gecde ,_dcde :=_fdb .GetDict (_gcbbb );
if !_dcde {_aa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_ebgge ,_ffecd :=_ebgcd .newPdfSignatureReferenceFromDict (_gecde );if _ffecd !=nil {return nil ,_ffecd ;};_gfag .Reference .Append (_ebgge .ToPdfObject ());};};_gfag .Cert =_bfcag .Get ("\u0043\u0065\u0072\u0074");_gfag .ByteRange ,_ =_fdb .GetArray (_bfcag .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_gfag .Changes ,_ =_fdb .GetArray (_bfcag .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_gfag .Name ,_ =_fdb .GetString (_bfcag .Get ("\u004e\u0061\u006d\u0065"));_gfag .M ,_ =_fdb .GetString (_bfcag .Get ("\u004d"));_gfag .Location ,_ =_fdb .GetString (_bfcag .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_gfag .Reason ,_ =_fdb .GetString (_bfcag .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_gfag .ContactInfo ,_ =_fdb .GetString (_bfcag .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_gfag .R ,_ =_fdb .GetInt (_bfcag .Get ("\u0052"));
_gfag .V ,_ =_fdb .GetInt (_bfcag .Get ("\u0056"));_gfag .PropBuild ,_ =_fdb .GetDict (_bfcag .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_gfag .PropAuthTime ,_ =_fdb .GetInt (_bfcag .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_gfag .PropAuthType ,_ =_fdb .GetName (_bfcag .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_ebgcd ._ggdg .Register (_agcd ,_gfag );return _gfag ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fdb .PdfObject ;Volume _fdb .PdfObject ;Synchronous _fdb .PdfObject ;Repeat _fdb .PdfObject ;Mix _fdb .PdfObject ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gceg *PdfPage )GetContentStreamObjs ()[]_fdb .PdfObject {if _gceg .Contents ==nil {return nil ;};_fbca :=_fdb .TraceToDirectObject (_gceg .Contents );if _cfef ,_gfcf :=_fbca .(*_fdb .PdfObjectArray );_gfcf {return _cfef .Elements ();};return []_fdb .PdfObject {_fbca };
};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gfafd *PdfReader )PageFromIndirectObject (ind *_fdb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gfafd .PageList )!=len (_gfafd ._dbged ){return nil ,0,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _ggbcf ,_dceab :=range _gfafd ._dbged {if _dceab ==ind {return _gfafd .PageList [_ggbcf ],_ggbcf +1,nil ;};};return nil ,0,_ee .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ebbaa *PdfPageResources )GetXObjectImageByName (keyName _fdb .PdfObjectName )(*XObjectImage ,error ){_ddaa ,_accab :=_ebbaa .GetXObjectByName (keyName );if _ddaa ==nil {return nil ,nil ;};if _accab !=XObjectTypeImage {return nil ,_ee .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_bbffb ,_bbbcb :=NewXObjectImageFromStream (_ddaa );if _bbbcb !=nil {return nil ,_bbbcb ;};return _bbffb ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_faf *PdfAppender )UpdatePage (page *PdfPage ){_faf .updateObjectsDeep (page .ToPdfObject (),nil )};func (_fgbac fontCommon )coreString ()string {_feebg :="";if _fgbac ._ecde !=nil {_feebg =_fgbac ._ecde .String ();};return _d .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fgbac ._eaae ,_fgbac ._gfdda ,_fgbac ._dgdbc ,_fgbac ._fggb ,_fgbac ._fcgga !=nil ,_fgbac .fontFlags (),_feebg );
};func (_ffgfe *LTV )getOCSPs (_fcbe []*_fa .Certificate ,_febf map[string ]*_fa .Certificate )([][]byte ,error ){_eefeg :=make ([][]byte ,0,len (_fcbe ));for _ ,_dega :=range _fcbe {for _ ,_fced :=range _dega .OCSPServer {if _ffgfe .CertClient .IsCA (_dega ){continue ;
};_abga ,_dgebg :=_febf [_dega .Issuer .CommonName ];if !_dgebg {_aa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_afebc ,_cfbgd :=_ffgfe .OCSPClient .MakeRequest (_fced ,_dega ,_abga );if _cfbgd !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cfbgd );
continue ;};_eefeg =append (_eefeg ,_afebc );};};return _eefeg ,nil ;};func (_facac *PdfWriter )checkPendingObjects (){for _fgced ,_cbecf :=range _facac ._eebcf {if !_facac .hasObject (_fgced ){_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fgced ,_fgced ,_fgced );
for _ ,_bfecg :=range _cbecf {for _ ,_eceag :=range _bfecg .Keys (){_dgbcf :=_bfecg .Get (_eceag );if _dgbcf ==_fgced {_aa .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_bfecg .Set (_eceag ,_fdb .MakeNull ());break ;};};};};};};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dccc DefaultImageHandler )NewGrayImageFromGoImage (goimg _bd .Image )(*Image ,error ){_abee :=goimg .Bounds ();_agecd :=&Image {Width :int64 (_abee .Dx ()),Height :int64 (_abee .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _gcec :=goimg .(type ){case *_bd .Gray :if len (_gcec .Pix )!=_abee .Dx ()*_abee .Dy (){_gecdf ,_afgec :=_ff .GrayConverter .Convert (goimg );
if _afgec !=nil {return nil ,_afgec ;};_agecd .Data =_gecdf .Pix ();}else {_agecd .Data =_gcec .Pix ;};case *_bd .Gray16 :_agecd .BitsPerComponent =16;if len (_gcec .Pix )!=_abee .Dx ()*_abee .Dy ()*2{_bfgb ,_dead :=_ff .Gray16Converter .Convert (goimg );
if _dead !=nil {return nil ,_dead ;};_agecd .Data =_bfgb .Pix ();}else {_agecd .Data =_gcec .Pix ;};case _ff .Image :_gagb :=_gcec .Base ();if _gagb .ColorComponents ==1{_agecd .BitsPerComponent =int64 (_gagb .BitsPerComponent );_agecd .Data =_gagb .Data ;
return _agecd ,nil ;};_gccf ,_bdecf :=_ff .GrayConverter .Convert (goimg );if _bdecf !=nil {return nil ,_bdecf ;};_agecd .Data =_gccf .Pix ();default:_befg ,_egbce :=_ff .GrayConverter .Convert (goimg );if _egbce !=nil {return nil ,_egbce ;};_agecd .Data =_befg .Pix ();
};return _agecd ,nil ;};var _baeg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ccedfa *PdfWriter )SetRotation (rotate int64 )error {_ffgeb ,_ceaec :=_fdb .GetDict (_ccedfa ._ffacb );if !_ceaec {return ErrTypeCheck ;};_ffgeb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fdb .MakeInteger (rotate ));return nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fbge *Outline )Insert (index uint ,item *OutlineItem ){_deefd :=uint (len (_fbge .Entries ));if index > _deefd {index =_deefd ;};_fbge .Entries =append (_fbge .Entries [:index ],append ([]*OutlineItem {item },_fbge .Entries [index :]...)...);};func _fcged (_geafg *_fdb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gbdgb :=PdfShadingType2 {};
_bcgeg :=_geafg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bcgeg ==nil {_aa .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aagab ,_fdbge :=_bcgeg .(*_fdb .PdfObjectArray );if !_fdbge {_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcgeg );
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aagab .Len ()!=4{_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aagab .Len ());
return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_gbdgb .Coords =_aagab ;if _aegde :=_geafg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_aegde !=nil {_aegde =_fdb .TraceToDirectObject (_aegde );
_caccf ,_accfg :=_aegde .(*_fdb .PdfObjectArray );if !_accfg {_aa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aegde );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gbdgb .Domain =_caccf ;};_bcgeg =_geafg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bcgeg ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gbdgb .Function =[]PdfFunction {};if _bggcc ,_edaef :=_bcgeg .(*_fdb .PdfObjectArray );_edaef {for _ ,_acfeb :=range _bggcc .Elements (){_babcb ,_cbgbf :=_cfgbc (_acfeb );if _cbgbf !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbgbf );
return nil ,_cbgbf ;};_gbdgb .Function =append (_gbdgb .Function ,_babcb );};}else {_dcbd ,_eaage :=_cfgbc (_bcgeg );if _eaage !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eaage );
return nil ,_eaage ;};_gbdgb .Function =append (_gbdgb .Function ,_dcbd );};if _gcegd :=_geafg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gcegd !=nil {_gcegd =_fdb .TraceToDirectObject (_gcegd );_egegf ,_feded :=_gcegd .(*_fdb .PdfObjectArray );if !_feded {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcegd );
return nil ,_fdb .ErrTypeError ;};if _egegf .Len ()!=2{_aa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_egegf .Len ());return nil ,ErrInvalidAttribute ;
};_gbdgb .Extend =_egegf ;};return &_gbdgb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bagfb *PdfShadingType6 )ToPdfObject ()_fdb .PdfObject {_bagfb .PdfShading .ToPdfObject ();_bffdd ,_daad :=_bagfb .getShadingDict ();if _daad !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bagfb .BitsPerCoordinate !=nil {_bffdd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bagfb .BitsPerCoordinate );};if _bagfb .BitsPerComponent !=nil {_bffdd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bagfb .BitsPerComponent );
};if _bagfb .BitsPerFlag !=nil {_bffdd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bagfb .BitsPerFlag );};if _bagfb .Decode !=nil {_bffdd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bagfb .Decode );};if _bagfb .Function !=nil {if len (_bagfb .Function )==1{_bffdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bagfb .Function [0].ToPdfObject ());
}else {_badac :=_fdb .MakeArray ();for _ ,_cecc :=range _bagfb .Function {_badac .Append (_cecc .ToPdfObject ());};_bffdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_badac );};};return _bagfb ._dcfdb ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_aabcd int64 ;_gdgeae int64 ;_dgfdg int64 ;_dcdgg int64 ;_gece int64 ;_bfegga int64 ;_gcddcc byte ;_dbbad int64 ;_gfacg int64 ;};func (_geegd *Image )resampleLowBits (_babg []uint32 ){_bdae :=_ff .BytesPerLine (int (_geegd .Width ),int (_geegd .BitsPerComponent ),_geegd .ColorComponents );
_dceg :=make ([]byte ,_geegd .ColorComponents *_bdae *int (_geegd .Height ));_gcafg :=int (_geegd .BitsPerComponent )*_geegd .ColorComponents *int (_geegd .Width );_faabd :=uint8 (8);var (_efed ,_gaabc int ;_degfbf uint32 ;);for _caaa :=0;_caaa < int (_geegd .Height );
_caaa ++{_gaabc =_caaa *_bdae ;for _dedc :=0;_dedc < _gcafg ;_dedc ++{_degfbf =_babg [_efed ];_faabd -=uint8 (_geegd .BitsPerComponent );_dceg [_gaabc ]|=byte (_degfbf )<<_faabd ;if _faabd ==0{_faabd =8;_gaabc ++;};_efed ++;};};_geegd .Data =_dceg ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gaabg *Image )GetParamsDict ()*_fdb .PdfObjectDictionary {_bbcda :=_fdb .MakeDict ();_bbcda .Set ("\u0057\u0069\u0064t\u0068",_fdb .MakeInteger (_gaabg .Width ));_bbcda .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fdb .MakeInteger (_gaabg .Height ));
_bbcda .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fdb .MakeInteger (int64 (_gaabg .ColorComponents )));_bbcda .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdb .MakeInteger (_gaabg .BitsPerComponent ));
return _bbcda ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bffc *PdfOutline )GetContainingPdfObject ()_fdb .PdfObject {return _bffc ._edgb };func _cddf (_caada _fdb .PdfObject ,_ffgde bool )(*PdfFont ,error ){_dgee ,_bbba ,_decgd :=_gafaa (_caada );if _dgee !=nil {_efcf (_dgee );};if _decgd !=nil {if _decgd ==ErrType1CFontNotSupported {_abeg ,_feeaa :=_gfbb (_dgee ,_bbba ,nil );
if _feeaa !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bbba ,_feeaa );
return nil ,_decgd ;};return &PdfFont {_babcd :_abeg },_decgd ;};return nil ,_decgd ;};_dgaae :=&PdfFont {};switch _bbba ._eaae {case "\u0054\u0079\u0070e\u0030":if !_ffgde {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbba );
return nil ,_ee .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cccgf ,_dacae :=_bgbbgb (_dgee ,_bbba );if _dacae !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbba ,_dacae );
return nil ,_dacae ;};_dgaae ._babcd =_cccgf ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _cdfdf *pdfFontSimple ;_fegg ,_cebc :=_fc .NewStdFontByName (_fc .StdFontName (_bbba ._gfdda ));
if _cebc {_gbbf :=_agff (_fegg );_dgaae ._babcd =&_gbbf ;_ffgc :=_fdb .TraceToDirectObject (_gbbf .ToPdfObject ());_geabf ,_ggbbe ,_egcaf :=_gafaa (_ffgc );if _egcaf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bbba ,_gbbf );
return nil ,_egcaf ;};for _ ,_dgcbg :=range _dgee .Keys (){_geabf .Set (_dgcbg ,_dgee .Get (_dgcbg ));};_cdfdf ,_egcaf =_gfbb (_geabf ,_ggbbe ,_gbbf ._dfgdg );if _egcaf !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bbba ,_gbbf );
return nil ,_egcaf ;};_cdfdf ._fgfcb =_gbbf ._fgfcb ;_cdfdf ._gabe =_gbbf ._gabe ;if _cdfdf ._dbddc ==nil {_cdfdf ._dbddc =_gbbf ._dbddc ;};}else {_cdfdf ,_decgd =_gfbb (_dgee ,_bbba ,nil );if _decgd !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bbba ,_decgd );
return nil ,_decgd ;};};_decgd =_cdfdf .addEncoding ();if _decgd !=nil {return nil ,_decgd ;};if _cebc {_cdfdf .updateStandard14Font ();};if _cebc &&_cdfdf ._cafgd ==nil &&_cdfdf ._dfgdg ==nil {_aa .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdfdf );
_aa .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_fegg );};if len (_cdfdf ._fgfcb )==0{_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_cdfdf );};_dgaae ._babcd =_cdfdf ;
case "\u0054\u0079\u0070e\u0033":_ffed ,_cabgd :=_cbgfa (_dgee ,_bbba );if _cabgd !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_cabgd );
return nil ,_cabgd ;};_dgaae ._babcd =_ffed ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fbbc ,_gcbcf :=_adgbe (_dgee ,_bbba );if _gcbcf !=nil {_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_gcbcf );
return nil ,_gcbcf ;};_dgaae ._babcd =_fbbc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gfea ,_dede :=_geadc (_dgee ,_bbba );if _dede !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbba ,_dede );
return nil ,_dede ;};_dgaae ._babcd =_gfea ;default:_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bbba );
return nil ,_d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbba );};return _dgaae ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_edda *_fdb .PdfIndirectObject ;_ffacb *_fdb .PdfIndirectObject ;_fdbff map[_fdb .PdfObject ]struct{};_gbabc []_fdb .PdfObject ;_fbeb map[_fdb .PdfObject ]struct{};_gaabe []*_fdb .PdfIndirectObject ;_fcbdb *PdfOutlineTreeNode ;_gbged *_fdb .PdfObjectDictionary ;
_dgeag []_fdb .PdfObject ;_fecbc *_fdb .PdfIndirectObject ;_bddce *_c .Writer ;_cbgbba int64 ;_abgbd error ;_gbdba *_fdb .PdfCrypt ;_adefcf *_fdb .PdfObjectDictionary ;_dfbdf *_fdb .PdfIndirectObject ;_dcdea *_fdb .PdfObjectArray ;_bgagb _fdb .Version ;
_baedg *bool ;_eebcf map[_fdb .PdfObject ][]*_fdb .PdfObjectDictionary ;_cabbd *PdfAcroForm ;_ffbbb Optimizer ;_ffdfg StandardApplier ;_bbbeb map[int ]crossReference ;_cffde int64 ;ObjNumOffset int ;_ddfef bool ;_aaeba _fdb .XrefTable ;_faggc int64 ;_bgdgba int64 ;
_adeg map[_fdb .PdfObject ]int64 ;_egfdc map[_fdb .PdfObject ]struct{};_ccddc string ;_cbagec []*PdfOutputIntent ;_ddegb bool ;_aebag ,_gefad string ;};

// SetFlag sets the flag for the field.
func (_adba *PdfField )SetFlag (flag FieldFlag ){_adba .Ff =_fdb .MakeInteger (int64 (flag ))};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dacba .Lock ();defer _dacba .Unlock ();_cgfdb =title };func (_gdbc *PdfField )inherit (_bfca func (*PdfField )bool )(bool ,error ){_dbddb :=map[*PdfField ]bool {};_cbc :=false ;_dgge :=_gdbc ;for _dgge !=nil {if _ ,_bdac :=_dbddb [_dgge ];
_bdac {return false ,_ee .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_fgcdf :=_bfca (_dgge );if _fgcdf {_cbc =true ;break ;};_dbddb [_dgge ]=true ;_dgge =_dgge .Parent ;};return _cbc ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_bdgb *PdfAnnotationCaret )ToPdfObject ()_fdb .PdfObject {_bdgb .PdfAnnotation .ToPdfObject ();_beee :=_bdgb ._cgbd ;_afa :=_beee .PdfObject .(*_fdb .PdfObjectDictionary );_bdgb .PdfAnnotationMarkup .appendToPdfDictionary (_afa );_afa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0043\u0061\u0072e\u0074"));
_afa .SetIfNotNil ("\u0052\u0044",_bdgb .RD );_afa .SetIfNotNil ("\u0053\u0079",_bdgb .Sy );return _beee ;};func (_caeaeg *PdfWriter )flushWriter ()error {if _caeaeg ._abgbd ==nil {_caeaeg ._abgbd =_caeaeg ._bddce .Flush ();};return _caeaeg ._abgbd ;};
func (_cgdbc *PdfWriter )checkLicense ()error {_dbbee :=_bfg .GetLicenseKey ();if (_dbbee ==nil ||!_dbbee .IsLicensed ())&&!_fdada {_d .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_d .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ee .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func (_gedfd *PdfWriter )updateObjectNumbers (){_febga :=_gedfd .ObjNumOffset ;
_ebbcg :=0;for _ ,_dfabd :=range _gedfd ._gbabc {_dgggc :=int64 (_ebbcg +1+_febga );_bgbfe :=true ;if _gedfd ._ddfef {if _dcecc ,_agggc :=_gedfd ._adeg [_dfabd ];_agggc {_dgggc =_dcecc ;_bgbfe =false ;};};switch _geecc :=_dfabd .(type ){case *_fdb .PdfIndirectObject :_geecc .ObjectNumber =_dgggc ;
_geecc .GenerationNumber =0;case *_fdb .PdfObjectStream :_geecc .ObjectNumber =_dgggc ;_geecc .GenerationNumber =0;case *_fdb .PdfObjectStreams :_geecc .ObjectNumber =_dgggc ;_geecc .GenerationNumber =0;default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_geecc );
continue ;};if _bgbfe {_ebbcg ++;};};_gaaga :=func (_agdge _fdb .PdfObject )int64 {switch _cddd :=_agdge .(type ){case *_fdb .PdfIndirectObject :return _cddd .ObjectNumber ;case *_fdb .PdfObjectStream :return _cddd .ObjectNumber ;case *_fdb .PdfObjectStreams :return _cddd .ObjectNumber ;
};return 0;};_gg .SliceStable (_gedfd ._gbabc ,func (_fbdec ,_gebcaf int )bool {return _gaaga (_gedfd ._gbabc [_fbdec ])< _gaaga (_gedfd ._gbabc [_gebcaf ])});};

// ToPdfObject returns a PDF object representation of the outline.
func (_dabc *Outline )ToPdfObject ()_fdb .PdfObject {return _dabc .ToPdfOutline ().ToPdfObject ()};

// Val returns the value of the color.
func (_daaf *PdfColorCalGray )Val ()float64 {return float64 (*_daaf )};func (_gbdgcd *PdfWriter )optimize ()error {if _gbdgcd ._ffbbb ==nil {return nil ;};var _eddea error ;_gbdgcd ._gbabc ,_eddea =_gbdgcd ._ffbbb .Optimize (_gbdgcd ._gbabc );if _eddea !=nil {return _eddea ;
};_bffca :=make (map[_fdb .PdfObject ]struct{},len (_gbdgcd ._gbabc ));for _ ,_gbede :=range _gbdgcd ._gbabc {_bffca [_gbede ]=struct{}{};};_gbdgcd ._fbeb =_bffca ;return nil ;};func (_efggf *PdfFunctionType0 )processSamples ()error {_bgda :=_cd .ResampleBytes (_efggf ._affac ,_efggf .BitsPerSample );
_efggf ._acdaa =_bgda ;return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bbeag *PdfReader )CheckAccessRights (password []byte )(bool ,_bf .Permissions ,error ){return _bbeag ._dbbec .CheckAccessRights (password );};func (_feba *PdfAppender )replaceObject (_feeg ,_febag _fdb .PdfObject ){switch _gcdgb :=_feeg .(type ){case *_fdb .PdfIndirectObject :_feba ._eaa [_febag ]=_gcdgb .ObjectNumber ;
case *_fdb .PdfObjectStream :_feba ._eaa [_febag ]=_gcdgb .ObjectNumber ;};};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_deafb *PdfWriter )SetDocInfo (info *PdfInfo ){_deafb .setDocInfo (info .ToPdfObject ())};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dacba .Lock ();defer _dacba .Unlock ();_bacfc =keywords };

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_caga *PdfAcroForm )GetContainingPdfObject ()_fdb .PdfObject {return _caga ._fdbdd };func (_gbga *PdfWriter )setDocInfo (_cgbe _fdb .PdfObject ){if _gbga .hasObject (_gbga ._fecbc ){delete (_gbga ._fbeb ,_gbga ._fecbc );delete (_gbga ._egfdc ,_gbga ._fecbc );
for _dcagf ,_cgegb :=range _gbga ._gbabc {if _cgegb ==_gbga ._fecbc {copy (_gbga ._gbabc [_dcagf :],_gbga ._gbabc [_dcagf +1:]);_gbga ._gbabc [len (_gbga ._gbabc )-1]=nil ;_gbga ._gbabc =_gbga ._gbabc [:len (_gbga ._gbabc )-1];break ;};};};_bcbcg :=_fdb .PdfIndirectObject {};
_bcbcg .PdfObject =_cgbe ;_gbga ._fecbc =&_bcbcg ;_gbga .addObject (&_bcbcg );};

// ToPdfObject implements interface PdfModel.
func (_cbgcd *PdfAnnotationSquiggly )ToPdfObject ()_fdb .PdfObject {_cbgcd .PdfAnnotation .ToPdfObject ();_dcg :=_cbgcd ._cgbd ;_cgdf :=_dcg .PdfObject .(*_fdb .PdfObjectDictionary );_cbgcd .PdfAnnotationMarkup .appendToPdfDictionary (_cgdf );_cgdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_cgdf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cbgcd .QuadPoints );return _dcg ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_abddg PdfOutputIntentType )String ()string {switch _abddg {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// SetReason sets the `Reason` field of the signature.
func (_bdbcb *PdfSignature )SetReason (reason string ){_bdbcb .Reason =_fdb .MakeString (reason )};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fdb .PdfObjectArray ;TI *_fdb .PdfObjectInteger ;I *_fdb .PdfObjectArray ;};

// ToPdfObject returns a stream object.
func (_gbgce *XObjectImage )ToPdfObject ()_fdb .PdfObject {_ddca :=_gbgce ._aagea ;_ddcgf :=_ddca .PdfObjectDictionary ;if _gbgce .Filter !=nil {_ddcgf =_gbgce .Filter .MakeStreamDict ();_ddca .PdfObjectDictionary =_ddcgf ;};_ddcgf .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ddcgf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0049\u006d\u0061g\u0065"));_ddcgf .Set ("\u0057\u0069\u0064t\u0068",_fdb .MakeInteger (*(_gbgce .Width )));_ddcgf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fdb .MakeInteger (*(_gbgce .Height )));
if _gbgce .BitsPerComponent !=nil {_ddcgf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fdb .MakeInteger (*(_gbgce .BitsPerComponent )));};if _gbgce .ColorSpace !=nil {_ddcgf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gbgce .ColorSpace .ToPdfObject ());
};_ddcgf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gbgce .Intent );_ddcgf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gbgce .ImageMask );_ddcgf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gbgce .Mask );_ggece :=_ddcgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _gbgce .Decode ==nil &&_ggece {_ddcgf .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _gbgce .Decode !=nil {_ddcgf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gbgce .Decode );};_ddcgf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gbgce .Interpolate );
_ddcgf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gbgce .Alternatives );_ddcgf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gbgce .SMask );_ddcgf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gbgce .SMaskInData );
_ddcgf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gbgce .Matte );_ddcgf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbgce .Name );_ddcgf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gbgce .StructParent );_ddcgf .SetIfNotNil ("\u0049\u0044",_gbgce .ID );
_ddcgf .SetIfNotNil ("\u004f\u0050\u0049",_gbgce .OPI );_ddcgf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gbgce .Metadata );_ddcgf .SetIfNotNil ("\u004f\u0043",_gbgce .OC );_ddcgf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_gbgce .Stream ))));
_ddca .Stream =_gbgce .Stream ;return _ddca ;};func (_fabf *PdfReader )newPdfAnnotationSquareFromDict (_agc *_fdb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gbe :=PdfAnnotationSquare {};_gcg ,_gddb :=_fabf .newPdfAnnotationMarkupFromDict (_agc );
if _gddb !=nil {return nil ,_gddb ;};_gbe .PdfAnnotationMarkup =_gcg ;_gbe .BS =_agc .Get ("\u0042\u0053");_gbe .IC =_agc .Get ("\u0049\u0043");_gbe .BE =_agc .Get ("\u0042\u0045");_gbe .RD =_agc .Get ("\u0052\u0044");return &_gbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bacb *PdfAnnotationRichMedia )ToPdfObject ()_fdb .PdfObject {_bacb .PdfAnnotation .ToPdfObject ();_eegc :=_bacb ._cgbd ;_degfb :=_eegc .PdfObject .(*_fdb .PdfObjectDictionary );_degfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_degfb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bacb .RichMediaSettings );_degfb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bacb .RichMediaContent );
return _eegc ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_fdecg *modelManager )GetModelFromPrimitive (primitive _fdb .PdfObject )PdfModel {model ,_fbadd :=_fdecg ._abfff [primitive ];if !_fbadd {return nil ;};return model ;};

// Encoder returns the font's text encoder.
func (_bcca *PdfFont )Encoder ()_eb .TextEncoder {_baec :=_bcca .actualFont ();if _baec ==nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bcca ._babcd );
return nil ;};return _baec .Encoder ();};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gccc FieldFlag )Has (fl FieldFlag )bool {return (_gccc .Mask ()&fl .Mask ())> 0};

// SetAlpha sets the alpha layer for the image.
func (_eddba *Image )SetAlpha (alpha []byte ){_eddba ._dcaf =alpha };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ebbac *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _acdee []*PdfField ;if _ebbac .AcroForm !=nil {_acdee =_ebbac .AcroForm .AllFields ();};_afea :=make (map[*PdfField ]struct{},len (_acdee ));for _ ,_afdea :=range _acdee {_afea [_afdea ]=struct{}{};
};for _ ,_agfdf :=range _ebbac .PageList {_faagg ,_ceecf :=_agfdf .GetAnnotations ();if _ceecf !=nil {return false ,_ceecf ;};for _ ,_dadfc :=range _faagg {_faagc ,_gebba :=_dadfc .GetContext ().(*PdfAnnotationWidget );if !_gebba {continue ;};_fecgg :=_faagc .Field ();
if _fecgg ==nil {return true ,nil ;};if _ ,_eafc :=_afea [_fecgg ];!_eafc {return true ,nil ;};};};return false ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bbfg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbfg .AlternateSpace ==nil {return nil ,_ee .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bbfg .AlternateSpace .ColorToRGB (color );};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_dbbec *_fdb .PdfParser ;_efgfb _fdb .PdfObject ;_gbed *_fdb .PdfIndirectObject ;_eaeee *_fdb .PdfObjectDictionary ;_dbged []*_fdb .PdfIndirectObject ;PageList []*PdfPage ;_afebca int ;_adefa *_fdb .PdfObjectDictionary ;_fgaaa *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_gbee *Permissions ;_eegeda map[*PdfReader ]*PdfReader ;_eggca []*PdfReader ;_ggdg *modelManager ;_fbgeb bool ;_cccf map[_fdb .PdfObject ]struct{};_baaad _ca .ReadSeeker ;_afedgg string ;_caac bool ;_ffafd *ReaderOpts ;
_ecbf bool ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bc *PdfAction )GetContainingPdfObject ()_fdb .PdfObject {return _bc ._ae };

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gdceg *LTV )Enable (sig *PdfSignature ,extraCerts []*_fa .Certificate )error {if _becfc :=_gdceg .validateSig (sig );_becfc !=nil {return _becfc ;};_bfcd ,_dcbag :=_gdceg .generateVRIKey (sig );if _dcbag !=nil {return _dcbag ;};if _ ,_cebgb :=_gdceg ._cdbea .VRI [_bfcd ];
_cebgb &&_gdceg .SkipExisting {return nil ;};_gcefa ,_dcbag :=sig .GetCerts ();if _dcbag !=nil {return _dcbag ;};return _gdceg .enable (_gcefa ,extraCerts ,_bfcd );};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_fdb .PdfObjectName ;P *_fdb .PdfObjectInteger ;V *_fdb .PdfObjectName ;};func (_fcdca *PdfAcroForm )fill (_affa FieldValueProvider ,_dfad FieldAppearanceGenerator )error {if _fcdca ==nil {return nil ;};_dged ,_fegba :=_affa .FieldValues ();
if _fegba !=nil {return _fegba ;};for _ ,_ggdfa :=range _fcdca .AllFields (){_cagae :=_ggdfa .PartialName ();_fdcfe ,_cedcg :=_dged [_cagae ];if !_cedcg {if _bgcca ,_geebe :=_ggdfa .FullName ();_geebe ==nil {_fdcfe ,_cedcg =_dged [_bgcca ];};};if !_cedcg {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cagae );
continue ;};if _eaga :=_badc (_ggdfa ,_fdcfe );_eaga !=nil {return _eaga ;};if _dfad ==nil {continue ;};for _ ,_dagd :=range _ggdfa .Annotations {_gacfg ,_caegb :=_dfad .GenerateAppearanceDict (_fcdca ,_ggdfa ,_dagd );if _caegb !=nil {return _caegb ;};
_dagd .AP =_gacfg ;_dagd .ToPdfObject ();};};return nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_ffcg *PdfColorspaceICCBased )GetContainingPdfObject ()_fdb .PdfObject {return _ffcg ._daec };

// GetTrailer returns the PDF's trailer dictionary.
func (_bfefd *PdfReader )GetTrailer ()(*_fdb .PdfObjectDictionary ,error ){_agaag :=_bfefd ._dbbec .GetTrailer ();if _agaag ==nil {return nil ,_ee .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _agaag ,nil ;
};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_dbddda :=Permissions {};_dbddda .DocMDP =docMdp ;_dagge :=_fdb .MakeDict ();_dagge .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_dbddda ._cdfb =_dagge ;return &_dbddda ;};


// Y returns the value of the yellow component of the color.
func (_cgagf *PdfColorDeviceCMYK )Y ()float64 {return _cgagf [2]};

// GetFillImage get attached model.Image in push button.
func (_edagd *PdfFieldButton )GetFillImage ()*Image {if _edagd .IsPush (){return _edagd ._gaacf ;};return nil ;};func (_gcdb *PdfReader )newPdfAnnotationPolyLineFromDict (_cgf *_fdb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_beff :=PdfAnnotationPolyLine {};
_bbefa ,_cgfb :=_gcdb .newPdfAnnotationMarkupFromDict (_cgf );if _cgfb !=nil {return nil ,_cgfb ;};_beff .PdfAnnotationMarkup =_bbefa ;_beff .Vertices =_cgf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_beff .LE =_cgf .Get ("\u004c\u0045");
_beff .BS =_cgf .Get ("\u0042\u0053");_beff .IC =_cgf .Get ("\u0049\u0043");_beff .BE =_cgf .Get ("\u0042\u0045");_beff .IT =_cgf .Get ("\u0049\u0054");_beff .Measure =_cgf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_beff ,nil ;};func (_eeffa *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _eeffa ._dbbec .GetCrypter ()!=nil &&!_eeffa ._dbbec .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gbdbg :=_eeffa ._adefa ;_aaeg :=_gbdbg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _aaeg ==nil {return nil ,nil ;};_aa .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_defed :=_fdb .ResolveReference (_aaeg );
_aa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_defed );if _efdac :=_fdb .IsNullObject (_defed );_efdac {_aa .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_afae ,_ffgcd :=_defed .(*_fdb .PdfIndirectObject );if !_ffgcd {if _ ,_efabb :=_fdb .GetDict (_defed );!_efabb {_aa .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_aa .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_afae =_fdb .MakeIndirectObject (_defed );};_gbfad ,_ffgcd :=_afae .PdfObject .(*_fdb .PdfObjectDictionary );if !_ffgcd {return nil ,_ee .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_aa .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_gbfad );_cgbbe ,_ ,_edgdg :=_eeffa .buildOutlineTree (_afae ,nil ,nil ,nil );if _edgdg !=nil {return nil ,_edgdg ;};_aa .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cgbbe );
return _cgbbe ,nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_dbgbd *PdfSignature ,_efgfc Hasher ,_fffda SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func (_abfac *PdfWriter )writeBytes (_fdcgbe []byte ){if _abfac ._abgbd !=nil {return ;};_cdffb ,_edad :=_abfac ._bddce .Write (_fdcgbe );
_abfac ._cbgbba +=int64 (_cdffb );_abfac ._abgbd =_edad ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fbgbc *PdfFieldButton )GetType ()ButtonType {_fgeeg :=ButtonTypeCheckbox ;if _fbgbc .Ff !=nil {if (uint32 (*_fbgbc .Ff )&FieldFlagPushbutton .Mask ())> 0{_fgeeg =ButtonTypePush ;}else if (uint32 (*_fbgbc .Ff )&FieldFlagRadio .Mask ())> 0{_fgeeg =ButtonTypeRadio ;
};};return _fgeeg ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fdb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fdb .PdfObject ;A _fdb .PdfObject ;SE _fdb .PdfObject ;C _fdb .PdfObject ;F _fdb .PdfObject ;
_ecge *_fdb .PdfIndirectObject ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bfc :=NewPdfAnnotation ();_faad :=&PdfAnnotationText {};_faad .PdfAnnotation =_bfc ;_faad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfc .SetContext (_faad );return _faad ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_aggc :=PdfPage {};_aggc ._dacb =_fdb .MakeDict ();_aggc .Resources =NewPdfPageResources ();_fbbcd :=_fdb .PdfIndirectObject {};_fbbcd .PdfObject =_aggc ._dacb ;_aggc ._fccfd =&_fbbcd ;return &_aggc ;};func (_cgag *PdfReader )newPdfAnnotationScreenFromDict (_eegg *_fdb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_fgae :=PdfAnnotationScreen {};
_fgae .T =_eegg .Get ("\u0054");_fgae .MK =_eegg .Get ("\u004d\u004b");_fgae .A =_eegg .Get ("\u0041");_fgae .AA =_eegg .Get ("\u0041\u0041");return &_fgae ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fbeef :=&XObjectForm {};_gafgf :=&_fdb .PdfObjectStream {};_gafgf .PdfObjectDictionary =_fdb .MakeDict ();_fbeef ._eeafe =_gafgf ;return _fbeef ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fdb .PdfObject ;V _fdb .PdfObject ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_edbbc PdfModel ;_adccf _fdb .PdfObject ;};func (_dabfe Image )getBase ()_ff .ImageBase {return _ff .NewImageBase (int (_dabfe .Width ),int (_dabfe .Height ),int (_dabfe .BitsPerComponent ),_dabfe .ColorComponents ,_dabfe .Data ,_dabfe ._dcaf ,_dabfe ._gcgd );
};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// AllFields returns a flattened list of all fields in the form.
func (_bdec *PdfAcroForm )AllFields ()[]*PdfField {if _bdec ==nil {return nil ;};var _afbca []*PdfField ;if _bdec .Fields !=nil {for _ ,_gbecf :=range *_bdec .Fields {_afbca =append (_afbca ,_badeb (_gbecf )...);};};return _afbca ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dcdd *PdfPage )GetContainingPdfObject ()_fdb .PdfObject {return _dcdd ._fccfd };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fdb .PdfIndirectObject )*PdfOutlineItem {_gddgg :=PdfOutlineItem {};_gddgg ._fcfd =&_gddgg ;_gddgg .Title =_fdb .MakeString (title );_abcegg :=_fdb .MakeArray ();_abcegg .Append (page );_abcegg .Append (_fdb .MakeName ("\u0046\u0069\u0074"));
_gddgg .Dest =_abcegg ;return &_gddgg ;};func (_dfda *PdfShading )getShadingDict ()(*_fdb .PdfObjectDictionary ,error ){_decb :=_dfda ._dcfdb ;if _gfefa ,_agegc :=_decb .(*_fdb .PdfIndirectObject );_agegc {_cgdcf ,_agceg :=_gfefa .PdfObject .(*_fdb .PdfObjectDictionary );
if !_agceg {return nil ,_fdb .ErrTypeError ;};return _cgdcf ,nil ;}else if _cdda ,_cgdddc :=_decb .(*_fdb .PdfObjectStream );_cgdddc {return _cdda .PdfObjectDictionary ,nil ;}else if _dbaaa ,_abeec :=_decb .(*_fdb .PdfObjectDictionary );_abeec {return _dbaaa ,nil ;
}else {_aa .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fdb .ErrTypeError ;};};

// ToPdfObject implements interface PdfModel.
func (_dfd *PdfAnnotationPrinterMark )ToPdfObject ()_fdb .PdfObject {_dfd .PdfAnnotation .ToPdfObject ();_ggfg :=_dfd ._cgbd ;_cbef :=_ggfg .PdfObject .(*_fdb .PdfObjectDictionary );_cbef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_cbef .SetIfNotNil ("\u004d\u004e",_dfd .MN );return _ggfg ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_ddea *PdfReader )GetCatalogStructTreeRoot ()(_fdb .PdfObject ,bool ){if _ddea ._adefa ==nil {return nil ,false ;};_adeegf :=_ddea ._adefa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _adeegf ,_adeegf !=nil ;
};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fdb .PdfObjectStream ;OCSP []*_fdb .PdfObjectStream ;CRL []*_fdb .PdfObjectStream ;TU *_fdb .PdfObjectString ;TS *_fdb .PdfObjectString ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fdb .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _dgdb *_fdb .PdfIndirectObject ;var _bgae *_fdb .PdfObjectName ;var _feda *_fdb .PdfObjectArray ;if _bbfa ,_bdfg :=obj .(*_fdb .PdfIndirectObject );
_bdfg {_dgdb =_bbfa ;};obj =_fdb .TraceToDirectObject (obj );switch _dbce :=obj .(type ){case *_fdb .PdfObjectArray :_feda =_dbce ;case *_fdb .PdfObjectName :_bgae =_dbce ;};if _bgae !=nil {switch *_bgae {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_aa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bgae );return nil ,_abcg ;};};if _feda !=nil &&_feda .Len ()> 0{var _ccbb _fdb .PdfObject =_dgdb ;
if _dgdb ==nil {_ccbb =_feda ;};if _efad ,_degfg :=_fdb .GetName (_feda .Get (0));_degfg {switch _efad .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _feda .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _feda .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _feda .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ccgd (_ccbb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _eecef (_ccbb );
case "\u004c\u0061\u0062":return _ggac (_ccbb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bbbdc (_ccbb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _dacg (_ccbb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _fafe (_ccbb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dfge (_ccbb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cedf (_ccbb );default:_aa .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_efad );
};};};_aa .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ToPdfObject implements interface PdfModel.
func (_dbd *PdfAnnotationInk )ToPdfObject ()_fdb .PdfObject {_dbd .PdfAnnotation .ToPdfObject ();_ccgg :=_dbd ._cgbd ;_gaea :=_ccgg .PdfObject .(*_fdb .PdfObjectDictionary );_dbd .PdfAnnotationMarkup .appendToPdfDictionary (_gaea );_gaea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0049\u006e\u006b"));
_gaea .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_dbd .InkList );_gaea .SetIfNotNil ("\u0042\u0053",_dbd .BS );return _ccgg ;};func (_ccbab *PdfWriter )hasObject (_afcca _fdb .PdfObject )bool {_ ,_agadc :=_ccbab ._fbeb [_afcca ];return _agadc ;
};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_fcfef *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdbda :=vals [0];if _bdbda < 0.0||_bdbda > 100.0{_aa .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_bdbda );
return nil ,ErrColorOutOfRange ;};_ecgdc :=vals [1];_abec :=float64 (-100);_gfaac :=float64 (100);if len (_fcfef .Range )> 1{_abec =_fcfef .Range [0];_gfaac =_fcfef .Range [1];};if _ecgdc < _abec ||_ecgdc > _gfaac {_aa .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ecgdc ,_abec ,_gfaac );
return nil ,ErrColorOutOfRange ;};_cgfbc :=vals [2];_ega :=float64 (-100);_dcfg :=float64 (100);if len (_fcfef .Range )> 3{_ega =_fcfef .Range [2];_dcfg =_fcfef .Range [3];};if _cgfbc < _ega ||_cgfbc > _dcfg {_aa .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cgfbc ,_ega ,_dcfg );
return nil ,ErrColorOutOfRange ;};_gcga :=NewPdfColorLab (_bdbda ,_ecgdc ,_cgfbc );return _gcga ,nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gf .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_fdb .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_fdb .MakeInteger (int64 (permission )),V :_fdb .MakeName ("\u0031\u002e\u0032")};
};func _bdgcb (_gacfd *_fdb .PdfObjectStream )(*PdfFunctionType0 ,error ){_cgbdd :=&PdfFunctionType0 {};_cgbdd ._cgaea =_gacfd ;_caded :=_gacfd .PdfObjectDictionary ;_cbdge ,_gdbae :=_fdb .TraceToDirectObject (_caded .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fdb .PdfObjectArray );
if !_gdbae {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cbdge .Len ()< 0||_cbdge .Len ()%2!=0{_aa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cgbdd .NumInputs =_cbdge .Len ()/2;_agab ,_bdeab :=_cbdge .ToFloat64Array ();if _bdeab !=nil {return nil ,_bdeab ;};_cgbdd .Domain =_agab ;_cbdge ,_gdbae =_fdb .TraceToDirectObject (_caded .Get ("\u0052\u0061\u006eg\u0065")).(*_fdb .PdfObjectArray );
if !_gdbae {_aa .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cbdge .Len ()< 0||_cbdge .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cgbdd .NumOutputs =_cbdge .Len ()/2;_eeagd ,_bdeab :=_cbdge .ToFloat64Array ();if _bdeab !=nil {return nil ,_bdeab ;
};_cgbdd .Range =_eeagd ;_cbdge ,_gdbae =_fdb .TraceToDirectObject (_caded .Get ("\u0053\u0069\u007a\u0065")).(*_fdb .PdfObjectArray );if !_gdbae {_aa .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ffdc ,_bdeab :=_cbdge .ToIntegerArray ();
if _bdeab !=nil {return nil ,_bdeab ;};if len (_ffdc )!=_cgbdd .NumInputs {_aa .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbdd .Size =_ffdc ;_ggbbf ,_gdbae :=_fdb .TraceToDirectObject (_caded .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fdb .PdfObjectInteger );
if !_gdbae {_aa .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_ggbbf !=1&&*_ggbbf !=2&&*_ggbbf !=4&&*_ggbbf !=8&&*_ggbbf !=12&&*_ggbbf !=16&&*_ggbbf !=24&&*_ggbbf !=32{_aa .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_ggbbf );
return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbdd .BitsPerSample =int (*_ggbbf );_cgbdd .Order =1;_gbdfe ,_gdbae :=_fdb .TraceToDirectObject (_caded .Get ("\u004f\u0072\u0064e\u0072")).(*_fdb .PdfObjectInteger );
if _gdbae {if *_gbdfe !=1&&*_gbdfe !=3{_aa .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gbdfe );return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgbdd .Order =int (*_gbdfe );
};_cbdge ,_gdbae =_fdb .TraceToDirectObject (_caded .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fdb .PdfObjectArray );if _gdbae {_cceg ,_gdcdf :=_cbdge .ToFloat64Array ();if _gdcdf !=nil {return nil ,_gdcdf ;};_cgbdd .Encode =_cceg ;};_cbdge ,_gdbae =_fdb .TraceToDirectObject (_caded .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fdb .PdfObjectArray );
if _gdbae {_adfcb ,_gbcgd :=_cbdge .ToFloat64Array ();if _gbcgd !=nil {return nil ,_gbcgd ;};_cgbdd .Decode =_adfcb ;};_cfegc ,_bdeab :=_fdb .DecodeStream (_gacfd );if _bdeab !=nil {return nil ,_bdeab ;};_cgbdd ._affac =_cfegc ;return _cgbdd ,nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcad pdfFontSimple )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){if _fcad ._gabe !=nil {_fggbc ,_fgab :=_fcad ._gabe .Read (r );if _fgab {return _fggbc ,true ;};};_gfdb :=_fcad .Encoder ();if _gfdb ==nil {_aa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fcad );
return _fc .CharMetrics {},false ;};_ggbgb ,_dcfeab :=_gfdb .RuneToCharcode (r );if !_dcfeab {if r !=' '{_aa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fcad );
};return _fc .CharMetrics {},false ;};_aeac ,_dabe :=_fcad .GetCharMetrics (_ggbgb );return _aeac ,_dabe ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_eccf *PdfColorspaceCalRGB )ToPdfObject ()_fdb .PdfObject {_gbaeg :=&_fdb .PdfObjectArray {};_gbaeg .Append (_fdb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_eefg :=_fdb .MakeDict ();if _eccf .WhitePoint !=nil {_acfc :=_fdb .MakeArray (_fdb .MakeFloat (_eccf .WhitePoint [0]),_fdb .MakeFloat (_eccf .WhitePoint [1]),_fdb .MakeFloat (_eccf .WhitePoint [2]));
_eefg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_acfc );}else {_aa .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _eccf .BlackPoint !=nil {_adec :=_fdb .MakeArray (_fdb .MakeFloat (_eccf .BlackPoint [0]),_fdb .MakeFloat (_eccf .BlackPoint [1]),_fdb .MakeFloat (_eccf .BlackPoint [2]));_eefg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_adec );
};if _eccf .Gamma !=nil {_bgb :=_fdb .MakeArray (_fdb .MakeFloat (_eccf .Gamma [0]),_fdb .MakeFloat (_eccf .Gamma [1]),_fdb .MakeFloat (_eccf .Gamma [2]));_eefg .Set ("\u0047\u0061\u006dm\u0061",_bgb );};if _eccf .Matrix !=nil {_fgaea :=_fdb .MakeArray (_fdb .MakeFloat (_eccf .Matrix [0]),_fdb .MakeFloat (_eccf .Matrix [1]),_fdb .MakeFloat (_eccf .Matrix [2]),_fdb .MakeFloat (_eccf .Matrix [3]),_fdb .MakeFloat (_eccf .Matrix [4]),_fdb .MakeFloat (_eccf .Matrix [5]),_fdb .MakeFloat (_eccf .Matrix [6]),_fdb .MakeFloat (_eccf .Matrix [7]),_fdb .MakeFloat (_eccf .Matrix [8]));
_eefg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fgaea );};_gbaeg .Append (_eefg );if _eccf ._baea !=nil {_eccf ._baea .PdfObject =_gbaeg ;return _eccf ._baea ;};return _gbaeg ;};func (_dcdg *DSS )generateHashMap (_dbga []*_fdb .PdfObjectStream )(map[string ]*_fdb .PdfObjectStream ,error ){_cdbb :=map[string ]*_fdb .PdfObjectStream {};
for _ ,_adfad :=range _dbga {_efcb ,_deee :=_fdb .DecodeStream (_adfad );if _deee !=nil {return nil ,_deee ;};_cedfa ,_deee :=_ddbfgc (_efcb );if _deee !=nil {return nil ,_deee ;};_cdbb [string (_cedfa )]=_adfad ;};return _cdbb ,nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_gfaa *PdfReader )newPdfAnnotationStampFromDict (_fac *_fdb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fcgf :=PdfAnnotationStamp {};_bccg ,_egeg :=_gfaa .newPdfAnnotationMarkupFromDict (_fac );if _egeg !=nil {return nil ,_egeg ;
};_fcgf .PdfAnnotationMarkup =_bccg ;_fcgf .Name =_fac .Get ("\u004e\u0061\u006d\u0065");return &_fcgf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcf *PdfAnnotationUnderline )ToPdfObject ()_fdb .PdfObject {_gcf .PdfAnnotation .ToPdfObject ();_ccgc :=_gcf ._cgbd ;_agca :=_ccgc .PdfObject .(*_fdb .PdfObjectDictionary );_gcf .PdfAnnotationMarkup .appendToPdfDictionary (_agca );_agca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_agca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcf .QuadPoints );return _ccgc ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_decg :=&PdfColorspaceCalGray {};_decg .BlackPoint =[]float64 {0.0,0.0,0.0};_decg .Gamma =1;return _decg ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ggggf *PdfPageResources )GetPatternByName (keyName _fdb .PdfObjectName )(*PdfPattern ,bool ){if _ggggf .Pattern ==nil {return nil ,false ;};_cded ,_dgae :=_fdb .TraceToDirectObject (_ggggf .Pattern ).(*_fdb .PdfObjectDictionary );if !_dgae {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggggf .Pattern );
return nil ,false ;};if _acbeaf :=_cded .Get (keyName );_acbeaf !=nil {_gfeaf ,_acbbd :=_fgbca (_acbeaf );if _acbbd !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_acbbd );
return nil ,false ;};return _gfeaf ,true ;};return nil ,false ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fdb .PdfObjectArray ;Domain *_fdb .PdfObjectArray ;Function []PdfFunction ;Extend *_fdb .PdfObjectArray ;};func (_cac *PdfReader )newPdfAnnotationTrapNetFromDict (_dbg *_fdb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_cefg :=PdfAnnotationTrapNet {};
return &_cefg ,nil ;};func _ggac (_fbae _fdb .PdfObject )(*PdfColorspaceLab ,error ){_eadc :=NewPdfColorspaceLab ();if _dccf ,_edce :=_fbae .(*_fdb .PdfIndirectObject );_edce {_eadc ._eacf =_dccf ;};_fbae =_fdb .TraceToDirectObject (_fbae );_faaae ,_aeffe :=_fbae .(*_fdb .PdfObjectArray );
if !_aeffe {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _faaae .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_fbae =_fdb .TraceToDirectObject (_faaae .Get (0));_aedd ,_aeffe :=_fbae .(*_fdb .PdfObjectName );if !_aeffe {return nil ,_d .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_aedd !="\u004c\u0061\u0062"{return nil ,_d .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_fbae =_fdb .TraceToDirectObject (_faaae .Get (1));_bagde ,_aeffe :=_fbae .(*_fdb .PdfObjectDictionary );
if !_aeffe {return nil ,_d .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_fbae =_bagde .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fbae =_fdb .TraceToDirectObject (_fbae );_adef ,_aeffe :=_fbae .(*_fdb .PdfObjectArray );if !_aeffe {return nil ,_d .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _adef .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_cdcf ,_cffb :=_adef .GetAsFloat64Slice ();
if _cffb !=nil {return nil ,_cffb ;};_eadc .WhitePoint =_cdcf ;_fbae =_bagde .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fbae !=nil {_fbae =_fdb .TraceToDirectObject (_fbae );_bega ,_cdba :=_fbae .(*_fdb .PdfObjectArray );
if !_cdba {return nil ,_d .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _bega .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_aacdb ,_acbc :=_bega .GetAsFloat64Slice ();if _acbc !=nil {return nil ,_acbc ;};_eadc .BlackPoint =_aacdb ;};_fbae =_bagde .Get ("\u0052\u0061\u006eg\u0065");if _fbae !=nil {_fbae =_fdb .TraceToDirectObject (_fbae );_bbcdb ,_dggg :=_fbae .(*_fdb .PdfObjectArray );
if !_dggg {_aa .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbcdb .Len ()!=4{_aa .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_adcf ,_begf :=_bbcdb .GetAsFloat64Slice ();if _begf !=nil {return nil ,_begf ;};_eadc .Range =_adcf ;};return _eadc ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_cgg *PdfAnnotation )GetContext ()PdfModel {if _cgg ==nil {return nil ;};return _cgg ._abdg ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fdb .PdfObject ;H _fdb .PdfObject ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_caafa *PdfTransformParamsDocMDP )String ()string {return _d .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_caafa .Type ,_caafa .P ,_caafa .V );};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};type pdfFontSimple struct{fontCommon ;_gabca *_fdb .PdfIndirectObject ;_fgfcb map[_eb .CharCode ]float64 ;_cafgd _eb .TextEncoder ;_dfgdg _eb .TextEncoder ;_dbddc *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fdb .PdfObject ;LastChar _fdb .PdfObject ;Widths _fdb .PdfObject ;Encoding _fdb .PdfObject ;_gabe *_fc .RuneCharSafeMap ;};func (_fga *PdfReader )newPdfAnnotationMarkupFromDict (_aaeb *_fdb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dfac :=&PdfAnnotationMarkup {};
if _ggbg :=_aaeb .Get ("\u0054");_ggbg !=nil {_dfac .T =_ggbg ;};if _bcee :=_aaeb .Get ("\u0050\u006f\u0070u\u0070");_bcee !=nil {_bfe ,_dce :=_bcee .(*_fdb .PdfIndirectObject );if !_dce {if _ ,_gdff :=_bcee .(*_fdb .PdfObjectNull );!_gdff {return nil ,_ee .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_bae ,_aebg :=_fga .newPdfAnnotationFromIndirectObject (_bfe );if _aebg !=nil {return nil ,_aebg ;};if _bae !=nil {_fcgc ,_bcbb :=_bae ._abdg .(*PdfAnnotationPopup );if !_bcbb {return nil ,_ee .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dfac .Popup =_fcgc ;};};};if _dbb :=_aaeb .Get ("\u0043\u0041");_dbb !=nil {_dfac .CA =_dbb ;};if _bee :=_aaeb .Get ("\u0052\u0043");_bee !=nil {_dfac .RC =_bee ;};if _agbe :=_aaeb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_agbe !=nil {_dfac .CreationDate =_agbe ;};if _eebg :=_aaeb .Get ("\u0049\u0052\u0054");_eebg !=nil {_dfac .IRT =_eebg ;};if _cagg :=_aaeb .Get ("\u0053\u0075\u0062\u006a");_cagg !=nil {_dfac .Subj =_cagg ;};if _gab :=_aaeb .Get ("\u0052\u0054");_gab !=nil {_dfac .RT =_gab ;
};if _bfcb :=_aaeb .Get ("\u0049\u0054");_bfcb !=nil {_dfac .IT =_bfcb ;};if _ecad :=_aaeb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ecad !=nil {_dfac .ExData =_ecad ;};return _dfac ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_abbba *PdfPageResources )GetContainingPdfObject ()_fdb .PdfObject {return _abbba ._bcfeg };func _cfeg (_ffbgg _fdb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ecce :=&PdfColorspaceDeviceNAttributes {};var _edcdc *_fdb .PdfObjectDictionary ;
switch _dbeg :=_ffbgg .(type ){case *_fdb .PdfIndirectObject :_ecce ._dgcba =_dbeg ;var _fged bool ;_edcdc ,_fged =_dbeg .PdfObject .(*_fdb .PdfObjectDictionary );if !_fged {_aa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fdb .PdfObjectDictionary :_edcdc =_dbeg ;case *_fdb .PdfObjectReference :_bgab :=_dbeg .Resolve ();return _cfeg (_bgab );default:_aa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gdba :=_edcdc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gdba !=nil {_fcgfg ,_cedd :=_fdb .TraceToDirectObject (_gdba ).(*_fdb .PdfObjectName );if !_cedd {_aa .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ee .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ecce .Subtype =_fcgfg ;};if _abbeg :=_edcdc .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_abbeg !=nil {_ecce .Colorants =_abbeg ;};if _cebg :=_edcdc .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_cebg !=nil {_ecce .Process =_cebg ;};if _dbfg :=_edcdc .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dbfg !=nil {_ecce .MixingHints =_dbfg ;};return _ecce ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fdb .PdfObject ;PreserveRB _fdb .PdfObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_fcfd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_efdb *pdfCIDFontType0 )ToPdfObject ()_fdb .PdfObject {return _fdb .MakeNull ()};func _agff (_cabd _fc .StdFont )pdfFontSimple {_dfbe :=_cabd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_eaae :"\u0054\u0079\u0070e\u0031",_gfdda :_cabd .Name ()},_gabe :_cabd .GetMetricsTable (),_dbddc :&PdfFontDescriptor {FontName :_fdb .MakeName (string (_dfbe .Name )),FontFamily :_fdb .MakeName (_dfbe .Family ),FontWeight :_fdb .MakeFloat (float64 (_dfbe .Weight )),Flags :_fdb .MakeInteger (int64 (_dfbe .Flags )),FontBBox :_fdb .MakeArrayFromFloats (_dfbe .BBox [:]),ItalicAngle :_fdb .MakeFloat (_dfbe .ItalicAngle ),Ascent :_fdb .MakeFloat (_dfbe .Ascent ),Descent :_fdb .MakeFloat (_dfbe .Descent ),CapHeight :_fdb .MakeFloat (_dfbe .CapHeight ),XHeight :_fdb .MakeFloat (_dfbe .XHeight ),StemV :_fdb .MakeFloat (_dfbe .StemV ),StemH :_fdb .MakeFloat (_dfbe .StemH )},_dfgdg :_cabd .Encoder ()};
};func (_fccf *PdfReader )newPdfAnnotationPolygonFromDict (_cggd *_fdb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dcfe :=PdfAnnotationPolygon {};_acg ,_ggbaf :=_fccf .newPdfAnnotationMarkupFromDict (_cggd );if _ggbaf !=nil {return nil ,_ggbaf ;
};_dcfe .PdfAnnotationMarkup =_acg ;_dcfe .Vertices =_cggd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dcfe .LE =_cggd .Get ("\u004c\u0045");_dcfe .BS =_cggd .Get ("\u0042\u0053");_dcfe .IC =_cggd .Get ("\u0049\u0043");_dcfe .BE =_cggd .Get ("\u0042\u0045");
_dcfe .IT =_cggd .Get ("\u0049\u0054");_dcfe .Measure =_cggd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dcfe ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_fgeaf *DSS )GetContainingPdfObject ()_fdb .PdfObject {return _fgeaf ._bcfcg };type modelManager struct{_dbed map[PdfModel ]_fdb .PdfObject ;_abfff map[_fdb .PdfObject ]PdfModel ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;
PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fdb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_abccb *_fdb .PdfIndirectObject ;};func (_bfbac *PdfReader )resolveReference (_fadeeb *_fdb .PdfObjectReference )(_fdb .PdfObject ,bool ,error ){_fcdda ,_gaecfa :=_bfbac ._dbbec .ObjCache [int (_fadeeb .ObjectNumber )];
if !_gaecfa {_aa .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_fadeeb );_dfccb ,_cgggb :=_bfbac ._dbbec .LookupByReference (*_fadeeb );if _cgggb !=nil {return nil ,false ,_cgggb ;};
_bfbac ._dbbec .ObjCache [int (_fadeeb .ObjectNumber )]=_dfccb ;return _dfccb ,false ,nil ;};return _fcdda ,true ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bace *PdfBorderStyle )ToPdfObject ()_fdb .PdfObject {_fggdd :=_fdb .MakeDict ();if _bace ._dbff !=nil {if _gfee ,_eccc :=_bace ._dbff .(*_fdb .PdfIndirectObject );_eccc {_gfee .PdfObject =_fggdd ;};};_fggdd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _bace .W !=nil {_fggdd .Set ("\u0057",_fdb .MakeFloat (*_bace .W ));};if _bace .S !=nil {_fggdd .Set ("\u0053",_fdb .MakeName (_bace .S .GetPdfName ()));};if _bace .D !=nil {_fggdd .Set ("\u0044",_fdb .MakeArrayFromIntegers (*_bace .D ));};if _bace ._dbff !=nil {return _bace ._dbff ;
};return _fggdd ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_bdbbc *LTV )EnableChain (chain []*_fa .Certificate )error {return _bdbbc .enable (nil ,chain ,"")};

// C returns the value of the C component of the color.
func (_agdc *PdfColorCalRGB )C ()float64 {return _agdc [2]};

// ToPdfObject implements interface PdfModel.
func (_ad *PdfActionResetForm )ToPdfObject ()_fdb .PdfObject {_ad .PdfAction .ToPdfObject ();_efc :=_ad ._ae ;_caee :=_efc .PdfObject .(*_fdb .PdfObjectDictionary );_caee .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeResetForm )));_caee .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ad .Fields );
_caee .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ad .Flags );return _efc ;};func (_dcdb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _dcdb ._ecde ==nil &&_dcdb .DescendantFont !=nil {return _dcdb .DescendantFont .FontDescriptor ();};return _dcdb ._ecde ;
};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gade *PdfPageResources )HasColorspaceByName (keyName _fdb .PdfObjectName )bool {_dcfbg ,_eebc :=_gade .GetColorspaces ();if _eebc !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eebc );
return false ;};if _dcfbg ==nil {return false ;};_ ,_gcbfd :=_dcfbg .Colorspaces [string (keyName )];return _gcbfd ;};func (_fcbfg *DSS )generateHashMaps ()error {_afda ,_afee :=_fcbfg .generateHashMap (_fcbfg .Certs );if _afee !=nil {return _afee ;};_bgdga ,_afee :=_fcbfg .generateHashMap (_fcbfg .OCSPs );
if _afee !=nil {return _afee ;};_daab ,_afee :=_fcbfg .generateHashMap (_fcbfg .CRLs );if _afee !=nil {return _afee ;};_fcbfg ._dbdd =_afda ;_fcbfg ._cebea =_bgdga ;_fcbfg ._aeba =_daab ;return nil ;};func (_cgcbg *PdfReader )buildPageList (_ggbag *_fdb .PdfIndirectObject ,_gcceb *_fdb .PdfIndirectObject ,_abgf map[_fdb .PdfObject ]struct{})error {if _ggbag ==nil {return nil ;
};if _ ,_cebeac :=_abgf [_ggbag ];_cebeac {_aa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ggbag .ObjectNumber );
return nil ;};_abgf [_ggbag ]=struct{}{};_bfba ,_ggdfd :=_ggbag .PdfObject .(*_fdb .PdfObjectDictionary );if !_ggdfd {return _ee .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_adaff ,_ggdfd :=(*_bfba ).Get ("\u0054\u0079\u0070\u0065").(*_fdb .PdfObjectName );
if !_ggdfd {if _bfba .Get ("\u004b\u0069\u0064\u0073")==nil {return _ee .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_aa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_adaff =_fdb .MakeName ("\u0050\u0061\u0067e\u0073");_bfba .Set ("\u0054\u0079\u0070\u0065",_adaff );};_aa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_adaff ,_ggbag );
if *_adaff =="\u0050\u0061\u0067\u0065"{_gbgd ,_ecaa :=_cgcbg .newPdfPageFromDict (_bfba );if _ecaa !=nil {return _ecaa ;};_gbgd .setContainer (_ggbag );if _gcceb !=nil {_bfba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcceb );};_cgcbg ._dbged =append (_cgcbg ._dbged ,_ggbag );
_cgcbg .PageList =append (_cgcbg .PageList ,_gbgd );return nil ;};if *_adaff !="\u0050\u0061\u0067e\u0073"{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_adaff );
return _ee .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gcceb !=nil {_bfba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcceb );};if !_cgcbg ._fbgeb {_ecgfe :=_cgcbg .traverseObjectData (_ggbag );if _ecgfe !=nil {return _ecgfe ;};};_gedfb ,_gaffd :=_cgcbg ._dbbec .Resolve (_bfba .Get ("\u004b\u0069\u0064\u0073"));
if _gaffd !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gaffd ;};var _dfggd *_fdb .PdfObjectArray ;
_dfggd ,_ggdfd =_gedfb .(*_fdb .PdfObjectArray );if !_ggdfd {_deafd ,_dafec :=_gedfb .(*_fdb .PdfIndirectObject );if !_dafec {return _ee .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_dfggd ,_ggdfd =_deafd .PdfObject .(*_fdb .PdfObjectArray );if !_ggdfd {return _ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_aa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dfggd );
for _bgbg ,_ebdf :=range _dfggd .Elements (){_ebecf ,_eeead :=_fdb .GetIndirect (_ebdf );if !_eeead {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ebecf );
return _ee .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dfggd .Set (_bgbg ,_ebecf );_gaffd =_cgcbg .buildPageList (_ebecf ,_ggbag ,_abgf );if _gaffd !=nil {return _gaffd ;
};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbe *PdfActionURI )ToPdfObject ()_fdb .PdfObject {_dbe .PdfAction .ToPdfObject ();_bbc :=_dbe ._ae ;_cfc :=_bbc .PdfObject .(*_fdb .PdfObjectDictionary );_cfc .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeURI )));_cfc .SetIfNotNil ("\u0055\u0052\u0049",_dbe .URI );
_cfc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_dbe .IsMap );return _bbc ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_faacb *PdfWriter )seekByName (_adfbd _fdb .PdfObject ,_cgfgd []string ,_cebbg string )([]_fdb .PdfObject ,error ){_aa .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_adfbd );
var _bebee []_fdb .PdfObject ;if _cbcg ,_gdda :=_adfbd .(*_fdb .PdfIndirectObject );_gdda {return _faacb .seekByName (_cbcg .PdfObject ,_cgfgd ,_cebbg );};if _acdgec ,_ddfefb :=_adfbd .(*_fdb .PdfObjectStream );_ddfefb {return _faacb .seekByName (_acdgec .PdfObjectDictionary ,_cgfgd ,_cebbg );
};if _gadfc ,_bdcdb :=_adfbd .(*_fdb .PdfObjectDictionary );_bdcdb {_aa .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fabbad :=range _gadfc .Keys (){_befad :=_gadfc .Get (_fabbad );if string (_fabbad )==_cebbg {_bebee =append (_bebee ,_befad );};for _ ,_dccfce :=range _cgfgd {if string (_fabbad )==_dccfce {_aa .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dccfce );
_abgfb ,_beaddd :=_faacb .seekByName (_befad ,_cgfgd ,_cebbg );if _beaddd !=nil {return _bebee ,_beaddd ;};_bebee =append (_bebee ,_abgfb ...);break ;};};};return _bebee ,nil ;};return _bebee ,nil ;};

// ToPdfObject implements model.PdfModel interface.
func (_efbfg *PdfOutputIntent )ToPdfObject ()_fdb .PdfObject {if _efbfg ._cfbba ==nil {_efbfg ._cfbba =_fdb .MakeDict ();};_ddgee :=_efbfg ._cfbba ;if _efbfg .Type !=""{_ddgee .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName (_efbfg .Type ));};_ddgee .Set ("\u0053",_fdb .MakeName (_efbfg .S .String ()));
if _efbfg .OutputCondition !=""{_ddgee .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fdb .MakeString (_efbfg .OutputCondition ));};_ddgee .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fdb .MakeString (_efbfg .OutputConditionIdentifier ));
_ddgee .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fdb .MakeString (_efbfg .RegistryName ));if _efbfg .Info !=""{_ddgee .Set ("\u0049\u006e\u0066\u006f",_fdb .MakeString (_efbfg .Info ));};if len (_efbfg .DestOutputProfile )!=0{_bbfdc ,_bdebe :=_fdb .MakeStream (_efbfg .DestOutputProfile ,_fdb .NewFlateEncoder ());
if _bdebe !=nil {_aa .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bdebe );
};_bbfdc .PdfObjectDictionary .Set ("\u004e",_fdb .MakeInteger (int64 (_efbfg .ColorComponents )));_acfga :=make ([]float64 ,_efbfg .ColorComponents *2);for _bfbe :=0;_bfbe < _efbfg .ColorComponents *2;_bfbe ++{_dcdaa :=0.0;if _bfbe %2!=0{_dcdaa =1.0;};
_acfga [_bfbe ]=_dcdaa ;};_bbfdc .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fdb .MakeArrayFromFloats (_acfga ));_ddgee .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_bbfdc );};return _ddgee ;
};

// SetFontByName sets the font specified by keyName to the given object.
func (_gbffc *PdfPageResources )SetFontByName (keyName _fdb .PdfObjectName ,obj _fdb .PdfObject )error {if _gbffc .Font ==nil {_gbffc .Font =_fdb .MakeDict ();};_cbgbg ,_cbeec :=_fdb .TraceToDirectObject (_gbffc .Font ).(*_fdb .PdfObjectDictionary );if !_cbeec {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fdb .TraceToDirectObject (_gbffc .Font ));
return _fdb .ErrTypeError ;};_cbgbg .Set (keyName ,obj );return nil ;};func _dabgb (_dggc StdFontName )(pdfFontSimple ,error ){_bfde ,_gdgf :=_fc .NewStdFontByName (_dggc );if !_gdgf {return pdfFontSimple {},ErrFontNotSupported ;};_fccc :=_agff (_bfde );
return _fccc ,nil ;};func _geggf (_efadbb *XObjectImage )error {if _efadbb .SMask ==nil {return nil ;};_cegd ,_afaec :=_efadbb .SMask .(*_fdb .PdfObjectStream );if !_afaec {_aa .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _fdb .ErrTypeError ;};_bgfcbe :=_cegd .PdfObjectDictionary ;_cffga :=_bgfcbe .Get ("\u004d\u0061\u0074t\u0065");if _cffga ==nil {return nil ;};_fcbcf ,_eedddd :=_afga (_cffga .(*_fdb .PdfObjectArray ));if _eedddd !=nil {return _eedddd ;};_gffgdd :=_fdb .MakeArrayFromFloats ([]float64 {_fcbcf });
_bgfcbe .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gffgdd );return nil ;};func (_feafba *PdfWriter )writeXRefStreams (_fbaea int ,_dcaed int64 )error {_bbbaa :=_fbaea +1;_feafba ._bbbeb [_bbbaa ]=crossReference {Type :1,ObjectNumber :_bbbaa ,Offset :_dcaed };
_ecadc :=_de .NewBuffer (nil );_eebfdc :=_fdb .MakeArray ();for _cdgfg :=0;_cdgfg <=_fbaea ;{for ;_cdgfg <=_fbaea ;_cdgfg ++{_bdfb ,_accb :=_feafba ._bbbeb [_cdgfg ];if _accb &&(!_feafba ._ddfef ||_feafba ._ddfef &&(_bdfb .Type ==1&&_bdfb .Offset >=_feafba ._bgdgba ||_bdfb .Type ==0)){break ;
};};var _dccba int ;for _dccba =_cdgfg +1;_dccba <=_fbaea ;_dccba ++{_gcfdd ,_gecea :=_feafba ._bbbeb [_dccba ];if _gecea &&(!_feafba ._ddfef ||_feafba ._ddfef &&(_gcfdd .Type ==1&&_gcfdd .Offset > _feafba ._bgdgba )){continue ;};break ;};_eebfdc .Append (_fdb .MakeInteger (int64 (_cdgfg )),_fdb .MakeInteger (int64 (_dccba -_cdgfg )));
for _ccgab :=_cdgfg ;_ccgab < _dccba ;_ccgab ++{_fcgfcf :=_feafba ._bbbeb [_ccgab ];switch _fcgfcf .Type {case 0:_f .Write (_ecadc ,_f .BigEndian ,byte (0));_f .Write (_ecadc ,_f .BigEndian ,uint32 (0));_f .Write (_ecadc ,_f .BigEndian ,uint16 (0xFFFF));
case 1:_f .Write (_ecadc ,_f .BigEndian ,byte (1));_f .Write (_ecadc ,_f .BigEndian ,uint32 (_fcgfcf .Offset ));_f .Write (_ecadc ,_f .BigEndian ,uint16 (_fcgfcf .Generation ));case 2:_f .Write (_ecadc ,_f .BigEndian ,byte (2));_f .Write (_ecadc ,_f .BigEndian ,uint32 (_fcgfcf .ObjectNumber ));
_f .Write (_ecadc ,_f .BigEndian ,uint16 (_fcgfcf .Index ));};};_cdgfg =_dccba +1;};_gegafa ,_ggded :=_fdb .MakeStream (_ecadc .Bytes (),_fdb .NewFlateEncoder ());if _ggded !=nil {return _ggded ;};_gegafa .ObjectNumber =int64 (_bbbaa );_gegafa .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0058\u0052\u0065\u0066"));
_gegafa .PdfObjectDictionary .Set ("\u0057",_fdb .MakeArray (_fdb .MakeInteger (1),_fdb .MakeInteger (4),_fdb .MakeInteger (2)));_gegafa .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_eebfdc );_gegafa .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fdb .MakeInteger (int64 (_bbbaa +1)));
_gegafa .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_feafba ._fecbc );_gegafa .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_feafba ._edda );if _feafba ._ddfef &&_feafba ._faggc > 0{_gegafa .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fdb .MakeInteger (_feafba ._faggc ));
};if _feafba ._gbdba !=nil {_gegafa .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_feafba ._dfbdf );};if _feafba ._dcdea ==nil &&_feafba ._aebag !=""&&_feafba ._gefad !=""{_feafba ._dcdea =_fdb .MakeArray (_fdb .MakeHexString (_feafba ._aebag ),_fdb .MakeHexString (_feafba ._gefad ));
};if _feafba ._dcdea !=nil {_aa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_feafba ._dcdea );_gegafa .Set ("\u0049\u0044",_feafba ._dcdea );};_feafba .writeObject (int (_gegafa .ObjectNumber ),_gegafa );return nil ;};func (_cbeaa *LTV )generateVRIKey (_ddedc *PdfSignature )(string ,error ){_gddg ,_bdacd :=_ddbfgc (_ddedc .Contents .Bytes ());
if _bdacd !=nil {return "",_bdacd ;};return _gga .ToUpper (_e .EncodeToString (_gddg )),nil ;};func (_eded *PdfReader )newPdfAnnotation3DFromDict (_ffc *_fdb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_geg :=PdfAnnotation3D {};_geg .T3DD =_ffc .Get ("\u0033\u0044\u0044");
_geg .T3DV =_ffc .Get ("\u0033\u0044\u0056");_geg .T3DA =_ffc .Get ("\u0033\u0044\u0041");_geg .T3DI =_ffc .Get ("\u0033\u0044\u0049");_geg .T3DB =_ffc .Get ("\u0033\u0044\u0042");return &_geg ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_daf *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _daf ._faaa !=nil {return _daf ._faaa ,nil ;};if _daf .A ==nil {return nil ,nil ;};if _daf ._ecgf ==nil {return nil ,nil ;};_bcg ,_gda :=_daf ._ecgf .loadAction (_daf .A );if _gda !=nil {return nil ,_gda ;
};_daf ._faaa =_bcg ;return _daf ._faaa ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ebf :=&PdfAnnotation {};_ebf ._cgbd =_fdb .MakeIndirectObject (_fdb .MakeDict ());return _ebf ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fdb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fdb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fdb .PdfObjectBool ;_eaefc PdfModel ;_dcfdb _fdb .PdfObject ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_cfdb *Image )GetSamples ()[]uint32 {_dcda :=_cd .ResampleBytes (_cfdb .Data ,int (_cfdb .BitsPerComponent ));if _cfdb .BitsPerComponent < 8{_dcda =_cfdb .samplesTrimPadding (_dcda );};_ccccd :=int (_cfdb .Width )*int (_cfdb .Height )*_cfdb .ColorComponents ;
if len (_dcda )< _ccccd {_aa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dcda ),_ccccd );
return _dcda ;}else if len (_dcda )> _ccccd {_aa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dcda ),_ccccd );
_dcda =_dcda [:_ccccd ];};return _dcda ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_afabc *PdfPageResources )GetColorspaceByName (keyName _fdb .PdfObjectName )(PdfColorspace ,bool ){_bffd ,_dcfda :=_afabc .GetColorspaces ();if _dcfda !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dcfda );
return nil ,false ;};if _bffd ==nil {return nil ,false ;};_aadc ,_caaf :=_bffd .Colorspaces [string (keyName )];if !_caaf {return nil ,false ;};return _aadc ,true ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ca .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _faef ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _fgagf (rs ,opts ,true ,_faef );
};

// WriteString outputs the object as it is to be written to file.
func (_ggbfba *PdfTransformParamsDocMDP )WriteString ()string {return _ggbfba .ToPdfObject ().WriteString ();};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fdb .PdfObjectString ;Q *_fdb .PdfObjectInteger ;DS *_fdb .PdfObjectString ;RV _fdb .PdfObject ;MaxLen *_fdb .PdfObjectInteger ;};func _cedf (_abaa _fdb .PdfObject )(*PdfColorspaceDeviceN ,error ){_fceed :=NewPdfColorspaceDeviceN ();
if _eacc ,_deaff :=_abaa .(*_fdb .PdfIndirectObject );_deaff {_fceed ._fffc =_eacc ;};_abaa =_fdb .TraceToDirectObject (_abaa );_ccae ,_ccgee :=_abaa .(*_fdb .PdfObjectArray );if !_ccgee {return nil ,_d .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _ccae .Len ()!=4&&_ccae .Len ()!=5{return nil ,_d .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_abaa =_ccae .Get (0);
_dcfgc ,_ccgee :=_abaa .(*_fdb .PdfObjectName );if !_ccgee {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dcfgc !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_d .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_abaa =_ccae .Get (1);
_abaa =_fdb .TraceToDirectObject (_abaa );_fdbf ,_ccgee :=_abaa .(*_fdb .PdfObjectArray );if !_ccgee {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_fceed .ColorantNames =_fdbf ;_abaa =_ccae .Get (2);_ceff ,_efbg :=NewPdfColorspaceFromPdfObject (_abaa );if _efbg !=nil {return nil ,_efbg ;};_fceed .AlternateSpace =_ceff ;_faaab ,_efbg :=_cfgbc (_ccae .Get (3));if _efbg !=nil {return nil ,_efbg ;};
_fceed .TintTransform =_faaab ;if _ccae .Len ()==5{_daaag ,_dfgae :=_cfeg (_ccae .Get (4));if _dfgae !=nil {return nil ,_dfgae ;};_fceed .Attributes =_daaag ;};return _fceed ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dfga *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_cega *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_abg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_abg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_abg ._ebbc =acroForm ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fdb .PdfObject ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fdb .PdfObject ;BS _fdb .PdfObject ;};func _accae (_abddc *_fdb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cebef :=PdfShadingType1 {};if _efdg :=_abddc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_efdg !=nil {_efdg =_fdb .TraceToDirectObject (_efdg );_bgcg ,_bccec :=_efdg .(*_fdb .PdfObjectArray );if !_bccec {_aa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efdg );
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cebef .Domain =_bgcg ;};if _dafef :=_abddc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dafef !=nil {_dafef =_fdb .TraceToDirectObject (_dafef );
_cfddf ,_cggeg :=_dafef .(*_fdb .PdfObjectArray );if !_cggeg {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dafef );return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cebef .Matrix =_cfddf ;};_gbbae :=_abddc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gbbae ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cebef .Function =[]PdfFunction {};if _gfeed ,_acgbb :=_gbbae .(*_fdb .PdfObjectArray );_acgbb {for _ ,_cbgcb :=range _gfeed .Elements (){_dbadb ,_aabff :=_cfgbc (_cbgcb );if _aabff !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aabff );
return nil ,_aabff ;};_cebef .Function =append (_cebef .Function ,_dbadb );};}else {_bfccg ,_bbacc :=_cfgbc (_gbbae );if _bbacc !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbacc );
return nil ,_bbacc ;};_cebef .Function =append (_cebef .Function ,_bfccg );};return &_cebef ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_bb :=&PdfAction {};_bb ._ae =_fdb .MakeIndirectObject (_fdb .MakeDict ());return _bb ;};func _cgcge (_eddf *PdfPage ){_cffba :=_bfg .GetLicenseKey ();if _cffba !=nil &&_cffba .IsLicensed (){return ;};_fgcec :=_fdb .PdfObjectName ("\u0055\u0046\u0031");
if !_eddf .Resources .HasFontByName (_fgcec ){_eddf .Resources .SetFontByName (_fgcec ,DefaultFont ().ToPdfObject ());};var _bfcda []string ;_bfcda =append (_bfcda ,"\u0071");_bfcda =append (_bfcda ,"\u0042\u0054");_bfcda =append (_bfcda ,_d .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_fgcec .String ()));
_bfcda =append (_bfcda ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_bfcda =append (_bfcda ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_bebdc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bfcda =append (_bfcda ,_d .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_bebdc ));_bfcda =append (_bfcda ,"\u0045\u0054");_bfcda =append (_bfcda ,"\u0051");_fgfde :=_gga .Join (_bfcda ,"\u000a");_eddf .AddContentStreamByString (_fgfde );_eddf .ToPdfObject ();
};

// String returns a string that describes `font`.
func (_ceffc *PdfFont )String ()string {_cfdd :="";if _ceffc ._babcd .Encoder ()!=nil {_cfdd =_ceffc ._babcd .Encoder ().String ();};return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ceffc ._babcd ,_ceffc .baseFields ().coreString (),_cfdd );
};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fdb .PdfObject ;IC _fdb .PdfObject ;RO _fdb .PdfObject ;OverlayText _fdb .PdfObject ;Repeat _fdb .PdfObject ;DA _fdb .PdfObject ;Q _fdb .PdfObject ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_debb *PdfPage )GetPageAsIndirectObject ()*_fdb .PdfIndirectObject {return _debb ._fccfd };

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_bacf *PdfFont )GetCharMetrics (code _eb .CharCode )(CharMetrics ,bool ){var _deea _fc .CharMetrics ;switch _egdec :=_bacf ._babcd .(type ){case *pdfFontSimple :if _eddgg ,_fcdef :=_egdec .GetCharMetrics (code );_fcdef {return _eddgg ,_fcdef ;};case *pdfFontType0 :if _afcg ,_fgeegg :=_egdec .GetCharMetrics (code );
_fgeegg {return _afcg ,_fgeegg ;};case *pdfCIDFontType0 :if _gfac ,_fbcfc :=_egdec .GetCharMetrics (code );_fbcfc {return _gfac ,_fbcfc ;};case *pdfCIDFontType2 :if _gcbgg ,_edcbf :=_egdec .GetCharMetrics (code );_edcbf {return _gcbgg ,_edcbf ;};case *pdfFontType3 :if _bdgc ,_bdag :=_egdec .GetCharMetrics (code );
_bdag {return _bdgc ,_bdag ;};default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_bacf ._babcd );
return _deea ,false ;};if _efdag ,_egfeg :=_bacf .GetFontDescriptor ();_egfeg ==nil &&_efdag !=nil {return _fc .CharMetrics {Wx :_efdag ._gbcb },true ;};_aa .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_bacf );
return _deea ,false ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bf .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fdb .PdfObject ;B _fdb .PdfObject ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fada _ca .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_bebcg _bd .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dbcaa _bd .Image )(*Image ,error );

// Compress an image.
Compress (_acafe *Image ,_faabf int64 )(*Image ,error );};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gf .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ag .Time ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_bbaed *PdfField )Flags ()FieldFlag {var _cfbe FieldFlag ;_eedb ,_ffdg :=_bbaed .inherit (func (_affef *PdfField )bool {if _affef .Ff !=nil {_cfbe =FieldFlag (*_affef .Ff );return true ;};return false ;});if _ffdg !=nil {_aa .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ffdg );
};if !_eedb {_aa .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _cfbe ;};

// HasExtGState checks if ExtGState name is available.
func (_gdbef *PdfPage )HasExtGState (name _fdb .PdfObjectName )bool {if _gdbef .Resources ==nil {return false ;};if _gdbef .Resources .ExtGState ==nil {return false ;};_bfee ,_ffacf :=_fdb .TraceToDirectObject (_gdbef .Resources .ExtGState ).(*_fdb .PdfObjectDictionary );
if !_ffacf {_aa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fdb .TraceToDirectObject (_gdbef .Resources .ExtGState ));
return false ;};_dfedb :=_bfee .Get (name );_aefg :=_dfedb !=nil ;return _aefg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cfaf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggcb ,_efga :=_fdb .GetNumbersAsFloat (objects );
if _efga !=nil {return nil ,_efga ;};return _cfaf .ColorFromFloats (_gggcb );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cbag *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cbag .UnderlyingCS ==nil {return nil ,_ee .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _cbag .UnderlyingCS .ColorFromFloats (vals );};func _eeea (_ggec *_fdb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebece :=&PdfTilingPattern {};_adcfg :=_ggec .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _adcfg ==nil {_aa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbab ,_dbfc :=_adcfg .(*_fdb .PdfObjectInteger );if !_dbfc {_aa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_adcfg );
return nil ,_fdb .ErrTypeError ;};_ebece .PaintType =_gbab ;_adcfg =_ggec .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _adcfg ==nil {_aa .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgdge ,_dbfc :=_adcfg .(*_fdb .PdfObjectInteger );if !_dbfc {_aa .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adcfg );
return nil ,_fdb .ErrTypeError ;};_ebece .TilingType =_fgdge ;_adcfg =_ggec .Get ("\u0042\u0042\u006f\u0078");if _adcfg ==nil {_aa .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_adcfg =_fdb .TraceToDirectObject (_adcfg );_eeabc ,_dbfc :=_adcfg .(*_fdb .PdfObjectArray );if !_dbfc {_aa .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adcfg );
return nil ,_fdb .ErrTypeError ;};_bgaec ,_ffebc :=NewPdfRectangle (*_eeabc );if _ffebc !=nil {_aa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ffebc );return nil ,_ffebc ;};_ebece .BBox =_bgaec ;_adcfg =_ggec .Get ("\u0058\u0053\u0074e\u0070");
if _adcfg ==nil {_aa .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cgfdc ,_ffebc :=_fdb .GetNumberAsFloat (_adcfg );if _ffebc !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cgfdc );
return nil ,_ffebc ;};_ebece .XStep =_fdb .MakeFloat (_cgfdc );_adcfg =_ggec .Get ("\u0059\u0053\u0074e\u0070");if _adcfg ==nil {_aa .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_degbc ,_ffebc :=_fdb .GetNumberAsFloat (_adcfg );if _ffebc !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_degbc );
return nil ,_ffebc ;};_ebece .YStep =_fdb .MakeFloat (_degbc );_adcfg =_ggec .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _adcfg ==nil {_aa .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggec ,_dbfc =_fdb .TraceToDirectObject (_adcfg ).(*_fdb .PdfObjectDictionary );if !_dbfc {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_adcfg );
};_gbce ,_ffebc :=NewPdfPageResourcesFromDict (_ggec );if _ffebc !=nil {return nil ,_ffebc ;};_ebece .Resources =_gbce ;if _gefae :=_ggec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gefae !=nil {_abbag ,_fecag :=_gefae .(*_fdb .PdfObjectArray );if !_fecag {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gefae );
return nil ,_fdb .ErrTypeError ;};_ebece .Matrix =_abbag ;};return _ebece ,nil ;};func (_ffbe *PdfAppender )addNewObject (_fdfcb _fdb .PdfObject ){if _ ,_caeeg :=_ffbe ._acbb [_fdfcb ];!_caeeg {_ffbe ._gdgb =append (_ffbe ._gdgb ,_fdfcb );_ffbe ._acbb [_fdfcb ]=struct{}{};
};};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_bgeda *PdfWriter )SetOpenAction (dest _fdb .PdfObject )error {if dest ==nil ||_fdb .IsNullObject (dest ){return nil ;};_bgeda ._gbged .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _bgeda .addObjects (dest );};


// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ebdd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ebdd .MediaBox !=nil {return _ebdd .MediaBox ,nil ;};_dbbea :=_ebdd .Parent ;for _dbbea !=nil {_gcab ,_cafdg :=_fdb .GetDict (_dbbea );if !_cafdg {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fdaac :=_gcab .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fdaac !=nil {_dgdbd ,_cedfad :=_fdb .GetArray (_fdaac );if !_cedfad {return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_dfcbdb ,_ecfcf :=NewPdfRectangle (*_dgdbd );if _ecfcf !=nil {return nil ,_ecfcf ;};return _dfcbdb ,nil ;};_dbbea =_gcab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ee .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// SetForms sets the Acroform for a PDF file.
func (_bdbfc *PdfWriter )SetForms (form *PdfAcroForm )error {_bdbfc ._cabbd =form ;return nil };

// Encoder returns the font's text encoder.
func (_dcdc pdfFontType3 )Encoder ()_eb .TextEncoder {return _dcdc ._cgddd };

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_faccge *PdfPageResources )GetXObjectFormByName (keyName _fdb .PdfObjectName )(*XObjectForm ,error ){_aabdf ,_aacgc :=_faccge .GetXObjectByName (keyName );if _aabdf ==nil {return nil ,nil ;};if _aacgc !=XObjectTypeForm {return nil ,_ee .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fdbgg ,_ebbca :=NewXObjectFormFromStream (_aabdf );if _ebbca !=nil {return nil ,_ebbca ;};return _fdbgg ,nil ;};func (_bbdb *pdfFontType0 )subsetRegistered ()error {_bfece ,_gccg :=_bbdb .DescendantFont ._babcd .(*pdfCIDFontType2 );if !_gccg {_aa .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bbdb .DescendantFont );
return nil ;};if _bfece ==nil {return nil ;};if _bfece ._ecde ==nil {_aa .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bbdb ._beaaf ==nil {_aa .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_afgb ,_gccg :=_fdb .GetStream (_bfece ._ecde .FontFile2 );if !_gccg {_aa .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ee .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_efcbb ,_eabd :=_fdb .DecodeStream (_afgb );if _eabd !=nil {_aa .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eabd );
return _eabd ;};_acbea ,_eabd :=_dg .Parse (_de .NewReader (_efcbb ));if _eabd !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_afgb .Stream ));
return _eabd ;};var _dcff []rune ;var _fccbc *_dg .Font ;switch _feac :=_bbdb ._beaaf .(type ){case *_eb .TrueTypeFontEncoder :_dcff =_feac .RegisteredRunes ();_fccbc ,_eabd =_acbea .SubsetKeepRunes (_dcff );if _eabd !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabd );
return _eabd ;};_feac .SubsetRegistered ();case *_eb .IdentityEncoder :_dcff =_feac .RegisteredRunes ();_fcfa :=make ([]_dg .GlyphIndex ,len (_dcff ));for _gdcd ,_bdeeg :=range _dcff {_fcfa [_gdcd ]=_dg .GlyphIndex (_bdeeg );};_fccbc ,_eabd =_acbea .SubsetKeepIndices (_fcfa );
if _eabd !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabd );return _eabd ;};case _eb .SimpleEncoder :_feab :=_feac .Charcodes ();for _ ,_fefb :=range _feab {_beab ,_cdge :=_feac .CharcodeToRune (_fefb );if !_cdge {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fefb );
continue ;};_dcff =append (_dcff ,_beab );};default:return _d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bbdb ._beaaf );
};var _dfed _de .Buffer ;_eabd =_fccbc .Write (&_dfed );if _eabd !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabd );return _eabd ;};if _bbdb ._egadb !=nil {_eacdbc :=make (map[_cgc .CharCode ]rune ,len (_dcff ));for _ ,_dddd :=range _dcff {_ecadda ,_bdcdd :=_bbdb ._beaaf .RuneToCharcode (_dddd );
if !_bdcdd {continue ;};_eacdbc [_cgc .CharCode (_ecadda )]=_dddd ;};_bbdb ._egadb =_cgc .NewToUnicodeCMap (_eacdbc );};_afgb ,_eabd =_fdb .MakeStream (_dfed .Bytes (),_fdb .NewFlateEncoder ());if _eabd !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabd );
return _eabd ;};_afgb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fdb .MakeInteger (int64 (_dfed .Len ())));if _gcda ,_cgce :=_fdb .GetStream (_bfece ._ecde .FontFile2 );_cgce {*_gcda =*_afgb ;}else {_bfece ._ecde .FontFile2 =_afgb ;};_baceag :=_bfad ();
if len (_bbdb ._gfdda )> 0{_bbdb ._gfdda =_bcbdb (_bbdb ._gfdda ,_baceag );};if len (_bfece ._gfdda )> 0{_bfece ._gfdda =_bcbdb (_bfece ._gfdda ,_baceag );};if len (_bbdb ._dgdbc )> 0{_bbdb ._dgdbc =_bcbdb (_bbdb ._dgdbc ,_baceag );};if _bfece ._ecde !=nil {_ccdeg ,_aacbgc :=_fdb .GetName (_bfece ._ecde .FontName );
if _aacbgc &&len (_ccdeg .String ())> 0{_edbb :=_bcbdb (_ccdeg .String (),_baceag );_bfece ._ecde .FontName =_fdb .MakeName (_edbb );};};return nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gc PdfModel ;Type _fdb .PdfObject ;S _fdb .PdfObject ;Next _fdb .PdfObject ;_ae *_fdb .PdfIndirectObject ;};func _efcf (_edcdcg *_fdb .PdfObjectDictionary ){_gdcaf ,_gabbc :=_fdb .GetArray (_edcdcg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_ecf ,_dgcde :=_fdb .GetIntVal (_edcdcg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_eadd ,_dgeb :=_fdb .GetIntVal (_edcdcg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _gabbc &&_dgcde &&_dgeb {_gfcd :=_gdcaf .Len ();if _gfcd !=_eadd -_ecf +1{_aa .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_gfcd ,_eadd );
_ffeb :=_fdb .PdfObjectInteger (_ecf +_gfcd -1);_edcdcg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_ffeb );};};};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fdb .PdfObjectArray ;_gaacf *Image ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_afgd *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_aa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ee .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fdb .PdfObject ;Name _fdb .PdfObject ;};

// C returns the value of the cyan component of the color.
func (_bbac *PdfColorDeviceCMYK )C ()float64 {return _bbac [0]};

// ToPdfObject returns the PDF representation of the colorspace.
func (_eegee *PdfColorspaceDeviceCMYK )ToPdfObject ()_fdb .PdfObject {return _fdb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ParserMetadata gets the parser  metadata.
func (_eede *CompliancePdfReader )ParserMetadata ()_fdb .ParserMetadata {if _eede ._cgea ==(_fdb .ParserMetadata {}){_eede ._cgea ,_ =_eede ._dbbec .ParserMetadata ();};return _eede ._cgea ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_eaff *PdfAcroForm ,_bdegg *PdfField ,_cfgb *PdfAnnotationWidget )(*_fdb .PdfObjectDictionary ,error );};var (_dacba _a .Mutex ;_fdadg ="";_fggdgb _ag .Time ;_fcdde ="";
_bacfc ="";_fgdee _ag .Time ;_fbeeb ="";_ecfaa ="";_cgfdb ="";);func _gfbb (_bcfef *_fdb .PdfObjectDictionary ,_acdd *fontCommon ,_dffdb _eb .TextEncoder )(*pdfFontSimple ,error ){_dbaab :=_cdaff (_acdd );_dbaab ._dfgdg =_dffdb ;if _dffdb ==nil {_bcgca :=_bcfef .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _bcgca ==nil {_bcgca =_fdb .MakeInteger (0);};_dbaab .FirstChar =_bcgca ;_edaea ,_fffa :=_fdb .GetIntVal (_bcgca );if !_fffa {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bcgca );
return nil ,_fdb .ErrTypeError ;};_agdad :=_eb .CharCode (_edaea );_bcgca =_bcfef .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bcgca ==nil {_bcgca =_fdb .MakeInteger (255);};_dbaab .LastChar =_bcgca ;_edaea ,_fffa =_fdb .GetIntVal (_bcgca );
if !_fffa {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bcgca );return nil ,_fdb .ErrTypeError ;
};_cdebd :=_eb .CharCode (_edaea );_dbaab ._fgfcb =make (map[_eb .CharCode ]float64 );_bcgca =_bcfef .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bcgca !=nil {_dbaab .Widths =_bcgca ;_ecbg ,_efeee :=_fdb .GetArray (_bcgca );if !_efeee {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bcgca );
return nil ,_fdb .ErrTypeError ;};_fgac ,_bdde :=_ecbg .ToFloat64Array ();if _bdde !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bdde ;};if len (_fgac )!=int (_cdebd -_agdad +1){_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_cdebd -_agdad +1,len (_fgac ));
return nil ,_fdb .ErrRangeError ;};for _fgbda ,_abac :=range _fgac {_dbaab ._fgfcb [_agdad +_eb .CharCode (_fgbda )]=_abac ;};};};_dbaab .Encoding =_fdb .TraceToDirectObject (_bcfef .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dbaab ,nil ;
};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_bdda *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cfcfe :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cfcfe .N =N ;return _cfcfe ,nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dacba .Lock ();defer _dacba .Unlock ();_fbeeb =producer };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dcadg ,_fdaecd :=_gge .ParsePdfTime (dateStr );if _fdaecd !=nil {return PdfDate {},_fdaecd ;};return NewPdfDateFromTime (_dcadg );};

// GetContentStreams returns the content stream as an array of strings.
func (_aeca *PdfPage )GetContentStreams ()([]string ,error ){_ccce :=_aeca .GetContentStreamObjs ();var _bfafc []string ;for _ ,_ecfe :=range _ccce {_ffgg ,_gcgf :=_daabd (_ecfe );if _gcgf !=nil {return nil ,_gcgf ;};_bfafc =append (_bfafc ,_ffgg );};return _bfafc ,nil ;
};func (_ecaf *PdfReader )newPdfAnnotationPrinterMarkFromDict (_badf *_fdb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_acfa :=PdfAnnotationPrinterMark {};_acfa .MN =_badf .Get ("\u004d\u004e");return &_acfa ,nil ;};func (_cgbc *PdfReader )buildOutlineTree (_abcb _fdb .PdfObject ,_dgcbc *PdfOutlineTreeNode ,_cfcbe *PdfOutlineTreeNode ,_bcdaf map[_fdb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bcdaf ==nil {_bcdaf =map[_fdb .PdfObject ]struct{}{};
};_bcdaf [_abcb ]=struct{}{};_eabgg ,_eebd :=_abcb .(*_fdb .PdfIndirectObject );if !_eebd {return nil ,nil ,_d .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_abcb );
};_fecea ,_egbdd :=_eabgg .PdfObject .(*_fdb .PdfObjectDictionary );if !_egbdd {return nil ,nil ,_ee .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_aa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fecea ,_eabgg ,_eabgg );
if _adfdc :=_fecea .Get ("\u0054\u0069\u0074l\u0065");_adfdc !=nil {_bacaf ,_fcgbg :=_cgbc .newPdfOutlineItemFromIndirectObject (_eabgg );if _fcgbg !=nil {return nil ,nil ,_fcgbg ;};_bacaf .Parent =_dgcbc ;_bacaf .Prev =_cfcbe ;_fabff :=_fdb .ResolveReference (_fecea .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_eafbb :=_bcdaf [_fabff ];_fabff !=nil &&_fabff !=_eabgg &&!_eafbb {if !_fdb .IsNullObject (_fabff ){_abccdc ,_fagc ,_gcbfe :=_cgbc .buildOutlineTree (_fabff ,&_bacaf .PdfOutlineTreeNode ,nil ,_bcdaf );if _gcbfe !=nil {_aa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gcbfe );
}else {_bacaf .First =_abccdc ;_bacaf .Last =_fagc ;};};};_febbd :=_fdb .ResolveReference (_fecea .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ebgg :=_bcdaf [_febbd ];_febbd !=nil &&_febbd !=_eabgg &&!_ebgg {if !_fdb .IsNullObject (_febbd ){_ccdeb ,_bbbfbf ,_ccfaa :=_cgbc .buildOutlineTree (_febbd ,_dgcbc ,&_bacaf .PdfOutlineTreeNode ,_bcdaf );
if _ccfaa !=nil {_aa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ccfaa );
}else {_bacaf .Next =_ccdeb ;return &_bacaf .PdfOutlineTreeNode ,_bbbfbf ,nil ;};};};return &_bacaf .PdfOutlineTreeNode ,&_bacaf .PdfOutlineTreeNode ,nil ;};_cbgfb ,_deabf :=_eaece (_eabgg );if _deabf !=nil {return nil ,nil ,_deabf ;};_cbgfb .Parent =_dgcbc ;
if _ffadc :=_fecea .Get ("\u0046\u0069\u0072s\u0074");_ffadc !=nil {_ffadc =_fdb .ResolveReference (_ffadc );if _ ,_badee :=_bcdaf [_ffadc ];_ffadc !=nil &&_ffadc !=_eabgg &&!_badee {_dage :=_fdb .TraceToDirectObject (_ffadc );if _ ,_bceeg :=_dage .(*_fdb .PdfObjectNull );
!_bceeg &&_dage !=nil {_bbbg ,_ecdbf ,_facd :=_cgbc .buildOutlineTree (_ffadc ,&_cbgfb .PdfOutlineTreeNode ,nil ,_bcdaf );if _facd !=nil {_aa .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_facd );
}else {_cbgfb .First =_bbbg ;_cbgfb .Last =_ecdbf ;};};};};return &_cbgfb .PdfOutlineTreeNode ,&_cbgfb .PdfOutlineTreeNode ,nil ;};func _gafaa (_cdeba _fdb .PdfObject )(*_fdb .PdfObjectDictionary ,*fontCommon ,error ){_cbdg :=&fontCommon {};if _fbadf ,_edca :=_cdeba .(*_fdb .PdfIndirectObject );
_edca {_cbdg ._fggb =_fbadf .ObjectNumber ;};_bdgfd ,_gcaf :=_fdb .GetDict (_cdeba );if !_gcaf {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cdeba );
return nil ,nil ,ErrFontNotSupported ;};_egbcf ,_gcaf :=_fdb .GetNameVal (_bdgfd .Get ("\u0054\u0079\u0070\u0065"));if !_gcaf {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _egbcf !="\u0046\u006f\u006e\u0074"{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_egbcf ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fdb .ErrTypeError ;};_gdeb ,_gcaf :=_fdb .GetNameVal (_bdgfd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gcaf {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_cbdg ._eaae =_gdeb ;_abegc ,_gcaf :=_fdb .GetNameVal (_bdgfd .Get ("\u004e\u0061\u006d\u0065"));if _gcaf {_cbdg ._dgdbc =_abegc ;};_ddgc :=_bdgfd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ddgc !=nil {_cbdg ._fcgga =_fdb .TraceToDirectObject (_ddgc );
_aacf ,_bbcfc :=_aeecf (_cbdg ._fcgga ,_cbdg );if _bbcfc !=nil {return _bdgfd ,_cbdg ,_bbcfc ;};_cbdg ._egadb =_aacf ;}else if _gdeb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gdeb =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_faaf ,_cddfd :=_cgc .NewCIDSystemInfo (_bdgfd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _cddfd !=nil {return _bdgfd ,_cbdg ,_cddfd ;};_eeceg :=_d .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_faaf .Registry ,_faaf .Ordering );if _cgc .IsPredefinedCMap (_eeceg ){_cbdg ._egadb ,_cddfd =_cgc .LoadPredefinedCMap (_eeceg );
if _cddfd !=nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eeceg ,_cddfd );
};};};_gagcb :=_bdgfd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gagcb !=nil {_efeeg ,_eadeb :=_gdggc (_gagcb );if _eadeb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eadeb );
return _bdgfd ,_cbdg ,_eadeb ;};_cbdg ._ecde =_efeeg ;};if _gdeb !="\u0054\u0079\u0070e\u0033"{_bafg ,_eggg :=_fdb .GetNameVal (_bdgfd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_eggg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _bdgfd ,_cbdg ,ErrRequiredAttributeMissing ;};_cbdg ._gfdda =_bafg ;};return _bdgfd ,_cbdg ,nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_fbad *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fdb .PdfObject {_fbec :=_fdb .MakeDict ();if _fbad .Subtype !=nil {_fbec .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbad .Subtype );};_fbec .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_fbad .Colorants );
_fbec .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_fbad .Process );_fbec .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_fbad .MixingHints );if _fbad ._dgcba !=nil {_fbad ._dgcba .PdfObject =_fbec ;return _fbad ._dgcba ;
};return _fbec ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fbagg *PdfSignatureReference )GetContainingPdfObject ()_fdb .PdfObject {return _fbagg ._ebgged };

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gbbbe *PdfFontDescriptor )ToPdfObject ()_fdb .PdfObject {_befcg :=_fdb .MakeDict ();if _gbbbe ._daaad ==nil {_gbbbe ._daaad =&_fdb .PdfIndirectObject {};};_gbbbe ._daaad .PdfObject =_befcg ;_befcg .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gbbbe .FontName !=nil {_befcg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gbbbe .FontName );};if _gbbbe .FontFamily !=nil {_befcg .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gbbbe .FontFamily );};if _gbbbe .FontStretch !=nil {_befcg .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gbbbe .FontStretch );
};if _gbbbe .FontWeight !=nil {_befcg .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gbbbe .FontWeight );};if _gbbbe .Flags !=nil {_befcg .Set ("\u0046\u006c\u0061g\u0073",_gbbbe .Flags );};if _gbbbe .FontBBox !=nil {_befcg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gbbbe .FontBBox );
};if _gbbbe .ItalicAngle !=nil {_befcg .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gbbbe .ItalicAngle );};if _gbbbe .Ascent !=nil {_befcg .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gbbbe .Ascent );};if _gbbbe .Descent !=nil {_befcg .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gbbbe .Descent );
};if _gbbbe .Leading !=nil {_befcg .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gbbbe .Leading );};if _gbbbe .CapHeight !=nil {_befcg .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gbbbe .CapHeight );};if _gbbbe .XHeight !=nil {_befcg .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gbbbe .XHeight );
};if _gbbbe .StemV !=nil {_befcg .Set ("\u0053\u0074\u0065m\u0056",_gbbbe .StemV );};if _gbbbe .StemH !=nil {_befcg .Set ("\u0053\u0074\u0065m\u0048",_gbbbe .StemH );};if _gbbbe .AvgWidth !=nil {_befcg .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gbbbe .AvgWidth );
};if _gbbbe .MaxWidth !=nil {_befcg .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gbbbe .MaxWidth );};if _gbbbe .MissingWidth !=nil {_befcg .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gbbbe .MissingWidth );};
if _gbbbe .FontFile !=nil {_befcg .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gbbbe .FontFile );};if _gbbbe .FontFile2 !=nil {_befcg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gbbbe .FontFile2 );};if _gbbbe .FontFile3 !=nil {_befcg .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gbbbe .FontFile3 );
};if _gbbbe .CharSet !=nil {_befcg .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gbbbe .CharSet );};if _gbbbe .Style !=nil {_befcg .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gbbbe .FontName );};if _gbbbe .Lang !=nil {_befcg .Set ("\u004c\u0061\u006e\u0067",_gbbbe .Lang );
};if _gbbbe .FD !=nil {_befcg .Set ("\u0046\u0044",_gbbbe .FD );};if _gbbbe .CIDSet !=nil {_befcg .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gbbbe .CIDSet );};return _gbbbe ._daaad ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ggagg *PdfPageResources )SetXObjectFormByName (keyName _fdb .PdfObjectName ,xform *XObjectForm )error {_cecda :=xform .ToPdfObject ().(*_fdb .PdfObjectStream );_fbace :=_ggagg .SetXObjectByName (keyName ,_cecda );return _fbace ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_gcgaa *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _gcgaa .UnderlyingCS .GetNumComponents ();};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_ccgec *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetRevisionNumber returns the version of the current Pdf document
func (_ggcc *PdfReader )GetRevisionNumber ()int {return _ggcc ._dbbec .GetRevisionNumber ()};

// ToPdfObject returns the PDF representation of the function.
func (_fcabg *PdfFunctionType3 )ToPdfObject ()_fdb .PdfObject {_dffdd :=_fdb .MakeDict ();_dffdd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fdb .MakeInteger (3));_dcfeg :=&_fdb .PdfObjectArray {};for _ ,_fcgbb :=range _fcabg .Domain {_dcfeg .Append (_fdb .MakeFloat (_fcgbb ));
};_dffdd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcfeg );if _fcabg .Range !=nil {_gdcdd :=&_fdb .PdfObjectArray {};for _ ,_bfdfc :=range _fcabg .Range {_gdcdd .Append (_fdb .MakeFloat (_bfdfc ));};_dffdd .Set ("\u0052\u0061\u006eg\u0065",_gdcdd );
};if _fcabg .Functions !=nil {_faccc :=&_fdb .PdfObjectArray {};for _ ,_cfdce :=range _fcabg .Functions {_faccc .Append (_cfdce .ToPdfObject ());};_dffdd .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_faccc );};if _fcabg .Bounds !=nil {_gfaff :=&_fdb .PdfObjectArray {};
for _ ,_cbbbg :=range _fcabg .Bounds {_gfaff .Append (_fdb .MakeFloat (_cbbbg ));};_dffdd .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_gfaff );};if _fcabg .Encode !=nil {_gebc :=&_fdb .PdfObjectArray {};for _ ,_fadbd :=range _fcabg .Encode {_gebc .Append (_fdb .MakeFloat (_fadbd ));
};_dffdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_gebc );};if _fcabg ._fdaec !=nil {_fcabg ._fdaec .PdfObject =_dffdd ;return _fcabg ._fdaec ;};return _dffdd ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_deff *PdfPattern )GetContext ()PdfModel {return _deff ._edbbc };func (_beeab *PdfWriter )writeObjectsInStreams (_gegc map[_fdb .PdfObject ]bool )error {for _ ,_gdbcd :=range _beeab ._gbabc {if _egcae :=_gegc [_gdbcd ];_egcae {continue ;};_bdfcae :=int64 (0);
switch _efddg :=_gdbcd .(type ){case *_fdb .PdfIndirectObject :_bdfcae =_efddg .ObjectNumber ;case *_fdb .PdfObjectStream :_bdfcae =_efddg .ObjectNumber ;case *_fdb .PdfObjectStreams :_bdfcae =_efddg .ObjectNumber ;default:_aa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_gdbcd );
return ErrTypeCheck ;};if _beeab ._gbdba !=nil &&_gdbcd !=_beeab ._dfbdf {_ecedc :=_beeab ._gbdba .Encrypt (_gdbcd ,_bdfcae ,0);if _ecedc !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ecedc );
return _ecedc ;};};_beeab .writeObject (int (_bdfcae ),_gdbcd );};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aefc *PdfAnnotation )GetContainingPdfObject ()_fdb .PdfObject {return _aefc ._cgbd };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dgcc *PdfPageResources )SetColorspaceByName (keyName _fdb .PdfObjectName ,cs PdfColorspace )error {_edbad ,_gefcd :=_dgcc .GetColorspaces ();if _gefcd !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gefcd );
return _gefcd ;};if _edbad ==nil {_edbad =NewPdfPageResourcesColorspaces ();_dgcc .SetColorSpace (_edbad );};_edbad .Set (keyName ,cs );return nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_deae *PdfReader )Inspect ()(map[string ]int ,error ){return _deae ._dbbec .Inspect ()};

// IsShading specifies if the pattern is a shading pattern.
func (_geafb *PdfPattern )IsShading ()bool {return _geafb .PatternType ==2};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_bdfc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_agfa :=0.3*_bdfc .R ()+0.59*_bdfc .G ()+0.11*_bdfc .B ();_agfa =_fag .Min (_fag .Max (_agfa ,0.0),1.0);return NewPdfColorDeviceGray (_agfa );};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fdb .PdfObjectStream ;Data []byte ;_ddeb *_fdb .PdfIndirectObject ;_daec *_fdb .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_ebgf *PdfAnnotationTrapNet )ToPdfObject ()_fdb .PdfObject {_ebgf .PdfAnnotation .ToPdfObject ();_cfe :=_ebgf ._cgbd ;_afb :=_cfe .PdfObject .(*_fdb .PdfObjectDictionary );_afb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cfe ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_ffdd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ffdd ._dbbec .GetCrypter ()!=nil &&!_ffdd ._dbbec .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_aacfb :=_ffdd ._adefa ;_geec :=_aacfb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _geec ==nil {return nil ,nil ;};_cggec ,_ :=_fdb .GetIndirect (_geec );_geec =_fdb .TraceToDirectObject (_geec );if _fdb .IsNullObject (_geec ){_aa .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_fabbe ,_fegbd :=_fdb .GetDict (_geec );if !_fegbd {_aa .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_geec );_aa .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_geec );};_aa .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_aa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ffdd ._fbgeb {_ddfga :=_ffdd .traverseObjectData (_fabbe );
if _ddfga !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_ddfga );
return nil ,_ddfga ;};};_eagbg ,_cdgdb :=_ffdd .newPdfAcroFormFromDict (_cggec ,_fabbe );if _cdgdb !=nil {return nil ,_cdgdb ;};return _eagbg ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_afcc *PdfFont )SubsetRegistered ()error {switch _febe :=_afcc ._babcd .(type ){case *pdfFontType0 :_cccaa :=_febe .subsetRegistered ();if _cccaa !=nil {_aa .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cccaa );
return _cccaa ;};if _febe ._eeged !=nil {if _febe ._beaaf !=nil {_febe ._beaaf .ToPdfObject ();};_febe .ToPdfObject ();};default:_aa .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_febe );
};return nil ;};func (_dadc *PdfFilespec )getDict ()*_fdb .PdfObjectDictionary {if _gfgg ,_cabg :=_dadc ._addf .(*_fdb .PdfIndirectObject );_cabg {_gbgba ,_gdfff :=_gfgg .PdfObject .(*_fdb .PdfObjectDictionary );if !_gdfff {return nil ;};return _gbgba ;
}else if _dacgd ,_eddeg :=_dadc ._addf .(*_fdb .PdfObjectDictionary );_eddeg {return _dacgd ;}else {_aa .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dadc ._addf );
return nil ;};};func (_agf *PdfReader )newPdfActionTransFromDict (_egde *_fdb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_egde .Get ("\u0054\u0072\u0061n\u0073")},nil ;};type fontCommon struct{_gfdda string ;_eaae string ;
_dgdbc string ;_fcgga _fdb .PdfObject ;_egadb *_cgc .CMap ;_ecde *PdfFontDescriptor ;_fggb int64 ;};

// ToPdfObject returns a stream object.
func (_dfee *XObjectForm )ToPdfObject ()_fdb .PdfObject {_edbfa :=_dfee ._eeafe ;_bbded :=_edbfa .PdfObjectDictionary ;if _dfee .Filter !=nil {_bbded =_dfee .Filter .MakeStreamDict ();_edbfa .PdfObjectDictionary =_bbded ;};_bbded .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bbded .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0046\u006f\u0072\u006d"));_bbded .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_dfee .FormType );_bbded .SetIfNotNil ("\u0042\u0042\u006f\u0078",_dfee .BBox );_bbded .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfee .Matrix );
if _dfee .Resources !=nil {_bbded .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dfee .Resources .ToPdfObject ());};_bbded .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dfee .Group );_bbded .SetIfNotNil ("\u0052\u0065\u0066",_dfee .Ref );_bbded .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_dfee .MetaData );
_bbded .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dfee .PieceInfo );_bbded .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dfee .LastModified );_bbded .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dfee .StructParent );
_bbded .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dfee .StructParents );_bbded .SetIfNotNil ("\u004f\u0050\u0049",_dfee .OPI );_bbded .SetIfNotNil ("\u004f\u0043",_dfee .OC );_bbded .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfee .Name );
_bbded .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_dfee .Stream ))));_edbfa .Stream =_dfee .Stream ;return _edbfa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbcag *PdfShading )ToPdfObject ()_fdb .PdfObject {_edgeac :=_cbcag ._dcfdb ;_aecac ,_bcgfe :=_cbcag .getShadingDict ();if _bcgfe !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cbcag .ShadingType !=nil {_aecac .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cbcag .ShadingType );};if _cbcag .ColorSpace !=nil {_aecac .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cbcag .ColorSpace .ToPdfObject ());
};if _cbcag .Background !=nil {_aecac .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cbcag .Background );};if _cbcag .BBox !=nil {_aecac .Set ("\u0042\u0042\u006f\u0078",_cbcag .BBox .ToPdfObject ());};if _cbcag .AntiAlias !=nil {_aecac .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cbcag .AntiAlias );
};return _edgeac ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fdb .PdfObject ;ColorSpace _fdb .PdfObject ;Pattern _fdb .PdfObject ;Shading _fdb .PdfObject ;XObject _fdb .PdfObject ;Font _fdb .PdfObject ;ProcSet _fdb .PdfObject ;Properties _fdb .PdfObject ;_bcfeg *_fdb .PdfObjectDictionary ;
_gdbgb *PdfPageResourcesColorspaces ;};func (_bbgddf *PdfWriter )writeOutputIntents ()error {if len (_bbgddf ._cbagec )==0{return nil ;};_gecdfg :=make ([]_fdb .PdfObject ,len (_bbgddf ._cbagec ));for _ecada ,_cgdgd :=range _bbgddf ._cbagec {_aegb :=_cgdgd .ToPdfObject ();
_gecdfg [_ecada ]=_fdb .MakeIndirectObject (_aegb );};_bgbbgd :=_fdb .MakeIndirectObject (_fdb .MakeArray (_gecdfg ...));_bbgddf ._gbged .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_bgbbgd );if _cdac :=_bbgddf .addObjects (_bgbbgd );
_cdac !=nil {return _cdac ;};return nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fdb .PdfObjectArray ;Domain *_fdb .PdfObjectArray ;Function []PdfFunction ;Extend *_fdb .PdfObjectArray ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_cgcf pdfFontSimple )GetCharMetrics (code _eb .CharCode )(_fc .CharMetrics ,bool ){if _ebeea ,_defg :=_cgcf ._fgfcb [code ];_defg {return _fc .CharMetrics {Wx :_ebeea },true ;};if _fc .IsStdFont (_fc .StdFontName (_cgcf ._gfdda )){return _fc .CharMetrics {Wx :250},true ;
};return _fc .CharMetrics {},false ;};

// ToInteger convert to an integer format.
func (_dcee *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_acbf :=_fag .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_acbf *_dcee .R ()),uint32 (_acbf *_dcee .G ()),uint32 (_acbf *_dcee .B ())};};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_adf *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_aa .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_aa .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_aa .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_aa .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_eggb ,_dcbeb :=_ff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dcaf ,img ._gcgd );if _dcbeb !=nil {return Image {},_dcbeb ;};_caea ,_dcbeb :=_ff .NRGBAConverter .Convert (_eggb );
if _dcbeb !=nil {return Image {},_dcbeb ;};return _cdbdc (_caea .Base ()),nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_gbeb *PdfRectangle )ToPdfObject ()_fdb .PdfObject {return _fdb .MakeArray (_fdb .MakeFloat (_gbeb .Llx ),_fdb .MakeFloat (_gbeb .Lly ),_fdb .MakeFloat (_gbeb .Urx ),_fdb .MakeFloat (_gbeb .Ury ));};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dfgd *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dfgd .Base .GetNumComponents ();_adefc :=int (vals [0])*N ;
if _adefc < 0||(_adefc +N -1)>=len (_dfgd ._gcef ){_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adefc );return nil ,ErrColorOutOfRange ;};_egcbf :=_dfgd ._gcef [_adefc :_adefc +N ];
var _baaa []float64 ;for _ ,_geagag :=range _egcbf {_baaa =append (_baaa ,float64 (_geagag )/255.0);};_bcgg ,_eecf :=_dfgd .Base .ColorFromFloats (_baaa );if _eecf !=nil {return nil ,_eecf ;};return _bcgg ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bcbcc *PdfShadingType7 )ToPdfObject ()_fdb .PdfObject {_bcbcc .PdfShading .ToPdfObject ();_gbbcf ,_bfdgc :=_bcbcc .getShadingDict ();if _bfdgc !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bcbcc .BitsPerCoordinate !=nil {_gbbcf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bcbcc .BitsPerCoordinate );};if _bcbcc .BitsPerComponent !=nil {_gbbcf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcbcc .BitsPerComponent );
};if _bcbcc .BitsPerFlag !=nil {_gbbcf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bcbcc .BitsPerFlag );};if _bcbcc .Decode !=nil {_gbbcf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bcbcc .Decode );};if _bcbcc .Function !=nil {if len (_bcbcc .Function )==1{_gbbcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcbcc .Function [0].ToPdfObject ());
}else {_ddbg :=_fdb .MakeArray ();for _ ,_eccda :=range _bcbcc .Function {_ddbg .Append (_eccda .ToPdfObject ());};_gbbcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddbg );};};return _bcbcc ._dcfdb ;};func (_cdcaf *PdfWriter )mapObjectStreams (_faffd bool )(map[_fdb .PdfObject ]bool ,bool ){_egabg :=make (map[_fdb .PdfObject ]bool );
for _ ,_edage :=range _cdcaf ._gbabc {if _bccbd ,_aaaab :=_edage .(*_fdb .PdfObjectStreams );_aaaab {_faffd =true ;for _ ,_gbecd :=range _bccbd .Elements (){_egabg [_gbecd ]=true ;if _cacbb ,_adbad :=_gbecd .(*_fdb .PdfIndirectObject );_adbad {_egabg [_cacbb .PdfObject ]=true ;
};};};};return _egabg ,_faffd ;};func (_eeeeg *PdfAcroForm )fillImageWithAppearance (_aaddd FieldImageProvider ,_gceee FieldAppearanceGenerator )error {if _eeeeg ==nil {return nil ;};_fgceaa ,_bdbff :=_aaddd .FieldImageValues ();if _bdbff !=nil {return _bdbff ;
};for _ ,_ceee :=range _eeeeg .AllFields (){_agega :=_ceee .PartialName ();_edaac ,_efabf :=_fgceaa [_agega ];if !_efabf {if _adbb ,_fagaa :=_ceee .FullName ();_fagaa ==nil {_edaac ,_efabf =_fgceaa [_adbb ];};};if !_efabf {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_agega );
continue ;};switch _eecee :=_ceee .GetContext ().(type ){case *PdfFieldButton :if _eecee .IsPush (){_eecee .SetFillImage (_edaac );};};if _gceee ==nil {continue ;};for _ ,_cbffd :=range _ceee .Annotations {_ebfae ,_gdeg :=_gceee .GenerateAppearanceDict (_eeeeg ,_ceee ,_cbffd );
if _gdeg !=nil {return _gdeg ;};_cbffd .AP =_ebfae ;_cbffd .ToPdfObject ();};};return nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bggfb *PdfPattern )IsTiling ()bool {return _bggfb .PatternType ==1};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_bdcd *VRI )ToPdfObject ()*_fdb .PdfObjectDictionary {_acbg :=_fdb .MakeDict ();_acbg .SetIfNotNil (_fdb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_bfcga (_bdcd .Cert ));_acbg .SetIfNotNil (_fdb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_bfcga (_bdcd .OCSP ));
_acbg .SetIfNotNil (_fdb .PdfObjectName ("\u0043\u0052\u004c"),_bfcga (_bdcd .CRL ));_acbg .SetIfNotNil ("\u0054\u0055",_bdcd .TU );_acbg .SetIfNotNil ("\u0054\u0053",_bdcd .TS );return _acbg ;};

// ToPdfObject implements interface PdfModel.
func (_edde *PdfAnnotationFreeText )ToPdfObject ()_fdb .PdfObject {_edde .PdfAnnotation .ToPdfObject ();_eebf :=_edde ._cgbd ;_efce :=_eebf .PdfObject .(*_fdb .PdfObjectDictionary );_edde .PdfAnnotationMarkup .appendToPdfDictionary (_efce );_efce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_efce .SetIfNotNil ("\u0044\u0041",_edde .DA );_efce .SetIfNotNil ("\u0051",_edde .Q );_efce .SetIfNotNil ("\u0052\u0043",_edde .RC );_efce .SetIfNotNil ("\u0044\u0053",_edde .DS );_efce .SetIfNotNil ("\u0043\u004c",_edde .CL );_efce .SetIfNotNil ("\u0049\u0054",_edde .IT );
_efce .SetIfNotNil ("\u0042\u0045",_edde .BE );_efce .SetIfNotNil ("\u0052\u0044",_edde .RD );_efce .SetIfNotNil ("\u0042\u0053",_edde .BS );_efce .SetIfNotNil ("\u004c\u0045",_edde .LE );return _eebf ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_eeaab *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ee .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_eacb :=&PdfColorPattern {};_bage ,_cfde :=objects [len (objects )-1].(*_fdb .PdfObjectName );if !_cfde {_aa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_eacb .PatternName =*_bage ;if len (objects )> 1{_bfab :=objects [0:len (objects )-1];if _eeaab .UnderlyingCS ==nil {_aa .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ee .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ggeab ,_cgffb :=_eeaab .UnderlyingCS .ColorFromPdfObjects (_bfab );if _cgffb !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cgffb );
return nil ,_cgffb ;};_eacb .Color =_ggeab ;};return _eacb ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_efeaf *Permissions )GetContainingPdfObject ()_fdb .PdfObject {return _efeaf ._cdfb };

// XObjectType represents the type of an XObject.
type XObjectType int ;

// ToInteger convert to an integer format.
func (_gfbf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_dgfg :=_fag .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dgfg *_gfbf .A ()),uint32 (_dgfg *_gfbf .B ()),uint32 (_dgfg *_gfbf .C ())};};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fdb .PdfObject ;_gcef []byte ;_gcea *_fdb .PdfIndirectObject ;};

// ToInteger convert to an integer format.
func (_bgfdad *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_acdb :=_fag .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_acdb *_bgfdad .C ()),uint32 (_acdb *_bgfdad .M ()),uint32 (_acdb *_bgfdad .Y ()),uint32 (_acdb *_bgfdad .K ())};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ggebf *PdfShadingType1 )ToPdfObject ()_fdb .PdfObject {_ggebf .PdfShading .ToPdfObject ();_eafa ,_aeegg :=_ggebf .getShadingDict ();if _aeegg !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ggebf .Domain !=nil {_eafa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ggebf .Domain );};if _ggebf .Matrix !=nil {_eafa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggebf .Matrix );};if _ggebf .Function !=nil {if len (_ggebf .Function )==1{_eafa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggebf .Function [0].ToPdfObject ());
}else {_fecfb :=_fdb .MakeArray ();for _ ,_ebdc :=range _ggebf .Function {_fecfb .Append (_ebdc .ToPdfObject ());};_eafa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fecfb );};};return _ggebf ._dcfdb ;};func _bcegf (_deef *_fdb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_cdgae :=&PdfFieldChoice {};
_cdgae .Opt ,_ =_fdb .GetArray (_deef .Get ("\u004f\u0070\u0074"));_cdgae .TI ,_ =_fdb .GetInt (_deef .Get ("\u0054\u0049"));_cdgae .I ,_ =_fdb .GetArray (_deef .Get ("\u0049"));return _cdgae ,nil ;};func (_cce *PdfReader )newPdfAnnotationUnderlineFromDict (_egg *_fdb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_ggfd :=PdfAnnotationUnderline {};
_dfg ,_cfa :=_cce .newPdfAnnotationMarkupFromDict (_egg );if _cfa !=nil {return nil ,_cfa ;};_ggfd .PdfAnnotationMarkup =_dfg ;_ggfd .QuadPoints =_egg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ggfd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abc *PdfAnnotationRedact )ToPdfObject ()_fdb .PdfObject {_abc .PdfAnnotation .ToPdfObject ();_gdg :=_abc ._cgbd ;_edgf :=_gdg .PdfObject .(*_fdb .PdfObjectDictionary );_abc .PdfAnnotationMarkup .appendToPdfDictionary (_edgf );_edgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_edgf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_abc .QuadPoints );_edgf .SetIfNotNil ("\u0049\u0043",_abc .IC );_edgf .SetIfNotNil ("\u0052\u004f",_abc .RO );_edgf .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_abc .OverlayText );
_edgf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_abc .Repeat );_edgf .SetIfNotNil ("\u0044\u0041",_abc .DA );_edgf .SetIfNotNil ("\u0051",_abc .Q );return _gdg ;};func _badb ()string {_dacba .Lock ();defer _dacba .Unlock ();_dgda :=_bfg .GetLicenseKey ();
if len (_fbeeb )> 0&&(_dgda .IsLicensed ()||_fdada ){return _fbeeb ;};return _d .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cgfgc (),_dgda .TypeToString ());
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_geddg *PdfPageResourcesColorspaces )ToPdfObject ()_fdb .PdfObject {_afbff :=_fdb .MakeDict ();for _ ,_edffc :=range _geddg .Names {_afbff .Set (_fdb .PdfObjectName (_edffc ),_geddg .Colorspaces [_edffc ].ToPdfObject ());};if _geddg ._gaeae !=nil {_geddg ._gaeae .PdfObject =_afbff ;
return _geddg ._gaeae ;};return _afbff ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_fegeb *PdfWriter )makeOffSetReference (_dcge int64 ){_ggcb :=_d .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_dcge );_fegeb .writeString (_ggcb );_fegeb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};func (_cadf *PdfReader )newPdfActionGotoFromDict (_bec *_fdb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bec .Get ("\u0044")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecdfee *PdfSignature )ToPdfObject ()_fdb .PdfObject {_gfgba :=_ecdfee ._eeabe ;var _efbca *_fdb .PdfObjectDictionary ;if _gcfge ,_bcdee :=_gfgba .PdfObject .(*pdfSignDictionary );_bcdee {_efbca =_gcfge .PdfObjectDictionary ;}else {_efbca =_gfgba .PdfObject .(*_fdb .PdfObjectDictionary );
};_efbca .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ecdfee .Type );_efbca .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ecdfee .Filter );_efbca .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ecdfee .SubFilter );_efbca .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ecdfee .ByteRange );
_efbca .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ecdfee .Contents );_efbca .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ecdfee .Cert );_efbca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ecdfee .Name );_efbca .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ecdfee .Reason );
_efbca .SetIfNotNil ("\u004d",_ecdfee .M );_efbca .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ecdfee .Reference );_efbca .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ecdfee .Changes );_efbca .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ecdfee .ContactInfo );
return _gfgba ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_cegf *PdfOutputIntent )ParsePdfObject (object _fdb .PdfObject )error {_cdgff ,_gbgc :=_fdb .GetDict (object );if !_gbgc {_aa .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ee .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_cegf ._cfbba =_cdgff ;_cegf .Type ,_ =_cdgff .GetString ("\u0054\u0079\u0070\u0065");_cdbf ,_gbgc :=_cdgff .GetString ("\u0053");if _gbgc {switch _cdbf {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_cegf .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_cegf .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_cegf .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_cegf .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_cegf .S =PdfOutputIntentTypeX ;
};};_cegf .OutputCondition ,_ =_cdgff .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_cegf .OutputConditionIdentifier ,_ =_cdgff .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_cegf .RegistryName ,_ =_cdgff .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_cegf .Info ,_ =_cdgff .GetString ("\u0049\u006e\u0066\u006f");if _eaee ,_acff :=_fdb .GetStream (_cdgff .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_acff {_cegf .ColorComponents ,_ =_fdb .GetIntVal (_eaee .Get ("\u004e"));_eeac ,_ccgca :=_fdb .DecodeStream (_eaee );if _ccgca !=nil {return _ccgca ;};_cegf .DestOutputProfile =_eeac ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_afc *PdfAnnotationWatermark )ToPdfObject ()_fdb .PdfObject {_afc .PdfAnnotation .ToPdfObject ();_bbcf :=_afc ._cgbd ;_beaa :=_bbcf .PdfObject .(*_fdb .PdfObjectDictionary );_beaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_beaa .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_afc .FixedPrint );return _bbcf ;};

// String implements interface PdfObject.
func (_deg *PdfAction )String ()string {_ace ,_eef :=_deg .ToPdfObject ().(*_fdb .PdfIndirectObject );if _eef {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_deg ._gc ,_ace .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_acfad *PdfAnnotationLink )ToPdfObject ()_fdb .PdfObject {_acfad .PdfAnnotation .ToPdfObject ();_aac :=_acfad ._cgbd ;_afd :=_aac .PdfObject .(*_fdb .PdfObjectDictionary );_afd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u004c\u0069\u006e\u006b"));
if _acfad ._faaa !=nil &&_acfad ._faaa ._gc !=nil {_afd .Set ("\u0041",_acfad ._faaa ._gc .ToPdfObject ());}else if _acfad .A !=nil {_afd .Set ("\u0041",_acfad .A );};_afd .SetIfNotNil ("\u0044\u0065\u0073\u0074",_acfad .Dest );_afd .SetIfNotNil ("\u0048",_acfad .H );
_afd .SetIfNotNil ("\u0050\u0041",_acfad .PA );_afd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acfad .QuadPoints );_afd .SetIfNotNil ("\u0042\u0053",_acfad .BS );return _aac ;};func (_abbde *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// SetDecode sets the decode image float slice.
func (_bfccc *Image )SetDecode (decode []float64 ){_bfccc ._gcgd =decode };

// SetImage updates XObject Image with new image data.
func (_fcaeb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_fcaeb .Filter .UpdateParams (img .GetParamsDict ());_fcdaf ,_gcead :=_fcaeb .Filter .EncodeBytes (img .Data );if _gcead !=nil {return _gcead ;};_fcaeb .Stream =_fcdaf ;_dfdag :=img .Width ;
_fcaeb .Width =&_dfdag ;_ecebg :=img .Height ;_fcaeb .Height =&_ecebg ;_dfdg :=img .BitsPerComponent ;_fcaeb .BitsPerComponent =&_dfdg ;if cs ==nil {if img .ColorComponents ==1{_fcaeb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fcaeb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_fcaeb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ee .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fcaeb .ColorSpace =cs ;};return nil ;
};

// GetNumComponents returns the number of color components.
func (_adee *PdfColorspaceICCBased )GetNumComponents ()int {return _adee .N };

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fca :=NewPdfAction ();_ed :=&PdfActionMovie {};_ed .PdfAction =_fca ;_fca .SetContext (_ed );return _ed ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fdb .PdfObject ;};

// ReplacePage replaces the original page to a new page.
func (_cccb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_gbca :=pageNum -1;for _aadbb :=range _cccb ._fdagd {if _aadbb ==_gbca {_dded :=page .Duplicate ();_cgcge (_dded );_cccb ._fdagd [_aadbb ]=_dded ;};};};func (_adcfd *PdfReader )loadAnnotations (_dfgdc _fdb .PdfObject )([]*PdfAnnotation ,error ){_deaa ,_acfgd :=_fdb .GetArray (_dfgdc );
if !_acfgd {return nil ,_d .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _fgdb []*PdfAnnotation ;for _ ,_acegc :=range _deaa .Elements (){_acegc =_fdb .ResolveReference (_acegc );
if _ ,_cabcb :=_acegc .(*_fdb .PdfObjectNull );_cabcb {continue ;};_eadca ,_dcfcc :=_acegc .(*_fdb .PdfObjectDictionary );_ebcfb ,_cgfgg :=_acegc .(*_fdb .PdfIndirectObject );if _dcfcc {_ebcfb =&_fdb .PdfIndirectObject {};_ebcfb .PdfObject =_eadca ;}else {if !_cgfgg {return nil ,_d .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_eecbe ,_befd :=_adcfd .newPdfAnnotationFromIndirectObject (_ebcfb );if _befd !=nil {return nil ,_befd ;};switch _cadeg :=_eecbe .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_cbafg :=range _adcfd .AcroForm .AllFields (){if _cbafg ._gdgea ==_cadeg .Parent {_cadeg ._ccg =_cbafg ;
break ;};};};if _eecbe !=nil {_fgdb =append (_fgdb ,_eecbe );};};return _fgdb ,nil ;};func (_dgadf *PdfWriter )addObject (_ggbgf _fdb .PdfObject )bool {_gbcbb :=_dgadf .hasObject (_ggbgf );if !_gbcbb {_acfcb :=_fdb .ResolveReferencesDeep (_ggbgf ,_dgadf ._egfdc );
if _acfcb !=nil {_aa .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_acfcb );};_dgadf ._gbabc =append (_dgadf ._gbabc ,_ggbgf );_dgadf ._fbeb [_ggbgf ]=struct{}{};return true ;};return false ;
};func _caecc (_accgg _fdb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gcfag :=&PdfPageResourcesColorspaces {};if _adgf ,_gfgbd :=_accgg .(*_fdb .PdfIndirectObject );_gfgbd {_gcfag ._gaeae =_adgf ;_accgg =_adgf .PdfObject ;};_adefff ,_eebge :=_fdb .GetDict (_accgg );
if !_eebge {return nil ,_ee .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gcfag .Names =[]string {};_gcfag .Colorspaces =map[string ]PdfColorspace {};for _ ,_fede :=range _adefff .Keys (){_gccb :=_adefff .Get (_fede );
_gcfag .Names =append (_gcfag .Names ,string (_fede ));_bedbb ,_cdaga :=NewPdfColorspaceFromPdfObject (_gccb );if _cdaga !=nil {return nil ,_cdaga ;};_gcfag .Colorspaces [string (_fede )]=_bedbb ;};return _gcfag ,nil ;};

// String returns a human readable description of `fontfile`.
func (_bfeab *fontFile )String ()string {_gfgb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bfeab ._aabc !=nil {_gfgb =_bfeab ._aabc .String ();};return _d .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bfeab ._gefd ,_gfgb );
};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_ffgac *PdfPageResources )SetXObjectByName (keyName _fdb .PdfObjectName ,stream *_fdb .PdfObjectStream )error {if _ffgac .XObject ==nil {_ffgac .XObject =_fdb .MakeDict ();};_faabde :=_fdb .TraceToDirectObject (_ffgac .XObject );_bfegg ,_febgdd :=_faabde .(*_fdb .PdfObjectDictionary );
if !_febgdd {_aa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_ffgac .XObject ,_faabde );return _ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bfegg .Set (keyName ,stream );return nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_eced SignatureValidationResult )String ()string {var _cedbb _de .Buffer ;_cedbb .WriteString (_d .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_eced .Name ));
if _eced .Date ._aabcd > 0{_cedbb .WriteString (_d .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_eced .Date .ToGoTime ().String ()));}else {_cedbb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_eced .Reason )> 0{_cedbb .WriteString (_d .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_eced .Reason ));}else {_cedbb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_eced .Location )> 0{_cedbb .WriteString (_d .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_eced .Location ));}else {_cedbb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_eced .ContactInfo )> 0{_cedbb .WriteString (_d .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_eced .ContactInfo ));}else {_cedbb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_cedbb .WriteString (_d .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_eced .Fields )));if _eced .IsSigned {_cedbb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_cedbb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _eced .IsVerified {_cedbb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_cedbb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _eced .IsTrusted {_cedbb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_cedbb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_eced .GeneralizedTime .IsZero (){_cedbb .WriteString (_d .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_eced .GeneralizedTime .String ()));
};if _eced .DiffResults !=nil {_cedbb .WriteString (_d .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_eced .DiffResults .IsPermitted ()));if len (_eced .DiffResults .Warnings )> 0{_cedbb .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_eabde :=range _eced .DiffResults .Warnings {_cedbb .WriteString (_d .Sprintf ("\u0009\u0025\u0073\u000a",_eabde ));};};if len (_eced .DiffResults .Errors )> 0{_cedbb .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_dcdgc :=range _eced .DiffResults .Errors {_cedbb .WriteString (_d .Sprintf ("\u0009\u0025\u0073\u000a",_dcdgc ));};};};return _cedbb .String ();};

// String returns the name of the colorspace (DeviceN).
func (_badd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eabcgc *PdfWriter )SetNamedDestinations (dests _fdb .PdfObject )error {if dests ==nil {return nil ;};_aa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_eabcgc ._gbged .Set ("\u0044\u0065\u0073t\u0073",dests );return _eabcgc .addObjects (dests );};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cdeg :=NewPdfAnnotation ();_dgc :=&PdfAnnotationSquare {};_dgc .PdfAnnotation =_cdeg ;_dgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdeg .SetContext (_dgc );return _dgc ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gcbgba *PdfPageResources )GetFontByName (keyName _fdb .PdfObjectName )(_fdb .PdfObject ,bool ){if _gcbgba .Font ==nil {return nil ,false ;};_ecfb ,_begda :=_fdb .TraceToDirectObject (_gcbgba .Font ).(*_fdb .PdfObjectDictionary );if !_begda {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fdb .TraceToDirectObject (_gcbgba .Font ));
return nil ,false ;};if _beacf :=_ecfb .Get (keyName );_beacf !=nil {return _beacf ,true ;};return nil ,false ;};const (_bgede =0x00001;_fcgfgf =0x00002;_bfdbf =0x00004;_gfffe =0x00008;_bege =0x00020;_fcddf =0x00040;_dcec =0x10000;_agfc =0x20000;_fbbfe =0x40000;
);var (_bdbcag =_fdc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_dgeba =_fdc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_ebfgde =_fdc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_ebbf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cdgd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_geea ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bebea *PdfReader )GetNamedDestinations ()(_fdb .PdfObject ,error ){_gcgbd :=_fdb .ResolveReference (_bebea ._adefa .Get ("\u0044\u0065\u0073t\u0073"));if _gcgbd ==nil {return nil ,nil ;};if !_bebea ._fbgeb {_cggee :=_bebea .traverseObjectData (_gcgbd );
if _cggee !=nil {return nil ,_cggee ;};};return _gcgbd ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_ddeec *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_ddeec ._gdbgb =colorspace ;};func _dceaa (_edgea *_fdb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cfbbaf :=PdfShadingType4 {};_eedcg :=_edgea .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eedcg ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fbbfb ,_cddb :=_eedcg .(*_fdb .PdfObjectInteger );if !_cddb {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eedcg );
return nil ,_fdb .ErrTypeError ;};_cfbbaf .BitsPerCoordinate =_fbbfb ;_eedcg =_edgea .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eedcg ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fbbfb ,_cddb =_eedcg .(*_fdb .PdfObjectInteger );if !_cddb {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eedcg );
return nil ,_fdb .ErrTypeError ;};_cfbbaf .BitsPerComponent =_fbbfb ;_eedcg =_edgea .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eedcg ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fbbfb ,_cddb =_eedcg .(*_fdb .PdfObjectInteger );if !_cddb {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eedcg );
return nil ,_fdb .ErrTypeError ;};_cfbbaf .BitsPerComponent =_fbbfb ;_eedcg =_edgea .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eedcg ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_baebaa ,_cddb :=_eedcg .(*_fdb .PdfObjectArray );if !_cddb {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eedcg );
return nil ,_fdb .ErrTypeError ;};_cfbbaf .Decode =_baebaa ;_eedcg =_edgea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eedcg ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cfbbaf .Function =[]PdfFunction {};if _cbage ,_acfge :=_eedcg .(*_fdb .PdfObjectArray );_acfge {for _ ,_baecb :=range _cbage .Elements (){_beadb ,_ecef :=_cfgbc (_baecb );if _ecef !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecef );
return nil ,_ecef ;};_cfbbaf .Function =append (_cfbbaf .Function ,_beadb );};}else {_cgcc ,_baabf :=_cfgbc (_eedcg );if _baabf !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_baabf );
return nil ,_baabf ;};_cfbbaf .Function =append (_cfbbaf .Function ,_cgcc );};return &_cfbbaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_addeb *PdfSignatureReference )ToPdfObject ()_fdb .PdfObject {_becfg :=_fdb .MakeDict ();_becfg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_addeb .Type );_becfg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_addeb .TransformMethod );
_becfg .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_addeb .TransformParams );_becfg .SetIfNotNil ("\u0044\u0061\u0074\u0061",_addeb .Data );_becfg .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_addeb .DigestMethod );
return _becfg ;};

// ToPdfObject implements interface PdfModel.
func (_bccfg *Permissions )ToPdfObject ()_fdb .PdfObject {return _bccfg ._cdfb };

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_eabb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfabde ,_gbfe :=color .(*PdfColorPattern );if !_gbfe {_aa .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _gfabde .Color ==nil {return color ,nil ;};if _eabb .UnderlyingCS ==nil {return nil ,_ee .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};
return _eabb .UnderlyingCS .ColorToRGB (_gfabde .Color );};func (_bgaecf *PdfReader )loadStructure ()error {if _bgaecf ._dbbec .GetCrypter ()!=nil &&!_bgaecf ._dbbec .IsAuthenticated (){return _d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecgde :=_bgaecf ._dbbec .GetTrailer ();if _ecgde ==nil {return _d .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cfadb ,_ggdfg :=_ecgde .Get ("\u0052\u006f\u006f\u0074").(*_fdb .PdfObjectReference );if !_ggdfg {return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ecgde );
};_fgdcg ,_bgcf :=_bgaecf ._dbbec .LookupByReference (*_cfadb );if _bgcf !=nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bgcf );
return _bgcf ;};_gaacfg ,_ggdfg :=_fgdcg .(*_fdb .PdfIndirectObject );if !_ggdfg {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fgdcg ,*_ecgde );
return _ee .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dafa ,_ggdfg :=(*_gaacfg ).PdfObject .(*_fdb .PdfObjectDictionary );if !_ggdfg {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_gaacfg .PdfObject );
return _ee .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_aa .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dafa );_ffefa ,_ggdfg :=_dafa .Get ("\u0050\u0061\u0067e\u0073").(*_fdb .PdfObjectReference );
if !_ggdfg {return _ee .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bdagd ,_bgcf :=_bgaecf ._dbbec .LookupByReference (*_ffefa );
if _bgcf !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bgcf ;};_fgbgb ,_ggdfg :=_bdagd .(*_fdb .PdfIndirectObject );if !_ggdfg {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_aa .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fgbgb );return _ee .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_decf ,_ggdfg :=_fgbgb .PdfObject .(*_fdb .PdfObjectDictionary );if !_ggdfg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fgbgb );
return _ee .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_befbg ,_ggdfg :=_fdb .GetInt (_decf .Get ("\u0043\u006f\u0075n\u0074"));if !_ggdfg {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ee .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_ggdfg =_fdb .GetName (_decf .Get ("\u0054\u0079\u0070\u0065"));!_ggdfg {_aa .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_decf .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _beba ,_effgg :=_fdb .GetInt (_decf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_effgg {_deed :=int64 (*_beba );_bgaecf .Rotate =&_deed ;};_bgaecf ._efgfb =_cfadb ;
_bgaecf ._adefa =_dafa ;_bgaecf ._eaeee =_decf ;_bgaecf ._gbed =_fgbgb ;_bgaecf ._afebca =int (*_befbg );_bgaecf ._dbged =[]*_fdb .PdfIndirectObject {};_efeff :=map[_fdb .PdfObject ]struct{}{};_bgcf =_bgaecf .buildPageList (_fgbgb ,nil ,_efeff );if _bgcf !=nil {return _bgcf ;
};_aa .Log .Trace ("\u002d\u002d\u002d");_aa .Log .Trace ("\u0054\u004f\u0043");_aa .Log .Trace ("\u0050\u0061\u0067e\u0073");_aa .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bgaecf ._dbged ),_bgaecf ._dbged );_bgaecf ._fgaaa ,_bgcf =_bgaecf .loadOutlines ();
if _bgcf !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bgcf );
return _bgcf ;};_bgaecf .AcroForm ,_bgcf =_bgaecf .loadForms ();if _bgcf !=nil {return _bgcf ;};_bgaecf .DSS ,_bgcf =_bgaecf .loadDSS ();if _bgcf !=nil {return _bgcf ;};_bgaecf ._gbee ,_bgcf =_bgaecf .loadPerms ();if _bgcf !=nil {return _bgcf ;};return nil ;
};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_fdb .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_fdb .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_efb :=NewPdfAnnotation ();_fdbg :=&PdfAnnotationMovie {};_fdbg .PdfAnnotation =_efb ;_efb .SetContext (_fdbg );return _fdbg ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_eeed *PdfAnnotation )ToPdfObject ()_fdb .PdfObject {_dbfea :=_eeed ._cgbd ;_aaaca :=_dbfea .PdfObject .(*_fdb .PdfObjectDictionary );_aaaca .Clear ();_aaaca .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0041\u006e\u006eo\u0074"));_aaaca .SetIfNotNil ("\u0052\u0065\u0063\u0074",_eeed .Rect );
_aaaca .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_eeed .Contents );_aaaca .SetIfNotNil ("\u0050",_eeed .P );_aaaca .SetIfNotNil ("\u004e\u004d",_eeed .NM );_aaaca .SetIfNotNil ("\u004d",_eeed .M );_aaaca .SetIfNotNil ("\u0046",_eeed .F );
_aaaca .SetIfNotNil ("\u0041\u0050",_eeed .AP );_aaaca .SetIfNotNil ("\u0041\u0053",_eeed .AS );_aaaca .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_eeed .Border );_aaaca .SetIfNotNil ("\u0043",_eeed .C );_aaaca .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eeed .StructParent );
_aaaca .SetIfNotNil ("\u004f\u0043",_eeed .OC );return _dbfea ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_feagb *PdfFieldChoice )ToPdfObject ()_fdb .PdfObject {_feagb .PdfField .ToPdfObject ();_ffee :=_feagb ._gdgea ;_cegb :=_ffee .PdfObject .(*_fdb .PdfObjectDictionary );_cegb .Set ("\u0046\u0054",_fdb .MakeName ("\u0043\u0068"));if _feagb .Opt !=nil {_cegb .Set ("\u004f\u0070\u0074",_feagb .Opt );
};if _feagb .TI !=nil {_cegb .Set ("\u0054\u0049",_feagb .TI );};if _feagb .I !=nil {_cegb .Set ("\u0049",_feagb .I );};return _ffee ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_aabf *PdfColorspaceDeviceN )GetNumComponents ()int {return _aabf .ColorantNames .Len ()};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_eaffb *PdfPageResources )GetXObjectByName (keyName _fdb .PdfObjectName )(*_fdb .PdfObjectStream ,XObjectType ){if _eaffb .XObject ==nil {return nil ,XObjectTypeUndefined ;};_geacc ,_gcagf :=_fdb .TraceToDirectObject (_eaffb .XObject ).(*_fdb .PdfObjectDictionary );
if !_gcagf {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdb .TraceToDirectObject (_eaffb .XObject ));
return nil ,XObjectTypeUndefined ;};if _cgcgg :=_geacc .Get (keyName );_cgcgg !=nil {_feccd ,_ccbf :=_fdb .GetStream (_cgcgg );if !_ccbf {_aa .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_cgcgg );
return nil ,XObjectTypeUndefined ;};_efcef :=_feccd .PdfObjectDictionary ;_gcaae ,_ccbf :=_fdb .TraceToDirectObject (_efcef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fdb .PdfObjectName );if !_ccbf {_aa .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_efcef .String ());
return nil ,XObjectTypeUndefined ;};if *_gcaae =="\u0049\u006d\u0061g\u0065"{return _feccd ,XObjectTypeImage ;}else if *_gcaae =="\u0046\u006f\u0072\u006d"{return _feccd ,XObjectTypeForm ;}else if *_gcaae =="\u0050\u0053"{return _feccd ,XObjectTypePS ;
}else {_aa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_gcaae );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// GetNumPages returns the number of pages in the document.
func (_edbg *PdfReader )GetNumPages ()(int ,error ){if _edbg ._dbbec .GetCrypter ()!=nil &&!_edbg ._dbbec .IsAuthenticated (){return 0,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_edbg ._dbged ),nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_acagec *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _acagec .RunesToCharcodeBytes ([]rune (str ));};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gaedb *PdfFont )ToUnicode ()string {if _gaedb .baseFields ()._egadb ==nil {return "";};return _gaedb .baseFields ()._egadb .Name ();};func _ecgfc ()string {_dacba .Lock ();defer _dacba .Unlock ();return _cgfdb };

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dacba .Lock ();defer _dacba .Unlock ();_fdadg =author };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_eeecf *PdfColorspaceDeviceN )ToPdfObject ()_fdb .PdfObject {_abef :=_fdb .MakeArray (_fdb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_abef .Append (_eeecf .ColorantNames );_abef .Append (_eeecf .AlternateSpace .ToPdfObject ());_abef .Append (_eeecf .TintTransform .ToPdfObject ());
if _eeecf .Attributes !=nil {_abef .Append (_eeecf .Attributes .ToPdfObject ());};if _eeecf ._fffc !=nil {_eeecf ._fffc .PdfObject =_abef ;return _eeecf ._fffc ;};return _abef ;};func (_bfcfg *PdfReader )newPdfFieldFromIndirectObject (_adcc *_fdb .PdfIndirectObject ,_eefe *PdfField )(*PdfField ,error ){if _cdcb ,_cabfa :=_bfcfg ._ggdg .GetModelFromPrimitive (_adcc ).(*PdfField );
_cabfa {return _cdcb ,nil ;};_ddcgc ,_aagdf :=_fdb .GetDict (_adcc );if !_aagdf {return nil ,_d .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_fbgcf :=NewPdfField ();_fbgcf ._gdgea =_adcc ;_fbgcf ._gdgea .PdfObject =_ddcgc ;if _abfa ,_ggbfb :=_fdb .GetName (_ddcgc .Get ("\u0046\u0054"));_ggbfb {_fbgcf .FT =_abfa ;};if _eefe !=nil {_fbgcf .Parent =_eefe ;};_fbgcf .T ,_ =_ddcgc .Get ("\u0054").(*_fdb .PdfObjectString );
_fbgcf .TU ,_ =_ddcgc .Get ("\u0054\u0055").(*_fdb .PdfObjectString );_fbgcf .TM ,_ =_ddcgc .Get ("\u0054\u004d").(*_fdb .PdfObjectString );_fbgcf .Ff ,_ =_ddcgc .Get ("\u0046\u0066").(*_fdb .PdfObjectInteger );_fbgcf .V =_ddcgc .Get ("\u0056");_fbgcf .DV =_ddcgc .Get ("\u0044\u0056");
_fbgcf .AA =_ddcgc .Get ("\u0041\u0041");if DA :=_ddcgc .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_fdb .GetString (DA );_fbgcf .VariableText =&VariableText {DA :DA };Q ,_ :=_ddcgc .Get ("\u0051").(*_fdb .PdfObjectInteger );DS ,_ :=_ddcgc .Get ("\u0044\u0053").(*_fdb .PdfObjectString );
RV :=_ddcgc .Get ("\u0052\u0056");_fbgcf .VariableText .Q =Q ;_fbgcf .VariableText .DS =DS ;_fbgcf .VariableText .RV =RV ;};_bdca :=_fbgcf .FT ;if _bdca ==nil &&_eefe !=nil {_bdca =_eefe .FT ;};if _bdca !=nil {switch *_bdca {case "\u0054\u0078":_cgac ,_dacag :=_bfdb (_ddcgc );
if _dacag !=nil {return nil ,_dacag ;};_cgac .PdfField =_fbgcf ;_fbgcf ._fega =_cgac ;case "\u0043\u0068":_dfgf ,_gcbgd :=_bcegf (_ddcgc );if _gcbgd !=nil {return nil ,_gcbgd ;};_dfgf .PdfField =_fbgcf ;_fbgcf ._fega =_dfgf ;case "\u0042\u0074\u006e":_gcgb ,_bbea :=_fffefd (_ddcgc );
if _bbea !=nil {return nil ,_bbea ;};_gcgb .PdfField =_fbgcf ;_fbgcf ._fega =_gcgb ;case "\u0053\u0069\u0067":_ddedb ,_ceed :=_bfcfg .newPdfFieldSignatureFromDict (_ddcgc );if _ceed !=nil {return nil ,_ceed ;};_ddedb .PdfField =_fbgcf ;_fbgcf ._fega =_ddedb ;
default:_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_fbgcf .FT );return nil ,_ee .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bgge ,_dggga :=_fdb .GetName (_ddcgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_dggga {if *_bgge =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dgad ,_cddga :=_bfcfg .newPdfAnnotationFromIndirectObject (_adcc );if _cddga !=nil {return nil ,_cddga ;
};_effgd ,_egfe :=_dgad .GetContext ().(*PdfAnnotationWidget );if !_egfe {return nil ,_ee .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_effgd ._ccg =_fbgcf ;_effgd .Parent =_fbgcf ._gdgea ;
_fbgcf .Annotations =append (_fbgcf .Annotations ,_effgd );return _fbgcf ,nil ;};};_egec :=true ;if _aadbbd ,_fgeee :=_fdb .GetArray (_ddcgc .Get ("\u004b\u0069\u0064\u0073"));_fgeee {_bagdb :=make ([]*_fdb .PdfIndirectObject ,0,_aadbbd .Len ());for _ ,_ccdb :=range _aadbbd .Elements (){_gcccf ,_feege :=_fdb .GetIndirect (_ccdb );
if !_feege {_dcag ,_gafd :=_fdb .GetStream (_ccdb );if _gafd &&_dcag .PdfObjectDictionary !=nil {_fcab ,_abcgg :=_fdb .GetNameVal (_dcag .Get ("\u0054\u0079\u0070\u0065"));if _abcgg &&_fcab =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_aa .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ee .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_edbd ,_cfdef :=_fdb .GetDict (_gcccf );
if !_cfdef {return nil ,ErrTypeCheck ;};if _egec {_egec =!_fbce (_edbd );};_bagdb =append (_bagdb ,_gcccf );};for _ ,_agda :=range _bagdb {if _egec {_adfc ,_fgfc :=_bfcfg .newPdfAnnotationFromIndirectObject (_agda );if _fgfc !=nil {_aa .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fgfc );
return nil ,_fgfc ;};_cfea ,_caeca :=_adfc ._abdg .(*PdfAnnotationWidget );if !_caeca {return nil ,ErrTypeCheck ;};_cfea ._ccg =_fbgcf ;_fbgcf .Annotations =append (_fbgcf .Annotations ,_cfea );}else {_febdf ,_babec :=_bfcfg .newPdfFieldFromIndirectObject (_agda ,_fbgcf );
if _babec !=nil {_aa .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_babec );return nil ,_babec ;};_fbgcf .Kids =append (_fbgcf .Kids ,_febdf );
};};};return _fbgcf ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fdb .PdfIndirectObject ;SV *_fdb .PdfIndirectObject ;};

// B returns the value of the B component of the color.
func (_gbbd *PdfColorLab )B ()float64 {return _gbbd [2]};

// ToPdfObject implements interface PdfModel.
func (_gffg *PdfAnnotation3D )ToPdfObject ()_fdb .PdfObject {_gffg .PdfAnnotation .ToPdfObject ();_gbaeb :=_gffg ._cgbd ;_bebb :=_gbaeb .PdfObject .(*_fdb .PdfObjectDictionary );_bebb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0033\u0044"));
_bebb .SetIfNotNil ("\u0033\u0044\u0044",_gffg .T3DD );_bebb .SetIfNotNil ("\u0033\u0044\u0056",_gffg .T3DV );_bebb .SetIfNotNil ("\u0033\u0044\u0041",_gffg .T3DA );_bebb .SetIfNotNil ("\u0033\u0044\u0049",_gffg .T3DI );_bebb .SetIfNotNil ("\u0033\u0044\u0042",_gffg .T3DB );
return _gbaeb ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_addeg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_eb .CharCode )(_ecdfe []rune ,_gdac ,_eebfc int ){_fedc ,_gdac ,_eebfc :=_addeg .CharcodesToStrings (charcodes );return []rune (_gga .Join (_fedc ,"")),_gdac ,_eebfc ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_gbefa *pdfFontSimple )SetEncoder (encoder _eb .TextEncoder ){_gbefa ._cafgd =encoder };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gecc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_agbg *DSS )ToPdfObject ()_fdb .PdfObject {_dadg :=_agbg ._bcfcg .PdfObject .(*_fdb .PdfObjectDictionary );_dadg .Clear ();_fffef :=_fdb .MakeDict ();for _efgfd ,_egbg :=range _agbg .VRI {_fffef .Set (*_fdb .MakeName (_efgfd ),_egbg .ToPdfObject ());
};_dadg .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_bfcga (_agbg .Certs ));_dadg .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_bfcga (_agbg .OCSPs ));_dadg .SetIfNotNil ("\u0043\u0052\u004c\u0073",_bfcga (_agbg .CRLs ));_dadg .Set ("\u0056\u0052\u0049",_fffef );
return _agbg ._bcfcg ;};

// AddImageResource adds an image to the XObject resources.
func (_gedca *PdfPage )AddImageResource (name _fdb .PdfObjectName ,ximg *XObjectImage )error {var _beabb *_fdb .PdfObjectDictionary ;if _gedca .Resources .XObject ==nil {_beabb =_fdb .MakeDict ();_gedca .Resources .XObject =_beabb ;}else {var _eggc bool ;
_beabb ,_eggc =(_gedca .Resources .XObject ).(*_fdb .PdfObjectDictionary );if !_eggc {return _ee .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_beabb .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_eee :=NewPdfAction ();_cc :=&PdfActionURI {};_cc .PdfAction =_eee ;_eee .SetContext (_cc );return _cc ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gefe *OutlineItem )ToPdfObject ()_fdb .PdfObject {_beacc ,_ :=_gefe .ToPdfOutlineItem ();return _beacc .ToPdfObject ();};func _dacg (_ccggc _fdb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_aa .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_ccggc .String (),_ccggc );
_dcac :=NewPdfColorspaceSpecialPattern ();if _dccgb ,_cfbb :=_ccggc .(*_fdb .PdfIndirectObject );_cfbb {_dcac ._fgbd =_dccgb ;};_ccggc =_fdb .TraceToDirectObject (_ccggc );if _fcba ,_edcf :=_ccggc .(*_fdb .PdfObjectName );_edcf {if *_fcba !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dcac ,nil ;};_gfabd ,_fafa :=_ccggc .(*_fdb .PdfObjectArray );if !_fafa {_aa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_ccggc );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gfabd .Len ()!=1&&_gfabd .Len ()!=2{_aa .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gfabd );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_ccggc =_gfabd .Get (0);if _egab ,_adcb :=_ccggc .(*_fdb .PdfObjectName );_adcb {if *_egab !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_aa .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_egab );
return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gfabd .Len ()> 1{_ccggc =_gfabd .Get (1);_ccggc =_fdb .TraceToDirectObject (_ccggc );_cdbc ,_gfcgf :=NewPdfColorspaceFromPdfObject (_ccggc );if _gfcgf !=nil {return nil ,_gfcgf ;
};_dcac .UnderlyingCS =_cdbc ;};_aa .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dcac .UnderlyingCS );
return _dcac ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dbcg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfaf ,_bcac :=_fdb .GetNumbersAsFloat (objects );
if _bcac !=nil {return nil ,_bcac ;};return _dbcg .ColorFromFloats (_bfaf );};func _ffaca (_edff _fdb .PdfObject )(*PdfFunctionType2 ,error ){_eacfe :=&PdfFunctionType2 {};var _gggcaa *_fdb .PdfObjectDictionary ;if _dgfd ,_cecga :=_edff .(*_fdb .PdfIndirectObject );
_cecga {_fcdefb ,_agaa :=_dgfd .PdfObject .(*_fdb .PdfObjectDictionary );if !_agaa {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eacfe ._bbfc =_dgfd ;_gggcaa =_fcdefb ;}else if _ccfc ,_bgcd :=_edff .(*_fdb .PdfObjectDictionary );
_bgcd {_gggcaa =_ccfc ;}else {return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aa .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_gggcaa .String ());_gbdb ,_bdccg :=_fdb .TraceToDirectObject (_gggcaa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fdb .PdfObjectArray );
if !_bdccg {_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ee .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gbdb .Len ()< 0||_gbdb .Len ()%2!=0{_aa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ee .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_edcdfe ,_dbfadb :=_gbdb .ToFloat64Array ();if _dbfadb !=nil {return nil ,_dbfadb ;};_eacfe .Domain =_edcdfe ;_gbdb ,_bdccg =_fdb .TraceToDirectObject (_gggcaa .Get ("\u0052\u0061\u006eg\u0065")).(*_fdb .PdfObjectArray );if _bdccg {if _gbdb .Len ()< 0||_gbdb .Len ()%2!=0{return nil ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cefec ,_dbddd :=_gbdb .ToFloat64Array ();if _dbddd !=nil {return nil ,_dbddd ;};_eacfe .Range =_cefec ;};_gbdb ,_bdccg =_fdb .TraceToDirectObject (_gggcaa .Get ("\u0043\u0030")).(*_fdb .PdfObjectArray );if _bdccg {_bgbf ,_eggbg :=_gbdb .ToFloat64Array ();
if _eggbg !=nil {return nil ,_eggbg ;};_eacfe .C0 =_bgbf ;};_gbdb ,_bdccg =_fdb .TraceToDirectObject (_gggcaa .Get ("\u0043\u0031")).(*_fdb .PdfObjectArray );if _bdccg {_ccad ,_efec :=_gbdb .ToFloat64Array ();if _efec !=nil {return nil ,_efec ;};_eacfe .C1 =_ccad ;
};if len (_eacfe .C0 )!=len (_eacfe .C1 ){_aa .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fdb .ErrRangeError ;};N ,_dbfadb :=_fdb .GetNumberAsFloat (_fdb .TraceToDirectObject (_gggcaa .Get ("\u004e")));
if _dbfadb !=nil {_aa .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_gggcaa .String ());return nil ,_dbfadb ;};_eacfe .N =N ;
return _eacfe ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_gefdf *PdfOutlineTreeNode )GetContainingPdfObject ()_fdb .PdfObject {return _gefdf .GetContext ().GetContainingPdfObject ();};func _aacge ()_ag .Time {_dacba .Lock ();defer _dacba .Unlock ();return _fgdee };func _eedfae (_bffb []byte )[]byte {const _efdbd =52845;
const _bcbg =22719;_acega :=55665;for _ ,_cfbbd :=range _bffb [:4]{_acega =(int (_cfbbd )+_acega )*_efdbd +_bcbg ;};_gdcdg :=make ([]byte ,len (_bffb )-4);for _eeeca ,_fcag :=range _bffb [4:]{_gdcdg [_eeeca ]=byte (int (_fcag )^_acega >>8);_acega =(int (_fcag )+_acega )*_efdbd +_bcbg ;
};return _gdcdg ;};func _bfcga (_aadda []*_fdb .PdfObjectStream )*_fdb .PdfObjectArray {if len (_aadda )==0{return nil ;};_fdbgad :=make ([]_fdb .PdfObject ,0,len (_aadda ));for _ ,_edebf :=range _aadda {_fdbgad =append (_fdbgad ,_edebf );};return _fdb .MakeArray (_fdbgad ...);
};

// SetContext set the sub annotation (context).
func (_ddaeg *PdfShading )SetContext (ctx PdfModel ){_ddaeg ._eaefc =ctx };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ddde *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_dgga *PdfPageResources )AddExtGState (gsName _fdb .PdfObjectName ,gsDict _fdb .PdfObject )error {if _dgga .ExtGState ==nil {_dgga .ExtGState =_fdb .MakeDict ();};_afbcec :=_dgga .ExtGState ;_dbffa ,_egaca :=_fdb .TraceToDirectObject (_afbcec ).(*_fdb .PdfObjectDictionary );
if !_egaca {_aa .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_afbcec ,_fdb .TraceToDirectObject (_afbcec ));
return _fdb .ErrTypeError ;};_dbffa .Set (gsName ,gsDict );return nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fdfdb *PdfPageResources )SetXObjectImageByName (keyName _fdb .PdfObjectName ,ximg *XObjectImage )error {_bdggc :=ximg .ToPdfObject ().(*_fdb .PdfObjectStream );_gdcdgb :=_fdfdb .SetXObjectByName (keyName ,_bdggc );return _gdcdgb ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bdb :=NewPdfAction ();_bbg :=&PdfActionResetForm {};_bbg .PdfAction =_bdb ;_bdb .SetContext (_bbg );return _bbg ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bddf *PdfColorspaceICCBased )ToPdfObject ()_fdb .PdfObject {_eecg :=&_fdb .PdfObjectArray {};_eecg .Append (_fdb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _dfdeg *_fdb .PdfObjectStream ;if _bddf ._daec !=nil {_dfdeg =_bddf ._daec ;
}else {_dfdeg =&_fdb .PdfObjectStream {};};_ddcba :=_fdb .MakeDict ();_ddcba .Set ("\u004e",_fdb .MakeInteger (int64 (_bddf .N )));if _bddf .Alternate !=nil {_ddcba .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bddf .Alternate .ToPdfObject ());
};if _bddf .Metadata !=nil {_ddcba .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bddf .Metadata );};if _bddf .Range !=nil {var _fffea []_fdb .PdfObject ;for _ ,_baff :=range _bddf .Range {_fffea =append (_fffea ,_fdb .MakeFloat (_baff ));};
_ddcba .Set ("\u0052\u0061\u006eg\u0065",_fdb .MakeArray (_fffea ...));};_ddcba .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fdb .MakeInteger (int64 (len (_bddf .Data ))));_dfdeg .Stream =_bddf .Data ;_dfdeg .PdfObjectDictionary =_ddcba ;_eecg .Append (_dfdeg );
if _bddf ._ddeb !=nil {_bddf ._ddeb .PdfObject =_eecg ;return _bddf ._ddeb ;};return _eecg ;};

// GetSubFilter returns SubFilter value or empty string.
func (_fbdaa *pdfSignDictionary )GetSubFilter ()string {_ggbfg :=_fbdaa .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _ggbfg ==nil {return "";};if _bfbgf ,_gdeag :=_fdb .GetNameVal (_ggbfg );_gdeag {return _bfbgf ;};return "";};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func (_dfbba *PdfSignature )extractChainFromPKCS7 ()([]*_fa .Certificate ,error ){_bdbba ,_fcabe :=_gd .Parse (_dfbba .Contents .Bytes ());if _fcabe !=nil {return nil ,_fcabe ;
};return _bdbba .Certificates ,nil ;};func (_egbe *pdfFontSimple )addEncoding ()error {var (_acea string ;_cecd map[_eb .CharCode ]_eb .GlyphName ;_aabb _eb .SimpleEncoder ;);if _egbe .Encoder ()!=nil {_ffecb ,_faac :=_egbe .Encoder ().(_eb .SimpleEncoder );
if _faac &&_ffecb !=nil {_acea =_ffecb .BaseName ();};};if _egbe .Encoding !=nil {_bdgba ,_faea ,_eddd :=_egbe .getFontEncoding ();if _eddd !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_egbe ._gfdda ,_egbe ._eaae ,_egbe .Encoding ,_egbe .Encoding ,_eddd );
return _eddd ;};if _bdgba !=""{_acea =_bdgba ;};_cecd =_faea ;_aabb ,_eddd =_eb .NewSimpleTextEncoder (_acea ,_cecd );if _eddd !=nil {return _eddd ;};};if _aabb ==nil {_gfdgf :=_egbe ._ecde ;if _gfdgf !=nil {switch _egbe ._eaae {case "\u0054\u0079\u0070e\u0031":if _gfdgf .fontFile !=nil &&_gfdgf .fontFile ._aabc !=nil {_aa .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_aabb =_gfdgf .fontFile ._aabc ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _gfdgf ._dgcgb !=nil {_aa .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_decee ,_dfcg :=_gfdgf ._dgcgb .MakeEncoder ();
if _dfcg ==nil {_aabb =_decee ;};};};};};if _aabb !=nil {if _cecd !=nil {_aa .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cecd ,_egbe .baseFields ());_aabb =_eb .ApplyDifferences (_aabb ,_cecd );
};_egbe .SetEncoder (_aabb );};return nil ;};func (_fea *PdfReader )newPdfAnnotationRichMediaFromDict (_ddcb *_fdb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ffeg :=&PdfAnnotationRichMedia {};_ffeg .RichMediaSettings =_ddcb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_ffeg .RichMediaContent =_ddcb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ffeg ,nil ;};func _afga (_eebfde *_fdb .PdfObjectArray )(float64 ,error ){_bgbge ,_bfaba :=_eebfde .ToFloat64Array ();
if _bfaba !=nil {_aa .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eebfde ,_bfaba );};switch len (_bgbge ){case 1:return _bgbge [0],nil ;
case 3:_efdfc :=PdfColorspaceDeviceRGB {};_bcab ,_gcgef :=_efdfc .ColorFromFloats (_bgbge );if _gcgef !=nil {return 0.0,_gcgef ;};return _bcab .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_aaacb :=PdfColorspaceDeviceCMYK {};_eagf ,_ggggfd :=_aaacb .ColorFromFloats (_bgbge );
if _ggggfd !=nil {return 0.0,_ggggfd ;};_ffabd ,_ggggfd :=_aaacb .ColorToRGB (_eagf .(*PdfColorDeviceCMYK ));if _ggggfd !=nil {return 0.0,_ggggfd ;};return _ffabd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_bfaba =_ee .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_aa .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eebfde ,_bfaba );return 0.0,_bfaba ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_afeaa *PdfWriter )SetOptimizer (optimizer Optimizer ){_afeaa ._ffbbb =optimizer };func (_ffcc *PdfReader )newPdfAcroFormFromDict (_ffgcb *_fdb .PdfIndirectObject ,_dfcbd *_fdb .PdfObjectDictionary )(*PdfAcroForm ,error ){_bbaa :=NewPdfAcroForm ();
if _ffgcb !=nil {_bbaa ._fdbdd =_ffgcb ;_ffgcb .PdfObject =_fdb .MakeDict ();};if _dcfb :=_dfcbd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_dcfb !=nil &&!_fdb .IsNullObject (_dcfb ){_ddcbe ,_cdbd :=_fdb .GetArray (_dcfb );if !_cdbd {return nil ,_d .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dcfb );
};var _caeae []*PdfField ;for _ ,_babef :=range _ddcbe .Elements (){_cfgg ,_dcdf :=_fdb .GetIndirect (_babef );if !_dcdf {if _ ,_geaf :=_babef .(*_fdb .PdfObjectNull );_geaf {_aa .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_aa .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_babef );
return nil ,_d .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fdagdd ,_dfaf :=_ffcc .newPdfFieldFromIndirectObject (_cfgg ,nil );
if _dfaf !=nil {return nil ,_dfaf ;};_aa .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fdagdd );_caeae =append (_caeae ,_fdagdd );};_bbaa .Fields =&_caeae ;};if _dffee :=_dfcbd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dffee !=nil {_cege ,_dceeb :=_fdb .GetBool (_dffee );if _dceeb {_bbaa .NeedAppearances =_cege ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dffee );
};};if _bgadg :=_dfcbd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bgadg !=nil {_aeece ,_cgcb :=_fdb .GetInt (_bgadg );if _cgcb {_bbaa .SigFlags =_aeece ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgadg );
};};if _bgeb :=_dfcbd .Get ("\u0043\u004f");_bgeb !=nil {_gddf ,_aagga :=_fdb .GetArray (_bgeb );if _aagga {_bbaa .CO =_gddf ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bgeb );
};};if _abad :=_dfcbd .Get ("\u0044\u0052");_abad !=nil {if _gcbe ,_fdfb :=_fdb .GetDict (_abad );_fdfb {_agfff ,_fgafg :=NewPdfPageResourcesFromDict (_gcbe );if _fgafg !=nil {_aa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fgafg );
return nil ,_fgafg ;};_bbaa .DR =_agfff ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_abad );};};if _ddec :=_dfcbd .Get ("\u0044\u0041");
_ddec !=nil {_dcgb ,_eabg :=_fdb .GetString (_ddec );if _eabg {_bbaa .DA =_dcgb ;}else {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ddec );
};};if _geegg :=_dfcbd .Get ("\u0051");_geegg !=nil {_cgaca ,_ebbg :=_fdb .GetInt (_geegg );if _ebbg {_bbaa .Q =_cgaca ;}else {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_geegg );
};};if _adeff :=_dfcbd .Get ("\u0058\u0046\u0041");_adeff !=nil {_bbaa .XFA =_adeff ;};_bbaa .ToPdfObject ();return _bbaa ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gfge *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gaee ,_gfbe :=color .(*PdfColorDeviceGray );if !_gfbe {_aa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gaee ),float64 (*_gaee ),float64 (*_gaee )),nil ;};

// HasFontByName checks if has font resource by name.
func (_fgdfa *PdfPage )HasFontByName (name _fdb .PdfObjectName )bool {_bgfe ,_agdfb :=_fgdfa .Resources .Font .(*_fdb .PdfObjectDictionary );if !_agdfb {return false ;};if _ddfee :=_bgfe .Get (name );_ddfee !=nil {return true ;};return false ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dbafd :=&PdfSignature {Type :_fdb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_cafgdg :=&pdfSignDictionary {PdfObjectDictionary :_fdb .MakeDict (),_cdgac :&handler ,_daadf :_dbafd };
_dbafd ._eeabe =_fdb .MakeIndirectObject (_cafgdg );return _dbafd ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_fdagf *PdfShading )GetContainingPdfObject ()_fdb .PdfObject {return _fdagf ._dcfdb };

// ToPdfObject implements interface PdfModel.
func (_cff *PdfActionGoToR )ToPdfObject ()_fdb .PdfObject {_cff .PdfAction .ToPdfObject ();_fab :=_cff ._ae ;_aef :=_fab .PdfObject .(*_fdb .PdfObjectDictionary );_aef .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeGoToR )));if _cff .F !=nil {_aef .Set ("\u0046",_cff .F .ToPdfObject ());
};_aef .SetIfNotNil ("\u0044",_cff .D );_aef .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cff .NewWindow );return _fab ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);


// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bbdd *pdfCIDFontType2 )ToPdfObject ()_fdb .PdfObject {if _bbdd ._feaf ==nil {_bbdd ._feaf =&_fdb .PdfIndirectObject {};};_cccd :=_bbdd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_bbdd ._feaf .PdfObject =_cccd ;
if _bbdd .CIDSystemInfo !=nil {_cccd .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bbdd .CIDSystemInfo );};if _bbdd .DW !=nil {_cccd .Set ("\u0044\u0057",_bbdd .DW );};if _bbdd .DW2 !=nil {_cccd .Set ("\u0044\u0057\u0032",_bbdd .DW2 );
};if _bbdd .W !=nil {_cccd .Set ("\u0057",_bbdd .W );};if _bbdd .W2 !=nil {_cccd .Set ("\u0057\u0032",_bbdd .W2 );};if _bbdd .CIDToGIDMap !=nil {_cccd .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bbdd .CIDToGIDMap );};return _bbdd ._feaf ;
};var _ pdfFont =(*pdfFontSimple )(nil );

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_gbg :=NewPdfAnnotation ();_gdc :=&PdfAnnotationLine {};_gdc .PdfAnnotation =_gbg ;_gdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbg .SetContext (_gdc );return _gdc ;};

// Val returns the color value.
func (_beef *PdfColorDeviceGray )Val ()float64 {return float64 (*_beef )};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fdb .PdfObject ;Name _fdb .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_abce *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ag .Time )(PdfDate ,error ){_dacga :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_dgab ,_ :=_bge .ParseInt (_dacga [1:3],10,32);_dgbe ,_ :=_bge .ParseInt (_dacga [4:6],10,32);return PdfDate {_aabcd :int64 (timeObj .Year ()),_gdgeae :int64 (timeObj .Month ()),_dgfdg :int64 (timeObj .Day ()),_dcdgg :int64 (timeObj .Hour ()),_gece :int64 (timeObj .Minute ()),_bfegga :int64 (timeObj .Second ()),_gcddcc :_dacga [0],_dbbad :_dgab ,_gfacg :_dgbe },nil ;
};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_agcfa *PdfAcroForm )ToPdfObject ()_fdb .PdfObject {_addfd :=_agcfa ._fdbdd ;_cgaf :=_addfd .PdfObject .(*_fdb .PdfObjectDictionary );if _agcfa .Fields !=nil {_dbbb :=_fdb .PdfObjectArray {};for _ ,_egaga :=range *_agcfa .Fields {_fccfa :=_egaga .GetContext ();
if _fccfa !=nil {_dbbb .Append (_fccfa .ToPdfObject ());}else {_dbbb .Append (_egaga .ToPdfObject ());};};_cgaf .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dbbb );};if _agcfa .NeedAppearances !=nil {_cgaf .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_agcfa .NeedAppearances );
};if _agcfa .SigFlags !=nil {_cgaf .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_agcfa .SigFlags );};if _agcfa .CO !=nil {_cgaf .Set ("\u0043\u004f",_agcfa .CO );};if _agcfa .DR !=nil {_cgaf .Set ("\u0044\u0052",_agcfa .DR .ToPdfObject ());
};if _agcfa .DA !=nil {_cgaf .Set ("\u0044\u0041",_agcfa .DA );};if _agcfa .Q !=nil {_cgaf .Set ("\u0051",_agcfa .Q );};if _agcfa .XFA !=nil {_cgaf .Set ("\u0058\u0046\u0041",_agcfa .XFA );};return _addfd ;};func (_bgdcg *PdfWriter )getPdfVersion ()string {return _d .Sprintf ("\u0025\u0064\u002e%\u0064",_bgdcg ._bgagb .Major ,_bgdcg ._bgagb .Minor );
};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bfgc *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdga ,_dgcg :=color .(*PdfColorCalGray );if !_dgcg {_aa .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cdga .Val ();X :=_bfgc .WhitePoint [0]*_fag .Pow (ANorm ,_bfgc .Gamma );Y :=_bfgc .WhitePoint [1]*_fag .Pow (ANorm ,_bfgc .Gamma );
Z :=_bfgc .WhitePoint [2]*_fag .Pow (ANorm ,_bfgc .Gamma );_fdgec :=3.240479*X +-1.537150*Y +-0.498535*Z ;_efda :=-0.969256*X +1.875992*Y +0.041556*Z ;_gggca :=0.055648*X +-0.204043*Y +1.057311*Z ;_fdgec =_fag .Min (_fag .Max (_fdgec ,0),1.0);_efda =_fag .Min (_fag .Max (_efda ,0),1.0);
_gggca =_fag .Min (_fag .Max (_gggca ,0),1.0);return NewPdfColorDeviceRGB (_fdgec ,_efda ,_gggca ),nil ;};func _dacgdc (_fgcac _fdb .PdfObject )(*PdfShading ,error ){_bfggea :=&PdfShading {};var _fbef *_fdb .PdfObjectDictionary ;if _gdbbc ,_ccbff :=_fdb .GetIndirect (_fgcac );
_ccbff {_bfggea ._dcfdb =_gdbbc ;_cfdg ,_gfdde :=_gdbbc .PdfObject .(*_fdb .PdfObjectDictionary );if !_gfdde {_aa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fdb .ErrTypeError ;};_fbef =_cfdg ;}else if _agebd ,_bdgce :=_fdb .GetStream (_fgcac );_bdgce {_bfggea ._dcfdb =_agebd ;_fbef =_agebd .PdfObjectDictionary ;}else if _ebaaf ,_faffg :=_fdb .GetDict (_fgcac );_faffg {_bfggea ._dcfdb =_ebaaf ;
_fbef =_ebaaf ;}else {_aa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_fgcac );return nil ,_fdb .ErrTypeError ;};if _fbef ==nil {_aa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ee .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fgcac =_fbef .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fgcac ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fgcac =_fdb .TraceToDirectObject (_fgcac );_fdbga ,_cabfg :=_fgcac .(*_fdb .PdfObjectInteger );if !_cabfg {_aa .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fgcac );
return nil ,_fdb .ErrTypeError ;};if *_fdbga < 1||*_fdbga > 7{_aa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fdbga );
return nil ,_fdb .ErrTypeError ;};_bfggea .ShadingType =_fdbga ;_fgcac =_fbef .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _fgcac ==nil {_aa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfbbc ,_beabc :=NewPdfColorspaceFromPdfObject (_fgcac );if _beabc !=nil {_aa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_beabc );
return nil ,_beabc ;};_bfggea .ColorSpace =_cfbbc ;_fgcac =_fbef .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _fgcac !=nil {_fgcac =_fdb .TraceToDirectObject (_fgcac );_gggd ,_dbabd :=_fgcac .(*_fdb .PdfObjectArray );if !_dbabd {_aa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fgcac );
return nil ,_fdb .ErrTypeError ;};_bfggea .Background =_gggd ;};_fgcac =_fbef .Get ("\u0042\u0042\u006f\u0078");if _fgcac !=nil {_fgcac =_fdb .TraceToDirectObject (_fgcac );_agceb ,_dcagd :=_fgcac .(*_fdb .PdfObjectArray );if !_dcagd {_aa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fgcac );
return nil ,_fdb .ErrTypeError ;};_caceb ,_gaeb :=NewPdfRectangle (*_agceb );if _gaeb !=nil {_aa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gaeb );return nil ,_gaeb ;};_bfggea .BBox =_caceb ;};_fgcac =_fbef .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _fgcac !=nil {_fgcac =_fdb .TraceToDirectObject (_fgcac );_eccee ,_cdced :=_fgcac .(*_fdb .PdfObjectBool );if !_cdced {_aa .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgcac );
return nil ,_fdb .ErrTypeError ;};_bfggea .AntiAlias =_eccee ;};switch *_fdbga {case 1:_bdab ,_bdeggg :=_accae (_fbef );if _bdeggg !=nil {return nil ,_bdeggg ;};_bdab .PdfShading =_bfggea ;_bfggea ._eaefc =_bdab ;return _bfggea ,nil ;case 2:_fdaea ,_cceb :=_fcged (_fbef );
if _cceb !=nil {return nil ,_cceb ;};_fdaea .PdfShading =_bfggea ;_bfggea ._eaefc =_fdaea ;return _bfggea ,nil ;case 3:_gabcd ,_efca :=_feeed (_fbef );if _efca !=nil {return nil ,_efca ;};_gabcd .PdfShading =_bfggea ;_bfggea ._eaefc =_gabcd ;return _bfggea ,nil ;
case 4:_fgeg ,_daebd :=_dceaa (_fbef );if _daebd !=nil {return nil ,_daebd ;};_fgeg .PdfShading =_bfggea ;_bfggea ._eaefc =_fgeg ;return _bfggea ,nil ;case 5:_cdbbd ,_beeb :=_ceedb (_fbef );if _beeb !=nil {return nil ,_beeb ;};_cdbbd .PdfShading =_bfggea ;
_bfggea ._eaefc =_cdbbd ;return _bfggea ,nil ;case 6:_cebbf ,_aegfc :=_cedgg (_fbef );if _aegfc !=nil {return nil ,_aegfc ;};_cebbf .PdfShading =_bfggea ;_bfggea ._eaefc =_cebbf ;return _bfggea ,nil ;case 7:_bcce ,_dbcea :=_edfcf (_fbef );if _dbcea !=nil {return nil ,_dbcea ;
};_bcce .PdfShading =_bfggea ;_bfggea ._eaefc =_bcce ;return _bfggea ,nil ;};return nil ,_ee .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bfcea pdfFontType0 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){if _bfcea .DescendantFont ==nil {_aa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bfcea );
return _fc .CharMetrics {},false ;};return _bfcea .DescendantFont .GetRuneMetrics (r );};

// GetDescent returns the Descent of the font `descriptor`.
func (_fdcc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fdb .GetNumberAsFloat (_fdcc .Descent );};

// ToPdfObject implements interface PdfModel.
func (_ffea *PdfAnnotationPolyLine )ToPdfObject ()_fdb .PdfObject {_ffea .PdfAnnotation .ToPdfObject ();_dgac :=_ffea ._cgbd ;_bgga :=_dgac .PdfObject .(*_fdb .PdfObjectDictionary );_ffea .PdfAnnotationMarkup .appendToPdfDictionary (_bgga );_bgga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_bgga .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ffea .Vertices );_bgga .SetIfNotNil ("\u004c\u0045",_ffea .LE );_bgga .SetIfNotNil ("\u0042\u0053",_ffea .BS );_bgga .SetIfNotNil ("\u0049\u0043",_ffea .IC );_bgga .SetIfNotNil ("\u0042\u0045",_ffea .BE );
_bgga .SetIfNotNil ("\u0049\u0054",_ffea .IT );_bgga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffea .Measure );return _dgac ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cdcdd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fdb .PdfObjectDictionary )(*PdfPageResources ,error ){_bbbgg :=NewPdfPageResources ();if _eaag :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_eaag !=nil {_bbbgg .ExtGState =_eaag ;};if _fabcb :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fabcb !=nil &&!_fdb .IsNullObject (_fabcb ){_bbbgg .ColorSpace =_fabcb ;};if _cgfda :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cgfda !=nil {_bbbgg .Pattern =_cgfda ;};if _cacg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_cacg !=nil {_bbbgg .Shading =_cacg ;
};if _bfabde :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bfabde !=nil {_bbbgg .XObject =_bfabde ;};if _afggd :=_fdb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_afggd !=nil {_bbbgg .Font =_afggd ;};if _adgdf :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_adgdf !=nil {_bbbgg .ProcSet =_adgdf ;};if _ecfa :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ecfa !=nil {_bbbgg .Properties =_ecfa ;};return _bbbgg ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_gcaa *PdfFont )BaseFont ()string {return _gcaa .baseFields ()._gfdda };func (_fcaaa *PdfWriter )writeAcroFormFields ()error {if _fcaaa ._cabbd ==nil {return nil ;};_aa .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_ffaa :=_fcaaa ._cabbd .ToPdfObject ();_aa .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ffaa );_fcaaa ._gbged .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ffaa );_aceafb :=_fcaaa .addObjects (_ffaa );
if _aceafb !=nil {return _aceafb ;};return nil ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_bfdcg *CompliancePdfReader )error ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ca .ReadSeeker )(*PdfFont ,error ){_bdbca ,_baefb :=_abb .ReadAll (r );if _baefb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_baefb );
return nil ,_baefb ;};_gaade ,_baefb :=_fc .TtfParse (_de .NewReader (_bdbca ));if _baefb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_baefb );
return nil ,_baefb ;};_cbfc :=&pdfCIDFontType2 {fontCommon :fontCommon {_eaae :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fdb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_gaade .Widths )<=0{return nil ,_ee .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bbfgc :=1000.0/float64 (_gaade .UnitsPerEm );_agdabf :=_bbfgc *float64 (_gaade .Widths [0]);_fgdc :=make (map[rune ]int );_bdbb :=make (map[_fc .GID ]int );_ecafb :=_fc .GID (len (_gaade .Widths ));for _bcgab ,_agfdg :=range _gaade .Chars {if _agfdg > _ecafb -1{continue ;
};_cebec :=int (_bbfgc *float64 (_gaade .Widths [_agfdg ]));_fgdc [_bcgab ]=_cebec ;_bdbb [_agfdg ]=_cebec ;};_cbfc ._dadbc =_fgdc ;_cbfc .DW =_fdb .MakeInteger (int64 (_agdabf ));_dfedd :=_acaga (_bdbb ,uint16 (_ecafb ));_cbfc .W =_fdb .MakeIndirectObject (_dfedd );
_fbaef :=_fdb .MakeDict ();_fbaef .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fdb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fbaef .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fdb .MakeString ("\u0041\u0064\u006fb\u0065"));
_fbaef .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fdb .MakeInteger (0));_cbfc .CIDSystemInfo =_fbaef ;_bgba :=&PdfFontDescriptor {FontName :_fdb .MakeName (_gaade .PostScriptName ),Ascent :_fdb .MakeFloat (_bbfgc *float64 (_gaade .TypoAscender )),Descent :_fdb .MakeFloat (_bbfgc *float64 (_gaade .TypoDescender )),CapHeight :_fdb .MakeFloat (_bbfgc *float64 (_gaade .CapHeight )),FontBBox :_fdb .MakeArrayFromFloats ([]float64 {_bbfgc *float64 (_gaade .Xmin ),_bbfgc *float64 (_gaade .Ymin ),_bbfgc *float64 (_gaade .Xmax ),_bbfgc *float64 (_gaade .Ymax )}),ItalicAngle :_fdb .MakeFloat (_gaade .ItalicAngle ),MissingWidth :_fdb .MakeFloat (_agdabf )};
_ffdgg ,_baefb :=_fdb .MakeStream (_bdbca ,_fdb .NewFlateEncoder ());if _baefb !=nil {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_baefb );
return nil ,_baefb ;};_ffdgg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fdb .MakeInteger (int64 (len (_bdbca ))));_bgba .FontFile2 =_ffdgg ;if _gaade .Bold {_bgba .StemV =_fdb .MakeInteger (120);}else {_bgba .StemV =_fdb .MakeInteger (70);
};_bdbf :=_bfdbf ;if _gaade .IsFixedPitch {_bdbf |=_bgede ;};if _gaade .ItalicAngle !=0{_bdbf |=_fcddf ;};_bgba .Flags =_fdb .MakeInteger (int64 (_bdbf ));_cbfc ._gfdda =_gaade .PostScriptName ;_cbfc ._ecde =_bgba ;_fdbce :=pdfFontType0 {fontCommon :fontCommon {_eaae :"\u0054\u0079\u0070e\u0030",_gfdda :_gaade .PostScriptName },DescendantFont :&PdfFont {_babcd :_cbfc },Encoding :_fdb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_beaaf :_gaade .NewEncoder ()};
if len (_gaade .Chars )> 0{_fdgf :=make (map[_cgc .CharCode ]rune ,len (_gaade .Chars ));for _bbdc ,_fgbcf :=range _gaade .Chars {_bbfba :=_cgc .CharCode (_fgbcf );if _cbff ,_cfcfa :=_fdgf [_bbfba ];!_cfcfa ||(_cfcfa &&_cbff > _bbdc ){_fdgf [_bbfba ]=_bbdc ;
};};_fdbce ._egadb =_cgc .NewToUnicodeCMap (_fdgf );};_abae :=PdfFont {_babcd :&_fdbce };return &_abae ,nil ;};func (_fdag *PdfAnnotation )String ()string {_caa :="";_bbef ,_fdfd :=_fdag .ToPdfObject ().(*_fdb .PdfIndirectObject );if _fdfd {_caa =_d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fdag ._abdg ,_bbef .PdfObject .String ());
};return _caa ;};

// ToPdfObject implements interface PdfModel.
func (_age *PdfActionGoToE )ToPdfObject ()_fdb .PdfObject {_age .PdfAction .ToPdfObject ();_dd :=_age ._ae ;_eg :=_dd .PdfObject .(*_fdb .PdfObjectDictionary );_eg .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeGoToE )));if _age .F !=nil {_eg .Set ("\u0046",_age .F .ToPdfObject ());
};_eg .SetIfNotNil ("\u0044",_age .D );_eg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_age .NewWindow );_eg .SetIfNotNil ("\u0054",_age .T );return _dd ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_edb :=NewPdfAction ();_db :=&PdfActionHide {};_db .PdfAction =_edb ;_edb .SetContext (_db );return _db ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gfcbg *XObjectImage )ToImage ()(*Image ,error ){_fdgef :=&Image {};if _gfcbg .Height ==nil {return nil ,_ee .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fdgef .Height =*_gfcbg .Height ;if _gfcbg .Width ==nil {return nil ,_ee .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fdgef .Width =*_gfcbg .Width ;if _gfcbg .BitsPerComponent ==nil {switch _gfcbg .Filter .(type ){case *_fdb .CCITTFaxEncoder ,*_fdb .JBIG2Encoder :_fdgef .BitsPerComponent =1;
case *_fdb .LZWEncoder ,*_fdb .RunLengthEncoder :_fdgef .BitsPerComponent =8;default:return nil ,_ee .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fdgef .BitsPerComponent =*_gfcbg .BitsPerComponent ;};_fdgef .ColorComponents =_gfcbg .ColorSpace .GetNumComponents ();_gfcbg ._aagea .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fdb .MakeInteger (int64 (_fdgef .ColorComponents )));
_daecf ,_ababc :=_fdb .DecodeStream (_gfcbg ._aagea );if _ababc !=nil {return nil ,_ababc ;};_fdgef .Data =_daecf ;if _gfcbg .Decode !=nil {_bccab ,_bgcdd :=_gfcbg .Decode .(*_fdb .PdfObjectArray );if !_bgcdd {_aa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ee .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gbbg ,_bgdea :=_bccab .ToFloat64Array ();if _bgdea !=nil {return nil ,_bgdea ;};_fdgef ._gcgd =_gbbg ;};return _fdgef ,nil ;};type pdfCIDFontType2 struct{fontCommon ;
_feaf *_fdb .PdfIndirectObject ;_facgd _eb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fdb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fdb .PdfObject ;W _fdb .PdfObject ;DW2 _fdb .PdfObject ;W2 _fdb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fdb .PdfObject ;_daabe map[_eb .CharCode ]float64 ;_afagc float64 ;_dadbc map[rune ]int ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_be .PSProgram ;_cfggc *_be .PSExecutor ;_cbba []byte ;_dcceg *_fdb .PdfObjectStream ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_eabcg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ee .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bbec ,_efafc :=_ff .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._dcaf ,img ._gcgd );if _efafc !=nil {return img ,_efafc ;};_ecb ,_efafc :=_ff .NRGBAConverter .Convert (_bbec );if _efafc !=nil {return img ,_efafc ;
};_affdc :=_cdbdc (_ecb .Base ());_aa .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_aa .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_aa .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_affdc .Data );
_aa .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_affdc );return _affdc ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_efgf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cebb :=func (_accc float64 )float64 {if _accc >=6.0/29{return _accc *_accc *_accc ;};return 108.0/841*(_accc -4/29);};_gecd ,_fecee :=color .(*PdfColorLab );if !_fecee {_aa .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gecd .L ();AStar :=_gecd .A ();BStar :=_gecd .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_efgf .WhitePoint [0]*_cebb (L );Y :=_efgf .WhitePoint [1]*_cebb (M );Z :=_efgf .WhitePoint [2]*_cebb (N );_bdbcg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ceae :=-0.969256*X +1.875992*Y +0.041556*Z ;_ffaf :=0.055648*X +-0.204043*Y +1.057311*Z ;_bdbcg =_fag .Min (_fag .Max (_bdbcg ,0),1.0);
_ceae =_fag .Min (_fag .Max (_ceae ,0),1.0);_ffaf =_fag .Min (_fag .Max (_ffaf ,0),1.0);return NewPdfColorDeviceRGB (_bdbcg ,_ceae ,_ffaf ),nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gdbdd :=&PdfFieldSignature {};_gdbdd .PdfField =NewPdfField ();_gdbdd .PdfField .SetContext (_gdbdd );_gdbdd .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gdbdd .PdfAnnotationWidget .SetContext (_gdbdd );
_gdbdd .PdfAnnotationWidget ._cgbd =_gdbdd .PdfField ._gdgea ;_gdbdd .T =_fdb .MakeString ("");_gdbdd .F =_fdb .MakeInteger (132);_gdbdd .V =signature ;return _gdbdd ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_gddbb *_eec .Document )error ;};func _feeed (_bgde *_fdb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fddea :=PdfShadingType3 {};_ddffe :=_bgde .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ddffe ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bgafe ,_gecb :=_ddffe .(*_fdb .PdfObjectArray );if !_gecb {_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddffe );
return nil ,_fdb .ErrTypeError ;};if _bgafe .Len ()!=6{_aa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bgafe .Len ());return nil ,ErrInvalidAttribute ;
};_fddea .Coords =_bgafe ;if _egbaa :=_bgde .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_egbaa !=nil {_egbaa =_fdb .TraceToDirectObject (_egbaa );_cgacd ,_cfgf :=_egbaa .(*_fdb .PdfObjectArray );if !_cfgf {_aa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egbaa );
return nil ,_fdb .ErrTypeError ;};_fddea .Domain =_cgacd ;};_ddffe =_bgde .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddffe ==nil {_aa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fddea .Function =[]PdfFunction {};if _edgc ,_dafeb :=_ddffe .(*_fdb .PdfObjectArray );_dafeb {for _ ,_edcff :=range _edgc .Elements (){_cbca ,_eddbd :=_cfgbc (_edcff );if _eddbd !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eddbd );
return nil ,_eddbd ;};_fddea .Function =append (_fddea .Function ,_cbca );};}else {_dadd ,_fbggb :=_cfgbc (_ddffe );if _fbggb !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbggb );
return nil ,_fbggb ;};_fddea .Function =append (_fddea .Function ,_dadd );};if _cacfg :=_bgde .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cacfg !=nil {_cacfg =_fdb .TraceToDirectObject (_cacfg );_cgbgb ,_eabgf :=_cacfg .(*_fdb .PdfObjectArray );if !_eabgf {_aa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cacfg );
return nil ,_fdb .ErrTypeError ;};if _cgbgb .Len ()!=2{_aa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cgbgb .Len ());return nil ,ErrInvalidAttribute ;
};_fddea .Extend =_cgbgb ;};return &_fddea ,nil ;};func (_bagab *PdfWriter )writeObjects (){_aa .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bagab ._gbabc ));_bagab ._bbbeb =make (map[int ]crossReference );
_bagab ._bbbeb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bagab ._aaeba .ObjectMap !=nil {for _abgdf ,_bbdcf :=range _bagab ._aaeba .ObjectMap {if _abgdf ==0{continue ;};if _bbdcf .XType ==_fdb .XrefTypeObjectStream {_cbda :=crossReference {Type :2,ObjectNumber :_bbdcf .OsObjNumber ,Index :_bbdcf .OsObjIndex };
_bagab ._bbbeb [_abgdf ]=_cbda ;};if _bbdcf .XType ==_fdb .XrefTypeTableEntry {_fcafe :=crossReference {Type :1,ObjectNumber :_bbdcf .ObjectNumber ,Offset :_bbdcf .Offset };_bagab ._bbbeb [_abgdf ]=_fcafe ;};};};};func _dfge (_bddff _fdb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gabg :=NewPdfColorspaceSpecialSeparation ();
if _bbae ,_bcge :=_bddff .(*_fdb .PdfIndirectObject );_bcge {_gabg ._abccb =_bbae ;};_bddff =_fdb .TraceToDirectObject (_bddff );_gedd ,_ebcf :=_bddff .(*_fdb .PdfObjectArray );if !_ebcf {return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _gedd .Len ()!=4{return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_bddff =_gedd .Get (0);
_ebcc ,_ebcf :=_bddff .(*_fdb .PdfObjectName );if !_ebcf {return nil ,_d .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ebcc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_d .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_bddff =_gedd .Get (1);_ebcc ,_ebcf =_bddff .(*_fdb .PdfObjectName );if !_ebcf {return nil ,_d .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gabg .ColorantName =_ebcc ;_bddff =_gedd .Get (2);_bedd ,_abebd :=NewPdfColorspaceFromPdfObject (_bddff );if _abebd !=nil {return nil ,_abebd ;};_gabg .AlternateSpace =_bedd ;_fefe ,_abebd :=_cfgbc (_gedd .Get (3));if _abebd !=nil {return nil ,_abebd ;
};_gabg .TintTransform =_fefe ;return _gabg ,nil ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetNumComponents returns the number of color components (3 for RGB).
func (_cdff *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fdb .PdfObject ;Name _fdb .PdfObject ;State _fdb .PdfObject ;StateModel _fdb .PdfObject ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ggafe *PdfReader )GetNameDictionary ()(_fdb .PdfObject ,error ){_cgffg :=_fdb .ResolveReference (_ggafe ._adefa .Get ("\u004e\u0061\u006de\u0073"));if _cgffg ==nil {return nil ,nil ;};if !_ggafe ._fbgeb {_ccda :=_ggafe .traverseObjectData (_cgffg );
if _ccda !=nil {return nil ,_ccda ;};};return _cgffg ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fdb .PdfObject ;IC _fdb .PdfObject ;BE _fdb .PdfObject ;RD _fdb .PdfObject ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fdb .StreamEncoder ;FormType _fdb .PdfObject ;BBox _fdb .PdfObject ;Matrix _fdb .PdfObject ;Resources *PdfPageResources ;Group _fdb .PdfObject ;Ref _fdb .PdfObject ;MetaData _fdb .PdfObject ;PieceInfo _fdb .PdfObject ;LastModified _fdb .PdfObject ;
StructParent _fdb .PdfObject ;StructParents _fdb .PdfObject ;OPI _fdb .PdfObject ;OC _fdb .PdfObject ;Name _fdb .PdfObject ;

// Stream data.
Stream []byte ;_eeafe *_fdb .PdfObjectStream ;};func (_ffe *PdfReader )newPdfAnnotationFromIndirectObject (_dcae *_fdb .PdfIndirectObject )(*PdfAnnotation ,error ){_egf ,_fdg :=_dcae .PdfObject .(*_fdb .PdfObjectDictionary );if !_fdg {return nil ,_d .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ffe ._ggdg .GetModelFromPrimitive (_egf );model !=nil {_beaf ,_ddfe :=model .(*PdfAnnotation );if !_ddfe {return nil ,_d .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _beaf ,nil ;};_geag :=&PdfAnnotation {};_geag ._cgbd =_dcae ;_ffe ._ggdg .Register (_egf ,_geag );if _cdf :=_egf .Get ("\u0054\u0079\u0070\u0065");_cdf !=nil {_cag ,_fbf :=_cdf .(*_fdb .PdfObjectName );if !_fbf {_aa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cdf );
}else {if *_cag !="\u0041\u006e\u006eo\u0074"{_aa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_cag );};};};if _dffb :=_egf .Get ("\u0052\u0065\u0063\u0074");
_dffb !=nil {_geag .Rect =_dffb ;};if _fcgd :=_egf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_fcgd !=nil {_geag .Contents =_fcgd ;};if _gdcg :=_egf .Get ("\u0050");_gdcg !=nil {_geag .P =_gdcg ;};if _gdfg :=_egf .Get ("\u004e\u004d");_gdfg !=nil {_geag .NM =_gdfg ;
};if _fcc :=_egf .Get ("\u004d");_fcc !=nil {_geag .M =_fcc ;};if _gbaa :=_egf .Get ("\u0046");_gbaa !=nil {_geag .F =_gbaa ;};if _bbbd :=_egf .Get ("\u0041\u0050");_bbbd !=nil {_geag .AP =_bbbd ;};if _bba :=_egf .Get ("\u0041\u0053");_bba !=nil {_geag .AS =_bba ;
};if _acec :=_egf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_acec !=nil {_geag .Border =_acec ;};if _dbf :=_egf .Get ("\u0043");_dbf !=nil {_geag .C =_dbf ;};if _fgge :=_egf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_fgge !=nil {_geag .StructParent =_fgge ;};if _agfg :=_egf .Get ("\u004f\u0043");_agfg !=nil {_geag .OC =_agfg ;};_efa :=_egf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _efa ==nil {_aa .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_geag ._abdg =nil ;return _geag ,nil ;};_ebd ,_bac :=_efa .(*_fdb .PdfObjectName );if !_bac {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efa );
return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_efa );};switch *_ebd {case "\u0054\u0065\u0078\u0074":_bdee ,_ddb :=_ffe .newPdfAnnotationTextFromDict (_egf );
if _ddb !=nil {return nil ,_ddb ;};_bdee .PdfAnnotation =_geag ;_geag ._abdg =_bdee ;return _geag ,nil ;case "\u004c\u0069\u006e\u006b":_egcf ,_bcaa :=_ffe .newPdfAnnotationLinkFromDict (_egf );if _bcaa !=nil {return nil ,_bcaa ;};_egcf .PdfAnnotation =_geag ;
_geag ._abdg =_egcf ;return _geag ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bfa ,_ged :=_ffe .newPdfAnnotationFreeTextFromDict (_egf );if _ged !=nil {return nil ,_ged ;};_bfa .PdfAnnotation =_geag ;_geag ._abdg =_bfa ;return _geag ,nil ;
case "\u004c\u0069\u006e\u0065":_ebfd ,_aadb :=_ffe .newPdfAnnotationLineFromDict (_egf );if _aadb !=nil {return nil ,_aadb ;};_ebfd .PdfAnnotation =_geag ;_geag ._abdg =_ebfd ;_aa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_geag ,_geag );
_aa .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ebfd ,_ebfd );_aa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ebfd .PdfAnnotationMarkup ,_ebfd .PdfAnnotationMarkup );
return _geag ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bab ,_geaga :=_ffe .newPdfAnnotationSquareFromDict (_egf );if _geaga !=nil {return nil ,_geaga ;};_bab .PdfAnnotation =_geag ;_geag ._abdg =_bab ;return _geag ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cea ,_gfad :=_ffe .newPdfAnnotationCircleFromDict (_egf );
if _gfad !=nil {return nil ,_gfad ;};_cea .PdfAnnotation =_geag ;_geag ._abdg =_cea ;return _geag ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_dae ,_cee :=_ffe .newPdfAnnotationPolygonFromDict (_egf );if _cee !=nil {return nil ,_cee ;};_dae .PdfAnnotation =_geag ;
_geag ._abdg =_dae ;return _geag ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_befb ,_acd :=_ffe .newPdfAnnotationPolyLineFromDict (_egf );if _acd !=nil {return nil ,_acd ;};_befb .PdfAnnotation =_geag ;_geag ._abdg =_befb ;return _geag ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_eeda ,_eeb :=_ffe .newPdfAnnotationHighlightFromDict (_egf );if _eeb !=nil {return nil ,_eeb ;};_eeda .PdfAnnotation =_geag ;_geag ._abdg =_eeda ;return _geag ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dege ,_bcag :=_ffe .newPdfAnnotationUnderlineFromDict (_egf );
if _bcag !=nil {return nil ,_bcag ;};_dege .PdfAnnotation =_geag ;_geag ._abdg =_dege ;return _geag ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bcga ,_egdef :=_ffe .newPdfAnnotationSquigglyFromDict (_egf );if _egdef !=nil {return nil ,_egdef ;
};_bcga .PdfAnnotation =_geag ;_geag ._abdg =_bcga ;return _geag ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_fdae ,_dac :=_ffe .newPdfAnnotationStrikeOut (_egf );if _dac !=nil {return nil ,_dac ;};_fdae .PdfAnnotation =_geag ;_geag ._abdg =_fdae ;
return _geag ,nil ;case "\u0043\u0061\u0072e\u0074":_fece ,_fbe :=_ffe .newPdfAnnotationCaretFromDict (_egf );if _fbe !=nil {return nil ,_fbe ;};_fece .PdfAnnotation =_geag ;_geag ._abdg =_fece ;return _geag ,nil ;case "\u0053\u0074\u0061m\u0070":_dffe ,_aeb :=_ffe .newPdfAnnotationStampFromDict (_egf );
if _aeb !=nil {return nil ,_aeb ;};_dffe .PdfAnnotation =_geag ;_geag ._abdg =_dffe ;return _geag ,nil ;case "\u0049\u006e\u006b":_acb ,_ebb :=_ffe .newPdfAnnotationInkFromDict (_egf );if _ebb !=nil {return nil ,_ebb ;};_acb .PdfAnnotation =_geag ;_geag ._abdg =_acb ;
return _geag ,nil ;case "\u0050\u006f\u0070u\u0070":_fcdb ,_fdbd :=_ffe .newPdfAnnotationPopupFromDict (_egf );if _fdbd !=nil {return nil ,_fdbd ;};_fcdb .PdfAnnotation =_geag ;_geag ._abdg =_fcdb ;return _geag ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ggbe ,_befbe :=_ffe .newPdfAnnotationFileAttachmentFromDict (_egf );
if _befbe !=nil {return nil ,_befbe ;};_ggbe .PdfAnnotation =_geag ;_geag ._abdg =_ggbe ;return _geag ,nil ;case "\u0053\u006f\u0075n\u0064":_bgea ,_gcc :=_ffe .newPdfAnnotationSoundFromDict (_egf );if _gcc !=nil {return nil ,_gcc ;};_bgea .PdfAnnotation =_geag ;
_geag ._abdg =_bgea ;return _geag ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bdc ,_aagf :=_ffe .newPdfAnnotationRichMediaFromDict (_egf );if _aagf !=nil {return nil ,_aagf ;};_bdc .PdfAnnotation =_geag ;_geag ._abdg =_bdc ;return _geag ,nil ;
case "\u004d\u006f\u0076i\u0065":_fgbc ,_ccbe :=_ffe .newPdfAnnotationMovieFromDict (_egf );if _ccbe !=nil {return nil ,_ccbe ;};_fgbc .PdfAnnotation =_geag ;_geag ._abdg =_fgbc ;return _geag ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_gcdd ,_bgf :=_ffe .newPdfAnnotationScreenFromDict (_egf );
if _bgf !=nil {return nil ,_bgf ;};_gcdd .PdfAnnotation =_geag ;_geag ._abdg =_gcdd ;return _geag ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cdad ,_gaab :=_ffe .newPdfAnnotationWidgetFromDict (_egf );if _gaab !=nil {return nil ,_gaab ;};_cdad .PdfAnnotation =_geag ;
_geag ._abdg =_cdad ;return _geag ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bdf ,_cefb :=_ffe .newPdfAnnotationPrinterMarkFromDict (_egf );if _cefb !=nil {return nil ,_cefb ;};_bdf .PdfAnnotation =_geag ;_geag ._abdg =_bdf ;
return _geag ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_beb ,_aeff :=_ffe .newPdfAnnotationTrapNetFromDict (_egf );if _aeff !=nil {return nil ,_aeff ;};_beb .PdfAnnotation =_geag ;_geag ._abdg =_beb ;return _geag ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_acad ,_bagf :=_ffe .newPdfAnnotationWatermarkFromDict (_egf );
if _bagf !=nil {return nil ,_bagf ;};_acad .PdfAnnotation =_geag ;_geag ._abdg =_acad ;return _geag ,nil ;case "\u0033\u0044":_gdcf ,_fdcg :=_ffe .newPdfAnnotation3DFromDict (_egf );if _fdcg !=nil {return nil ,_fdcg ;};_gdcf .PdfAnnotation =_geag ;_geag ._abdg =_gdcf ;
return _geag ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_fded ,_cbfb :=_ffe .newPdfAnnotationProjectionFromDict (_egf );if _cbfb !=nil {return nil ,_cbfb ;};_fded .PdfAnnotation =_geag ;_geag ._abdg =_fded ;return _geag ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_fggd ,_dab :=_ffe .newPdfAnnotationRedactFromDict (_egf );if _dab !=nil {return nil ,_dab ;};_fggd .PdfAnnotation =_geag ;_geag ._abdg =_fggd ;return _geag ,nil ;};_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_ebd );
return nil ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_abaab OutlineDest )ToPdfObject ()_fdb .PdfObject {if (_abaab .PageObj ==nil &&_abaab .Page < 0)||_abaab .Mode ==""{return _fdb .MakeNull ();};_fbbdf :=_fdb .MakeArray ();if _abaab .PageObj !=nil {_fbbdf .Append (_abaab .PageObj );}else {_fbbdf .Append (_fdb .MakeInteger (_abaab .Page ));
};_fbbdf .Append (_fdb .MakeName (_abaab .Mode ));switch _abaab .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_fbbdf .Append (_fdb .MakeFloat (_abaab .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_fbbdf .Append (_fdb .MakeFloat (_abaab .X ));
case "\u0058\u0059\u005a":_fbbdf .Append (_fdb .MakeFloat (_abaab .X ));_fbbdf .Append (_fdb .MakeFloat (_abaab .Y ));_fbbdf .Append (_fdb .MakeFloat (_abaab .Zoom ));default:_fbbdf .Set (1,_fdb .MakeName ("\u0046\u0069\u0074"));};return _fbbdf ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fege *PdfReader )GetEncryptionMethod ()string {_cecgg :=_fege ._dbbec .GetCrypter ();return _cecgg .String ();};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ag .Time ){_dacba .Lock ();defer _dacba .Unlock ();_fgdee =modifiedDate ;};func (_ade *PdfReader )newPdfActionJavaScriptFromDict (_degg *_fdb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_degg .Get ("\u004a\u0053")},nil ;
};type pdfCIDFontType0 struct{fontCommon ;_aggg *_fdb .PdfIndirectObject ;_dbdbc _eb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fdb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fdb .PdfObject ;W _fdb .PdfObject ;DW2 _fdb .PdfObject ;W2 _fdb .PdfObject ;_aaab map[_eb .CharCode ]float64 ;_gafda float64 ;};

// ToPdfObject implements interface PdfModel.
func (_cafd *PdfAnnotationSquare )ToPdfObject ()_fdb .PdfObject {_cafd .PdfAnnotation .ToPdfObject ();_efcc :=_cafd ._cgbd ;_bdd :=_efcc .PdfObject .(*_fdb .PdfObjectDictionary );if _cafd .PdfAnnotationMarkup !=nil {_cafd .PdfAnnotationMarkup .appendToPdfDictionary (_bdd );
};_bdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bdd .SetIfNotNil ("\u0042\u0053",_cafd .BS );_bdd .SetIfNotNil ("\u0049\u0043",_cafd .IC );_bdd .SetIfNotNil ("\u0042\u0045",_cafd .BE );
_bdd .SetIfNotNil ("\u0052\u0044",_cafd .RD );return _efcc ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_acee DefaultImageHandler )Read (reader _ca .Reader )(*Image ,error ){_cbfac ,_ ,_cggb :=_bd .Decode (reader );if _cggb !=nil {_aa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cggb );
return nil ,_cggb ;};return _acee .NewImageFromGoImage (_cbfac );};

// B returns the value of the B component of the color.
func (_addea *PdfColorCalRGB )B ()float64 {return _addea [1]};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_agae :=&PdfOutline {_edgb :_fdb .MakeIndirectObject (_fdb .MakeDict ())};_agae ._fcfd =_agae ;return _agae ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_caecd *PdfField )IsTerminal ()bool {return len (_caecd .Kids )==0};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fdb .PdfObjectArray ;Matrix *_fdb .PdfObjectArray ;Function []PdfFunction ;};

// ValidateSignatures validates digital signatures in the document.
func (_aegc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _aegc .AcroForm ==nil {return nil ,nil ;};if _aegc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_aaag *PdfSignature ;
_eaaf *PdfField ;_deba SignatureHandler ;};var _fcec []*sigFieldPair ;for _ ,_aagfdc :=range _aegc .AcroForm .AllFields (){if _aagfdc .V ==nil {continue ;};if _efgcc ,_dbbgb :=_fdb .GetDict (_aagfdc .V );_dbbgb {if _eeegg ,_egcecb :=_fdb .GetNameVal (_efgcc .Get ("\u0054\u0079\u0070\u0065"));
_egcecb &&_eeegg =="\u0053\u0069\u0067"{_dcfgca ,_fadgc :=_fdb .GetIndirect (_aagfdc .V );if !_fadgc {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cdedf ,_efgd :=_aegc .newPdfSignatureFromIndirect (_dcfgca );if _efgd !=nil {return nil ,_efgd ;};var _acge SignatureHandler ;for _ ,_febgg :=range handlers {if _febgg .IsApplicable (_cdedf ){_acge =_febgg ;break ;};};_fcec =append (_fcec ,&sigFieldPair {_aaag :_cdedf ,_eaaf :_aagfdc ,_deba :_acge });
};};};var _efgfa []SignatureValidationResult ;for _ ,_gfbd :=range _fcec {_bcgabe :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gfbd ._eaaf }};if _gfbd ._deba ==nil {_bcgabe .Errors =append (_bcgabe .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_efgfa =append (_efgfa ,_bcgabe );continue ;};_bgafb ,_efcfc :=_gfbd ._deba .NewDigest (_gfbd ._aaag );if _efcfc !=nil {_bcgabe .Errors =append (_bcgabe .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_efcfc .Error ());_efgfa =append (_efgfa ,_bcgabe );
continue ;};_bccbbf :=_gfbd ._aaag .ByteRange ;if _bccbbf ==nil {_bcgabe .Errors =append (_bcgabe .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_efgfa =append (_efgfa ,_bcgabe );continue ;
};for _dbfag :=0;_dbfag < _bccbbf .Len ();_dbfag =_dbfag +2{_fcfefc ,_ :=_fdb .GetNumberAsInt64 (_bccbbf .Get (_dbfag ));_gefb ,_ :=_fdb .GetIntVal (_bccbbf .Get (_dbfag +1));if _ ,_bcea :=_aegc ._baaad .Seek (_fcfefc ,_ca .SeekStart );_bcea !=nil {return nil ,_bcea ;
};_adcbf :=make ([]byte ,_gefb );if _ ,_gadee :=_aegc ._baaad .Read (_adcbf );_gadee !=nil {return nil ,_gadee ;};_bgafb .Write (_adcbf );};var _gdegc SignatureValidationResult ;if _ebcbc ,_egaffc :=_gfbd ._deba .(SignatureHandlerDocMDP );_egaffc {_gdegc ,_efcfc =_ebcbc .ValidateWithOpts (_gfbd ._aaag ,_bgafb ,SignatureHandlerDocMDPParams {Parser :_aegc ._dbbec });
}else {_gdegc ,_efcfc =_gfbd ._deba .Validate (_gfbd ._aaag ,_bgafb );};if _efcfc !=nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_efcfc ,_gfbd ._deba );_gdegc .Errors =append (_gdegc .Errors ,_efcfc .Error ());
};_gdegc .Name =_gfbd ._aaag .Name .Decoded ();_gdegc .Reason =_gfbd ._aaag .Reason .Decoded ();if _gfbd ._aaag .M !=nil {_gbfgg ,_deac :=NewPdfDate (_gfbd ._aaag .M .String ());if _deac !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deac );
_gdegc .Errors =append (_gdegc .Errors ,_deac .Error ());continue ;};_gdegc .Date =_gbfgg ;};_gdegc .ContactInfo =_gfbd ._aaag .ContactInfo .Decoded ();_gdegc .Location =_gfbd ._aaag .Location .Decoded ();_gdegc .Fields =_bcgabe .Fields ;_efgfa =append (_efgfa ,_gdegc );
};return _efgfa ,nil ;};

// GetXObjectByName gets XObject by name.
func (_abccd *PdfPage )GetXObjectByName (name _fdb .PdfObjectName )(_fdb .PdfObject ,bool ){_dfdfe ,_cbgcg :=_abccd .Resources .XObject .(*_fdb .PdfObjectDictionary );if !_cbgcg {return nil ,false ;};if _aacbc :=_dfdfe .Get (name );_aacbc !=nil {return _aacbc ,true ;
};return nil ,false ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_degfe *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ee .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdaff pdfFontType3 )GetRuneMetrics (r rune )(_fc .CharMetrics ,bool ){_ffda :=_fdaff .Encoder ();if _ffda ==nil {_aa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fdaff );
return _fc .CharMetrics {},false ;};_ccf ,_fedbb :=_ffda .RuneToCharcode (r );if !_fedbb {if r !=' '{_aa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fdaff );
};return _fc .CharMetrics {},false ;};_gacag ,_ebccf :=_fdaff .GetCharMetrics (_ccf );return _gacag ,_ebccf ;};func (_dcfce *PdfWriter )writeOutlines ()error {if _dcfce ._fcbdb ==nil {return nil ;};_aa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_dcfce ._fcbdb );
_fbbca :=_dcfce ._fcbdb .ToPdfObject ();_aa .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fbbca ,_fbbca ,_fbbca );_dcfce ._gbged .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fbbca );
_dfdad :=_dcfce .addObjects (_fbbca );if _dfdad !=nil {return _dfdad ;};return nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cefe ,_fcce :=_dabgb (basefont );if _fcce !=nil {return nil ,_fcce ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cefe ._cafgd =_eb .NewWinAnsiEncoder ();};return &PdfFont {_babcd :&_cefe },nil ;
};func _bcfcb ()string {_dacba .Lock ();defer _dacba .Unlock ();if len (_fcdde )> 0{return _fcdde ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_fgbd *_fdb .PdfIndirectObject ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ede :=NewPdfAction ();_ccc :=&PdfActionTrans {};_ccc .PdfAction =_ede ;_ede .SetContext (_ccc );return _ccc ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_dfgg *PdfAppender )UpdateObject (obj _fdb .PdfObject ){_dfgg .replaceObject (obj ,obj );if _ ,_ddfb :=_dfgg ._acbb [obj ];!_ddfb {_dfgg ._gdgb =append (_dfgg ._gdgb ,obj );_dfgg ._acbb [obj ]=struct{}{};};};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fcda *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fcda .GetNumComponents (){return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfbg ,_dadb :=_fcda .TintTransform .Evaluate (vals );
if _dadb !=nil {return nil ,_dadb ;};_gdfga ,_dadb :=_fcda .AlternateSpace .ColorFromFloats (_cfbg );if _dadb !=nil {return nil ,_dadb ;};return _gdfga ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_gcfeg *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_gcfeg .HiVal )};};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fdb .PdfObjectInteger ;TilingType *_fdb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fdb .PdfObjectFloat ;YStep *_fdb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fdb .PdfObjectArray ;};


// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ge *PdfAction )GetContext ()PdfModel {if _ge ==nil {return nil ;};return _ge ._gc ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fdb .PdfObject ;NewWindow _fdb .PdfObject ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cbfd *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gaec []float64 ;for _ggae :=0;_ggae < _cbfd .GetNumComponents ();_ggae ++{_gaec =append (_gaec ,0.0,1.0);};return _gaec ;};

// SetFillImage attach a model.Image to push button.
func (_bcffc *PdfFieldButton )SetFillImage (image *Image ){if _bcffc .IsPush (){_bcffc ._gaacf =image ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dgdfa *PdfShadingType5 )ToPdfObject ()_fdb .PdfObject {_dgdfa .PdfShading .ToPdfObject ();_eedbd ,_deddg :=_dgdfa .getShadingDict ();if _deddg !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dgdfa .BitsPerCoordinate !=nil {_eedbd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dgdfa .BitsPerCoordinate );};if _dgdfa .BitsPerComponent !=nil {_eedbd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dgdfa .BitsPerComponent );
};if _dgdfa .VerticesPerRow !=nil {_eedbd .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_dgdfa .VerticesPerRow );};if _dgdfa .Decode !=nil {_eedbd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dgdfa .Decode );};
if _dgdfa .Function !=nil {if len (_dgdfa .Function )==1{_eedbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgdfa .Function [0].ToPdfObject ());}else {_gegaff :=_fdb .MakeArray ();for _ ,_adfg :=range _dgdfa .Function {_gegaff .Append (_adfg .ToPdfObject ());
};_eedbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gegaff );};};return _dgdfa ._dcfdb ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_gfec *PdfReader )GetCatalogMetadata ()(_fdb .PdfObject ,bool ){if _gfec ._adefa ==nil {return nil ,false ;};_dfgcbd :=_gfec ._adefa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _dfgcbd ,_dfgcbd !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_aaddf *PdfActionGoTo3DView )ToPdfObject ()_fdb .PdfObject {_aaddf .PdfAction .ToPdfObject ();_fcac :=_aaddf ._ae ;_ege :=_fcac .PdfObject .(*_fdb .PdfObjectDictionary );_ege .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeGoTo3DView )));
_ege .SetIfNotNil ("\u0054\u0041",_aaddf .TA );_ege .SetIfNotNil ("\u0056",_aaddf .V );return _fcac ;};

// ToPdfObject implements interface PdfModel.
func (_gede *PdfAnnotationSound )ToPdfObject ()_fdb .PdfObject {_gede .PdfAnnotation .ToPdfObject ();_facf :=_gede ._cgbd ;_eddc :=_facf .PdfObject .(*_fdb .PdfObjectDictionary );_gede .PdfAnnotationMarkup .appendToPdfDictionary (_eddc );_eddc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0053\u006f\u0075n\u0064"));
_eddc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gede .Sound );_eddc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gede .Name );return _facf ;};

// ToPdfObject implements interface PdfModel.
func (_ef *PdfActionMovie )ToPdfObject ()_fdb .PdfObject {_ef .PdfAction .ToPdfObject ();_af :=_ef ._ae ;_fcb :=_af .PdfObject .(*_fdb .PdfObjectDictionary );_fcb .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeMovie )));_fcb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ef .Annotation );
_fcb .SetIfNotNil ("\u0054",_ef .T );_fcb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ef .Operation );return _af ;};

// Width returns the width of `rect`.
func (_cbedd *PdfRectangle )Width ()float64 {return _fag .Abs (_cbedd .Urx -_cbedd .Llx )};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ag .Time ){_dacba .Lock ();defer _dacba .Unlock ();_fggdgb =creationDate ;};

// ToPdfObject implements interface PdfModel.
func (_fcae *PdfAnnotationMovie )ToPdfObject ()_fdb .PdfObject {_fcae .PdfAnnotation .ToPdfObject ();_cdea :=_fcae ._cgbd ;_cdg :=_cdea .PdfObject .(*_fdb .PdfObjectDictionary );_cdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u004d\u006f\u0076i\u0065"));
_cdg .SetIfNotNil ("\u0054",_fcae .T );_cdg .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_fcae .Movie );_cdg .SetIfNotNil ("\u0041",_fcae .A );return _cdea ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_acceg *PdfPageResources )GenerateXObjectName ()_fdb .PdfObjectName {_aecbc :=1;for {_ccgeg :=_fdb .MakeName (_d .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_aecbc ));if !_acceg .HasXObjectByName (*_ccgeg ){return *_ccgeg ;};_aecbc ++;};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_adfd *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if _adfd .Alternate ==nil {if _adfd .N ==1{_gfab :=NewPdfColorspaceDeviceGray ();return _gfab .ColorFromPdfObjects (objects );}else if _adfd .N ==3{_ccde :=NewPdfColorspaceDeviceRGB ();
return _ccde .ColorFromPdfObjects (objects );}else if _adfd .N ==4{_agba :=NewPdfColorspaceDeviceCMYK ();return _agba .ColorFromPdfObjects (objects );}else {return nil ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _adfd .Alternate .ColorFromPdfObjects (objects );};

// ToPdfObject converts date to a PDF string object.
func (_acfdg *PdfDate )ToPdfObject ()_fdb .PdfObject {_aegge :=_d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_acfdg ._aabcd ,_acfdg ._gdgeae ,_acfdg ._dgfdg ,_acfdg ._dcdgg ,_acfdg ._gece ,_acfdg ._bfegga ,_acfdg ._gcddcc ,_acfdg ._dbbad ,_acfdg ._gfacg );
return _fdb .MakeString (_aegge );};

// GetContentStream returns the XObject Form's content stream.
func (_ceede *XObjectForm )GetContentStream ()([]byte ,error ){_ffbee ,_cabgb :=_fdb .DecodeStream (_ceede ._eeafe );if _cabgb !=nil {return nil ,_cabgb ;};return _ffbee ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;
BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fbgf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gaac ,_ggaca :=_fdb .GetNumbersAsFloat (objects );
if _ggaca !=nil {return nil ,_ggaca ;};return _fbgf .ColorFromFloats (_gaac );};func (_bbf *PdfReader )newPdfActionImportDataFromDict (_fba *_fdb .PdfObjectDictionary )(*PdfActionImportData ,error ){_afe ,_bbfd :=_gaef (_fba .Get ("\u0046"));if _bbfd !=nil {return nil ,_bbfd ;
};return &PdfActionImportData {F :_afe },nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_efaff *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_dafd :=NewPdfAnnotation ();_bce :=&PdfAnnotationWidget {};_bce .PdfAnnotation =_dafd ;_dafd .SetContext (_bce );return _bce ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fdb .PdfObject ;RichMediaContent _fdb .PdfObject ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_feegg *PdfPattern )SetContext (ctx PdfModel ){_feegg ._edbbc =ctx };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gefed :=PdfWriter {};_gefed ._fbeb =map[_fdb .PdfObject ]struct{}{};_gefed ._gbabc =[]_fdb .PdfObject {};_gefed ._eebcf =map[_fdb .PdfObject ][]*_fdb .PdfObjectDictionary {};_gefed ._egfdc =map[_fdb .PdfObject ]struct{}{};
_gefed ._bgagb .Major =1;_gefed ._bgagb .Minor =3;_feegc :=_fdb .MakeDict ();_cddgd :=[]struct{_bgecff _fdb .PdfObjectName ;_gbffa string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_badb ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_bcfcb ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_fggde ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_bfdfe ()},{"\u0054\u0069\u0074l\u0065",_ecgfc ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_egadf ()}};
for _ ,_eagcg :=range _cddgd {if _eagcg ._gbffa !=""{_feegc .Set (_eagcg ._bgecff ,_fdb .MakeString (_eagcg ._gbffa ));};};if _gcbeb :=_ccbg ();!_gcbeb .IsZero (){if _ffba ,_gdbce :=NewPdfDateFromTime (_gcbeb );_gdbce ==nil {_feegc .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ffba .ToPdfObject ());
};};if _efddf :=_aacge ();!_efddf .IsZero (){if _bbdeg ,_geafba :=NewPdfDateFromTime (_efddf );_geafba ==nil {_feegc .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_bbdeg .ToPdfObject ());};};_gedda :=_fdb .PdfIndirectObject {};_gedda .PdfObject =_feegc ;
_gefed ._fecbc =&_gedda ;_gefed .addObject (&_gedda );_bbaec :=_fdb .PdfIndirectObject {};_afcff :=_fdb .MakeDict ();_afcff .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_bbaec .PdfObject =_afcff ;_gefed ._edda =&_bbaec ;
_gefed .addObject (_gefed ._edda );_ecbe ,_ggeacf :=_fbbba ("\u0077");if _ggeacf !=nil {_aa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggeacf );};_gefed ._ccddc =_ecbe ;_gedbg :=_fdb .PdfIndirectObject {};_fdee :=_fdb .MakeDict ();_fdee .Set ("\u0054\u0079\u0070\u0065",_fdb .MakeName ("\u0050\u0061\u0067e\u0073"));
_ebefe :=_fdb .PdfObjectArray {};_fdee .Set ("\u004b\u0069\u0064\u0073",&_ebefe );_fdee .Set ("\u0043\u006f\u0075n\u0074",_fdb .MakeInteger (0));_gedbg .PdfObject =_fdee ;_gefed ._ffacb =&_gedbg ;_gefed ._fdbff =map[_fdb .PdfObject ]struct{}{};_gefed .addObject (_gefed ._ffacb );
_afcff .Set ("\u0050\u0061\u0067e\u0073",&_gedbg );_gefed ._gbged =_afcff ;_aa .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_bbaec );return _gefed ;};func _eecef (_bffa _fdb .PdfObject )(*PdfColorspaceCalRGB ,error ){_aafg :=NewPdfColorspaceCalRGB ();
if _dcba ,_aaad :=_bffa .(*_fdb .PdfIndirectObject );_aaad {_aafg ._baea =_dcba ;};_bffa =_fdb .TraceToDirectObject (_bffa );_eefaa ,_fae :=_bffa .(*_fdb .PdfObjectArray );if !_fae {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _eefaa .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_bffa =_fdb .TraceToDirectObject (_eefaa .Get (0));_acgd ,_fae :=_bffa .(*_fdb .PdfObjectName );
if !_fae {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_acgd !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_d .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_bffa =_fdb .TraceToDirectObject (_eefaa .Get (1));_bbcb ,_fae :=_bffa .(*_fdb .PdfObjectDictionary );if !_fae {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_bffa =_bbcb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bffa =_fdb .TraceToDirectObject (_bffa );_gbba ,_fae :=_bffa .(*_fdb .PdfObjectArray );if !_fae {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _gbba .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_egdee ,_cgef :=_gbba .GetAsFloat64Slice ();
if _cgef !=nil {return nil ,_cgef ;};_aafg .WhitePoint =_egdee ;_bffa =_bbcb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bffa !=nil {_bffa =_fdb .TraceToDirectObject (_bffa );_afaa ,_dbeb :=_bffa .(*_fdb .PdfObjectArray );
if !_dbeb {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _afaa .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_gfcg ,_eade :=_afaa .GetAsFloat64Slice ();if _eade !=nil {return nil ,_eade ;};_aafg .BlackPoint =_gfcg ;};_bffa =_bbcb .Get ("\u0047\u0061\u006dm\u0061");if _bffa !=nil {_bffa =_fdb .TraceToDirectObject (_bffa );_dabdf ,_bggb :=_bffa .(*_fdb .PdfObjectArray );
if !_bggb {return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _dabdf .Len ()!=3{return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_dbgg ,_degd :=_dabdf .GetAsFloat64Slice ();if _degd !=nil {return nil ,_degd ;};_aafg .Gamma =_dbgg ;};_bffa =_bbcb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _bffa !=nil {_bffa =_fdb .TraceToDirectObject (_bffa );_gbge ,_afge :=_bffa .(*_fdb .PdfObjectArray );
if !_afge {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _gbge .Len ()!=9{_aa .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_gbge .String ());
return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_dcea ,_fbfed :=_gbge .GetAsFloat64Slice ();if _fbfed !=nil {return nil ,_fbfed ;
};_aafg .Matrix =_dcea ;};return _aafg ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_dddf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_eceb *PdfSignature ,_efceb Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_dgdd *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fabca *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_aedbd *PdfSignature ,_faecd Hasher )error ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ggaaf :=&PdfFilespec {};_ggaaf ._addf =_fdb .MakeIndirectObject (_fdb .MakeDict ());return _ggaaf ;};func (_bca *PdfReader )newPdfActionThreadFromDict (_eeg *_fdb .PdfObjectDictionary )(*PdfActionThread ,error ){_fgcde ,_eddg :=_gaef (_eeg .Get ("\u0046"));
if _eddg !=nil {return nil ,_eddg ;};return &PdfActionThread {D :_eeg .Get ("\u0044"),B :_eeg .Get ("\u0042"),F :_fgcde },nil ;};func (_fcaa *pdfFontType0 )baseFields ()*fontCommon {return &_fcaa .fontCommon };func (_ggg *PdfReader )newPdfAnnotationHighlightFromDict (_cccc *_fdb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_dbfe :=PdfAnnotationHighlight {};
_fggg ,_gace :=_ggg .newPdfAnnotationMarkupFromDict (_cccc );if _gace !=nil {return nil ,_gace ;};_dbfe .PdfAnnotationMarkup =_fggg ;_dbfe .QuadPoints =_cccc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dbfe ,nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fdb .PdfObject ;Popup *PdfAnnotationPopup ;CA _fdb .PdfObject ;RC _fdb .PdfObject ;CreationDate _fdb .PdfObject ;IRT _fdb .PdfObject ;Subj _fdb .PdfObject ;RT _fdb .PdfObject ;IT _fdb .PdfObject ;ExData _fdb .PdfObject ;
};

// Encoder returns the font's text encoder.
func (_gcdbc *pdfFontSimple )Encoder ()_eb .TextEncoder {if _gcdbc ._cafgd !=nil {return _gcdbc ._cafgd ;};if _gcdbc ._dfgdg !=nil {return _gcdbc ._dfgdg ;};_bfcaa ,_ :=_eb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bfcaa ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ccggd *PdfReader )GetIndirectObjectByNumber (number int )(_fdb .PdfObject ,error ){_caaab ,_bbde :=_ccggd ._dbbec .LookupByNumber (number );return _caaab ,_bbde ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_edcdg *PdfColorspaceLab )DecodeArray ()[]float64 {_bcfc :=[]float64 {0,100};if _edcdg .Range !=nil &&len (_edcdg .Range )==4{_bcfc =append (_bcfc ,_edcdg .Range ...);}else {_bcfc =append (_bcfc ,-100,100,-100,100);};return _bcfc ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cdffd *PdfField )GetContainingPdfObject ()_fdb .PdfObject {return _cdffd ._gdgea };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gaaba *PdfFieldButton )IsPush ()bool {return _gaaba .GetType ()==ButtonTypePush };

// ToPdfObject returns the PDF representation of the page resources.
func (_affde *PdfPageResources )ToPdfObject ()_fdb .PdfObject {_ggeb :=_affde ._bcfeg ;_ggeb .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_affde .ExtGState );if _affde ._gdbgb !=nil {_affde .ColorSpace =_affde ._gdbgb .ToPdfObject ();};
_ggeb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_affde .ColorSpace );_ggeb .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_affde .Pattern );_ggeb .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_affde .Shading );
_ggeb .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_affde .XObject );_ggeb .SetIfNotNil ("\u0046\u006f\u006e\u0074",_affde .Font );_ggeb .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_affde .ProcSet );_ggeb .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_affde .Properties );
return _ggeb ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_gea :=NewPdfAction ();_gfg :=&PdfActionSubmitForm {};_gfg .PdfAction =_gea ;_gea .SetContext (_gfg );return _gfg ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_aeea *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_aeea .updateObjectsDeep (dss .ToPdfObject (),nil );};_aeea ._bddg =dss ;};var _gcdgbc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func (_aeeg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dbgd :=_aeeg .Parent ;for _dbgd !=nil {_befe ,_gcfd :=_fdb .GetDict (_dbgd );if !_gcfd {_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _edgg :=_befe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_edgg !=nil {_deag ,_dbgda :=_fdb .GetDict (_edgg );
if !_dbgda {return nil ,_ee .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_dbege ,_bacc :=NewPdfPageResourcesFromDict (_deag );if _bacc !=nil {return nil ,_bacc ;};return _dbege ,nil ;};
_dbgd =_befe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_bcbff *LTV )enable (_ddcfd ,_afca []*_fa .Certificate ,_aggbd string )error {_dedd ,_daea ,_ececa :=_bcbff .buildCertChain (_ddcfd ,_afca );if _ececa !=nil {return _ececa ;
};_eebfg ,_ececa :=_bcbff .getCerts (_dedd );if _ececa !=nil {return _ececa ;};var _dbdae ,_bbbbd [][]byte ;if _bcbff .OCSPClient !=nil {_dbdae ,_ececa =_bcbff .getOCSPs (_dedd ,_daea );if _ececa !=nil {return _ececa ;};};if _bcbff .CRLClient !=nil {_bbbbd ,_ececa =_bcbff .getCRLs (_dedd );
if _ececa !=nil {return _ececa ;};};_adad :=_bcbff ._cdbea ;_bacbcb ,_ececa :=_adad .addCerts (_eebfg );if _ececa !=nil {return _ececa ;};_babaf ,_ececa :=_adad .addOCSPs (_dbdae );if _ececa !=nil {return _ececa ;};_ebag ,_ececa :=_adad .addCRLs (_bbbbd );
if _ececa !=nil {return _ececa ;};if _aggbd !=""{_adad .VRI [_aggbd ]=&VRI {Cert :_bacbcb ,OCSP :_babaf ,CRL :_ebag };};_bcbff ._daba .SetDSS (_adad );return nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fdb .StreamEncoder ;Intent _fdb .PdfObject ;ImageMask _fdb .PdfObject ;Mask _fdb .PdfObject ;Matte _fdb .PdfObject ;Decode _fdb .PdfObject ;Interpolate _fdb .PdfObject ;
Alternatives _fdb .PdfObject ;SMask _fdb .PdfObject ;SMaskInData _fdb .PdfObject ;Name _fdb .PdfObject ;StructParent _fdb .PdfObject ;ID _fdb .PdfObject ;OPI _fdb .PdfObject ;Metadata _fdb .PdfObject ;OC _fdb .PdfObject ;Stream []byte ;_aagea *_fdb .PdfObjectStream ;
};func (_ebec *PdfReader )newPdfAnnotationSoundFromDict (_adda *_fdb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_afef :=PdfAnnotationSound {};_cbb ,_fcbc :=_ebec .newPdfAnnotationMarkupFromDict (_adda );if _fcbc !=nil {return nil ,_fcbc ;};_afef .PdfAnnotationMarkup =_cbb ;
_afef .Name =_adda .Get ("\u004e\u0061\u006d\u0065");_afef .Sound =_adda .Get ("\u0053\u006f\u0075n\u0064");return &_afef ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_ccedd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _afcfe []*PdfField ;_eecgc :=map[*_fdb .PdfIndirectObject ]struct{}{};for _ ,_edcgf :=range _ccedd .PageList {_cgbgg ,_gffaf :=_edcgf .GetAnnotations ();if _gffaf !=nil {return _gffaf ;
};for _ ,_eabdf :=range _cgbgg {var _gfae *PdfField ;switch _ggbge :=_eabdf .GetContext ().(type ){case *PdfAnnotationWidget :if _ggbge ._ccg !=nil {_gfae =_ggbge ._ccg ;break ;};if _fgagg ,_bfgbc :=_fdb .GetIndirect (_ggbge .Parent );_bfgbc {_gfae ,_gffaf =_ccedd .newPdfFieldFromIndirectObject (_fgagg ,nil );
if _gffaf ==nil {break ;};_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fgagg ,_gffaf );
};if _ggbge ._cgbd !=nil {_gfae ,_gffaf =_ccedd .newPdfFieldFromIndirectObject (_ggbge ._cgbd ,nil );if _gffaf ==nil {break ;};_aa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ggbge ._cgbd ,_gffaf );
};};if _gfae ==nil {continue ;};if _ ,_beecf :=_eecgc [_gfae ._gdgea ];_beecf {continue ;};_eecgc [_gfae ._gdgea ]=struct{}{};_afcfe =append (_afcfe ,_gfae );};};if len (_afcfe )==0{return nil ;};if _ccedd .AcroForm ==nil {_ccedd .AcroForm =NewPdfAcroForm ();
};_ccedd .AcroForm .Fields =&_afcfe ;return nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cbdf byte )byte ;

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_aded *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _aded .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gddcf *PdfTilingPattern )ToPdfObject ()_fdb .PdfObject {_gddcf .PdfPattern .ToPdfObject ();_aaeaa :=_gddcf .getDict ();if _gddcf .PaintType !=nil {_aaeaa .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gddcf .PaintType );};if _gddcf .TilingType !=nil {_aaeaa .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gddcf .TilingType );
};if _gddcf .BBox !=nil {_aaeaa .Set ("\u0042\u0042\u006f\u0078",_gddcf .BBox .ToPdfObject ());};if _gddcf .XStep !=nil {_aaeaa .Set ("\u0058\u0053\u0074e\u0070",_gddcf .XStep );};if _gddcf .YStep !=nil {_aaeaa .Set ("\u0059\u0053\u0074e\u0070",_gddcf .YStep );
};if _gddcf .Resources !=nil {_aaeaa .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gddcf .Resources .ToPdfObject ());};if _gddcf .Matrix !=nil {_aaeaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gddcf .Matrix );};return _gddcf ._adccf ;};

// ToPdfObject implements interface PdfModel.
func (_efff *PdfAnnotationLine )ToPdfObject ()_fdb .PdfObject {_efff .PdfAnnotation .ToPdfObject ();_fabad :=_efff ._cgbd ;_dec :=_fabad .PdfObject .(*_fdb .PdfObjectDictionary );_efff .PdfAnnotationMarkup .appendToPdfDictionary (_dec );_dec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u004c\u0069\u006e\u0065"));
_dec .SetIfNotNil ("\u004c",_efff .L );_dec .SetIfNotNil ("\u0042\u0053",_efff .BS );_dec .SetIfNotNil ("\u004c\u0045",_efff .LE );_dec .SetIfNotNil ("\u0049\u0043",_efff .IC );_dec .SetIfNotNil ("\u004c\u004c",_efff .LL );_dec .SetIfNotNil ("\u004c\u004c\u0045",_efff .LLE );
_dec .SetIfNotNil ("\u0043\u0061\u0070",_efff .Cap );_dec .SetIfNotNil ("\u0049\u0054",_efff .IT );_dec .SetIfNotNil ("\u004c\u004c\u004f",_efff .LLO );_dec .SetIfNotNil ("\u0043\u0050",_efff .CP );_dec .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_efff .Measure );
_dec .SetIfNotNil ("\u0043\u004f",_efff .CO );return _fabad ;};func (_fabg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fdb .PdfObject )(*PdfFilespec ,error ){_fecg :=&PdfFilespec {};var _gbaef *_fdb .PdfObjectDictionary ;if _bcbf ,_afaae :=_fdb .GetIndirect (obj );_afaae {_fecg ._addf =_bcbf ;_facb ,_cccbbc :=_fdb .GetDict (_bcbf .PdfObject );
if !_cccbbc {_aa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fdb .ErrTypeError ;};_gbaef =_facb ;}else if _gbfg ,_aabeb :=_fdb .GetDict (obj );
_aabeb {_fecg ._addf =_gbfg ;_gbaef =_gbfg ;}else {_aa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fdb .ErrTypeError ;};if _gbaef ==nil {_aa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ee .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _adgg :=_gbaef .Get ("\u0054\u0079\u0070\u0065");_adgg !=nil {_cbbc ,_agad :=_adgg .(*_fdb .PdfObjectName );if !_agad {_aa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_adgg );
}else {if *_cbbc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_aa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_cbbc );
};};};if _eccb :=_gbaef .Get ("\u0046\u0053");_eccb !=nil {_fecg .FS =_eccb ;};if _cbgf :=_gbaef .Get ("\u0046");_cbgf !=nil {_fecg .F =_cbgf ;};if _ggdeg :=_gbaef .Get ("\u0055\u0046");_ggdeg !=nil {_fecg .UF =_ggdeg ;};if _fecb :=_gbaef .Get ("\u0044\u004f\u0053");
_fecb !=nil {_fecg .DOS =_fecb ;};if _gfaf :=_gbaef .Get ("\u004d\u0061\u0063");_gfaf !=nil {_fecg .Mac =_gfaf ;};if _cdab :=_gbaef .Get ("\u0055\u006e\u0069\u0078");_cdab !=nil {_fecg .Unix =_cdab ;};if _ffged :=_gbaef .Get ("\u0049\u0044");_ffged !=nil {_fecg .ID =_ffged ;
};if _cedc :=_gbaef .Get ("\u0056");_cedc !=nil {_fecg .V =_cedc ;};if _cdfab :=_gbaef .Get ("\u0045\u0046");_cdfab !=nil {_fecg .EF =_cdfab ;};if _bacd :=_gbaef .Get ("\u0052\u0046");_bacd !=nil {_fecg .RF =_bacd ;};if _gdaf :=_gbaef .Get ("\u0044\u0065\u0073\u0063");
_gdaf !=nil {_fecg .Desc =_gdaf ;};if _cagbe :=_gbaef .Get ("\u0043\u0049");_cagbe !=nil {_fecg .CI =_cagbe ;};return _fecg ,nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fdb .PdfObject ;GetContainingPdfObject ()_fdb .PdfObject ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gafbg *PdfFont )BytesToCharcodes (data []byte )[]_eb .CharCode {_aa .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ggad ,_dcfed :=_gafbg ._babcd .(*pdfFontType0 );_dcfed &&_ggad ._accfe !=nil {if _ffdeg ,_egcec :=_ggad .bytesToCharcodes (data );_egcec {return _ffdeg ;};};var (_dadba =make ([]_eb .CharCode ,0,len (data )+len (data )%2);_ageg =_gafbg .baseFields ();
);if _ageg ._egadb !=nil {if _aacbg ,_agac :=_ageg ._egadb .BytesToCharcodes (data );_agac {for _ ,_ebga :=range _aacbg {_dadba =append (_dadba ,_eb .CharCode (_ebga ));};return _dadba ;};};if _ageg .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_aa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _agdab :=0;_agdab < len (data );_agdab +=2{_fcgg :=uint16 (data [_agdab ])<<8|uint16 (data [_agdab +1]);_dadba =append (_dadba ,_eb .CharCode (_fcgg ));};}else {for _ ,_dcaga :=range data {_dadba =append (_dadba ,_eb .CharCode (_dcaga ));
};};return _dadba ;};

// ToInteger convert to an integer format.
func (_cdae *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gffgd :=_fag .Pow (2,float64 (bits ))-1;return uint32 (_gffgd *_cdae .Val ());};func (_eedef *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gcff :=_eedef ._ecde ;_gcff !=nil {return _gcff ;
};return _eedef ._dbddc ;};func _gaef (_bfga _fdb .PdfObject )(*PdfFilespec ,error ){if _bfga ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_bfga );};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_bcecb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bcecb .Alternate ==nil {_aa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bcecb .N ==1{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fgaef :=NewPdfColorspaceDeviceGray ();return _fgaef .ColorToRGB (color );}else if _bcecb .N ==3{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _bcecb .N ==4{_aa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_daafb :=NewPdfColorspaceDeviceCMYK ();return _daafb .ColorToRGB (color );}else {return nil ,_ee .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_aa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bcecb );
return _bcecb .Alternate .ColorToRGB (color );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fccfb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_efaa *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgf :=vals [0];if _fgf < 0.0||_fgf > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgf );
return nil ,ErrColorOutOfRange ;};_ddag :=vals [1];if _ddag < 0.0||_ddag > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgf );return nil ,ErrColorOutOfRange ;
};_aacg :=vals [2];if _aacg < 0.0||_aacg > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fgf );return nil ,ErrColorOutOfRange ;};_aaff :=NewPdfColorDeviceRGB (_fgf ,_ddag ,_aacg );
return _aaff ,nil ;};func _ggaeb (_ddbfa []byte )bool {if len (_ddbfa )< 4{return true ;};for _gadage :=range _ddbfa [:4]{_efdd :=rune (_gadage );if !_fd .Is (_fd .ASCII_Hex_Digit ,_efdd )&&!_fd .IsSpace (_efdd ){return true ;};};return false ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_bgfcb :=&PdfPageResources {};_bgfcb ._bcfeg =_fdb .MakeDict ();return _bgfcb ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_effgc *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fdb .StreamEncoder ,error ){_bbbbf ,_cbee :=_effgc ._adccf .(*_fdb .PdfObjectStream );if !_cbee {_aa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_effgc ._adccf );
return nil ,nil ,_fdb .ErrTypeError ;};_ebbb ,_cebcc :=_fdb .DecodeStream (_bbbbf );if _cebcc !=nil {_aa .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_cebcc );
return nil ,nil ,_cebcc ;};_ffggc ,_cebcc :=_fdb .NewEncoderFromStream (_bbbbf );if _cebcc !=nil {_aa .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cebcc );
return nil ,nil ,_cebcc ;};return _ebbb ,_ffggc ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_acgbe *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _abfg []*PdfOutlineTreeNode ;var _cbcd []string ;var _caegd func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_caegd =func (_fbde *PdfOutlineTreeNode ,_bcfec *[]*PdfOutlineTreeNode ,_cccbd *[]string ,_eeece int ){if _fbde ==nil {return ;
};if _fbde ._fcfd ==nil {_aa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bfcdf ,_eadec :=_fbde ._fcfd .(*PdfOutlineItem );if _eadec {*_bcfec =append (*_bcfec ,&_bfcdf .PdfOutlineTreeNode );
_fagdg :=_gga .Repeat ("\u0020",_eeece *2)+_bfcdf .Title .Decoded ();*_cccbd =append (*_cccbd ,_fagdg );};if _fbde .First !=nil {_dagea :=_gga .Repeat ("\u0020",_eeece *2)+"\u002b";*_cccbd =append (*_cccbd ,_dagea );_caegd (_fbde .First ,_bcfec ,_cccbd ,_eeece +1);
};if _eadec &&_bfcdf .Next !=nil {_caegd (_bfcdf .Next ,_bcfec ,_cccbd ,_eeece );};};_caegd (_acgbe ._fgaaa ,&_abfg ,&_cbcd ,0);return _abfg ,_cbcd ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aabdg *PdfShadingType3 )ToPdfObject ()_fdb .PdfObject {_aabdg .PdfShading .ToPdfObject ();_gegafd ,_eafbd :=_aabdg .getShadingDict ();if _eafbd !=nil {_aa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aabdg .Coords !=nil {_gegafd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_aabdg .Coords );};if _aabdg .Domain !=nil {_gegafd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_aabdg .Domain );};if _aabdg .Function !=nil {if len (_aabdg .Function )==1{_gegafd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aabdg .Function [0].ToPdfObject ());
}else {_fdcef :=_fdb .MakeArray ();for _ ,_cbgbgb :=range _aabdg .Function {_fdcef .Append (_cbgbgb .ToPdfObject ());};_gegafd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdcef );};};if _aabdg .Extend !=nil {_gegafd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_aabdg .Extend );
};return _aabdg ._dcfdb ;};func (_ffbfc *pdfFontType3 )baseFields ()*fontCommon {return &_ffbfc .fontCommon };

// L returns the value of the L component of the color.
func (_eaf *PdfColorLab )L ()float64 {return _eaf [0]};

// String returns a string describing the font descriptor.
func (_efccb *PdfFontDescriptor )String ()string {var _fgbg []string ;if _efccb .FontName !=nil {_fgbg =append (_fgbg ,_efccb .FontName .String ());};if _efccb .FontFamily !=nil {_fgbg =append (_fgbg ,_efccb .FontFamily .String ());};if _efccb .fontFile !=nil {_fgbg =append (_fgbg ,_efccb .fontFile .String ());
};if _efccb ._dgcgb !=nil {_fgbg =append (_fgbg ,_efccb ._dgcgb .String ());};_fgbg =append (_fgbg ,_d .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_efccb .FontFile3 !=nil ));return _d .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_gga .Join (_fgbg ,"\u002c\u0020"));
};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionSetOCGState )ToPdfObject ()_fdb .PdfObject {_ea .PdfAction .ToPdfObject ();_degf :=_ea ._ae ;_gbd :=_degf .PdfObject .(*_fdb .PdfObjectDictionary );_gbd .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeSetOCGState )));_gbd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ea .State );
_gbd .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_ea .PreserveRB );return _degf ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_efdgb *XObjectForm )SetContentStream (content []byte ,encoder _fdb .StreamEncoder )error {_fadd :=content ;if encoder ==nil {if _efdgb .Filter !=nil {encoder =_efdgb .Filter ;}else {encoder =_fdb .NewRawEncoder ();};};_cbced ,_bgcdg :=encoder .EncodeBytes (_fadd );
if _bgcdg !=nil {return _bgcdg ;};_fadd =_cbced ;_efdgb .Stream =_fadd ;_efdgb .Filter =encoder ;return nil ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ebba :=PdfColorCalRGB {a ,b ,c };return &_ebba ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dcce *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cafg ,_dfef :=color .(*PdfColorCalRGB );if !_dfef {_aa .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ee .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eedfa :=_cafg .A ();_gadag :=_cafg .B ();_gdce :=_cafg .C ();X :=_dcce .Matrix [0]*_fag .Pow (_eedfa ,_dcce .Gamma [0])+_dcce .Matrix [3]*_fag .Pow (_gadag ,_dcce .Gamma [1])+_dcce .Matrix [6]*_fag .Pow (_gdce ,_dcce .Gamma [2]);
Y :=_dcce .Matrix [1]*_fag .Pow (_eedfa ,_dcce .Gamma [0])+_dcce .Matrix [4]*_fag .Pow (_gadag ,_dcce .Gamma [1])+_dcce .Matrix [7]*_fag .Pow (_gdce ,_dcce .Gamma [2]);Z :=_dcce .Matrix [2]*_fag .Pow (_eedfa ,_dcce .Gamma [0])+_dcce .Matrix [5]*_fag .Pow (_gadag ,_dcce .Gamma [1])+_dcce .Matrix [8]*_fag .Pow (_gdce ,_dcce .Gamma [2]);
_acag :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eegde :=-0.969256*X +1.875992*Y +0.041556*Z ;_aagce :=0.055648*X +-0.204043*Y +1.057311*Z ;_acag =_fag .Min (_fag .Max (_acag ,0),1.0);_eegde =_fag .Min (_fag .Max (_eegde ,0),1.0);_aagce =_fag .Min (_fag .Max (_aagce ,0),1.0);
return NewPdfColorDeviceRGB (_acag ,_eegde ,_aagce ),nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fdb .PdfObject ;LE _fdb .PdfObject ;BS _fdb .PdfObject ;IC _fdb .PdfObject ;BE _fdb .PdfObject ;IT _fdb .PdfObject ;Measure _fdb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cb *PdfActionHide )ToPdfObject ()_fdb .PdfObject {_cb .PdfAction .ToPdfObject ();_gdb :=_cb ._ae ;_cga :=_gdb .PdfObject .(*_fdb .PdfObjectDictionary );_cga .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeHide )));_cga .SetIfNotNil ("\u0054",_cb .T );
_cga .SetIfNotNil ("\u0048",_cb .H );return _gdb ;};func (_gdd *PdfReader )newPdfActionLaunchFromDict (_fbb *_fdb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bbe ,_ebea :=_gaef (_fbb .Get ("\u0046"));if _ebea !=nil {return nil ,_ebea ;};return &PdfActionLaunch {Win :_fbb .Get ("\u0057\u0069\u006e"),Mac :_fbb .Get ("\u004d\u0061\u0063"),Unix :_fbb .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fbb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bbe },nil ;
};func _bcbdb (_dcbg ,_gbead string )string {if _gga .Contains (_dcbg ,"\u002b"){_beec :=_gga .Split (_dcbg ,"\u002b");if len (_beec )==2{_dcbg =_beec [1];};};return _gbead +"\u002b"+_dcbg ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_fdb .PdfObjectString ;Q *_fdb .PdfObjectInteger ;DS *_fdb .PdfObjectString ;RV _fdb .PdfObject ;};func _feabb (_feced _fdb .PdfObject ){_aa .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_feced ,_feced .String ());
if _ffeee ,_dgec :=_feced .(*_fdb .PdfObjectStream );_dgec {_gaaec ,_afbcd :=_fdb .DecodeStream (_ffeee );if _afbcd !=nil {_aa .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_afbcd );return ;};_aa .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gaaec );
}else if _ecccf ,_gceb :=_feced .(*_fdb .PdfIndirectObject );_gceb {_aa .Log .Debug ("\u0025\u0054\u0020%\u0076",_ecccf .PdfObject ,_ecccf .PdfObject );_aa .Log .Debug ("\u0025\u0073",_ecccf .PdfObject .String ());};};

// GetContainingPdfObject implements interface PdfModel.
func (_ddcc *PdfSignature )GetContainingPdfObject ()_fdb .PdfObject {return _ddcc ._eeabe };

// HasExtGState checks whether a font is defined by the specified keyName.
func (_gagea *PdfPageResources )HasExtGState (keyName _fdb .PdfObjectName )bool {_ ,_caecad :=_gagea .GetFontByName (keyName );return _caecad ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_dgaa :=&PdfBorderStyle {};return _dgaa };

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_adg :=NewPdfAnnotation ();_fagg :=&PdfAnnotationSound {};_fagg .PdfAnnotation =_adg ;_fagg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adg .SetContext (_fagg );return _fagg ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_edgb *_fdb .PdfIndirectObject ;};func _bgec (_baeb *PdfPage )map[_fdb .PdfObjectName ]_fdb .PdfObject {_bcff :=make (map[_fdb .PdfObjectName ]_fdb .PdfObject );if _baeb .Resources ==nil {return _bcff ;
};if _baeb .Resources .Font !=nil {if _gec ,_caeb :=_fdb .GetDict (_baeb .Resources .Font );_caeb {for _ ,_fedb :=range _gec .Keys (){_bcff [_fedb ]=_gec .Get (_fedb );};};};if _baeb .Resources .ExtGState !=nil {if _ffgd ,_gggc :=_fdb .GetDict (_baeb .Resources .ExtGState );
_gggc {for _ ,_cbgb :=range _ffgd .Keys (){_bcff [_cbgb ]=_ffgd .Get (_cbgb );};};};if _baeb .Resources .XObject !=nil {if _ddd ,_eged :=_fdb .GetDict (_baeb .Resources .XObject );_eged {for _ ,_ccggb :=range _ddd .Keys (){_bcff [_ccggb ]=_ddd .Get (_ccggb );
};};};if _baeb .Resources .Pattern !=nil {if _gega ,_afg :=_fdb .GetDict (_baeb .Resources .Pattern );_afg {for _ ,_fgad :=range _gega .Keys (){_bcff [_fgad ]=_gega .Get (_fgad );};};};if _baeb .Resources .Shading !=nil {if _aadf ,_efd :=_fdb .GetDict (_baeb .Resources .Shading );
_efd {for _ ,_gcce :=range _aadf .Keys (){_bcff [_gcce ]=_aadf .Get (_gcce );};};};if _baeb .Resources .ProcSet !=nil {if _daaa ,_geeb :=_fdb .GetDict (_baeb .Resources .ProcSet );_geeb {for _ ,_dffd :=range _daaa .Keys (){_bcff [_dffd ]=_daaa .Get (_dffd );
};};};if _baeb .Resources .Properties !=nil {if _fdbe ,_dfea :=_fdb .GetDict (_baeb .Resources .Properties );_dfea {for _ ,_ecd :=range _fdbe .Keys (){_bcff [_ecd ]=_fdbe .Get (_ecd );};};};return _bcff ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_gfgc *PdfAppender )SetDocInfo (info *PdfInfo ){_gfgc ._afbg =info };

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_bcb :=NewPdfAction ();_fdf :=&PdfActionSetOCGState {};_fdf .PdfAction =_bcb ;_bcb .SetContext (_fdf );return _fdf ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_dbbg []byte )(_dgce int ,_adfb error );};

// ToPdfObject implements interface PdfModel.
func (_acca *PdfAnnotationScreen )ToPdfObject ()_fdb .PdfObject {_acca .PdfAnnotation .ToPdfObject ();_dfca :=_acca ._cgbd ;_fbcf :=_dfca .PdfObject .(*_fdb .PdfObjectDictionary );_fbcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fdb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_fbcf .SetIfNotNil ("\u0054",_acca .T );_fbcf .SetIfNotNil ("\u004d\u004b",_acca .MK );_fbcf .SetIfNotNil ("\u0041",_acca .A );_fbcf .SetIfNotNil ("\u0041\u0041",_acca .AA );return _dfca ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_eecgg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cfbca :=_eecgg .actualFont ();if _cfbca ==nil {_aa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_eecgg ._babcd );
return _fc .CharMetrics {},false ;};if _fdggg ,_bgbbg :=_cfbca .GetRuneMetrics (r );_bgbbg {return _fdggg ,true ;};if _daecg ,_bcbcb :=_eecgg .GetFontDescriptor ();_bcbcb ==nil &&_daecg !=nil {return _fc .CharMetrics {Wx :_daecg ._gbcb },true ;};_aa .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eecgg );
return _fc .CharMetrics {},false ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fdb .PdfObjectInteger ;BitsPerComponent *_fdb .PdfObjectInteger ;BitsPerFlag *_fdb .PdfObjectInteger ;Decode *_fdb .PdfObjectArray ;Function []PdfFunction ;};func (_feff *PdfWriter )setDocumentIDs (_dgbaf ,_fgdgb string ){_feff ._dcdea =_fdb .MakeArray (_fdb .MakeHexString (_dgbaf ),_fdb .MakeHexString (_fgdgb ));
};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// Register registers (caches) a model to primitive object relationship.
func (_beabe *modelManager )Register (primitive _fdb .PdfObject ,model PdfModel ){_beabe ._dbed [model ]=primitive ;_beabe ._abfff [primitive ]=model ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ddbbf :=&PdfPageResourcesColorspaces {};_ddbbf .Names =[]string {};_ddbbf .Colorspaces =map[string ]PdfColorspace {};_ddbbf ._gaeae =&_fdb .PdfIndirectObject {};return _ddbbf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bged *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcfg :=vals [0];if _bcfg < 0.0||_bcfg > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bcfg );
return nil ,ErrColorOutOfRange ;};_aedeb :=vals [1];if _aedeb < 0.0||_aedeb > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aedeb );return nil ,ErrColorOutOfRange ;
};_begd :=vals [2];if _begd < 0.0||_begd > 1.0{_aa .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_begd );return nil ,ErrColorOutOfRange ;};_ddba :=NewPdfColorCalRGB (_bcfg ,_aedeb ,_begd );
return _ddba ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fdb .PdfObject ;NewWindow _fdb .PdfObject ;T _fdb .PdfObject ;};func (_ffec *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ddfg :=&PdfColorspaceDeviceN {};return _ddfg };

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bbag *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fdb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ee .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gedf ,_aaaa :=_fdb .GetNumbersAsFloat (objects );
if _aaaa !=nil {return nil ,_aaaa ;};return _bbag .ColorFromFloats (_gedf );};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dfcbc *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_dadgb :=RC4_128bit ;if options !=nil {_dadgb =options .Algorithm ;};_acagg :=_bf .PermOwner ;if options !=nil {_acagg =options .Permissions ;};var _cefgb _ec .Filter ;
switch _dadgb {case RC4_128bit :_cefgb =_ec .NewFilterV2 (16);case AES_128bit :_cefgb =_ec .NewFilterAESV2 ();case AES_256bit :_cefgb =_ec .NewFilterAESV3 ();default:return _d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fdgd ,_fdeec ,_eega :=_fdb .PdfCryptNewEncrypt (_cefgb ,userPass ,ownerPass ,_acagg );if _eega !=nil {return _eega ;};_dfcbc ._gbdba =_fdgd ;if _fdeec .Major !=0{_dfcbc .SetVersion (_fdeec .Major ,_fdeec .Minor );};_dfcbc ._adefcf =_fdeec .Encrypt ;
_dfcbc ._aebag ,_dfcbc ._gefad =_fdeec .ID0 ,_fdeec .ID1 ;_ffcee :=_fdb .MakeIndirectObject (_fdeec .Encrypt );_dfcbc ._dfbdf =_ffcee ;_dfcbc .addObject (_ffcee );return nil ;};func (_fbda PdfFont )actualFont ()pdfFont {if _fbda ._babcd ==nil {_aa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fbda );
};return _fbda ._babcd ;};func _ceedb (_badea *_fdb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dgbg :=PdfShadingType5 {};_fcca :=_badea .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fcca ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gdegg ,_afcag :=_fcca .(*_fdb .PdfObjectInteger );if !_afcag {_aa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcca );
return nil ,_fdb .ErrTypeError ;};_dgbg .BitsPerCoordinate =_gdegg ;_fcca =_badea .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fcca ==nil {_aa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gdegg ,_afcag =_fcca .(*_fdb .PdfObjectInteger );if !_afcag {_aa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fcca );
return nil ,_fdb .ErrTypeError ;};_dgbg .BitsPerComponent =_gdegg ;_fcca =_badea .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _fcca ==nil {_aa .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_gdegg ,_afcag =_fcca .(*_fdb .PdfObjectInteger );if !_afcag {_aa .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fcca );
return nil ,_fdb .ErrTypeError ;};_dgbg .VerticesPerRow =_gdegg ;_fcca =_badea .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fcca ==nil {_aa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dffdc ,_afcag :=_fcca .(*_fdb .PdfObjectArray );if !_afcag {_aa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcca );
return nil ,_fdb .ErrTypeError ;};_dgbg .Decode =_dffdc ;if _beaafc :=_badea .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_beaafc !=nil {_dgbg .Function =[]PdfFunction {};if _dgeed ,_bafae :=_beaafc .(*_fdb .PdfObjectArray );_bafae {for _ ,_ddgdd :=range _dgeed .Elements (){_fdaacg ,_bdece :=_cfgbc (_ddgdd );
if _bdece !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdece );return nil ,_bdece ;};_dgbg .Function =append (_dgbg .Function ,_fdaacg );
};}else {_cbde ,_afdbb :=_cfgbc (_beaafc );if _afdbb !=nil {_aa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afdbb );return nil ,_afdbb ;
};_dgbg .Function =append (_dgbg .Function ,_cbde );};};return &_dgbg ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_cgb :=NewPdfAction ();_acf :=&PdfActionGoTo {};_acf .PdfAction =_cgb ;_cgb .SetContext (_acf );return _acf ;};

// ToPdfObject implements interface PdfModel.
func (_ebe *PdfActionSubmitForm )ToPdfObject ()_fdb .PdfObject {_ebe .PdfAction .ToPdfObject ();_fcfe :=_ebe ._ae ;_ecc :=_fcfe .PdfObject .(*_fdb .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053",_fdb .MakeName (string (ActionTypeSubmitForm )));if _ebe .F !=nil {_ecc .Set ("\u0046",_ebe .F .ToPdfObject ());
};_ecc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ebe .Fields );_ecc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ebe .Flags );return _fcfe ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_dgb *BorderStyle )GetPdfName ()string {switch *_dgb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_gaeae *_fdb .PdfIndirectObject ;};

// WriteToFile writes the output PDF to file.
func (_debe *PdfWriter )WriteToFile (outputFilePath string )error {_ddfgb ,_efgea :=_fgc .Create (outputFilePath );if _efgea !=nil {return _efgea ;};defer _ddfgb .Close ();return _debe .Write (_ddfgb );};