//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_b "bufio";_bcb "bytes";_ag "crypto/rand";_bb "crypto/sha1";_ef "crypto/x509";_a "encoding/binary";_bc "encoding/hex";_cg "errors";_d "fmt";_adg "github.com/unidoc/pkcs7";_cgb "github.com/unidoc/unipdf/v3/common";_bab "github.com/unidoc/unipdf/v3/core";
_bcbf "github.com/unidoc/unipdf/v3/core/security";_gf "github.com/unidoc/unipdf/v3/core/security/crypt";_fd "github.com/unidoc/unipdf/v3/internal/cmap";_ca "github.com/unidoc/unipdf/v3/internal/imageutil";_cbf "github.com/unidoc/unipdf/v3/internal/license";
_ee "github.com/unidoc/unipdf/v3/internal/sampling";_ea "github.com/unidoc/unipdf/v3/internal/textencoding";_fg "github.com/unidoc/unipdf/v3/internal/transform";_cb "github.com/unidoc/unipdf/v3/model/internal/fonts";_ba "github.com/unidoc/unipdf/v3/model/sigutil";
_dea "github.com/unidoc/unipdf/v3/ps";_ade "github.com/unidoc/unitype";_dbc "golang.org/x/xerrors";_eg "image";_db "image/color";_ "image/gif";_ "image/png";_ad "io";_gc "io/ioutil";_ab "math";_ac "math/rand";_de "os";_c "regexp";_bbb "sort";_dc "strconv";
_bf "strings";_g "sync";_f "time";_gg "unicode";_be "unicode/utf8";);

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_afccb *DSS )GetContainingPdfObject ()_bab .PdfObject {return _afccb ._ddgc };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_agga *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdcd :=vals [0];_egbda :=[]float64 {_fdcd };_abbgd ,_gbfbf :=_agga .TintTransform .Evaluate (_egbda );
if _gbfbf !=nil {_cgb .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gbfbf );_cgb .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_agga .TintTransform );
return nil ,_gbfbf ;};_cgb .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_abbgd ,_agga .AlternateSpace );
_eegb ,_gbfbf :=_agga .AlternateSpace .ColorFromFloats (_abbgd );if _gbfbf !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gbfbf );
return nil ,_gbfbf ;};return _eegb ,nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_da :=NewPdfAction ();_fb :=&PdfActionHide {};_fb .PdfAction =_da ;_da .SetContext (_fb );return _fb ;};

// ToPdfObject implements interface PdfModel.
func (_dac *PdfAnnotationSound )ToPdfObject ()_bab .PdfObject {_dac .PdfAnnotation .ToPdfObject ();_afed :=_dac ._bcc ;_ggc :=_afed .PdfObject .(*_bab .PdfObjectDictionary );_dac .PdfAnnotationMarkup .appendToPdfDictionary (_ggc );_ggc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0053\u006f\u0075n\u0064"));
_ggc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dac .Sound );_ggc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dac .Name );return _afed ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bab .PdfObject ;IC _bab .PdfObject ;BE _bab .PdfObject ;RD _bab .PdfObject ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ddfac *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_cgb .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_cgb .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_cgb .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_cgb .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_aggf ,_efgg :=_ca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fffdd ,img ._dgbgc );if _efgg !=nil {return Image {},_efgg ;};_gfgc ,_efgg :=_ca .NRGBAConverter .Convert (_aggf );if _efgg !=nil {return Image {},_efgg ;
};return _bdaad (_gfgc .Base ()),nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_agbc *PdfFont )CharcodesToUnicode (charcodes []_ea .CharCode )[]rune {_gcef ,_ ,_ :=_agbc .CharcodesToUnicodeWithStats (charcodes );return _gcef ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dbgbb *PdfPage )GetContentStreams ()([]string ,error ){_cabed :=_dbgbb .GetContentStreamObjs ();var _cbgc []string ;for _ ,_bagef :=range _cabed {_bgcbe ,_dbfef :=_ebgdb (_bagef );if _dbfef !=nil {return nil ,_dbfef ;};_cbgc =append (_cbgc ,_bgcbe );
};return _cbgc ,nil ;};func (_fab *PdfReader )newPdfActionFromIndirectObject (_cgc *_bab .PdfIndirectObject )(*PdfAction ,error ){_dbgc ,_dfga :=_cgc .PdfObject .(*_bab .PdfObjectDictionary );if !_dfga {return nil ,_d .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_fab ._dccce .GetModelFromPrimitive (_dbgc );model !=nil {_ffc ,_ega :=model .(*PdfAction );if !_ega {return nil ,_d .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _ffc ,nil ;};_dgb :=&PdfAction {};_dgb ._ec =_cgc ;_fab ._dccce .Register (_dbgc ,_dgb );if _dgf :=_dbgc .Get ("\u0054\u0079\u0070\u0065");_dgf !=nil {_dfe ,_baa :=_dgf .(*_bab .PdfObjectName );if !_baa {_cgb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dgf );
}else {if *_dfe !="\u0041\u0063\u0074\u0069\u006f\u006e"{_cgb .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_dfe );
};_dgb .Type =_dfe ;};};if _bfe :=_dbgc .Get ("\u004e\u0065\u0078\u0074");_bfe !=nil {_dgb .Next =_bfe ;};if _gbc :=_dbgc .Get ("\u0053");_gbc !=nil {_dgb .S =_gbc ;};_gff ,_aeb :=_dgb .S .(*_bab .PdfObjectName );if !_aeb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dgb .S );
return nil ,_d .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dgb .S );};_fac :=PdfActionType (_gff .String ());
switch _fac {case ActionTypeGoTo :_cab ,_gbb :=_fab .newPdfActionGotoFromDict (_dbgc );if _gbb !=nil {return nil ,_gbb ;};_cab .PdfAction =_dgb ;_dgb ._dcb =_cab ;return _dgb ,nil ;case ActionTypeGoToR :_aabf ,_fec :=_fab .newPdfActionGotoRFromDict (_dbgc );
if _fec !=nil {return nil ,_fec ;};_aabf .PdfAction =_dgb ;_dgb ._dcb =_aabf ;return _dgb ,nil ;case ActionTypeGoToE :_egf ,_dfa :=_fab .newPdfActionGotoEFromDict (_dbgc );if _dfa !=nil {return nil ,_dfa ;};_egf .PdfAction =_dgb ;_dgb ._dcb =_egf ;return _dgb ,nil ;
case ActionTypeLaunch :_agb ,_bcd :=_fab .newPdfActionLaunchFromDict (_dbgc );if _bcd !=nil {return nil ,_bcd ;};_agb .PdfAction =_dgb ;_dgb ._dcb =_agb ;return _dgb ,nil ;case ActionTypeThread :_abeg ,_ead :=_fab .newPdfActionThreadFromDict (_dbgc );if _ead !=nil {return nil ,_ead ;
};_abeg .PdfAction =_dgb ;_dgb ._dcb =_abeg ;return _dgb ,nil ;case ActionTypeURI :_gffb ,_cbg :=_fab .newPdfActionURIFromDict (_dbgc );if _cbg !=nil {return nil ,_cbg ;};_gffb .PdfAction =_dgb ;_dgb ._dcb =_gffb ;return _dgb ,nil ;case ActionTypeSound :_efa ,_eae :=_fab .newPdfActionSoundFromDict (_dbgc );
if _eae !=nil {return nil ,_eae ;};_efa .PdfAction =_dgb ;_dgb ._dcb =_efa ;return _dgb ,nil ;case ActionTypeMovie :_aee ,_bfc :=_fab .newPdfActionMovieFromDict (_dbgc );if _bfc !=nil {return nil ,_bfc ;};_aee .PdfAction =_dgb ;_dgb ._dcb =_aee ;return _dgb ,nil ;
case ActionTypeHide :_egeb ,_ggbc :=_fab .newPdfActionHideFromDict (_dbgc );if _ggbc !=nil {return nil ,_ggbc ;};_egeb .PdfAction =_dgb ;_dgb ._dcb =_egeb ;return _dgb ,nil ;case ActionTypeNamed :_eda ,_ccd :=_fab .newPdfActionNamedFromDict (_dbgc );if _ccd !=nil {return nil ,_ccd ;
};_eda .PdfAction =_dgb ;_dgb ._dcb =_eda ;return _dgb ,nil ;case ActionTypeSubmitForm :_dfd ,_afg :=_fab .newPdfActionSubmitFormFromDict (_dbgc );if _afg !=nil {return nil ,_afg ;};_dfd .PdfAction =_dgb ;_dgb ._dcb =_dfd ;return _dgb ,nil ;case ActionTypeResetForm :_bee ,_ffg :=_fab .newPdfActionResetFormFromDict (_dbgc );
if _ffg !=nil {return nil ,_ffg ;};_bee .PdfAction =_dgb ;_dgb ._dcb =_bee ;return _dgb ,nil ;case ActionTypeImportData :_ecd ,_cgf :=_fab .newPdfActionImportDataFromDict (_dbgc );if _cgf !=nil {return nil ,_cgf ;};_ecd .PdfAction =_dgb ;_dgb ._dcb =_ecd ;
return _dgb ,nil ;case ActionTypeSetOCGState :_def ,_dd :=_fab .newPdfActionSetOCGStateFromDict (_dbgc );if _dd !=nil {return nil ,_dd ;};_def .PdfAction =_dgb ;_dgb ._dcb =_def ;return _dgb ,nil ;case ActionTypeRendition :_eff ,_bcdb :=_fab .newPdfActionRenditionFromDict (_dbgc );
if _bcdb !=nil {return nil ,_bcdb ;};_eff .PdfAction =_dgb ;_dgb ._dcb =_eff ;return _dgb ,nil ;case ActionTypeTrans :_gbe ,_cbe :=_fab .newPdfActionTransFromDict (_dbgc );if _cbe !=nil {return nil ,_cbe ;};_gbe .PdfAction =_dgb ;_dgb ._dcb =_gbe ;return _dgb ,nil ;
case ActionTypeGoTo3DView :_gbd ,_aada :=_fab .newPdfActionGoTo3DViewFromDict (_dbgc );if _aada !=nil {return nil ,_aada ;};_gbd .PdfAction =_dgb ;_dgb ._dcb =_gbd ;return _dgb ,nil ;case ActionTypeJavaScript :_gge ,_egaa :=_fab .newPdfActionJavaScriptFromDict (_dbgc );
if _egaa !=nil {return nil ,_egaa ;};_gge .PdfAction =_dgb ;_dgb ._dcb =_gge ;return _dgb ,nil ;};_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fac );
return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aca *PdfActionHide )ToPdfObject ()_bab .PdfObject {_aca .PdfAction .ToPdfObject ();_dcd :=_aca ._ec ;_cc :=_dcd .PdfObject .(*_bab .PdfObjectDictionary );_cc .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeHide )));_cc .SetIfNotNil ("\u0054",_aca .T );
_cc .SetIfNotNil ("\u0048",_aca .H );return _dcd ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ecce _ad .ReadSeeker ;_dega *_bab .PdfParser ;_fgdb *PdfReader ;Reader *PdfReader ;_gdad []*PdfPage ;_dbff *PdfAcroForm ;_edbg *DSS ;_defd _bab .XrefTable ;_gcb int64 ;_egaf int ;_dfea []_bab .PdfObject ;_gegb map[_bab .PdfObject ]struct{};
_fbeac map[_bab .PdfObject ]int64 ;_cbace map[_bab .PdfObject ]struct{};_gced map[_bab .PdfObject ]struct{};_ccdd int64 ;_bedd bool ;};func (_ecgb *pdfFontType0 )subsetRegistered ()error {_fdddd ,_ffdef :=_ecgb .DescendantFont ._dfbfg .(*pdfCIDFontType2 );
if !_ffdef {_cgb .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_ecgb .DescendantFont );return nil ;};if _fdddd ==nil {return nil ;
};if _fdddd ._dbcbe ==nil {_cgb .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _ecgb ._aecf ==nil {_cgb .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gcbf ,_ffdef :=_bab .GetStream (_fdddd ._dbcbe .FontFile2 );if !_ffdef {_cgb .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _cg .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bdga ,_gdbge :=_bab .DecodeStream (_gcbf );if _gdbge !=nil {_cgb .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gdbge );
return _gdbge ;};_edccc ,_gdbge :=_ade .Parse (_bcb .NewReader (_bdga ));if _gdbge !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gcbf .Stream ));
return _gdbge ;};var _egcgd []rune ;var _bagf *_ade .Font ;switch _cgdde :=_ecgb ._aecf .(type ){case *_ea .TrueTypeFontEncoder :_egcgd =_cgdde .RegisteredRunes ();_bagf ,_gdbge =_edccc .SubsetKeepRunes (_egcgd );if _gdbge !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdbge );
return _gdbge ;};_cgdde .SubsetRegistered ();case *_ea .IdentityEncoder :_egcgd =_cgdde .RegisteredRunes ();_cebfff :=make ([]_ade .GlyphIndex ,len (_egcgd ));for _fefcg ,_aecc :=range _egcgd {_cebfff [_fefcg ]=_ade .GlyphIndex (_aecc );};_bagf ,_gdbge =_edccc .SubsetKeepIndices (_cebfff );
if _gdbge !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdbge );return _gdbge ;};case _ea .SimpleEncoder :_ddcec :=_cgdde .Charcodes ();for _ ,_ccba :=range _ddcec {_gfgad ,_gcdb :=_cgdde .CharcodeToRune (_ccba );if !_gcdb {_cgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ccba );
continue ;};_egcgd =append (_egcgd ,_gfgad );};default:return _d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_ecgb ._aecf );
};var _dbee _bcb .Buffer ;_gdbge =_bagf .Write (&_dbee );if _gdbge !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdbge );return _gdbge ;};if _ecgb ._cfdd !=nil {_eacad :=make (map[_fd .CharCode ]rune ,len (_egcgd ));for _ ,_bcg :=range _egcgd {_fdgbb ,_ffbbc :=_ecgb ._aecf .RuneToCharcode (_bcg );
if !_ffbbc {continue ;};_eacad [_fd .CharCode (_fdgbb )]=_bcg ;};_ecgb ._cfdd =_fd .NewToUnicodeCMap (_eacad );};_gcbf ,_gdbge =_bab .MakeStream (_dbee .Bytes (),_bab .NewFlateEncoder ());if _gdbge !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdbge );
return _gdbge ;};_gcbf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bab .MakeInteger (int64 (_dbee .Len ())));if _caffb ,_acaeg :=_bab .GetStream (_fdddd ._dbcbe .FontFile2 );_acaeg {*_caffb =*_gcbf ;}else {_fdddd ._dbcbe .FontFile2 =_gcbf ;};_bagfb :=_bfadg ();
if len (_ecgb ._cefg )> 0{_ecgb ._cefg =_beba (_ecgb ._cefg ,_bagfb );};if len (_fdddd ._cefg )> 0{_fdddd ._cefg =_beba (_fdddd ._cefg ,_bagfb );};if len (_ecgb ._ccfcg )> 0{_ecgb ._ccfcg =_beba (_ecgb ._ccfcg ,_bagfb );};if _fdddd ._dbcbe !=nil {_dcfga ,_fgbba :=_bab .GetName (_fdddd ._dbcbe .FontName );
if _fgbba &&len (_dcfga .String ())> 0{_ebfe :=_beba (_dcfga .String (),_bagfb );_fdddd ._dbcbe .FontName =_bab .MakeName (_ebfe );};};return nil ;};func (_cgeb *PdfReader )newPdfAnnotationStrikeOut (_bfdf *_bab .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_dfda :=PdfAnnotationStrikeOut {};
_bccc ,_gbag :=_cgeb .newPdfAnnotationMarkupFromDict (_bfdf );if _gbag !=nil {return nil ,_gbag ;};_dfda .PdfAnnotationMarkup =_bccc ;_dfda .QuadPoints =_bfdf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dfda ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_eaaba *PdfReader )GetOutlines ()(*Outline ,error ){if _eaaba ==nil {return nil ,_cg .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_bdea :=_eaaba .GetOutlineTree ();if _bdea ==nil {return nil ,_cg .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _befgb func (_ddgee *PdfOutlineTreeNode ,_cbabc *[]*OutlineItem );_befgb =func (_abacb *PdfOutlineTreeNode ,_dacfc *[]*OutlineItem ){if _abacb ==nil {return ;};if _abacb ._agea ==nil {_cgb .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _afgec *OutlineItem ;if _ebgca ,_gccdb :=_abacb ._agea .(*PdfOutlineItem );_gccdb {_aebgc :=_ebgca .Dest ;if (_aebgc ==nil ||_bab .IsNullObject (_aebgc ))&&_ebgca .A !=nil {if _aeabf ,_feff :=_bab .GetDict (_ebgca .A );_feff {_aebgc ,_ =_bab .GetArray (_aeabf .Get ("\u0044"));
};};var _ddgcd OutlineDest ;if _aebgc !=nil &&!_bab .IsNullObject (_aebgc ){if _gafbd ,_eaggf :=_fafaf (_aebgc ,_eaaba );_eaggf ==nil {_ddgcd =*_gafbd ;}else {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_aebgc ,_eaggf );
};};_afgec =NewOutlineItem (_ebgca .Title .Decoded (),_ddgcd );*_dacfc =append (*_dacfc ,_afgec );if _ebgca .Next !=nil {_befgb (_ebgca .Next ,_dacfc );};};if _abacb .First !=nil {if _afgec !=nil {_dacfc =&_afgec .Entries ;};_befgb (_abacb .First ,_dacfc );
};};_fdeb :=NewOutline ();_befgb (_bdea ,&_fdeb .Entries );return _fdeb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bddff *PdfAnnotationTrapNet )ToPdfObject ()_bab .PdfObject {_bddff .PdfAnnotation .ToPdfObject ();_caga :=_bddff ._bcc ;_gceg :=_caga .PdfObject .(*_bab .PdfObjectDictionary );_gceg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _caga ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_cgfag *pdfFontSimple )ToPdfObject ()_bab .PdfObject {if _cgfag ._ebdcd ==nil {_cgfag ._ebdcd =&_bab .PdfIndirectObject {};};_baggd :=_cgfag .baseFields ().asPdfObjectDictionary ("");_cgfag ._ebdcd .PdfObject =_baggd ;if _cgfag .FirstChar !=nil {_baggd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cgfag .FirstChar );
};if _cgfag .LastChar !=nil {_baggd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cgfag .LastChar );};if _cgfag .Widths !=nil {_baggd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cgfag .Widths );};if _cgfag .Encoding !=nil {_baggd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgfag .Encoding );
}else if _cgfag ._agbga !=nil {_gdgcg :=_cgfag ._agbga .ToPdfObject ();if _gdgcg !=nil {_baggd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gdgcg );};};return _cgfag ._ebdcd ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dfc :=NewPdfAnnotation ();_dgc :=&PdfAnnotationTrapNet {};_dgc .PdfAnnotation =_dfc ;_dfc .SetContext (_dgc );return _dgc ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bab .PdfObject ;MK _bab .PdfObject ;A _bab .PdfObject ;AA _bab .PdfObject ;BS _bab .PdfObject ;Parent _bab .PdfObject ;_ece *PdfField ;_acg bool ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func _afecb (_gcab _bab .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_ggcda :=NewPdfColorspaceSpecialIndexed ();if _fdec ,_abgag :=_gcab .(*_bab .PdfIndirectObject );_abgag {_ggcda ._aagc =_fdec ;};_gcab =_bab .TraceToDirectObject (_gcab );
_cggf ,_fcff :=_gcab .(*_bab .PdfObjectArray );if !_fcff {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cggf .Len ()!=4{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_gcab =_cggf .Get (0);_dbcca ,_fcff :=_gcab .(*_bab .PdfObjectName );if !_fcff {return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_dbcca !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_gcab =_cggf .Get (1);_gbaf ,_adced :=DetermineColorspaceNameFromPdfObject (_gcab );if _adced !=nil {return nil ,_adced ;};if _gbaf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gbaf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_cgb .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gbaf );
return nil ,_fgbf ;};_ecdg ,_adced :=NewPdfColorspaceFromPdfObject (_gcab );if _adced !=nil {return nil ,_adced ;};_ggcda .Base =_ecdg ;_gcab =_cggf .Get (2);_ecfeb ,_adced :=_bab .GetNumberAsInt64 (_gcab );if _adced !=nil {return nil ,_adced ;};if _ecfeb > 255{return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_ggcda .HiVal =int (_ecfeb );_gcab =_cggf .Get (3);_ggcda .Lookup =_gcab ;_gcab =_bab .TraceToDirectObject (_gcab );var _cccea []byte ;if _fefgd ,_fgaa :=_gcab .(*_bab .PdfObjectString );_fgaa {_cccea =_fefgd .Bytes ();_cgb .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_cccea );
}else if _cbead ,_gaab :=_gcab .(*_bab .PdfObjectStream );_gaab {_cgb .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gcab .String ());_cgb .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cbead .Stream ),_cbead .Stream );
_cagdc ,_cgec :=_bab .DecodeStream (_cbead );if _cgec !=nil {return nil ,_cgec ;};_cgb .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cagdc ),_cagdc );_cccea =_cagdc ;}else {_cgb .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gcab );
return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_cccea )< _ggcda .Base .GetNumComponents ()*(_ggcda .HiVal +1){_cgb .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_cgb .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_cccea ),_ggcda .Base .GetNumComponents (),_ggcda .HiVal );
}else {_cccea =_cccea [:_ggcda .Base .GetNumComponents ()*(_ggcda .HiVal +1)];};_ggcda ._abddd =_cccea ;return _ggcda ,nil ;};

// RemovePage removes a page by number.
func (_ggba *PdfAppender )RemovePage (pageNum int ){_ebaa :=pageNum -1;_ggba ._gdad =append (_ggba ._gdad [0:_ebaa ],_ggba ._gdad [pageNum :]...);};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fga *PdfAnnotation )GetContext ()PdfModel {if _fga ==nil {return nil ;};return _fga ._bda ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_acfc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _acfc .Base ==nil {return nil ,_cg .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _acfc .Base .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_egcb *PdfActionImportData )ToPdfObject ()_bab .PdfObject {_egcb .PdfAction .ToPdfObject ();_gbfb :=_egcb ._ec ;_abb :=_gbfb .PdfObject .(*_bab .PdfObjectDictionary );_abb .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeImportData )));if _egcb .F !=nil {_abb .Set ("\u0046",_egcb .F .ToPdfObject ());
};return _gbfb ;};func (_gdbd *Image )samplesAddPadding (_debe []uint32 )[]uint32 {_fbbdf :=_ca .BytesPerLine (int (_gdbd .Width ),int (_gdbd .BitsPerComponent ),_gdbd .ColorComponents )*(8/int (_gdbd .BitsPerComponent ));_bcdde :=_fbbdf *int (_gdbd .Height );
if len (_debe )==_bcdde {return _debe ;};_adba :=make ([]uint32 ,_bcdde );_eegbf :=int (_gdbd .Width )*_gdbd .ColorComponents ;for _ebdcb :=0;_ebdcb < int (_gdbd .Height );_ebdcb ++{_ddffg :=_ebdcb *int (_gdbd .Width );_efefc :=_ebdcb *_fbbdf ;for _cedf :=0;
_cedf < _eegbf ;_cedf ++{_adba [_efefc +_cedf ]=_debe [_ddffg +_cedf ];};};return _adba ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bab .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bab .PdfObject ;Contents _bab .PdfObject ;
Rotate *int64 ;Group _bab .PdfObject ;Thumb _bab .PdfObject ;B _bab .PdfObject ;Dur _bab .PdfObject ;Trans _bab .PdfObject ;AA _bab .PdfObject ;Metadata _bab .PdfObject ;PieceInfo _bab .PdfObject ;StructParents _bab .PdfObject ;ID _bab .PdfObject ;PZ _bab .PdfObject ;
SeparationInfo _bab .PdfObject ;Tabs _bab .PdfObject ;TemplateInstantiated _bab .PdfObject ;PresSteps _bab .PdfObject ;UserUnit _bab .PdfObject ;VP _bab .PdfObject ;Annots _bab .PdfObject ;_gagfb []*PdfAnnotation ;_beadg *_bab .PdfObjectDictionary ;_efdec *_bab .PdfIndirectObject ;
_aadae *PdfReader ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_egeg *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _egeg .Alternate ==nil {_cgb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _egeg .N ==1{_cgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_acac :=NewPdfColorspaceDeviceGray ();return _acac .ImageToRGB (img );}else if _egeg .N ==3{_cgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _egeg .N ==4{_cgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_egfd :=NewPdfColorspaceDeviceCMYK ();return _egfd .ImageToRGB (img );}else {return img ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_cgb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_egeg );
_deaae ,_gegec :=_egeg .Alternate .ImageToRGB (img );_cgb .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_cgb .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_deaae );
return _deaae ,_gegec ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bab .PdfObject ;NewWindow _bab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fff *PdfAnnotationSquare )ToPdfObject ()_bab .PdfObject {_fff .PdfAnnotation .ToPdfObject ();_fbfa :=_fff ._bcc ;_adce :=_fbfa .PdfObject .(*_bab .PdfObjectDictionary );if _fff .PdfAnnotationMarkup !=nil {_fff .PdfAnnotationMarkup .appendToPdfDictionary (_adce );
};_adce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_adce .SetIfNotNil ("\u0042\u0053",_fff .BS );_adce .SetIfNotNil ("\u0049\u0043",_fff .IC );_adce .SetIfNotNil ("\u0042\u0045",_fff .BE );
_adce .SetIfNotNil ("\u0052\u0044",_fff .RD );return _fbfa ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bab .PdfObjectStream ;Data []byte ;_adbf *_bab .PdfIndirectObject ;_eafde *_bab .PdfObjectStream ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_eabfg *PdfRectangle )Normalize (){if _eabfg .Llx > _eabfg .Urx {_eabfg .Llx ,_eabfg .Urx =_eabfg .Urx ,_eabfg .Llx ;};if _eabfg .Lly > _eabfg .Ury {_eabfg .Lly ,_eabfg .Ury =_eabfg .Ury ,_eabfg .Lly ;};};func (_adgag *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dbbd *_bab .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ddbf :=PdfAnnotationPrinterMark {};
_ddbf .MN =_dbbd .Get ("\u004d\u004e");return &_ddbf ,nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dbbdc *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_edfgg :=NewPdfOutlineItem ();_edfgg .Title =_bab .MakeEncodedString (_dbbdc .Title ,true );_edfgg .Dest =_dbbdc .Dest .ToPdfObject ();var _ddeg []*PdfOutlineItem ;var _dfcdb int64 ;
var _gdgabb *PdfOutlineItem ;for _ ,_bege :=range _dbbdc .Entries {_dedc ,_ebda :=_bege .ToPdfOutlineItem ();_dedc .Parent =&_edfgg .PdfOutlineTreeNode ;if _gdgabb !=nil {_gdgabb .Next =&_dedc .PdfOutlineTreeNode ;_dedc .Prev =&_gdgabb .PdfOutlineTreeNode ;
};_ddeg =append (_ddeg ,_dedc );_dfcdb +=_ebda ;_gdgabb =_dedc ;};_dafbg :=len (_ddeg );_dfcdb +=int64 (_dafbg );if _dafbg > 0{_edfgg .First =&_ddeg [0].PdfOutlineTreeNode ;_edfgg .Last =&_ddeg [_dafbg -1].PdfOutlineTreeNode ;_edfgg .Count =&_dfcdb ;};
return _edfgg ,_dfcdb ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ggcg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fggd _ad .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_bbgea _eg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_fged _eg .Image )(*Image ,error );

// Compress an image.
Compress (_dfdg *Image ,_fggcb int64 )(*Image ,error );};

// GetPageDict converts the Page to a PDF object dictionary.
func (_cffde *PdfPage )GetPageDict ()*_bab .PdfObjectDictionary {_gbac :=_cffde ._beadg ;_gbac .Clear ();_gbac .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0050\u0061\u0067\u0065"));_gbac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cffde .Parent );
if _cffde .LastModified !=nil {_gbac .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cffde .LastModified .ToPdfObject ());};if _cffde .Resources !=nil {_gbac .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cffde .Resources .ToPdfObject ());
};if _cffde .CropBox !=nil {_gbac .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_cffde .CropBox .ToPdfObject ());};if _cffde .MediaBox !=nil {_gbac .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_cffde .MediaBox .ToPdfObject ());};if _cffde .BleedBox !=nil {_gbac .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_cffde .BleedBox .ToPdfObject ());
};if _cffde .TrimBox !=nil {_gbac .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_cffde .TrimBox .ToPdfObject ());};if _cffde .ArtBox !=nil {_gbac .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_cffde .ArtBox .ToPdfObject ());};_gbac .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_cffde .BoxColorInfo );
_gbac .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cffde .Contents );if _cffde .Rotate !=nil {_gbac .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bab .MakeInteger (*_cffde .Rotate ));};_gbac .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cffde .Group );
_gbac .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_cffde .Thumb );_gbac .SetIfNotNil ("\u0042",_cffde .B );_gbac .SetIfNotNil ("\u0044\u0075\u0072",_cffde .Dur );_gbac .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cffde .Trans );_gbac .SetIfNotNil ("\u0041\u0041",_cffde .AA );
_gbac .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cffde .Metadata );_gbac .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cffde .PieceInfo );_gbac .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cffde .StructParents );
_gbac .SetIfNotNil ("\u0049\u0044",_cffde .ID );_gbac .SetIfNotNil ("\u0050\u005a",_cffde .PZ );_gbac .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_cffde .SeparationInfo );_gbac .SetIfNotNil ("\u0054\u0061\u0062\u0073",_cffde .Tabs );
_gbac .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_cffde .TemplateInstantiated );_gbac .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_cffde .PresSteps );_gbac .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_cffde .UserUnit );
_gbac .SetIfNotNil ("\u0056\u0050",_cffde .VP );if _cffde ._gagfb !=nil {_afdg :=_bab .MakeArray ();for _ ,_dafcg :=range _cffde ._gagfb {if _bdadg :=_dafcg .GetContext ();_bdadg !=nil {_afdg .Append (_bdadg .ToPdfObject ());}else {_afdg .Append (_dafcg .ToPdfObject ());
};};if _afdg .Len ()> 0{_gbac .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_afdg );};}else if _cffde .Annots !=nil {_gbac .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_cffde .Annots );};return _gbac ;};

// ToPdfObject implements interface PdfModel.
func (_ddfab *PdfBorderStyle )ToPdfObject ()_bab .PdfObject {_dgdb :=_bab .MakeDict ();if _ddfab ._cgdb !=nil {if _ffag ,_gece :=_ddfab ._cgdb .(*_bab .PdfIndirectObject );_gece {_ffag .PdfObject =_dgdb ;};};_dgdb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _ddfab .W !=nil {_dgdb .Set ("\u0057",_bab .MakeFloat (*_ddfab .W ));};if _ddfab .S !=nil {_dgdb .Set ("\u0053",_bab .MakeName (_ddfab .S .GetPdfName ()));};if _ddfab .D !=nil {_dgdb .Set ("\u0044",_bab .MakeArrayFromIntegers (*_ddfab .D ));};if _ddfab ._cgdb !=nil {return _ddfab ._cgdb ;
};return _dgdb ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_edab *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fddd :=_ee .NewReader (img .getBase ());_adeea :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_edab .AlternateSpace .GetNumComponents (),nil ,img ._fffdd ,nil );
_fcbee :=_ee .NewWriter (_adeea );_ebac :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_cgb .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_cgb .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_edab .TintTransform );_aeefe :=_edab .AlternateSpace .DecodeArray ();var (_ggde uint32 ;_acgc error ;);for {_ggde ,_acgc =_fddd .ReadSample ();
if _acgc ==_ad .EOF {break ;};if _acgc !=nil {return img ,_acgc ;};_bafe :=float64 (_ggde )/_ebac ;_cbaf ,_cbed :=_edab .TintTransform .Evaluate ([]float64 {_bafe });if _cbed !=nil {return img ,_cbed ;};for _ebaad ,_adca :=range _cbaf {_eedb :=_ca .LinearInterpolate (_adca ,_aeefe [_ebaad *2],_aeefe [_ebaad *2+1],0,1);
if _cbed =_fcbee .WriteSample (uint32 (_eedb *_ebac ));_cbed !=nil {return img ,_cbed ;};};};return _edab .AlternateSpace .ImageToRGB (_bdaad (&_adeea ));};func (_bbcee *PdfPage )setContainer (_dacdc *_bab .PdfIndirectObject ){_dacdc .PdfObject =_bbcee ._beadg ;
_bbcee ._efdec =_dacdc ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bfg :=NewPdfAction ();_ga :=&PdfActionResetForm {};_ga .PdfAction =_bfg ;_bfg .SetContext (_ga );return _ga ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cedeg *PdfPage )GetContentStreamObjs ()[]_bab .PdfObject {if _cedeg .Contents ==nil {return nil ;};_bdbb :=_bab .TraceToDirectObject (_cedeg .Contents );if _dcgf ,_dagg :=_bdbb .(*_bab .PdfObjectArray );_dagg {return _dcgf .Elements ();};return []_bab .PdfObject {_bdbb };
};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_aedc *PdfColorCalRGB )GetNumComponents ()int {return 3};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bbdfe *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bbdfe .RunesToCharcodeBytes ([]rune (str ));};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_geddb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bdec :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_faaga ,_cdegcf :=_geddb .GetNumPages ();if _cdegcf !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdegcf );
return nil ,_cdegcf ;};for _aeea :=1;_aeea <=_faaga ;_aeea ++{_gcdba ,_aafd :=_geddb .GetPage (_aeea );if _aafd !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aafd );return nil ,_aafd ;};if opts .PageProcessCallback !=nil {_aafd =opts .PageProcessCallback (_aeea ,_gcdba );
if _aafd !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aafd );return nil ,_aafd ;};}else if opts .PageCallback !=nil {opts .PageCallback (_aeea ,_gcdba );};_aafd =_bdec .AddPage (_gcdba );if _aafd !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aafd );
return nil ,_aafd ;};};_bdec ._gffad =_geddb .PdfVersion ().Major ;_bdec ._bbad =_geddb .PdfVersion ().Minor ;if !opts .SkipInfo {_cbede ,_bceg :=_geddb .GetPdfInfo ();if _bceg !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bceg );
}else {_bdec ._cgddgb .PdfObject =_cbede .ToPdfObject ();};};if !opts .SkipAcroForm {_gdfc :=_bdec .SetForms (_geddb .AcroForm );if _gdfc !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdfc );return nil ,_gdfc ;};};if !opts .SkipOutlines {_bdec .AddOutlineTree (_geddb .GetOutlineTree ());
};if !opts .SkipOCProperties {_fdaeb ,_cgbbg :=_geddb .GetOCProperties ();if _cgbbg !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbbg );}else {_cgbbg =_bdec .SetOCProperties (_fdaeb );if _cgbbg !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbbg );
};};};if !opts .SkipPageLabels {_addea ,_ebbb :=_geddb .GetPageLabels ();if _ebbb !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebbb );}else {_ebbb =_bdec .SetPageLabels (_addea );if _ebbb !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebbb );
};};};if !opts .SkipNamedDests {_cbaaf ,_ceebf :=_geddb .GetNamedDestinations ();if _ceebf !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceebf );}else {_ceebf =_bdec .SetNamedDestinations (_cbaaf );if _ceebf !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceebf );
};};};if !opts .SkipRotation &&_geddb .Rotate !=nil {if _egbc :=_bdec .SetRotation (*_geddb .Rotate );_egbc !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egbc );};};return &_bdec ,nil ;};func _bfadg ()string {_bgdd :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _abea _bcb .Buffer ;for _cagdca :=0;_cagdca < 6;_cagdca ++{_abea .WriteRune (rune (_bgdd [_ac .Intn (len (_bgdd ))]));};return _abea .String ();};func _fbegb ()string {return _cgb .Version };

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _f .Time ){_fcccb .Lock ();defer _fcccb .Unlock ();_cdaa =modifiedDate ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dfaf :=NewPdfAnnotation ();_ddcf :=&PdfAnnotationSquiggly {};_ddcf .PdfAnnotation =_dfaf ;_ddcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfaf .SetContext (_ddcf );return _ddcf ;};func (_gfga *PdfReader )newPdfAnnotationPopupFromDict (_ffba *_bab .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_eadbc :=PdfAnnotationPopup {};
_eadbc .Parent =_ffba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_eadbc .Open =_ffba .Get ("\u004f\u0070\u0065\u006e");return &_eadbc ,nil ;};type fontCommon struct{_cefg string ;_egbf string ;_ccfcg string ;_debg _bab .PdfObject ;_cfdd *_fd .CMap ;
_dbcbe *PdfFontDescriptor ;_bega int64 ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfVersion returns version of the PDF file.
func (_dccaf *PdfReader )PdfVersion ()_bab .Version {return _dccaf ._fdcebg .PdfVersion ()};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_ebbe *_bab .PdfIndirectObject ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bab .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_fdcf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bab .PdfObjectArray ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bab .PdfObject ;B _bab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfAnnotationCircle )ToPdfObject ()_bab .PdfObject {_fcg .PdfAnnotation .ToPdfObject ();_gcdf :=_fcg ._bcc ;_fgge :=_gcdf .PdfObject .(*_bab .PdfObjectDictionary );_fcg .PdfAnnotationMarkup .appendToPdfDictionary (_fgge );_fgge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_fgge .SetIfNotNil ("\u0042\u0053",_fcg .BS );_fgge .SetIfNotNil ("\u0049\u0043",_fcg .IC );_fgge .SetIfNotNil ("\u0042\u0045",_fcg .BE );_fgge .SetIfNotNil ("\u0052\u0044",_fcg .RD );return _gcdf ;};func _bdgf (_dbaa *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_dbaa }};
type pdfFontSimple struct{fontCommon ;_ebdcd *_bab .PdfIndirectObject ;_dbfe map[_ea .CharCode ]float64 ;_agbga _ea .TextEncoder ;_baffg _ea .TextEncoder ;_cfeec *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bab .PdfObject ;LastChar _bab .PdfObject ;Widths _bab .PdfObject ;Encoding _bab .PdfObject ;_cfdae *_cb .RuneCharSafeMap ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_edbgb ,_affd :=NewStandard14Font (basefont );if _affd !=nil {panic (_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _edbgb ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bab .PdfObject ;Mac _bab .PdfObject ;Unix _bab .PdfObject ;NewWindow _bab .PdfObject ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_efb :=NewPdfAction ();_aa :=&PdfActionURI {};_aa .PdfAction =_efb ;_efb .SetContext (_aa );return _aa ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_egebb *PdfPage )AddExtGState (name _bab .PdfObjectName ,egs *_bab .PdfObjectDictionary )error {if _egebb .Resources ==nil {_egebb .Resources =NewPdfPageResources ();};if _egebb .Resources .ExtGState ==nil {_egebb .Resources .ExtGState =_bab .MakeDict ();
};_aegf ,_adde :=_bab .TraceToDirectObject (_egebb .Resources .ExtGState ).(*_bab .PdfObjectDictionary );if !_adde {_cgb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bab .TraceToDirectObject (_egebb .Resources .ExtGState ));
return _cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aegf .Set (name ,egs );return nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_ffed *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_ffed .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_ffed ._dbff =acroForm ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;
BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject returns the PDF representation of the colorspace.
func (_dabd *PdfColorspaceDeviceRGB )ToPdfObject ()_bab .PdfObject {return _bab .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_cbecc *Image )GetSamples ()[]uint32 {_aaed :=_ee .ResampleBytes (_cbecc .Data ,int (_cbecc .BitsPerComponent ));if _cbecc .BitsPerComponent < 8{_aaed =_cbecc .samplesTrimPadding (_aaed );};_ecfa :=int (_cbecc .Width )*int (_cbecc .Height )*_cbecc .ColorComponents ;
if len (_aaed )< _ecfa {_cgb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_aaed ),_ecfa );
return _aaed ;}else if len (_aaed )> _ecfa {_cgb .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_aaed ),_ecfa );
_aaed =_aaed [:_ecfa ];};return _aaed ;};func (_agc *PdfReader )newPdfActionSubmitFormFromDict (_cfd *_bab .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_efbe ,_bad :=_eec (_cfd .Get ("\u0046"));if _bad !=nil {return nil ,_bad ;};return &PdfActionSubmitForm {F :_efbe ,Fields :_cfd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cfd .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_aaf :=NewPdfAction ();_ace :=&PdfActionImportData {};_ace .PdfAction =_aaf ;_aaf .SetContext (_ace );return _ace ;};

// GetPage returns the PdfPage model for the specified page number.
func (_gcfbe *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _gcfbe ._fdcebg .GetCrypter ()!=nil &&!_gcfbe ._fdcebg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_gcfbe ._aedab )< pageNumber {return nil ,_cg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_gcfce :=pageNumber -1;if _gcfce < 0{return nil ,_d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_ddcee :=_gcfbe .PageList [_gcfce ];
return _ddcee ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bab .PdfObject ;Volume _bab .PdfObject ;Synchronous _bab .PdfObject ;Repeat _bab .PdfObject ;Mix _bab .PdfObject ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bab .PdfObject ;MK _bab .PdfObject ;A _bab .PdfObject ;AA _bab .PdfObject ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gebe :=NewPdfAnnotation ();_efd :=&PdfAnnotationMovie {};_efd .PdfAnnotation =_gebe ;_gebe .SetContext (_efd );return _efd ;};var (CourierName =_cb .CourierName ;CourierBoldName =_cb .CourierBoldName ;
CourierObliqueName =_cb .CourierObliqueName ;CourierBoldObliqueName =_cb .CourierBoldObliqueName ;HelveticaName =_cb .HelveticaName ;HelveticaBoldName =_cb .HelveticaBoldName ;HelveticaObliqueName =_cb .HelveticaObliqueName ;HelveticaBoldObliqueName =_cb .HelveticaBoldObliqueName ;
SymbolName =_cb .SymbolName ;ZapfDingbatsName =_cb .ZapfDingbatsName ;TimesRomanName =_cb .TimesRomanName ;TimesBoldName =_cb .TimesBoldName ;TimesItalicName =_cb .TimesItalicName ;TimesBoldItalicName =_cb .TimesBoldItalicName ;);func (_fcfb fontCommon )fontFlags ()int {if _fcfb ._dbcbe ==nil {return 0;
};return _fcfb ._dbcbe ._agee ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cce :=NewPdfAnnotation ();_acgb :=&PdfAnnotationRedact {};_acgb .PdfAnnotation =_cce ;_acgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cce .SetContext (_acgb );return _acgb ;};func (_dfabg *LTV )getCRLs (_ebcfbd []*_ef .Certificate )([][]byte ,error ){_gfgac :=make ([][]byte ,0,len (_ebcfbd ));
for _ ,_abaa :=range _ebcfbd {for _ ,_gebgc :=range _abaa .CRLDistributionPoints {if _dfabg .CertClient .IsCA (_abaa ){continue ;};_adgdc ,_ggdda :=_dfabg .CRLClient .MakeRequest (_gebgc ,_abaa );if _ggdda !=nil {_cgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_ggdda );
continue ;};_gfgac =append (_gfgac ,_adgdc );};};return _gfgac ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_aaffa *_bab .PdfIndirectObject ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_ebaee *PdfInfo )AddCustomInfo (name string ,value string )error {if _ebaee ._bgef ==nil {_ebaee ._bgef =_bab .MakeDict ();};if _ ,_ddcae :=_bgefe [name ];_ddcae {return _d .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ebaee ._bgef .SetIfNotNil (*_bab .MakeName (name ),_bab .MakeString (value ));return nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_afgcd *PdfAcroForm )ToPdfObject ()_bab .PdfObject {_eeagc :=_afgcd ._bage ;_fdcad :=_eeagc .PdfObject .(*_bab .PdfObjectDictionary );if _afgcd .Fields !=nil {_eaga :=_bab .PdfObjectArray {};for _ ,_dcddg :=range *_afgcd .Fields {_dcgcf :=_dcddg .GetContext ();
if _dcgcf !=nil {_eaga .Append (_dcgcf .ToPdfObject ());}else {_eaga .Append (_dcddg .ToPdfObject ());};};_fdcad .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_eaga );};if _afgcd .NeedAppearances !=nil {_fdcad .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_afgcd .NeedAppearances );
};if _afgcd .SigFlags !=nil {_fdcad .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_afgcd .SigFlags );};if _afgcd .CO !=nil {_fdcad .Set ("\u0043\u004f",_afgcd .CO );};if _afgcd .DR !=nil {_fdcad .Set ("\u0044\u0052",_afgcd .DR .ToPdfObject ());
};if _afgcd .DA !=nil {_fdcad .Set ("\u0044\u0041",_afgcd .DA );};if _afgcd .Q !=nil {_fdcad .Set ("\u0051",_afgcd .Q );};if _afgcd .XFA !=nil {_fdcad .Set ("\u0058\u0046\u0041",_afgcd .XFA );};return _eeagc ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bbba *PdfWriter )SetPageLabels (pageLabels _bab .PdfObject )error {if pageLabels ==nil {return nil ;};_cgb .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bbba ._abbdcc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bbba .addObjects (pageLabels );};func (_ffd *PdfReader )newPdfAnnotationMovieFromDict (_cbea *_bab .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ecdea :=PdfAnnotationMovie {};
_ecdea .T =_cbea .Get ("\u0054");_ecdea .Movie =_cbea .Get ("\u004d\u006f\u0076i\u0065");_ecdea .A =_cbea .Get ("\u0041");return &_ecdea ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bab .PdfObject ;Flags _bab .PdfObject ;};var _ pdfFont =(*pdfFontType0 )(nil );func _dacfg (_afdec _bab .PdfObject )(*fontFile ,error ){_cgb .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_afdec );
_cbec :=&fontFile {};_afdec =_bab .TraceToDirectObject (_afdec );_ceggg ,_afbcf :=_afdec .(*_bab .PdfObjectStream );if !_afbcf {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_afdec );
return nil ,_bab .ErrTypeError ;};_fbbdb :=_ceggg .PdfObjectDictionary ;_cdgc ,_fgbgf :=_bab .DecodeStream (_ceggg );if _fgbgf !=nil {return nil ,_fgbgf ;};_gcadd ,_afbcf :=_bab .GetNameVal (_fbbdb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_afbcf {_cbec ._deefe =_gcadd ;
if _gcadd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_cgb .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_dagd ,_ :=_bab .GetIntVal (_fbbdb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_edea ,_ :=_bab .GetIntVal (_fbbdb .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dagd > len (_cdgc ){_dagd =len (_cdgc );
};if _dagd +_edea > len (_cdgc ){_edea =len (_cdgc )-_dagd ;};_cbffe :=_cdgc [:_dagd ];var _ebegg []byte ;if _edea > 0{_ebegg =_cdgc [_dagd :_dagd +_edea ];};if _dagd > 0&&_edea > 0{_fbgb :=_cbec .loadFromSegments (_cbffe ,_ebegg );if _fbgb !=nil {return nil ,_fbgb ;
};};return _cbec ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bfgf *PdfFieldText )ToPdfObject ()_bab .PdfObject {_bfgf .PdfField .ToPdfObject ();_gegg :=_bfgf ._fced ;_dgdcg :=_gegg .PdfObject .(*_bab .PdfObjectDictionary );_dgdcg .Set ("\u0046\u0054",_bab .MakeName ("\u0054\u0078"));if _bfgf .DA !=nil {_dgdcg .Set ("\u0044\u0041",_bfgf .DA );
};if _bfgf .Q !=nil {_dgdcg .Set ("\u0051",_bfgf .Q );};if _bfgf .DS !=nil {_dgdcg .Set ("\u0044\u0053",_bfgf .DS );};if _bfgf .RV !=nil {_dgdcg .Set ("\u0052\u0056",_bfgf .RV );};if _bfgf .MaxLen !=nil {_dgdcg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bfgf .MaxLen );
};return _gegg ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_edbf *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _edbf .Range };

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_bdcdc *PdfPageResources )GetXObjectImageByName (keyName _bab .PdfObjectName )(*XObjectImage ,error ){_dfef ,_eecf :=_bdcdc .GetXObjectByName (keyName );if _dfef ==nil {return nil ,nil ;};if _eecf !=XObjectTypeImage {return nil ,_cg .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_ebeaf ,_abddc :=NewXObjectImageFromStream (_dfef );if _abddc !=nil {return nil ,_abddc ;};return _ebeaf ,nil ;};func (_feaa *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _feaa ._dbcbe };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bab .PdfObject ;Name _bab .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fdff *PdfColorspaceCalRGB )ToPdfObject ()_bab .PdfObject {_cfae :=&_bab .PdfObjectArray {};_cfae .Append (_bab .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fegf :=_bab .MakeDict ();if _fdff .WhitePoint !=nil {_fgc :=_bab .MakeArray (_bab .MakeFloat (_fdff .WhitePoint [0]),_bab .MakeFloat (_fdff .WhitePoint [1]),_bab .MakeFloat (_fdff .WhitePoint [2]));
_fegf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fgc );}else {_cgb .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _fdff .BlackPoint !=nil {_aabeg :=_bab .MakeArray (_bab .MakeFloat (_fdff .BlackPoint [0]),_bab .MakeFloat (_fdff .BlackPoint [1]),_bab .MakeFloat (_fdff .BlackPoint [2]));_fegf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aabeg );
};if _fdff .Gamma !=nil {_efbc :=_bab .MakeArray (_bab .MakeFloat (_fdff .Gamma [0]),_bab .MakeFloat (_fdff .Gamma [1]),_bab .MakeFloat (_fdff .Gamma [2]));_fegf .Set ("\u0047\u0061\u006dm\u0061",_efbc );};if _fdff .Matrix !=nil {_feed :=_bab .MakeArray (_bab .MakeFloat (_fdff .Matrix [0]),_bab .MakeFloat (_fdff .Matrix [1]),_bab .MakeFloat (_fdff .Matrix [2]),_bab .MakeFloat (_fdff .Matrix [3]),_bab .MakeFloat (_fdff .Matrix [4]),_bab .MakeFloat (_fdff .Matrix [5]),_bab .MakeFloat (_fdff .Matrix [6]),_bab .MakeFloat (_fdff .Matrix [7]),_bab .MakeFloat (_fdff .Matrix [8]));
_fegf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_feed );};_cfae .Append (_fegf );if _fdff ._fedc !=nil {_fdff ._fedc .PdfObject =_cfae ;return _fdff ._fedc ;};return _cfae ;};func (_ggccb *PdfWriter )writeBytes (_ddgeg []byte ){if _ggccb ._fadac !=nil {return ;
};_ebfbc ,_cfeeg :=_ggccb ._bgfgg .Write (_ddgeg );_ggccb ._effee +=int64 (_ebfbc );_ggccb ._fadac =_cfeeg ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bab .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fbeb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fbeb .Alternate ==nil {if _fbeb .N ==1{_geac :=NewPdfColorspaceDeviceGray ();return _geac .ColorFromFloats (vals );}else if _fbeb .N ==3{_dced :=NewPdfColorspaceDeviceRGB ();
return _dced .ColorFromFloats (vals );}else if _fbeb .N ==4{_fgca :=NewPdfColorspaceDeviceCMYK ();return _fgca .ColorFromFloats (vals );}else {return nil ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fbeb .Alternate .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_bbgb *PdfAnnotationRichMedia )ToPdfObject ()_bab .PdfObject {_bbgb .PdfAnnotation .ToPdfObject ();_afgc :=_bbgb ._bcc ;_bge :=_afgc .PdfObject .(*_bab .PdfObjectDictionary );_bge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bge .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bbgb .RichMediaSettings );_bge .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bbgb .RichMediaContent );
return _afgc ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bda PdfModel ;Rect _bab .PdfObject ;Contents _bab .PdfObject ;P _bab .PdfObject ;NM _bab .PdfObject ;M _bab .PdfObject ;F _bab .PdfObject ;AP _bab .PdfObject ;AS _bab .PdfObject ;Border _bab .PdfObject ;C _bab .PdfObject ;StructParent _bab .PdfObject ;
OC _bab .PdfObject ;_bcc *_bab .PdfIndirectObject ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_bccgf *PdfWriter )SetDocInfo (info *PdfInfo ){if _bccgf .hasObject (_bccgf ._cgddgb ){delete (_bccgf ._acagcb ,_bccgf ._cgddgb );delete (_bccgf ._cfbgf ,_bccgf ._cgddgb );for _fdbe ,_bcefg :=range _bccgf ._bbceb {if _bcefg ==_bccgf ._cgddgb {copy (_bccgf ._bbceb [_fdbe :],_bccgf ._bbceb [_fdbe +1:]);
_bccgf ._bbceb [len (_bccgf ._bbceb )-1]=nil ;_bccgf ._bbceb =_bccgf ._bbceb [:len (_bccgf ._bbceb )-1];break ;};};};_bcgf :=_bab .PdfIndirectObject {};_bcgf .PdfObject =info .ToPdfObject ();_bccgf ._cgddgb =&_bcgf ;_bccgf .addObject (&_bcgf );};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// SetForms sets the Acroform for a PDF file.
func (_babab *PdfWriter )SetForms (form *PdfAcroForm )error {_babab ._dgagg =form ;return nil };func (_bdge *pdfFontType0 )bytesToCharcodes (_cagba []byte )([]_ea .CharCode ,bool ){if _bdge ._fgcac ==nil {return nil ,false ;};_adfda ,_adcac :=_bdge ._fgcac .BytesToCharcodes (_cagba );
if !_adcac {return nil ,false ;};_dgbaa :=make ([]_ea .CharCode ,len (_adfda ));for _bfdcd ,_ccegf :=range _adfda {_dgbaa [_bfdcd ]=_ea .CharCode (_ccegf );};return _dgbaa ,true ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bab .PdfObjectStream ;OCSP []*_bab .PdfObjectStream ;CRL []*_bab .PdfObjectStream ;TU *_bab .PdfObjectString ;TS *_bab .PdfObjectString ;};

// AllFields returns a flattened list of all fields in the form.
func (_bfbg *PdfAcroForm )AllFields ()[]*PdfField {if _bfbg ==nil {return nil ;};var _fdecb []*PdfField ;if _bfbg .Fields !=nil {for _ ,_fgffb :=range *_bfbg .Fields {_fdecb =append (_fdecb ,_egad (_fgffb )...);};};return _fdecb ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bab .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bab .PdfObject ;A _bab .PdfObject ;SE _bab .PdfObject ;C _bab .PdfObject ;F _bab .PdfObject ;
_cfebff *_bab .PdfIndirectObject ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_eeagf :=PdfColorCalGray (grayVal );return &_eeagf ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gggda FieldFlag )Mask ()uint32 {return uint32 (_gggda )};var (_ggfd =_c .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_dbfc =_c .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_egfgf =_c .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_efced ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_bgcd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_aefd ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// ToPdfObject implements interface PdfModel.
func (_cbfab *PdfAnnotationRedact )ToPdfObject ()_bab .PdfObject {_cbfab .PdfAnnotation .ToPdfObject ();_dbfb :=_cbfab ._bcc ;_fbdd :=_dbfb .PdfObject .(*_bab .PdfObjectDictionary );_cbfab .PdfAnnotationMarkup .appendToPdfDictionary (_fbdd );_fbdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_fbdd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cbfab .QuadPoints );_fbdd .SetIfNotNil ("\u0049\u0043",_cbfab .IC );_fbdd .SetIfNotNil ("\u0052\u004f",_cbfab .RO );_fbdd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_cbfab .OverlayText );
_fbdd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cbfab .Repeat );_fbdd .SetIfNotNil ("\u0044\u0041",_cbfab .DA );_fbdd .SetIfNotNil ("\u0051",_cbfab .Q );return _dbfb ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fc :=NewPdfAnnotation ();_deb :=&PdfAnnotationFreeText {};_deb .PdfAnnotation =_fc ;_deb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fc .SetContext (_deb );return _deb ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_agea interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efbac *PdfShadingType1 )ToPdfObject ()_bab .PdfObject {_efbac .PdfShading .ToPdfObject ();_ffbf ,_fgde :=_efbac .getShadingDict ();if _fgde !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efbac .Domain !=nil {_ffbf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efbac .Domain );};if _efbac .Matrix !=nil {_ffbf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_efbac .Matrix );};if _efbac .Function !=nil {if len (_efbac .Function )==1{_ffbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efbac .Function [0].ToPdfObject ());
}else {_dbgaea :=_bab .MakeArray ();for _ ,_agde :=range _efbac .Function {_dbgaea .Append (_agde .ToPdfObject ());};_ffbf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbgaea );};};return _efbac ._bfgd ;};func (_dgbae *LTV )validateSig (_fgeab *PdfSignature )error {if _fgeab ==nil ||_fgeab .Contents ==nil ||len (_fgeab .Contents .Bytes ())==0{return _d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fgeab );
};return nil ;};func (_faad *PdfReader )newPdfAnnotationSoundFromDict (_bbcg *_bab .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_beb :=PdfAnnotationSound {};_afb ,_fdb :=_faad .newPdfAnnotationMarkupFromDict (_bbcg );if _fdb !=nil {return nil ,_fdb ;
};_beb .PdfAnnotationMarkup =_afb ;_beb .Name =_bbcg .Get ("\u004e\u0061\u006d\u0065");_beb .Sound =_bbcg .Get ("\u0053\u006f\u0075n\u0064");return &_beb ,nil ;};func (_ddeaea *PdfWriter )writeObject (_cdece int ,_faefd _bab .PdfObject ){_cgb .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cdece );
if _cecc ,_fbcfe :=_faefd .(*_bab .PdfIndirectObject );_fbcfe {_ddeaea ._gebaa [_cdece ]=crossReference {Type :1,Offset :_ddeaea ._effee ,Generation :_cecc .GenerationNumber };_adfg :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdece );
if _ceccc ,_afdcg :=_cecc .PdfObject .(*pdfSignDictionary );_afdcg {_ceccc ._cbbgc =_ddeaea ._effee +int64 (len (_adfg ));};if _cecc .PdfObject ==nil {_cgb .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_cecc .PdfObject =_bab .MakeNull ();};_adfg +=_cecc .PdfObject .WriteString ();_adfg +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_ddeaea .writeString (_adfg );return ;};if _dceee ,_edafg :=_faefd .(*_bab .PdfObjectStream );_edafg {_ddeaea ._gebaa [_cdece ]=crossReference {Type :1,Offset :_ddeaea ._effee ,Generation :_dceee .GenerationNumber };
_ggcde :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdece );_ggcde +=_dceee .PdfObjectDictionary .WriteString ();_ggcde +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ddeaea .writeString (_ggcde );_ddeaea .writeBytes (_dceee .Stream );
_ddeaea .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _eadfa ,_dcegf :=_faefd .(*_bab .PdfObjectStreams );_dcegf {_ddeaea ._gebaa [_cdece ]=crossReference {Type :1,Offset :_ddeaea ._effee ,Generation :_eadfa .GenerationNumber };
_cdaec :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdece );var _dfdce []string ;var _effgc string ;var _cdde int64 ;for _gdade ,_adbd :=range _eadfa .Elements (){_aeccfb ,_aeba :=_adbd .(*_bab .PdfIndirectObject );if !_aeba {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cdece ,_adbd );
continue ;};_gcgb :=_aeccfb .PdfObject .WriteString ()+"\u0020";_effgc =_effgc +_gcgb ;_dfdce =append (_dfdce ,_d .Sprintf ("\u0025\u0064\u0020%\u0064",_aeccfb .ObjectNumber ,_cdde ));_ddeaea ._gebaa [int (_aeccfb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cdece ,Index :_gdade };
_cdde =_cdde +int64 (len ([]byte (_gcgb )));};_ddaee :=_bf .Join (_dfdce ,"\u0020")+"\u0020";_bagcd :=_bab .NewFlateEncoder ();_bbfdg :=_bagcd .MakeStreamDict ();_bbfdg .Set (_bab .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bab .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_facge :=int64 (_eadfa .Len ());_bbfdg .Set (_bab .PdfObjectName ("\u004e"),_bab .MakeInteger (_facge ));_cegda :=int64 (len (_ddaee ));_bbfdg .Set (_bab .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bab .MakeInteger (_cegda ));_fdada ,_ :=_bagcd .EncodeBytes ([]byte (_ddaee +_effgc ));
_cbfddb :=int64 (len (_fdada ));_bbfdg .Set (_bab .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bab .MakeInteger (_cbfddb ));_cdaec +=_bbfdg .WriteString ();_cdaec +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ddeaea .writeString (_cdaec );
_ddeaea .writeBytes (_fdada );_ddeaea .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_ddeaea .writeString (_faefd .WriteString ());};func (_bgfb *PdfWriter )copyObject (_gbccb _bab .PdfObject ,_afadde map[_bab .PdfObject ]_bab .PdfObject ,_aeadb map[_bab .PdfObject ]struct{},_cgcfe bool )_bab .PdfObject {_ccdfcc :=!_bgfb ._fbeeg &&_aeadb !=nil ;
if _gaaab ,_fegcf :=_afadde [_gbccb ];_fegcf {if _ccdfcc &&!_cgcfe {delete (_aeadb ,_gbccb );};return _gaaab ;};_ccbeb :=_gbccb ;switch _fedgc :=_gbccb .(type ){case *_bab .PdfObjectArray :_gfbbg :=_bab .MakeArray ();_ccbeb =_gfbbg ;_afadde [_gbccb ]=_ccbeb ;
for _ ,_dadeb :=range _fedgc .Elements (){_gfbbg .Append (_bgfb .copyObject (_dadeb ,_afadde ,_aeadb ,_cgcfe ));};case *_bab .PdfObjectStreams :_bbegd :=&_bab .PdfObjectStreams {PdfObjectReference :_fedgc .PdfObjectReference };_ccbeb =_bbegd ;_afadde [_gbccb ]=_ccbeb ;
for _ ,_ceceb :=range _fedgc .Elements (){_bbegd .Append (_bgfb .copyObject (_ceceb ,_afadde ,_aeadb ,_cgcfe ));};case *_bab .PdfObjectStream :_bdfd :=&_bab .PdfObjectStream {Stream :_fedgc .Stream ,PdfObjectReference :_fedgc .PdfObjectReference };_ccbeb =_bdfd ;
_afadde [_gbccb ]=_ccbeb ;_bdfd .PdfObjectDictionary =_bgfb .copyObject (_fedgc .PdfObjectDictionary ,_afadde ,_aeadb ,_cgcfe ).(*_bab .PdfObjectDictionary );case *_bab .PdfObjectDictionary :var _ggac bool ;if _ccdfcc &&!_cgcfe {if _dbfgd ,_ :=_bab .GetNameVal (_fedgc .Get ("\u0054\u0079\u0070\u0065"));
_dbfgd =="\u0050\u0061\u0067\u0065"{_ ,_dgdbc :=_bgfb ._begec [_fedgc ];_cgcfe =!_dgdbc ;_ggac =_cgcfe ;};};_gfgda :=_bab .MakeDict ();_ccbeb =_gfgda ;_afadde [_gbccb ]=_ccbeb ;for _ ,_gdege :=range _fedgc .Keys (){_gfgda .Set (_gdege ,_bgfb .copyObject (_fedgc .Get (_gdege ),_afadde ,_aeadb ,_cgcfe ));
};if _ggac {_ccbeb =_bab .MakeNull ();_cgcfe =false ;};case *_bab .PdfIndirectObject :_acda :=&_bab .PdfIndirectObject {PdfObjectReference :_fedgc .PdfObjectReference };_ccbeb =_acda ;_afadde [_gbccb ]=_ccbeb ;_acda .PdfObject =_bgfb .copyObject (_fedgc .PdfObject ,_afadde ,_aeadb ,_cgcfe );
case *_bab .PdfObjectString :_fbbfa :=*_fedgc ;_ccbeb =&_fbbfa ;_afadde [_gbccb ]=_ccbeb ;case *_bab .PdfObjectName :_ecbec :=*_fedgc ;_ccbeb =&_ecbec ;_afadde [_gbccb ]=_ccbeb ;case *_bab .PdfObjectNull :_ccbeb =_bab .MakeNull ();_afadde [_gbccb ]=_ccbeb ;
case *_bab .PdfObjectInteger :_bddbf :=*_fedgc ;_ccbeb =&_bddbf ;_afadde [_gbccb ]=_ccbeb ;case *_bab .PdfObjectReference :_bbefe :=*_fedgc ;_ccbeb =&_bbefe ;_afadde [_gbccb ]=_ccbeb ;case *_bab .PdfObjectFloat :_effbgb :=*_fedgc ;_ccbeb =&_effbgb ;_afadde [_gbccb ]=_ccbeb ;
case *_bab .PdfObjectBool :_dggf :=*_fedgc ;_ccbeb =&_dggf ;_afadde [_gbccb ]=_ccbeb ;case *pdfSignDictionary :_fbbgg :=&pdfSignDictionary {PdfObjectDictionary :_bab .MakeDict (),_agdf :_fedgc ._agdf ,_efccbe :_fedgc ._efccbe };_ccbeb =_fbbgg ;_afadde [_gbccb ]=_ccbeb ;
for _ ,_facfb :=range _fedgc .Keys (){_fbbgg .Set (_facfb ,_bgfb .copyObject (_fedgc .Get (_facfb ),_afadde ,_aeadb ,_cgcfe ));};default:_cgb .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gbccb );
};if _ccdfcc &&_cgcfe {_aeadb [_gbccb ]=struct{}{};};return _ccbeb ;};

// Y returns the value of the yellow component of the color.
func (_dddc *PdfColorDeviceCMYK )Y ()float64 {return _dddc [2]};func (_dgbg *PdfReader )newPdfAnnotationProjectionFromDict (_gdaf *_bab .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fce :=&PdfAnnotationProjection {};_eafg ,_ddbg :=_dgbg .newPdfAnnotationMarkupFromDict (_gdaf );
if _ddbg !=nil {return nil ,_ddbg ;};_fce .PdfAnnotationMarkup =_eafg ;return _fce ,nil ;};func (_bcbc *PdfReader )buildPageList (_degbd *_bab .PdfIndirectObject ,_efga *_bab .PdfIndirectObject ,_edcbg map[_bab .PdfObject ]struct{})error {if _degbd ==nil {return nil ;
};if _ ,_ebggf :=_edcbg [_degbd ];_ebggf {_cgb .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_degbd .ObjectNumber );
return nil ;};_edcbg [_degbd ]=struct{}{};_cbdef ,_ccdda :=_degbd .PdfObject .(*_bab .PdfObjectDictionary );if !_ccdda {return _cg .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_fdgga ,_ccdda :=(*_cbdef ).Get ("\u0054\u0079\u0070\u0065").(*_bab .PdfObjectName );
if !_ccdda {if _cbdef .Get ("\u004b\u0069\u0064\u0073")==nil {return _cg .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_cgb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_fdgga =_bab .MakeName ("\u0050\u0061\u0067e\u0073");_cbdef .Set ("\u0054\u0079\u0070\u0065",_fdgga );};_cgb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_fdgga ,_degbd );
if *_fdgga =="\u0050\u0061\u0067\u0065"{_cabad ,_aeaeb :=_bcbc .newPdfPageFromDict (_cbdef );if _aeaeb !=nil {return _aeaeb ;};_cabad .setContainer (_degbd );if _efga !=nil {_cbdef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efga );};_bcbc ._aedab =append (_bcbc ._aedab ,_degbd );
_bcbc .PageList =append (_bcbc .PageList ,_cabad );return nil ;};if *_fdgga !="\u0050\u0061\u0067e\u0073"{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_fdgga );
return _cg .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _efga !=nil {_cbdef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efga );};if !_bcbc ._geegb {_dccec :=_bcbc .traverseObjectData (_degbd );if _dccec !=nil {return _dccec ;};};_eegfg ,_caae :=_bcbc ._fdcebg .Resolve (_cbdef .Get ("\u004b\u0069\u0064\u0073"));
if _caae !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _caae ;};var _deaga *_bab .PdfObjectArray ;
_deaga ,_ccdda =_eegfg .(*_bab .PdfObjectArray );if !_ccdda {_edcd ,_cefcg :=_eegfg .(*_bab .PdfIndirectObject );if !_cefcg {return _cg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_deaga ,_ccdda =_edcd .PdfObject .(*_bab .PdfObjectArray );if !_ccdda {return _cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_cgb .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_deaga );
for _ffbac ,_fdbf :=range _deaga .Elements (){_cbaeb ,_abcgb :=_bab .GetIndirect (_fdbf );if !_abcgb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cbaeb );
return _cg .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_deaga .Set (_ffbac ,_cbaeb );_caae =_bcbc .buildPageList (_cbaeb ,_degbd ,_edcbg );if _caae !=nil {return _caae ;
};};return nil ;};

// ToInteger convert to an integer format.
func (_abebd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_dfacf :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_dfacf *_abebd .Val ());};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_cgcac *PdfPageResources )AddExtGState (gsName _bab .PdfObjectName ,gsDict _bab .PdfObject )error {if _cgcac .ExtGState ==nil {_cgcac .ExtGState =_bab .MakeDict ();};_aebccd :=_cgcac .ExtGState ;_egfbf ,_ffeab :=_bab .TraceToDirectObject (_aebccd ).(*_bab .PdfObjectDictionary );
if !_ffeab {_cgb .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_aebccd ,_bab .TraceToDirectObject (_aebccd ));
return _bab .ErrTypeError ;};_egfbf .Set (gsName ,gsDict );return nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cfc :=NewPdfAction ();_gdb :=&PdfActionThread {};_gdb .PdfAction =_cfc ;_cfc .SetContext (_gdb );return _gdb ;};

// ToPdfObject implements interface PdfModel.
func (_dcba *PdfActionThread )ToPdfObject ()_bab .PdfObject {_dcba .PdfAction .ToPdfObject ();_aaab :=_dcba ._ec ;_cda :=_aaab .PdfObject .(*_bab .PdfObjectDictionary );_cda .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeThread )));if _dcba .F !=nil {_cda .Set ("\u0046",_dcba .F .ToPdfObject ());
};_cda .SetIfNotNil ("\u0044",_dcba .D );_cda .SetIfNotNil ("\u0042",_dcba .B );return _aaab ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dcg :=NewPdfAction ();_dg :=&PdfActionGoToE {};_dg .PdfAction =_dcg ;_dcg .SetContext (_dg );return _dg ;};

// ToPdfObject returns the PDF representation of the function.
func (_defee *PdfFunctionType4 )ToPdfObject ()_bab .PdfObject {_daed :=_defee ._cdce ;if _daed ==nil {_defee ._cdce =&_bab .PdfObjectStream {};_daed =_defee ._cdce ;};_bfddd :=_bab .MakeDict ();_bfddd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bab .MakeInteger (4));
_bggf :=&_bab .PdfObjectArray {};for _ ,_bggdg :=range _defee .Domain {_bggf .Append (_bab .MakeFloat (_bggdg ));};_bfddd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bggf );_aecgb :=&_bab .PdfObjectArray {};for _ ,_fcafa :=range _defee .Range {_aecgb .Append (_bab .MakeFloat (_fcafa ));
};_bfddd .Set ("\u0052\u0061\u006eg\u0065",_aecgb );if _defee ._cade ==nil &&_defee .Program !=nil {_defee ._cade =[]byte (_defee .Program .String ());};_bfddd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_defee ._cade ))));
_daed .Stream =_defee ._cade ;_daed .PdfObjectDictionary =_bfddd ;return _daed ;};func _bfce ()string {_fcccb .Lock ();defer _fcccb .Unlock ();return _bfddg };func (_dacf *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_dgdd *PdfAnnotation )ToPdfObject ()_bab .PdfObject {_edb :=_dgdd ._bcc ;_bgcb :=_edb .PdfObject .(*_bab .PdfObjectDictionary );_bgcb .Clear ();_bgcb .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0041\u006e\u006eo\u0074"));_bgcb .SetIfNotNil ("\u0052\u0065\u0063\u0074",_dgdd .Rect );
_bgcb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dgdd .Contents );_bgcb .SetIfNotNil ("\u0050",_dgdd .P );_bgcb .SetIfNotNil ("\u004e\u004d",_dgdd .NM );_bgcb .SetIfNotNil ("\u004d",_dgdd .M );_bgcb .SetIfNotNil ("\u0046",_dgdd .F );
_bgcb .SetIfNotNil ("\u0041\u0050",_dgdd .AP );_bgcb .SetIfNotNil ("\u0041\u0053",_dgdd .AS );_bgcb .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_dgdd .Border );_bgcb .SetIfNotNil ("\u0043",_dgdd .C );_bgcb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dgdd .StructParent );
_bgcb .SetIfNotNil ("\u004f\u0043",_dgdd .OC );return _edb ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bcbf .Permissions ;Algorithm EncryptionAlgorithm ;};

// SetOCProperties sets the optional content properties.
func (_gefd *PdfWriter )SetOCProperties (ocProperties _bab .PdfObject )error {_ecfgf :=_gefd ._abbdcc ;if ocProperties !=nil {_cgb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ecfgf .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gefd .addObjects (ocProperties );};return nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_dbgad *Image )AlphaMap (mapFunc AlphaMapFunc ){for _dbfdg ,_cdedf :=range _dbgad ._fffdd {_dbgad ._fffdd [_dbfdg ]=mapFunc (_cdedf );};};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_afge FieldFlag )Has (fl FieldFlag )bool {return (_afge .Mask ()&fl .Mask ())> 0};func _acebg (_cdefb _bab .PdfObject )(*_bab .PdfObjectDictionary ,*fontCommon ,error ){_fgeg :=&fontCommon {};if _cfdg ,_deaea :=_cdefb .(*_bab .PdfIndirectObject );
_deaea {_fgeg ._bega =_cfdg .ObjectNumber ;};_edcc ,_caef :=_bab .GetDict (_cdefb );if !_caef {_cgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cdefb );
return nil ,nil ,ErrFontNotSupported ;};_fgacc ,_caef :=_bab .GetNameVal (_edcc .Get ("\u0054\u0079\u0070\u0065"));if !_caef {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fgacc !="\u0046\u006f\u006e\u0074"{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fgacc ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bab .ErrTypeError ;};_gaca ,_caef :=_bab .GetNameVal (_edcc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_caef {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fgeg ._egbf =_gaca ;_bbdgg ,_caef :=_bab .GetNameVal (_edcc .Get ("\u004e\u0061\u006d\u0065"));if _caef {_fgeg ._ccfcg =_bbdgg ;};_edbaf :=_edcc .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _edbaf !=nil {_fgeg ._debg =_bab .TraceToDirectObject (_edbaf );
_bgffe ,_gdgf :=_dbfge (_fgeg ._debg ,_fgeg );if _gdgf !=nil {return _edcc ,_fgeg ,_gdgf ;};_fgeg ._cfdd =_bgffe ;}else if _gaca =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gaca =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fbag ,_dgba :=_fd .NewCIDSystemInfo (_edcc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _dgba !=nil {return _edcc ,_fgeg ,_dgba ;};_ddfdf :=_d .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fbag .Registry ,_fbag .Ordering );if _fd .IsPredefinedCMap (_ddfdf ){_fgeg ._cfdd ,_dgba =_fd .LoadPredefinedCMap (_ddfdf );
if _dgba !=nil {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ddfdf ,_dgba );
};};};_fbbb :=_edcc .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _fbbb !=nil {_fdcc ,_cagb :=_ecee (_fbbb );if _cagb !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cagb );
return _edcc ,_fgeg ,_cagb ;};_fgeg ._dbcbe =_fdcc ;};if _gaca !="\u0054\u0079\u0070e\u0033"{_gffg ,_dcaf :=_bab .GetNameVal (_edcc .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dcaf {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _edcc ,_fgeg ,ErrRequiredAttributeMissing ;};_fgeg ._cefg =_gffg ;};return _edcc ,_fgeg ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_gfgge int64 ;_ceda int64 ;_gbfea int64 ;_cbcea int64 ;_ccedb int64 ;_bdgfc int64 ;_fcbfd byte ;_cecf int64 ;_fead int64 ;};func (_beea *PdfReader )newPdfAnnotationStampFromDict (_dfac *_bab .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_ccac :=PdfAnnotationStamp {};
_eadf ,_fed :=_beea .newPdfAnnotationMarkupFromDict (_dfac );if _fed !=nil {return nil ,_fed ;};_ccac .PdfAnnotationMarkup =_eadf ;_ccac .Name =_dfac .Get ("\u004e\u0061\u006d\u0065");return &_ccac ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ColorToRGB converts a Lab color to an RGB color.
func (_gaag *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdee :=func (_ffge float64 )float64 {if _ffge >=6.0/29{return _ffge *_ffge *_ffge ;};return 108.0/841*(_ffge -4/29);};_gffe ,_adbc :=color .(*PdfColorLab );if !_adbc {_cgb .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gffe .L ();AStar :=_gffe .A ();BStar :=_gffe .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_gaag .WhitePoint [0]*_cdee (L );Y :=_gaag .WhitePoint [1]*_cdee (M );Z :=_gaag .WhitePoint [2]*_cdee (N );_dede :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ggcd :=-0.969256*X +1.875992*Y +0.041556*Z ;_bbfbc :=0.055648*X +-0.204043*Y +1.057311*Z ;_dede =_ab .Min (_ab .Max (_dede ,0),1.0);
_ggcd =_ab .Min (_ab .Max (_ggcd ,0),1.0);_bbfbc =_ab .Min (_ab .Max (_bbfbc ,0),1.0);return NewPdfColorDeviceRGB (_dede ,_ggcd ,_bbfbc ),nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fdfg pdfCIDFontType0 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){return _cb .CharMetrics {Wx :_fdfg ._agacd },true ;};func (_cgea *PdfReader )newPdfAnnotationTrapNetFromDict (_cdfe *_bab .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_cdb :=PdfAnnotationTrapNet {};
return &_cdb ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cefc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cefc .UnderlyingCS ==nil {return nil ,_cg .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _cefc .UnderlyingCS .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_aad *PdfActionSetOCGState )ToPdfObject ()_bab .PdfObject {_aad .PdfAction .ToPdfObject ();_gcg :=_aad ._ec ;_ede :=_gcg .PdfObject .(*_bab .PdfObjectDictionary );_ede .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeSetOCGState )));_ede .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_aad .State );
_ede .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_aad .PreserveRB );return _gcg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eega *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfgg :=vals [0];if _cfgg < 0.0||_cfgg > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eggd :=NewPdfColorCalGray (_cfgg );return _eggd ,nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bfdg *PdfPageResources )GetXObjectByName (keyName _bab .PdfObjectName )(*_bab .PdfObjectStream ,XObjectType ){if _bfdg .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cbedg ,_eaefb :=_bab .TraceToDirectObject (_bfdg .XObject ).(*_bab .PdfObjectDictionary );
if !_eaefb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bab .TraceToDirectObject (_bfdg .XObject ));
return nil ,XObjectTypeUndefined ;};if _gcfdd :=_cbedg .Get (keyName );_gcfdd !=nil {_cgebe ,_aaba :=_bab .GetStream (_gcfdd );if !_aaba {_cgb .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_gcfdd );
return nil ,XObjectTypeUndefined ;};_affcd :=_cgebe .PdfObjectDictionary ;_gbaeg ,_aaba :=_bab .TraceToDirectObject (_affcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bab .PdfObjectName );if !_aaba {_cgb .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_affcd .String ());
return nil ,XObjectTypeUndefined ;};if *_gbaeg =="\u0049\u006d\u0061g\u0065"{return _cgebe ,XObjectTypeImage ;}else if *_gbaeg =="\u0046\u006f\u0072\u006d"{return _cgebe ,XObjectTypeForm ;}else if *_gbaeg =="\u0050\u0053"{return _cgebe ,XObjectTypePS ;
}else {_cgb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_gbaeg );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};func _bdfe (_edge _bab .PdfObject )(*PdfColorspaceLab ,error ){_fdbb :=NewPdfColorspaceLab ();if _acaa ,_ggbg :=_edge .(*_bab .PdfIndirectObject );_ggbg {_fdbb ._ebbe =_acaa ;};_edge =_bab .TraceToDirectObject (_edge );_ddbd ,_bcdbe :=_edge .(*_bab .PdfObjectArray );
if !_bcdbe {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddbd .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_edge =_bab .TraceToDirectObject (_ddbd .Get (0));_dbcb ,_bcdbe :=_edge .(*_bab .PdfObjectName );if !_bcdbe {return nil ,_d .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_dbcb !="\u004c\u0061\u0062"{return nil ,_d .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_edge =_bab .TraceToDirectObject (_ddbd .Get (1));_ebbd ,_bcdbe :=_edge .(*_bab .PdfObjectDictionary );
if !_bcdbe {return nil ,_d .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_edge =_ebbd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_edge =_bab .TraceToDirectObject (_edge );_gcbb ,_bcdbe :=_edge .(*_bab .PdfObjectArray );if !_bcdbe {return nil ,_d .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _gcbb .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_cec ,_agbdb :=_gcbb .GetAsFloat64Slice ();
if _agbdb !=nil {return nil ,_agbdb ;};_fdbb .WhitePoint =_cec ;_edge =_ebbd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _edge !=nil {_edge =_bab .TraceToDirectObject (_edge );_cgdae ,_cgbaa :=_edge .(*_bab .PdfObjectArray );
if !_cgbaa {return nil ,_d .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cgdae .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_aafa ,_abdd :=_cgdae .GetAsFloat64Slice ();if _abdd !=nil {return nil ,_abdd ;};_fdbb .BlackPoint =_aafa ;};_edge =_ebbd .Get ("\u0052\u0061\u006eg\u0065");if _edge !=nil {_edge =_bab .TraceToDirectObject (_edge );_efggb ,_ggcc :=_edge .(*_bab .PdfObjectArray );
if !_ggcc {_cgb .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efggb .Len ()!=4{_cgb .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_afce ,_efca :=_efggb .GetAsFloat64Slice ();if _efca !=nil {return nil ,_efca ;};_fdbb .Range =_afce ;};return _fdbb ,nil ;};func (_bbf *PdfReader )newPdfActionSoundFromDict (_face *_bab .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_face .Get ("\u0053\u006f\u0075n\u0064"),Volume :_face .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_face .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_face .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_face .Get ("\u004d\u0069\u0078")},nil ;
};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dfae *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_eebd :=_ee .NewReader (img .getBase ());_ggbce :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._fffdd ,img ._dgbgc );
_caaa :=_ee .NewWriter (_ggbce );_ceca :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_cebd :=_dfae .GetNumComponents ();_gace :=make ([]uint32 ,_cebd );_efdc :=make ([]float64 ,_cebd );for {_eadd :=_eebd .ReadSamples (_gace );if _eadd ==_ad .EOF {break ;
}else if _eadd !=nil {return img ,_eadd ;};for _agfbc :=0;_agfbc < _cebd ;_agfbc ++{_bdce :=float64 (_gace [_agfbc ])/_ceca ;_efdc [_agfbc ]=_bdce ;};_acaaa ,_eadd :=_dfae .TintTransform .Evaluate (_efdc );if _eadd !=nil {return img ,_eadd ;};for _ ,_cea :=range _acaaa {_cea =_ab .Min (_ab .Max (0,_cea ),1.0);
if _eadd =_caaa .WriteSample (uint32 (_cea *_ceca ));_eadd !=nil {return img ,_eadd ;};};};return _dfae .AlternateSpace .ImageToRGB (_bdaad (&_ggbce ));};var ImageHandling ImageHandler =DefaultImageHandler {};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_adadb *PdfPattern )GetContext ()PdfModel {return _adadb ._gaaea };func _ddga (_cfaed _bab .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_dcge :=NewPdfColorspaceSpecialSeparation ();if _eabc ,_edefb :=_cfaed .(*_bab .PdfIndirectObject );_edefb {_dcge ._ffga =_eabc ;
};_cfaed =_bab .TraceToDirectObject (_cfaed );_fccd ,_fdbc :=_cfaed .(*_bab .PdfObjectArray );if !_fdbc {return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _fccd .Len ()!=4{return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_cfaed =_fccd .Get (0);
_cgbc ,_fdbc :=_cfaed .(*_bab .PdfObjectName );if !_fdbc {return nil ,_d .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cgbc !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_d .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_cfaed =_fccd .Get (1);_cgbc ,_fdbc =_cfaed .(*_bab .PdfObjectName );if !_fdbc {return nil ,_d .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_dcge .ColorantName =_cgbc ;_cfaed =_fccd .Get (2);_bcae ,_cafb :=NewPdfColorspaceFromPdfObject (_cfaed );if _cafb !=nil {return nil ,_cafb ;};_dcge .AlternateSpace =_bcae ;_efec ,_cafb :=_cdegf (_fccd .Get (3));if _cafb !=nil {return nil ,_cafb ;};_dcge .TintTransform =_efec ;
return _dcge ,nil ;};func _becf (_aeaa *PdfPage )map[_bab .PdfObjectName ]_bab .PdfObject {_bfdb :=make (map[_bab .PdfObjectName ]_bab .PdfObject );if _aeaa .Resources ==nil {return _bfdb ;};if _aeaa .Resources .Font !=nil {if _degc ,_facef :=_bab .GetDict (_aeaa .Resources .Font );
_facef {for _ ,_fggg :=range _degc .Keys (){_bfdb [_fggg ]=_degc .Get (_fggg );};};};if _aeaa .Resources .ExtGState !=nil {if _afgag ,_gddg :=_bab .GetDict (_aeaa .Resources .ExtGState );_gddg {for _ ,_edce :=range _afgag .Keys (){_bfdb [_edce ]=_afgag .Get (_edce );
};};};if _aeaa .Resources .XObject !=nil {if _ggbb ,_cegf :=_bab .GetDict (_aeaa .Resources .XObject );_cegf {for _ ,_ccdac :=range _ggbb .Keys (){_bfdb [_ccdac ]=_ggbb .Get (_ccdac );};};};if _aeaa .Resources .Pattern !=nil {if _cgdg ,_dbce :=_bab .GetDict (_aeaa .Resources .Pattern );
_dbce {for _ ,_egfg :=range _cgdg .Keys (){_bfdb [_egfg ]=_cgdg .Get (_egfg );};};};if _aeaa .Resources .Shading !=nil {if _beda ,_aag :=_bab .GetDict (_aeaa .Resources .Shading );_aag {for _ ,_fccg :=range _beda .Keys (){_bfdb [_fccg ]=_beda .Get (_fccg );
};};};if _aeaa .Resources .ProcSet !=nil {if _fcce ,_gdee :=_bab .GetDict (_aeaa .Resources .ProcSet );_gdee {for _ ,_gfabb :=range _fcce .Keys (){_bfdb [_gfabb ]=_fcce .Get (_gfabb );};};};if _aeaa .Resources .Properties !=nil {if _gddgb ,_dbba :=_bab .GetDict (_aeaa .Resources .Properties );
_dbba {for _ ,_dfba :=range _gddgb .Keys (){_bfdb [_dfba ]=_gddgb .Get (_dfba );};};};return _bfdb ;};func _dcfc (_beag *_bab .PdfObjectDictionary )(*PdfFieldText ,error ){_afaa :=&PdfFieldText {};_afaa .DA ,_ =_bab .GetString (_beag .Get ("\u0044\u0041"));
_afaa .Q ,_ =_bab .GetInt (_beag .Get ("\u0051"));_afaa .DS ,_ =_bab .GetString (_beag .Get ("\u0044\u0053"));_afaa .RV =_beag .Get ("\u0052\u0056");_afaa .MaxLen ,_ =_bab .GetInt (_beag .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _afaa ,nil ;
};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_fgfe *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bbcd ,_ ,_degf :=_fgfe .CharcodesToUnicodeWithStats (_fgfe .BytesToCharcodes (data ));_cgagd :=_ea .ExpandLigatures (_bbcd );return _cgagd ,_be .RuneCountInString (_cgagd ),_degf ;
};func (_efcc *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_fcccb .Lock ();defer _fcccb .Unlock ();_ebdfe =subject };

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fafbc *LTV )Enable (sig *PdfSignature ,extraCerts []*_ef .Certificate )error {if _bdedd :=_fafbc .validateSig (sig );_bdedd !=nil {return _bdedd ;};_cfgdd ,_bcec :=_fafbc .generateVRIKey (sig );if _bcec !=nil {return _bcec ;};if _ ,_fgege :=_fafbc ._gcac .VRI [_cfgdd ];
_fgege &&_fafbc .SkipExisting {return nil ;};_fabaf ,_bcec :=sig .GetCerts ();if _bcec !=nil {return _bcec ;};return _fafbc .enable (_fabaf ,extraCerts ,_cfgdd );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_fabd *PdfOutlineItem )GetContainingPdfObject ()_bab .PdfObject {return _fabd ._cfebff };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbbfec *PdfShadingType2 )ToPdfObject ()_bab .PdfObject {_gbbfec .PdfShading .ToPdfObject ();_fabf ,_dcgag :=_gbbfec .getShadingDict ();if _dcgag !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fabf ==nil {_cgb .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gbbfec .Coords !=nil {_fabf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gbbfec .Coords );
};if _gbbfec .Domain !=nil {_fabf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbbfec .Domain );};if _gbbfec .Function !=nil {if len (_gbbfec .Function )==1{_fabf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbbfec .Function [0].ToPdfObject ());
}else {_cbggd :=_bab .MakeArray ();for _ ,_bgeeg :=range _gbbfec .Function {_cbggd .Append (_bgeeg .ToPdfObject ());};_fabf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbggd );};};if _gbbfec .Extend !=nil {_fabf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gbbfec .Extend );
};return _gbbfec ._bfgd ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_afdee *PdfField )IsTerminal ()bool {return len (_afdee .Kids )==0};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bab .PdfObjectString ;Q *_bab .PdfObjectInteger ;DS *_bab .PdfObjectString ;RV _bab .PdfObject ;MaxLen *_bab .PdfObjectInteger ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ccad *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafg ,_adbe :=_bab .GetNumbersAsFloat (objects );
if _adbe !=nil {return nil ,_adbe ;};return _ccad .ColorFromFloats (_cafg );};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_ebgf *PdfAppender )UpdatePage (page *PdfPage ){_ebgf .updateObjectsDeep (page .ToPdfObject (),nil )};

// GetCerts returns the signature certificate chain.
func (_dbgfa *PdfSignature )GetCerts ()([]*_ef .Certificate ,error ){var _bgdca []func ()([]*_ef .Certificate ,error );switch _dfcg ,_ :=_bab .GetNameVal (_dbgfa .SubFilter );_dfcg {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_bgdca =append (_bgdca ,_dbgfa .extractChainFromPKCS7 ,_dbgfa .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_bgdca =append (_bgdca ,_dbgfa .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_bgdca =append (_bgdca ,_dbgfa .extractChainFromPKCS7 );
default:return nil ,_d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_dfcg );};for _ ,_cccgc :=range _bgdca {_fdbfg ,_bedff :=_cccgc ();if _bedff !=nil {return nil ,_bedff ;
};if len (_fdbfg )> 0{return _fdbfg ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_bddg *PdfInfo )ToPdfObject ()_bab .PdfObject {_eegg :=_bab .MakeDict ();_eegg .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_bddg .Title );_eegg .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_bddg .Author );_eegg .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_bddg .Subject );
_eegg .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bddg .Keywords );_eegg .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_bddg .Creator );_eegg .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bddg .Producer );
_eegg .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_bddg .Trapped );if _bddg .CreationDate !=nil {_eegg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bddg .CreationDate .ToPdfObject ());};if _bddg .ModifiedDate !=nil {_eegg .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_bddg .ModifiedDate .ToPdfObject ());
};for _ ,_aefg :=range _bddg ._bgef .Keys (){_eegg .SetIfNotNil (_aefg ,_bddg ._bgef .Get (_aefg ));};return _eegg ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_cfcc *Image )Resample (targetBitsPerComponent int64 ){if _cfcc .BitsPerComponent ==targetBitsPerComponent {return ;};_cggb :=_cfcc .GetSamples ();if targetBitsPerComponent < _cfcc .BitsPerComponent {_efdgg :=_cfcc .BitsPerComponent -targetBitsPerComponent ;
for _baafb :=range _cggb {_cggb [_baafb ]>>=uint (_efdgg );};}else if targetBitsPerComponent > _cfcc .BitsPerComponent {_cdga :=targetBitsPerComponent -_cfcc .BitsPerComponent ;for _ddgaf :=range _cggb {_cggb [_ddgaf ]<<=uint (_cdga );};};_cfcc .BitsPerComponent =targetBitsPerComponent ;
if _cfcc .BitsPerComponent < 8{_cfcc .resampleLowBits (_cggb );return ;};_accfb :=_ca .BytesPerLine (int (_cfcc .Width ),int (_cfcc .BitsPerComponent ),_cfcc .ColorComponents );_gegd :=make ([]byte ,_accfb *int (_cfcc .Height ));var (_cbagb ,_ecggf ,_cfag ,_geafg int ;
_cdbbca uint32 ;);for _cfag =0;_cfag < int (_cfcc .Height );_cfag ++{_cbagb =_cfag *_accfb ;_ecggf =(_cfag +1)*_accfb -1;_adcaf :=_ee .ResampleUint32 (_cggb [_cbagb :_ecggf ],int (targetBitsPerComponent ),8);for _geafg ,_cdbbca =range _adcaf {_gegd [_geafg +_cbagb ]=byte (_cdbbca );
};};_cfcc .Data =_gegd ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_cdfc *PdfColorspaceICCBased )ToPdfObject ()_bab .PdfObject {_afda :=&_bab .PdfObjectArray {};_afda .Append (_bab .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ebgg *_bab .PdfObjectStream ;if _cdfc ._eafde !=nil {_ebgg =_cdfc ._eafde ;
}else {_ebgg =&_bab .PdfObjectStream {};};_febb :=_bab .MakeDict ();_febb .Set ("\u004e",_bab .MakeInteger (int64 (_cdfc .N )));if _cdfc .Alternate !=nil {_febb .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_cdfc .Alternate .ToPdfObject ());};if _cdfc .Metadata !=nil {_febb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cdfc .Metadata );
};if _cdfc .Range !=nil {var _fefg []_bab .PdfObject ;for _ ,_gaaa :=range _cdfc .Range {_fefg =append (_fefg ,_bab .MakeFloat (_gaaa ));};_febb .Set ("\u0052\u0061\u006eg\u0065",_bab .MakeArray (_fefg ...));};_febb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_cdfc .Data ))));
_ebgg .Stream =_cdfc .Data ;_ebgg .PdfObjectDictionary =_febb ;_afda .Append (_ebgg );if _cdfc ._adbf !=nil {_cdfc ._adbf .PdfObject =_afda ;return _cdfc ._adbf ;};return _afda ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gdgb *PdfPageResources )HasXObjectByName (keyName _bab .PdfObjectName )bool {_acbac ,_ :=_gdgb .GetXObjectByName (keyName );return _acbac !=nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_cafdd *PdfAppender )UpdateObject (obj _bab .PdfObject ){_cafdd .replaceObject (obj ,obj );if _ ,_eadfc :=_cafdd ._gegb [obj ];!_eadfc {_cafdd ._dfea =append (_cafdd ._dfea ,obj );_cafdd ._gegb [obj ]=struct{}{};};};func (_fbgd *PdfReader )newPdfFieldSignatureFromDict (_ebce *_bab .PdfObjectDictionary )(*PdfFieldSignature ,error ){_baff :=&PdfFieldSignature {};
_cegc ,_bcbg :=_bab .GetIndirect (_ebce .Get ("\u0056"));if _bcbg {var _fddg error ;_baff .V ,_fddg =_fbgd .newPdfSignatureFromIndirect (_cegc );if _fddg !=nil {return nil ,_fddg ;};};_baff .Lock ,_ =_bab .GetIndirect (_ebce .Get ("\u004c\u006f\u0063\u006b"));
_baff .SV ,_ =_bab .GetIndirect (_ebce .Get ("\u0053\u0056"));return _baff ,nil ;};

// IsCID returns true if the underlying font is CID.
func (_gfgd *PdfFont )IsCID ()bool {return _gfgd .baseFields ().isCIDFont ()};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cdgg *_bab .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bab .PdfObjectName ;Filter *_bab .PdfObjectName ;SubFilter *_bab .PdfObjectName ;Contents *_bab .PdfObjectString ;Cert _bab .PdfObject ;ByteRange *_bab .PdfObjectArray ;Reference *_bab .PdfObjectArray ;Changes *_bab .PdfObjectArray ;Name *_bab .PdfObjectString ;
M *_bab .PdfObjectString ;Location *_bab .PdfObjectString ;Reason *_bab .PdfObjectString ;ContactInfo *_bab .PdfObjectString ;R *_bab .PdfObjectInteger ;V *_bab .PdfObjectInteger ;PropBuild *_bab .PdfObjectDictionary ;PropAuthTime *_bab .PdfObjectInteger ;
PropAuthType *_bab .PdfObjectName ;};

// Encoder returns the font's text encoder.
func (_eebdf pdfFontType3 )Encoder ()_ea .TextEncoder {return _eebdf ._cdfa };

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bab .PdfObjectArray )(*PdfRectangle ,error ){_affcb :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _dfefg error ;_affcb .Llx ,_dfefg =_bab .GetNumberAsFloat (arr .Get (0));if _dfefg !=nil {return nil ,_dfefg ;};_affcb .Lly ,_dfefg =_bab .GetNumberAsFloat (arr .Get (1));if _dfefg !=nil {return nil ,_dfefg ;};_affcb .Urx ,_dfefg =_bab .GetNumberAsFloat (arr .Get (2));
if _dfefg !=nil {return nil ,_dfefg ;};_affcb .Ury ,_dfefg =_bab .GetNumberAsFloat (arr .Get (3));if _dfefg !=nil {return nil ,_dfefg ;};return &_affcb ,nil ;};func _gfbgd (_gdcbcc *_bab .PdfObjectDictionary )(*PdfShadingType3 ,error ){_egacf :=PdfShadingType3 {};
_acefdc :=_gdcbcc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _acefdc ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ebbce ,_gccgg :=_acefdc .(*_bab .PdfObjectArray );if !_gccgg {_cgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_acefdc );
return nil ,_bab .ErrTypeError ;};if _ebbce .Len ()!=6{_cgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ebbce .Len ());return nil ,ErrInvalidAttribute ;
};_egacf .Coords =_ebbce ;if _geacb :=_gdcbcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_geacb !=nil {_geacb =_bab .TraceToDirectObject (_geacb );_bfbgaf ,_gedcc :=_geacb .(*_bab .PdfObjectArray );if !_gedcc {_cgb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_geacb );
return nil ,_bab .ErrTypeError ;};_egacf .Domain =_bfbgaf ;};_acefdc =_gdcbcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _acefdc ==nil {_cgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_egacf .Function =[]PdfFunction {};if _fcece ,_ggdg :=_acefdc .(*_bab .PdfObjectArray );_ggdg {for _ ,_eabdd :=range _fcece .Elements (){_bgcac ,_gage :=_cdegf (_eabdd );if _gage !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gage );
return nil ,_gage ;};_egacf .Function =append (_egacf .Function ,_bgcac );};}else {_agbgg ,_ebcee :=_cdegf (_acefdc );if _ebcee !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebcee );
return nil ,_ebcee ;};_egacf .Function =append (_egacf .Function ,_agbgg );};if _bcdda :=_gdcbcc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bcdda !=nil {_bcdda =_bab .TraceToDirectObject (_bcdda );_fcaa ,_fafbcf :=_bcdda .(*_bab .PdfObjectArray );if !_fafbcf {_cgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcdda );
return nil ,_bab .ErrTypeError ;};if _fcaa .Len ()!=2{_cgb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fcaa .Len ());return nil ,ErrInvalidAttribute ;
};_egacf .Extend =_fcaa ;};return &_egacf ,nil ;};

// SetContext sets the sub annotation (context).
func (_bcda *PdfAnnotation )SetContext (ctx PdfModel ){_bcda ._bda =ctx };

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bdaee *PdfPageResources )GetShadingByName (keyName _bab .PdfObjectName )(*PdfShading ,bool ){if _bdaee .Shading ==nil {return nil ,false ;};_fdgde ,_bgabd :=_bab .TraceToDirectObject (_bdaee .Shading ).(*_bab .PdfObjectDictionary );if !_bgabd {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdaee .Shading );
return nil ,false ;};if _degbc :=_fdgde .Get (keyName );_degbc !=nil {_bdcge ,_bbcdc :=_gdeeb (_degbc );if _bbcdc !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_bbcdc );
return nil ,false ;};return _bdcge ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_dfbe *PdfSignature )ToPdfObject ()_bab .PdfObject {_eecaag :=_dfbe ._cdgg ;var _aage *_bab .PdfObjectDictionary ;if _baefd ,_eeedg :=_eecaag .PdfObject .(*pdfSignDictionary );_eeedg {_aage =_baefd .PdfObjectDictionary ;}else {_aage =_eecaag .PdfObject .(*_bab .PdfObjectDictionary );
};_aage .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dfbe .Type );_aage .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_dfbe .Filter );_aage .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_dfbe .SubFilter );_aage .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dfbe .ByteRange );
_aage .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dfbe .Contents );_aage .SetIfNotNil ("\u0043\u0065\u0072\u0074",_dfbe .Cert );_aage .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfbe .Name );_aage .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_dfbe .Reason );
_aage .SetIfNotNil ("\u004d",_dfbe .M );_aage .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_dfbe .Reference );_aage .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_dfbe .Changes );_aage .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_dfbe .ContactInfo );
return _eecaag ;};func (_ccbcg *LTV )generateVRIKey (_edacf *PdfSignature )(string ,error ){_gffec ,_gfbbeg :=_fcge (_edacf .Contents .Bytes ());if _gfbbeg !=nil {return "",_gfbbeg ;};return _bf .ToUpper (_bc .EncodeToString (_gffec )),nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_efbce *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_cgb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_egacg :=[]float64 {0.0};if _efbce .C0 !=nil {_egacg =_efbce .C0 ;};_gdeea :=[]float64 {1.0};if _efbce .C1 !=nil {_gdeea =_efbce .C1 ;};var _aafaa []float64 ;for _dbfec :=0;_dbfec < len (_egacg );_dbfec ++{_fffec :=_egacg [_dbfec ]+_ab .Pow (x [0],_efbce .N )*(_gdeea [_dbfec ]-_egacg [_dbfec ]);
_aafaa =append (_aafaa ,_fffec );};return _aafaa ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_cb .StdFontName ;

// ToPdfObject implements interface PdfModel.
func (_eeeb *PdfAnnotationWatermark )ToPdfObject ()_bab .PdfObject {_eeeb .PdfAnnotation .ToPdfObject ();_eaff :=_eeeb ._bcc ;_deeg :=_eaff .PdfObject .(*_bab .PdfObjectDictionary );_deeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_deeg .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_eeeb .FixedPrint );return _eaff ;};var _ddac =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// ToPdfObject implements interface PdfModel.
func (_adf *PdfAnnotationLine )ToPdfObject ()_bab .PdfObject {_adf .PdfAnnotation .ToPdfObject ();_cbac :=_adf ._bcc ;_ffdf :=_cbac .PdfObject .(*_bab .PdfObjectDictionary );_adf .PdfAnnotationMarkup .appendToPdfDictionary (_ffdf );_ffdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u004c\u0069\u006e\u0065"));
_ffdf .SetIfNotNil ("\u004c",_adf .L );_ffdf .SetIfNotNil ("\u0042\u0053",_adf .BS );_ffdf .SetIfNotNil ("\u004c\u0045",_adf .LE );_ffdf .SetIfNotNil ("\u0049\u0043",_adf .IC );_ffdf .SetIfNotNil ("\u004c\u004c",_adf .LL );_ffdf .SetIfNotNil ("\u004c\u004c\u0045",_adf .LLE );
_ffdf .SetIfNotNil ("\u0043\u0061\u0070",_adf .Cap );_ffdf .SetIfNotNil ("\u0049\u0054",_adf .IT );_ffdf .SetIfNotNil ("\u004c\u004c\u004f",_adf .LLO );_ffdf .SetIfNotNil ("\u0043\u0050",_adf .CP );_ffdf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_adf .Measure );
_ffdf .SetIfNotNil ("\u0043\u004f",_adf .CO );return _cbac ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bab .PdfObjectInteger ;TilingType *_bab .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bab .PdfObjectFloat ;YStep *_bab .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bab .PdfObjectArray ;};


// GetNumComponents returns the number of color components (3 for RGB).
func (_ebee *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bab .PdfObjectArray ;Matrix *_bab .PdfObjectArray ;Function []PdfFunction ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bfbdd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bfbdd ._aegbcg =colorspace ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_fgf :=NewPdfAction ();_egg :=&PdfActionLaunch {};_egg .PdfAction =_fgf ;_fgf .SetContext (_egg );return _egg ;};func (_cdg *PdfReader )newPdfAnnotationUnderlineFromDict (_efbd *_bab .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_afa :=PdfAnnotationUnderline {};
_cafa ,_ecde :=_cdg .newPdfAnnotationMarkupFromDict (_efbd );if _ecde !=nil {return nil ,_ecde ;};_afa .PdfAnnotationMarkup =_cafa ;_afa .QuadPoints =_efbd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afa ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_dbg *PdfAction )GetContext ()PdfModel {if _dbg ==nil {return nil ;};return _dbg ._dcb ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_edega *LTV )EnableChain (chain []*_ef .Certificate )error {return _edega .enable (nil ,chain ,"")};

// GetPdfInfo returns the PDF info dictionary.
func (_facga *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bffb :=PdfInfo {};_afcec ,_bbgf :=_facga .GetTrailer ();if _bbgf !=nil {return nil ,_bbgf ;};var _febe *_bab .PdfObjectDictionary ;_babe :=_afcec .Get ("\u0049\u006e\u0066\u006f");switch _abdgd :=_babe .(type ){case *_bab .PdfObjectReference :_fbda :=_abdgd ;
_babe ,_bbgf =_facga .GetIndirectObjectByNumber (int (_fbda .ObjectNumber ));_babe =_bab .TraceToDirectObject (_babe );if _bbgf !=nil {return nil ,_bbgf ;};_febe ,_ =_babe .(*_bab .PdfObjectDictionary );case *_bab .PdfObjectDictionary :_febe =_abdgd ;};
if _febe ==nil {return nil ,_cg .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_bedgc :=range _febe .Keys (){switch _bedgc {case "\u0054\u0069\u0074l\u0065":_bffb .Title ,_ =_bab .GetString (_febe .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_bffb .Author ,_ =_bab .GetString (_febe .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_bffb .Subject ,_ =_bab .GetString (_febe .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_bffb .Keywords ,_ =_bab .GetString (_febe .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_bffb .Creator ,_ =_bab .GetString (_febe .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_bffb .Producer ,_ =_bab .GetString (_febe .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_bffb .Trapped ,_ =_bab .GetName (_febe .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _agfge ,_cfdfb :=_bab .GetString (_febe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_cfdfb &&_agfge .String ()!=""{_dcgg ,_cdeb :=NewPdfDate (_agfge .String ());
if _cdeb !=nil {return nil ,_cdeb ;};_bffb .CreationDate =&_dcgg ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _fcdgd ,_gdcff :=_bab .GetString (_febe .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_gdcff &&_fcdgd .String ()!=""{_ccfe ,_decec :=NewPdfDate (_fcdgd .String ());
if _decec !=nil {return nil ,_decec ;};_bffb .ModifiedDate =&_ccfe ;};default:_gfbbc ,_ :=_bab .GetString (_febe .Get (_bedgc ));if _bffb ._bgef ==nil {_bffb ._bgef =_bab .MakeDict ();};_bffb ._bgef .Set (_bedgc ,_gfbbc );};};return &_bffb ,nil ;};func (_gefc *pdfFontSimple )baseFields ()*fontCommon {return &_gefc .fontCommon };


// Val returns the color value.
func (_gafge *PdfColorDeviceGray )Val ()float64 {return float64 (*_gafge )};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dfbc *PdfReader )CheckAccessRights (password []byte )(bool ,_bcbf .Permissions ,error ){return _dfbc ._fdcebg .CheckAccessRights (password );};

// ToPdfObject implements interface PdfModel.
func (_gfdeb *PdfFilespec )ToPdfObject ()_bab .PdfObject {_bbbcb :=_gfdeb .getDict ();_bbbcb .Clear ();_bbbcb .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_bbbcb .SetIfNotNil ("\u0046\u0053",_gfdeb .FS );
_bbbcb .SetIfNotNil ("\u0046",_gfdeb .F );_bbbcb .SetIfNotNil ("\u0055\u0046",_gfdeb .UF );_bbbcb .SetIfNotNil ("\u0044\u004f\u0053",_gfdeb .DOS );_bbbcb .SetIfNotNil ("\u004d\u0061\u0063",_gfdeb .Mac );_bbbcb .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gfdeb .Unix );
_bbbcb .SetIfNotNil ("\u0049\u0044",_gfdeb .ID );_bbbcb .SetIfNotNil ("\u0056",_gfdeb .V );_bbbcb .SetIfNotNil ("\u0045\u0046",_gfdeb .EF );_bbbcb .SetIfNotNil ("\u0052\u0046",_gfdeb .RF );_bbbcb .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gfdeb .Desc );
_bbbcb .SetIfNotNil ("\u0043\u0049",_gfdeb .CI );return _gfdeb ._cebg ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_bgdc *PdfFont )ToUnicode ()string {if _bgdc .baseFields ()._cfdd ==nil {return "";};return _bgdc .baseFields ()._cfdd .Name ();};func (_adeeb *PdfReader )resolveReference (_gfaec *_bab .PdfObjectReference )(_bab .PdfObject ,bool ,error ){_feeg ,_dfdgc :=_adeeb ._fdcebg .ObjCache [int (_gfaec .ObjectNumber )];
if !_dfdgc {_cgb .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gfaec );_bbdbb ,_fceb :=_adeeb ._fdcebg .LookupByReference (*_gfaec );if _fceb !=nil {return nil ,false ,_fceb ;};_adeeb ._fdcebg .ObjCache [int (_gfaec .ObjectNumber )]=_bbdbb ;
return _bbdbb ,false ,nil ;};return _feeg ,true ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cbbc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cfefe *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cfefe ._gagfb ==nil {_cfefe .GetAnnotations ();};_cfefe ._gagfb =append (_cfefe ._gagfb ,annot );};func _eadfd (_cgcb _bab .PdfObject )(*PdfColorspaceCalRGB ,error ){_bgbg :=NewPdfColorspaceCalRGB ();
if _bbca ,_acfbc :=_cgcb .(*_bab .PdfIndirectObject );_acfbc {_bgbg ._fedc =_bbca ;};_cgcb =_bab .TraceToDirectObject (_cgcb );_bcab ,_daee :=_cgcb .(*_bab .PdfObjectArray );if !_daee {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _bcab .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cgcb =_bab .TraceToDirectObject (_bcab .Get (0));_aeab ,_daee :=_cgcb .(*_bab .PdfObjectName );
if !_daee {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_aeab !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_d .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_cgcb =_bab .TraceToDirectObject (_bcab .Get (1));_defb ,_daee :=_cgcb .(*_bab .PdfObjectDictionary );if !_daee {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_cgcb =_defb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cgcb =_bab .TraceToDirectObject (_cgcb );_edbe ,_daee :=_cgcb .(*_bab .PdfObjectArray );if !_daee {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _edbe .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bceb ,_abbdc :=_edbe .GetAsFloat64Slice ();
if _abbdc !=nil {return nil ,_abbdc ;};_bgbg .WhitePoint =_bceb ;_cgcb =_defb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgcb !=nil {_cgcb =_bab .TraceToDirectObject (_cgcb );_gcega ,_ddedf :=_cgcb .(*_bab .PdfObjectArray );
if !_ddedf {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _gcega .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_aafg ,_ddfd :=_gcega .GetAsFloat64Slice ();if _ddfd !=nil {return nil ,_ddfd ;};_bgbg .BlackPoint =_aafg ;};_cgcb =_defb .Get ("\u0047\u0061\u006dm\u0061");if _cgcb !=nil {_cgcb =_bab .TraceToDirectObject (_cgcb );_cbd ,_cegd :=_cgcb .(*_bab .PdfObjectArray );
if !_cegd {return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _cbd .Len ()!=3{return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bacgad ,_acab :=_cbd .GetAsFloat64Slice ();if _acab !=nil {return nil ,_acab ;};_bgbg .Gamma =_bacgad ;};_cgcb =_defb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cgcb !=nil {_cgcb =_bab .TraceToDirectObject (_cgcb );_baag ,_cgda :=_cgcb .(*_bab .PdfObjectArray );
if !_cgda {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _baag .Len ()!=9{_cgb .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_baag .String ());
return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_dgab ,_gdbe :=_baag .GetAsFloat64Slice ();if _gdbe !=nil {return nil ,_gdbe ;
};_bgbg .Matrix =_dgab ;};return _bgbg ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gbec :=NewPdfAnnotation ();_cfb :=&PdfAnnotationPopup {};_cfb .PdfAnnotation =_gbec ;_gbec .SetContext (_cfb );return _cfb ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bab .PdfObjectName ;Colorants _bab .PdfObject ;Process _bab .PdfObject ;MixingHints _bab .PdfObject ;_gacd *_bab .PdfIndirectObject ;};func (_fadag *PdfSignature )extractChainFromCert ()([]*_ef .Certificate ,error ){var _egeeb *_bab .PdfObjectArray ;
switch _addaa :=_fadag .Cert .(type ){case *_bab .PdfObjectString :_egeeb =_bab .MakeArray (_addaa );case *_bab .PdfObjectArray :_egeeb =_addaa ;default:return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_addaa );
};var _dgdf _bcb .Buffer ;for _ ,_gefgd :=range _egeeb .Elements (){_ffbcg ,_ebcba :=_bab .GetString (_gefgd );if !_ebcba {return nil ,_d .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_gefgd );
};if _ ,_ccedg :=_dgdf .Write (_ffbcg .Bytes ());_ccedg !=nil {return nil ,_ccedg ;};};return _ef .ParseCertificates (_dgdf .Bytes ());};

// ToInteger convert to an integer format.
func (_dgdc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_aabe :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_aabe *_dgdc .A ()),uint32 (_aabe *_dgdc .B ()),uint32 (_aabe *_dgdc .C ())};};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_aagbf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func _ddbed (_baef *_bab .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ccadf :=PdfShadingType1 {};if _dgafc :=_baef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dgafc !=nil {_dgafc =_bab .TraceToDirectObject (_dgafc );
_gcbcc ,_deac :=_dgafc .(*_bab .PdfObjectArray );if !_deac {_cgb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgafc );return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccadf .Domain =_gcbcc ;};if _deefec :=_baef .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_deefec !=nil {_deefec =_bab .TraceToDirectObject (_deefec );_cdgaa ,_gecga :=_deefec .(*_bab .PdfObjectArray );if !_gecga {_cgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_deefec );
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccadf .Matrix =_cdgaa ;};_fdfa :=_baef .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fdfa ==nil {_cgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ccadf .Function =[]PdfFunction {};if _eebgf ,_ceff :=_fdfa .(*_bab .PdfObjectArray );_ceff {for _ ,_bdegf :=range _eebgf .Elements (){_cegbf ,_ccdc :=_cdegf (_bdegf );if _ccdc !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccdc );
return nil ,_ccdc ;};_ccadf .Function =append (_ccadf .Function ,_cegbf );};}else {_dfdeb ,_bdaae :=_cdegf (_fdfa );if _bdaae !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdaae );
return nil ,_bdaae ;};_ccadf .Function =append (_ccadf .Function ,_dfdeb );};return &_ccadf ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_adbb *PdfField )SetContext (ctx PdfModel ){_adbb ._fbbf =ctx };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cgdb _bab .PdfObject ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bggg ,_gafd :=_de .Open (filePath );if _gafd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gafd );
return nil ,_gafd ;};defer _bggg .Close ();return NewCompositePdfFontFromTTF (_bggg );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gdbf *PdfFieldSignature )ToPdfObject ()_bab .PdfObject {if _gdbf .PdfAnnotationWidget !=nil {_gdbf .PdfAnnotationWidget .ToPdfObject ();};_gdbf .PdfField .ToPdfObject ();_acdfg :=_gdbf ._fced ;_bafd :=_acdfg .PdfObject .(*_bab .PdfObjectDictionary );
_bafd .SetIfNotNil ("\u0046\u0054",_bab .MakeName ("\u0053\u0069\u0067"));_bafd .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gdbf .Lock );_bafd .SetIfNotNil ("\u0053\u0056",_gdbf .SV );if _gdbf .V !=nil {_bafd .SetIfNotNil ("\u0056",_gdbf .V .ToPdfObject ());
};return _acdfg ;};func _cfce (_cege string )(map[_ea .CharCode ]_ea .GlyphName ,error ){_ccfa :=_bf .Split (_cege ,"\u000a");_gbbff :=make (map[_ea .CharCode ]_ea .GlyphName );for _ ,_gagag :=range _ccfa {_aaeea :=_egfgf .FindStringSubmatch (_gagag );
if _aaeea ==nil {continue ;};_ffedd ,_gfadf :=_aaeea [1],_aaeea [2];_cbba ,_fefeg :=_dc .Atoi (_ffedd );if _fefeg !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gagag );
return nil ,_bab .ErrTypeError ;};_gbbff [_ea .CharCode (_cbba )]=_ea .GlyphName (_gfadf );};_cgb .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_gbbff );
return _gbbff ,nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_bfadc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bab .GetNumberAsFloat (_bfadc .Descent );};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bab .PdfObject ;BS _bab .PdfObject ;LE _bab .PdfObject ;IC _bab .PdfObject ;LL _bab .PdfObject ;LLE _bab .PdfObject ;Cap _bab .PdfObject ;IT _bab .PdfObject ;LLO _bab .PdfObject ;CP _bab .PdfObject ;
Measure _bab .PdfObject ;CO _bab .PdfObject ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bab .PdfObject )(PdfColorspace ,error ){var _bgb *_bab .PdfIndirectObject ;var _eeba *_bab .PdfObjectName ;var _gfac *_bab .PdfObjectArray ;if _aebg ,_baada :=obj .(*_bab .PdfIndirectObject );_baada {_bgb =_aebg ;
};obj =_bab .TraceToDirectObject (obj );switch _fgbe :=obj .(type ){case *_bab .PdfObjectArray :_gfac =_fgbe ;case *_bab .PdfObjectName :_eeba =_fgbe ;};if _eeba !=nil {switch *_eeba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_cgb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_eeba );return nil ,_fgbf ;};};if _gfac !=nil &&_gfac .Len ()> 0{var _agcdb _bab .PdfObject =_bgb ;
if _bgb ==nil {_agcdb =_gfac ;};if _fgecc ,_gagd :=_bab .GetName (_gfac .Get (0));_gagd {switch _fgecc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _gfac .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _gfac .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gfac .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fdgg (_agcdb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _eadfd (_agcdb );
case "\u004c\u0061\u0062":return _bdfe (_agcdb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _afbc (_agcdb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _fbbd (_agcdb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _afecb (_agcdb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _ddga (_agcdb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _fbg (_agcdb );default:_cgb .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_fgecc );
};};};_cgb .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ggdb *PdfColorLab )GetNumComponents ()int {return 3};func (_agfa *PdfReader )newPdfSignatureFromIndirect (_cgde *_bab .PdfIndirectObject )(*PdfSignature ,error ){_dgcd ,_bbefb :=_cgde .PdfObject .(*_bab .PdfObjectDictionary );if !_bbefb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _bbdfa ,_ffacb :=_agfa ._dccce .GetModelFromPrimitive (_cgde ).(*PdfSignature );_ffacb {return _bbdfa ,nil ;};_edgba :=&PdfSignature {};_edgba ._cdgg =_cgde ;_edgba .Type ,_ =_bab .GetName (_dgcd .Get ("\u0054\u0079\u0070\u0065"));
_edgba .Filter ,_bbefb =_bab .GetName (_dgcd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bbefb {_cgb .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_edgba .SubFilter ,_ =_bab .GetName (_dgcd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_edgba .Contents ,_bbefb =_bab .GetString (_dgcd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bbefb {_cgb .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_edgba .Cert =_dgcd .Get ("\u0043\u0065\u0072\u0074");_edgba .ByteRange ,_ =_bab .GetArray (_dgcd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_edgba .Reference ,_ =_bab .GetArray (_dgcd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_edgba .Changes ,_ =_bab .GetArray (_dgcd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_edgba .Name ,_ =_bab .GetString (_dgcd .Get ("\u004e\u0061\u006d\u0065"));_edgba .M ,_ =_bab .GetString (_dgcd .Get ("\u004d"));_edgba .Location ,_ =_bab .GetString (_dgcd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_edgba .Reason ,_ =_bab .GetString (_dgcd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_edgba .ContactInfo ,_ =_bab .GetString (_dgcd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_edgba .R ,_ =_bab .GetInt (_dgcd .Get ("\u0052"));
_edgba .V ,_ =_bab .GetInt (_dgcd .Get ("\u0056"));_edgba .PropBuild ,_ =_bab .GetDict (_dgcd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_edgba .PropAuthTime ,_ =_bab .GetInt (_dgcd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_edgba .PropAuthType ,_ =_bab .GetName (_dgcd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _edgba ,nil ;};func _bfdcb (_bgca *_bab .PdfObjectDictionary ,_edbgg *fontCommon )(*pdfFontType0 ,error ){_bdcfe ,_ebca :=_bab .GetArray (_bgca .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_ebca {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_edbgg );
return nil ,_bab .ErrRangeError ;};if _bdcfe .Len ()!=1{_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bdcfe .Len ());
return nil ,_bab .ErrRangeError ;};_eeddf ,_fffa :=_egfc (_bdcfe .Get (0),false );if _fffa !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_fffa ,_edbgg );
return nil ,_fffa ;};_bdag :=_bdgf (_edbgg );_bdag .DescendantFont =_eeddf ;_dbgg ,_ebca :=_bab .GetNameVal (_bgca .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ebca {if _dbgg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dbgg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bdag ._aecf =_ea .NewIdentityTextEncoder (_dbgg );
}else if _fd .IsPredefinedCMap (_dbgg ){_bdag ._fgcac ,_fffa =_fd .LoadPredefinedCMap (_dbgg );if _fffa !=nil {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dbgg ,_fffa );
};}else {_cgb .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dbgg );};};if _agcef :=_eeddf .baseFields ()._cfdd ;_agcef !=nil {if _eecaa :=_agcef .Name ();_eecaa =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_eecaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_eecaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_eecaa =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bdag ._aecf =_ea .NewCMapEncoder (_dbgg ,_bdag ._fgcac ,_agcef );
};};return _bdag ,nil ;};func (_bffd *PdfReader )newPdfAnnotationRedactFromDict (_cebe *_bab .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_edcf :=PdfAnnotationRedact {};_cafe ,_fdef :=_bffd .newPdfAnnotationMarkupFromDict (_cebe );if _fdef !=nil {return nil ,_fdef ;
};_edcf .PdfAnnotationMarkup =_cafe ;_edcf .QuadPoints =_cebe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_edcf .IC =_cebe .Get ("\u0049\u0043");_edcf .RO =_cebe .Get ("\u0052\u004f");_edcf .OverlayText =_cebe .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_edcf .Repeat =_cebe .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_edcf .DA =_cebe .Get ("\u0044\u0041");_edcf .Q =_cebe .Get ("\u0051");return &_edcf ,nil ;};func _dfdf (_bfbb *_bab .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cbeac :=PdfShadingType4 {};
_debf :=_bfbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _debf ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acfca ,_gaadeg :=_debf .(*_bab .PdfObjectInteger );if !_gaadeg {_cgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_debf );
return nil ,_bab .ErrTypeError ;};_cbeac .BitsPerCoordinate =_acfca ;_debf =_bfbb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _debf ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_acfca ,_gaadeg =_debf .(*_bab .PdfObjectInteger );if !_gaadeg {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_debf );
return nil ,_bab .ErrTypeError ;};_cbeac .BitsPerComponent =_acfca ;_debf =_bfbb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _debf ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acfca ,_gaadeg =_debf .(*_bab .PdfObjectInteger );if !_gaadeg {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_debf );
return nil ,_bab .ErrTypeError ;};_cbeac .BitsPerComponent =_acfca ;_debf =_bfbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _debf ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eddf ,_gaadeg :=_debf .(*_bab .PdfObjectArray );if !_gaadeg {_cgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_debf );
return nil ,_bab .ErrTypeError ;};_cbeac .Decode =_eddf ;_debf =_bfbb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _debf ==nil {_cgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cbeac .Function =[]PdfFunction {};if _gbddge ,_gbbgd :=_debf .(*_bab .PdfObjectArray );_gbbgd {for _ ,_fagb :=range _gbddge .Elements (){_faegf ,_dcgdg :=_cdegf (_fagb );if _dcgdg !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcgdg );
return nil ,_dcgdg ;};_cbeac .Function =append (_cbeac .Function ,_faegf );};}else {_dfbdc ,_ddcbe :=_cdegf (_debf );if _ddcbe !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddcbe );
return nil ,_ddcbe ;};_cbeac .Function =append (_cbeac .Function ,_dfbdc );};return &_cbeac ,nil ;};

// GetXObjectByName gets XObject by name.
func (_dbde *PdfPage )GetXObjectByName (name _bab .PdfObjectName )(_bab .PdfObject ,bool ){_fefga ,_eacbc :=_dbde .Resources .XObject .(*_bab .PdfObjectDictionary );if !_eacbc {return nil ,false ;};if _afgfg :=_fefga .Get (name );_afgfg !=nil {return _afgfg ,true ;
};return nil ,false ;};func (_bcdf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};type pdfCIDFontType2 struct{fontCommon ;_gdgd *_bab .PdfIndirectObject ;_gedcb _ea .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bab .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bab .PdfObject ;W _bab .PdfObject ;DW2 _bab .PdfObject ;W2 _bab .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bab .PdfObject ;_ceba map[_ea .CharCode ]float64 ;_deagdb float64 ;_aefcc map[rune ]int ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dgef *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cffe *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cg .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_fcf ,_gbgd :=_ca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fffdd ,img ._dgbgc );if _gbgd !=nil {return img ,_gbgd ;};_eddd ,_gbgd :=_ca .GrayConverter .Convert (_fcf );if _gbgd !=nil {return img ,_gbgd ;
};return _bdaad (_eddd .Base ()),nil ;};

// C returns the value of the C component of the color.
func (_fefc *PdfColorCalRGB )C ()float64 {return _fefc [2]};func _fegc (_dcde *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_dcde }};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bab .PdfObjectInteger ;BitsPerComponent *_bab .PdfObjectInteger ;BitsPerFlag *_bab .PdfObjectInteger ;Decode *_bab .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bdabb *PdfShadingType4 )ToPdfObject ()_bab .PdfObject {_bdabb .PdfShading .ToPdfObject ();_cdeeb ,_fadc :=_bdabb .getShadingDict ();if _fadc !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bdabb .BitsPerCoordinate !=nil {_cdeeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bdabb .BitsPerCoordinate );};if _bdabb .BitsPerComponent !=nil {_cdeeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdabb .BitsPerComponent );
};if _bdabb .BitsPerFlag !=nil {_cdeeb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bdabb .BitsPerFlag );};if _bdabb .Decode !=nil {_cdeeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bdabb .Decode );};if _bdabb .Function !=nil {if len (_bdabb .Function )==1{_cdeeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdabb .Function [0].ToPdfObject ());
}else {_fbee :=_bab .MakeArray ();for _ ,_afbfa :=range _bdabb .Function {_fbee .Append (_afbfa .ToPdfObject ());};_cdeeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbee );};};return _bdabb ._bfgd ;};func _babb (_ecdafa *_bab .PdfObjectDictionary )(*PdfShadingType7 ,error ){_cbgec :=PdfShadingType7 {};
_dgfce :=_ecdafa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dgfce ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfggc ,_afdbc :=_dgfce .(*_bab .PdfObjectInteger );if !_afdbc {_cgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgfce );
return nil ,_bab .ErrTypeError ;};_cbgec .BitsPerCoordinate =_dfggc ;_dgfce =_ecdafa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dgfce ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dfggc ,_afdbc =_dgfce .(*_bab .PdfObjectInteger );if !_afdbc {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dgfce );
return nil ,_bab .ErrTypeError ;};_cbgec .BitsPerComponent =_dfggc ;_dgfce =_ecdafa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dgfce ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dfggc ,_afdbc =_dgfce .(*_bab .PdfObjectInteger );if !_afdbc {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dgfce );
return nil ,_bab .ErrTypeError ;};_cbgec .BitsPerComponent =_dfggc ;_dgfce =_ecdafa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dgfce ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dagc ,_afdbc :=_dgfce .(*_bab .PdfObjectArray );if !_afdbc {_cgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgfce );
return nil ,_bab .ErrTypeError ;};_cbgec .Decode =_dagc ;if _gfbd :=_ecdafa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gfbd !=nil {_cbgec .Function =[]PdfFunction {};if _adeg ,_afgd :=_gfbd .(*_bab .PdfObjectArray );_afgd {for _ ,_fdda :=range _adeg .Elements (){_gebb ,_adccc :=_cdegf (_fdda );
if _adccc !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adccc );return nil ,_adccc ;};_cbgec .Function =append (_cbgec .Function ,_gebb );
};}else {_fgbga ,_bgfcg :=_cdegf (_gfbd );if _bgfcg !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgfcg );return nil ,_bgfcg ;
};_cbgec .Function =append (_cbgec .Function ,_fgbga );};};return &_cbgec ,nil ;};func _gfaa (_cefb _bab .PdfObject )(*PdfBorderStyle ,error ){_ddbc :=&PdfBorderStyle {};_ddbc ._cgdb =_cefb ;var _dgag *_bab .PdfObjectDictionary ;_cefb =_bab .TraceToDirectObject (_cefb );
_dgag ,_efegd :=_cefb .(*_bab .PdfObjectDictionary );if !_efegd {return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _affb :=_dgag .Get ("\u0054\u0079\u0070\u0065");_affb !=nil {_bebg ,_cdc :=_affb .(*_bab .PdfObjectName );
if !_cdc {_cgb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_affb );
}else {if *_bebg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_cgb .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bebg );};};};if _agcd :=_dgag .Get ("\u0057");
_agcd !=nil {_fdefb ,_bfgg :=_bab .GetNumberAsFloat (_agcd );if _bfgg !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_bfgg );return nil ,_bfgg ;};_ddbc .W =&_fdefb ;
};if _badc :=_dgag .Get ("\u0053");_badc !=nil {_afcd ,_fda :=_badc .(*_bab .PdfObjectName );if !_fda {return nil ,_cg .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _bec BorderStyle ;switch *_afcd {case "\u0053":_bec =BorderStyleSolid ;case "\u0044":_bec =BorderStyleDashed ;case "\u0042":_bec =BorderStyleBeveled ;case "\u0049":_bec =BorderStyleInset ;case "\u0055":_bec =BorderStyleUnderline ;default:_cgb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_afcd );
return nil ,_cg .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_ddbc .S =&_bec ;};if _aafe :=_dgag .Get ("\u0044");_aafe !=nil {_babd ,_abac :=_aafe .(*_bab .PdfObjectArray );
if !_abac {_cgb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_aafe );return nil ,_cg .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_dcga ,_aabfa :=_babd .ToIntegerArray ();if _aabfa !=nil {_cgb .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_aabfa );
return nil ,_aabfa ;};_ddbc .D =&_dcga ;};return _ddbc ,nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_agg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gafc :=vals [0];if _gafc < 0.0||_gafc > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dbfga :=vals [1];if _dbfga < 0.0||_dbfga > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbb :=vals [2];if _gfbb < 0.0||_gfbb > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_adad :=vals [3];if _adad < 0.0||_adad > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_addb :=NewPdfColorDeviceCMYK (_gafc ,_dbfga ,_gfbb ,_adad );return _addb ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fefe *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bab .PdfObject ;H _bab .PdfObject ;};func _ccbab ()string {_fcccb .Lock ();defer _fcccb .Unlock ();_bedcb :=_cbf .GetLicenseKey ();if len (_edafc )> 0&&(_bedcb .IsLicensed ()||_afcdb ){return _edafc ;};return _d .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_fbegb (),_bedcb .TypeToString ());
};

// SetDate sets the `M` field of the signature.
func (_fgbad *PdfSignature )SetDate (date _f .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fgbad .M =_bab .MakeString (date .Format (format ));
};func (_becfd *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func _ffec ()string {_fcccb .Lock ();defer _fcccb .Unlock ();return _gfebd };

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_gaaea PdfModel ;_ecege _bab .PdfObject ;};func (_baegd *DSS )addOCSPs (_eeff [][]byte )([]*_bab .PdfObjectStream ,error ){return _baegd .add (&_baegd .OCSPs ,_baegd ._bbed ,_eeff );};func (_gagb *PdfReader )newPdfAnnotationMarkupFromDict (_fadd *_bab .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_gede :=&PdfAnnotationMarkup {};
if _cage :=_fadd .Get ("\u0054");_cage !=nil {_gede .T =_cage ;};if _dabf :=_fadd .Get ("\u0050\u006f\u0070u\u0070");_dabf !=nil {_gedg ,_bdg :=_dabf .(*_bab .PdfIndirectObject );if !_bdg {if _ ,_aea :=_dabf .(*_bab .PdfObjectNull );!_aea {return nil ,_cg .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_cdad ,_geaa :=_gagb .newPdfAnnotationFromIndirectObject (_gedg );if _geaa !=nil {return nil ,_geaa ;};if _cdad !=nil {_febf ,_efcf :=_cdad ._bda .(*PdfAnnotationPopup );if !_efcf {return nil ,_cg .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_gede .Popup =_febf ;};};};if _aba :=_fadd .Get ("\u0043\u0041");_aba !=nil {_gede .CA =_aba ;};if _gcfd :=_fadd .Get ("\u0052\u0043");_gcfd !=nil {_gede .RC =_gcfd ;};if _fae :=_fadd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_fae !=nil {_gede .CreationDate =_fae ;};if _ddf :=_fadd .Get ("\u0049\u0052\u0054");_ddf !=nil {_gede .IRT =_ddf ;};if _bcfa :=_fadd .Get ("\u0053\u0075\u0062\u006a");_bcfa !=nil {_gede .Subj =_bcfa ;};if _bcbfg :=_fadd .Get ("\u0052\u0054");_bcbfg !=nil {_gede .RT =_bcbfg ;
};if _ccc :=_fadd .Get ("\u0049\u0054");_ccc !=nil {_gede .IT =_ccc ;};if _cgcc :=_fadd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cgcc !=nil {_gede .ExData =_cgcc ;};return _gede ,nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gbafg *PdfColorspaceSpecialIndexed )ToPdfObject ()_bab .PdfObject {_cbdg :=_bab .MakeArray (_bab .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cbdg .Append (_gbafg .Base .ToPdfObject ());_cbdg .Append (_bab .MakeInteger (int64 (_gbafg .HiVal )));
_cbdg .Append (_gbafg .Lookup );if _gbafg ._aagc !=nil {_gbafg ._aagc .PdfObject =_cbdg ;return _gbafg ._aagc ;};return _cbdg ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_fffdd []byte ;_dgbgc []float64 ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_aefcd *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _aefcd .UnderlyingCS .GetNumComponents ();};func (_bgecd *PdfWriter )addObjects (_bggfe _bab .PdfObject )error {_cgb .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _agdca ,_dgaegd :=_bggfe .(*_bab .PdfIndirectObject );_dgaegd {_cgb .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_cgb .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bggfe ,_agdca );_cgb .Log .Trace ("\u002d\u0020\u0025\u0073",_agdca .PdfObject );
if _bgecd .addObject (_agdca ){_bbfde :=_bgecd .addObjects (_agdca .PdfObject );if _bbfde !=nil {return _bbfde ;};};return nil ;};if _faec ,_acecg :=_bggfe .(*_bab .PdfObjectStream );_acecg {_cgb .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_cgb .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bggfe ,_bggfe );
if _bgecd .addObject (_faec ){_gbcfe :=_bgecd .addObjects (_faec .PdfObjectDictionary );if _gbcfe !=nil {return _gbcfe ;};};return nil ;};if _bbfe ,_ddbbc :=_bggfe .(*_bab .PdfObjectDictionary );_ddbbc {_cgb .Log .Trace ("\u0044\u0069\u0063\u0074");_cgb .Log .Trace ("\u002d\u0020\u0025\u0073",_bggfe );
for _ ,_fafbg :=range _bbfe .Keys (){_eddgag :=_bbfe .Get (_fafbg );if _cbagg ,_abgagb :=_eddgag .(*_bab .PdfObjectReference );_abgagb {_eddgag =_cbagg .Resolve ();_bbfe .Set (_fafbg ,_eddgag );};if _fafbg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fgecdb :=_bgecd .addObjects (_eddgag );
_fgecdb !=nil {return _fgecdb ;};}else {if _ ,_bfbe :=_eddgag .(*_bab .PdfObjectNull );_bfbe {continue ;};if _bbacg :=_bgecd .hasObject (_eddgag );!_bbacg {_cgb .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_eddgag ,_eddgag ,_eddgag );
_bgecd ._ebgfb [_eddgag ]=append (_bgecd ._ebgfb [_eddgag ],_bbfe );};};};return nil ;};if _eadeb ,_abebbd :=_bggfe .(*_bab .PdfObjectArray );_abebbd {_cgb .Log .Trace ("\u0041\u0072\u0072a\u0079");_cgb .Log .Trace ("\u002d\u0020\u0025\u0073",_bggfe );
if _eadeb ==nil {return _cg .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _dead ,_bggcb :=range _eadeb .Elements (){if _bcfaa ,_bgafb :=_bggcb .(*_bab .PdfObjectReference );_bgafb {_bggcb =_bcfaa .Resolve ();_eadeb .Set (_dead ,_bggcb );
};if _afcfc :=_bgecd .addObjects (_bggcb );_afcfc !=nil {return _afcfc ;};};return nil ;};if _ ,_gdaef :=_bggfe .(*_bab .PdfObjectReference );_gdaef {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bggfe );
return _cg .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetContentStream returns the pattern cell's content stream
func (_fbcf *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gecg ,_ ,_gcda :=_fbcf .GetContentStreamWithEncoder ();return _gecg ,_gcda ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bab .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func _ecee (_gecf _bab .PdfObject )(*PdfFontDescriptor ,error ){_fdbbe :=&PdfFontDescriptor {};
_gecf =_bab .ResolveReference (_gecf );if _gccee ,_caad :=_gecf .(*_bab .PdfIndirectObject );_caad {_fdbbe ._dbcccc =_gccee ;_gecf =_gccee .PdfObject ;};_cabba ,_gacb :=_bab .GetDict (_gecf );if !_gacb {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gecf );
return nil ,_bab .ErrTypeError ;};if _agbfb :=_cabba .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_agbfb !=nil {_fdbbe .FontName =_agbfb ;}else {_cgb .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_cagae ,_ :=_bab .GetName (_fdbbe .FontName );if _fegde :=_cabba .Get ("\u0054\u0079\u0070\u0065");_fegde !=nil {_fgeca ,_cdcge :=_fegde .(*_bab .PdfObjectName );if !_cdcge ||string (*_fgeca )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_cgb .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fegde ,_cagae ,_fdbbe .FontName );
};}else {_cgb .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cagae ,_fdbbe .FontName );
};_fdbbe .FontFamily =_cabba .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fdbbe .FontStretch =_cabba .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fdbbe .FontWeight =_cabba .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_fdbbe .Flags =_cabba .Get ("\u0046\u006c\u0061g\u0073");_fdbbe .FontBBox =_cabba .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fdbbe .ItalicAngle =_cabba .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fdbbe .Ascent =_cabba .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_fdbbe .Descent =_cabba .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fdbbe .Leading =_cabba .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fdbbe .CapHeight =_cabba .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fdbbe .XHeight =_cabba .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_fdbbe .StemV =_cabba .Get ("\u0053\u0074\u0065m\u0056");_fdbbe .StemH =_cabba .Get ("\u0053\u0074\u0065m\u0048");_fdbbe .AvgWidth =_cabba .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fdbbe .MaxWidth =_cabba .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_fdbbe .MissingWidth =_cabba .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fdbbe .FontFile =_cabba .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fdbbe .FontFile2 =_cabba .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_fdbbe .FontFile3 =_cabba .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fdbbe .CharSet =_cabba .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fdbbe .Style =_cabba .Get ("\u0053\u0074\u0079l\u0065");_fdbbe .Lang =_cabba .Get ("\u004c\u0061\u006e\u0067");
_fdbbe .FD =_cabba .Get ("\u0046\u0044");_fdbbe .CIDSet =_cabba .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fdbbe .Flags !=nil {if _ggbd ,_bffga :=_bab .GetIntVal (_fdbbe .Flags );_bffga {_fdbbe ._agee =_ggbd ;};};if _fdbbe .MissingWidth !=nil {if _adab ,_aggfca :=_bab .GetNumberAsFloat (_fdbbe .MissingWidth );
_aggfca ==nil {_fdbbe ._acddd =_adab ;};};if _fdbbe .FontFile !=nil {_adae ,_gacfg :=_dacfg (_fdbbe .FontFile );if _gacfg !=nil {return _fdbbe ,_gacfg ;};_cgb .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_adae );_fdbbe .fontFile =_adae ;
};if _fdbbe .FontFile2 !=nil {_ecaf ,_cefag :=_cb .NewFontFile2FromPdfObject (_fdbbe .FontFile2 );if _cefag !=nil {return _fdbbe ,_cefag ;};_cgb .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_ecaf .String ());_fdbbe ._cgebd =&_ecaf ;
};return _fdbbe ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bab .PdfObject )(_bab .PdfObjectName ,error ){var _abbd *_bab .PdfObjectName ;var _dgeg *_bab .PdfObjectArray ;if _aegb ,_ggd :=obj .(*_bab .PdfIndirectObject );_ggd {if _baeed ,_cfg :=_aegb .PdfObject .(*_bab .PdfObjectArray );
_cfg {_dgeg =_baeed ;}else if _ebgc ,_cbee :=_aegb .PdfObject .(*_bab .PdfObjectName );_cbee {_abbd =_ebgc ;};}else if _aaegg ,_gdae :=obj .(*_bab .PdfObjectArray );_gdae {_dgeg =_aaegg ;}else if _dbbf ,_edbd :=obj .(*_bab .PdfObjectName );_edbd {_abbd =_dbbf ;
};if _abbd !=nil {switch *_abbd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_abbd ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_abbd ,nil ;
};};if _dgeg !=nil &&_dgeg .Len ()> 0{if _adfd ,_afgf :=_dgeg .Get (0).(*_bab .PdfObjectName );_afgf {switch *_adfd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dgeg .Len ()==1{return *_adfd ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_adfd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_adfd ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_adfd ,nil ;};};};return "",nil ;};func _ggcf (_dgade []rune ,_egffc map[rune ]int ,_bdgae map[rune ]_cb .GID )*_bab .PdfObjectArray {_ddae :=&_bab .PdfObjectArray {};
for _fecaf :=0;_fecaf < len (_dgade );{_fgeb :=_egffc [_dgade [_fecaf ]];_dcbea :=_fecaf ;for _eadc :=_fecaf +1;_eadc < len (_dgade );_eadc ++{_dacc :=_egffc [_dgade [_eadc ]];if _fgeb ==_dacc {_dcbea =_eadc ;}else {break ;};};_adafb :=_bdgae [_dgade [_fecaf ]];
_cgaba :=_bdgae [_dgade [_dcbea ]];_ddae .Append (_bab .MakeInteger (int64 (_adafb )));_ddae .Append (_bab .MakeInteger (int64 (_cgaba )));_ddae .Append (_bab .MakeInteger (int64 (_fgeb )));_fecaf =_dcbea +1;};return _ddae ;};func (_fgaad *PdfWriter )updateObjectNumbers (){_eaabd :=_fgaad .ObjNumOffset ;
_cffcg :=0;for _ ,_ffee :=range _fgaad ._bbceb {_gdfac :=int64 (_cffcg +1+_eaabd );_febbd :=true ;if _fgaad ._fbeeg {if _bcbe ,_dgaegg :=_fgaad ._efead [_ffee ];_dgaegg {_gdfac =_bcbe ;_febbd =false ;};};switch _aecdc :=_ffee .(type ){case *_bab .PdfIndirectObject :_aecdc .ObjectNumber =_gdfac ;
_aecdc .GenerationNumber =0;case *_bab .PdfObjectStream :_aecdc .ObjectNumber =_gdfac ;_aecdc .GenerationNumber =0;case *_bab .PdfObjectStreams :_aecdc .ObjectNumber =_gdfac ;_aecdc .GenerationNumber =0;default:_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_aecdc );
continue ;};if _febbd {_cffcg ++;};};_fdbcb :=func (_fdbbeg _bab .PdfObject )int64 {switch _agcfd :=_fdbbeg .(type ){case *_bab .PdfIndirectObject :return _agcfd .ObjectNumber ;case *_bab .PdfObjectStream :return _agcfd .ObjectNumber ;case *_bab .PdfObjectStreams :return _agcfd .ObjectNumber ;
};return 0;};_bbb .SliceStable (_fgaad ._bbceb ,func (_ffffb ,_ffeb int )bool {return _fdbcb (_fgaad ._bbceb [_ffffb ])< _fdbcb (_fgaad ._bbceb [_ffeb ])});};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_eddga *PdfOutlineTreeNode )ToPdfObject ()_bab .PdfObject {return _eddga .GetContext ().ToPdfObject ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_agcc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adaf :=vals [0];if _adaf < 0.0||_adaf > 100.0{_cgb .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_adaf );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbgb :=vals [1];_dcce :=float64 (-100);_dbac :=float64 (100);if len (_agcc .Range )> 1{_dcce =_agcc .Range [0];_dbac =_agcc .Range [1];};if _gbgb < _dcce ||_gbgb > _dbac {_cgb .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gbgb ,_dcce ,_dbac );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gafcc :=vals [2];_ecea :=float64 (-100);_bgag :=float64 (100);if len (_agcc .Range )> 3{_ecea =_agcc .Range [2];_bgag =_agcc .Range [3];};if _gafcc < _ecea ||_gafcc > _bgag {_cgb .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gafcc ,_ecea ,_bgag );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddge :=NewPdfColorLab (_adaf ,_gbgb ,_gafcc );return _ddge ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_edcb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dece :=NewPdfAnnotation ();_ccaa :=&PdfAnnotationScreen {};_ccaa .PdfAnnotation =_dece ;_dece .SetContext (_ccaa );return _ccaa ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fa :=NewPdfAction ();_ed :=&PdfActionSound {};_ed .PdfAction =_fa ;_fa .SetContext (_ed );return _ed ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_eeag *PdfAppender )Write (w _ad .Writer )error {if _eeag ._bedd {return _cg .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_eadfg :=NewPdfWriter ();_dfee ,_ddfe :=_bab .GetDict (_eadfg ._baadg );if !_ddfe {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_eaeb ,_ddfe :=_dfee .Get ("\u004b\u0069\u0064\u0073").(*_bab .PdfObjectArray );if !_ddfe {return _cg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_cagc ,_ddfe :=_dfee .Get ("\u0043\u006f\u0075n\u0074").(*_bab .PdfObjectInteger );if !_ddfe {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_abbg :=_eeag ._fgdb ._fdcebg ;_badg :=_abbg .GetTrailer ();if _badg ==nil {return _cg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gdca ,_ddfe :=_bab .GetIndirect (_badg .Get ("\u0052\u006f\u006f\u0074"));
if !_ddfe {return _cg .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_gdfb ,_ddfe :=_bab .GetDict (_gdca );if !_ddfe {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gdca ,*_badg );
return _cg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_agab :=range _gdfb .Keys (){if _eadfg ._abbdcc .Get (_agab )==nil {_bfge :=_gdfb .Get (_agab );_eadfg ._abbdcc .Set (_agab ,_bfge );};};if _eeag ._dbff !=nil {_eadfg ._abbdcc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eeag ._dbff .ToPdfObject ());
_eeag .updateObjectsDeep (_eeag ._dbff .ToPdfObject (),nil );};if _eeag ._edbg !=nil {_eeag .updateObjectsDeep (_eeag ._edbg .ToPdfObject (),nil );_eadfg ._abbdcc .Set ("\u0044\u0053\u0053",_eeag ._edbg .GetContainingPdfObject ());};if _eadfg ._gffad < 2{_eadfg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_eadfg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_eeag .addNewObject (_eadfg ._cgddgb );_eeag .addNewObject (_eadfg ._bdage );_ecfg :=false ;if len (_eeag ._fgdb .PageList )!=len (_eeag ._gdad ){_ecfg =true ;}else {for _agag :=range _eeag ._fgdb .PageList {switch {case _eeag ._gdad [_agag ]==_eeag ._fgdb .PageList [_agag ]:case _eeag ._gdad [_agag ]==_eeag .Reader .PageList [_agag ]:default:_ecfg =true ;
};if _ecfg {break ;};};};if _ecfg {_eeag .updateObjectsDeep (_eadfg ._baadg ,nil );}else {_eeag ._cbace [_eadfg ._baadg ]=struct{}{};};_eadfg ._baadg .ObjectNumber =_eeag .Reader ._fbeff .ObjectNumber ;_eeag ._fbeac [_eadfg ._baadg ]=_eeag .Reader ._fbeff .ObjectNumber ;
_ecba :=[]_bab .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_cbfd :=range _eeag ._gdad {_ecceg :=_cbfd .ToPdfObject ();
*_cagc =*_cagc +1;if _acag ,_dfge :=_ecceg .(*_bab .PdfIndirectObject );_dfge &&_acag .GetParser ()==_eeag ._fgdb ._fdcebg {_eaeb .Append (&_acag .PdfObjectReference );continue ;};if _bbab ,_baaea :=_bab .GetDict (_ecceg );_baaea {_dffcc ,_cff :=_bbab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bab .PdfIndirectObject );
for _cff {_cgb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dffcc );_ddcd ,_acebd :=_dffcc .PdfObject .(*_bab .PdfObjectDictionary );if !_acebd {return _cg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cegfe :=range _ecba {_cgb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cegfe );if _bbab .Get (_cegfe )!=nil {_cgb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _cgca :=_ddcd .Get (_cegfe );_cgca !=nil {_cgb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cegfe );_bbab .Set (_cegfe ,_cgca );};};_dffcc ,_cff =_ddcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bab .PdfIndirectObject );
_cgb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ddcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bbab .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eadfg ._baadg );};_eeag .updateObjectsDeep (_ecceg ,nil );
_eaeb .Append (_ecceg );};if _ ,_gfaag :=_eeag ._ecce .Seek (0,_ad .SeekStart );_gfaag !=nil {return _gfaag ;};_cafed :=make (map[SignatureHandler ]_ad .Writer );_agfb :=_bab .MakeArray ();for _ ,_acaf :=range _eeag ._dfea {if _dadf ,_bgg :=_bab .GetIndirect (_acaf );
_bgg {if _abedb ,_aabg :=_dadf .PdfObject .(*pdfSignDictionary );_aabg {_efge :=*_abedb ._agdf ;var _ggfeb error ;_cafed [_efge ],_ggfeb =_efge .NewDigest (_abedb ._efccbe );if _ggfeb !=nil {return _ggfeb ;};_agfb .Append (_bab .MakeInteger (0xfffff),_bab .MakeInteger (0xfffff));
};};};if _agfb .Len ()> 0{_agfb .Append (_bab .MakeInteger (0xfffff),_bab .MakeInteger (0xfffff));};for _ ,_bfdfc :=range _eeag ._dfea {if _dbgae ,_dcfg :=_bab .GetIndirect (_bfdfc );_dcfg {if _aeged ,_cgdbf :=_dbgae .PdfObject .(*pdfSignDictionary );_cgdbf {_aeged .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_agfb );
};};};_beca :=len (_cafed )> 0;var _bbgc _ad .Reader =_eeag ._ecce ;if _beca {_gdafa :=make ([]_ad .Writer ,0,len (_cafed ));for _ ,_gfbae :=range _cafed {_gdafa =append (_gdafa ,_gfbae );};_bbgc =_ad .TeeReader (_eeag ._ecce ,_ad .MultiWriter (_gdafa ...));
};_bbag ,_fcad :=_ad .Copy (w ,_bbgc );if _fcad !=nil {return _fcad ;};if len (_eeag ._dfea )==0{return nil ;};_eadfg ._fcdaa =_bbag ;_eadfg .ObjNumOffset =_eeag ._egaf ;_eadfg ._fbeeg =true ;_eadfg ._aeagd =_eeag ._defd ;_eadfg ._fgccf =_eeag ._gcb ;_eadfg ._fafbb =_eeag ._ccdd ;
_eadfg ._bbad =_eeag ._fgdb .PdfVersion ().Minor ;_eadfg ._efead =_eeag ._fbeac ;_fcbc :=_eeag ._dega .GetXrefType ();if _fcbc !=nil {_baaf :=*_fcbc ==_bab .XrefTypeObjectStream ;_eadfg ._acdced =&_baaf ;};_eadfg ._acagcb =map[_bab .PdfObject ]struct{}{};
_eadfg ._bbceb =[]_bab .PdfObject {};for _ ,_cbgb :=range _eeag ._dfea {if _ ,_gcad :=_eeag ._cbace [_cbgb ];_gcad {continue ;};_eadfg .addObject (_cbgb );};_acde :=w ;if _beca {_acde =_bcb .NewBuffer (nil );};if _agaee :=_eadfg .Write (_acde );_agaee !=nil {return _agaee ;
};if _beca {_bbff :=_acde .(*_bcb .Buffer ).Bytes ();_dafe :=_bab .MakeArray ();var _daef []*pdfSignDictionary ;var _ebgb int64 ;for _ ,_abdf :=range _eadfg ._bbceb {if _agaf ,_gcadf :=_bab .GetIndirect (_abdf );_gcadf {if _cfafb ,_fbdc :=_agaf .PdfObject .(*pdfSignDictionary );
_fbdc {_daef =append (_daef ,_cfafb );_bcca :=_cfafb ._cbbgc +int64 (_cfafb ._agced );_dafe .Append (_bab .MakeInteger (_ebgb ),_bab .MakeInteger (_bcca -_ebgb ));_ebgb =_cfafb ._cbbgc +int64 (_cfafb ._adaeb );};};};_dafe .Append (_bab .MakeInteger (_ebgb ),_bab .MakeInteger (_bbag +int64 (len (_bbff ))-_ebgb ));
_abdbd :=[]byte (_dafe .WriteString ());for _ ,_gaga :=range _daef {_abae :=int (_gaga ._cbbgc -_bbag );for _cedg :=_gaga ._ecacc ;_cedg < _gaga ._aabge ;_cedg ++{_bbff [_abae +_cedg ]=' ';};_cfdf :=_bbff [_abae +_gaga ._ecacc :_abae +_gaga ._aabge ];copy (_cfdf ,_abdbd );
};var _fddc int ;for _ ,_aebc :=range _daef {_faac :=int (_aebc ._cbbgc -_bbag );_eagfb :=_bbff [_fddc :_faac +_aebc ._agced ];_bbae :=*_aebc ._agdf ;_cafed [_bbae ].Write (_eagfb );_fddc =_faac +_aebc ._adaeb ;};for _ ,_fccf :=range _daef {_cgag :=_bbff [_fddc :];
_fdg :=*_fccf ._agdf ;_cafed [_fdg ].Write (_cgag );};for _ ,_dbgcd :=range _daef {_degcg :=int (_dbgcd ._cbbgc -_bbag );_bdgb :=*_dbgcd ._agdf ;_bdgg :=_cafed [_bdgb ];if _efed :=_bdgb .Sign (_dbgcd ._efccbe ,_bdgg );_efed !=nil {return _efed ;};_dbgcd ._efccbe .ByteRange =_dafe ;
_fagc :=[]byte (_dbgcd ._efccbe .Contents .WriteString ());for _bga :=_dbgcd ._ecacc ;_bga < _dbgcd ._aabge ;_bga ++{_bbff [_degcg +_bga ]=' ';};for _cfdb :=_dbgcd ._agced ;_cfdb < _dbgcd ._adaeb ;_cfdb ++{_bbff [_degcg +_cfdb ]=' ';};_dded :=_bbff [_degcg +_dbgcd ._ecacc :_degcg +_dbgcd ._aabge ];
copy (_dded ,_abdbd );_dded =_bbff [_degcg +_dbgcd ._agced :_degcg +_dbgcd ._adaeb ];copy (_dded ,_fagc );};_adgb :=_bcb .NewBuffer (_bbff );_ ,_fcad =_ad .Copy (w ,_adgb );if _fcad !=nil {return _fcad ;};};_eeag ._bedd =true ;return nil ;};func (_efeg *PdfReader )newPdfAnnotationLineFromDict (_dffc *_bab .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cfaf :=PdfAnnotationLine {};
_eaad ,_caed :=_efeg .newPdfAnnotationMarkupFromDict (_dffc );if _caed !=nil {return nil ,_caed ;};_cfaf .PdfAnnotationMarkup =_eaad ;_cfaf .L =_dffc .Get ("\u004c");_cfaf .BS =_dffc .Get ("\u0042\u0053");_cfaf .LE =_dffc .Get ("\u004c\u0045");_cfaf .IC =_dffc .Get ("\u0049\u0043");
_cfaf .LL =_dffc .Get ("\u004c\u004c");_cfaf .LLE =_dffc .Get ("\u004c\u004c\u0045");_cfaf .Cap =_dffc .Get ("\u0043\u0061\u0070");_cfaf .IT =_dffc .Get ("\u0049\u0054");_cfaf .LLO =_dffc .Get ("\u004c\u004c\u004f");_cfaf .CP =_dffc .Get ("\u0043\u0050");
_cfaf .Measure =_dffc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cfaf .CO =_dffc .Get ("\u0043\u004f");return &_cfaf ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _f .Time ){_fcccb .Lock ();defer _fcccb .Unlock ();_gddf =creationDate ;};func _badda ()_f .Time {_fcccb .Lock ();defer _fcccb .Unlock ();return _cdaa };func (_ccda *PdfReader )newPdfAnnotationFileAttachmentFromDict (_dceg *_bab .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_adb :=PdfAnnotationFileAttachment {};
_fbac ,_baeg :=_ccda .newPdfAnnotationMarkupFromDict (_dceg );if _baeg !=nil {return nil ,_baeg ;};_adb .PdfAnnotationMarkup =_fbac ;_adb .FS =_dceg .Get ("\u0046\u0053");_adb .Name =_dceg .Get ("\u004e\u0061\u006d\u0065");return &_adb ,nil ;};func (_dgcgb *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _gedca :=_dgcgb ._dbcbe ;
_gedca !=nil {return _gedca ;};return _dgcgb ._cfeec ;};func (_egcg *PdfReader )newPdfAnnotationRichMediaFromDict (_edd *_bab .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bcfe :=&PdfAnnotationRichMedia {};_bcfe .RichMediaSettings =_edd .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_bcfe .RichMediaContent =_edd .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _bcfe ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_eefe *PdfPage )GetContainingPdfObject ()_bab .PdfObject {return _eefe ._efdec };func (_dfab *PdfReader )loadAction (_cfbd _bab .PdfObject )(*PdfAction ,error ){if _bbdb ,_gfae :=_bab .GetIndirect (_cfbd );_gfae {_gfb ,_eecd :=_dfab .newPdfActionFromIndirectObject (_bbdb );
if _eecd !=nil {return nil ,_eecd ;};return _gfb ,nil ;}else if !_bab .IsNullObject (_cfbd ){return nil ,_cg .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bab .PdfObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bab .PdfObject ;_abddd []byte ;_aagc *_bab .PdfIndirectObject ;};var _edae =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_badb *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _badb .AlternateSpace ==nil {return nil ,_cg .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _badb .AlternateSpace .ColorToRGB (color );};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_aga :=NewPdfAction ();_ggg :=&PdfActionSetOCGState {};_ggg .PdfAction =_aga ;_aga .SetContext (_ggg );return _ggg ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_efeggd *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_efeggd .NumInputs {_cgb .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_cg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _efeggd ._gbdda ==nil {_fbaeb :=_efeggd .processSamples ();if _fbaeb !=nil {return nil ,_fbaeb ;};};_adcab :=_efeggd .Encode ;
if _adcab ==nil {_adcab =[]float64 {};for _bcfg :=0;_bcfg < len (_efeggd .Size );_bcfg ++{_adcab =append (_adcab ,0);_adcab =append (_adcab ,float64 (_efeggd .Size [_bcfg ]-1));};};_baaga :=_efeggd .Decode ;if _baaga ==nil {_baaga =_efeggd .Range ;};_efecb :=make ([]int ,len (x ));
for _bgcag :=0;_bgcag < len (x );_bgcag ++{_beefd :=x [_bgcag ];_eegf :=_ab .Min (_ab .Max (_beefd ,_efeggd .Domain [2*_bgcag ]),_efeggd .Domain [2*_bgcag +1]);_bbcab :=_ca .LinearInterpolate (_eegf ,_efeggd .Domain [2*_bgcag ],_efeggd .Domain [2*_bgcag +1],_adcab [2*_bgcag ],_adcab [2*_bgcag +1]);
_ebgd :=_ab .Min (_ab .Max (_bbcab ,0),float64 (_efeggd .Size [_bgcag ]-1));_abcfa :=int (_ab .Floor (_ebgd +0.5));if _abcfa < 0{_abcfa =0;}else if _abcfa > _efeggd .Size [_bgcag ]{_abcfa =_efeggd .Size [_bgcag ]-1;};_efecb [_bgcag ]=_abcfa ;};_ccgge :=_efecb [0];
for _ecaa :=1;_ecaa < _efeggd .NumInputs ;_ecaa ++{_fbcbc :=_efecb [_ecaa ];for _bgdcc :=0;_bgdcc < _ecaa ;_bgdcc ++{_fbcbc *=_efeggd .Size [_bgdcc ];};_ccgge +=_fbcbc ;};_ccgge *=_efeggd .NumOutputs ;var _edgef []float64 ;for _aegeb :=0;_aegeb < _efeggd .NumOutputs ;
_aegeb ++{_gdecg :=_ccgge +_aegeb ;if _gdecg >=len (_efeggd ._gbdda ){_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_cffd :=_efeggd ._gbdda [_gdecg ];_fbegf :=_ca .LinearInterpolate (float64 (_cffd ),0,_ab .Pow (2,float64 (_efeggd .BitsPerSample )),_baaga [2*_aegeb ],_baaga [2*_aegeb +1]);_gbfc :=_ab .Min (_ab .Max (_fbegf ,_efeggd .Range [2*_aegeb ]),_efeggd .Range [2*_aegeb +1]);
_edgef =append (_edgef ,_gbfc );};return _edgef ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bffgb *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bffgb .Base .GetNumComponents ();_bgff :=int (vals [0])*N ;
if _bgff < 0||(_bgff +N -1)>=len (_bffgb ._abddd ){return nil ,_cg .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_ccbe :=_bffgb ._abddd [_bgff :_bgff +N ];var _fefa []float64 ;for _ ,_bdbd :=range _ccbe {_fefa =append (_fefa ,float64 (_bdbd )/255.0);
};_bbaa ,_dedf :=_bffgb .Base .ColorFromFloats (_fefa );if _dedf !=nil {return nil ,_dedf ;};return _bbaa ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_gdea *OutlineItem )Add (item *OutlineItem ){_gdea .Entries =append (_gdea .Entries ,item )};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_gacg *PdfPageResources )GetPatternByName (keyName _bab .PdfObjectName )(*PdfPattern ,bool ){if _gacg .Pattern ==nil {return nil ,false ;};_bbdd ,_dbgeg :=_bab .TraceToDirectObject (_gacg .Pattern ).(*_bab .PdfObjectDictionary );if !_dbgeg {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gacg .Pattern );
return nil ,false ;};if _adcbe :=_bbdd .Get (keyName );_adcbe !=nil {_bceee ,_bebdg :=_bfddf (_adcbe );if _bebdg !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_bebdg );
return nil ,false ;};return _bceee ,true ;};return nil ,false ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gccaa *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gccaa .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// L returns the value of the L component of the color.
func (_geeab *PdfColorLab )L ()float64 {return _geeab [0]};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_baffgg pdfFontSimple )GetCharMetrics (code _ea .CharCode )(_cb .CharMetrics ,bool ){if _dcca ,_ddab :=_baffgg ._dbfe [code ];_ddab {return _cb .CharMetrics {Wx :_dcca },true ;};if _cb .IsStdFont (_cb .StdFontName (_baffgg ._cefg )){return _cb .CharMetrics {Wx :250},true ;
};return _cb .CharMetrics {},false ;};func (_aade *PdfReader )newPdfActionURIFromDict (_cfe *_bab .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cfe .Get ("\u0055\u0052\u0049"),IsMap :_cfe .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bab .PdfObject ;Q _bab .PdfObject ;RC _bab .PdfObject ;DS _bab .PdfObject ;CL _bab .PdfObject ;IT _bab .PdfObject ;BE _bab .PdfObject ;RD _bab .PdfObject ;BS _bab .PdfObject ;LE _bab .PdfObject ;
};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func (_egccd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _egccd ._fdcebg .GetCrypter ()!=nil &&!_egccd ._fdcebg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cagfgd :=_egccd ._bbcgg ;_eabfd :=_cagfgd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _eabfd ==nil {return nil ,nil ;};_dbbb ,_ :=_bab .GetIndirect (_eabfd );_eabfd =_bab .TraceToDirectObject (_eabfd );if _bab .IsNullObject (_eabfd ){_cgb .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_egee ,_bddgf :=_bab .GetDict (_eabfd );if !_bddgf {_cgb .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eabfd );_cgb .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_eabfd );};_cgb .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_cgb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_egccd ._geegb {_egcag :=_egccd .traverseObjectData (_egee );
if _egcag !=nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_egcag );
return nil ,_egcag ;};};_bdfgg ,_gdacc :=_egccd .newPdfAcroFormFromDict (_dbbb ,_egee );if _gdacc !=nil {return nil ,_gdacc ;};return _bdfgg ,nil ;};func _eggca ()*modelManager {_dabc :=modelManager {};_dabc ._dfgfb =map[PdfModel ]_bab .PdfObject {};_dabc ._bcga =map[_bab .PdfObject ]PdfModel {};
return &_dabc ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_gfdc *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eaaa :=_gfdc .actualFont ();if _eaaa ==nil {_cgb .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_gfdc ._dfbfg );
return _cb .CharMetrics {},false ;};if _fbae ,_aacc :=_eaaa .GetRuneMetrics (r );_aacc {return _fbae ,true ;};if _fdde ,_dbdb :=_gfdc .GetFontDescriptor ();_dbdb ==nil &&_fdde !=nil {return _cb .CharMetrics {Wx :_fdde ._acddd },true ;};_cgb .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfdc );
return _cb .CharMetrics {},false ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bab .PdfObject ;IsMap _bab .PdfObject ;};func _eecb (_fffb *_bab .PdfObjectDictionary )*VRI {_acdf ,_ :=_bab .GetString (_fffb .Get ("\u0054\u0055"));_acfeb ,_ :=_bab .GetString (_fffb .Get ("\u0054\u0053"));return &VRI {Cert :_bacf (_fffb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_bacf (_fffb .Get ("\u004f\u0043\u0053\u0050")),CRL :_bacf (_fffb .Get ("\u0043\u0052\u004c")),TU :_acdf ,TS :_acfeb };
};

// CustomKeys returns all custom info keys as list.
func (_acff *PdfInfo )CustomKeys ()[]string {if _acff ._bgef ==nil {return nil ;};_abbe :=make ([]string ,len (_acff ._bgef .Keys ()));for _ ,_fgaag :=range _acff ._bgef .Keys (){_abbe =append (_abbe ,_fgaag .String ());};return _abbe ;};func _bfddf (_cbagd _bab .PdfObject )(*PdfPattern ,error ){_cgbaad :=&PdfPattern {};
var _fcfa *_bab .PdfObjectDictionary ;if _ggge ,_gebf :=_bab .GetIndirect (_cbagd );_gebf {_cgbaad ._ecege =_ggge ;_dfbb ,_fgab :=_ggge .PdfObject .(*_bab .PdfObjectDictionary );if !_fgab {_cgb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_ggge .PdfObject );
return nil ,_bab .ErrTypeError ;};_fcfa =_dfbb ;}else if _dbccf ,_bcafa :=_bab .GetStream (_cbagd );_bcafa {_cgbaad ._ecege =_dbccf ;_fcfa =_dbccf .PdfObjectDictionary ;}else {_cgb .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_cbagd );
return nil ,_bab .ErrTypeError ;};_dcgfe :=_fcfa .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _dcgfe ==nil {_cgb .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfeacc ,_baaefa :=_dcgfe .(*_bab .PdfObjectInteger );if !_baaefa {_cgb .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dcgfe );
return nil ,_bab .ErrTypeError ;};if *_dfeacc !=1&&*_dfeacc !=2{_cgb .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_dfeacc );return nil ,_bab .ErrRangeError ;
};_cgbaad .PatternType =int64 (*_dfeacc );switch *_dfeacc {case 1:_acad ,_dggc :=_deeda (_fcfa );if _dggc !=nil {return nil ,_dggc ;};_acad .PdfPattern =_cgbaad ;_cgbaad ._gaaea =_acad ;return _cgbaad ,nil ;case 2:_ffea ,_afcb :=_ggdfb (_fcfa );if _afcb !=nil {return nil ,_afcb ;
};_ffea .PdfPattern =_cgbaad ;_cgbaad ._gaaea =_ffea ;return _cgbaad ,nil ;};return nil ,_cg .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bab .PdfObject ;V _bab .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_geba *PdfColorspaceLab )GetNumComponents ()int {return 3};func (_ccafc SignatureValidationResult )String ()string {var _gbceg _bcb .Buffer ;_gbceg .WriteString (_d .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ccafc .Name ));if _ccafc .Date ._gfgge > 0{_gbceg .WriteString (_d .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ccafc .Date .ToGoTime ().String ()));
}else {_gbceg .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ccafc .Reason )> 0{_gbceg .WriteString (_d .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccafc .Reason ));
}else {_gbceg .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_ccafc .Location )> 0{_gbceg .WriteString (_d .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccafc .Location ));
}else {_gbceg .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_ccafc .ContactInfo )> 0{_gbceg .WriteString (_d .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ccafc .ContactInfo ));
}else {_gbceg .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_gbceg .WriteString (_d .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ccafc .Fields )));
if _ccafc .IsSigned {_gbceg .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_gbceg .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _ccafc .IsVerified {_gbceg .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_gbceg .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _ccafc .IsTrusted {_gbceg .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_gbceg .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_ccafc .GeneralizedTime .IsZero (){_gbceg .WriteString (_d .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ccafc .GeneralizedTime .String ()));};return _gbceg .String ();};var _ pdfFont =(*pdfFontSimple )(nil );


// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject implements interface PdfModel.
func (_bfd *PdfActionMovie )ToPdfObject ()_bab .PdfObject {_bfd .PdfAction .ToPdfObject ();_cba :=_bfd ._ec ;_bgc :=_cba .PdfObject .(*_bab .PdfObjectDictionary );_bgc .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeMovie )));_bgc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bfd .Annotation );
_bgc .SetIfNotNil ("\u0054",_bfd .T );_bgc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bfd .Operation );return _cba ;};func _aabc (_agfbb _bab .PdfObject )(*PdfFunctionType3 ,error ){_dbcff :=&PdfFunctionType3 {};var _gabf *_bab .PdfObjectDictionary ;
if _agebe ,_fgce :=_agfbb .(*_bab .PdfIndirectObject );_fgce {_gdcf ,_aeegg :=_agebe .PdfObject .(*_bab .PdfObjectDictionary );if !_aeegg {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};
_dbcff ._ddedg =_agebe ;_gabf =_gdcf ;}else if _eaee ,_bbffg :=_agfbb .(*_bab .PdfObjectDictionary );_bbffg {_gabf =_eaee ;}else {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aabgcd ,_cgabg :=_bab .TraceToDirectObject (_gabf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bab .PdfObjectArray );
if !_cgabg {_cgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _aabgcd .Len ()!=2{_cgb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_caadb ,_adadg :=_aabgcd .ToFloat64Array ();
if _adadg !=nil {return nil ,_adadg ;};_dbcff .Domain =_caadb ;_aabgcd ,_cgabg =_bab .TraceToDirectObject (_gabf .Get ("\u0052\u0061\u006eg\u0065")).(*_bab .PdfObjectArray );if _cgabg {if _aabgcd .Len ()< 0||_aabgcd .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fgdf ,_aecg :=_aabgcd .ToFloat64Array ();if _aecg !=nil {return nil ,_aecg ;};_dbcff .Range =_fgdf ;};_aabgcd ,_cgabg =_bab .TraceToDirectObject (_gabf .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bab .PdfObjectArray );if !_cgabg {_cgb .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dbcff .Functions =[]PdfFunction {};
for _ ,_cgdge :=range _aabgcd .Elements (){_ddagf ,_adefb :=_cdegf (_cgdge );if _adefb !=nil {return nil ,_adefb ;};_dbcff .Functions =append (_dbcff .Functions ,_ddagf );};_aabgcd ,_cgabg =_bab .TraceToDirectObject (_gabf .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bab .PdfObjectArray );
if !_cgabg {_cgb .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_dfbde ,_adadg :=_aabgcd .ToFloat64Array ();if _adadg !=nil {return nil ,_adadg ;};_dbcff .Bounds =_dfbde ;if len (_dbcff .Bounds )!=len (_dbcff .Functions )-1{_cgb .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_dbcff .Bounds ),len (_dbcff .Functions ));
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aabgcd ,_cgabg =_bab .TraceToDirectObject (_gabf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bab .PdfObjectArray );if !_cgabg {_cgb .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_efabg ,_adadg :=_aabgcd .ToFloat64Array ();
if _adadg !=nil {return nil ,_adadg ;};_dbcff .Encode =_efabg ;if len (_dbcff .Encode )!=2*len (_dbcff .Functions ){_cgb .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_dbcff .Encode ),len (_dbcff .Functions ));
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _dbcff ,nil ;};

// WriteToFile writes the output PDF to file.
func (_abcac *PdfWriter )WriteToFile (outputFilePath string )error {_fbgbg ,_edbff :=_de .Create (outputFilePath );if _edbff !=nil {return _edbff ;};defer _fbgbg .Close ();return _abcac .Write (_fbgbg );};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_agbgf *PdfField )ToPdfObject ()_bab .PdfObject {_decca :=_agbgf ._fced ;_cbaa :=_decca .PdfObject .(*_bab .PdfObjectDictionary );_dgagc :=_bab .MakeArray ();for _ ,_aceg :=range _agbgf .Kids {_dgagc .Append (_aceg .ToPdfObject ());};for _ ,_cdfcb :=range _agbgf .Annotations {if _cdfcb ._bcc !=_agbgf ._fced {_dgagc .Append (_cdfcb .GetContext ().ToPdfObject ());
};};if _agbgf .Parent !=nil {_cbaa .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_agbgf .Parent .GetContainingPdfObject ());};if _dgagc .Len ()> 0{_cbaa .Set ("\u004b\u0069\u0064\u0073",_dgagc );};_cbaa .SetIfNotNil ("\u0046\u0054",_agbgf .FT );
_cbaa .SetIfNotNil ("\u0054",_agbgf .T );_cbaa .SetIfNotNil ("\u0054\u0055",_agbgf .TU );_cbaa .SetIfNotNil ("\u0054\u004d",_agbgf .TM );_cbaa .SetIfNotNil ("\u0046\u0066",_agbgf .Ff );_cbaa .SetIfNotNil ("\u0056",_agbgf .V );_cbaa .SetIfNotNil ("\u0044\u0056",_agbgf .DV );
_cbaa .SetIfNotNil ("\u0041\u0041",_agbgf .AA );return _decca ;};func (_agbg *PdfReader )newPdfAnnotationCaretFromDict (_ebbg *_bab .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_fbde :=PdfAnnotationCaret {};_bfag ,_eag :=_agbg .newPdfAnnotationMarkupFromDict (_ebbg );
if _eag !=nil {return nil ,_eag ;};_fbde .PdfAnnotationMarkup =_bfag ;_fbde .RD =_ebbg .Get ("\u0052\u0044");_fbde .Sy =_ebbg .Get ("\u0053\u0079");return &_fbde ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_bbfa *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_becb *pdfFontSimple )SetEncoder (encoder _ea .TextEncoder ){_becb ._agbga =encoder };

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_afac :=PdfColorDeviceGray (grayVal );return &_afac ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_eadb :=NewPdfAnnotation ();_decg :=&PdfAnnotationInk {};_decg .PdfAnnotation =_eadb ;_decg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eadb .SetContext (_decg );return _decg ;};func (_cafec *XObjectImage )getParamsDict ()*_bab .PdfObjectDictionary {_bcagaf :=_bab .MakeDict ();
_bcagaf .Set ("\u0057\u0069\u0064t\u0068",_bab .MakeInteger (*_cafec .Width ));_bcagaf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bab .MakeInteger (*_cafec .Height ));_bcagaf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bab .MakeInteger (int64 (_cafec .ColorSpace .GetNumComponents ())));
_bcagaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bab .MakeInteger (*_cafec .BitsPerComponent ));return _bcagaf ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_ffbae *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_ffbae .HiVal )};};func (_dfeef *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_eedg *modelManager )GetPrimitiveFromModel (model PdfModel )_bab .PdfObject {_gaee ,_baggae :=_eedg ._dfgfb [model ];if !_baggae {return nil ;};return _gaee ;};

// ToPdfObject implements interface PdfModel.
func (_abed *PdfActionResetForm )ToPdfObject ()_bab .PdfObject {_abed .PdfAction .ToPdfObject ();_dfg :=_abed ._ec ;_cfca :=_dfg .PdfObject .(*_bab .PdfObjectDictionary );_cfca .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeResetForm )));_cfca .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_abed .Fields );
_cfca .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_abed .Flags );return _dfg ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_agfg *BorderStyle )GetPdfName ()string {switch *_agfg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_ffdbd *PdfPage )Size ()(float64 ,float64 ,error ){_daccd ,_ddbgb :=_ffdbd .GetMediaBox ();if _ddbgb !=nil {return 0,0,_ddbgb ;};_facf ,_dafc :=_daccd .Width (),_daccd .Height ();if _bebdd :=_ffdbd .Rotate ;_bebdd !=nil &&*_bebdd %360!=0&&*_bebdd %90==0{if _bcaec :=(360+*_bebdd %360)%360;
_bcaec ==90||_bcaec ==270{_facf ,_dafc =_dafc ,_facf ;};};return _facf ,_dafc ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bab .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bab .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_edgc ,_aafebb :=encoder .EncodeBytes (img .Data );
if _aafebb !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_aafebb );return nil ,_aafebb ;};_abdfbf :=NewXObjectImage ();_affga :=img .Width ;_eacfg :=img .Height ;
_abdfbf .Width =&_affga ;_abdfbf .Height =&_eacfg ;_bgege :=img .BitsPerComponent ;_abdfbf .BitsPerComponent =&_bgege ;_abdfbf .Filter =encoder ;_abdfbf .Stream =_edgc ;if cs ==nil {if img .ColorComponents ==1{_abdfbf .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_abdfbf .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_abdfbf .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_abdfbf .ColorSpace =cs ;};if len (img ._fffdd )!=0{_ebdg :=NewXObjectImage ();_ebdg .Filter =encoder ;_agaaf ,_ddgff :=encoder .EncodeBytes (img ._fffdd );if _ddgff !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ddgff );
return nil ,_ddgff ;};_ebdg .Stream =_agaaf ;_ebdg .BitsPerComponent =_abdfbf .BitsPerComponent ;_ebdg .Width =&img .Width ;_ebdg .Height =&img .Height ;_ebdg .ColorSpace =NewPdfColorspaceDeviceGray ();_abdfbf .SMask =_ebdg .ToPdfObject ();}else {_abdfbf .SMask =xobjIn .SMask ;
_abdfbf .ImageMask =xobjIn .ImageMask ;if _abdfbf .ColorSpace .GetNumComponents ()==1{_afffc (_abdfbf );};};return _abdfbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gfa *PdfActionGoTo )ToPdfObject ()_bab .PdfObject {_gfa .PdfAction .ToPdfObject ();_fbf :=_gfa ._ec ;_ebd :=_fbf .PdfObject .(*_bab .PdfObjectDictionary );_ebd .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeGoTo )));_ebd .SetIfNotNil ("\u0044",_gfa .D );
return _fbf ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cgabc *PdfPage )AppendContentStream (contentStr string )error {_fceec ,_ddgd :=_cgabc .GetContentStreams ();if _ddgd !=nil {return _ddgd ;};if len (_fceec )==0{_fceec =[]string {contentStr };return _cgabc .SetContentStreams (_fceec ,_bab .NewFlateEncoder ());
};var _aafaaa _bcb .Buffer ;_aafaaa .WriteString (_fceec [len (_fceec )-1]);_aafaaa .WriteString ("\u000a");_aafaaa .WriteString (contentStr );_fceec [len (_fceec )-1]=_aafaaa .String ();return _cgabc .SetContentStreams (_fceec ,_bab .NewFlateEncoder ());
};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_fdecd *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _fdecd ._gaaea .(*PdfShadingPattern );};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gffbf *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_daea ,_daecb :=color .(*PdfColorDeviceRGB );if !_daecb {_cgb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _daea ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_fdba *PdfFont )BaseFont ()string {return _fdba .baseFields ()._cefg };

// String implements interface PdfObject.
func (_eb *PdfAction )String ()string {_eee ,_fdc :=_eb .ToPdfObject ().(*_bab .PdfIndirectObject );if _fdc {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eb ._dcb ,_eee .PdfObject .String ());};return "";};

// A returns the value of the A component of the color.
func (_gdcb *PdfColorCalRGB )A ()float64 {return _gdcb [0]};func _fafaf (_gegef _bab .PdfObject ,_cdfb *PdfReader )(*OutlineDest ,error ){_fbbfg ,_dgec :=_bab .GetArray (_gegef );if !_dgec {return nil ,_cg .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_aeagb :=_fbbfg .Len ();if _aeagb < 2{return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_aeagb );
};_bcddee :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cedec :=_fbbfg .Get (0);if _fffaf ,_bdggd :=_bab .GetIndirect (_cedec );_bdggd {if _ ,_cfbdf ,_faaeb :=_cdfb .PageFromIndirectObject (_fffaf );_faaeb ==nil {_bcddee .Page =int64 (_cfbdf -1);}else {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_fffaf );
};_bcddee .PageObj =_fffaf ;}else if _febgd ,_gbba :=_bab .GetIntVal (_cedec );_gbba {if _febgd >=0&&_febgd < len (_cdfb .PageList ){_bcddee .PageObj =_cdfb .PageList [_febgd ].GetPageAsIndirectObject ();}else {_cgb .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_febgd );
};_bcddee .Page =int64 (_febgd );}else {return nil ,_d .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cedec );};_agcf ,_dgec :=_bab .GetNameVal (_fbbfg .Get (1));
if !_dgec {_cgb .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fbbfg .Get (1));
return _bcddee ,nil ;};switch _agcf {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _aeagb > 2{_bcddee .Y ,_ =_bab .GetNumberAsFloat (_bab .TraceToDirectObject (_fbbfg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _aeagb > 2{_bcddee .X ,_ =_bab .GetNumberAsFloat (_bab .TraceToDirectObject (_fbbfg .Get (2)));
};case "\u0058\u0059\u005a":if _aeagb > 4{_bcddee .X ,_ =_bab .GetNumberAsFloat (_bab .TraceToDirectObject (_fbbfg .Get (2)));_bcddee .Y ,_ =_bab .GetNumberAsFloat (_bab .TraceToDirectObject (_fbbfg .Get (3)));_bcddee .Zoom ,_ =_bab .GetNumberAsFloat (_bab .TraceToDirectObject (_fbbfg .Get (4)));
};default:_agcf ="\u0046\u0069\u0074";};_bcddee .Mode =_agcf ;return _bcddee ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bab .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ffga *_bab .PdfIndirectObject ;};

// WriteToFile writes the Appender output to file specified by path.
func (_caff *PdfAppender )WriteToFile (outputPath string )error {_eeg ,_dbfa :=_de .Create (outputPath );if _dbfa !=nil {return _dbfa ;};defer _eeg .Close ();return _caff .Write (_eeg );};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_bbcfc *PdfReader )GetObjectNums ()[]int {return _bbcfc ._fdcebg .GetObjectNums ()};func (_bfdc *PdfReader )newPdfAnnotationCircleFromDict (_eecc *_bab .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_gddc :=PdfAnnotationCircle {};_deda ,_afe :=_bfdc .newPdfAnnotationMarkupFromDict (_eecc );
if _afe !=nil {return nil ,_afe ;};_gddc .PdfAnnotationMarkup =_deda ;_gddc .BS =_eecc .Get ("\u0042\u0053");_gddc .IC =_eecc .Get ("\u0049\u0043");_gddc .BE =_eecc .Get ("\u0042\u0045");_gddc .RD =_eecc .Get ("\u0052\u0044");return &_gddc ,nil ;};func _aegd (_bagd _bab .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gddb :=&PdfColorspaceDeviceNAttributes {};
var _bbagd *_bab .PdfObjectDictionary ;switch _dcea :=_bagd .(type ){case *_bab .PdfIndirectObject :_gddb ._gacd =_dcea ;var _cafede bool ;_bbagd ,_cafede =_dcea .PdfObject .(*_bab .PdfObjectDictionary );if !_cafede {_cgb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bab .PdfObjectDictionary :_bbagd =_dcea ;case *_bab .PdfObjectReference :_gbece :=_dcea .Resolve ();return _aegd (_gbece );default:_cgb .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fccc :=_bbagd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fccc !=nil {_gaed ,_dcacc :=_bab .TraceToDirectObject (_fccc ).(*_bab .PdfObjectName );if !_dcacc {_cgb .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gddb .Subtype =_gaed ;};if _dccb :=_bbagd .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_dccb !=nil {_gddb .Colorants =_dccb ;};if _bgeg :=_bbagd .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_bgeg !=nil {_gddb .Process =_bgeg ;};if _dgca :=_bbagd .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dgca !=nil {_gddb .MixingHints =_dgca ;};return _gddb ,nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ba .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ba .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ba .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_fecce *PdfAppender ;_gcac *DSS ;};

// ToInteger convert to an integer format.
func (_aefe *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_bdb :=_ab .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_bdb *_aefe .C ()),uint32 (_bdb *_aefe .M ()),uint32 (_bdb *_aefe .Y ()),uint32 (_bdb *_aefe .K ())};};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ddeae :=&PdfPageResourcesColorspaces {};_ddeae .Names =[]string {};_ddeae .Colorspaces =map[string ]PdfColorspace {};_ddeae ._afeda =&_bab .PdfIndirectObject {};return _ddeae ;};func _afcdf (_fbef []byte )[]byte {const _geaafa =52845;
const _gfdb =22719;_edccb :=55665;for _ ,_dcdc :=range _fbef [:4]{_edccb =(int (_dcdc )+_edccb )*_geaafa +_gfdb ;};_agdbb :=make ([]byte ,len (_fbef )-4);for _eefb ,_ebgeg :=range _fbef [4:]{_agdbb [_eefb ]=byte (int (_ebgeg )^_edccb >>8);_edccb =(int (_ebgeg )+_edccb )*_geaafa +_gfdb ;
};return _agdbb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eecggg pdfFontType0 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){if _eecggg .DescendantFont ==nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_eecggg );
return _cb .CharMetrics {},false ;};return _eecggg .DescendantFont .GetRuneMetrics (r );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bcad *PdfField )FullName ()(string ,error ){var _fbaf _bcb .Buffer ;_bfdfcc :=[]string {};if _bcad .T !=nil {_bfdfcc =append (_bfdfcc ,_bcad .T .Decoded ());};_fbgf :=map[*PdfField ]bool {};_fbgf [_bcad ]=true ;_fdbgg :=_bcad .Parent ;for _fdbgg !=nil {if _ ,_edaca :=_fbgf [_fdbgg ];
_edaca {return _fbaf .String (),_cg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _fdbgg .T ==nil {return _fbaf .String (),_cg .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_bfdfcc =append (_bfdfcc ,_fdbgg .T .Decoded ());_fbgf [_fdbgg ]=true ;_fdbgg =_fdbgg .Parent ;};for _ecded :=len (_bfdfcc )-1;_ecded >=0;_ecded --{_fbaf .WriteString (_bfdfcc [_ecded ]);if _ecded > 0{_fbaf .WriteString ("\u002e");};};return _fbaf .String (),nil ;
};

// Encoder returns the font's text encoder.
func (_aadgf pdfFontType0 )Encoder ()_ea .TextEncoder {return _aadgf ._aecf };func (_ebbf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_gaa *_bab .PdfIndirectObject ;};

// PartialName returns the partial name of the field.
func (_aeff *PdfField )PartialName ()string {_ggag :="";if _aeff .T !=nil {_ggag =_aeff .T .Decoded ();}else {_cgb .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _ggag ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_gbaad *Image )ToJBIG2Image ()(*_bab .JBIG2Image ,error ){_ddced ,_gdcg :=_gbaad .ToGoImage ();if _gdcg !=nil {return nil ,_gdcg ;};return _bab .GoImageToJBIG2 (_ddced ,_bab .JB2ImageAutoThreshold );};func (_efcff *DSS )addCRLs (_becfe [][]byte )([]*_bab .PdfObjectStream ,error ){return _efcff .add (&_efcff .CRLs ,_efcff ._egfb ,_becfe );
};func (_ccag *pdfFontSimple )addEncoding ()error {var (_fbce string ;_fbcdf map[_ea .CharCode ]_ea .GlyphName ;_eacea _ea .SimpleEncoder ;);if _ccag .Encoder ()!=nil {_fcffd ,_edacc :=_ccag .Encoder ().(_ea .SimpleEncoder );if _edacc &&_fcffd !=nil {_fbce =_fcffd .BaseName ();
};};if _ccag .Encoding !=nil {_cbeae ,_fffe ,_efce :=_ccag .getFontEncoding ();if _efce !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ccag ._cefg ,_ccag ._egbf ,_ccag .Encoding ,_ccag .Encoding ,_efce );
return _efce ;};if _cbeae !=""{_fbce =_cbeae ;};_fbcdf =_fffe ;_eacea ,_efce =_ea .NewSimpleTextEncoder (_fbce ,_fbcdf );if _efce !=nil {return _efce ;};};if _eacea ==nil {_fbbdd :=_ccag ._dbcbe ;if _fbbdd !=nil {switch _ccag ._egbf {case "\u0054\u0079\u0070e\u0031":if _fbbdd .fontFile !=nil &&_fbbdd .fontFile ._bgac !=nil {_cgb .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_eacea =_fbbdd .fontFile ._bgac ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fbbdd ._cgebd !=nil {_cgb .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_abbab ,_gcaac :=_fbbdd ._cgebd .MakeEncoder ();
if _gcaac ==nil {_eacea =_abbab ;};};};};};if _eacea !=nil {if _fbcdf !=nil {_cgb .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fbcdf ,_ccag .baseFields ());
_eacea =_ea .ApplyDifferences (_eacea ,_fbcdf );};_ccag .SetEncoder (_eacea );};return nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bdaa *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cg .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_dcff :=field .V ;if _dcff ==nil {return _cg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bdeg :=pageNum -1;
if _bdeg < 0||_bdeg > len (_bdaa ._gdad )-1{return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_fcag :=_bdaa .Reader .PageList [_bdeg ];field .P =_fcag .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bab .MakeString (_d .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_fcag .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bdaa ._dbff ==_bdaa ._fgdb .AcroForm {_bdaa ._dbff =_bdaa .Reader .AcroForm ;};_bacga :=_bdaa ._dbff ;if _bacga ==nil {_bacga =NewPdfAcroForm ();};_bacga .SigFlags =_bab .MakeInteger (3);
_gdba :=append (_bacga .AllFields (),field .PdfField );_bacga .Fields =&_gdba ;_bdaa .ReplaceAcroForm (_bacga );_bdaa .UpdatePage (_fcag );_bdaa ._gdad [_bdeg ]=_fcag ;return nil ;};func (_gegbf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gegbf ._dbcbe };


// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_cag :=NewPdfAnnotation ();_dgfg :=&PdfAnnotationUnderline {};_dgfg .PdfAnnotation =_cag ;_dgfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cag .SetContext (_dgfg );return _dgfg ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dcfd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cg .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_bcfdf ,_bgga :=_ca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fffdd ,img ._dgbgc );if _bgga !=nil {return img ,_bgga ;};_gfcg ,_bgga :=_ca .NRGBAConverter .Convert (_bcfdf );if _bgga !=nil {return img ,_bgga ;
};_cced :=_bdaad (_gfcg .Base ());_cgb .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_cgb .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_cgb .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cced .Data );
_cgb .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cced );return _cced ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abbgfe *PdfShadingType3 )ToPdfObject ()_bab .PdfObject {_abbgfe .PdfShading .ToPdfObject ();_efaf ,_fddddb :=_abbgfe .getShadingDict ();if _fddddb !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _abbgfe .Coords !=nil {_efaf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_abbgfe .Coords );};if _abbgfe .Domain !=nil {_efaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abbgfe .Domain );};if _abbgfe .Function !=nil {if len (_abbgfe .Function )==1{_efaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abbgfe .Function [0].ToPdfObject ());
}else {_ebace :=_bab .MakeArray ();for _ ,_gcec :=range _abbgfe .Function {_ebace .Append (_gcec .ToPdfObject ());};_efaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ebace );};};if _abbgfe .Extend !=nil {_efaf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_abbgfe .Extend );
};return _abbgfe ._bfgd ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_adac :=&PdfFilespec {};_adac ._cebg =_bab .MakeIndirectObject (_bab .MakeDict ());return _adac ;};func (_bce *PdfReader )newPdfActionTransFromDict (_aaabb *_bab .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_aaabb .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func _cdegf (_dabbf _bab .PdfObject )(PdfFunction ,error ){_dabbf =_bab .ResolveReference (_dabbf );if _ebfee ,_ceeb :=_dabbf .(*_bab .PdfObjectStream );_ceeb {_feabc :=_ebfee .PdfObjectDictionary ;_adabc ,_fafce :=_feabc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bab .PdfObjectInteger );
if !_fafce {_cgb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_adabc ==0{return _cbbca (_ebfee );}else if *_adabc ==4{return _cfgbe (_ebfee );}else {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _adeb ,_addd :=_dabbf .(*_bab .PdfIndirectObject );
_addd {_ggfdd ,_eefc :=_adeb .PdfObject .(*_bab .PdfObjectDictionary );if !_eefc {_cgb .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_afag ,_eefc :=_ggfdd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bab .PdfObjectInteger );
if !_eefc {_cgb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_afag ==2{return _cgfaf (_adeb );}else if *_afag ==3{return _aabc (_adeb );}else {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _afgeg ,_fefaa :=_dabbf .(*_bab .PdfObjectDictionary );
_fefaa {_bgee ,_ggaaf :=_afgeg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bab .PdfObjectInteger );if !_ggaaf {_cgb .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bgee ==2{return _cgfaf (_afgeg );}else if *_bgee ==3{return _aabc (_afgeg );
}else {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_cgb .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dabbf );
return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};var _cagg =_c .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cffgf *Image )ConvertToBinary ()error {if _cffgf .ColorComponents ==1&&_cffgf .BitsPerComponent ==1{return nil ;};_ecgc ,_adbff :=_cffgf .ToGoImage ();if _adbff !=nil {return _adbff ;};_fafg ,_adbff :=_ca .MonochromeConverter .Convert (_ecgc );if _adbff !=nil {return _adbff ;
};_cffgf .Data =_fafg .Base ().Data ;_cffgf ._fffdd ,_adbff =_ca .ScaleAlphaToMonochrome (_cffgf ._fffdd ,int (_cffgf .Width ),int (_cffgf .Height ));if _adbff !=nil {return _adbff ;};_cffgf .BitsPerComponent =1;_cffgf .ColorComponents =1;_cffgf ._dgbgc =nil ;
return nil ;};func (_cgbf fontCommon )coreString ()string {_bbgcf :="";if _cgbf ._dbcbe !=nil {_bbgcf =_cgbf ._dbcbe .String ();};return _d .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_cgbf ._egbf ,_cgbf ._cefg ,_cgbf ._ccfcg ,_cgbf ._bega ,_cgbf ._debg !=nil ,_cgbf .fontFlags (),_bbgcf );
};func (_cgcf *PdfPattern )getDict ()*_bab .PdfObjectDictionary {if _bbdbgf ,_gddcd :=_cgcf ._ecege .(*_bab .PdfIndirectObject );_gddcd {_fafga ,_adgad :=_bbdbgf .PdfObject .(*_bab .PdfObjectDictionary );if !_adgad {return nil ;};return _fafga ;}else if _eefec ,_gccg :=_cgcf ._ecege .(*_bab .PdfObjectStream );
_gccg {return _eefec .PdfObjectDictionary ;}else {_cgb .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_cgcf ._ecege );
return nil ;};};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_gafa :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_gafa ;};type pdfFontType0 struct{fontCommon ;_aaff *_bab .PdfIndirectObject ;_aecf _ea .TextEncoder ;Encoding _bab .PdfObject ;DescendantFont *PdfFont ;
_fgcac *_fd .CMap ;};

// HasXObjectByName checks if has XObject resource by name.
func (_ccgbe *PdfPage )HasXObjectByName (name _bab .PdfObjectName )bool {_fcadd ,_fffg :=_ccgbe .Resources .XObject .(*_bab .PdfObjectDictionary );if !_fffg {return false ;};if _dcddge :=_fcadd .Get (name );_dcddge !=nil {return true ;};return false ;};


// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_ebf *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faefb ,_cgagg :=_bab .GetNumbersAsFloat (objects );
if _cgagg !=nil {return nil ,_cgagg ;};return _ebf .ColorFromFloats (_faefb );};

// GetBorderWidth returns the border style's width.
func (_baec *PdfBorderStyle )GetBorderWidth ()float64 {if _baec .W ==nil {return 1;};return *_baec .W ;};

// String returns a string describing the font descriptor.
func (_bdgd *PdfFontDescriptor )String ()string {var _daaeb []string ;if _bdgd .FontName !=nil {_daaeb =append (_daaeb ,_bdgd .FontName .String ());};if _bdgd .FontFamily !=nil {_daaeb =append (_daaeb ,_bdgd .FontFamily .String ());};if _bdgd .fontFile !=nil {_daaeb =append (_daaeb ,_bdgd .fontFile .String ());
};if _bdgd ._cgebd !=nil {_daaeb =append (_daaeb ,_bdgd ._cgebd .String ());};_daaeb =append (_daaeb ,_d .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bdgd .FontFile3 !=nil ));return _d .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_bf .Join (_daaeb ,"\u002c\u0020"));
};func (_geaad *PdfWriter )addObject (_abeaba _bab .PdfObject )bool {_ccbbc :=_geaad .hasObject (_abeaba );if !_ccbbc {_edcgg :=_bab .ResolveReferencesDeep (_abeaba ,_geaad ._cfbgf );if _edcgg !=nil {_cgb .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_edcgg );
};_geaad ._bbceb =append (_geaad ._bbceb ,_abeaba );_geaad ._acagcb [_abeaba ]=struct{}{};return true ;};return false ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_af :=NewPdfAction ();_abd :=&PdfActionGoToR {};_abd .PdfAction =_af ;_af .SetContext (_abd );return _abd ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bab .PdfObjectStream )(*XObjectImage ,error ){_gaaec :=&XObjectImage {};_gaaec ._dbfaf =stream ;_decbd :=*(stream .PdfObjectDictionary );_becc ,_ecdfd :=_bab .NewEncoderFromStream (stream );if _ecdfd !=nil {return nil ,_ecdfd ;
};_gaaec .Filter =_becc ;if _edggb :=_bab .TraceToDirectObject (_decbd .Get ("\u0057\u0069\u0064t\u0068"));_edggb !=nil {_dcfaf ,_aagaa :=_edggb .(*_bab .PdfObjectInteger );if !_aagaa {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_gegga :=int64 (*_dcfaf );_gaaec .Width =&_gegga ;}else {return nil ,_cg .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gegdd :=_bab .TraceToDirectObject (_decbd .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gegdd !=nil {_cgffg ,_adfdb :=_gegdd .(*_bab .PdfObjectInteger );if !_adfdb {return nil ,_cg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_decbdb :=int64 (*_cgffg );
_gaaec .Height =&_decbdb ;}else {return nil ,_cg .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _dedde :=_bab .TraceToDirectObject (_decbd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_dedde !=nil {_dgdfb ,_gfbba :=NewPdfColorspaceFromPdfObject (_dedde );if _gfbba !=nil {return nil ,_gfbba ;};_gaaec .ColorSpace =_dgdfb ;}else {_cgb .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_gaaec .ColorSpace =NewPdfColorspaceDeviceGray ();};if _egdag :=_bab .TraceToDirectObject (_decbd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_egdag !=nil {_cdcb ,_abbcb :=_egdag .(*_bab .PdfObjectInteger );
if !_abbcb {return nil ,_cg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gbca :=int64 (*_cdcb );_gaaec .BitsPerComponent =&_gbca ;};_gaaec .Intent =_decbd .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_gaaec .ImageMask =_decbd .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_gaaec .Mask =_decbd .Get ("\u004d\u0061\u0073\u006b");_gaaec .Decode =_decbd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_gaaec .Interpolate =_decbd .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_gaaec .Alternatives =_decbd .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_gaaec .SMask =_decbd .Get ("\u0053\u004d\u0061s\u006b");_gaaec .SMaskInData =_decbd .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_gaaec .Matte =_decbd .Get ("\u004d\u0061\u0074t\u0065");_gaaec .Name =_decbd .Get ("\u004e\u0061\u006d\u0065");_gaaec .StructParent =_decbd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gaaec .ID =_decbd .Get ("\u0049\u0044");
_gaaec .OPI =_decbd .Get ("\u004f\u0050\u0049");_gaaec .Metadata =_decbd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gaaec .OC =_decbd .Get ("\u004f\u0043");_gaaec .Stream =stream .Stream ;return _gaaec ,nil ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_ffacf *PdfField )Flags ()FieldFlag {var _bded FieldFlag ;_eeed ,_cefbd :=_ffacf .inherit (func (_cdcc *PdfField )bool {if _cdcc .Ff !=nil {_bded =FieldFlag (*_ffacf .Ff );return true ;};return false ;});if _cefbd !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_cefbd );
};if !_eeed {_cgb .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bded ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_fea *PdfColorspaceCalGray )ToPdfObject ()_bab .PdfObject {_fdgd :=&_bab .PdfObjectArray {};_fdgd .Append (_bab .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fef :=_bab .MakeDict ();if _fea .WhitePoint !=nil {_fef .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bab .MakeArray (_bab .MakeFloat (_fea .WhitePoint [0]),_bab .MakeFloat (_fea .WhitePoint [1]),_bab .MakeFloat (_fea .WhitePoint [2])));
}else {_cgb .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _fea .BlackPoint !=nil {_fef .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bab .MakeArray (_bab .MakeFloat (_fea .BlackPoint [0]),_bab .MakeFloat (_fea .BlackPoint [1]),_bab .MakeFloat (_fea .BlackPoint [2])));
};_fef .Set ("\u0047\u0061\u006dm\u0061",_bab .MakeFloat (_fea .Gamma ));_fdgd .Append (_fef );if _fea ._gaa !=nil {_fea ._gaa .PdfObject =_fdgd ;return _fea ._gaa ;};return _fdgd ;};func _egfc (_daeef _bab .PdfObject ,_cgbg bool )(*PdfFont ,error ){_gefe ,_bdaeg ,_facg :=_acebg (_daeef );
if _facg !=nil {if _facg ==ErrType1CFontNotSupported {_cafda ,_eggdc :=_bcddg (_gefe ,_bdaeg ,nil );if _eggdc !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bdaeg ,_eggdc );
return nil ,_facg ;};return &PdfFont {_dfbfg :_cafda },_facg ;};return nil ,_facg ;};_afdd :=&PdfFont {};switch _bdaeg ._egbf {case "\u0054\u0079\u0070e\u0030":if !_cgbg {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdaeg );
return nil ,_cg .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dgddf ,_dag :=_bfdcb (_gefe ,_bdaeg );if _dag !=nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bdaeg ,_dag );
return nil ,_dag ;};_afdd ._dfbfg =_dgddf ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _fgddd *pdfFontSimple ;_dgdaf ,_ddbae :=_cb .NewStdFontByName (_cb .StdFontName (_bdaeg ._cefg ));
if _ddbae {_gegc :=_eccc (_dgdaf );_afdd ._dfbfg =&_gegc ;_acdg :=_bab .TraceToDirectObject (_gegc .ToPdfObject ());_bbabf ,_geagf ,_ddbgd :=_acebg (_acdg );if _ddbgd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bdaeg ,_gegc );
return nil ,_ddbgd ;};for _ ,_degae :=range _gefe .Keys (){_bbabf .Set (_degae ,_gefe .Get (_degae ));};_fgddd ,_ddbgd =_bcddg (_bbabf ,_geagf ,_gegc ._baffg );if _ddbgd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bdaeg ,_gegc );
return nil ,_ddbgd ;};_fgddd ._dbfe =_gegc ._dbfe ;_fgddd ._cfdae =_gegc ._cfdae ;}else {_fgddd ,_facg =_bcddg (_gefe ,_bdaeg ,nil );if _facg !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bdaeg ,_facg );
return nil ,_facg ;};};_facg =_fgddd .addEncoding ();if _facg !=nil {return nil ,_facg ;};if _ddbae {_fgddd .updateStandard14Font ();};if _ddbae &&_fgddd ._agbga ==nil &&_fgddd ._baffg ==nil {_cgb .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgddd );
_cgb .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dgdaf );};if len (_fgddd ._dbfe )==0{_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_fgddd );};_afdd ._dfbfg =_fgddd ;
case "\u0054\u0079\u0070e\u0033":_gcdfe ,_ecdf :=_fcbg (_gefe ,_bdaeg );if _ecdf !=nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_ecdf );
return nil ,_ecdf ;};_afdd ._dfbfg =_gcdfe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_deef ,_dbccad :=_gegfb (_gefe ,_bdaeg );if _dbccad !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_dbccad );
return nil ,_dbccad ;};_afdd ._dfbfg =_deef ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gffeb ,_dbgb :=_baaead (_gefe ,_bdaeg );if _dbgb !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bdaeg ,_dbgb );
return nil ,_dbgb ;};_afdd ._dfbfg =_gffeb ;default:_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bdaeg );
return nil ,_d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdaeg );};return _afdd ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gagda *PdfShading )GetContext ()PdfModel {return _gagda ._gdbgg };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_edgg *PdfFont )SubsetRegistered ()error {switch _gebg :=_edgg ._dfbfg .(type ){case *pdfFontType0 :_adef :=_gebg .subsetRegistered ();if _adef !=nil {_cgb .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_adef );
return _adef ;};if _gebg ._aaff !=nil {if _gebg ._aecf !=nil {_gebg ._aecf .ToPdfObject ();};_gebg .ToPdfObject ();};default:_cgb .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gebg );
};return nil ;};func (_afbf *DSS )generateHashMaps ()error {_geag ,_fdaec :=_afbf .generateHashMap (_afbf .Certs );if _fdaec !=nil {return _fdaec ;};_eadfgc ,_fdaec :=_afbf .generateHashMap (_afbf .OCSPs );if _fdaec !=nil {return _fdaec ;};_gecc ,_fdaec :=_afbf .generateHashMap (_afbf .CRLs );
if _fdaec !=nil {return _fdaec ;};_afbf ._dcgb =_geag ;_afbf ._bbed =_eadfgc ;_afbf ._egfb =_gecc ;return nil ;};func (_ccae *PdfReader )newPdfAnnotationWidgetFromDict (_cgd *_bab .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_gdc :=PdfAnnotationWidget {};
_gdc .H =_cgd .Get ("\u0048");_gdc .MK =_cgd .Get ("\u004d\u004b");_gdc .A =_cgd .Get ("\u0041");_gdc .AA =_cgd .Get ("\u0041\u0041");_gdc .BS =_cgd .Get ("\u0042\u0053");_gdc .Parent =_cgd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_gdc ,nil ;
};func _bdaad (_bgec *_ca .ImageBase )(_fbbcg Image ){_fbbcg .Width =int64 (_bgec .Width );_fbbcg .Height =int64 (_bgec .Height );_fbbcg .BitsPerComponent =int64 (_bgec .BitsPerComponent );_fbbcg .ColorComponents =_bgec .ColorComponents ;_fbbcg .Data =_bgec .Data ;
_fbbcg ._dgbgc =_bgec .Decode ;_fbbcg ._fffdd =_bgec .Alpha ;return _fbbcg ;};func (_bcf *PdfReader )newPdfActionJavaScriptFromDict (_gfe *_bab .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_gfe .Get ("\u004a\u0053")},nil ;
};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_abcd :=PdfColorLab {l ,a ,b };return &_abcd };

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_gaaf *PdfFont )ToPdfObject ()_bab .PdfObject {if _gaaf ._dfbfg ==nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bab .MakeNull ();
};return _gaaf ._dfbfg .ToPdfObject ();};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bab .PdfObject ;RichMediaContent _bab .PdfObject ;};

// G returns the value of the green component of the color.
func (_ggfa *PdfColorDeviceRGB )G ()float64 {return _ggfa [1]};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_defe *PdfFontDescriptor )ToPdfObject ()_bab .PdfObject {_dcbe :=_bab .MakeDict ();if _defe ._dbcccc ==nil {_defe ._dbcccc =&_bab .PdfIndirectObject {};};_defe ._dbcccc .PdfObject =_dcbe ;_dcbe .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _defe .FontName !=nil {_dcbe .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_defe .FontName );};if _defe .FontFamily !=nil {_dcbe .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_defe .FontFamily );};if _defe .FontStretch !=nil {_dcbe .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_defe .FontStretch );
};if _defe .FontWeight !=nil {_dcbe .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_defe .FontWeight );};if _defe .Flags !=nil {_dcbe .Set ("\u0046\u006c\u0061g\u0073",_defe .Flags );};if _defe .FontBBox !=nil {_dcbe .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_defe .FontBBox );
};if _defe .ItalicAngle !=nil {_dcbe .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_defe .ItalicAngle );};if _defe .Ascent !=nil {_dcbe .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_defe .Ascent );};if _defe .Descent !=nil {_dcbe .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_defe .Descent );
};if _defe .Leading !=nil {_dcbe .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_defe .Leading );};if _defe .CapHeight !=nil {_dcbe .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_defe .CapHeight );};if _defe .XHeight !=nil {_dcbe .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_defe .XHeight );
};if _defe .StemV !=nil {_dcbe .Set ("\u0053\u0074\u0065m\u0056",_defe .StemV );};if _defe .StemH !=nil {_dcbe .Set ("\u0053\u0074\u0065m\u0048",_defe .StemH );};if _defe .AvgWidth !=nil {_dcbe .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_defe .AvgWidth );
};if _defe .MaxWidth !=nil {_dcbe .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_defe .MaxWidth );};if _defe .MissingWidth !=nil {_dcbe .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_defe .MissingWidth );};if _defe .FontFile !=nil {_dcbe .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_defe .FontFile );
};if _defe .FontFile2 !=nil {_dcbe .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_defe .FontFile2 );};if _defe .FontFile3 !=nil {_dcbe .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_defe .FontFile3 );};if _defe .CharSet !=nil {_dcbe .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_defe .CharSet );
};if _defe .Style !=nil {_dcbe .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_defe .FontName );};if _defe .Lang !=nil {_dcbe .Set ("\u004c\u0061\u006e\u0067",_defe .Lang );};if _defe .FD !=nil {_dcbe .Set ("\u0046\u0044",_defe .FD );};if _defe .CIDSet !=nil {_dcbe .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_defe .CIDSet );
};return _defe ._dbcccc ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ecdff []byte )(_ddggbb int ,_dcdge error );};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_acee *PdfColorCalGray )GetNumComponents ()int {return 1};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dgfeb *PdfWriter )SetOptimizer (optimizer Optimizer ){_dgfeb ._bcbcc =optimizer };

// ToPdfObject implements interface PdfModel.
func (_cdba *PdfAnnotationInk )ToPdfObject ()_bab .PdfObject {_cdba .PdfAnnotation .ToPdfObject ();_cabb :=_cdba ._bcc ;_bdde :=_cabb .PdfObject .(*_bab .PdfObjectDictionary );_cdba .PdfAnnotationMarkup .appendToPdfDictionary (_bdde );_bdde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0049\u006e\u006b"));
_bdde .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cdba .InkList );_bdde .SetIfNotNil ("\u0042\u0053",_cdba .BS );return _cabb ;};

// Encoder returns the font's text encoder.
func (_acaaf pdfCIDFontType2 )Encoder ()_ea .TextEncoder {return _acaaf ._gedcb };func (_geedd fontCommon )asPdfObjectDictionary (_fcgc string )*_bab .PdfObjectDictionary {if _fcgc !=""&&_geedd ._egbf !=""&&_fcgc !=_geedd ._egbf {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fcgc ,_geedd );
}else if _fcgc ==""&&_geedd ._egbf ==""{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_geedd );
}else if _geedd ._egbf ==""{_geedd ._egbf =_fcgc ;};_dgeda :=_bab .MakeDict ();_dgeda .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0046\u006f\u006e\u0074"));_dgeda .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bab .MakeName (_geedd ._cefg ));
_dgeda .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName (_geedd ._egbf ));if _geedd ._dbcbe !=nil {_dgeda .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_geedd ._dbcbe .ToPdfObject ());};if _geedd ._debg !=nil {_dgeda .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_geedd ._debg );
}else if _geedd ._cfdd !=nil {_ccbbg ,_cceg :=_geedd ._cfdd .Stream ();if _cceg !=nil {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_cceg );
}else {_dgeda .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ccbbg );};};return _dgeda ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eedff *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _ffef []*PdfField ;if _eedff .AcroForm !=nil {_ffef =_eedff .AcroForm .AllFields ();};_gccbf :=make (map[*PdfField ]struct{},len (_ffef ));for _ ,_ebbff :=range _ffef {_gccbf [_ebbff ]=struct{}{};
};for _ ,_bfee :=range _eedff .PageList {_cebge ,_fecad :=_bfee .GetAnnotations ();if _fecad !=nil {return false ,_fecad ;};for _ ,_feda :=range _cebge {_dbgef ,_gbddgd :=_feda .GetContext ().(*PdfAnnotationWidget );if !_gbddgd {continue ;};_gbdb :=_dbgef .Field ();
if _gbdb ==nil {return true ,nil ;};if _ ,_ddbeb :=_gccbf [_gbdb ];!_ddbeb {return true ,nil ;};};};return false ,nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_afeda *_bab .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_gafg *PdfAnnotationUnderline )ToPdfObject ()_bab .PdfObject {_gafg .PdfAnnotation .ToPdfObject ();_bde :=_gafg ._bcc ;_ebbc :=_bde .PdfObject .(*_bab .PdfObjectDictionary );_gafg .PdfAnnotationMarkup .appendToPdfDictionary (_ebbc );_ebbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_ebbc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gafg .QuadPoints );return _bde ;};var (_fcccb _g .Mutex ;_bfgc ="";_gddf _f .Time ;_ffda ="";_bfddg ="";_cdaa _f .Time ;_edafc ="";_ebdfe ="";_gfebd ="";);

// SetContext set the sub annotation (context).
func (_agdc *PdfShading )SetContext (ctx PdfModel ){_agdc ._gdbgg =ctx };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_agbb *pdfCIDFontType0 )ToPdfObject ()_bab .PdfObject {return _bab .MakeNull ()};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject returns the PDF representation of the colorspace.
func (_acfg *PdfColorspaceDeviceCMYK )ToPdfObject ()_bab .PdfObject {return _bab .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bbfab *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_ae *PdfActionGoTo3DView )ToPdfObject ()_bab .PdfObject {_ae .PdfAction .ToPdfObject ();_cde :=_ae ._ec ;_ebg :=_cde .PdfObject .(*_bab .PdfObjectDictionary );_ebg .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeGoTo3DView )));_ebg .SetIfNotNil ("\u0054\u0041",_ae .TA );
_ebg .SetIfNotNil ("\u0056",_ae .V );return _cde ;};func (_ggaca *PdfWriter )hasObject (_daeag _bab .PdfObject )bool {_ ,_fgdee :=_ggaca ._acagcb [_daeag ];return _fgdee ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bab .PdfObjectString ;Author *_bab .PdfObjectString ;Subject *_bab .PdfObjectString ;Keywords *_bab .PdfObjectString ;Creator *_bab .PdfObjectString ;Producer *_bab .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bab .PdfObjectName ;_bgef *_bab .PdfObjectDictionary ;};func (_aafc *PdfReader )newPdfAnnotationTextFromDict (_gcd *_bab .PdfObjectDictionary )(*PdfAnnotationText ,error ){_dcad :=PdfAnnotationText {};_bbge ,_dbcg :=_aafc .newPdfAnnotationMarkupFromDict (_gcd );
if _dbcg !=nil {return nil ,_dbcg ;};_dcad .PdfAnnotationMarkup =_bbge ;_dcad .Open =_gcd .Get ("\u004f\u0070\u0065\u006e");_dcad .Name =_gcd .Get ("\u004e\u0061\u006d\u0065");_dcad .State =_gcd .Get ("\u0053\u0074\u0061t\u0065");_dcad .StateModel =_gcd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_dcad ,nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_bbac *_bab .PdfIndirectObject ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_fcccb .Lock ();defer _fcccb .Unlock ();_ffda =creator };

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dedeb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dedeb .baseFields ()._dbcbe !=nil {return _dedeb .baseFields ()._dbcbe ;};if _gdfd :=_dedeb ._dfbfg .getFontDescriptor ();_gdfd !=nil {return _gdfd ;};_cgb .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dedeb );
return nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_fbbf PdfModel ;_fced *_bab .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bab .PdfObjectName ;T *_bab .PdfObjectString ;TU *_bab .PdfObjectString ;TM *_bab .PdfObjectString ;Ff *_bab .PdfObjectInteger ;
V _bab .PdfObject ;DV _bab .PdfObject ;AA _bab .PdfObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_eaae pdfFontType3 )GetCharMetrics (code _ea .CharCode )(_cb .CharMetrics ,bool ){if _aabdc ,_bgbc :=_eaae ._gfgce [code ];_bgbc {return _cb .CharMetrics {Wx :_aabdc },true ;};if _cb .IsStdFont (_cb .StdFontName (_eaae ._cefg )){return _cb .CharMetrics {Wx :250},true ;
};return _cb .CharMetrics {},false ;};func (_ded *PdfReader )newPdfAnnotationLinkFromDict (_bacg *_bab .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gec :=PdfAnnotationLink {};_gec .A =_bacg .Get ("\u0041");_gec .Dest =_bacg .Get ("\u0044\u0065\u0073\u0074");
_gec .H =_bacg .Get ("\u0048");_gec .PA =_bacg .Get ("\u0050\u0041");_gec .QuadPoints =_bacg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gec .BS =_bacg .Get ("\u0042\u0053");return &_gec ,nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bab .PdfObject ;FS _bab .PdfObject ;F _bab .PdfObject ;UF _bab .PdfObject ;DOS _bab .PdfObject ;Mac _bab .PdfObject ;Unix _bab .PdfObject ;ID _bab .PdfObject ;V _bab .PdfObject ;EF _bab .PdfObject ;RF _bab .PdfObject ;Desc _bab .PdfObject ;
CI _bab .PdfObject ;_cebg _bab .PdfObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_fcccb .Lock ();defer _fcccb .Unlock ();_bfgc =author };

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_eccg *LTV )EnableAll (extraCerts []*_ef .Certificate )error {_eagb :=_eccg ._fecce ._fgdb .AcroForm ;for _ ,_daede :=range _eagb .AllFields (){_ggeec ,_ :=_daede .GetContext ().(*PdfFieldSignature );if _ggeec ==nil {continue ;};_baffc :=_ggeec .V ;
if _dagba :=_eccg .validateSig (_baffc );_dagba !=nil {_cgb .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dagba );
};if _bgeba :=_eccg .Enable (_baffc ,extraCerts );_bgeba !=nil {return _bgeba ;};};return nil ;};func _bacf (_dbacg _bab .PdfObject )[]*_bab .PdfObjectStream {if _dbacg ==nil {return nil ;};_gafgd ,_gbcca :=_bab .GetArray (_dbacg );if !_gbcca ||_gafgd .Len ()==0{return nil ;
};_egecc :=make ([]*_bab .PdfObjectStream ,0,_gafgd .Len ());for _ ,_abfb :=range _gafgd .Elements (){if _fbfeb ,_ggda :=_bab .GetStream (_abfb );_ggda {_egecc =append (_egecc ,_fbfeb );};};return _egecc ;};func (_abca *DSS )generateHashMap (_gcae []*_bab .PdfObjectStream )(map[string ]*_bab .PdfObjectStream ,error ){_febd :=map[string ]*_bab .PdfObjectStream {};
for _ ,_caec :=range _gcae {_aeee ,_beg :=_bab .DecodeStream (_caec );if _beg !=nil {return nil ,_beg ;};_fffc ,_beg :=_fcge (_aeee );if _beg !=nil {return nil ,_beg ;};_febd [string (_fffc )]=_caec ;};return _febd ,nil ;};func (_ddea *pdfFontType0 )baseFields ()*fontCommon {return &_ddea .fontCommon };


// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_edaba *PdfPage )SetContentStreams (cStreams []string ,encoder _bab .StreamEncoder )error {if len (cStreams )==0{_edaba .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bab .NewRawEncoder ();};var _ebagg []*_bab .PdfObjectStream ;for _ ,_cfebg :=range cStreams {_acffa :=&_bab .PdfObjectStream {};
_facdc :=encoder .MakeStreamDict ();_baeaf ,_gceda :=encoder .EncodeBytes ([]byte (_cfebg ));if _gceda !=nil {return _gceda ;};_facdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_baeaf ))));_acffa .PdfObjectDictionary =_facdc ;
_acffa .Stream =_baeaf ;_ebagg =append (_ebagg ,_acffa );};if len (_ebagg )==1{_edaba .Contents =_ebagg [0];}else {_ecacg :=_bab .MakeArray ();for _ ,_acec :=range _ebagg {_ecacg .Append (_acec );};_edaba .Contents =_ecacg ;};return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_fffd *PdfFunctionType0 )ToPdfObject ()_bab .PdfObject {if _fffd ._bbaag ==nil {_fffd ._bbaag =&_bab .PdfObjectStream {};};_agebc :=_bab .MakeDict ();_agebc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bab .MakeInteger (0));
_cddca :=&_bab .PdfObjectArray {};for _ ,_gebec :=range _fffd .Domain {_cddca .Append (_bab .MakeFloat (_gebec ));};_agebc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cddca );_cdae :=&_bab .PdfObjectArray {};for _ ,_bgddf :=range _fffd .Range {_cdae .Append (_bab .MakeFloat (_bgddf ));
};_agebc .Set ("\u0052\u0061\u006eg\u0065",_cdae );_ebgbd :=&_bab .PdfObjectArray {};for _ ,_fddcf :=range _fffd .Size {_ebgbd .Append (_bab .MakeInteger (int64 (_fddcf )));};_agebc .Set ("\u0053\u0069\u007a\u0065",_ebgbd );_agebc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bab .MakeInteger (int64 (_fffd .BitsPerSample )));
if _fffd .Order !=1{_agebc .Set ("\u004f\u0072\u0064e\u0072",_bab .MakeInteger (int64 (_fffd .Order )));};_agebc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_fffd ._bfbga ))));_fffd ._bbaag .Stream =_fffd ._bfbga ;_fffd ._bbaag .PdfObjectDictionary =_agebc ;
return _fffd ._bbaag ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bcaa *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_agbf *DSS )addCerts (_dcbc [][]byte )([]*_bab .PdfObjectStream ,error ){return _agbf .add (&_agbf .Certs ,_agbf ._dcgb ,_dcbc );};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_dcbb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_abfce ,_efadg :=_bab .GetDict (_dcbb ._abbdcc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_efadg {_abfce =_bab .MakeDict ();_dcbb ._abbdcc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_abfce );
};_dgffe ,_efadg :=_bab .GetDict (_abfce .Get (_bab .PdfObjectName (extName )));if !_efadg {_dgffe =_bab .MakeDict ();_abfce .Set (_bab .PdfObjectName (extName ),_dgffe );};if _ebed ,_ :=_bab .GetNameVal (_dgffe .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ebed !=baseVersion {_dgffe .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bab .MakeName (baseVersion ));};if _cfgfg ,_ :=_bab .GetIntVal (_dgffe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cfgfg !=extLevel {_dgffe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bab .MakeInteger (int64 (extLevel )));};};func (_dee *PdfReader )newPdfActionLaunchFromDict (_ddc *_bab .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gggc ,_dba :=_eec (_ddc .Get ("\u0046"));
if _dba !=nil {return nil ,_dba ;};return &PdfActionLaunch {Win :_ddc .Get ("\u0057\u0069\u006e"),Mac :_ddc .Get ("\u004d\u0061\u0063"),Unix :_ddc .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ddc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gggc },nil ;
};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ddgc :_bab .MakeIndirectObject (_bab .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_ffcf :=NewPdfAnnotation ();_fecc :=&PdfAnnotationSquare {};_fecc .PdfAnnotation =_ffcf ;_fecc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffcf .SetContext (_fecc );return _fecc ;};func _ggfeg (_bfeag []*_bab .PdfObjectStream )*_bab .PdfObjectArray {if len (_bfeag )==0{return nil ;
};_cfggd :=make ([]_bab .PdfObject ,0,len (_bfeag ));for _ ,_afaaef :=range _bfeag {_cfggd =append (_cfggd ,_afaaef );};return _bab .MakeArray (_cfggd ...);};

// ToPdfObject implements interface PdfModel.
func (_dgda *PdfAnnotationPolyLine )ToPdfObject ()_bab .PdfObject {_dgda .PdfAnnotation .ToPdfObject ();_dge :=_dgda ._bcc ;_bgcg :=_dge .PdfObject .(*_bab .PdfObjectDictionary );_dgda .PdfAnnotationMarkup .appendToPdfDictionary (_bgcg );_bgcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_bgcg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dgda .Vertices );_bgcg .SetIfNotNil ("\u004c\u0045",_dgda .LE );_bgcg .SetIfNotNil ("\u0042\u0053",_dgda .BS );_bgcg .SetIfNotNil ("\u0049\u0043",_dgda .IC );_bgcg .SetIfNotNil ("\u0042\u0045",_dgda .BE );
_bgcg .SetIfNotNil ("\u0049\u0054",_dgda .IT );_bgcg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dgda .Measure );return _dge ;};func (_bgf *PdfReader )newPdfActionHideFromDict (_bbfc *_bab .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bbfc .Get ("\u0054"),H :_bbfc .Get ("\u0048")},nil ;
};

// GetContainingPdfObject implements interface PdfModel.
func (_eea *PdfAnnotation )GetContainingPdfObject ()_bab .PdfObject {return _eea ._bcc };func _fdfe (_cddf *PdfField ,_gbee _bab .PdfObject ){for _ ,_cbeab :=range _cddf .Annotations {_cbeab .AS =_gbee ;_cbeab .ToPdfObject ();};};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cgbag *PdfPage )Duplicate ()*PdfPage {_caaaf :=*_cgbag ;_caaaf ._beadg =_bab .MakeDict ();_caaaf ._efdec =_bab .MakeIndirectObject (_caaaf ._beadg );return &_caaaf ;};var _afcdb =false ;

// String returns a human readable description of `fontfile`.
func (_cega *fontFile )String ()string {_gdgab :="\u005b\u004e\u006f\u006e\u0065\u005d";if _cega ._bgac !=nil {_gdgab =_cega ._bgac .String ();};return _d .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_cega ._fbfac ,_gdgab );
};func (_agabce *PdfReader )loadAnnotations (_dffdc _bab .PdfObject )([]*PdfAnnotation ,error ){_begdg ,_daaef :=_bab .GetArray (_dffdc );if !_daaef {return nil ,_d .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eaabe []*PdfAnnotation ;for _ ,_cagcbc :=range _begdg .Elements (){_cagcbc =_bab .ResolveReference (_cagcbc );if _ ,_bbea :=_cagcbc .(*_bab .PdfObjectNull );_bbea {continue ;};_abeaa ,_abebc :=_cagcbc .(*_bab .PdfObjectDictionary );_acefb ,_cfdbb :=_cagcbc .(*_bab .PdfIndirectObject );
if _abebc {_acefb =&_bab .PdfIndirectObject {};_acefb .PdfObject =_abeaa ;}else {if !_cfdbb {return nil ,_d .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_ffadf ,_fbbad :=_agabce .newPdfAnnotationFromIndirectObject (_acefb );if _fbbad !=nil {return nil ,_fbbad ;};switch _cgbbd :=_ffadf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ccaef :=range _agabce .AcroForm .AllFields (){if _ccaef ._fced ==_cgbbd .Parent {_cgbbd ._ece =_ccaef ;
break ;};};};if _ffadf !=nil {_eaabe =append (_eaabe ,_ffadf );};};return _eaabe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_abeb *PdfAnnotationFreeText )ToPdfObject ()_bab .PdfObject {_abeb .PdfAnnotation .ToPdfObject ();_egbd :=_abeb ._bcc ;_eeb :=_egbd .PdfObject .(*_bab .PdfObjectDictionary );_abeb .PdfAnnotationMarkup .appendToPdfDictionary (_eeb );_eeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_eeb .SetIfNotNil ("\u0044\u0041",_abeb .DA );_eeb .SetIfNotNil ("\u0051",_abeb .Q );_eeb .SetIfNotNil ("\u0052\u0043",_abeb .RC );_eeb .SetIfNotNil ("\u0044\u0053",_abeb .DS );_eeb .SetIfNotNil ("\u0043\u004c",_abeb .CL );_eeb .SetIfNotNil ("\u0049\u0054",_abeb .IT );
_eeb .SetIfNotNil ("\u0042\u0045",_abeb .BE );_eeb .SetIfNotNil ("\u0052\u0044",_abeb .RD );_eeb .SetIfNotNil ("\u0042\u0053",_abeb .BS );_eeb .SetIfNotNil ("\u004c\u0045",_abeb .LE );return _egbd ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_feafg ,_agfe :=_gdgad (basefont );if _agfe !=nil {return nil ,_agfe ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_feafg ._agbga =_ea .NewWinAnsiEncoder ();};return &PdfFont {_dfbfg :&_feafg },nil ;
};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// GetNumPages returns the number of pages in the document.
func (_eacfd *PdfReader )GetNumPages ()(int ,error ){if _eacfd ._fdcebg .GetCrypter ()!=nil &&!_eacfd ._fdcebg .IsAuthenticated (){return 0,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_eacfd ._aedab ),nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_abebb *PdfAcroForm ,_efab *PdfField ,_efad *PdfAnnotationWidget )(*_bab .PdfObjectDictionary ,error );};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bab .PdfObject ;Open _bab .PdfObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_bgegd *PdfTilingPattern )SetContentStream (content []byte ,encoder _bab .StreamEncoder )error {_dcede ,_abgge :=_bgegd ._ecege .(*_bab .PdfObjectStream );if !_abgge {_cgb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgegd ._ecege );
return _bab .ErrTypeError ;};if encoder ==nil {encoder =_bab .NewRawEncoder ();};_fddcc :=_dcede .PdfObjectDictionary ;_effgg :=encoder .MakeStreamDict ();_fddcc .Merge (_effgg );_fcedd ,_facfd :=encoder .EncodeBytes (content );if _facfd !=nil {return _facfd ;
};_fddcc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_fcedd ))));_dcede .Stream =_fcedd ;return nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_egdd *PdfAcroForm )GetContainingPdfObject ()_bab .PdfObject {return _egdd ._bage };

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_acagc :=appender .Reader .DSS ;if _acagc ==nil {_acagc =NewDSS ();};if _dedb :=_acagc .generateHashMaps ();_dedb !=nil {return nil ,_dedb ;};return &LTV {CertClient :_ba .NewCertClient (),OCSPClient :_ba .NewOCSPClient (),CRLClient :_ba .NewCRLClient (),SkipExisting :true ,_fecce :appender ,_gcac :_acagc },nil ;
};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bab .PdfObject ;Name _bab .PdfObject ;};func _dbfge (_ebdf _bab .PdfObject ,_fgecd *fontCommon )(*_fd .CMap ,error ){_fgea ,_cbeb :=_bab .GetStream (_ebdf );if !_cbeb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ebdf );
return nil ,_bab .ErrTypeError ;};_fgadg ,_eaaaa :=_bab .DecodeStream (_fgea );if _eaaaa !=nil {return nil ,_eaaaa ;};_ccec ,_eaaaa :=_fd .LoadCmapFromData (_fgadg ,!_fgecd .isCIDFont ());if _eaaaa !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fgea .ObjectNumber ,_eaaaa );
};return _ccec ,_eaaaa ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_dea .PSProgram ;_bdgbd *_dea .PSExecutor ;_cade []byte ;_cdce *_bab .PdfObjectStream ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_facad DefaultImageHandler )NewImageFromGoImage (goimg _eg .Image )(*Image ,error ){_dade ,_aefda :=_ca .FromGoImage (goimg );if _aefda !=nil {return nil ,_aefda ;};_edced :=_bdaad (_dade .Base ());return &_edced ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_dfed *PdfAnnotationLink )SetAction (action *PdfAction ){_dfed ._egb =action ;if action ==nil {_dfed .A =nil ;};};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_edbae *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_efgd :=0.3*_edbae .R ()+0.59*_edbae .G ()+0.11*_edbae .B ();_efgd =_ab .Min (_ab .Max (_efgd ,0.0),1.0);return NewPdfColorDeviceGray (_efgd );};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bab .PdfObject ;PreserveRB _bab .PdfObject ;};func (_ecgf *PdfShading )getShadingDict ()(*_bab .PdfObjectDictionary ,error ){_bcaag :=_ecgf ._bfgd ;if _bdead ,_ddegf :=_bcaag .(*_bab .PdfIndirectObject );
_ddegf {_gcagc ,_fcebe :=_bdead .PdfObject .(*_bab .PdfObjectDictionary );if !_fcebe {return nil ,_bab .ErrTypeError ;};return _gcagc ,nil ;}else if _bgefd ,_fgdde :=_bcaag .(*_bab .PdfObjectStream );_fgdde {return _bgefd .PdfObjectDictionary ,nil ;}else if _ccca ,_dbdff :=_bcaag .(*_bab .PdfObjectDictionary );
_dbdff {return _ccca ,nil ;}else {_cgb .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bab .ErrTypeError ;
};};

// AddFont adds a font dictionary to the Font resources.
func (_eedgd *PdfPage )AddFont (name _bab .PdfObjectName ,font _bab .PdfObject )error {if _eedgd .Resources ==nil {_eedgd .Resources =NewPdfPageResources ();};if _eedgd .Resources .Font ==nil {_eedgd .Resources .Font =_bab .MakeDict ();};_afadd ,_ceea :=_bab .TraceToDirectObject (_eedgd .Resources .Font ).(*_bab .PdfObjectDictionary );
if !_ceea {_cgb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bab .TraceToDirectObject (_eedgd .Resources .Font ));
return _cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afadd .Set (name ,font );return nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fdddf *PdfPageResourcesColorspaces )Set (key _bab .PdfObjectName ,val PdfColorspace ){if _ ,_cccba :=_fdddf .Colorspaces [string (key )];!_cccba {_fdddf .Names =append (_fdddf .Names ,string (key ));};_fdddf .Colorspaces [string (key )]=val ;};func (_ccdfb *LTV )getCerts (_eddcc []*_ef .Certificate )([][]byte ,error ){_ggdf :=make ([][]byte ,0,len (_eddcc ));
for _ ,_afbde :=range _eddcc {_ggdf =append (_ggdf ,_afbde .Raw );};return _ggdf ,nil ;};

// GetNumComponents returns the number of color components.
func (_cgccg *PdfColorspaceICCBased )GetNumComponents ()int {return _cgccg .N };

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ad .ReadSeeker )(*PdfFont ,error ){_cabd ,_dafac :=_gc .ReadAll (r );if _dafac !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dafac );
return nil ,_dafac ;};_efegg ,_dafac :=_cb .TtfParse (_bcb .NewReader (_cabd ));if _dafac !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_dafac );
return nil ,_dafac ;};_ffaae :=&pdfCIDFontType2 {fontCommon :fontCommon {_egbf :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bab .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_cfaec :=make ([]rune ,0,len (_efegg .Chars ));
for _gded :=range _efegg .Chars {_cfaec =append (_cfaec ,_gded );};_bbb .Slice (_cfaec ,func (_dcbag ,_faed int )bool {return _cfaec [_dcbag ]< _cfaec [_faed ]});_bfdfe :=1000.0/float64 (_efegg .UnitsPerEm );if len (_efegg .Widths )<=0{return nil ,_cg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_adcg :=_bfdfe *float64 (_efegg .Widths [0]);_bgfcc :=make (map[rune ]int );for _ ,_eebb :=range _cfaec {_dgcga :=_efegg .Chars [_eebb ];_gfea :=_bfdfe *float64 (_efegg .Widths [_dgcga ]);_bgfcc [_eebb ]=int (_gfea );};_ffaae ._aefcc =_bgfcc ;_ffaae .DW =_bab .MakeInteger (int64 (_adcg ));
_egef :=_ggcf (_cfaec ,_bgfcc ,_efegg .Chars );_ffaae .W =_bab .MakeIndirectObject (_egef );_fbcdg :=_bab .MakeDict ();_fbcdg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bab .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));
_fbcdg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bab .MakeString ("\u0041\u0064\u006fb\u0065"));_fbcdg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bab .MakeInteger (0));_ffaae .CIDSystemInfo =_fbcdg ;_fbeg :=&PdfFontDescriptor {FontName :_bab .MakeName (_efegg .PostScriptName ),Ascent :_bab .MakeFloat (_bfdfe *float64 (_efegg .TypoAscender )),Descent :_bab .MakeFloat (_bfdfe *float64 (_efegg .TypoDescender )),CapHeight :_bab .MakeFloat (_bfdfe *float64 (_efegg .CapHeight )),FontBBox :_bab .MakeArrayFromFloats ([]float64 {_bfdfe *float64 (_efegg .Xmin ),_bfdfe *float64 (_efegg .Ymin ),_bfdfe *float64 (_efegg .Xmax ),_bfdfe *float64 (_efegg .Ymax )}),ItalicAngle :_bab .MakeFloat (_efegg .ItalicAngle ),MissingWidth :_bab .MakeFloat (_bfdfe *float64 (_efegg .Widths [0]))};
_cefca ,_dafac :=_bab .MakeStream (_cabd ,_bab .NewFlateEncoder ());if _dafac !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dafac );
return nil ,_dafac ;};_cefca .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bab .MakeInteger (int64 (len (_cabd ))));_fbeg .FontFile2 =_cefca ;if _efegg .Bold {_fbeg .StemV =_bab .MakeInteger (120);}else {_fbeg .StemV =_bab .MakeInteger (70);
};_agca :=_agfbge ;if _efegg .IsFixedPitch {_agca |=_fbgdf ;};if _efegg .ItalicAngle !=0{_agca |=_acae ;};_fbeg .Flags =_bab .MakeInteger (int64 (_agca ));_ffaae ._cefg =_efegg .PostScriptName ;_ffaae ._dbcbe =_fbeg ;_ddbe :=pdfFontType0 {fontCommon :fontCommon {_egbf :"\u0054\u0079\u0070e\u0030",_cefg :_efegg .PostScriptName },DescendantFont :&PdfFont {_dfbfg :_ffaae },Encoding :_bab .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_aecf :_efegg .NewEncoder ()};
if len (_efegg .Chars )> 0{_aafgf :=make (map[_fd .CharCode ]rune ,len (_efegg .Chars ));for _fded ,_gdcabd :=range _efegg .Chars {_aagcg :=_fd .CharCode (_gdcabd );if _cece ,_fdca :=_aafgf [_aagcg ];!_fdca ||(_fdca &&_cece > _fded ){_aafgf [_aagcg ]=_fded ;
};};_ddbe ._cfdd =_fd .NewToUnicodeCMap (_aafgf );};_dfdc :=PdfFont {_dfbfg :&_ddbe };return &_dfdc ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_bdcf PdfFont )actualFont ()pdfFont {if _bdcf ._dfbfg ==nil {_cgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bdcf );
};return _bdcf ._dfbfg ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bab .PdfObjectName ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_aadce *PdfReader )Inspect ()(map[string ]int ,error ){return _aadce ._fdcebg .Inspect ()};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bab .PdfObject ;GetContainingPdfObject ()_bab .PdfObject ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_fffbc *PdfOutline )GetContainingPdfObject ()_bab .PdfObject {return _fffbc ._aaffa };

// String returns a string that describes `font`.
func (_gbeff *PdfFont )String ()string {_ggdd :="";if _gbeff ._dfbfg .Encoder ()!=nil {_ggdd =_gbeff ._dfbfg .Encoder ().String ();};return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gbeff ._dfbfg ,_gbeff .baseFields ().coreString (),_ggdd );
};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gbacc *PdfReader )GetNamedDestinations ()(_bab .PdfObject ,error ){_fddf :=_bab .ResolveReference (_gbacc ._bbcgg .Get ("\u004e\u0061\u006de\u0073"));if _fddf ==nil {return nil ,nil ;};if !_gbacc ._geegb {_aafff :=_gbacc .traverseObjectData (_fddf );
if _aafff !=nil {return nil ,_aafff ;};};return _fddf ,nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gbf :=NewPdfAction ();_fba :=&PdfActionJavaScript {};_fba .PdfAction =_gbf ;_gbf .SetContext (_fba );return _fba ;};func _cfgbe (_adcd *_bab .PdfObjectStream )(*PdfFunctionType4 ,error ){_gdac :=&PdfFunctionType4 {};
_gdac ._cdce =_adcd ;_fgfef :=_adcd .PdfObjectDictionary ;_cebbg ,_feag :=_bab .TraceToDirectObject (_fgfef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bab .PdfObjectArray );if !_feag {_cgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cebbg .Len ()%2!=0{_cgb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_geae ,_aggb :=_cebbg .ToFloat64Array ();if _aggb !=nil {return nil ,_aggb ;};_gdac .Domain =_geae ;_cebbg ,_feag =_bab .TraceToDirectObject (_fgfef .Get ("\u0052\u0061\u006eg\u0065")).(*_bab .PdfObjectArray );
if _feag {if _cebbg .Len ()< 0||_cebbg .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dagda ,_acgbd :=_cebbg .ToFloat64Array ();if _acgbd !=nil {return nil ,_acgbd ;};_gdac .Range =_dagda ;
};_efbed ,_aggb :=_bab .DecodeStream (_adcd );if _aggb !=nil {return nil ,_aggb ;};_gdac ._cade =_efbed ;_dfgf :=_dea .NewPSParser (_efbed );_ccgf ,_aggb :=_dfgf .Parse ();if _aggb !=nil {return nil ,_aggb ;};_gdac .Program =_ccgf ;return _gdac ,nil ;};
func (_gcge *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _gcge ._dbcbe };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_eccf :map[_bab .PdfObject ]struct{}{},_dccce :_eggca (),_fdcebg :_bab .NewParserFromString (txt )};};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_abdg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _abdg .AlternateSpace ==nil {return nil ,_cg .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _abdg .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_gdfe *PdfAnnotationProjection )ToPdfObject ()_bab .PdfObject {_gdfe .PdfAnnotation .ToPdfObject ();_ggfg :=_gdfe ._bcc ;_gfba :=_ggfg .PdfObject .(*_bab .PdfObjectDictionary );_gdfe .PdfAnnotationMarkup .appendToPdfDictionary (_gfba );return _ggfg ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cggab pdfFontType0 )GetCharMetrics (code _ea .CharCode )(_cb .CharMetrics ,bool ){if _cggab .DescendantFont ==nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cggab );
return _cb .CharMetrics {},false ;};return _cggab .DescendantFont .GetCharMetrics (code );};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bab .PdfObjectArray ;TI *_bab .PdfObjectInteger ;I *_bab .PdfObjectArray ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fgeba *PdfWriter )SetNamedDestinations (names _bab .PdfObject )error {if names ==nil {return nil ;};_cgb .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_fgeba ._abbdcc .Set ("\u004e\u0061\u006de\u0073",names );return _fgeba .addObjects (names );};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_fcccb .Lock ();defer _fcccb .Unlock ();_edafc =producer };

// GetContentStream returns the XObject Form's content stream.
func (_dcbg *XObjectForm )GetContentStream ()([]byte ,error ){_caaf ,_ecdec :=_bab .DecodeStream (_dcbg ._gadgbe );if _ecdec !=nil {return nil ,_ecdec ;};return _caaf ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ebe :=NewPdfAction ();_agf :=&PdfActionGoTo {};_agf .PdfAction =_ebe ;_ebe .SetContext (_agf );return _agf ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_bafc *PdfPage )AddContentStreamByString (contentStr string )error {_egecd ,_ecbb :=_bab .MakeStream ([]byte (contentStr ),_bab .NewFlateEncoder ());if _ecbb !=nil {return _ecbb ;};if _bafc .Contents ==nil {_bafc .Contents =_egecd ;}else {_facda :=_bab .TraceToDirectObject (_bafc .Contents );
_ffbee ,_deccc :=_facda .(*_bab .PdfObjectArray );if !_deccc {_ffbee =_bab .MakeArray (_facda );};_ffbee .Append (_egecd );_bafc .Contents =_ffbee ;};return nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dbbeg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dbbeg ._bdgbd ==nil {_dbbeg ._bdgbd =_dea .NewPSExecutor (_dbbeg .Program );};var _gccb []_dea .PSObject ;for _ ,_bbcdf :=range xVec {_gccb =append (_gccb ,_dea .MakeReal (_bbcdf ));
};_fdcb ,_gbda :=_dbbeg ._bdgbd .Execute (_gccb );if _gbda !=nil {return nil ,_gbda ;};_fecd ,_gbda :=_dea .PSObjectArrayToFloat64Array (_fdcb );if _gbda !=nil {return nil ,_gbda ;};return _fecd ,nil ;};func (_fbdf *PdfReader )newPdfAnnotationInkFromDict (_cdgb *_bab .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fde :=PdfAnnotationInk {};
_efgfc ,_gce :=_fbdf .newPdfAnnotationMarkupFromDict (_cdgb );if _gce !=nil {return nil ,_gce ;};_fde .PdfAnnotationMarkup =_efgfc ;_fde .InkList =_cdgb .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fde .BS =_cdgb .Get ("\u0042\u0053");return &_fde ,nil ;
};func _egad (_caged *PdfField )[]*PdfField {_cbga :=[]*PdfField {_caged };for _ ,_cdgcg :=range _caged .Kids {_cbga =append (_cbga ,_egad (_cdgcg )...);};return _cbga ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_cceca *PdfPageResources )HasFontByName (keyName _bab .PdfObjectName )bool {_ ,_gfbfb :=_cceca .GetFontByName (keyName );return _gfbfb ;};

// Encoder returns the font's text encoder.
func (_bdgec pdfCIDFontType0 )Encoder ()_ea .TextEncoder {return _bdgec ._fega };

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_beebf :=&PdfColorspaceCalRGB {};_beebf .BlackPoint =[]float64 {0.0,0.0,0.0};_beebf .Gamma =[]float64 {1.0,1.0,1.0};_beebf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _beebf ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bab .StreamEncoder ;Intent _bab .PdfObject ;ImageMask _bab .PdfObject ;Mask _bab .PdfObject ;Matte _bab .PdfObject ;Decode _bab .PdfObject ;Interpolate _bab .PdfObject ;
Alternatives _bab .PdfObject ;SMask _bab .PdfObject ;SMaskInData _bab .PdfObject ;Name _bab .PdfObject ;StructParent _bab .PdfObject ;ID _bab .PdfObject ;OPI _bab .PdfObject ;Metadata _bab .PdfObject ;OC _bab .PdfObject ;Stream []byte ;_dbfaf *_bab .PdfObjectStream ;
};func (_bbc *PdfReader )newPdfActionGoTo3DViewFromDict (_dbga *_bab .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_dbga .Get ("\u0054\u0041"),V :_dbga .Get ("\u0056")},nil ;};var _bgefe =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_fbbdg *PdfPage )GetPageAsIndirectObject ()*_bab .PdfIndirectObject {return _fbbdg ._efdec };

// ToPdfObject implements interface PdfModel.
func (_cgee *PdfAnnotationText )ToPdfObject ()_bab .PdfObject {_cgee .PdfAnnotation .ToPdfObject ();_bafb :=_cgee ._bcc ;_eagd :=_bafb .PdfObject .(*_bab .PdfObjectDictionary );if _cgee .PdfAnnotationMarkup !=nil {_cgee .PdfAnnotationMarkup .appendToPdfDictionary (_eagd );
};_eagd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0054\u0065\u0078\u0074"));_eagd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cgee .Open );_eagd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cgee .Name );_eagd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cgee .State );
_eagd .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cgee .StateModel );return _bafb ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bab .PdfObject ;Name _bab .PdfObject ;State _bab .PdfObject ;StateModel _bab .PdfObject ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_bage :_bab .MakeIndirectObject (_bab .MakeDict ())};};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fdcebg *_bab .PdfParser ;_gfaca _bab .PdfObject ;_fbeff *_bab .PdfIndirectObject ;_dgfda *_bab .PdfObjectDictionary ;_aedab []*_bab .PdfIndirectObject ;PageList []*PdfPage ;_bbaef int ;_bbcgg *_bab .PdfObjectDictionary ;_effeg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dccce *modelManager ;_geegb bool ;_eccf map[_bab .PdfObject ]struct{};_bcfc _ad .ReadSeeker ;_cgdgc string ;};

// AddOutlineTree adds outlines to a PDF file.
func (_cfbea *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_cfbea ._badbg =outlineTree };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_becee *XObjectImage )ToImage ()(*Image ,error ){_abbce :=&Image {};if _becee .Height ==nil {return nil ,_cg .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_abbce .Height =*_becee .Height ;if _becee .Width ==nil {return nil ,_cg .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_abbce .Width =*_becee .Width ;if _becee .BitsPerComponent ==nil {switch _becee .Filter .(type ){case *_bab .CCITTFaxEncoder ,*_bab .JBIG2Encoder :_abbce .BitsPerComponent =1;
case *_bab .LZWEncoder ,*_bab .RunLengthEncoder :_abbce .BitsPerComponent =8;default:return nil ,_cg .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_abbce .BitsPerComponent =*_becee .BitsPerComponent ;};_abbce .ColorComponents =_becee .ColorSpace .GetNumComponents ();_becee ._dbfaf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bab .MakeInteger (int64 (_abbce .ColorComponents )));
_dbdedb ,_cfafa :=_bab .DecodeStream (_becee ._dbfaf );if _cfafa !=nil {return nil ,_cfafa ;};_abbce .Data =_dbdedb ;if _becee .Decode !=nil {_facbg ,_ceef :=_becee .Decode .(*_bab .PdfObjectArray );if !_ceef {_cgb .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_cg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_fffgc ,_beec :=_facbg .ToFloat64Array ();if _beec !=nil {return nil ,_beec ;};_abbce ._dgbgc =_fffgc ;};return _abbce ,nil ;};func (_becad *PdfReader )loadStructure ()error {if _becad ._fdcebg .GetCrypter ()!=nil &&!_becad ._fdcebg .IsAuthenticated (){return _d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gddd :=_becad ._fdcebg .GetTrailer ();if _gddd ==nil {return _d .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ffaff ,_ffccb :=_gddd .Get ("\u0052\u006f\u006f\u0074").(*_bab .PdfObjectReference );if !_ffccb {return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gddd );
};_gdbea ,_eded :=_becad ._fdcebg .LookupByReference (*_ffaff );if _eded !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eded );
return _eded ;};_aafgfb ,_ffccb :=_gdbea .(*_bab .PdfIndirectObject );if !_ffccb {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_gdbea ,*_gddd );
return _cg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dfdcc ,_ffccb :=(*_aafgfb ).PdfObject .(*_bab .PdfObjectDictionary );if !_ffccb {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_aafgfb .PdfObject );
return _cg .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cgb .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dfdcc );_bfadcc ,_ffccb :=_dfdcc .Get ("\u0050\u0061\u0067e\u0073").(*_bab .PdfObjectReference );
if !_ffccb {return _cg .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bfdbdd ,_eded :=_becad ._fdcebg .LookupByReference (*_bfadcc );
if _eded !=nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _eded ;};_ggfbd ,_ffccb :=_bfdbdd .(*_bab .PdfIndirectObject );if !_ffccb {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_cgb .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ggfbd );return _cg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bccb ,_ffccb :=_ggfbd .PdfObject .(*_bab .PdfObjectDictionary );if !_ffccb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ggfbd );
return _cg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bccf ,_ffccb :=_bab .GetInt (_bccb .Get ("\u0043\u006f\u0075n\u0074"));if !_ffccb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _cg .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_ffccb =_bab .GetName (_bccb .Get ("\u0054\u0079\u0070\u0065"));!_ffccb {_cgb .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_bccb .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0050\u0061\u0067e\u0073"));};if _bggb ,_efcedc :=_bab .GetInt (_bccb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_efcedc {_gfecea :=int64 (*_bggb );_becad .Rotate =&_gfecea ;};_becad ._gfaca =_ffaff ;
_becad ._bbcgg =_dfdcc ;_becad ._dgfda =_bccb ;_becad ._fbeff =_ggfbd ;_becad ._bbaef =int (*_bccf );_becad ._aedab =[]*_bab .PdfIndirectObject {};_fgcfcb :=map[_bab .PdfObject ]struct{}{};_eded =_becad .buildPageList (_ggfbd ,nil ,_fgcfcb );if _eded !=nil {return _eded ;
};_cgb .Log .Trace ("\u002d\u002d\u002d");_cgb .Log .Trace ("\u0054\u004f\u0043");_cgb .Log .Trace ("\u0050\u0061\u0067e\u0073");_cgb .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_becad ._aedab ),_becad ._aedab );_becad ._effeg ,_eded =_becad .loadOutlines ();
if _eded !=nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_eded );
return _eded ;};_becad .AcroForm ,_eded =_becad .loadForms ();if _eded !=nil {return _eded ;};_becad .DSS ,_eded =_becad .loadDSS ();if _eded !=nil {return _eded ;};return nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dgaac *PdfShadingType6 )ToPdfObject ()_bab .PdfObject {_dgaac .PdfShading .ToPdfObject ();_cabdd ,_dbdc :=_dgaac .getShadingDict ();if _dbdc !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dgaac .BitsPerCoordinate !=nil {_cabdd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dgaac .BitsPerCoordinate );};if _dgaac .BitsPerComponent !=nil {_cabdd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dgaac .BitsPerComponent );
};if _dgaac .BitsPerFlag !=nil {_cabdd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dgaac .BitsPerFlag );};if _dgaac .Decode !=nil {_cabdd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dgaac .Decode );};if _dgaac .Function !=nil {if len (_dgaac .Function )==1{_cabdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgaac .Function [0].ToPdfObject ());
}else {_bfdgf :=_bab .MakeArray ();for _ ,_bffcg :=range _dgaac .Function {_bfdgf .Append (_bffcg .ToPdfObject ());};_cabdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfdgf );};};return _dgaac ._bfgd ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dafb pdfFontSimple )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){if _dafb ._cfdae !=nil {_efcg ,_baea :=_dafb ._cfdae .Read (r );if _baea {return _efcg ,true ;};};_ebcd :=_dafb .Encoder ();if _ebcd ==nil {_cgb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_dafb );
return _cb .CharMetrics {},false ;};_dgbeg ,_gdgc :=_ebcd .RuneToCharcode (r );if !_gdgc {if r !=' '{_cgb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_dafb );
};return _cb .CharMetrics {},false ;};_egde ,_agafa :=_dafb .GetCharMetrics (_dgbeg );return _egde ,_agafa ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ggga *PdfReader )GetOCProperties ()(_bab .PdfObject ,error ){_fgebe :=_ggga ._bbcgg ;_edabb :=_fgebe .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_edabb =_bab .ResolveReference (_edabb );if !_ggga ._geegb {_dgede :=_ggga .traverseObjectData (_edabb );
if _dgede !=nil {return nil ,_dgede ;};};return _edabb ,nil ;};func (_bfga *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bab .PdfObject ;FontFamily _bab .PdfObject ;FontStretch _bab .PdfObject ;FontWeight _bab .PdfObject ;Flags _bab .PdfObject ;FontBBox _bab .PdfObject ;ItalicAngle _bab .PdfObject ;Ascent _bab .PdfObject ;Descent _bab .PdfObject ;
Leading _bab .PdfObject ;CapHeight _bab .PdfObject ;XHeight _bab .PdfObject ;StemV _bab .PdfObject ;StemH _bab .PdfObject ;AvgWidth _bab .PdfObject ;MaxWidth _bab .PdfObject ;MissingWidth _bab .PdfObject ;FontFile _bab .PdfObject ;FontFile2 _bab .PdfObject ;
FontFile3 _bab .PdfObject ;CharSet _bab .PdfObject ;_agee int ;_acddd float64 ;*fontFile ;_cgebd *_cb .TtfType ;

// Additional entries for CIDFonts
Style _bab .PdfObject ;Lang _bab .PdfObject ;FD _bab .PdfObject ;CIDSet _bab .PdfObject ;_dbcccc *_bab .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ebbga *PdfOutlineTreeNode )GetContainingPdfObject ()_bab .PdfObject {return _ebbga .GetContext ().GetContainingPdfObject ();};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_egebc :=NewPdfAnnotation ();_dgbc :=&PdfAnnotationCaret {};_dgbc .PdfAnnotation =_egebc ;_dgbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egebc .SetContext (_dgbc );return _dgbc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_babaf *PdfShadingType5 )ToPdfObject ()_bab .PdfObject {_babaf .PdfShading .ToPdfObject ();_ecab ,_gffcf :=_babaf .getShadingDict ();if _gffcf !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _babaf .BitsPerCoordinate !=nil {_ecab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_babaf .BitsPerCoordinate );};if _babaf .BitsPerComponent !=nil {_ecab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_babaf .BitsPerComponent );
};if _babaf .VerticesPerRow !=nil {_ecab .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_babaf .VerticesPerRow );};if _babaf .Decode !=nil {_ecab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_babaf .Decode );};if _babaf .Function !=nil {if len (_babaf .Function )==1{_ecab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_babaf .Function [0].ToPdfObject ());
}else {_deedf :=_bab .MakeArray ();for _ ,_dadg :=range _babaf .Function {_deedf .Append (_dadg .ToPdfObject ());};_ecab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deedf );};};return _babaf ._bfgd ;};

// ToInteger convert to an integer format.
func (_gbedg *PdfColorLab )ToInteger (bits int )[3]uint32 {_gefb :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gefb *_gbedg .L ()),uint32 (_gefb *_gbedg .A ()),uint32 (_gefb *_gbedg .B ())};};func (_ffe *PdfReader )newPdfActionGotoFromDict (_aeg *_bab .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_aeg .Get ("\u0044")},nil ;
};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_dfeac *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dfeac .Alternate ==nil {_cgb .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dfeac .N ==1{_cgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_acfe :=NewPdfColorspaceDeviceGray ();return _acfe .ColorToRGB (color );}else if _dfeac .N ==3{_cgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _dfeac .N ==4{_cgb .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ebga :=NewPdfColorspaceDeviceCMYK ();return _ebga .ColorToRGB (color );}else {return nil ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_cgb .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dfeac );
return _dfeac .Alternate .ColorToRGB (color );};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_fbgdb *PdfPattern )SetContext (ctx PdfModel ){_fbgdb ._gaaea =ctx };

// ToPdfObject converts rectangle to a PDF object.
func (_ccbd *PdfRectangle )ToPdfObject ()_bab .PdfObject {return _bab .MakeArray (_bab .MakeFloat (_ccbd .Llx ),_bab .MakeFloat (_ccbd .Lly ),_bab .MakeFloat (_ccbd .Urx ),_bab .MakeFloat (_ccbd .Ury ));};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bgad *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_agafe ,_eedd :=color .(*PdfColorDeviceCMYK );if !_eedd {_cgb .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gffd :=_agafe .C ();_dffcg :=_agafe .M ();_cbae :=_agafe .Y ();_bffe :=_agafe .K ();_gffd =_gffd *(1-_bffe )+_bffe ;_dffcg =_dffcg *(1-_bffe )+_bffe ;
_cbae =_cbae *(1-_bffe )+_bffe ;_fcd :=1-_gffd ;_baaef :=1-_dffcg ;_bebe :=1-_cbae ;return NewPdfColorDeviceRGB (_fcd ,_baaef ,_bebe ),nil ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dfcge :=PdfDate {};_dbgca :=_cgfe .FindAllStringSubmatch (dateStr ,1);if len (_dbgca )< 1{return _dfcge ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_dbgca [0])!=10{return _dfcge ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_dfcge ._gfgge ,_ =_dc .ParseInt (_dbgca [0][1],10,32);_dfcge ._ceda ,_ =_dc .ParseInt (_dbgca [0][2],10,32);_dfcge ._gbfea ,_ =_dc .ParseInt (_dbgca [0][3],10,32);_dfcge ._cbcea ,_ =_dc .ParseInt (_dbgca [0][4],10,32);_dfcge ._ccedb ,_ =_dc .ParseInt (_dbgca [0][5],10,32);
_dfcge ._bdgfc ,_ =_dc .ParseInt (_dbgca [0][6],10,32);if len (_dbgca [0][7])> 0{_dfcge ._fcbfd =_dbgca [0][7][0];}else {_dfcge ._fcbfd ='+';};if len (_dbgca [0][8])> 0{_dfcge ._cecf ,_ =_dc .ParseInt (_dbgca [0][8],10,32);}else {_dfcge ._cecf =0;};if len (_dbgca [0][9])> 0{_dfcge ._fead ,_ =_dc .ParseInt (_dbgca [0][9],10,32);
}else {_dfcge ._fead =0;};return _dfcge ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_faef *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_feee :=pageNum -1;var _bba *PdfPage ;for _cccf ,_eeccb :=range _faef ._gdad {if _cccf ==_feee {_bba =_eeccb ;};};if _bba ==nil {return _d .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _bba ._efdec !=nil &&_bba ._efdec .GetParser ()==_faef ._fgdb ._fdcebg {_bba =_bba .Duplicate ();_faef ._gdad [_feee ]=_bba ;};page =page .Duplicate ();_cbfdd (page );_gfad :=_becf (_bba );_gbgc :=_becf (page );_edef :=make (map[_bab .PdfObjectName ]_bab .PdfObjectName );
for _gfed :=range _gbgc {if _ ,_gbbce :=_gfad [_gfed ];_gbbce {for _ecdb :=1;true ;_ecdb ++{_faca :=_bab .PdfObjectName (string (_gfed )+_dc .Itoa (_ecdb ));if _ ,_gbddg :=_gfad [_faca ];!_gbddg {_edef [_gfed ]=_faca ;break ;};};};};_ecbg ,_decc :=page .GetContentStreams ();
if _decc !=nil {return _decc ;};_fbc ,_decc :=_bba .GetContentStreams ();if _decc !=nil {return _decc ;};for _ffad ,_fede :=range _ecbg {for _dbfd ,_feded :=range _edef {_fede =_bf .Replace (_fede ,"\u002f"+string (_dbfd ),"\u002f"+string (_feded ),-1);
};_ecbg [_ffad ]=_fede ;};_fbc =append (_fbc ,_ecbg ...);if _daf :=_bba .SetContentStreams (_fbc ,_bab .NewFlateEncoder ());_daf !=nil {return _daf ;};_bba ._gagfb =append (_bba ._gagfb ,page ._gagfb ...);if _bba .Resources ==nil {_bba .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_bba .Resources .Font =_faef .mergeResources (_bba .Resources .Font ,page .Resources .Font ,_edef );_bba .Resources .XObject =_faef .mergeResources (_bba .Resources .XObject ,page .Resources .XObject ,_edef );_bba .Resources .Properties =_faef .mergeResources (_bba .Resources .Properties ,page .Resources .Properties ,_edef );
if _bba .Resources .ProcSet ==nil {_bba .Resources .ProcSet =page .Resources .ProcSet ;};_bba .Resources .Shading =_faef .mergeResources (_bba .Resources .Shading ,page .Resources .Shading ,_edef );_bba .Resources .ExtGState =_faef .mergeResources (_bba .Resources .ExtGState ,page .Resources .ExtGState ,_edef );
};_eaea ,_decc :=_bba .GetMediaBox ();if _decc !=nil {return _decc ;};_dgfc ,_decc :=page .GetMediaBox ();if _decc !=nil {return _decc ;};var _afaf bool ;if _eaea .Llx > _dgfc .Llx {_eaea .Llx =_dgfc .Llx ;_afaf =true ;};if _eaea .Lly > _dgfc .Lly {_eaea .Lly =_dgfc .Lly ;
_afaf =true ;};if _eaea .Urx < _dgfc .Urx {_eaea .Urx =_dgfc .Urx ;_afaf =true ;};if _eaea .Ury < _dgfc .Ury {_eaea .Ury =_dgfc .Ury ;_afaf =true ;};if _afaf {_bba .MediaBox =_eaea ;};return nil ;};func _cbde (_aeae *[]*PdfField ,_aecca FieldFilterFunc ,_abbgf bool )[]*PdfField {if _aeae ==nil {return nil ;
};_daag :=*_aeae ;if len (*_aeae )==0{return nil ;};_efede :=_daag [:0];if _aecca ==nil {_aecca =func (*PdfField )bool {return true };};var _gbafd []*PdfField ;for _ ,_bcag :=range _daag {_abgea :=_aecca (_bcag );if _abgea {_gbafd =append (_gbafd ,_bcag );
if len (_bcag .Kids )> 0{_gbafd =append (_gbafd ,_cbde (&_bcag .Kids ,_aecca ,_abbgf )...);};};if !_abbgf ||!_abgea ||len (_bcag .Kids )> 0{_efede =append (_efede ,_bcag );};};*_aeae =_efede ;return _gbafd ;};

// ValidateSignatures validates digital signatures in the document.
func (_ffafe *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ffafe .AcroForm ==nil {return nil ,nil ;};if _ffafe .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_dadab *PdfSignature ;
_dgada *PdfField ;_bdgfg SignatureHandler ;};var _dbgd []*sigFieldPair ;for _ ,_eecac :=range _ffafe .AcroForm .AllFields (){if _eecac .V ==nil {continue ;};if _ebgcd ,_eaaf :=_bab .GetDict (_eecac .V );_eaaf {if _gdggb ,_edccba :=_bab .GetNameVal (_ebgcd .Get ("\u0054\u0079\u0070\u0065"));
_edccba &&_gdggb =="\u0053\u0069\u0067"{_effgf ,_bcfdeb :=_bab .GetIndirect (_eecac .V );if !_bcfdeb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fagee ,_fdaf :=_ffafe .newPdfSignatureFromIndirect (_effgf );if _fdaf !=nil {return nil ,_fdaf ;};var _fbcg SignatureHandler ;for _ ,_cdafe :=range handlers {if _cdafe .IsApplicable (_fagee ){_fbcg =_cdafe ;break ;};};_dbgd =append (_dbgd ,&sigFieldPair {_dadab :_fagee ,_dgada :_eecac ,_bdgfg :_fbcg });
};};};var _dbgbf []SignatureValidationResult ;for _ ,_ecebb :=range _dbgd {_aadfg :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ecebb ._dgada }};if _ecebb ._bdgfg ==nil {_aadfg .Errors =append (_aadfg .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_dbgbf =append (_dbgbf ,_aadfg );continue ;};_dfdcd ,_caea :=_ecebb ._bdgfg .NewDigest (_ecebb ._dadab );if _caea !=nil {_aadfg .Errors =append (_aadfg .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_caea .Error ());_dbgbf =append (_dbgbf ,_aadfg );
continue ;};_affgd :=_ecebb ._dadab .ByteRange ;if _affgd ==nil {_aadfg .Errors =append (_aadfg .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_dbgbf =append (_dbgbf ,_aadfg );continue ;};for _fafba :=0;
_fafba < _affgd .Len ();_fafba =_fafba +2{_afdbb ,_ :=_bab .GetNumberAsInt64 (_affgd .Get (_fafba ));_abdbb ,_ :=_bab .GetIntVal (_affgd .Get (_fafba +1));if _ ,_cbdbe :=_ffafe ._bcfc .Seek (_afdbb ,_ad .SeekStart );_cbdbe !=nil {return nil ,_cbdbe ;};
_eebbec :=make ([]byte ,_abdbb );if _ ,_acacf :=_ffafe ._bcfc .Read (_eebbec );_acacf !=nil {return nil ,_acacf ;};_dfdcd .Write (_eebbec );};_deaeb ,_caea :=_ecebb ._bdgfg .Validate (_ecebb ._dadab ,_dfdcd );if _caea !=nil {return nil ,_caea ;};_deaeb .Name =_ecebb ._dadab .Name .Decoded ();
_deaeb .Reason =_ecebb ._dadab .Reason .Decoded ();if _ecebb ._dadab .M !=nil {_cacc ,_cebad :=NewPdfDate (_ecebb ._dadab .M .String ());if _cebad !=nil {_deaeb .Errors =append (_deaeb .Errors ,_cebad .Error ());continue ;};_deaeb .Date =_cacc ;};_deaeb .ContactInfo =_ecebb ._dadab .ContactInfo .Decoded ();
_deaeb .Location =_ecebb ._dadab .Location .Decoded ();_deaeb .Fields =_aadfg .Fields ;_dbgbf =append (_dbgbf ,_deaeb );};return _dbgbf ,nil ;};func _bcddg (_abbc *_bab .PdfObjectDictionary ,_ecggg *fontCommon ,_ebfg _ea .TextEncoder )(*pdfFontSimple ,error ){_ddddg :=_fegc (_ecggg );
_ddddg ._baffg =_ebfg ;if _ebfg ==nil {_aaccc :=_abbc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aaccc ==nil {_aaccc =_bab .MakeInteger (0);};_ddddg .FirstChar =_aaccc ;_gabe ,_baffge :=_bab .GetIntVal (_aaccc );if !_baffge {_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aaccc );
return nil ,_bab .ErrTypeError ;};_dbcfec :=_ea .CharCode (_gabe );_aaccc =_abbc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aaccc ==nil {_aaccc =_bab .MakeInteger (255);};_ddddg .LastChar =_aaccc ;_gabe ,_baffge =_bab .GetIntVal (_aaccc );
if !_baffge {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aaccc );return nil ,_bab .ErrTypeError ;
};_gbgg :=_ea .CharCode (_gabe );_ddddg ._dbfe =make (map[_ea .CharCode ]float64 );_aaccc =_abbc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aaccc !=nil {_ddddg .Widths =_aaccc ;_cagce ,_daeb :=_bab .GetArray (_aaccc );if !_daeb {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aaccc );
return nil ,_bab .ErrTypeError ;};_fbfgd ,_fbfd :=_cagce .ToFloat64Array ();if _fbfd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fbfd ;};if len (_fbfgd )!=int (_gbgg -_dbcfec +1){_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gbgg -_dbcfec +1,len (_fbfgd ));
return nil ,_bab .ErrRangeError ;};for _ggbcd ,_dfded :=range _fbfgd {_ddddg ._dbfe [_dbcfec +_ea .CharCode (_ggbcd )]=_dfded ;};};};_ddddg .Encoding =_bab .TraceToDirectObject (_abbc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _ddddg ,nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bged *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if _bged .Alternate ==nil {if _bged .N ==1{_gaad :=NewPdfColorspaceDeviceGray ();return _gaad .ColorFromPdfObjects (objects );}else if _bged .N ==3{_daff :=NewPdfColorspaceDeviceRGB ();
return _daff .ColorFromPdfObjects (objects );}else if _bged .N ==4{_efde :=NewPdfColorspaceDeviceCMYK ();return _efde .ColorFromPdfObjects (objects );}else {return nil ,_cg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bged .Alternate .ColorFromPdfObjects (objects );};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_aagfc *PdfPageResources )HasExtGState (keyName _bab .PdfObjectName )bool {_ ,_fcefb :=_aagfc .GetFontByName (keyName );return _fcefb ;};type fontFile struct{_fbfac string ;_deefe string ;_bgac _ea .SimpleEncoder ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_geee *Image )ToGoImage ()(_eg .Image ,error ){_cgb .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_ggaf ,_fbge :=_ca .NewImage (int (_geee .Width ),int (_geee .Height ),int (_geee .BitsPerComponent ),_geee .ColorComponents ,_geee .Data ,_geee ._fffdd ,_geee ._dgbgc );
if _fbge !=nil {return nil ,_fbge ;};return _ggaf ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_babcg *PdfReader )GetEncryptionMethod ()string {_baagec :=_babcg ._fdcebg .GetCrypter ();return _baagec .String ();};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bab .PdfObjectInteger ;BitsPerComponent *_bab .PdfObjectInteger ;BitsPerFlag *_bab .PdfObjectInteger ;Decode *_bab .PdfObjectArray ;Function []PdfFunction ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_fdea *PdfWriter )copyObjects (){_agdfg :=make (map[_bab .PdfObject ]_bab .PdfObject );_gfce :=make ([]_bab .PdfObject ,0,len (_fdea ._bbceb ));_ccgc :=make (map[_bab .PdfObject ]struct{},len (_fdea ._bbceb ));_bbcce :=make (map[_bab .PdfObject ]struct{});
for _ ,_abbgg :=range _fdea ._bbceb {_ggcdb :=_fdea .copyObject (_abbgg ,_agdfg ,_bbcce ,false );if _ ,_cbfc :=_bbcce [_abbgg ];_cbfc {continue ;};_gfce =append (_gfce ,_ggcdb );_ccgc [_ggcdb ]=struct{}{};};_fdea ._bbceb =_gfce ;_fdea ._acagcb =_ccgc ;
_fdea ._cgddgb =_fdea .copyObject (_fdea ._cgddgb ,_agdfg ,nil ,false ).(*_bab .PdfIndirectObject );_fdea ._bdage =_fdea .copyObject (_fdea ._bdage ,_agdfg ,nil ,false ).(*_bab .PdfIndirectObject );if _fdea ._gdgbe !=nil {_fdea ._gdgbe =_fdea .copyObject (_fdea ._gdgbe ,_agdfg ,nil ,false ).(*_bab .PdfIndirectObject );
};if _fdea ._fbeeg {_bbbbc :=make (map[_bab .PdfObject ]int64 );for _ebfd ,_afecd :=range _fdea ._efead {if _aeabd ,_cecgd :=_agdfg [_ebfd ];_cecgd {_bbbbc [_aeabd ]=_afecd ;}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_fdea ._efead =_bbbbc ;};};func (_cgbbe *PdfReader )buildOutlineTree (_edcg _bab .PdfObject ,_dcagg *PdfOutlineTreeNode ,_bffa *PdfOutlineTreeNode ,_bbaf map[_bab .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bbaf ==nil {_bbaf =map[_bab .PdfObject ]struct{}{};
};_bbaf [_edcg ]=struct{}{};_cabeg ,_bcff :=_edcg .(*_bab .PdfIndirectObject );if !_bcff {return nil ,nil ,_d .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_edcg );
};_ggcdd ,_fefcb :=_cabeg .PdfObject .(*_bab .PdfObjectDictionary );if !_fefcb {return nil ,nil ,_cg .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cgb .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_ggcdd ,_cabeg ,_cabeg );
if _edcgc :=_ggcdd .Get ("\u0054\u0069\u0074l\u0065");_edcgc !=nil {_cbda ,_deeb :=_cgbbe .newPdfOutlineItemFromIndirectObject (_cabeg );if _deeb !=nil {return nil ,nil ,_deeb ;};_cbda .Parent =_dcagg ;_cbda .Prev =_bffa ;_dcfbf :=_bab .ResolveReference (_ggcdd .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_adece :=_bbaf [_dcfbf ];_dcfbf !=nil &&_dcfbf !=_cabeg &&!_adece {if !_bab .IsNullObject (_dcfbf ){_eeebc ,_acfbe ,_ccddf :=_cgbbe .buildOutlineTree (_dcfbf ,&_cbda .PdfOutlineTreeNode ,nil ,_bbaf );if _ccddf !=nil {_cgb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ccddf );
}else {_cbda .First =_eeebc ;_cbda .Last =_acfbe ;};};};_abde :=_bab .ResolveReference (_ggcdd .Get ("\u004e\u0065\u0078\u0074"));if _ ,_agabea :=_bbaf [_abde ];_abde !=nil &&_abde !=_cabeg &&!_agabea {if !_bab .IsNullObject (_abde ){_cfcea ,_gdcc ,_bgfg :=_cgbbe .buildOutlineTree (_abde ,_dcagg ,&_cbda .PdfOutlineTreeNode ,_bbaf );
if _bgfg !=nil {_cgb .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bgfg );
}else {_cbda .Next =_cfcea ;return &_cbda .PdfOutlineTreeNode ,_gdcc ,nil ;};};};return &_cbda .PdfOutlineTreeNode ,&_cbda .PdfOutlineTreeNode ,nil ;};_badac ,_cfefg :=_ffdb (_cabeg );if _cfefg !=nil {return nil ,nil ,_cfefg ;};_badac .Parent =_dcagg ;
if _acecc :=_ggcdd .Get ("\u0046\u0069\u0072s\u0074");_acecc !=nil {_acecc =_bab .ResolveReference (_acecc );if _ ,_gaefa :=_bbaf [_acecc ];_acecc !=nil &&_acecc !=_cabeg &&!_gaefa {_addbb :=_bab .TraceToDirectObject (_acecc );if _ ,_befe :=_addbb .(*_bab .PdfObjectNull );
!_befe &&_addbb !=nil {_efgec ,_gcabd ,_dgddfc :=_cgbbe .buildOutlineTree (_acecc ,&_badac .PdfOutlineTreeNode ,nil ,_bbaf );if _dgddfc !=nil {_cgb .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_dgddfc );
}else {_badac .First =_efgec ;_badac .Last =_gcabd ;};};};};return &_badac .PdfOutlineTreeNode ,&_badac .PdfOutlineTreeNode ,nil ;};func _dcegb (_cbcfa string )map[string ]string {_gfaf :=_cagg .Split (_cbcfa ,-1);_dgfgb :=map[string ]string {};for _ ,_bebbg :=range _gfaf {_begc :=_dbfc .FindStringSubmatch (_bebbg );
if _begc ==nil {continue ;};_gffgd ,_dfaca :=_begc [1],_begc [2];_dgfgb [_gffgd ]=_dfaca ;};return _dgfgb ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_baaec *XObjectForm )GetContainingPdfObject ()_bab .PdfObject {return _baaec ._gadgbe };func _cdbg (_ccbad []byte )(_dbca ,_agec string ,_babce error ){_cgb .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_ccbad ));
_efaed :=_ggfd .FindIndex (_ccbad );if _efaed ==nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bab .ErrTypeError ;};_ebacf :=_efaed [1];_cdfag :=_bf .Index (string (_ccbad [_ebacf :]),_efced );if _cdfag < 0{_dbca =string (_ccbad [_ebacf :]);return _dbca ,"",nil ;};_cbgba :=_ebacf +_cdfag ;_dbca =string (_ccbad [_ebacf :_cbgba ]);_dgce :=_cbgba ;
_cdfag =_bf .Index (string (_ccbad [_dgce :]),_bgcd );if _cdfag < 0{_cgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_babce );
return "","",_bab .ErrTypeError ;};_cgddee :=_dgce +_cdfag ;_agec =string (_ccbad [_dgce :_cgddee ]);return _dbca ,_agec ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ccdb *PdfWriter )AddPage (page *PdfPage )error {const _ffafc ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cbfdd (page );_dafcgc :=page .ToPdfObject ();_cgb .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_cgb .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_dafcgc );_eggf ,_ebcec :=_bab .GetIndirect (_dafcgc );if !_ebcec {return _cg .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_cgb .Log .Trace ("\u0025\u0073",_eggf );_cgb .Log .Trace ("\u0025\u0073",_eggf .PdfObject );_fggde ,_ebcec :=_bab .GetDict (_eggf .PdfObject );if !_ebcec {return _cg .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_edag ,_ebcec :=_bab .GetName (_fggde .Get ("\u0054\u0079\u0070\u0065"));if !_ebcec {return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fggde .Get ("\u0054\u0079\u0070\u0065"));
};if _edag .String ()!="\u0050\u0061\u0067\u0065"{return _cg .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gaaee :=[]_bab .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_efdgd ,_dcef :=_bab .GetIndirect (_fggde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_cgb .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fggde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_dcef );
for _dcef {_cgb .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_efdgd );_dbag ,_fcaaa :=_bab .GetDict (_efdgd .PdfObject );if !_fcaaa {return _cg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cbdea :=range _gaaee {_cgb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cbdea );if _fggde .Get (_cbdea )!=nil {_cgb .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fgfgf :=_dbag .Get (_cbdea );_fgfgf !=nil {_cgb .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cbdea );_fggde .Set (_cbdea ,_fgfgf );};};_efdgd ,_dcef =_bab .GetIndirect (_dbag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_cgb .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_cgb .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fggde .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccdb ._baadg );_eggf .PdfObject =_fggde ;_efadf ,_ebcec :=_bab .GetDict (_ccdb ._baadg .PdfObject );if !_ebcec {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_efgfa ,_ebcec :=_bab .GetArray (_efadf .Get ("\u004b\u0069\u0064\u0073"));if !_ebcec {return _cg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_efgfa .Append (_eggf );_ccdb ._begec [_fggde ]=struct{}{};_gdfcb ,_ebcec :=_bab .GetInt (_efadf .Get ("\u0043\u006f\u0075n\u0074"));if !_ebcec {return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_gdfcb =*_gdfcb +1;if page ._aadae ==nil {_cefbb :=_cbf .Track (_ccdb ._caaafb ,_ffafc );if _cefbb !=nil {return _cefbb ;};}else {_daeff :=_cbf .Track (page ._aadae ._cgdgc ,_ffafc );if _daeff !=nil {return _daeff ;};};_ccdb .addObject (_eggf );_aacf :=_ccdb .addObjects (_fggde );
if _aacf !=nil {return _aacf ;};return nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dbf :=NewPdfAnnotation ();_geb :=&PdfAnnotationSound {};_geb .PdfAnnotation =_dbf ;_geb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbf .SetContext (_geb );return _geb ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_acbb *PdfPageResources )GetFontByName (keyName _bab .PdfObjectName )(_bab .PdfObject ,bool ){if _acbb .Font ==nil {return nil ,false ;};_ccfd ,_gfcda :=_bab .TraceToDirectObject (_acbb .Font ).(*_bab .PdfObjectDictionary );if !_gfcda {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bab .TraceToDirectObject (_acbb .Font ));
return nil ,false ;};if _gedb :=_ccfd .Get (keyName );_gedb !=nil {return _gedb ,true ;};return nil ,false ;};func _ggfb (_cafab *_bab .PdfIndirectObject ,_bfad *_bab .PdfObjectDictionary )(*DSS ,error ){if _cafab ==nil {_cafab =_bab .MakeIndirectObject (nil );
};_cafab .PdfObject =_bab .MakeDict ();_beacg :=map[string ]*VRI {};if _bbace ,_afde :=_bab .GetDict (_bfad .Get ("\u0056\u0052\u0049"));_afde {for _ ,_aedb :=range _bbace .Keys (){if _dfabb ,_fgefc :=_bab .GetDict (_bbace .Get (_aedb ));_fgefc {_beacg [_bf .ToUpper (_aedb .String ())]=_eecb (_dfabb );
};};};return &DSS {Certs :_bacf (_bfad .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_bacf (_bfad .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_bacf (_bfad .Get ("\u0043\u0052\u004c\u0073")),VRI :_beacg ,_ddgc :_cafab },nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bab .PdfObject ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ddebg :=&PdfAnnotation {};_ddebg ._bcc =_bab .MakeIndirectObject (_bab .MakeDict ());return _ddebg ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_dbfgc *PdfFilespec )getDict ()*_bab .PdfObjectDictionary {if _cfec ,_dged :=_dbfgc ._cebg .(*_bab .PdfIndirectObject );_dged {_cfef ,_dcbd :=_cfec .PdfObject .(*_bab .PdfObjectDictionary );if !_dcbd {return nil ;
};return _cfef ;}else if _ddcfa ,_dfedg :=_dbfgc ._cebg .(*_bab .PdfObjectDictionary );_dfedg {return _ddcfa ;}else {_cgb .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dbfgc ._cebg );
return nil ;};};func (_bdgdb *Image )resampleLowBits (_aded []uint32 ){_cgfcf :=_ca .BytesPerLine (int (_bdgdb .Width ),int (_bdgdb .BitsPerComponent ),_bdgdb .ColorComponents );_eddgb :=make ([]byte ,_bdgdb .ColorComponents *_cgfcf *int (_bdgdb .Height ));
_decf :=int (_bdgdb .BitsPerComponent )*_bdgdb .ColorComponents *int (_bdgdb .Width );_gbagg :=uint8 (8);var (_egefa ,_gaec int ;_cfgbc uint32 ;);for _bddfe :=0;_bddfe < int (_bdgdb .Height );_bddfe ++{_gaec =_bddfe *_cgfcf ;for _bfddc :=0;_bfddc < _decf ;
_bfddc ++{_cfgbc =_aded [_egefa ];_gbagg -=uint8 (_bdgdb .BitsPerComponent );_eddgb [_gaec ]|=byte (_cfgbc )<<_gbagg ;if _gbagg ==0{_gbagg =8;_gaec ++;};_egefa ++;};};_bdgdb .Data =_eddgb ;};func (_efdf *PdfReader )newPdfAnnotationFromIndirectObject (_bbde *_bab .PdfIndirectObject )(*PdfAnnotation ,error ){_gbeb ,_fbd :=_bbde .PdfObject .(*_bab .PdfObjectDictionary );
if !_fbd {return nil ,_d .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_efdf ._dccce .GetModelFromPrimitive (_gbeb );model !=nil {_fca ,_dcf :=model .(*PdfAnnotation );if !_dcf {return nil ,_d .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _fca ,nil ;};_cagdd :=&PdfAnnotation {};_cagdd ._bcc =_bbde ;_efdf ._dccce .Register (_gbeb ,_cagdd );if _gcf :=_gbeb .Get ("\u0054\u0079\u0070\u0065");_gcf !=nil {_babc ,_cged :=_gcf .(*_bab .PdfObjectName );if !_cged {_cgb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gcf );
}else {if *_babc !="\u0041\u006e\u006eo\u0074"{_cgb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_babc );};};};
if _bgfe :=_gbeb .Get ("\u0052\u0065\u0063\u0074");_bgfe !=nil {_cagdd .Rect =_bgfe ;};if _adgdg :=_gbeb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_adgdg !=nil {_cagdd .Contents =_adgdg ;};if _afca :=_gbeb .Get ("\u0050");_afca !=nil {_cagdd .P =_afca ;
};if _faa :=_gbeb .Get ("\u004e\u004d");_faa !=nil {_cagdd .NM =_faa ;};if _gbed :=_gbeb .Get ("\u004d");_gbed !=nil {_cagdd .M =_gbed ;};if _gea :=_gbeb .Get ("\u0046");_gea !=nil {_cagdd .F =_gea ;};if _eaf :=_gbeb .Get ("\u0041\u0050");_eaf !=nil {_cagdd .AP =_eaf ;
};if _egcf :=_gbeb .Get ("\u0041\u0053");_egcf !=nil {_cagdd .AS =_egcf ;};if _cbfa :=_gbeb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cbfa !=nil {_cagdd .Border =_cbfa ;};if _cgg :=_gbeb .Get ("\u0043");_cgg !=nil {_cagdd .C =_cgg ;};if _gbdd :=_gbeb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gbdd !=nil {_cagdd .StructParent =_gbdd ;};if _cbfe :=_gbeb .Get ("\u004f\u0043");_cbfe !=nil {_cagdd .OC =_cbfe ;};_dbaf :=_gbeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _dbaf ==nil {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_cagdd ._bda =nil ;return _cagdd ,nil ;};_aadg ,_abge :=_dbaf .(*_bab .PdfObjectName );if !_abge {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_dbaf );
return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_dbaf );};switch *_aadg {case "\u0054\u0065\u0078\u0074":_adcc ,_aecb :=_efdf .newPdfAnnotationTextFromDict (_gbeb );
if _aecb !=nil {return nil ,_aecb ;};_adcc .PdfAnnotation =_cagdd ;_cagdd ._bda =_adcc ;return _cagdd ,nil ;case "\u004c\u0069\u006e\u006b":_ecf ,_bcee :=_efdf .newPdfAnnotationLinkFromDict (_gbeb );if _bcee !=nil {return nil ,_bcee ;};_ecf .PdfAnnotation =_cagdd ;
_cagdd ._bda =_ecf ;return _cagdd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dca ,_ccea :=_efdf .newPdfAnnotationFreeTextFromDict (_gbeb );if _ccea !=nil {return nil ,_ccea ;};_dca .PdfAnnotation =_cagdd ;_cagdd ._bda =_dca ;return _cagdd ,nil ;
case "\u004c\u0069\u006e\u0065":_dff ,_acb :=_efdf .newPdfAnnotationLineFromDict (_gbeb );if _acb !=nil {return nil ,_acb ;};_dff .PdfAnnotation =_cagdd ;_cagdd ._bda =_dff ;_cgb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cagdd ,_cagdd );
_cgb .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dff ,_dff );_cgb .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dff .PdfAnnotationMarkup ,_dff .PdfAnnotationMarkup );
return _cagdd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dgd ,_dbab :=_efdf .newPdfAnnotationSquareFromDict (_gbeb );if _dbab !=nil {return nil ,_dbab ;};_dgd .PdfAnnotation =_cagdd ;_cagdd ._bda =_dgd ;return _cagdd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_ccb ,_deceg :=_efdf .newPdfAnnotationCircleFromDict (_gbeb );
if _deceg !=nil {return nil ,_deceg ;};_ccb .PdfAnnotation =_cagdd ;_cagdd ._bda =_ccb ;return _cagdd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cdef ,_abf :=_efdf .newPdfAnnotationPolygonFromDict (_gbeb );if _abf !=nil {return nil ,_abf ;};_cdef .PdfAnnotation =_cagdd ;
_cagdd ._bda =_cdef ;return _cagdd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bae ,_edc :=_efdf .newPdfAnnotationPolyLineFromDict (_gbeb );if _edc !=nil {return nil ,_edc ;};_bae .PdfAnnotation =_cagdd ;_cagdd ._bda =_bae ;return _cagdd ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_feb ,_efgf :=_efdf .newPdfAnnotationHighlightFromDict (_gbeb );if _efgf !=nil {return nil ,_efgf ;};_feb .PdfAnnotation =_cagdd ;_cagdd ._bda =_feb ;return _cagdd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ddg ,_fbea :=_efdf .newPdfAnnotationUnderlineFromDict (_gbeb );
if _fbea !=nil {return nil ,_fbea ;};_ddg .PdfAnnotation =_cagdd ;_cagdd ._bda =_ddg ;return _cagdd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_dfgg ,_gcfc :=_efdf .newPdfAnnotationSquigglyFromDict (_gbeb );if _gcfc !=nil {return nil ,_gcfc ;
};_dfgg .PdfAnnotation =_cagdd ;_cagdd ._bda =_dfgg ;return _cagdd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ged ,_gdg :=_efdf .newPdfAnnotationStrikeOut (_gbeb );if _gdg !=nil {return nil ,_gdg ;};_ged .PdfAnnotation =_cagdd ;_cagdd ._bda =_ged ;
return _cagdd ,nil ;case "\u0043\u0061\u0072e\u0074":_egdc ,_cfbb :=_efdf .newPdfAnnotationCaretFromDict (_gbeb );if _cfbb !=nil {return nil ,_cfbb ;};_egdc .PdfAnnotation =_cagdd ;_cagdd ._bda =_egdc ;return _cagdd ,nil ;case "\u0053\u0074\u0061m\u0070":_gbg ,_baee :=_efdf .newPdfAnnotationStampFromDict (_gbeb );
if _baee !=nil {return nil ,_baee ;};_gbg .PdfAnnotation =_cagdd ;_cagdd ._bda =_gbg ;return _cagdd ,nil ;case "\u0049\u006e\u006b":_fbab ,_gfc :=_efdf .newPdfAnnotationInkFromDict (_gbeb );if _gfc !=nil {return nil ,_gfc ;};_fbab .PdfAnnotation =_cagdd ;
_cagdd ._bda =_fbab ;return _cagdd ,nil ;case "\u0050\u006f\u0070u\u0070":_gbcf ,_gfg :=_efdf .newPdfAnnotationPopupFromDict (_gbeb );if _gfg !=nil {return nil ,_gfg ;};_gbcf .PdfAnnotation =_cagdd ;_cagdd ._bda =_gbcf ;return _cagdd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_fbfc ,_cfa :=_efdf .newPdfAnnotationFileAttachmentFromDict (_gbeb );
if _cfa !=nil {return nil ,_cfa ;};_fbfc .PdfAnnotation =_cagdd ;_cagdd ._bda =_fbfc ;return _cagdd ,nil ;case "\u0053\u006f\u0075n\u0064":_bgfee ,_ebb :=_efdf .newPdfAnnotationSoundFromDict (_gbeb );if _ebb !=nil {return nil ,_ebb ;};_bgfee .PdfAnnotation =_cagdd ;
_cagdd ._bda =_bgfee ;return _cagdd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gedf ,_fgg :=_efdf .newPdfAnnotationRichMediaFromDict (_gbeb );if _fgg !=nil {return nil ,_fgg ;};_gedf .PdfAnnotation =_cagdd ;_cagdd ._bda =_gedf ;return _cagdd ,nil ;
case "\u004d\u006f\u0076i\u0065":_fgbg ,_effg :=_efdf .newPdfAnnotationMovieFromDict (_gbeb );if _effg !=nil {return nil ,_effg ;};_fgbg .PdfAnnotation =_cagdd ;_cagdd ._bda =_fgbg ;return _cagdd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_gad ,_bcdc :=_efdf .newPdfAnnotationScreenFromDict (_gbeb );
if _bcdc !=nil {return nil ,_bcdc ;};_gad .PdfAnnotation =_cagdd ;_cagdd ._bda =_gad ;return _cagdd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bef ,_cdf :=_efdf .newPdfAnnotationWidgetFromDict (_gbeb );if _cdf !=nil {return nil ,_cdf ;};_bef .PdfAnnotation =_cagdd ;
_cagdd ._bda =_bef ;return _cagdd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_faf ,_cae :=_efdf .newPdfAnnotationPrinterMarkFromDict (_gbeb );if _cae !=nil {return nil ,_cae ;};_faf .PdfAnnotation =_cagdd ;_cagdd ._bda =_faf ;
return _cagdd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bbg ,_daa :=_efdf .newPdfAnnotationTrapNetFromDict (_gbeb );if _daa !=nil {return nil ,_daa ;};_bbg .PdfAnnotation =_cagdd ;_cagdd ._bda =_bbg ;return _cagdd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_baeef ,_acgf :=_efdf .newPdfAnnotationWatermarkFromDict (_gbeb );
if _acgf !=nil {return nil ,_acgf ;};_baeef .PdfAnnotation =_cagdd ;_cagdd ._bda =_baeef ;return _cagdd ,nil ;case "\u0033\u0044":_adge ,_dffe :=_efdf .newPdfAnnotation3DFromDict (_gbeb );if _dffe !=nil {return nil ,_dffe ;};_adge .PdfAnnotation =_cagdd ;
_cagdd ._bda =_adge ;return _cagdd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_fabe ,_bbfb :=_efdf .newPdfAnnotationProjectionFromDict (_gbeb );if _bbfb !=nil {return nil ,_bbfb ;};_fabe .PdfAnnotation =_cagdd ;_cagdd ._bda =_fabe ;
return _cagdd ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_eaa ,_ddba :=_efdf .newPdfAnnotationRedactFromDict (_gbeb );if _ddba !=nil {return nil ,_ddba ;};_eaa .PdfAnnotation =_cagdd ;_cagdd ._bda =_eaa ;return _cagdd ,nil ;};_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_aadg );
return nil ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ccbc *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adgf :=vals [0];if _adgf < 0.0||_adgf > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_egce :=vals [1];if _egce < 0.0||_egce > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_affa :=vals [2];if _affa < 0.0||_affa > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_agd :=NewPdfColorCalRGB (_adgf ,_egce ,_affa );return _agd ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ddefc *PdfSignature )GetContainingPdfObject ()_bab .PdfObject {return _ddefc ._cdgg };func (_cbfabe *fontFile )loadFromSegments (_eecdg ,_fbcee []byte )error {_cgb .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_eecdg ),len (_fbcee ));
_bdcd :=_cbfabe .parseASCIIPart (_eecdg );if _bdcd !=nil {return _bdcd ;};_cgb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cbfabe );if len (_fbcee )==0{return nil ;};_cgb .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cbfabe );
return nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_dbafg :=&XObjectForm {};_eaefc :=&_bab .PdfObjectStream {};_eaefc .PdfObjectDictionary =_bab .MakeDict ();_dbafg ._gadgbe =_eaefc ;return _dbafg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edba *PdfColorspaceDeviceGray )ToPdfObject ()_bab .PdfObject {return _bab .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_adc :=NewPdfAnnotation ();_bcfd :=&PdfAnnotationHighlight {};_bcfd .PdfAnnotation =_adc ;_bcfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adc .SetContext (_bcfd );return _bcfd ;};

// ImageToRGB convert an indexed image to RGB.
func (_fbddb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fbddb .Base .GetNumComponents ();if N < 1{return Image {},_d .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_faag :=_ca .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._fffdd ,img ._dgbgc );_cgacd :=_ee .NewReader (img .getBase ());_dfcd :=_ee .NewWriter (_faag );var (_afee uint32 ;_daae int ;_agabe error ;);for {_afee ,_agabe =_cgacd .ReadSample ();
if _agabe ==_ad .EOF {break ;}else if _agabe !=nil {return img ,_agabe ;};_daae =int (_afee );_cgb .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_daae ,N ,len (_fbddb ._abddd ));
if (_daae +1)*N > len (_fbddb ._abddd ){_daae =len (_fbddb ._abddd )/N -1;_cgb .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_daae );if _daae < 0{_cgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _adgbd :=_daae *N ;_adgbd < (_daae +1)*N ;_adgbd ++{if _agabe =_dfcd .WriteSample (uint32 (_fbddb ._abddd [_adgbd ]));_agabe !=nil {return img ,_agabe ;};};};return _fbddb .Base .ImageToRGB (_bdaad (&_faag ));};func _cabag ()_f .Time {_fcccb .Lock ();
defer _fcccb .Unlock ();return _gddf };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_faeb *PdfShading )ToPdfObject ()_bab .PdfObject {_dffg :=_faeb ._bfgd ;_agbe ,_dagf :=_faeb .getShadingDict ();if _dagf !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _faeb .ShadingType !=nil {_agbe .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_faeb .ShadingType );};if _faeb .ColorSpace !=nil {_agbe .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_faeb .ColorSpace .ToPdfObject ());
};if _faeb .Background !=nil {_agbe .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_faeb .Background );};if _faeb .BBox !=nil {_agbe .Set ("\u0042\u0042\u006f\u0078",_faeb .BBox .ToPdfObject ());};if _faeb .AntiAlias !=nil {_agbe .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_faeb .AntiAlias );
};return _dffg ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_bfcc :=PdfWriter {};_bfcc ._acagcb =map[_bab .PdfObject ]struct{}{};_bfcc ._bbceb =[]_bab .PdfObject {};_bfcc ._ebgfb =map[_bab .PdfObject ][]*_bab .PdfObjectDictionary {};_bfcc ._cfbgf =map[_bab .PdfObject ]struct{}{};_bfcc ._gffad =1;
_bfcc ._bbad =3;_cddg :=_bab .MakeDict ();_agccc :=[]struct{_fafda _bab .PdfObjectName ;_gcdfd string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ccbab ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_acffg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_eeaf ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_fbefd ()},{"\u0054\u0069\u0074l\u0065",_ffec ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bfce ()}};
for _ ,_efccf :=range _agccc {if _efccf ._gcdfd !=""{_cddg .Set (_efccf ._fafda ,_bab .MakeString (_efccf ._gcdfd ));};};if _acdfc :=_cabag ();!_acdfc .IsZero (){if _bbdad ,_aggaa :=NewPdfDateFromTime (_acdfc );_aggaa ==nil {_cddg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbdad .ToPdfObject ());
};};if _degeg :=_badda ();!_degeg .IsZero (){if _eadgf ,_ddfbdc :=NewPdfDateFromTime (_degeg );_ddfbdc ==nil {_cddg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_eadgf .ToPdfObject ());};};_addad :=_bab .PdfIndirectObject {};_addad .PdfObject =_cddg ;
_bfcc ._cgddgb =&_addad ;_bfcc .addObject (&_addad );_ecgee :=_bab .PdfIndirectObject {};_bcaagg :=_bab .MakeDict ();_bcaagg .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_ecgee .PdfObject =_bcaagg ;_bfcc ._bdage =&_ecgee ;
_bfcc .addObject (_bfcc ._bdage );_cebab ,_ffcbd :=_cagee ("\u0077");if _ffcbd !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffcbd );};_bfcc ._caaafb =_cebab ;_faddd :=_bab .PdfIndirectObject {};_adaba :=_bab .MakeDict ();_adaba .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0050\u0061\u0067e\u0073"));
_eeagb :=_bab .PdfObjectArray {};_adaba .Set ("\u004b\u0069\u0064\u0073",&_eeagb );_adaba .Set ("\u0043\u006f\u0075n\u0074",_bab .MakeInteger (0));_faddd .PdfObject =_adaba ;_bfcc ._baadg =&_faddd ;_bfcc ._begec =map[_bab .PdfObject ]struct{}{};_bfcc .addObject (_bfcc ._baadg );
_bcaagg .Set ("\u0050\u0061\u0067e\u0073",&_faddd );_bfcc ._abbdcc =_bcaagg ;_cgb .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_ecgee );return _bfcc ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_fbbgd :=&PdfColorspaceCalGray {};_fbbgd .BlackPoint =[]float64 {0.0,0.0,0.0};_fbbgd .Gamma =1;return _fbbgd ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ea .SimpleEncoder ,error ){_bacc ,_dgcg :=_gdgad (basefont );if _dgcg !=nil {return nil ,nil ,_dgcg ;};_bbec ,_cadb :=_bacc .Encoder ().(_ea .SimpleEncoder );
if !_cadb {return nil ,nil ,_d .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bacc .Encoder ());
};_bbce :=make (map[rune ]_ea .GlyphName );for _fgbc :=range alphabet {if _ ,_fcef :=_bbec .RuneToCharcode (_fgbc );!_fcef {_ ,_fcaf :=_bacc ._cfdae .Read (_fgbc );if !_fcaf {_cgb .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_fgbc ,_fgbc );
continue ;};_dbfab ,_fcaf :=_ea .RuneToGlyph (_fgbc );if !_fcaf {_cgb .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_fgbc ,_fgbc );continue ;};if len (_bbce )>=255{return nil ,nil ,_cg .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bbce [_fgbc ]=_dbfab ;};};var (_cdbf []_ea .CharCode ;_cgfc []_ea .CharCode ;);for _eaab :=_ea .CharCode (1);_eaab <=0xff;_eaab ++{_cgdd ,_cfee :=_bbec .CharcodeToRune (_eaab );if !_cfee {_cdbf =append (_cdbf ,_eaab );continue ;};if _ ,_cfee =alphabet [_cgdd ];
!_cfee {_cgfc =append (_cgfc ,_eaab );};};_cafae :=append (_cdbf ,_cgfc ...);if len (_cafae )< len (_bbce ){return nil ,nil ,_d .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bbce ),len (_cafae ));
};_effc :=make ([]rune ,0,len (_bbce ));for _bbfbb :=range _bbce {_effc =append (_effc ,_bbfbb );};_bbb .Slice (_effc ,func (_cgbb ,_ecffg int )bool {return _effc [_cgbb ]< _effc [_ecffg ]});_bfcd :=make (map[_ea .CharCode ]_ea .GlyphName ,len (_effc ));
for _ ,_fdfdb :=range _effc {_efgdf :=_cafae [0];_cafae =_cafae [1:];_bfcd [_efgdf ]=_bbce [_fdfdb ];};_bbec =_ea .ApplyDifferences (_bbec ,_bfcd );_bacc .SetEncoder (_bbec );return &PdfFont {_dfbfg :&_bacc },_bbec ,nil ;};func _gagac (_fgcfc _bab .PdfObject )(map[_ea .CharCode ]float64 ,error ){if _fgcfc ==nil {return nil ,nil ;
};_gbdf ,_fbcd :=_bab .GetArray (_fgcfc );if !_fbcd {return nil ,nil ;};_cfga :=map[_ea .CharCode ]float64 {};_bfgba :=_gbdf .Len ();for _dfde :=0;_dfde < _bfgba -1;_dfde ++{_gebdc :=_bab .TraceToDirectObject (_gbdf .Get (_dfde ));_bbcdg ,_bddb :=_bab .GetIntVal (_gebdc );
if !_bddb {return nil ,_d .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dfde ,_gebdc );};_dfde ++;if _dfde > _bfgba -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gbdf );
};_efeda :=_bab .TraceToDirectObject (_gbdf .Get (_dfde ));switch _efeda .(type ){case *_bab .PdfObjectArray :_eaed ,_ :=_bab .GetArray (_efeda );if _dfbd ,_dfggd :=_eaed .ToFloat64Array ();_dfggd ==nil {for _bgeb :=0;_bgeb < len (_dfbd );_bgeb ++{_cfga [_ea .CharCode (_bbcdg +_bgeb )]=_dfbd [_bgeb ];
};}else {return nil ,_d .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfde ,_efeda );};case *_bab .PdfObjectInteger :_dafg ,_fgdba :=_bab .GetIntVal (_efeda );
if !_fgdba {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfde ,_efeda );};_dfde ++;if _dfde > _bfgba -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gbdf );
};_gaafb :=_gbdf .Get (_dfde );_adaca ,_cabbe :=_bab .GetNumberAsFloat (_gaafb );if _cabbe !=nil {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dfde ,_gaafb );
};for _ddbda :=_bbcdg ;_ddbda <=_dafg ;_ddbda ++{_cfga [_ea .CharCode (_ddbda )]=_adaca ;};default:return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dfde ,_efeda );
};};return _cfga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcgg *PdfAnnotationStrikeOut )ToPdfObject ()_bab .PdfObject {_gcgg .PdfAnnotation .ToPdfObject ();_bfec :=_gcgg ._bcc ;_deab :=_bfec .PdfObject .(*_bab .PdfObjectDictionary );_gcgg .PdfAnnotationMarkup .appendToPdfDictionary (_deab );_deab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_deab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcgg .QuadPoints );return _bfec ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_fgdfg *OutlineItem )ToPdfObject ()_bab .PdfObject {_gadgd ,_ :=_fgdfg .ToPdfOutlineItem ();return _gadgd .ToPdfObject ();};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_eeaae :=PdfPage {};_eeaae ._beadg =_bab .MakeDict ();_eeaae .Resources =NewPdfPageResources ();_bfgbe :=_bab .PdfIndirectObject {};_bfgbe .PdfObject =_eeaae ._beadg ;_eeaae ._efdec =&_bfgbe ;return &_eeaae ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_ddfg *PdfReader )IsEncrypted ()(bool ,error ){return _ddfg ._fdcebg .IsEncrypted ()};

// SetPatternByName sets a pattern resource specified by keyName.
func (_dgbfd *PdfPageResources )SetPatternByName (keyName _bab .PdfObjectName ,pattern _bab .PdfObject )error {if _dgbfd .Pattern ==nil {_dgbfd .Pattern =_bab .MakeDict ();};_bggca ,_bfab :=_dgbfd .Pattern .(*_bab .PdfObjectDictionary );if !_bfab {return _bab .ErrTypeError ;
};_bggca .Set (keyName ,pattern );return nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_eage *PdfPage )error ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_aacg :=map[rune ]int {};for _ ,_bcfeb :=range text {_aacg [_bcfeb ]++;};return _aacg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bab .PdfObjectStream )(*XObjectForm ,error ){_eccad :=&XObjectForm {};_eccad ._gadgbe =stream ;_gfbffd :=*(stream .PdfObjectDictionary );_eaaed ,_eedgdc :=_bab .NewEncoderFromStream (stream );if _eedgdc !=nil {return nil ,_eedgdc ;
};_eccad .Filter =_eaaed ;if _cfdfe :=_gfbffd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cfdfe !=nil {_gggec ,_bfdfea :=_cfdfe .(*_bab .PdfObjectName );if !_bfdfea {return nil ,_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_gggec !="\u0046\u006f\u0072\u006d"{_cgb .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _bdcdcg :=_gfbffd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bdcdcg !=nil {_eccad .FormType =_bdcdcg ;};if _ceged :=_gfbffd .Get ("\u0042\u0042\u006f\u0078");_ceged !=nil {_eccad .BBox =_ceged ;};if _edacab :=_gfbffd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_edacab !=nil {_eccad .Matrix =_edacab ;};if _cadfd :=_gfbffd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cadfd !=nil {_cadfd =_bab .TraceToDirectObject (_cadfd );_fbfce ,_cafge :=_cadfd .(*_bab .PdfObjectDictionary );if !_cafge {_cgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bab .ErrTypeError ;};_fdcfg ,_gcbcd :=NewPdfPageResourcesFromDict (_fbfce );if _gcbcd !=nil {_cgb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_gcbcd ;};_eccad .Resources =_fdcfg ;_cgb .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_eccad .Resources );};_eccad .Group =_gfbffd .Get ("\u0047\u0072\u006fu\u0070");
_eccad .Ref =_gfbffd .Get ("\u0052\u0065\u0066");_eccad .MetaData =_gfbffd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_eccad .PieceInfo =_gfbffd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eccad .LastModified =_gfbffd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_eccad .StructParent =_gfbffd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eccad .StructParents =_gfbffd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_eccad .OPI =_gfbffd .Get ("\u004f\u0050\u0049");
_eccad .OC =_gfbffd .Get ("\u004f\u0043");_eccad .Name =_gfbffd .Get ("\u004e\u0061\u006d\u0065");_eccad .Stream =stream .Stream ;return _eccad ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);
FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);
FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);
FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// Width returns the width of `rect`.
func (_fcfag *PdfRectangle )Width ()float64 {return _ab .Abs (_fcfag .Urx -_fcfag .Llx )};

// GetSubFilter returns SubFilter value or empty string.
func (_abebbc *pdfSignDictionary )GetSubFilter ()string {_dcfgg :=_abebbc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dcfgg ==nil {return "";};if _gcfea ,_befga :=_bab .GetNameVal (_dcfgg );_befga {return _gcfea ;};return "";};

// ToPdfObject returns a stream object.
func (_ebeggf *XObjectImage )ToPdfObject ()_bab .PdfObject {_abbgde :=_ebeggf ._dbfaf ;_bcde :=_abbgde .PdfObjectDictionary ;if _ebeggf .Filter !=nil {_bcde =_ebeggf .Filter .MakeStreamDict ();_abbgde .PdfObjectDictionary =_bcde ;};_bcde .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bcde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0049\u006d\u0061g\u0065"));_bcde .Set ("\u0057\u0069\u0064t\u0068",_bab .MakeInteger (*(_ebeggf .Width )));_bcde .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bab .MakeInteger (*(_ebeggf .Height )));
if _ebeggf .BitsPerComponent !=nil {_bcde .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bab .MakeInteger (*(_ebeggf .BitsPerComponent )));};if _ebeggf .ColorSpace !=nil {_bcde .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebeggf .ColorSpace .ToPdfObject ());
};_bcde .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ebeggf .Intent );_bcde .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ebeggf .ImageMask );_bcde .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ebeggf .Mask );_becg :=_bcde .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _ebeggf .Decode ==nil &&_becg {_bcde .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _ebeggf .Decode !=nil {_bcde .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebeggf .Decode );};_bcde .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ebeggf .Interpolate );
_bcde .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ebeggf .Alternatives );_bcde .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ebeggf .SMask );_bcde .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ebeggf .SMaskInData );
_bcde .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ebeggf .Matte );_bcde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebeggf .Name );_bcde .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebeggf .StructParent );_bcde .SetIfNotNil ("\u0049\u0044",_ebeggf .ID );
_bcde .SetIfNotNil ("\u004f\u0050\u0049",_ebeggf .OPI );_bcde .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ebeggf .Metadata );_bcde .SetIfNotNil ("\u004f\u0043",_ebeggf .OC );_bcde .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_ebeggf .Stream ))));
_abbgde .Stream =_ebeggf .Stream ;return _abbgde ;};

// ToPdfObject implements interface PdfModel.
func (_gdec *PdfAnnotationCaret )ToPdfObject ()_bab .PdfObject {_gdec .PdfAnnotation .ToPdfObject ();_acfa :=_gdec ._bcc ;_ecag :=_acfa .PdfObject .(*_bab .PdfObjectDictionary );_gdec .PdfAnnotationMarkup .appendToPdfDictionary (_ecag );_ecag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0043\u0061\u0072e\u0074"));
_ecag .SetIfNotNil ("\u0052\u0044",_gdec .RD );_ecag .SetIfNotNil ("\u0053\u0079",_gdec .Sy );return _acfa ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// IsShading specifies if the pattern is a shading pattern.
func (_fbafe *PdfPattern )IsShading ()bool {return _fbafe .PatternType ==2};func (_eca *PdfReader )newPdfActionGotoEFromDict (_gba *_bab .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dae ,_cegg :=_eec (_gba .Get ("\u0046"));if _cegg !=nil {return nil ,_cegg ;
};return &PdfActionGoToE {D :_gba .Get ("\u0044"),NewWindow :_gba .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gba .Get ("\u0054"),F :_dae },nil ;};

// HasFontByName checks if has font resource by name.
func (_dgge *PdfPage )HasFontByName (name _bab .PdfObjectName )bool {_gbgcf ,_effcg :=_dgge .Resources .Font .(*_bab .PdfObjectDictionary );if !_effcg {return false ;};if _abccb :=_gbgcf .Get (name );_abccb !=nil {return true ;};return false ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_feea *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_degb :=_ee .NewReader (img .getBase ());_ebcf :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gcfb :=_ee .NewWriter (_ebcf );
_gfbf :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_ebba :=make ([]uint32 ,3);var (_gac uint32 ;ANorm ,X ,Y ,Z ,_ecff ,_ddcb ,_cagf float64 ;_ffade error ;);for {_gac ,_ffade =_degb .ReadSample ();if _ffade ==_ad .EOF {break ;}else if _ffade !=nil {return img ,_ffade ;
};ANorm =float64 (_gac )/_gfbf ;X =_feea .WhitePoint [0]*_ab .Pow (ANorm ,_feea .Gamma );Y =_feea .WhitePoint [1]*_ab .Pow (ANorm ,_feea .Gamma );Z =_feea .WhitePoint [2]*_ab .Pow (ANorm ,_feea .Gamma );_ecff =3.240479*X +-1.537150*Y +-0.498535*Z ;_ddcb =-0.969256*X +1.875992*Y +0.041556*Z ;
_cagf =0.055648*X +-0.204043*Y +1.057311*Z ;_ecff =_ab .Min (_ab .Max (_ecff ,0),1.0);_ddcb =_ab .Min (_ab .Max (_ddcb ,0),1.0);_cagf =_ab .Min (_ab .Max (_cagf ,0),1.0);_ebba [0]=uint32 (_ecff *_gfbf );_ebba [1]=uint32 (_ddcb *_gfbf );_ebba [2]=uint32 (_cagf *_gfbf );
if _ffade =_gcfb .WriteSamples (_ebba );_ffade !=nil {return img ,_ffade ;};};return _bdaad (&_ebcf ),nil ;};func _bdbe (_acffc *PdfField ,_gfeg _bab .PdfObject )error {switch _acffc .GetContext ().(type ){case *PdfFieldText :switch _fagcg :=_gfeg .(type ){case *_bab .PdfObjectName :_gdgg :=_fagcg ;
_cgb .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gdgg .String ());
_acffc .V =_bab .MakeEncodedString (_fagcg .String (),true );case *_bab .PdfObjectString :_acffc .V =_bab .MakeEncodedString (_fagcg .String (),true );default:_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fagcg ,_fagcg );
};case *PdfFieldButton :switch _gfeg .(type ){case *_bab .PdfObjectName :if len (_gfeg .String ())> 0{_acffc .V =_gfeg ;_fdfe (_acffc ,_gfeg );};case *_bab .PdfObjectString :if len (_gfeg .String ())> 0{_acffc .V =_bab .MakeName (_gfeg .String ());_fdfe (_acffc ,_acffc .V );
};default:_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_acffc .PartialName (),_gfeg );_acffc .V =_gfeg ;};case *PdfFieldChoice :switch _gfeg .(type ){case *_bab .PdfObjectName :if len (_gfeg .String ())> 0{_acffc .V =_bab .MakeString (_gfeg .String ());
_fdfe (_acffc ,_gfeg );};case *_bab .PdfObjectString :if len (_gfeg .String ())> 0{_acffc .V =_gfeg ;_fdfe (_acffc ,_bab .MakeName (_gfeg .String ()));};default:_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_acffc .PartialName (),_gfeg );
_acffc .V =_gfeg ;};case *PdfFieldSignature :_cgb .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_acffc .PartialName (),_gfeg );
};return nil ;};func (_fdf *PdfReader )newPdfActionMovieFromDict (_baaa *_bab .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_baaa .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_baaa .Get ("\u0054"),Operation :_baaa .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};var _ _bab .PdfObject =&pdfSignDictionary {};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _f .Time )(PdfDate ,error ){_gcfcd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ecdge ,_ :=_dc .ParseInt (_gcfcd [1:3],10,32);_cfeeec ,_ :=_dc .ParseInt (_gcfcd [4:6],10,32);return PdfDate {_gfgge :int64 (timeObj .Year ()),_ceda :int64 (timeObj .Month ()),_gbfea :int64 (timeObj .Day ()),_cbcea :int64 (timeObj .Hour ()),_ccedb :int64 (timeObj .Minute ()),_bdgfc :int64 (timeObj .Second ()),_fcbfd :_gcfcd [0],_cecf :_ecdge ,_fead :_cfeeec },nil ;
};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cdfabc *Outline )ToPdfOutline ()*PdfOutline {_eacbb :=NewPdfOutline ();var _efbfe []*PdfOutlineItem ;var _gcbd int64 ;var _effe *PdfOutlineItem ;for _ ,_acacc :=range _cdfabc .Entries {_gegda ,_efccb :=_acacc .ToPdfOutlineItem ();_gegda .Parent =&_eacbb .PdfOutlineTreeNode ;
if _effe !=nil {_effe .Next =&_gegda .PdfOutlineTreeNode ;_gegda .Prev =&_effe .PdfOutlineTreeNode ;};_efbfe =append (_efbfe ,_gegda );_gcbd +=_efccb ;_effe =_gegda ;};_cbfde :=int64 (len (_efbfe ));_gcbd +=_cbfde ;if _cbfde > 0{_eacbb .First =&_efbfe [0].PdfOutlineTreeNode ;
_eacbb .Last =&_efbfe [_cbfde -1].PdfOutlineTreeNode ;_eacbb .Count =&_gcbd ;};return _eacbb ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bbe :=NewPdfAction ();_aaa :=&PdfActionRendition {};_aaa .PdfAction =_bbe ;_bbe .SetContext (_aaa );return _aaa ;};func _eeaf ()string {_fcccb .Lock ();defer _fcccb .Unlock ();return _bfgc };func _ggdfb (_aagbg *_bab .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gfeae :=&PdfShadingPattern {};
_badf :=_aagbg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _badf ==nil {_cgb .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_afdbe ,_gafed :=_gdeeb (_badf );
if _gafed !=nil {_cgb .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_gafed );return nil ,_gafed ;};_gfeae .Shading =_afdbe ;if _aeeca :=_aagbg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_aeeca !=nil {_gfcgg ,_edcccb :=_aeeca .(*_bab .PdfObjectArray );if !_edcccb {_cgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aeeca );
return nil ,_bab .ErrTypeError ;};_gfeae .Matrix =_gfcgg ;};if _cbfad :=_aagbg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cbfad !=nil {_gfeae .ExtGState =_cbfad ;};return _gfeae ,nil ;};func (_cbbe *PdfWriter )seekByName (_efacf _bab .PdfObject ,_cfbca []string ,_acfgb string )([]_bab .PdfObject ,error ){_cgb .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_efacf );
var _abbdfb []_bab .PdfObject ;if _ccdbb ,_fccdc :=_efacf .(*_bab .PdfIndirectObject );_fccdc {return _cbbe .seekByName (_ccdbb .PdfObject ,_cfbca ,_acfgb );};if _acfgg ,_fcccbb :=_efacf .(*_bab .PdfObjectStream );_fcccbb {return _cbbe .seekByName (_acfgg .PdfObjectDictionary ,_cfbca ,_acfgb );
};if _cdegd ,_bcaagd :=_efacf .(*_bab .PdfObjectDictionary );_bcaagd {_cgb .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_dadc :=range _cdegd .Keys (){_gcabf :=_cdegd .Get (_dadc );if string (_dadc )==_acfgb {_abbdfb =append (_abbdfb ,_gcabf );};for _ ,_dbbegb :=range _cfbca {if string (_dadc )==_dbbegb {_cgb .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dbbegb );
_babed ,_bbafa :=_cbbe .seekByName (_gcabf ,_cfbca ,_acfgb );if _bbafa !=nil {return _abbdfb ,_bbafa ;};_abbdfb =append (_abbdfb ,_babed ...);break ;};};};return _abbdfb ,nil ;};return _abbdfb ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bab .PdfObject ,error );};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bcaaf *LTV )EnableByName (name string ,extraCerts []*_ef .Certificate )error {_cagfg :=_bcaaf ._fecce ._fgdb .AcroForm ;for _ ,_babcb :=range _cagfg .AllFields (){_ffegc ,_ :=_babcb .GetContext ().(*PdfFieldSignature );if _ffegc ==nil {continue ;
};if _gfbg :=_ffegc .PartialName ();_gfbg !=name {continue ;};return _bcaaf .Enable (_ffegc .V ,extraCerts );};return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_bddfg *Image )SetAlpha (alpha []byte ){_bddfg ._fffdd =alpha };

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cgbce :=&PdfSignature {Type :_bab .MakeName ("\u0053\u0069\u0067"),Handler :handler };_fdgc :=&pdfSignDictionary {PdfObjectDictionary :_bab .MakeDict (),_agdf :&handler ,_efccbe :_cgbce };
_cgbce ._cdgg =_bab .MakeIndirectObject (_fdgc );return _cgbce ;};

// ToPdfObject implements interface PdfModel.
func (_efc *PdfActionGoToR )ToPdfObject ()_bab .PdfObject {_efc .PdfAction .ToPdfObject ();_egc :=_efc ._ec ;_cd :=_egc .PdfObject .(*_bab .PdfObjectDictionary );_cd .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeGoToR )));if _efc .F !=nil {_cd .Set ("\u0046",_efc .F .ToPdfObject ());
};_cd .SetIfNotNil ("\u0044",_efc .D );_cd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_efc .NewWindow );return _egc ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bab .PdfObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_gdde *PdfFunctionType3 )ToPdfObject ()_bab .PdfObject {_cebdb :=_bab .MakeDict ();_cebdb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bab .MakeInteger (3));_fgcg :=&_bab .PdfObjectArray {};for _ ,_bbcc :=range _gdde .Domain {_fgcg .Append (_bab .MakeFloat (_bbcc ));
};_cebdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgcg );if _gdde .Range !=nil {_ddeda :=&_bab .PdfObjectArray {};for _ ,_bfdeb :=range _gdde .Range {_ddeda .Append (_bab .MakeFloat (_bfdeb ));};_cebdb .Set ("\u0052\u0061\u006eg\u0065",_ddeda );};
if _gdde .Functions !=nil {_cgcd :=&_bab .PdfObjectArray {};for _ ,_edfg :=range _gdde .Functions {_cgcd .Append (_edfg .ToPdfObject ());};_cebdb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cgcd );};if _gdde .Bounds !=nil {_cgbbf :=&_bab .PdfObjectArray {};
for _ ,_dcdga :=range _gdde .Bounds {_cgbbf .Append (_bab .MakeFloat (_dcdga ));};_cebdb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_cgbbf );};if _gdde .Encode !=nil {_cfgd :=&_bab .PdfObjectArray {};for _ ,_gbga :=range _gdde .Encode {_cfgd .Append (_bab .MakeFloat (_gbga ));
};_cebdb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_cfgd );};if _gdde ._ddedg !=nil {_gdde ._ddedg .PdfObject =_cebdb ;return _gdde ._ddedg ;};return _cebdb ;};func (_eddb *PdfAcroForm )fill (_bdcb FieldValueProvider ,_efcge FieldAppearanceGenerator )error {if _eddb ==nil {return nil ;
};_eedc ,_gbgce :=_bdcb .FieldValues ();if _gbgce !=nil {return _gbgce ;};for _ ,_edbafd :=range _eddb .AllFields (){_efbf :=_edbafd .PartialName ();_bbdc ,_dabeg :=_eedc [_efbf ];if !_dabeg {if _cadd ,_ggcdc :=_edbafd .FullName ();_ggcdc ==nil {_bbdc ,_dabeg =_eedc [_cadd ];
};};if !_dabeg {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_efbf );
continue ;};if _fgadge :=_bdbe (_edbafd ,_bbdc );_fgadge !=nil {return _fgadge ;};if _efcge ==nil {continue ;};for _ ,_dabde :=range _edbafd .Annotations {_afdfc ,_gddcb :=_efcge .GenerateAppearanceDict (_eddb ,_edbafd ,_dabde );if _gddcb !=nil {return _gddcb ;
};_dabde .AP =_afdfc ;_dabde .ToPdfObject ();};};return nil ;};func (_ddgf *pdfFontType3 )baseFields ()*fontCommon {return &_ddgf .fontCommon };

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_abdb :=NewPdfAnnotation ();_gda :=&PdfAnnotationPolyLine {};_gda .PdfAnnotation =_abdb ;_gda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abdb .SetContext (_gda );return _gda ;};

// String returns a string representation of what flags are set.
func (_ggbbe FieldFlag )String ()string {_degcf :="";if _ggbbe ==FieldFlagClear {_degcf ="\u0043\u006c\u0065a\u0072";return _degcf ;};if _ggbbe &FieldFlagReadOnly > 0{_degcf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ggbbe &FieldFlagRequired > 0{_degcf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _ggbbe &FieldFlagNoExport > 0{_degcf +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _ggbbe &FieldFlagNoToggleToOff > 0{_degcf +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _ggbbe &FieldFlagRadio > 0{_degcf +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _ggbbe &FieldFlagPushbutton > 0{_degcf +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _ggbbe &FieldFlagRadiosInUnision > 0{_degcf +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};
if _ggbbe &FieldFlagMultiline > 0{_degcf +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _ggbbe &FieldFlagPassword > 0{_degcf +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _ggbbe &FieldFlagFileSelect > 0{_degcf +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";
};if _ggbbe &FieldFlagDoNotScroll > 0{_degcf +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _ggbbe &FieldFlagComb > 0{_degcf +="\u007c\u0043\u006fm\u0062";};if _ggbbe &FieldFlagRichText > 0{_degcf +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";
};if _ggbbe &FieldFlagDoNotSpellCheck > 0{_degcf +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _ggbbe &FieldFlagCombo > 0{_degcf +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _ggbbe &FieldFlagEdit > 0{_degcf +="\u007c\u0045\u0064i\u0074";
};if _ggbbe &FieldFlagSort > 0{_degcf +="\u007c\u0053\u006fr\u0074";};if _ggbbe &FieldFlagMultiSelect > 0{_degcf +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _ggbbe &FieldFlagCommitOnSelChange > 0{_degcf +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";
};return _bf .Trim (_degcf ,"\u007c");};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ccfc :=PdfColorCalRGB {a ,b ,c };return &_ccfc ;};

// Items returns all children outline items.
func (_feeeg *OutlineItem )Items ()[]*OutlineItem {return _feeeg .Entries };

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_gde :=NewPdfAnnotation ();_bbef :=&PdfAnnotationProjection {};_bbef .PdfAnnotation =_gde ;_bbef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gde .SetContext (_bbef );return _bbef ;};func _eggb (_baab *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_baab }};


// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bfbc *pdfCIDFontType2 )ToPdfObject ()_bab .PdfObject {if _bfbc ._gdgd ==nil {_bfbc ._gdgd =&_bab .PdfIndirectObject {};};_beegc :=_bfbc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_bfbc ._gdgd .PdfObject =_beegc ;if _bfbc .CIDSystemInfo !=nil {_beegc .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bfbc .CIDSystemInfo );};if _bfbc .DW !=nil {_beegc .Set ("\u0044\u0057",_bfbc .DW );};if _bfbc .DW2 !=nil {_beegc .Set ("\u0044\u0057\u0032",_bfbc .DW2 );
};if _bfbc .W !=nil {_beegc .Set ("\u0057",_bfbc .W );};if _bfbc .W2 !=nil {_beegc .Set ("\u0057\u0032",_bfbc .W2 );};if _bfbc .CIDToGIDMap !=nil {_beegc .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bfbc .CIDToGIDMap );};return _bfbc ._gdgd ;
};func (_debc *Image )samplesTrimPadding (_edde []uint32 )[]uint32 {_fefab :=_debc .ColorComponents *int (_debc .Width )*int (_debc .Height );if len (_edde )==_fefab {return _edde ;};_bccd :=make ([]uint32 ,_fefab );_cdcac :=int (_debc .Width )*_debc .ColorComponents ;
var _afea ,_bdca ,_gagaa ,_fdgf int ;_gedd :=_ca .BytesPerLine (int (_debc .Width ),int (_debc .BitsPerComponent ),_debc .ColorComponents );for _afea =0;_afea < int (_debc .Height );_afea ++{_bdca =_afea *int (_debc .Width );_gagaa =_afea *_gedd ;for _fdgf =0;
_fdgf < _cdcac ;_fdgf ++{_bccd [_bdca +_fdgf ]=_edde [_gagaa +_fdgf ];};};return _bccd ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_abfcd *Image )GetParamsDict ()*_bab .PdfObjectDictionary {_faff :=_bab .MakeDict ();_faff .Set ("\u0057\u0069\u0064t\u0068",_bab .MakeInteger (_abfcd .Width ));_faff .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bab .MakeInteger (_abfcd .Height ));
_faff .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bab .MakeInteger (int64 (_abfcd .ColorComponents )));_faff .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bab .MakeInteger (_abfcd .BitsPerComponent ));
return _faff ;};

// SetDecode sets the decode image float slice.
func (_bagbd *Image )SetDecode (decode []float64 ){_bagbd ._dgbgc =decode };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_adgaf :=&PdfFieldSignature {};_adgaf .PdfField =NewPdfField ();_adgaf .PdfField .SetContext (_adgaf );_adgaf .PdfAnnotationWidget =NewPdfAnnotationWidget ();_adgaf .PdfAnnotationWidget .SetContext (_adgaf );
_adgaf .PdfAnnotationWidget ._bcc =_adgaf .PdfField ._fced ;_adgaf .T =_bab .MakeString ("");_adgaf .F =_bab .MakeInteger (132);_adgaf .V =signature ;return _adgaf ;};

// K returns the value of the key component of the color.
func (_eac *PdfColorDeviceCMYK )K ()float64 {return _eac [3]};var _ pdfFont =(*pdfCIDFontType0 )(nil );func (_fcee *PdfAppender )addNewObject (_cfaa _bab .PdfObject ){if _ ,_feg :=_fcee ._gegb [_cfaa ];!_feg {_fcee ._dfea =append (_fcee ._dfea ,_cfaa );
_fcee ._gegb [_cfaa ]=struct{}{};};};

// ToPdfObject implements interface PdfModel.
func (_ge *PdfActionURI )ToPdfObject ()_bab .PdfObject {_ge .PdfAction .ToPdfObject ();_geg :=_ge ._ec ;_abe :=_geg .PdfObject .(*_bab .PdfObjectDictionary );_abe .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeURI )));_abe .SetIfNotNil ("\u0055\u0052\u0049",_ge .URI );
_abe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ge .IsMap );return _geg ;};

// ToPdfObject implements interface PdfModel.
func (_aefc *PdfAnnotationHighlight )ToPdfObject ()_bab .PdfObject {_aefc .PdfAnnotation .ToPdfObject ();_gga :=_aefc ._bcc ;_ddce :=_gga .PdfObject .(*_bab .PdfObjectDictionary );_aefc .PdfAnnotationMarkup .appendToPdfDictionary (_ddce );_ddce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_ddce .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aefc .QuadPoints );return _gga ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bab .PdfObject ;};func (_cecg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _cecg ._dbcbe ==nil &&_cecg .DescendantFont !=nil {return _cecg .DescendantFont .FontDescriptor ();
};return _cecg ._dbcbe ;};

// String returns the name of the colorspace (DeviceN).
func (_badcg *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToPdfObject implements interface PdfModel.
func (_bag *PdfActionSound )ToPdfObject ()_bab .PdfObject {_bag .PdfAction .ToPdfObject ();_cga :=_bag ._ec ;_bdd :=_cga .PdfObject .(*_bab .PdfObjectDictionary );_bdd .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeSound )));_bdd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bag .Sound );
_bdd .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_bag .Volume );_bdd .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_bag .Synchronous );_bdd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bag .Repeat );_bdd .SetIfNotNil ("\u004d\u0069\u0078",_bag .Mix );
return _cga ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_abg :=NewPdfAction ();_dga :=&PdfActionGoTo3DView {};_dga .PdfAction =_abg ;_abg .SetContext (_dga );return _dga ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_gcfe *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bab .PdfObject {_aead :=_bab .MakeDict ();if _gcfe .Subtype !=nil {_aead .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcfe .Subtype );};_aead .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_gcfe .Colorants );
_aead .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_gcfe .Process );_aead .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_gcfe .MixingHints );if _gcfe ._gacd !=nil {_gcfe ._gacd .PdfObject =_aead ;return _gcfe ._gacd ;
};return _aead ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_edgb :=NewPdfOutline ();_edgb ._agea =&_edgb ;return _edgb };var _ pdfFont =(*pdfFontType3 )(nil );

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_ffaf fontCommon )isCIDFont ()bool {if _ffaf ._egbf ==""{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffaf );
};_faeg :=false ;switch _ffaf ._egbf {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_faeg =true ;};_cgb .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_faeg ,_ffaf );
return _faeg ;};

// ToPdfObject implements interface PdfModel.
func (_abc *PdfAction )ToPdfObject ()_bab .PdfObject {_cf :=_abc ._ec ;_ggb :=_cf .PdfObject .(*_bab .PdfObjectDictionary );_ggb .Clear ();_ggb .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ggb .SetIfNotNil ("\u0053",_abc .S );
_ggb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_abc .Next );return _cf ;};func (_eegggf *PdfReader )loadDSS ()(*DSS ,error ){if _eegggf ._fdcebg .GetCrypter ()!=nil &&!_eegggf ._fdcebg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_addf :=_eegggf ._bbcgg .Get ("\u0044\u0053\u0053");if _addf ==nil {return nil ,nil ;};_ebcgb ,_ :=_bab .GetIndirect (_addf );_addf =_bab .TraceToDirectObject (_addf );switch _cbedef :=_addf .(type ){case *_bab .PdfObjectNull :return nil ,nil ;case *_bab .PdfObjectDictionary :return _ggfb (_ebcgb ,_cbedef );
};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_addf );};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ffgb *PdfPageResources )GenerateXObjectName ()_bab .PdfObjectName {_dgddg :=1;for {_fggedg :=_bab .MakeName (_d .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dgddg ));if !_ffgb .HasXObjectByName (*_fggedg ){return *_fggedg ;};_dgddg ++;};};type pdfSignDictionary struct{*_bab .PdfObjectDictionary ;
_agdf *SignatureHandler ;_efccbe *PdfSignature ;_cbbgc int64 ;_agced int ;_adaeb int ;_ecacc int ;_aabge int ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_agaa *PdfColorspaceLab )DecodeArray ()[]float64 {_dbdf :=[]float64 {0,100};if _agaa .Range !=nil &&len (_agaa .Range )==4{_dbdf =append (_dbdf ,_agaa .Range ...);}else {_dbdf =append (_dbdf ,-100,100,-100,100);};return _dbdf ;};func _gceb (_egec *_bab .PdfObjectDictionary )(*PdfFieldChoice ,error ){_faea :=&PdfFieldChoice {};
_faea .Opt ,_ =_bab .GetArray (_egec .Get ("\u004f\u0070\u0074"));_faea .TI ,_ =_bab .GetInt (_egec .Get ("\u0054\u0049"));_faea .I ,_ =_bab .GetArray (_egec .Get ("\u0049"));return _faea ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bebb *PdfFieldButton )IsRadio ()bool {return _bebb .GetType ()==ButtonTypeRadio };

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fee *PdfAnnotationWidget )Field ()*PdfField {return _fee ._ece };

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_caega *PdfWriter )SetRotation (rotate int64 )error {_defdc ,_cgdgce :=_bab .GetDict (_caega ._baadg );if !_cgdgce {return ErrTypeCheck ;};_defdc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bab .MakeInteger (rotate ));return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_fcdce *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _fcdce .MediaBox !=nil {return _fcdce .MediaBox ,nil ;};_gafb :=_fcdce .Parent ;for _gafb !=nil {_dccg ,_dcgda :=_bab .GetDict (_gafb );if !_dcgda {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fgecda :=_dccg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fgecda !=nil {_fedg ,_afdcc :=_bab .GetArray (_fgecda );if !_afdcc {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_baecf ,_adbga :=NewPdfRectangle (*_fedg );if _adbga !=nil {return nil ,_adbga ;};return _baecf ,nil ;};_gafb =_dccg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cg .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// GetContainingPdfObject implements interface PdfModel.
func (_add *PdfAction )GetContainingPdfObject ()_bab .PdfObject {return _add ._ec };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bggdd *PdfOutlineItem )ToPdfObject ()_bab .PdfObject {_gbbgf :=_bggdd ._cfebff ;_abgfb :=_gbbgf .PdfObject .(*_bab .PdfObjectDictionary );_abgfb .Set ("\u0054\u0069\u0074l\u0065",_bggdd .Title );if _bggdd .A !=nil {_abgfb .Set ("\u0041",_bggdd .A );
};if _cdefd :=_abgfb .Get ("\u0053\u0045");_cdefd !=nil {_abgfb .Remove ("\u0053\u0045");};if _bggdd .C !=nil {_abgfb .Set ("\u0043",_bggdd .C );};if _bggdd .Dest !=nil {_abgfb .Set ("\u0044\u0065\u0073\u0074",_bggdd .Dest );};if _bggdd .F !=nil {_abgfb .Set ("\u0046",_bggdd .F );
};if _bggdd .Count !=nil {_abgfb .Set ("\u0043\u006f\u0075n\u0074",_bab .MakeInteger (*_bggdd .Count ));};if _bggdd .Next !=nil {_abgfb .Set ("\u004e\u0065\u0078\u0074",_bggdd .Next .ToPdfObject ());};if _bggdd .First !=nil {_abgfb .Set ("\u0046\u0069\u0072s\u0074",_bggdd .First .ToPdfObject ());
};if _bggdd .Prev !=nil {_abgfb .Set ("\u0050\u0072\u0065\u0076",_bggdd .Prev .GetContext ().GetContainingPdfObject ());};if _bggdd .Last !=nil {_abgfb .Set ("\u004c\u0061\u0073\u0074",_bggdd .Last .GetContext ().GetContainingPdfObject ());};if _bggdd .Parent !=nil {_abgfb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bggdd .Parent .GetContext ().GetContainingPdfObject ());
};return _gbbgf ;};func _cgfaf (_bdff _bab .PdfObject )(*PdfFunctionType2 ,error ){_dcbdg :=&PdfFunctionType2 {};var _fdedf *_bab .PdfObjectDictionary ;if _bdfec ,_cefcac :=_bdff .(*_bab .PdfIndirectObject );_cefcac {_dbade ,_cccg :=_bdfec .PdfObject .(*_bab .PdfObjectDictionary );
if !_cccg {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcbdg ._efaa =_bdfec ;_fdedf =_dbade ;}else if _gdgeb ,_badbe :=_bdff .(*_bab .PdfObjectDictionary );_badbe {_fdedf =_gdgeb ;}else {return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cgb .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_fdedf .String ());_fddcfe ,_aegbf :=_bab .TraceToDirectObject (_fdedf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bab .PdfObjectArray );if !_aegbf {_cgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fddcfe .Len ()< 0||_fddcfe .Len ()%2!=0{_cgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aafgd ,_fbdgb :=_fddcfe .ToFloat64Array ();if _fbdgb !=nil {return nil ,_fbdgb ;};_dcbdg .Domain =_aafgd ;_fddcfe ,_aegbf =_bab .TraceToDirectObject (_fdedf .Get ("\u0052\u0061\u006eg\u0065")).(*_bab .PdfObjectArray );
if _aegbf {if _fddcfe .Len ()< 0||_fddcfe .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dfeb ,_befbf :=_fddcfe .ToFloat64Array ();if _befbf !=nil {return nil ,_befbf ;};_dcbdg .Range =_dfeb ;
};_fddcfe ,_aegbf =_bab .TraceToDirectObject (_fdedf .Get ("\u0043\u0030")).(*_bab .PdfObjectArray );if _aegbf {_afdae ,_bcaf :=_fddcfe .ToFloat64Array ();if _bcaf !=nil {return nil ,_bcaf ;};_dcbdg .C0 =_afdae ;};_fddcfe ,_aegbf =_bab .TraceToDirectObject (_fdedf .Get ("\u0043\u0031")).(*_bab .PdfObjectArray );
if _aegbf {_gbeg ,_ecdgg :=_fddcfe .ToFloat64Array ();if _ecdgg !=nil {return nil ,_ecdgg ;};_dcbdg .C1 =_gbeg ;};if len (_dcbdg .C0 )!=len (_dcbdg .C1 ){_cgb .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_bab .ErrRangeError ;};N ,_fbdgb :=_bab .GetNumberAsFloat (_bab .TraceToDirectObject (_fdedf .Get ("\u004e")));if _fbdgb !=nil {_cgb .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_fdedf .String ());
return nil ,_fbdgb ;};_dcbdg .N =N ;return _dcbdg ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fcbf *PdfFieldButton )GetType ()ButtonType {_gdcab :=ButtonTypeCheckbox ;if _fcbf .Ff !=nil {if (uint32 (*_fcbf .Ff )&FieldFlagPushbutton .Mask ())> 0{_gdcab =ButtonTypePush ;}else if (uint32 (*_fcbf .Ff )&FieldFlagRadio .Mask ())> 0{_gdcab =ButtonTypeRadio ;
};};return _gdcab ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_ecgg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deagd ,_gffa :=_bab .GetNumbersAsFloat (objects );
if _gffa !=nil {return nil ,_gffa ;};return _ecgg .ColorFromFloats (_deagd );};

// Register registers (caches) a model to primitive object relationship.
func (_gaddg *modelManager )Register (primitive _bab .PdfObject ,model PdfModel ){_gaddg ._dfgfb [model ]=primitive ;_gaddg ._bcga [primitive ]=model ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fgag :=&PdfColorspaceSpecialSeparation {};return _fgag ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_gfca *PdfPageResources )SetXObjectByName (keyName _bab .PdfObjectName ,stream *_bab .PdfObjectStream )error {if _gfca .XObject ==nil {_gfca .XObject =_bab .MakeDict ();};_bdcae :=_bab .TraceToDirectObject (_gfca .XObject );_degee ,_fgefd :=_bdcae .(*_bab .PdfObjectDictionary );
if !_fgefd {_cgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_gfca .XObject ,_bdcae );return _cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_degee .Set (keyName ,stream );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cad *PdfAnnotationPolygon )ToPdfObject ()_bab .PdfObject {_cad .PdfAnnotation .ToPdfObject ();_beeb :=_cad ._bcc ;_afbd :=_beeb .PdfObject .(*_bab .PdfObjectDictionary );_cad .PdfAnnotationMarkup .appendToPdfDictionary (_afbd );_afbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_afbd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cad .Vertices );_afbd .SetIfNotNil ("\u004c\u0045",_cad .LE );_afbd .SetIfNotNil ("\u0042\u0053",_cad .BS );_afbd .SetIfNotNil ("\u0049\u0043",_cad .IC );_afbd .SetIfNotNil ("\u0042\u0045",_cad .BE );
_afbd .SetIfNotNil ("\u0049\u0054",_cad .IT );_afbd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cad .Measure );return _beeb ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cfbbe *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_cgb .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_cg .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func _gdgad (_bccg StdFontName )(pdfFontSimple ,error ){_afeeg ,_bgab :=_cb .NewStdFontByName (_bccg );if !_bgab {return pdfFontSimple {},ErrFontNotSupported ;
};_ddag :=_eccc (_afeeg );return _ddag ,nil ;};func (_ffdbg *PdfReader )newPdfPageFromDict (_cgccc *_bab .PdfObjectDictionary )(*PdfPage ,error ){_gcaacg :=NewPdfPage ();_gcaacg ._beadg =_cgccc ;_bdcea :=*_cgccc ;_eagg ,_dbgee :=_bdcea .Get ("\u0054\u0079\u0070\u0065").(*_bab .PdfObjectName );
if !_dbgee {return nil ,_cg .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_eagg !="\u0050\u0061\u0067\u0065"{return nil ,_cg .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _gagc :=_bdcea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gagc !=nil {_gcaacg .Parent =_gagc ;};if _bfadd :=_bdcea .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_bfadd !=nil {_bcbba ,_gdeb :=_bab .GetString (_bfadd );
if !_gdeb {return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_bfagf ,_dgbee :=NewPdfDate (_bcbba .Str ());if _dgbee !=nil {return nil ,_dgbee ;};_gcaacg .LastModified =&_bfagf ;};if _ffdga :=_bdcea .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ffdga !=nil &&!_bab .IsNullObject (_ffdga ){_abdge ,_efcd :=_bab .GetDict (_ffdga );
if !_efcd {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ffdga );};var _addba error ;_gcaacg .Resources ,_addba =NewPdfPageResourcesFromDict (_abdge );
if _addba !=nil {return nil ,_addba ;};}else {_daagdg ,_cdabeg :=_gcaacg .getParentResources ();if _cdabeg !=nil {return nil ,_cdabeg ;};if _daagdg ==nil {_daagdg =NewPdfPageResources ();};_gcaacg .Resources =_daagdg ;};if _geacg :=_bdcea .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_geacg !=nil {_feec ,_dfgd :=_bab .GetArray (_geacg );if !_dfgd {return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gggcb error ;
_gcaacg .MediaBox ,_gggcb =NewPdfRectangle (*_feec );if _gggcb !=nil {return nil ,_gggcb ;};};if _aeffb :=_bdcea .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_aeffb !=nil {_ffgg ,_eabf :=_bab .GetArray (_aeffb );if !_eabf {return nil ,_cg .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _ffbg error ;_gcaacg .CropBox ,_ffbg =NewPdfRectangle (*_ffgg );if _ffbg !=nil {return nil ,_ffbg ;};};if _begf :=_bdcea .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_begf !=nil {_bceaf ,_cbgg :=_bab .GetArray (_begf );if !_cbgg {return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _ddda error ;_gcaacg .BleedBox ,_ddda =NewPdfRectangle (*_bceaf );if _ddda !=nil {return nil ,_ddda ;};};if _fccde :=_bdcea .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fccde !=nil {_ecfab ,_ccaaf :=_bab .GetArray (_fccde );if !_ccaaf {return nil ,_cg .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bfcdg error ;_gcaacg .TrimBox ,_bfcdg =NewPdfRectangle (*_ecfab );if _bfcdg !=nil {return nil ,_bfcdg ;};};if _cgabe :=_bdcea .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cgabe !=nil {_bgaec ,_cadg :=_bab .GetArray (_cgabe );if !_cadg {return nil ,_cg .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _aabef error ;_gcaacg .ArtBox ,_aabef =NewPdfRectangle (*_bgaec );if _aabef !=nil {return nil ,_aabef ;};};if _dfbff :=_bdcea .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_dfbff !=nil {_gcaacg .BoxColorInfo =_dfbff ;
};if _aebgb :=_bdcea .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_aebgb !=nil {_gcaacg .Contents =_aebgb ;};if _gacc :=_bdcea .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gacc !=nil {_ddbgf ,_dgedg :=_bab .GetInt (_gacc );if !_dgedg {return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ebgeb :=int64 (*_ddbgf );_gcaacg .Rotate =&_ebgeb ;};if _aebcf :=_bdcea .Get ("\u0047\u0072\u006fu\u0070");_aebcf !=nil {_gcaacg .Group =_aebcf ;};if _deaf :=_bdcea .Get ("\u0054\u0068\u0075m\u0062");_deaf !=nil {_gcaacg .Thumb =_deaf ;};if _ebdbb :=_bdcea .Get ("\u0042");
_ebdbb !=nil {_gcaacg .B =_ebdbb ;};if _aefdg :=_bdcea .Get ("\u0044\u0075\u0072");_aefdg !=nil {_gcaacg .Dur =_aefdg ;};if _acca :=_bdcea .Get ("\u0054\u0072\u0061n\u0073");_acca !=nil {_gcaacg .Trans =_acca ;};if _aggfb :=_bdcea .Get ("\u0041\u0041");
_aggfb !=nil {_gcaacg .AA =_aggfb ;};if _afdb :=_bdcea .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_afdb !=nil {_gcaacg .Metadata =_afdb ;};if _fgede :=_bdcea .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fgede !=nil {_gcaacg .PieceInfo =_fgede ;
};if _ccfcf :=_bdcea .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ccfcf !=nil {_gcaacg .StructParents =_ccfcf ;};if _ffegb :=_bdcea .Get ("\u0049\u0044");_ffegb !=nil {_gcaacg .ID =_ffegb ;};if _aagbd :=_bdcea .Get ("\u0050\u005a");
_aagbd !=nil {_gcaacg .PZ =_aagbd ;};if _agcec :=_bdcea .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_agcec !=nil {_gcaacg .SeparationInfo =_agcec ;};if _bgcf :=_bdcea .Get ("\u0054\u0061\u0062\u0073");_bgcf !=nil {_gcaacg .Tabs =_bgcf ;
};if _eaaea :=_bdcea .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_eaaea !=nil {_gcaacg .TemplateInstantiated =_eaaea ;};if _ggccd :=_bdcea .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");
_ggccd !=nil {_gcaacg .PresSteps =_ggccd ;};if _egda :=_bdcea .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_egda !=nil {_gcaacg .UserUnit =_egda ;};if _cfgad :=_bdcea .Get ("\u0056\u0050");_cfgad !=nil {_gcaacg .VP =_cfgad ;};if _aabbg :=_bdcea .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");
_aabbg !=nil {_gcaacg .Annots =_aabbg ;};_gcaacg ._aadae =_ffdbg ;return _gcaacg ,nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_fge :=NewPdfAnnotation ();_cbc :=&PdfAnnotationLink {};_cbc .PdfAnnotation =_fge ;_fge .SetContext (_cbc );return _cbc ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dbgab *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bab .StreamEncoder ,error ){_cacdd ,_affc :=_dbgab ._ecege .(*_bab .PdfObjectStream );if !_affc {_cgb .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbgab ._ecege );
return nil ,nil ,_bab .ErrTypeError ;};_afcg ,_faga :=_bab .DecodeStream (_cacdd );if _faga !=nil {_cgb .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_faga );
return nil ,nil ,_faga ;};_bbedg ,_faga :=_bab .NewEncoderFromStream (_cacdd );if _faga !=nil {_cgb .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_faga );
return nil ,nil ,_faga ;};return _afcg ,_bbedg ,nil ;};func _eafb (_ccgdc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ebea ,_gccda :=_bab .GetDict (_ccgdc .AP );if !_gccda {return nil ,nil ,_cg .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _ebea ==nil {return nil ,nil ,nil ;};_ddff ,_gccda :=_bab .GetArray (_ccgdc .Rect );if !_gccda ||_ddff .Len ()!=4{return nil ,nil ,_cg .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fabg ,_efaec :=NewPdfRectangle (*_ddff );
if _efaec !=nil {return nil ,nil ,_efaec ;};_ffde :=_bab .TraceToDirectObject (_ebea .Get ("\u004e"));switch _fddcd :=_ffde .(type ){case *_bab .PdfObjectStream :_cfbdb :=_fddcd ;_ggee ,_acfcf :=NewXObjectFormFromStream (_cfbdb );return _ggee ,_fabg ,_acfcf ;
case *_bab .PdfObjectDictionary :_acbg :=_fddcd ;_ebge ,_adagae :=_bab .GetName (_ccgdc .AS );if !_adagae {return nil ,nil ,nil ;};if _acbg .Get (*_ebge )==nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_ccbg ,_adagae :=_bab .GetStream (_acbg .Get (*_ebge ));if !_adagae {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ebge );
return nil ,nil ,_cg .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_efgb ,_ffgee :=NewXObjectFormFromStream (_ccbg );return _efgb ,_fabg ,_ffgee ;};_cgb .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ffde );
return nil ,nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dbdbf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dbdbf ._gagfb !=nil {return _dbdbf ._gagfb ,nil ;};if _dbdbf .Annots ==nil {_dbdbf ._gagfb =[]*PdfAnnotation {};return nil ,nil ;};if _dbdbf ._aadae ==nil {_dbdbf ._gagfb =[]*PdfAnnotation {};
return nil ,nil ;};_fggee ,_dgdg :=_dbdbf ._aadae .loadAnnotations (_dbdbf .Annots );if _dgdg !=nil {return nil ,_dgdg ;};if _fggee ==nil {_dbdbf ._gagfb =[]*PdfAnnotation {};};_dbdbf ._gagfb =_fggee ;return _dbdbf ._gagfb ,nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_cgba *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_cgba .updateObjectsDeep (dss .ToPdfObject (),nil );};_cgba ._edbg =dss ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fadfb *Image )ColorAt (x ,y int )(_db .Color ,error ){_bcfdd :=_ca .BytesPerLine (int (_fadfb .Width ),int (_fadfb .BitsPerComponent ),_fadfb .ColorComponents );switch _fadfb .ColorComponents {case 1:return _ca .ColorAtGrayscale (x ,y ,int (_fadfb .BitsPerComponent ),_bcfdd ,_fadfb .Data ,_fadfb ._dgbgc );
case 3:return _ca .ColorAtNRGBA (x ,y ,int (_fadfb .Width ),_bcfdd ,int (_fadfb .BitsPerComponent ),_fadfb .Data ,_fadfb ._fffdd ,_fadfb ._dgbgc );case 4:return _ca .ColorAtCMYK (x ,y ,int (_fadfb .Width ),_fadfb .Data ,_fadfb ._dgbgc );};_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fadfb .ColorComponents ,_fadfb .BitsPerComponent );
return nil ,_cg .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_dbad *pdfCIDFontType0 )baseFields ()*fontCommon {return &_dbad .fontCommon };


// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cfeee *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_gabce :=_cfeee .GetContentStreamObjs ();wrapContents =wrapContents &&len (_gabce )> 0;_dfbg :=_bab .NewFlateEncoder ();_eadba :=_bab .MakeArray ();if wrapContents {_gaef ,_afacf :=_bab .MakeStream ([]byte ("\u0071\u000a"),_dfbg );
if _afacf !=nil {return _afacf ;};_eadba .Append (_gaef );};_eadba .Append (_gabce ...);if wrapContents {_ceae ,_fddcb :=_bab .MakeStream ([]byte ("\u000a\u0051\u000a"),_dfbg );if _fddcb !=nil {return _fddcb ;};_eadba .Append (_ceae );};_bcce ,_acefg :=_bab .MakeStream (cs ,_dfbg );
if _acefg !=nil {return _acefg ;};_eadba .Append (_bcce );_cfeee .Contents =_eadba ;return nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bab .PdfObjectArray ;Domain *_bab .PdfObjectArray ;Function []PdfFunction ;Extend *_bab .PdfObjectArray ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;
XObjectTypeUnknown ;);

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_efdca *PdfFieldButton )SetType (btype ButtonType ){_daeec :=uint32 (0);if _efdca .Ff !=nil {_daeec =uint32 (*_efdca .Ff );};switch btype {case ButtonTypePush :_daeec |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_daeec |=FieldFlagRadio .Mask ();
};_efdca .Ff =_bab .MakeInteger (int64 (_daeec ));};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ebcfb byte )byte ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_gbecg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dafa ,_aabd :=_bab .GetNumbersAsFloat (objects );
if _aabd !=nil {return nil ,_aabd ;};return _gbecg .ColorFromFloats (_dafa );};

// B returns the value of the B component of the color.
func (_eadg *PdfColorLab )B ()float64 {return _eadg [2]};func (_adga *PdfReader )newPdfAnnotationFreeTextFromDict (_daec *_bab .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_dbcd :=PdfAnnotationFreeText {};_ffae ,_ddebd :=_adga .newPdfAnnotationMarkupFromDict (_daec );
if _ddebd !=nil {return nil ,_ddebd ;};_dbcd .PdfAnnotationMarkup =_ffae ;_dbcd .DA =_daec .Get ("\u0044\u0041");_dbcd .Q =_daec .Get ("\u0051");_dbcd .RC =_daec .Get ("\u0052\u0043");_dbcd .DS =_daec .Get ("\u0044\u0053");_dbcd .CL =_daec .Get ("\u0043\u004c");
_dbcd .IT =_daec .Get ("\u0049\u0054");_dbcd .BE =_daec .Get ("\u0042\u0045");_dbcd .RD =_daec .Get ("\u0052\u0044");_dbcd .BS =_daec .Get ("\u0042\u0053");_dbcd .LE =_daec .Get ("\u004c\u0045");return &_dbcd ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bgd *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbcc :=vals [0];if _gbcc < 0.0||_gbcc > 1.0{_cgb .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _gbcc < 0.0{_gbcc =0.0;}else if _gbcc > 1.0{_gbcc =1.0;};return NewPdfColorDeviceGray (_gbcc ),nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_dfbfg pdfFont };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cgdgb *PdfColorspaceLab )ToPdfObject ()_bab .PdfObject {_cfge :=_bab .MakeArray ();_cfge .Append (_bab .MakeName ("\u004c\u0061\u0062"));_aaad :=_bab .MakeDict ();if _cgdgb .WhitePoint !=nil {_gfec :=_bab .MakeArray (_bab .MakeFloat (_cgdgb .WhitePoint [0]),_bab .MakeFloat (_cgdgb .WhitePoint [1]),_bab .MakeFloat (_cgdgb .WhitePoint [2]));
_aaad .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gfec );}else {_cgb .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cgdgb .BlackPoint !=nil {_bace :=_bab .MakeArray (_bab .MakeFloat (_cgdgb .BlackPoint [0]),_bab .MakeFloat (_cgdgb .BlackPoint [1]),_bab .MakeFloat (_cgdgb .BlackPoint [2]));_aaad .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bace );
};if _cgdgb .Range !=nil {_gcca :=_bab .MakeArray (_bab .MakeFloat (_cgdgb .Range [0]),_bab .MakeFloat (_cgdgb .Range [1]),_bab .MakeFloat (_cgdgb .Range [2]),_bab .MakeFloat (_cgdgb .Range [3]));_aaad .Set ("\u0052\u0061\u006eg\u0065",_gcca );};_cfge .Append (_aaad );
if _cgdgb ._ebbe !=nil {_cgdgb ._ebbe .PdfObject =_cfge ;return _cgdgb ._ebbe ;};return _cfge ;};

// B returns the value of the B component of the color.
func (_eab *PdfColorCalRGB )B ()float64 {return _eab [1]};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// M returns the value of the magenta component of the color.
func (_gdbg *PdfColorDeviceCMYK )M ()float64 {return _gdbg [1]};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bab .StreamEncoder )(*XObjectImage ,error ){_fadaa :=NewXObjectImage ();return UpdateXObjectImageFromImage (_fadaa ,img ,cs ,encoder );};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bab .PdfObjectDictionary )(*PdfPageResources ,error ){_bbafe :=NewPdfPageResources ();if _cfbdfb :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cfbdfb !=nil {_bbafe .ExtGState =_cfbdfb ;};if _bcgg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_bcgg !=nil &&!_bab .IsNullObject (_bcgg ){_bbafe .ColorSpace =_bcgg ;};if _cfdag :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cfdag !=nil {_bbafe .Pattern =_cfdag ;};if _afdac :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_afdac !=nil {_bbafe .Shading =_afdac ;
};if _fcga :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fcga !=nil {_bbafe .XObject =_fcga ;};if _accff :=_bab .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_accff !=nil {_bbafe .Font =_accff ;};if _agabec :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_agabec !=nil {_bbafe .ProcSet =_agabec ;};if _edee :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_edee !=nil {_bbafe .Properties =_edee ;};return _bbafe ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bcdbb *PdfOutlineTreeNode )GetContext ()PdfModel {if _effbg ,_gbbfe :=_bcdbb ._agea .(*PdfOutline );_gbbfe {return _effbg ;};if _abbcd ,_ebgcg :=_bcdbb ._agea .(*PdfOutlineItem );_ebgcg {return _abbcd ;};_cgb .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func _fbefd ()string {_fcccb .Lock ();defer _fcccb .Unlock ();return _ebdfe };

// ToPdfObject implements interface PdfModel.
func (_aed *PdfAnnotationPrinterMark )ToPdfObject ()_bab .PdfObject {_aed .PdfAnnotation .ToPdfObject ();_gfde :=_aed ._bcc ;_deag :=_gfde .PdfObject .(*_bab .PdfObjectDictionary );_deag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_deag .SetIfNotNil ("\u004d\u004e",_aed .MN );return _gfde ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bab .PdfObject )(*PdfFilespec ,error ){_cgga :=&PdfFilespec {};var _acea *_bab .PdfObjectDictionary ;if _daca ,_aabbc :=_bab .GetIndirect (obj );_aabbc {_cgga ._cebg =_daca ;_ecfc ,_fefca :=_bab .GetDict (_daca .PdfObject );
if !_fefca {_cgb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bab .ErrTypeError ;};_acea =_ecfc ;}else if _adaga ,_cccb :=_bab .GetDict (obj );
_cccb {_cgga ._cebg =_adaga ;_acea =_adaga ;}else {_cgb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bab .ErrTypeError ;};if _acea ==nil {_cgb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_cg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bfdbd :=_acea .Get ("\u0054\u0079\u0070\u0065");_bfdbd !=nil {_abdfg ,_efdee :=_bfdbd .(*_bab .PdfObjectName );if !_efdee {_cgb .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bfdbd );
}else {if *_abdfg !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_cgb .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_abdfg );
};};};if _ggec :=_acea .Get ("\u0046\u0053");_ggec !=nil {_cgga .FS =_ggec ;};if _afeb :=_acea .Get ("\u0046");_afeb !=nil {_cgga .F =_afeb ;};if _bbbe :=_acea .Get ("\u0055\u0046");_bbbe !=nil {_cgga .UF =_bbbe ;};if _cefd :=_acea .Get ("\u0044\u004f\u0053");
_cefd !=nil {_cgga .DOS =_cefd ;};if _acdc :=_acea .Get ("\u004d\u0061\u0063");_acdc !=nil {_cgga .Mac =_acdc ;};if _adgea :=_acea .Get ("\u0055\u006e\u0069\u0078");_adgea !=nil {_cgga .Unix =_adgea ;};if _edfd :=_acea .Get ("\u0049\u0044");_edfd !=nil {_cgga .ID =_edfd ;
};if _cecde :=_acea .Get ("\u0056");_cecde !=nil {_cgga .V =_cecde ;};if _fegd :=_acea .Get ("\u0045\u0046");_fegd !=nil {_cgga .EF =_fegd ;};if _bbee :=_acea .Get ("\u0052\u0046");_bbee !=nil {_cgga .RF =_bbee ;};if _gfcb :=_acea .Get ("\u0044\u0065\u0073\u0063");
_gfcb !=nil {_cgga .Desc =_gfcb ;};if _gefg :=_acea .Get ("\u0043\u0049");_gefg !=nil {_cgga .CI =_gefg ;};return _cgga ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_baac *Outline )ToPdfObject ()_bab .PdfObject {return _baac .ToPdfOutline ().ToPdfObject ()};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bab .PdfObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_efaa *_bab .PdfIndirectObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gegecf *OutlineItem )Insert (index uint ,item *OutlineItem ){_dcbdd :=uint (len (_gegecf .Entries ));if index > _dcbdd {index =_dcbdd ;};_gegecf .Entries =append (_gegecf .Entries [:index ],append ([]*OutlineItem {item },_gegecf .Entries [index :]...)...);
};func _acffg ()string {_fcccb .Lock ();defer _fcccb .Unlock ();if len (_ffda )> 0{return _ffda ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gbaa *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeaac ,_aeda :=_bab .GetNumbersAsFloat (objects );
if _aeda !=nil {return nil ,_aeda ;};return _gbaa .ColorFromFloats (_aeaac );};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bab .PdfObject ;Dest _bab .PdfObject ;H _bab .PdfObject ;PA _bab .PdfObject ;QuadPoints _bab .PdfObject ;BS _bab .PdfObject ;_egb *PdfAction ;_dab *PdfReader ;};func (_bbdbg *PdfAnnotationMarkup )appendToPdfDictionary (_eeab *_bab .PdfObjectDictionary ){_eeab .SetIfNotNil ("\u0054",_bbdbg .T );
if _bbdbg .Popup !=nil {_eeab .Set ("\u0050\u006f\u0070u\u0070",_bbdbg .Popup .ToPdfObject ());};_eeab .SetIfNotNil ("\u0043\u0041",_bbdbg .CA );_eeab .SetIfNotNil ("\u0052\u0043",_bbdbg .RC );_eeab .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bbdbg .CreationDate );
_eeab .SetIfNotNil ("\u0049\u0052\u0054",_bbdbg .IRT );_eeab .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bbdbg .Subj );_eeab .SetIfNotNil ("\u0052\u0054",_bbdbg .RT );_eeab .SetIfNotNil ("\u0049\u0054",_bbdbg .IT );_eeab .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bbdbg .ExData );
};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_bac :=NewPdfAction ();_acc :=&PdfActionSubmitForm {};_acc .PdfAction =_bac ;_bac .SetContext (_acc );return _acc ;};

// ToPdfObject implements interface PdfModel.
func (_fcbb *PdfAnnotationFileAttachment )ToPdfObject ()_bab .PdfObject {_fcbb .PdfAnnotation .ToPdfObject ();_fgged :=_fcbb ._bcc ;_fbdb :=_fgged .PdfObject .(*_bab .PdfObjectDictionary );_fcbb .PdfAnnotationMarkup .appendToPdfDictionary (_fbdb );_fbdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_fbdb .SetIfNotNil ("\u0046\u0053",_fcbb .FS );_fbdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcbb .Name );return _fgged ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_decb []_bab .PdfObject )([]_bab .PdfObject ,error );};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bab .PdfObject )(*PdfFont ,error ){return _egfc (fontObj ,true )};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_geecf *PdfShading )GetContainingPdfObject ()_bab .PdfObject {return _geecf ._bfgd };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_eddc *PdfField )GetContext ()PdfModel {return _eddc ._fbbf };

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_eba :=NewPdfAnnotation ();_dgff :=&PdfAnnotationFileAttachment {};_dgff .PdfAnnotation =_eba ;_dgff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eba .SetContext (_dgff );return _dgff ;
};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bab .PdfObject ;LE _bab .PdfObject ;BS _bab .PdfObject ;IC _bab .PdfObject ;BE _bab .PdfObject ;IT _bab .PdfObject ;Measure _bab .PdfObject ;};func (_gdfa *PdfReader )newPdfFieldFromIndirectObject (_ecacf *_bab .PdfIndirectObject ,_cdcg *PdfField )(*PdfField ,error ){if _deed ,_agac :=_gdfa ._dccce .GetModelFromPrimitive (_ecacf ).(*PdfField );
_agac {return _deed ,nil ;};_deaad ,_cgeg :=_bab .GetDict (_ecacf );if !_cgeg {return nil ,_d .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgaa :=NewPdfField ();_dgaa ._fced =_ecacf ;_dgaa ._fced .PdfObject =_deaad ;if _adgbb ,_deba :=_bab .GetName (_deaad .Get ("\u0046\u0054"));_deba {_dgaa .FT =_adgbb ;};if _cdcg !=nil {_dgaa .Parent =_cdcg ;};_dgaa .T ,_ =_deaad .Get ("\u0054").(*_bab .PdfObjectString );
_dgaa .TU ,_ =_deaad .Get ("\u0054\u0055").(*_bab .PdfObjectString );_dgaa .TM ,_ =_deaad .Get ("\u0054\u004d").(*_bab .PdfObjectString );_dgaa .Ff ,_ =_deaad .Get ("\u0046\u0066").(*_bab .PdfObjectInteger );_dgaa .V =_deaad .Get ("\u0056");_dgaa .DV =_deaad .Get ("\u0044\u0056");
_dgaa .AA =_deaad .Get ("\u0041\u0041");_efda :=_dgaa .FT ;if _efda ==nil &&_cdcg !=nil {_efda =_cdcg .FT ;};if _efda !=nil {switch *_efda {case "\u0054\u0078":_acba ,_adda :=_dcfc (_deaad );if _adda !=nil {return nil ,_adda ;};_acba .PdfField =_dgaa ;
_dgaa ._fbbf =_acba ;case "\u0043\u0068":_dccc ,_gadf :=_gceb (_deaad );if _gadf !=nil {return nil ,_gadf ;};_dccc .PdfField =_dgaa ;_dgaa ._fbbf =_dccc ;case "\u0042\u0074\u006e":_ggea ,_gfaac :=_ccafb (_deaad );if _gfaac !=nil {return nil ,_gfaac ;};
_ggea .PdfField =_dgaa ;_dgaa ._fbbf =_ggea ;case "\u0053\u0069\u0067":_dfeee ,_edgd :=_gdfa .newPdfFieldSignatureFromDict (_deaad );if _edgd !=nil {return nil ,_edgd ;};_dfeee .PdfField =_dgaa ;_dgaa ._fbbf =_dfeee ;default:_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dgaa .FT );
return nil ,_cg .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _cefa ,_geaaf :=_bab .GetName (_deaad .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_geaaf {if *_cefa =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bbdg ,_gagbb :=_gdfa .newPdfAnnotationFromIndirectObject (_ecacf );
if _gagbb !=nil {return nil ,_gagbb ;};_bagb ,_fdcg :=_bbdg .GetContext ().(*PdfAnnotationWidget );if !_fdcg {return nil ,_cg .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_bagb ._ece =_dgaa ;_bagb .Parent =_dgaa ._fced ;_dgaa .Annotations =append (_dgaa .Annotations ,_bagb );return _dgaa ,nil ;};};_babcd :=true ;if _gbfaa ,_gdge :=_bab .GetArray (_deaad .Get ("\u004b\u0069\u0064\u0073"));_gdge {_ggbe :=make ([]*_bab .PdfIndirectObject ,0,_gbfaa .Len ());
for _ ,_dgaeg :=range _gbfaa .Elements (){_debd ,_faba :=_bab .GetIndirect (_dgaeg );if !_faba {_ggab ,_abcfe :=_bab .GetStream (_dgaeg );if _abcfe &&_ggab .PdfObjectDictionary !=nil {_beae ,_cfgb :=_bab .GetNameVal (_ggab .Get ("\u0054\u0079\u0070\u0065"));
if _cfgb &&_beae =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_cgb .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_cg .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_ccdf ,_cbcf :=_bab .GetDict (_debd );
if !_cbcf {return nil ,ErrTypeCheck ;};if _babcd {_babcd =!_cecd (_ccdf );};_ggbe =append (_ggbe ,_debd );};for _ ,_fafa :=range _ggbe {if _babcd {_bddfa ,_aaeaf :=_gdfa .newPdfAnnotationFromIndirectObject (_fafa );if _aaeaf !=nil {_cgb .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_aaeaf );
return nil ,_aaeaf ;};_gfda ,_cdbab :=_bddfa ._bda .(*PdfAnnotationWidget );if !_cdbab {return nil ,ErrTypeCheck ;};_gfda ._ece =_dgaa ;_dgaa .Annotations =append (_dgaa .Annotations ,_gfda );}else {_ggfc ,_cfde :=_gdfa .newPdfFieldFromIndirectObject (_fafa ,_dgaa );
if _cfde !=nil {_cgb .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_cfde );return nil ,_cfde ;};_dgaa .Kids =append (_dgaa .Kids ,_ggfc );
};};};return _dgaa ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bab .PdfObject ;IC _bab .PdfObject ;BE _bab .PdfObject ;RD _bab .PdfObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_cegdc *PdfPageResources )SetXObjectFormByName (keyName _bab .PdfObjectName ,xform *XObjectForm )error {_egcea :=xform .ToPdfObject ().(*_bab .PdfObjectStream );_adafba :=_cegdc .SetXObjectByName (keyName ,_egcea );return _adafba ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_afedg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bcfeg []*PdfField ;_gabeb :=map[*_bab .PdfIndirectObject ]struct{}{};for _ ,_ecfdb :=range _afedg .PageList {_dfgag ,_dfedgd :=_ecfdb .GetAnnotations ();if _dfedgd !=nil {return _dfedgd ;
};for _ ,_gebgb :=range _dfgag {var _bbgg *PdfField ;switch _cdbea :=_gebgb .GetContext ().(type ){case *PdfAnnotationWidget :if _cdbea ._ece !=nil {_bbgg =_cdbea ._ece ;break ;};if _gbbfg ,_gadggg :=_bab .GetIndirect (_cdbea .Parent );_gadggg {_bbgg ,_dfedgd =_afedg .newPdfFieldFromIndirectObject (_gbbfg ,nil );
if _dfedgd ==nil {break ;};_cgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gbbfg ,_dfedgd );
};if _cdbea ._bcc !=nil {_bbgg ,_dfedgd =_afedg .newPdfFieldFromIndirectObject (_cdbea ._bcc ,nil );if _dfedgd ==nil {break ;};_cgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_cdbea ._bcc ,_dfedgd );
};};if _bbgg ==nil {continue ;};if _ ,_accd :=_gabeb [_bbgg ._fced ];_accd {continue ;};_gabeb [_bbgg ._fced ]=struct{}{};_bcfeg =append (_bcfeg ,_bbgg );};};if len (_bcfeg )==0{return nil ;};if _afedg .AcroForm ==nil {_afedg .AcroForm =NewPdfAcroForm ();
};_afedg .AcroForm .Fields =&_bcfeg ;return nil ;};func _addgf (_edded *_bab .PdfObjectDictionary )(*PdfShadingType5 ,error ){_fbagg :=PdfShadingType5 {};_fgcacg :=_edded .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fgcacg ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bcgga ,_fedec :=_fgcacg .(*_bab .PdfObjectInteger );if !_fedec {_cgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgcacg );
return nil ,_bab .ErrTypeError ;};_fbagg .BitsPerCoordinate =_bcgga ;_fgcacg =_edded .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fgcacg ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bcgga ,_fedec =_fgcacg .(*_bab .PdfObjectInteger );if !_fedec {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fgcacg );
return nil ,_bab .ErrTypeError ;};_fbagg .BitsPerComponent =_bcgga ;_fgcacg =_edded .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _fgcacg ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_bcgga ,_fedec =_fgcacg .(*_bab .PdfObjectInteger );if !_fedec {_cgb .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fgcacg );
return nil ,_bab .ErrTypeError ;};_fbagg .VerticesPerRow =_bcgga ;_fgcacg =_edded .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fgcacg ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gegff ,_fedec :=_fgcacg .(*_bab .PdfObjectArray );if !_fedec {_cgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgcacg );
return nil ,_bab .ErrTypeError ;};_fbagg .Decode =_gegff ;if _ecccb :=_edded .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ecccb !=nil {_fbagg .Function =[]PdfFunction {};if _cfcda ,_edefa :=_ecccb .(*_bab .PdfObjectArray );_edefa {for _ ,_bcbac :=range _cfcda .Elements (){_dcdeb ,_dfeea :=_cdegf (_bcbac );
if _dfeea !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfeea );return nil ,_dfeea ;};_fbagg .Function =append (_fbagg .Function ,_dcdeb );
};}else {_ddcfab ,_efcb :=_cdegf (_ecccb );if _efcb !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efcb );return nil ,_efcb ;
};_fbagg .Function =append (_fbagg .Function ,_ddcfab );};};return &_fbagg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aae *PdfActionLaunch )ToPdfObject ()_bab .PdfObject {_aae .PdfAction .ToPdfObject ();_aff :=_aae ._ec ;_ffa :=_aff .PdfObject .(*_bab .PdfObjectDictionary );_ffa .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeLaunch )));if _aae .F !=nil {_ffa .Set ("\u0046",_aae .F .ToPdfObject ());
};_ffa .SetIfNotNil ("\u0057\u0069\u006e",_aae .Win );_ffa .SetIfNotNil ("\u004d\u0061\u0063",_aae .Mac );_ffa .SetIfNotNil ("\u0055\u006e\u0069\u0078",_aae .Unix );_ffa .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_aae .NewWindow );return _aff ;
};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_agbfbg :=&PdfPageResources {};_agbfbg ._bdcac =_bab .MakeDict ();return _agbfbg ;};func (_ggeaa *pdfFontSimple )getFontEncoding ()(_eaedf string ,_cebag map[_ea .CharCode ]_ea .GlyphName ,_cacg error ){_eaedf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _bgbgf ,_fdbca :=_ggfcd [_ggeaa ._cefg ];_fdbca {_eaedf =_bgbgf ;}else if _ggeaa .fontFlags ()&_agfbge !=0{for _cbdbd ,_gfedd :=range _ggfcd {if _bf .Contains (_ggeaa ._cefg ,_cbdbd ){_eaedf =_gfedd ;break ;};};};if _ggeaa .Encoding ==nil {return _eaedf ,nil ,nil ;
};switch _cbdd :=_ggeaa .Encoding .(type ){case *_bab .PdfObjectName :return string (*_cbdd ),nil ,nil ;case *_bab .PdfObjectDictionary :_cafcd ,_fdce :=_bab .GetName (_cbdd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _fdce {_eaedf =_cafcd .String ();};if _dcfa :=_cbdd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_dcfa !=nil {_aebce ,_ceggd :=_bab .GetArray (_dcfa );if !_ceggd {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cbdd ,_cbdd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bab .ErrTypeError ;};_cebag ,_cacg =_ea .FromFontDifferences (_aebce );};return _eaedf ,_cebag ,_cacg ;default:_cgb .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ggeaa .Encoding ,_ggeaa .Encoding );
return "",nil ,_bab .ErrTypeError ;};};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dgbfg :=&PdfOutlineItem {_cfebff :_bab .MakeIndirectObject (_bab .MakeDict ())};_dgbfg ._agea =_dgbfg ;return _dgbfg ;};

// ToPdfObject implements interface PdfModel.
func (_bfa *PdfActionSubmitForm )ToPdfObject ()_bab .PdfObject {_bfa .PdfAction .ToPdfObject ();_aab :=_bfa ._ec ;_deg :=_aab .PdfObject .(*_bab .PdfObjectDictionary );_deg .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeSubmitForm )));if _bfa .F !=nil {_deg .Set ("\u0046",_bfa .F .ToPdfObject ());
};_deg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bfa .Fields );_deg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bfa .Flags );return _aab ;};

// SetAnnotations sets the annotations list.
func (_gdagg *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gdagg ._gagfb =annotations };

// GetAction returns the PDF action for the annotation link.
func (_dbb *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _dbb ._egb !=nil {return _dbb ._egb ,nil ;};if _dbb .A ==nil {return nil ,nil ;};if _dbb ._dab ==nil {return nil ,nil ;};_egd ,_bagg :=_dbb ._dab .loadAction (_dbb .A );if _bagg !=nil {return nil ,_bagg ;
};_dbb ._egb =_egd ;return _dbb ._egb ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bab .PdfObjectInteger ;BitsPerComponent *_bab .PdfObjectInteger ;BitsPerFlag *_bab .PdfObjectInteger ;Decode *_bab .PdfObjectArray ;Function []PdfFunction ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_beeac *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _beeac ._aegbcg !=nil {return _beeac ._aegbcg ,nil ;};if _beeac .ColorSpace ==nil {return nil ,nil ;};_bcedf ,_bfdcdd :=_aegdca (_beeac .ColorSpace );if _bfdcdd !=nil {return nil ,_bfdcdd ;
};_beeac ._aegbcg =_bcedf ;return _beeac ._aegbcg ,nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_fafc *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ecfe :=range pages {_ecfe =_ecfe .Duplicate ();_cbfdd (_ecfe );_fafc ._gdad =append (_fafc ._gdad ,_ecfe );};};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_adee *_bab .PdfObjectDictionary ;_fedc *_bab .PdfIndirectObject ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_ffaa *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dabe ,_eafa :=color .(*PdfColorCalGray );if !_eafa {_cgb .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dabe .Val ();X :=_ffaa .WhitePoint [0]*_ab .Pow (ANorm ,_ffaa .Gamma );Y :=_ffaa .WhitePoint [1]*_ab .Pow (ANorm ,_ffaa .Gamma );
Z :=_ffaa .WhitePoint [2]*_ab .Pow (ANorm ,_ffaa .Gamma );_aggfc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eecca :=-0.969256*X +1.875992*Y +0.041556*Z ;_bfda :=0.055648*X +-0.204043*Y +1.057311*Z ;_aggfc =_ab .Min (_ab .Max (_aggfc ,0),1.0);_eecca =_ab .Min (_ab .Max (_eecca ,0),1.0);
_bfda =_ab .Min (_ab .Max (_bfda ,0),1.0);return NewPdfColorDeviceRGB (_aggfc ,_eecca ,_bfda ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_abgd *PdfActionGoToE )ToPdfObject ()_bab .PdfObject {_abgd .PdfAction .ToPdfObject ();_df :=_abgd ._ec ;_ff :=_df .PdfObject .(*_bab .PdfObjectDictionary );_ff .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeGoToE )));if _abgd .F !=nil {_ff .Set ("\u0046",_abgd .F .ToPdfObject ());
};_ff .SetIfNotNil ("\u0044",_abgd .D );_ff .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_abgd .NewWindow );_ff .SetIfNotNil ("\u0054",_abgd .T );return _df ;};func (_cbcc *fontFile )parseASCIIPart (_ddfdd []byte )error {if len (_ddfdd )< 2||string (_ddfdd [:2])!="\u0025\u0021"{return _cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_dcadg ,_cefdg ,_dfcdd :=_cdbg (_ddfdd );if _dfcdd !=nil {return _dfcdd ;};_caeg :=_dcegb (_dcadg );_cbcc ._fbfac =_caeg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cbcc ._fbfac ==""{_cgb .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cefdg !=""{_bfdaf ,_gbbd :=_cfce (_cefdg );if _gbbd !=nil {return _gbbd ;};_cedc ,_gbbd :=_ea .NewCustomSimpleTextEncoder (_bfdaf ,nil );if _gbbd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_gbbd );
return nil ;};_cbcc ._bgac =_cedc ;};return nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bab .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bab .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bab .PdfObjectBool ;_gdbgg PdfModel ;_bfgd _bab .PdfObject ;};var _ggfcd =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// A returns the value of the A component of the color.
func (_cddc *PdfColorLab )A ()float64 {return _cddc [1]};var _cgfe =_c .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");


// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fgcd *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bab .GetNumberAsFloat (_fgcd .CapHeight );};

// ToPdfObject converts the font to a PDF representation.
func (_cgeef *pdfFontType3 )ToPdfObject ()_bab .PdfObject {if _cgeef ._dgdbed ==nil {_cgeef ._dgdbed =&_bab .PdfIndirectObject {};};_eacg :=_cgeef .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_cgeef ._dgdbed .PdfObject =_eacg ;if _cgeef .FirstChar !=nil {_eacg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cgeef .FirstChar );
};if _cgeef .LastChar !=nil {_eacg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cgeef .LastChar );};if _cgeef .Widths !=nil {_eacg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cgeef .Widths );};if _cgeef .Encoding !=nil {_eacg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cgeef .Encoding );
}else if _cgeef ._cdfa !=nil {_eedf :=_cgeef ._cdfa .ToPdfObject ();if _eedf !=nil {_eacg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eedf );};};if _cgeef .FontBBox !=nil {_eacg .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_cgeef .FontBBox );
};if _cgeef .FontMatrix !=nil {_eacg .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_cgeef .FontMatrix );};if _cgeef .CharProcs !=nil {_eacg .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_cgeef .CharProcs );};if _cgeef .Resources !=nil {_eacg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cgeef .Resources );
};return _cgeef ._dgdbed ;};func (_ebbcd *PdfFunctionType0 )processSamples ()error {_fgee :=_ee .ResampleBytes (_ebbcd ._bfbga ,_ebbcd .BitsPerSample );_ebbcd ._gbdda =_fgee ;return nil ;};func (_fdddc *LTV )enable (_gbae ,_aegbc []*_ef .Certificate ,_afcdd string )error {_cfbc ,_gfcge ,_eagda :=_fdddc .buildCertChain (_gbae ,_aegbc );
if _eagda !=nil {return _eagda ;};_cdfab ,_eagda :=_fdddc .getCerts (_cfbc );if _eagda !=nil {return _eagda ;};_faced ,_eagda :=_fdddc .getOCSPs (_cfbc ,_gfcge );if _eagda !=nil {return _eagda ;};_gcddg ,_eagda :=_fdddc .getCRLs (_cfbc );if _eagda !=nil {return _eagda ;
};_adff :=_fdddc ._gcac ;_adagc ,_eagda :=_adff .addCerts (_cdfab );if _eagda !=nil {return _eagda ;};_abcgf ,_eagda :=_adff .addOCSPs (_faced );if _eagda !=nil {return _eagda ;};_eaced ,_eagda :=_adff .addCRLs (_gcddg );if _eagda !=nil {return _eagda ;
};if _afcdd !=""{_adff .VRI [_afcdd ]=&VRI {Cert :_adagc ,OCSP :_abcgf ,CRL :_eaced };};_fdddc ._fecce .SetDSS (_adff );return nil ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gdaff ,_aegdc :=_de .Open (filePath );if _aegdc !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aegdc );
return nil ,_aegdc ;};defer _gdaff .Close ();return NewPdfFontFromTTF (_gdaff );};

// Initialize initializes the PdfSignature.
func (_eefdg *PdfSignature )Initialize ()error {if _eefdg .Handler ==nil {return _cg .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _eefdg .Handler .InitSignature (_eefdg );};

// Write writes out the PDF.
func (_feacd *PdfWriter )Write (writer _ad .Writer )error {_cgb .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_cdcdb :=_cbf .GetLicenseKey ();if (_cdcdb ==nil ||!_cdcdb .IsLicensed ())&&!_afcdb {_d .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_d .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _cg .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _feacd ._badbg !=nil {_cgb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_feacd ._badbg );
_bbfbf :=_feacd ._badbg .ToPdfObject ();_cgb .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_bbfbf ,_bbfbf ,_bbfbf );_feacd ._abbdcc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_bbfbf );
_gafgdg :=_feacd .addObjects (_bbfbf );if _gafgdg !=nil {return _gafgdg ;};};if _feacd ._dgagg !=nil {_cgb .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_fbgea :=_feacd ._dgagg .ToPdfObject ();
_cgb .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fbgea );_feacd ._abbdcc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fbgea );_eafdf :=_feacd .addObjects (_fbgea );if _eafdf !=nil {return _eafdf ;
};};for _dbagf ,_fddca :=range _feacd ._ebgfb {if !_feacd .hasObject (_dbagf ){_cgb .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dbagf ,_dbagf ,_dbagf );
for _ ,_bffae :=range _fddca {for _ ,_edggdf :=range _bffae .Keys (){_ccgcf :=_bffae .Get (_edggdf );if _ccgcf ==_dbagf {_cgb .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_bffae .Set (_edggdf ,_bab .MakeNull ());break ;};};};};};_feacd ._abbdcc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bab .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_feacd ._gffad ,_feacd ._bbad )));_feacd .copyObjects ();if _feacd ._bcbcc !=nil {var _cfcg error ;
_feacd ._bbceb ,_cfcg =_feacd ._bcbcc .Optimize (_feacd ._bbceb );if _cfcg !=nil {return _cfcg ;};_defbdb :=make (map[_bab .PdfObject ]struct{},len (_feacd ._bbceb ));for _ ,_dffef :=range _feacd ._bbceb {_defbdb [_dffef ]=struct{}{};};_feacd ._acagcb =_defbdb ;
};_feacd ._effee =_feacd ._fcdaa ;_feacd ._bgfgg =_b .NewWriter (writer );_cegaa :=_feacd ._gffad > 1||(_feacd ._gffad ==1&&_feacd ._bbad > 4);if _feacd ._acdced !=nil {_cegaa =*_feacd ._acdced ;};_fbaa :=make (map[_bab .PdfObject ]bool );for _ ,_bdgeb :=range _feacd ._bbceb {if _ccbbe ,_gdbdg :=_bdgeb .(*_bab .PdfObjectStreams );
_gdbdg {_cegaa =true ;for _ ,_eacgb :=range _ccbbe .Elements (){_fbaa [_eacgb ]=true ;if _bbffc ,_fccda :=_eacgb .(*_bab .PdfIndirectObject );_fccda {_fbaa [_bbffc .PdfObject ]=true ;};};};};if _cegaa &&_feacd ._gffad ==1&&_feacd ._bbad < 5{_feacd ._bbad =5;
};if _feacd ._fbeeg {_feacd .writeString ("\u000a");}else {_feacd .writeString (_d .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_feacd ._gffad ,_feacd ._bbad ));_feacd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_feacd .updateObjectNumbers ();_cgb .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_feacd ._bbceb ));_feacd ._gebaa =make (map[int ]crossReference );_feacd ._gebaa [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _feacd ._aeagd .ObjectMap !=nil {for _fddeag ,_accaf :=range _feacd ._aeagd .ObjectMap {if _fddeag ==0{continue ;};if _accaf .XType ==_bab .XrefTypeObjectStream {_cfcecg :=crossReference {Type :2,ObjectNumber :_accaf .OsObjNumber ,Index :_accaf .OsObjIndex };
_feacd ._gebaa [_fddeag ]=_cfcecg ;};if _accaf .XType ==_bab .XrefTypeTableEntry {_defega :=crossReference {Type :1,ObjectNumber :_accaf .ObjectNumber ,Offset :_accaf .Offset };_feacd ._gebaa [_fddeag ]=_defega ;};};};for _ ,_gbdc :=range _feacd ._bbceb {if _faffa :=_fbaa [_gbdc ];
_faffa {continue ;};_bcgad :=int64 (0);switch _egdgf :=_gbdc .(type ){case *_bab .PdfIndirectObject :_bcgad =_egdgf .ObjectNumber ;case *_bab .PdfObjectStream :_bcgad =_egdgf .ObjectNumber ;case *_bab .PdfObjectStreams :_bcgad =_egdgf .ObjectNumber ;default:_cgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_gbdc );
return ErrTypeCheck ;};if _feacd ._ggfbe !=nil &&_gbdc !=_feacd ._gdgbe {_cdceb :=_feacd ._ggfbe .Encrypt (_gbdc ,_bcgad ,0);if _cdceb !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_cdceb );
return _cdceb ;};};_feacd .writeObject (int (_bcgad ),_gbdc );};_egaed :=_feacd ._effee ;var _cfbdc int ;for _aeced :=range _feacd ._gebaa {if _aeced > _cfbdc {_cfbdc =_aeced ;};};if _cegaa {_adgcb :=_cfbdc +1;_feacd ._gebaa [_adgcb ]=crossReference {Type :1,ObjectNumber :_adgcb ,Offset :_egaed };
_gaafg :=_bcb .NewBuffer (nil );_dacg :=_bab .MakeArray ();for _eeefe :=0;_eeefe <=_cfbdc ;{for ;_eeefe <=_cfbdc ;_eeefe ++{_fcagg ,_effbf :=_feacd ._gebaa [_eeefe ];if _effbf &&(!_feacd ._fbeeg ||_feacd ._fbeeg &&(_fcagg .Type ==1&&_fcagg .Offset >=_feacd ._fafbb ||_fcagg .Type ==0)){break ;
};};var _fcdag int ;for _fcdag =_eeefe +1;_fcdag <=_cfbdc ;_fcdag ++{_dedfa ,_bebc :=_feacd ._gebaa [_fcdag ];if _bebc &&(!_feacd ._fbeeg ||_feacd ._fbeeg &&(_dedfa .Type ==1&&_dedfa .Offset > _feacd ._fafbb )){continue ;};break ;};_dacg .Append (_bab .MakeInteger (int64 (_eeefe )),_bab .MakeInteger (int64 (_fcdag -_eeefe )));
for _cbdcf :=_eeefe ;_cbdcf < _fcdag ;_cbdcf ++{_aafef :=_feacd ._gebaa [_cbdcf ];switch _aafef .Type {case 0:_a .Write (_gaafg ,_a .BigEndian ,byte (0));_a .Write (_gaafg ,_a .BigEndian ,uint32 (0));_a .Write (_gaafg ,_a .BigEndian ,uint16 (0xFFFF));case 1:_a .Write (_gaafg ,_a .BigEndian ,byte (1));
_a .Write (_gaafg ,_a .BigEndian ,uint32 (_aafef .Offset ));_a .Write (_gaafg ,_a .BigEndian ,uint16 (_aafef .Generation ));case 2:_a .Write (_gaafg ,_a .BigEndian ,byte (2));_a .Write (_gaafg ,_a .BigEndian ,uint32 (_aafef .ObjectNumber ));_a .Write (_gaafg ,_a .BigEndian ,uint16 (_aafef .Index ));
};};_eeefe =_fcdag +1;};_eaeae ,_edfaa :=_bab .MakeStream (_gaafg .Bytes (),_bab .NewFlateEncoder ());if _edfaa !=nil {return _edfaa ;};_eaeae .ObjectNumber =int64 (_adgcb );_eaeae .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0058\u0052\u0065\u0066"));
_eaeae .PdfObjectDictionary .Set ("\u0057",_bab .MakeArray (_bab .MakeInteger (1),_bab .MakeInteger (4),_bab .MakeInteger (2)));_eaeae .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dacg );_eaeae .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bab .MakeInteger (int64 (_adgcb +1)));
_eaeae .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_feacd ._cgddgb );_eaeae .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_feacd ._bdage );if _feacd ._fbeeg &&_feacd ._fgccf > 0{_eaeae .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bab .MakeInteger (_feacd ._fgccf ));
};if _feacd ._ggfbe !=nil {_eaeae .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_feacd ._gdgbe );_eaeae .Set ("\u0049\u0044",_feacd ._bcede );_cgb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_feacd ._bcede );};_feacd .writeObject (int (_eaeae .ObjectNumber ),_eaeae );
}else {_feacd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _ffacfe :=0;_ffacfe <=_cfbdc ;{for ;_ffacfe <=_cfbdc ;_ffacfe ++{_gfafc ,_eggbd :=_feacd ._gebaa [_ffacfe ];if _eggbd &&(!_feacd ._fbeeg ||_feacd ._fbeeg &&(_gfafc .Type ==1&&_gfafc .Offset >=_feacd ._fafbb ||_gfafc .Type ==0)){break ;
};};var _bbcdge int ;for _bbcdge =_ffacfe +1;_bbcdge <=_cfbdc ;_bbcdge ++{_eegcf ,_deff :=_feacd ._gebaa [_bbcdge ];if _deff &&(!_feacd ._fbeeg ||_feacd ._fbeeg &&(_eegcf .Type ==1&&_eegcf .Offset > _feacd ._fafbb )){continue ;};break ;};_gcga :=_d .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_ffacfe ,_bbcdge -_ffacfe );
_feacd .writeString (_gcga );for _cgcbe :=_ffacfe ;_cgcbe < _bbcdge ;_cgcbe ++{_bdfge :=_feacd ._gebaa [_cgcbe ];switch _bdfge .Type {case 0:_gcga =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_feacd .writeString (_gcga );case 1:_gcga =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bdfge .Offset ,0);_feacd .writeString (_gcga );};};_ffacfe =_bbcdge +1;};_fdafb :=_bab .MakeDict ();_fdafb .Set ("\u0049\u006e\u0066\u006f",_feacd ._cgddgb );
_fdafb .Set ("\u0052\u006f\u006f\u0074",_feacd ._bdage );_fdafb .Set ("\u0053\u0069\u007a\u0065",_bab .MakeInteger (int64 (_cfbdc +1)));if _feacd ._fbeeg &&_feacd ._fgccf > 0{_fdafb .Set ("\u0050\u0072\u0065\u0076",_bab .MakeInteger (_feacd ._fgccf ));
};if _feacd ._ggfbe !=nil {_fdafb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_feacd ._gdgbe );_fdafb .Set ("\u0049\u0044",_feacd ._bcede );_cgb .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_feacd ._bcede );};_feacd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");
_feacd .writeString (_fdafb .WriteString ());_feacd .writeString ("\u000a");};_cgfb :=_d .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_egaed );_feacd .writeString (_cgfb );_feacd .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
if _feacd ._fadac ==nil {_feacd ._fadac =_feacd ._bgfgg .Flush ();};return _feacd ._fadac ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_eacf *PdfInfo )GetCustomInfo (name string )*_bab .PdfObjectString {var _adbce *_bab .PdfObjectString ;if _eacf ._bgef ==nil {return _adbce ;};if _dcdg ,_ecec :=_eacf ._bgef .Get (*_bab .MakeName (name )).(*_bab .PdfObjectString );_ecec {_adbce =_dcdg ;
};return _adbce ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bab .PdfObjectArray ;ExtGState _bab .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_befg pdfCIDFontType2 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){_bcge ,_bagfbb :=_befg ._aefcc [r ];if !_bagfbb {_ggaa ,_cffc :=_bab .GetInt (_befg .DW );if !_cffc {return _cb .CharMetrics {},false ;};_bcge =int (*_ggaa );};return _cb .CharMetrics {Wx :float64 (_bcge )},true ;
};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bab .PdfObject ;T _bab .PdfObject ;Operation _bab .PdfObject ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_dfagd *PdfSignature )bool ;Validate (_cddbe *PdfSignature ,_bcef Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gacaa *PdfSignature )(Hasher ,error );Sign (_gfdd *PdfSignature ,_cead Hasher )error ;};func (_agdb *PdfReader )flattenFieldsWithOpts (_aeeg bool ,_fdad FieldAppearanceGenerator ,_efbeg *FieldFlattenOpts )error {if _efbeg ==nil {_efbeg =&FieldFlattenOpts {};
};var _geaf bool ;_abfc :=map[*PdfAnnotation ]bool {};{var _gdfag []*PdfField ;_aedag :=_agdb .AcroForm ;if _aedag !=nil {if _efbeg .FilterFunc !=nil {_gdfag =_aedag .filteredFields (_efbeg .FilterFunc ,true );_geaf =_aedag .Fields !=nil &&len (*_aedag .Fields )> 0;
}else {_gdfag =_aedag .AllFields ();};};for _ ,_gcaa :=range _gdfag {for _ ,_egdg :=range _gcaa .Annotations {_abfc [_egdg .PdfAnnotation ]=_gcaa .V !=nil ;if _fdad !=nil {_aegdd ,_fabef :=_fdad .GenerateAppearanceDict (_aedag ,_gcaa ,_egdg );if _fabef !=nil {return _fabef ;
};_egdg .AP =_aegdd ;};};};};if _aeeg {for _ ,_agbaa :=range _agdb .PageList {_gbgdd ,_aecec :=_agbaa .GetAnnotations ();if _aecec !=nil {return _aecec ;};for _ ,_bdcg :=range _gbgdd {_abfc [_bdcg ]=true ;};};};for _ ,_bbacb :=range _agdb .PageList {var _ddgb []*PdfAnnotation ;
if _fdad !=nil {if _cebeb :=_fdad .WrapContentStream (_bbacb );_cebeb !=nil {return _cebeb ;};};_efcag ,_eacb :=_bbacb .GetAnnotations ();if _eacb !=nil {return _eacb ;};for _ ,_fggf :=range _efcag {_agfbg ,_fcfe :=_abfc [_fggf ];if !_fcfe &&_efbeg .AnnotFilterFunc !=nil {if _ ,_bedg :=_fggf .GetContext ().(*PdfAnnotationWidget );
!_bedg {_fcfe =_efbeg .AnnotFilterFunc (_fggf );};};if !_fcfe {_ddgb =append (_ddgb ,_fggf );continue ;};switch _fggf .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_baca ,_bbdeg ,_cafee :=_eafb (_fggf );if _cafee !=nil {if !_agfbg {_cgb .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cafee );
continue ;};if _baca ==nil {continue ;};_gfgf :=_bbacb .Resources .GenerateXObjectName ();_bbacb .Resources .SetXObjectFormByName (_gfgf ,_baca );_ceabb :=_ab .Min (_bbdeg .Llx ,_bbdeg .Urx );_cacd :=_ab .Min (_bbdeg .Lly ,_bbdeg .Ury );var _ffdg []string ;
_ffdg =append (_ffdg ,"\u0071");_ffdg =append (_ffdg ,_d .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ceabb ,_cacd ));
_ffdg =append (_ffdg ,_d .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_gfgf .String ()));_ffdg =append (_ffdg ,"\u0051");_dgcbg :=_bf .Join (_ffdg ,"\u000a");_cafee =_bbacb .AppendContentStream (_dgcbg );if _cafee !=nil {return _cafee ;};if _baca .Resources !=nil {_aafgg ,_dbed :=_bab .GetDict (_baca .Resources .Font );
if _dbed {for _ ,_dfbf :=range _aafgg .Keys (){if !_bbacb .Resources .HasFontByName (_dfbf ){_bbacb .Resources .SetFontByName (_dfbf ,_aafgg .Get (_dfbf ));};};};};};if len (_ddgb )> 0{_bbacb ._gagfb =_ddgb ;}else {_bbacb ._gagfb =[]*PdfAnnotation {};};
};if !_geaf {_agdb .AcroForm =nil ;};return nil ;};func (_adgfb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func _aegdg (_dbdd *_bab .PdfObjectArray )(float64 ,error ){_gbea ,_ffbaf :=_dbdd .ToFloat64Array ();
if _ffbaf !=nil {_cgb .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbdd ,_ffbaf );};switch len (_gbea ){case 1:return _gbea [0],nil ;
case 3:_cgge :=PdfColorspaceDeviceRGB {};_egbb ,_fefge :=_cgge .ColorFromFloats (_gbea );if _fefge !=nil {return 0.0,_fefge ;};return _egbb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_dbcea :=PdfColorspaceDeviceCMYK {};_geddc ,_ceaad :=_dbcea .ColorFromFloats (_gbea );
if _ceaad !=nil {return 0.0,_ceaad ;};_cdeed ,_ceaad :=_dbcea .ColorToRGB (_geddc .(*PdfColorDeviceCMYK ));if _ceaad !=nil {return 0.0,_ceaad ;};return _cdeed .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ffbaf =_cg .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_cgb .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbdd ,_ffbaf );return 0.0,_ffbaf ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ggeg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _abbf []float64 ;for _edad :=0;_edad < _ggeg .GetNumComponents ();_edad ++{_abbf =append (_abbf ,0.0,1.0);};return _abbf ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fgcb *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fgcb .GetNumComponents (){return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cabf ,_cbcbd :=_fgcb .TintTransform .Evaluate (vals );
if _cbcbd !=nil {return nil ,_cbcbd ;};_dedab ,_cbcbd :=_fgcb .AlternateSpace .ColorFromFloats (_cabf );if _cbcbd !=nil {return nil ,_cbcbd ;};return _dedab ,nil ;};func (_bcgbd *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bcgbd ._fdcebg .GetCrypter ()!=nil &&!_bcgbd ._fdcebg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_acaga :=_bcgbd ._bbcgg ;_gfcd :=_acaga .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _gfcd ==nil {return nil ,nil ;};_cgb .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cbgfa :=_bab .ResolveReference (_gfcd );
_cgb .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cbgfa );if _eaec :=_bab .IsNullObject (_cbgfa );_eaec {_cgb .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_baba ,_bdebg :=_cbgfa .(*_bab .PdfIndirectObject );if !_bdebg {if _ ,_ffdc :=_bab .GetDict (_cbgfa );!_ffdc {_cgb .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_cgb .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_baba =_bab .MakeIndirectObject (_cbgfa );};_bafa ,_bdebg :=_baba .PdfObject .(*_bab .PdfObjectDictionary );if !_bdebg {return nil ,_cg .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_cgb .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bafa );_gbcd ,_ ,_fbbgf :=_bcgbd .buildOutlineTree (_baba ,nil ,nil ,nil );if _fbbgf !=nil {return nil ,_fbbgf ;};_cgb .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gbcd );
return _gbcd ,nil ;};func _eccc (_bdaaf _cb .StdFont )pdfFontSimple {_fbdg :=_bdaaf .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_egbf :"\u0054\u0079\u0070e\u0031",_cefg :_bdaaf .Name ()},_cfdae :_bdaaf .GetMetricsTable (),_cfeec :&PdfFontDescriptor {FontName :_bab .MakeName (string (_fbdg .Name )),FontFamily :_bab .MakeName (_fbdg .Family ),FontWeight :_bab .MakeFloat (float64 (_fbdg .Weight )),Flags :_bab .MakeInteger (int64 (_fbdg .Flags )),FontBBox :_bab .MakeArrayFromFloats (_fbdg .BBox [:]),ItalicAngle :_bab .MakeFloat (_fbdg .ItalicAngle ),Ascent :_bab .MakeFloat (_fbdg .Ascent ),Descent :_bab .MakeFloat (_fbdg .Descent ),CapHeight :_bab .MakeFloat (_fbdg .CapHeight ),XHeight :_bab .MakeFloat (_fbdg .XHeight ),StemV :_bab .MakeFloat (_fbdg .StemV ),StemH :_bab .MakeFloat (_fbdg .StemH )},_baffg :_bdaaf .Encoder ()};
};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ggbeb *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _bdab []*PdfOutlineTreeNode ;var _fadbeb []string ;var _dcda func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_dcda =func (_eabd *PdfOutlineTreeNode ,_bffcc *[]*PdfOutlineTreeNode ,_edcee *[]string ,_adfb int ){if _eabd ==nil {return ;
};if _eabd ._agea ==nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_agagg ,_afdfe :=_eabd ._agea .(*PdfOutlineItem );if _afdfe {*_bffcc =append (*_bffcc ,&_agagg .PdfOutlineTreeNode );
_adfc :=_bf .Repeat ("\u0020",_adfb *2)+_agagg .Title .Decoded ();*_edcee =append (*_edcee ,_adfc );};if _eabd .First !=nil {_bbfd :=_bf .Repeat ("\u0020",_adfb *2)+"\u002b";*_edcee =append (*_edcee ,_bbfd );_dcda (_eabd .First ,_bffcc ,_edcee ,_adfb +1);
};if _afdfe &&_agagg .Next !=nil {_dcda (_agagg .Next ,_bffcc ,_edcee ,_adfb );};};_dcda (_ggbeb ._effeg ,&_bdab ,&_fadbeb ,0);return _bdab ,_fadbeb ,nil ;};

// Height returns the height of `rect`.
func (_bccba *PdfRectangle )Height ()float64 {return _ab .Abs (_bccba .Ury -_bccba .Lly )};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_fcccb .Lock ();defer _fcccb .Unlock ();_bfddg =keywords };func (_abad *PdfReader )newPdfAnnotationPolygonFromDict (_afcf *_bab .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cef :=PdfAnnotationPolygon {};
_baf ,_gdf :=_abad .newPdfAnnotationMarkupFromDict (_afcf );if _gdf !=nil {return nil ,_gdf ;};_cef .PdfAnnotationMarkup =_baf ;_cef .Vertices =_afcf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cef .LE =_afcf .Get ("\u004c\u0045");_cef .BS =_afcf .Get ("\u0042\u0053");
_cef .IC =_afcf .Get ("\u0049\u0043");_cef .BE =_afcf .Get ("\u0042\u0045");_cef .IT =_afcf .Get ("\u0049\u0054");_cef .Measure =_afcf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cef ,nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_adacg *PdfTilingPattern )ToPdfObject ()_bab .PdfObject {_adacg .PdfPattern .ToPdfObject ();_ecbgf :=_adacg .getDict ();if _adacg .PaintType !=nil {_ecbgf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_adacg .PaintType );};if _adacg .TilingType !=nil {_ecbgf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_adacg .TilingType );
};if _adacg .BBox !=nil {_ecbgf .Set ("\u0042\u0042\u006f\u0078",_adacg .BBox .ToPdfObject ());};if _adacg .XStep !=nil {_ecbgf .Set ("\u0058\u0053\u0074e\u0070",_adacg .XStep );};if _adacg .YStep !=nil {_ecbgf .Set ("\u0059\u0053\u0074e\u0070",_adacg .YStep );
};if _adacg .Resources !=nil {_ecbgf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_adacg .Resources .ToPdfObject ());};if _adacg .Matrix !=nil {_ecbgf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_adacg .Matrix );};return _adacg ._ecege ;};

// ToPdfObject implements interface PdfModel.
func (_dfag *PdfAnnotationStamp )ToPdfObject ()_bab .PdfObject {_dfag .PdfAnnotation .ToPdfObject ();_bddf :=_dfag ._bcc ;_adec :=_bddf .PdfObject .(*_bab .PdfObjectDictionary );_dfag .PdfAnnotationMarkup .appendToPdfDictionary (_adec );_adec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0053\u0074\u0061m\u0070"));
_adec .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfag .Name );return _bddf ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_fbgfg *PdfPageResources )SetColorspaceByName (keyName _bab .PdfObjectName ,cs PdfColorspace )error {_dceaa ,_cfgaa :=_fbgfg .GetColorspaces ();if _cfgaa !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cfgaa );
return _cfgaa ;};if _dceaa ==nil {_dceaa =NewPdfPageResourcesColorspaces ();_fbgfg .SetColorSpace (_dceaa );};_dceaa .Set (keyName ,cs );return nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bab .PdfObjectBool ;SigFlags *_bab .PdfObjectInteger ;CO *_bab .PdfObjectArray ;DR *PdfPageResources ;DA *_bab .PdfObjectString ;Q *_bab .PdfObjectInteger ;XFA _bab .PdfObject ;_bage *_bab .PdfIndirectObject ;
};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_bcdab *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};type pdfFontType3 struct{fontCommon ;_dgdbed *_bab .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bab .PdfObject ;Encoding _bab .PdfObject ;FontBBox _bab .PdfObject ;FontMatrix _bab .PdfObject ;FirstChar _bab .PdfObject ;LastChar _bab .PdfObject ;Widths _bab .PdfObject ;Resources _bab .PdfObject ;_gfgce map[_ea .CharCode ]float64 ;_cdfa _ea .TextEncoder ;
};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bab .PdfObject ;};func _aegdca (_dfcc _bab .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gagcd :=&PdfPageResourcesColorspaces {};if _degac ,_ffgaa :=_dfcc .(*_bab .PdfIndirectObject );
_ffgaa {_gagcd ._afeda =_degac ;_dfcc =_degac .PdfObject ;};_ebde ,_dbaaa :=_bab .GetDict (_dfcc );if !_dbaaa {return nil ,_cg .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gagcd .Names =[]string {};_gagcd .Colorspaces =map[string ]PdfColorspace {};for _ ,_bffef :=range _ebde .Keys (){_ddcaf :=_ebde .Get (_bffef );_gagcd .Names =append (_gagcd .Names ,string (_bffef ));_fafd ,_daba :=NewPdfColorspaceFromPdfObject (_ddcaf );
if _daba !=nil {return nil ,_daba ;};_gagcd .Colorspaces [string (_bffef )]=_fafd ;};return _gagcd ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bfgb :=NewPdfAnnotation ();_fbe :=&PdfAnnotationWidget {};_fbe .PdfAnnotation =_bfgb ;_bfgb .SetContext (_fbe );return _fbe ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ddgc *_bab .PdfIndirectObject ;Certs []*_bab .PdfObjectStream ;OCSPs []*_bab .PdfObjectStream ;CRLs []*_bab .PdfObjectStream ;VRI map[string ]*VRI ;_dcgb map[string ]*_bab .PdfObjectStream ;_bbed map[string ]*_bab .PdfObjectStream ;_egfb map[string ]*_bab .PdfObjectStream ;
};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ebag ,_fage :=_cb .NewStdFontByName (HelveticaName );if !_fage {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_fcffb :=_eccc (_ebag );return &PdfFont {_dfbfg :&_fcffb };};

// Val returns the value of the color.
func (_aabb *PdfColorCalGray )Val ()float64 {return float64 (*_aabb )};func (_agbd *PdfAppender )replaceObject (_fdae ,_fbbg _bab .PdfObject ){switch _cac :=_fdae .(type ){case *_bab .PdfIndirectObject :_agbd ._fbeac [_fbbg ]=_cac .ObjectNumber ;case *_bab .PdfObjectStream :_agbd ._fbeac [_fbbg ]=_cac .ObjectNumber ;
};};func (_fcea *PdfAppender )updateObjectsDeep (_dgfff _bab .PdfObject ,_dgea map[_bab .PdfObject ]struct{}){if _dgea ==nil {_dgea =map[_bab .PdfObject ]struct{}{};};if _ ,_cfac :=_dgea [_dgfff ];_cfac ||_dgfff ==nil {return ;};_dgea [_dgfff ]=struct{}{};
_bebd :=_bab .ResolveReferencesDeep (_dgfff ,_fcea ._gced );if _bebd !=nil {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bebd );};switch _bdc :=_dgfff .(type ){case *_bab .PdfIndirectObject :switch {case _bdc .GetParser ()==_fcea ._fgdb ._fdcebg :return ;
case _bdc .GetParser ()==_fcea .Reader ._fdcebg :_dgcb ,_ :=_fcea ._fgdb .GetIndirectObjectByNumber (int (_bdc .ObjectNumber ));_ggfe ,_dda :=_dgcb .(*_bab .PdfIndirectObject );if _dda &&_ggfe !=nil {if _ggfe .PdfObject !=_bdc .PdfObject &&_ggfe .PdfObject .WriteString ()!=_bdc .PdfObject .WriteString (){_fcea .addNewObject (_dgfff );
_fcea ._fbeac [_dgfff ]=_bdc .ObjectNumber ;};};default:_fcea .addNewObject (_dgfff );};_fcea .updateObjectsDeep (_bdc .PdfObject ,_dgea );case *_bab .PdfObjectArray :for _ ,_ddbb :=range _bdc .Elements (){_fcea .updateObjectsDeep (_ddbb ,_dgea );};case *_bab .PdfObjectDictionary :for _ ,_ebcg :=range _bdc .Keys (){_fcea .updateObjectsDeep (_bdc .Get (_ebcg ),_dgea );
};case *_bab .PdfObjectStreams :if _bdc .GetParser ()!=_fcea ._fgdb ._fdcebg {for _ ,_afbb :=range _bdc .Elements (){_fcea .updateObjectsDeep (_afbb ,_dgea );};};case *_bab .PdfObjectStream :switch {case _bdc .GetParser ()==_fcea ._fgdb ._fdcebg :return ;
case _bdc .GetParser ()==_fcea .Reader ._fdcebg :if _bdef ,_dabb :=_fcea ._fgdb ._fdcebg .LookupByReference (_bdc .PdfObjectReference );_dabb ==nil {var _aadd bool ;if _eagf ,_ebcb :=_bab .GetStream (_bdef );_ebcb &&_bcb .Equal (_eagf .Stream ,_bdc .Stream ){_aadd =true ;
};if _cceaa ,_cbef :=_bab .GetDict (_bdef );_aadd &&_cbef {_aadd =_cceaa .WriteString ()==_bdc .PdfObjectDictionary .WriteString ();};if _aadd {return ;};};if _bdc .ObjectNumber !=0{_fcea ._fbeac [_dgfff ]=_bdc .ObjectNumber ;};default:if _ ,_egace :=_fcea ._gegb [_dgfff ];
!_egace {_fcea .addNewObject (_dgfff );};};_fcea .updateObjectsDeep (_bdc .PdfObjectDictionary ,_dgea );};};func (_bbccg Image )getBase ()_ca .ImageBase {return _ca .NewImageBase (int (_bbccg .Width ),int (_bbccg .Height ),int (_bbccg .BitsPerComponent ),_bbccg .ColorComponents ,_bbccg .Data ,_bbccg ._fffdd ,_bbccg ._dgbgc );
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_abaf *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_cca :=NewPdfAnnotation ();_bff :=&PdfAnnotationRichMedia {};_bff .PdfAnnotation =_cca ;_cca .SetContext (_bff );return _bff ;};func (_dgbe *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fced :_bab .MakeIndirectObject (_bab .MakeDict ())}};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_bedaf *PdfPageResources )HasColorspaceByName (keyName _bab .PdfObjectName )bool {_geef ,_abcfg :=_bedaf .GetColorspaces ();if _abcfg !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abcfg );
return false ;};if _geef ==nil {return false ;};_ ,_gcff :=_geef .Colorspaces [string (keyName )];return _gcff ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gfbbe DefaultImageHandler )NewGrayImageFromGoImage (goimg _eg .Image )(*Image ,error ){_begd :=goimg .Bounds ();_gdce :=&Image {Width :int64 (_begd .Dx ()),Height :int64 (_begd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dfade :=goimg .(type ){case *_eg .Gray :if len (_dfade .Pix )!=_begd .Dx ()*_begd .Dy (){_abfdd ,_fbebg :=_ca .GrayConverter .Convert (goimg );
if _fbebg !=nil {return nil ,_fbebg ;};_gdce .Data =_abfdd .Pix ();}else {_gdce .Data =_dfade .Pix ;};case *_eg .Gray16 :_gdce .BitsPerComponent =16;if len (_dfade .Pix )!=_begd .Dx ()*_begd .Dy ()*2{_ceaa ,_fdfdg :=_ca .Gray16Converter .Convert (goimg );
if _fdfdg !=nil {return nil ,_fdfdg ;};_gdce .Data =_ceaa .Pix ();}else {_gdce .Data =_dfade .Pix ;};case _ca .Image :_ddfde :=_dfade .Base ();if _ddfde .ColorComponents ==1{_gdce .BitsPerComponent =int64 (_ddfde .BitsPerComponent );_gdce .Data =_ddfde .Data ;
return _gdce ,nil ;};_afff ,_ccgfc :=_ca .GrayConverter .Convert (goimg );if _ccgfc !=nil {return nil ,_ccgfc ;};_gdce .Data =_afff .Pix ();default:_acddc ,_bcaga :=_ca .GrayConverter .Convert (goimg );if _bcaga !=nil {return nil ,_bcaga ;};_gdce .Data =_acddc .Pix ();
};return _gdce ,nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bab .PdfObject ;IC _bab .PdfObject ;RO _bab .PdfObject ;OverlayText _bab .PdfObject ;Repeat _bab .PdfObject ;DA _bab .PdfObject ;Q _bab .PdfObject ;};func (_afagc *PdfReader )traverseObjectData (_aagff _bab .PdfObject )error {return _bab .ResolveReferencesDeep (_aagff ,_afagc ._eccf );
};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_agddf *PdfReader )GetPageLabels ()(_bab .PdfObject ,error ){_ecdaf :=_bab .ResolveReference (_agddf ._bbcgg .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ecdaf ==nil {return nil ,nil ;};if !_agddf ._geegb {_fegb :=_agddf .traverseObjectData (_ecdaf );
if _fegb !=nil {return nil ,_fegb ;};};return _ecdaf ,nil ;};func _fbg (_addbc _bab .PdfObject )(*PdfColorspaceDeviceN ,error ){_gcbc :=NewPdfColorspaceDeviceN ();if _egff ,_fdfd :=_addbc .(*_bab .PdfIndirectObject );_fdfd {_gcbc ._bccca =_egff ;};_addbc =_bab .TraceToDirectObject (_addbc );
_gbab ,_efdga :=_addbc .(*_bab .PdfObjectArray );if !_efdga {return nil ,_d .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _gbab .Len ()!=4&&_gbab .Len ()!=5{return nil ,_d .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_addbc =_gbab .Get (0);_fadfd ,_efdga :=_addbc .(*_bab .PdfObjectName );if !_efdga {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fadfd !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_d .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_addbc =_gbab .Get (1);
_addbc =_bab .TraceToDirectObject (_addbc );_eccd ,_efdga :=_addbc .(*_bab .PdfObjectArray );if !_efdga {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_gcbc .ColorantNames =_eccd ;_addbc =_gbab .Get (2);_ecdda ,_agabc :=NewPdfColorspaceFromPdfObject (_addbc );if _agabc !=nil {return nil ,_agabc ;};_gcbc .AlternateSpace =_ecdda ;_gfcf ,_agabc :=_cdegf (_gbab .Get (3));if _agabc !=nil {return nil ,_agabc ;
};_gcbc .TintTransform =_gfcf ;if _gbab .Len ()==5{_eecgg ,_aeaaa :=_aegd (_gbab .Get (4));if _aeaaa !=nil {return nil ,_aeaaa ;};_gcbc .Attributes =_eecgg ;};return _gcbc ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bab .PdfObject ;T3DV _bab .PdfObject ;T3DA _bab .PdfObject ;T3DI _bab .PdfObject ;T3DB _bab .PdfObject ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_aebff *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_dbcfe :=func (_ecca float64 )float64 {if _ecca >=6.0/29{return _ecca *_ecca *_ecca ;};return 108.0/841*(_ecca -4/29);};_fegg :=img ._dgbgc ;if len (_fegg )!=6{_cgb .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fegg =_aebff .DecodeArray ();};_aadefd :=_ee .NewReader (img .getBase ());_cbeg :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._fffdd ,img ._dgbgc );_cbfb :=_ee .NewWriter (_cbeg );_cbge :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;
_ffff :=make ([]uint32 ,3);var (_feaf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_cedgd ,_ecge ,_cbdff float64 ;);for {_feaf =_aadefd .ReadSamples (_ffff );if _feaf ==_ad .EOF {break ;}else if _feaf !=nil {return img ,_feaf ;};Ls =float64 (_ffff [0])/_cbge ;
As =float64 (_ffff [1])/_cbge ;Bs =float64 (_ffff [2])/_cbge ;Ls =_ca .LinearInterpolate (Ls ,0.0,1.0,_fegg [0],_fegg [1]);As =_ca .LinearInterpolate (As ,0.0,1.0,_fegg [2],_fegg [3]);Bs =_ca .LinearInterpolate (Bs ,0.0,1.0,_fegg [4],_fegg [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_aebff .WhitePoint [0]*_dbcfe (L );Y =_aebff .WhitePoint [1]*_dbcfe (M );Z =_aebff .WhitePoint [2]*_dbcfe (N );_cedgd =3.240479*X +-1.537150*Y +-0.498535*Z ;_ecge =-0.969256*X +1.875992*Y +0.041556*Z ;_cbdff =0.055648*X +-0.204043*Y +1.057311*Z ;
_cedgd =_ab .Min (_ab .Max (_cedgd ,0),1.0);_ecge =_ab .Min (_ab .Max (_ecge ,0),1.0);_cbdff =_ab .Min (_ab .Max (_cbdff ,0),1.0);_ffff [0]=uint32 (_cedgd *_cbge );_ffff [1]=uint32 (_ecge *_cbge );_ffff [2]=uint32 (_cbdff *_cbge );if _feaf =_cbfb .WriteSamples (_ffff );
_feaf !=nil {return img ,_feaf ;};};return _bdaad (&_cbeg ),nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcba *PdfPageResourcesColorspaces )ToPdfObject ()_bab .PdfObject {_egfca :=_bab .MakeDict ();for _ ,_dgac :=range _bcba .Names {_egfca .Set (_bab .PdfObjectName (_dgac ),_bcba .Colorspaces [_dgac ].ToPdfObject ());};if _bcba ._afeda !=nil {_bcba ._afeda .PdfObject =_egfca ;
return _bcba ._afeda ;};return _egfca ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_ddedg *_bab .PdfIndirectObject ;};func (_efdcf *PdfFont )baseFields ()*fontCommon {if _efdcf ._dfbfg ==nil {_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _efdcf ._dfbfg .baseFields ();};

// SetLocation sets the `Location` field of the signature.
func (_dgbcg *PdfSignature )SetLocation (location string ){_dgbcg .Location =_bab .MakeString (location )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_deaa *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};type pdfCIDFontType0 struct{fontCommon ;_fcfg *_bab .PdfIndirectObject ;_fega _ea .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bab .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bab .PdfObject ;W _bab .PdfObject ;DW2 _bab .PdfObject ;W2 _bab .PdfObject ;_defdb map[_ea .CharCode ]float64 ;_agacd float64 ;};

// ToPdfObject implements interface PdfModel.
func (_bfcg *PdfAnnotationMovie )ToPdfObject ()_bab .PdfObject {_bfcg .PdfAnnotation .ToPdfObject ();_gbgf :=_bfcg ._bcc ;_ccf :=_gbgf .PdfObject .(*_bab .PdfObjectDictionary );_ccf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u004d\u006f\u0076i\u0065"));
_ccf .SetIfNotNil ("\u0054",_bfcg .T );_ccf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_bfcg .Movie );_ccf .SetIfNotNil ("\u0041",_bfcg .A );return _gbgf ;};

// ReplacePage replaces the original page to a new page.
func (_cddb *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cbcb :=pageNum -1;for _afgg :=range _cddb ._gdad {if _afgg ==_cbcb {_egbdc :=page .Duplicate ();_cbfdd (_egbdc );_cddb ._gdad [_afgg ]=_egbdc ;};};};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bab .PdfObject ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_cge *PdfReader )newPdfActionNamedFromDict (_ecc *_bab .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_ecc .Get ("\u004e")},nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_aef :=NewPdfAnnotation ();_edaf :=&PdfAnnotationPolygon {};_edaf .PdfAnnotation =_aef ;_edaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aef .SetContext (_edaf );return _edaf ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_effgd *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bab .GetNumberAsFloat (_effgd .Ascent );};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_cfbe *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccaac ,_gfacg :=color .(*PdfColorCalRGB );if !_gfacg {_cgb .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dbccc :=_ccaac .A ();_gdafae :=_ccaac .B ();_dbbc :=_ccaac .C ();X :=_cfbe .Matrix [0]*_ab .Pow (_dbccc ,_cfbe .Gamma [0])+_cfbe .Matrix [3]*_ab .Pow (_gdafae ,_cfbe .Gamma [1])+_cfbe .Matrix [6]*_ab .Pow (_dbbc ,_cfbe .Gamma [2]);
Y :=_cfbe .Matrix [1]*_ab .Pow (_dbccc ,_cfbe .Gamma [0])+_cfbe .Matrix [4]*_ab .Pow (_gdafae ,_cfbe .Gamma [1])+_cfbe .Matrix [7]*_ab .Pow (_dbbc ,_cfbe .Gamma [2]);Z :=_cfbe .Matrix [2]*_ab .Pow (_dbccc ,_cfbe .Gamma [0])+_cfbe .Matrix [5]*_ab .Pow (_gdafae ,_cfbe .Gamma [1])+_cfbe .Matrix [8]*_ab .Pow (_dbbc ,_cfbe .Gamma [2]);
_efae :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cada :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbdf :=0.055648*X +-0.204043*Y +1.057311*Z ;_efae =_ab .Min (_ab .Max (_efae ,0),1.0);_cada =_ab .Min (_ab .Max (_cada ,0),1.0);_cbdf =_ab .Min (_ab .Max (_cbdf ,0),1.0);
return NewPdfColorDeviceRGB (_efae ,_cada ,_cbdf ),nil ;};func (_cgae *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dcfac :=_cgae .Parent ;for _dcfac !=nil {_dbbfbb ,_gfaea :=_bab .GetDict (_dcfac );if !_gfaea {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _adgeg :=_dbbfbb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_adgeg !=nil {_gfcca ,_gaff :=_bab .GetDict (_adgeg );
if !_gaff {return nil ,_cg .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_ccgdb ,_bedc :=NewPdfPageResourcesFromDict (_gfcca );if _bedc !=nil {return nil ,_bedc ;};return _ccgdb ,nil ;};
_dcfac =_dbbfbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_ffdea *PdfReader )newPdfAcroFormFromDict (_bcea *_bab .PdfIndirectObject ,_aafca *_bab .PdfObjectDictionary )(*PdfAcroForm ,error ){_bdbf :=NewPdfAcroForm ();if _bcea !=nil {_bdbf ._bage =_bcea ;
_bcea .PdfObject =_bab .MakeDict ();};if _afbcb :=_aafca .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_afbcb !=nil {_fbca ,_ggfec :=_bab .GetArray (_afbcb );if !_ggfec {return nil ,_d .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_afbcb );
};var _ebfb []*PdfField ;for _ ,_cbgf :=range _fbca .Elements (){_ffccc ,_eeac :=_bab .GetIndirect (_cbgf );if !_eeac {if _ ,_befb :=_cbgf .(*_bab .PdfObjectNull );_befb {_cgb .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_cgb .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cbgf );
return nil ,_d .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_febg ,_bbdggf :=_ffdea .newPdfFieldFromIndirectObject (_ffccc ,nil );
if _bbdggf !=nil {return nil ,_bbdggf ;};_cgb .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_febg );_ebfb =append (_ebfb ,_febg );};_bdbf .Fields =&_ebfb ;};if _egdb :=_aafca .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_egdb !=nil {_bdee ,_fddga :=_bab .GetBool (_egdb );if _fddga {_bdbf .NeedAppearances =_bdee ;}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_egdb );
};};if _gafee :=_aafca .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_gafee !=nil {_begcc ,_babda :=_bab .GetInt (_gafee );if _babda {_bdbf .SigFlags =_begcc ;}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gafee );
};};if _eebg :=_aafca .Get ("\u0043\u004f");_eebg !=nil {_gadfd ,_cebbb :=_bab .GetArray (_eebg );if _cebbb {_bdbf .CO =_gadfd ;}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eebg );
};};if _fbcdc :=_aafca .Get ("\u0044\u0052");_fbcdc !=nil {if _cegec ,_cdaf :=_bab .GetDict (_fbcdc );_cdaf {_abdba ,_egcad :=NewPdfPageResourcesFromDict (_cegec );if _egcad !=nil {_cgb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_egcad );
return nil ,_egcad ;};_bdbf .DR =_abdba ;}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbcdc );};};if _dbeeb :=_aafca .Get ("\u0044\u0041");
_dbeeb !=nil {_cdfd ,_aeaba :=_bab .GetString (_dbeeb );if _aeaba {_bdbf .DA =_cdfd ;}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dbeeb );
};};if _dccd :=_aafca .Get ("\u0051");_dccd !=nil {_dfggb ,_aebfb :=_bab .GetInt (_dccd );if _aebfb {_bdbf .Q =_dfggb ;}else {_cgb .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dccd );
};};if _gdgcb :=_aafca .Get ("\u0058\u0046\u0041");_gdgcb !=nil {_bdbf .XFA =_gdgcb ;};_bdbf .ToPdfObject ();return _bdbf ,nil ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bab .PdfObject ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_ffdge *PdfReader )Decrypt (password []byte )(bool ,error ){_fdgbc ,_geeea :=_ffdge ._fdcebg .Decrypt (password );if _geeea !=nil {return false ,_geeea ;};if !_fdgbc {return false ,nil ;};_geeea =_ffdge .loadStructure ();if _geeea !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_geeea );
return false ,_geeea ;};return true ,nil ;};func (_acbe *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func (_bdae *PdfReader )newPdfAnnotationHighlightFromDict (_aaeg *_bab .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_afga :=PdfAnnotationHighlight {};
_bfff ,_abba :=_bdae .newPdfAnnotationMarkupFromDict (_aaeg );if _abba !=nil {return nil ,_abba ;};_afga .PdfAnnotationMarkup =_bfff ;_afga .QuadPoints =_aaeg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afga ,nil ;};func (_caee *PdfAppender )mergeResources (_fcbe ,_ccaf _bab .PdfObject ,_cgff map[_bab .PdfObjectName ]_bab .PdfObjectName )_bab .PdfObject {if _ccaf ==nil &&_fcbe ==nil {return nil ;
};if _ccaf ==nil {return _fcbe ;};_dcdd ,_eafd :=_bab .GetDict (_ccaf );if !_eafd {return _fcbe ;};if _fcbe ==nil {_aece :=_bab .MakeDict ();_aece .Merge (_dcdd );return _ccaf ;};_ddgg ,_eafd :=_bab .GetDict (_fcbe );if !_eafd {_cgb .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_ddgg =_bab .MakeDict ();};for _ ,_fgec :=range _dcdd .Keys (){if _fag ,_bcac :=_cgff [_fgec ];_bcac {_ddgg .Set (_fag ,_dcdd .Get (_fgec ));}else {_ddgg .Set (_fgec ,_dcdd .Get (_fgec ));};};return _ddgg ;};

// ToPdfObject implements interface PdfModel.
func (_ecb *PdfAnnotationSquiggly )ToPdfObject ()_bab .PdfObject {_ecb .PdfAnnotation .ToPdfObject ();_ecbd :=_ecb ._bcc ;_deced :=_ecbd .PdfObject .(*_bab .PdfObjectDictionary );_ecb .PdfAnnotationMarkup .appendToPdfDictionary (_deced );_deced .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_deced .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ecb .QuadPoints );return _ecbd ;};func (_gege *PdfAnnotation )String ()string {_cdd :="";_bed ,_acfb :=_gege .ToPdfObject ().(*_bab .PdfIndirectObject );if _acfb {_cdd =_d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gege ._bda ,_bed .PdfObject .String ());
};return _cdd ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bab .PdfObject ;Sy _bab .PdfObject ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bab .PdfObject ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bgfc *PdfFieldButton )ToPdfObject ()_bab .PdfObject {_bgfc .PdfField .ToPdfObject ();_abfd :=_bgfc ._fced ;_bdgc :=_abfd .PdfObject .(*_bab .PdfObjectDictionary );_bdgc .Set ("\u0046\u0054",_bab .MakeName ("\u0042\u0074\u006e"));if _bgfc .Opt !=nil {_bdgc .Set ("\u004f\u0070\u0074",_bgfc .Opt );
};return _abfd ;};func (_egaae *LTV )getOCSPs (_cbbf []*_ef .Certificate ,_eggbe map[string ]*_ef .Certificate )([][]byte ,error ){_ffgef :=make ([][]byte ,0,len (_cbbf ));for _ ,_deabg :=range _cbbf {for _ ,_acdga :=range _deabg .OCSPServer {if _egaae .CertClient .IsCA (_deabg ){continue ;
};_aebfa ,_cgegd :=_eggbe [_deabg .Issuer .CommonName ];if !_cgegd {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_gaaag ,_deaag :=_egaae .OCSPClient .MakeRequest (_acdga ,_deabg ,_aebfa );if _deaag !=nil {_cgb .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_deaag );
continue ;};_ffgef =append (_ffgef ,_gaaag );};};return _ffgef ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_ebagd int ,_cdbec *PdfPage )error ;

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bab .PdfObject ;NewWindow _bab .PdfObject ;T _bab .PdfObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bab .PdfObject ;LE _bab .PdfObject ;BS _bab .PdfObject ;IC _bab .PdfObject ;BE _bab .PdfObject ;IT _bab .PdfObject ;Measure _bab .PdfObject ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_faadb *XObjectImage )GetContainingPdfObject ()_bab .PdfObject {return _faadb ._dbfaf };

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bab .PdfObject ;ColorSpace _bab .PdfObject ;Pattern _bab .PdfObject ;Shading _bab .PdfObject ;XObject _bab .PdfObject ;Font _bab .PdfObject ;ProcSet _bab .PdfObject ;Properties _bab .PdfObject ;_bdcac *_bab .PdfObjectDictionary ;
_aegbcg *PdfPageResourcesColorspaces ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bab .PdfObject ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_faddg *PdfPageResources )ToPdfObject ()_bab .PdfObject {_cdbgc :=_faddg ._bdcac ;_cdbgc .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_faddg .ExtGState );if _faddg ._aegbcg !=nil {_faddg .ColorSpace =_faddg ._aegbcg .ToPdfObject ();
};_cdbgc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_faddg .ColorSpace );_cdbgc .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_faddg .Pattern );_cdbgc .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_faddg .Shading );
_cdbgc .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_faddg .XObject );_cdbgc .SetIfNotNil ("\u0046\u006f\u006e\u0074",_faddg .Font );_cdbgc .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_faddg .ProcSet );_cdbgc .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_faddg .Properties );
return _cdbgc ;};const (_fbgdf =0x00001;_accb =0x00002;_agfbge =0x00004;_abdfb =0x00008;_adbg =0x00020;_acae =0x00040;_acbec =0x10000;_cbcgd =0x20000;_bdfeb =0x40000;);

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bfbga []byte ;_gbdda []uint32 ;_bbaag *_bab .PdfObjectStream ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_aedg *Outline )Insert (index uint ,item *OutlineItem ){_gcfda :=uint (len (_aedg .Entries ));if index > _gcfda {index =_gcfda ;};_aedg .Entries =append (_aedg .Entries [:index ],append ([]*OutlineItem {item },_aedg .Entries [index :]...)...);};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bfaa *PdfFont )CharcodesToStrings (charcodes []_ea .CharCode )([]string ,int ,int ){_bfdbdb :=_bfaa .baseFields ();_dgfb :=make ([]string ,0,len (charcodes ));_acdb :=0;_gagf :=_bfaa .Encoder ();if _gagf !=nil {switch _fgfdb :=_gagf .(type ){case _ea .SimpleEncoder :_gdcbd :=_fgfdb .BaseName ();
if _ ,_cddbb :=_edae [_gdcbd ];_cddbb {for _ ,_bfed :=range charcodes {if _feeec ,_agge :=_gagf .CharcodeToRune (_bfed );_agge {_dgfb =append (_dgfb ,string (_feeec ));}else {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bfed ,charcodes ,_bfdbdb .isCIDFont (),_bfaa ,_gagf );
_acdb ++;_dgfb =append (_dgfb ,_fd .MissingCodeString );};};return _dgfb ,len (_dgfb ),_acdb ;};};};for _ ,_cabfc :=range charcodes {if _bfdbdb ._cfdd !=nil {if _eceg ,_ddfb :=_bfdbdb ._cfdd .CharcodeToUnicode (_fd .CharCode (_cabfc ));_ddfb {_dgfb =append (_dgfb ,_eceg );
continue ;};};if _gagf !=nil {if _fafb ,_gegbe :=_gagf .CharcodeToRune (_cabfc );_gegbe {_dgfb =append (_dgfb ,string (_fafb ));continue ;};};_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_cabfc ,charcodes ,_bfdbdb .isCIDFont (),_bfaa ,_gagf );
_acdb ++;_dgfb =append (_dgfb ,_fd .MissingCodeString );};if _acdb !=0{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_acdb ,_bfaa );
};return _dgfb ,len (_dgfb ),_acdb ;};func _fcge (_bdfc []byte )([]byte ,error ){_aeaaac :=_bb .New ();if _ ,_fegae :=_ad .Copy (_aeaaac ,_bcb .NewReader (_bdfc ));_fegae !=nil {return nil ,_fegae ;};return _aeaaac .Sum (nil ),nil ;};func _cagee (_accg string )(string ,error ){var _badfd _bcb .Buffer ;
_badfd .WriteString (_accg );_fdfea :=make ([]byte ,8+16);_adgegg :=_f .Now ().UTC ().UnixNano ();_a .BigEndian .PutUint64 (_fdfea ,uint64 (_adgegg ));_ ,_abfbb :=_ag .Read (_fdfea [8:]);if _abfbb !=nil {return "",_abfbb ;};_badfd .WriteString (_bc .EncodeToString (_fdfea ));
return _badfd .String (),nil ;};func (_acgg *PdfReader )newPdfOutlineItemFromIndirectObject (_gggf *_bab .PdfIndirectObject )(*PdfOutlineItem ,error ){_aadf ,_cfcec :=_gggf .PdfObject .(*_bab .PdfObjectDictionary );if !_cfcec {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ceeg :=NewPdfOutlineItem ();_cdabe :=_aadf .Get ("\u0054\u0069\u0074l\u0065");if _cdabe ==nil {return nil ,_d .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gacdb ,_cgddg :=_bab .GetString (_cdabe );if !_cgddg {return nil ,_d .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_cdabe );};_ceeg .Title =_gacdb ;if _fgba :=_aadf .Get ("\u0043\u006f\u0075n\u0074");
_fgba !=nil {_aggea ,_fcdgf :=_fgba .(*_bab .PdfObjectInteger );if !_fcdgf {return nil ,_d .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fgba );};_dafeg :=int64 (*_aggea );
_ceeg .Count =&_dafeg ;};if _cffb :=_aadf .Get ("\u0044\u0065\u0073\u0074");_cffb !=nil {_ceeg .Dest =_bab .ResolveReference (_cffb );if !_acgg ._geegb {_cgabf :=_acgg .traverseObjectData (_ceeg .Dest );if _cgabf !=nil {return nil ,_cgabf ;};};};if _gcfec :=_aadf .Get ("\u0041");
_gcfec !=nil {_ceeg .A =_bab .ResolveReference (_gcfec );if !_acgg ._geegb {_aeffc :=_acgg .traverseObjectData (_ceeg .A );if _aeffc !=nil {return nil ,_aeffc ;};};};if _eggbf :=_aadf .Get ("\u0053\u0045");_eggbf !=nil {_ceeg .SE =nil ;};if _gfgb :=_aadf .Get ("\u0043");
_gfgb !=nil {_ceeg .C =_bab .ResolveReference (_gfgb );};if _ffdd :=_aadf .Get ("\u0046");_ffdd !=nil {_ceeg .F =_bab .ResolveReference (_ffdd );};return _ceeg ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fdbd *PdfPageResources )SetXObjectImageByName (keyName _bab .PdfObjectName ,ximg *XObjectImage )error {_gfaef :=ximg .ToPdfObject ().(*_bab .PdfObjectStream );_ddef :=_fdbd .SetXObjectByName (keyName ,_gfaef );return _ddef ;};func (_aec *PdfReader )newPdfActionSetOCGStateFromDict (_gdd *_bab .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gdd .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gdd .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_ddcg :=&XObjectImage {};_cecb :=&_bab .PdfObjectStream {};_cecb .PdfObjectDictionary =_bab .MakeDict ();_ddcg ._dbfaf =_cecb ;return _ddcg ;};

// Add appends a top level outline item to the outline.
func (_dbdfg *Outline )Add (item *OutlineItem ){_dbdfg .Entries =append (_dbdfg .Entries ,item )};func _cbfdd (_bbfdef *PdfPage ){_abcad :=_cbf .GetLicenseKey ();if _abcad !=nil &&_abcad .IsLicensed (){return ;};_bfdcf :=_bab .PdfObjectName ("\u0055\u0046\u0031");
if !_bbfdef .Resources .HasFontByName (_bfdcf ){_bbfdef .Resources .SetFontByName (_bfdcf ,DefaultFont ().ToPdfObject ());};var _dbcgg []string ;_dbcgg =append (_dbcgg ,"\u0071");_dbcgg =append (_dbcgg ,"\u0042\u0054");_dbcgg =append (_dbcgg ,_d .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bfdcf .String ()));
_dbcgg =append (_dbcgg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dbcgg =append (_dbcgg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_gcbbbe :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dbcgg =append (_dbcgg ,_d .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_gcbbbe ));_dbcgg =append (_dbcgg ,"\u0045\u0054");_dbcgg =append (_dbcgg ,"\u0051");_adgc :=_bf .Join (_dbcgg ,"\u000a");_bbfdef .AddContentStreamByString (_adgc );_bbfdef .ToPdfObject ();
};func _afbc (_ddggbe _bab .PdfObject )(*PdfColorspaceICCBased ,error ){_faace :=&PdfColorspaceICCBased {};if _ebaf ,_bbgbc :=_ddggbe .(*_bab .PdfIndirectObject );_bbgbc {_faace ._adbf =_ebaf ;};_ddggbe =_bab .TraceToDirectObject (_ddggbe );_eade ,_bbdf :=_ddggbe .(*_bab .PdfObjectArray );
if !_bbdf {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eade .Len ()!=2{return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_ddggbe =_bab .TraceToDirectObject (_eade .Get (0));_fbfg ,_bbdf :=_ddggbe .(*_bab .PdfObjectName );if !_bbdf {return nil ,_d .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fbfg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_d .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ddggbe =_eade .Get (1);
_cedda ,_bbdf :=_bab .GetStream (_ddggbe );if !_bbdf {_cgb .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_ddggbe );
return nil ,_d .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gbebf :=_cedda .PdfObjectDictionary ;_gacf ,_bbdf :=_gbebf .Get ("\u004e").(*_bab .PdfObjectInteger );
if !_bbdf {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_gacf !=1&&*_gacf !=3&&*_gacf !=4{return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_faace .N =int (*_gacf );if _eadbe :=_gbebf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_eadbe !=nil {_dcac ,_aeef :=NewPdfColorspaceFromPdfObject (_eadbe );if _aeef !=nil {return nil ,_aeef ;};_faace .Alternate =_dcac ;};if _bagga :=_gbebf .Get ("\u0052\u0061\u006eg\u0065");
_bagga !=nil {_bagga =_bab .TraceToDirectObject (_bagga );_bggd ,_eecg :=_bagga .(*_bab .PdfObjectArray );if !_eecg {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bggd .Len ()!=2*_faace .N {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_acgd ,_dgbd :=_bggd .GetAsFloat64Slice ();if _dgbd !=nil {return nil ,_dgbd ;};_faace .Range =_acgd ;}else {_faace .Range =make ([]float64 ,2*_faace .N );for _edbdg :=0;_edbdg < _faace .N ;_edbdg ++{_faace .Range [2*_edbdg ]=0.0;_faace .Range [2*_edbdg +1]=1.0;
};};if _gdaa :=_gbebf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gdaa !=nil {_gadb ,_efba :=_gdaa .(*_bab .PdfObjectStream );if !_efba {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_faace .Metadata =_gadb ;};_gdag ,_gfagb :=_bab .DecodeStream (_cedda );if _gfagb !=nil {return nil ,_gfagb ;};_faace .Data =_gdag ;_faace ._eafde =_cedda ;return _faace ,nil ;};func (_dbcc *PdfReader )newPdfAnnotationWatermarkFromDict (_gfab *_bab .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_fgac :=PdfAnnotationWatermark {};
_fgac .FixedPrint =_gfab .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_fgac ,nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bab .StreamEncoder ;FormType _bab .PdfObject ;BBox _bab .PdfObject ;Matrix _bab .PdfObject ;Resources *PdfPageResources ;Group _bab .PdfObject ;Ref _bab .PdfObject ;MetaData _bab .PdfObject ;PieceInfo _bab .PdfObject ;LastModified _bab .PdfObject ;
StructParent _bab .PdfObject ;StructParents _bab .PdfObject ;OPI _bab .PdfObject ;OC _bab .PdfObject ;Name _bab .PdfObject ;

// Stream data.
Stream []byte ;_gadgbe *_bab .PdfObjectStream ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_eggg *PdfPageResources )SetShadingByName (keyName _bab .PdfObjectName ,shadingObj _bab .PdfObject )error {if _eggg .Shading ==nil {_eggg .Shading =_bab .MakeDict ();};_eegd ,_cgdba :=_eggg .Shading .(*_bab .PdfObjectDictionary );if !_cgdba {return _bab .ErrTypeError ;
};_eegd .Set (keyName ,shadingObj );return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_abddb *PdfFieldChoice )ToPdfObject ()_bab .PdfObject {_abddb .PdfField .ToPdfObject ();_eaef :=_abddb ._fced ;_fcdg :=_eaef .PdfObject .(*_bab .PdfObjectDictionary );_fcdg .Set ("\u0046\u0054",_bab .MakeName ("\u0043\u0068"));if _abddb .Opt !=nil {_fcdg .Set ("\u004f\u0070\u0074",_abddb .Opt );
};if _abddb .TI !=nil {_fcdg .Set ("\u0054\u0049",_abddb .TI );};if _abddb .I !=nil {_fcdg .Set ("\u0049",_abddb .I );};return _eaef ;};

// SetName sets the `Name` field of the signature.
func (_affca *PdfSignature )SetName (name string ){_affca .Name =_bab .MakeString (name )};func (_geed *PdfReader )newPdfActionImportDataFromDict (_aege *_bab .PdfObjectDictionary )(*PdfActionImportData ,error ){_dec ,_bcbb :=_eec (_aege .Get ("\u0046"));
if _bcbb !=nil {return nil ,_bcbb ;};return &PdfActionImportData {F :_dec },nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_bdf :=&PdfAppender {_ecce :reader ._bcfc ,Reader :reader ,_dega :reader ._fdcebg ,_gced :reader ._eccf };_gedc ,_dbe :=_bdf ._ecce .Seek (0,_ad .SeekEnd );if _dbe !=nil {return nil ,_dbe ;
};_bdf ._ccdd =_gedc ;if _ ,_dbe =_bdf ._ecce .Seek (0,_ad .SeekStart );_dbe !=nil {return nil ,_dbe ;};_bdf ._fgdb ,_dbe =NewPdfReader (_bdf ._ecce );if _dbe !=nil {return nil ,_dbe ;};for _ ,_age :=range _bdf .Reader .GetObjectNums (){if _bdf ._egaf < _age {_bdf ._egaf =_age ;
};};_bdf ._defd =_bdf ._dega .GetXrefTable ();_bdf ._gcb =_bdf ._dega .GetXrefOffset ();_bdf ._gdad =append (_bdf ._gdad ,_bdf ._fgdb .PageList ...);_bdf ._gegb =make (map[_bab .PdfObject ]struct{});_bdf ._fbeac =make (map[_bab .PdfObject ]int64 );_bdf ._cbace =make (map[_bab .PdfObject ]struct{});
_bdf ._dbff =_bdf ._fgdb .AcroForm ;_bdf ._edbg =_bdf ._fgdb .DSS ;return _bdf ,nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_ebbdb int ,_dcaef *PdfPage );

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gabg *PdfReader )PageFromIndirectObject (ind *_bab .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gabg .PageList )!=len (_gabg ._aedab ){return nil ,0,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _efegb ,_cfaga :=range _gabg ._aedab {if _cfaga ==ind {return _gabg .PageList [_efegb ],_efegb +1,nil ;};};return nil ,0,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ggf :=NewPdfAnnotation ();_deee :=&PdfAnnotationWatermark {};_deee .PdfAnnotation =_ggf ;_ggf .SetContext (_deee );return _deee ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ecg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gcedb ,_cfgf :=color .(*PdfColorDeviceGray );if !_cfgf {_cgb .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gcedb ),float64 (*_gcedb ),float64 (*_gcedb )),nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bab .PdfObject ;BS _bab .PdfObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ccce *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cede ,_fgfc :=_bab .GetNumbersAsFloat (objects );
if _fgfc !=nil {return nil ,_fgfc ;};return _ccce .ColorFromFloats (_cede );};

// Subtype returns the font's "Subtype" field.
func (_abgc *PdfFont )Subtype ()string {_cegb :=_abgc .baseFields ()._egbf ;if _aaaa ,_abef :=_abgc ._dfbfg .(*pdfFontType0 );_abef {_cegb =_cegb +"\u003a"+_aaaa .DescendantFont .Subtype ();};return _cegb ;};

// ToPdfObject implements interface PdfModel.
func (_cgac *PdfActionJavaScript )ToPdfObject ()_bab .PdfObject {_cgac .PdfAction .ToPdfObject ();_ceg :=_cgac ._ec ;_caa :=_ceg .PdfObject .(*_bab .PdfObjectDictionary );_caa .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeJavaScript )));_caa .SetIfNotNil ("\u004a\u0053",_cgac .JS );
return _ceg ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bab .PdfObject ;AN _bab .PdfObject ;OP _bab .PdfObject ;JS _bab .PdfObject ;};func (_eebgc *PdfReader )lookupPageByObject (_feedc _bab .PdfObject )(*PdfPage ,error ){return nil ,_cg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// GetOutlineTree returns the outline tree.
func (_ccbae *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _ccbae ._effeg };

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fadbe *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fadbe ._gaaea .(*PdfTilingPattern );};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_eadea *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ea .CharCode )(_faaab []rune ,_cgfa ,_egffb int ){_bdfg ,_cgfa ,_egffb :=_eadea .CharcodesToStrings (charcodes );return []rune (_bf .Join (_bdfg ,"")),_cgfa ,_egffb ;};func _eacba (_cgab *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cgab }};
func (_fcb *PdfReader )newPdfAnnotation3DFromDict (_afd *_bab .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_edac :=PdfAnnotation3D {};_edac .T3DD =_afd .Get ("\u0033\u0044\u0044");_edac .T3DV =_afd .Get ("\u0033\u0044\u0056");_edac .T3DA =_afd .Get ("\u0033\u0044\u0041");
_edac .T3DI =_afd .Get ("\u0033\u0044\u0049");_edac .T3DB =_afd .Get ("\u0033\u0044\u0042");return &_edac ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_gdeg *PdfFieldButton )IsCheckbox ()bool {return _gdeg .GetType ()==ButtonTypeCheckbox };type modelManager struct{_dfgfb map[PdfModel ]_bab .PdfObject ;_bcga map[_bab .PdfObject ]PdfModel ;};

// SetReason sets the `Reason` field of the signature.
func (_cfbf *PdfSignature )SetReason (reason string ){_cfbf .Reason =_bab .MakeString (reason )};

// ToPdfObject implements interface PdfModel.
func (_ceb *PdfActionTrans )ToPdfObject ()_bab .PdfObject {_ceb .PdfAction .ToPdfObject ();_dgad :=_ceb ._ec ;_edg :=_dgad .PdfObject .(*_bab .PdfObjectDictionary );_edg .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeTrans )));_edg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ceb .Trans );
return _dgad ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fcda DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_ggfgg *PdfAcroForm )filteredFields (_aefa FieldFilterFunc ,_bdega bool )[]*PdfField {if _ggfgg ==nil {return nil ;};return _cbde (_ggfgg .Fields ,_aefa ,_bdega );
};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fadege *PdfReader )GetIndirectObjectByNumber (number int )(_bab .PdfObject ,error ){_deaed ,_gdgge :=_fadege ._fdcebg .LookupByNumber (number );return _deaed ,_gdgge ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bab .PdfObject ;Popup *PdfAnnotationPopup ;CA _bab .PdfObject ;RC _bab .PdfObject ;CreationDate _bab .PdfObject ;IRT _bab .PdfObject ;Subj _bab .PdfObject ;RT _bab .PdfObject ;IT _bab .PdfObject ;ExData _bab .PdfObject ;
};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bab .PdfObjectInteger ;BitsPerComponent *_bab .PdfObjectInteger ;VerticesPerRow *_bab .PdfObjectInteger ;Decode *_bab .PdfObjectArray ;Function []PdfFunction ;};

// C returns the value of the cyan component of the color.
func (_daeac *PdfColorDeviceCMYK )C ()float64 {return _daeac [0]};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dcbf :=NewPdfAnnotation ();_cbad :=&PdfAnnotationStamp {};_cbad .PdfAnnotation =_dcbf ;_cbad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcbf .SetContext (_cbad );return _cbad ;};

// WriteString outputs the object as it is to be written to file.
func (_aagcd *pdfSignDictionary )WriteString ()string {_aagcd ._agced =0;_aagcd ._adaeb =0;_aagcd ._ecacc =0;_aagcd ._aabge =0;_baagd :=_bcb .NewBuffer (nil );_baagd .WriteString ("\u003c\u003c");for _ ,_gadgb :=range _aagcd .Keys (){_dgee :=_aagcd .Get (_gadgb );
switch _gadgb {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_baagd .WriteString (_gadgb .WriteString ());_baagd .WriteString ("\u0020");_aagcd ._ecacc =_baagd .Len ();_baagd .WriteString (_dgee .WriteString ());_baagd .WriteString ("\u0020");_aagcd ._aabge =_baagd .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_baagd .WriteString (_gadgb .WriteString ());_baagd .WriteString ("\u0020");_aagcd ._agced =_baagd .Len ();_baagd .WriteString (_dgee .WriteString ());_baagd .WriteString ("\u0020");_aagcd ._adaeb =_baagd .Len ()-1;
default:_baagd .WriteString (_gadgb .WriteString ());_baagd .WriteString ("\u0020");_baagd .WriteString (_dgee .WriteString ());};};_baagd .WriteString ("\u003e\u003e");return _baagd .String ();};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gead *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _gead .fill (provider ,appGen );};func (_edgf *PdfReader )newPdfAnnotationPolyLineFromDict (_gbfa *_bab .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_egae :=PdfAnnotationPolyLine {};
_egac ,_dad :=_edgf .newPdfAnnotationMarkupFromDict (_gbfa );if _dad !=nil {return nil ,_dad ;};_egae .PdfAnnotationMarkup =_egac ;_egae .Vertices =_gbfa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_egae .LE =_gbfa .Get ("\u004c\u0045");_egae .BS =_gbfa .Get ("\u0042\u0053");
_egae .IC =_gbfa .Get ("\u0049\u0043");_egae .BE =_gbfa .Get ("\u0042\u0045");_egae .IT =_gbfa .Get ("\u0049\u0054");_egae .Measure =_gbfa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_egae ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_agdd *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _eaca []_ea .TextEncoder ;var _dbbe _ea .CMapEncoder ;if _dcec :=_agdd .baseFields ()._cfdd ;_dcec !=nil {_dbbe =_ea .NewCMapEncoder ("",nil ,_dcec );};_gagdg :=_agdd .Encoder ();
if _gagdg !=nil {switch _facb :=_gagdg .(type ){case _ea .SimpleEncoder :_gebc :=_facb .BaseName ();if _ ,_eced :=_edae [_gebc ];_eced {_eaca =append (_eaca ,_gagdg );};};};if len (_eaca )==0{if _agdd .baseFields ()._cfdd !=nil {_eaca =append (_eaca ,_dbbe );
};if _gagdg !=nil {_eaca =append (_eaca ,_gagdg );};};var _ebgff _bcb .Buffer ;var _cdccd int ;for _ ,_cded :=range data {var _ecga bool ;for _ ,_eeca :=range _eaca {if _affdf :=_eeca .Encode (string (_cded ));len (_affdf )> 0{_ebgff .Write (_affdf );_ecga =true ;
break ;};};if !_ecga {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cded );
_cdccd ++;};};if _cdccd !=0{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_cdccd ,_agdd ,_eaca );
};return _ebgff .Bytes (),_cdccd ;};func _afffc (_dceff *XObjectImage )error {if _dceff .SMask ==nil {return nil ;};_gggdag ,_defa :=_dceff .SMask .(*_bab .PdfObjectStream );if !_defa {_cgb .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bab .ErrTypeError ;};_afeac :=_gggdag .PdfObjectDictionary ;_dafbf :=_afeac .Get ("\u004d\u0061\u0074t\u0065");if _dafbf ==nil {return nil ;};_bcefe ,_gggfa :=_aegdg (_dafbf .(*_bab .PdfObjectArray ));if _gggfa !=nil {return _gggfa ;};_ggcdcf :=_bab .MakeArrayFromFloats ([]float64 {_bcefe });
_afeac .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ggcdcf );return nil ;};func (_dbbca *PdfSignature )extractChainFromPKCS7 ()([]*_ef .Certificate ,error ){_ecbbe ,_gcacb :=_adg .Parse (_dbbca .Contents .Bytes ());if _gcacb !=nil {return nil ,_gcacb ;};
return _ecbbe .Certificates ,nil ;};

// Encoder returns the font's text encoder.
func (_gadba *pdfFontSimple )Encoder ()_ea .TextEncoder {if _gadba ._agbga !=nil {return _gadba ._agbga ;};if _gadba ._baffg !=nil {return _gadba ._baffg ;};_ceaf ,_ :=_ea .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _ceaf ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bbbef *Image )SetSamples (samples []uint32 ){if _bbbef .BitsPerComponent < 8{samples =_bbbef .samplesAddPadding (samples );};_aaae :=_ee .ResampleUint32 (samples ,int (_bbbef .BitsPerComponent ),8);_degcd :=make ([]byte ,len (_aaae ));for _ffdfb ,_fccgd :=range _aaae {_degcd [_ffdfb ]=byte (_fccgd );
};_bbbef .Data =_degcd ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_aaga PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bab .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_egca []_bab .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_adag []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfgc *PdfColorspaceSpecialSeparation )ToPdfObject ()_bab .PdfObject {_fgef :=_bab .MakeArray (_bab .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fgef .Append (_cfgc .ColorantName );_fgef .Append (_cfgc .AlternateSpace .ToPdfObject ());
_fgef .Append (_cfgc .TintTransform .ToPdfObject ());if _cfgc ._ffga !=nil {_cfgc ._ffga .PdfObject =_fgef ;return _cfgc ._ffga ;};return _fgef ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_bfdd :=&PdfColorspaceDeviceN {};return _bfdd };func (_eeef *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dagb []*PdfFieldSignature ;for _ ,_afaed :=range _eeef .AllFields (){switch _fgcc :=_afaed .GetContext ().(type ){case *PdfFieldSignature :_ecfdd :=_fgcc ;
_dagb =append (_dagb ,_ecfdd );};};return _dagb ;};func _gegfb (_efac *_bab .PdfObjectDictionary ,_dfbab *fontCommon )(*pdfCIDFontType0 ,error ){if _dfbab ._egbf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_cgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dfbab );
return nil ,_bab .ErrRangeError ;};_ddbcf :=_eacba (_dfbab );_fada ,_daad :=_bab .GetDict (_efac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_daad {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dfbab );
return nil ,ErrRequiredAttributeMissing ;};_ddbcf .CIDSystemInfo =_fada ;_ddbcf .DW =_efac .Get ("\u0044\u0057");_ddbcf .W =_efac .Get ("\u0057");_ddbcf .DW2 =_efac .Get ("\u0044\u0057\u0032");_ddbcf .W2 =_efac .Get ("\u0057\u0032");_ddbcf ._agacd =1000.0;
if _cgeaf ,_beef :=_bab .GetNumberAsFloat (_ddbcf .DW );_beef ==nil {_ddbcf ._agacd =_cgeaf ;};_afba ,_geec :=_gagac (_ddbcf .W );if _geec !=nil {return nil ,_geec ;};if _afba ==nil {_afba =map[_ea .CharCode ]float64 {};};_ddbcf ._defdb =_afba ;return _ddbcf ,nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ddggb *PdfColorspaceLab )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acbf ,_acbfg :=_bab .GetNumbersAsFloat (objects );
if _acbfg !=nil {return nil ,_acbfg ;};return _ddggb .ColorFromFloats (_acbf );};func (_fdeg *DSS )add (_adcb *[]*_bab .PdfObjectStream ,_aabgc map[string ]*_bab .PdfObjectStream ,_gabbb [][]byte )([]*_bab .PdfObjectStream ,error ){_bddee :=make ([]*_bab .PdfObjectStream ,0,len (_gabbb ));
for _ ,_fbbe :=range _gabbb {_eaag ,_cbdc :=_fcge (_fbbe );if _cbdc !=nil {return nil ,_cbdc ;};_bdbg ,_ccgd :=_aabgc [string (_eaag )];if !_ccgd {_bdbg ,_cbdc =_bab .MakeStream (_fbbe ,_bab .NewRawEncoder ());if _cbdc !=nil {return nil ,_cbdc ;};_aabgc [string (_eaag )]=_bdbg ;
*_adcb =append (*_adcb ,_bdbg );};_bddee =append (_bddee ,_bdbg );};return _bddee ,nil ;};

// SetContext sets the sub action (context).
func (_acd *PdfAction )SetContext (ctx PdfModel ){_acd ._dcb =ctx };

// AddWatermarkImage adds a watermark to the page.
func (_aaggg *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ccbgf ,_degd :=_aaggg .GetMediaBox ();if _degd !=nil {return _degd ;};_gaecc :=_ccbgf .Urx -_ccbgf .Llx ;_fdfef :=_ccbgf .Ury -_ccbgf .Lly ;_egcd :=float64 (*ximg .Width );
_caba :=(_gaecc -_egcd )/2;if opt .FitToWidth {_egcd =_gaecc ;_caba =0;};_gdbc :=_fdfef ;_bdfb :=float64 (0);if opt .PreserveAspectRatio {_gdbc =_egcd *float64 (*ximg .Height )/float64 (*ximg .Width );_bdfb =(_fdfef -_gdbc )/2;};if _aaggg .Resources ==nil {_aaggg .Resources =NewPdfPageResources ();
};_ddggf :=0;_cgfd :=_bab .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_ddggf ));for _aaggg .Resources .HasXObjectByName (_cgfd ){_ddggf ++;_cgfd =_bab .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_ddggf ));};_degd =_aaggg .AddImageResource (_cgfd ,ximg );
if _degd !=nil {return _degd ;};_ddggf =0;_ffab :=_bab .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_ddggf ));for _aaggg .HasExtGState (_ffab ){_ddggf ++;_ffab =_bab .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_ddggf ));};_ddec :=_bab .MakeDict ();
_ddec .Set ("\u0042\u004d",_bab .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ddec .Set ("\u0043\u0041",_bab .MakeFloat (opt .Alpha ));_ddec .Set ("\u0063\u0061",_bab .MakeFloat (opt .Alpha ));_degd =_aaggg .AddExtGState (_ffab ,_ddec );if _degd !=nil {return _degd ;
};_aebe :=_d .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ffab ,_egcd ,_gdbc ,_caba ,_bdfb ,_cgfd );
_aaggg .AddContentStreamByString (_aebe );return nil ;};

// String returns a string that describes `base`.
func (_cegcf fontCommon )String ()string {return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_cegcf .coreString ());};

// ToPdfObject returns a stream object.
func (_gffea *XObjectForm )ToPdfObject ()_bab .PdfObject {_gbge :=_gffea ._gadgbe ;_eebdc :=_gbge .PdfObjectDictionary ;if _gffea .Filter !=nil {_eebdc =_gffea .Filter .MakeStreamDict ();_gbge .PdfObjectDictionary =_eebdc ;};_eebdc .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_eebdc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0046\u006f\u0072\u006d"));_eebdc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gffea .FormType );_eebdc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gffea .BBox );
_eebdc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gffea .Matrix );if _gffea .Resources !=nil {_eebdc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gffea .Resources .ToPdfObject ());};_eebdc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gffea .Group );
_eebdc .SetIfNotNil ("\u0052\u0065\u0066",_gffea .Ref );_eebdc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gffea .MetaData );_eebdc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gffea .PieceInfo );_eebdc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gffea .LastModified );
_eebdc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gffea .StructParent );_eebdc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gffea .StructParents );_eebdc .SetIfNotNil ("\u004f\u0050\u0049",_gffea .OPI );
_eebdc .SetIfNotNil ("\u004f\u0043",_gffea .OC );_eebdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gffea .Name );_eebdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bab .MakeInteger (int64 (len (_gffea .Stream ))));_gbge .Stream =_gffea .Stream ;return _gbge ;
};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ddabf *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_bcfb :=RC4_128bit ;if options !=nil {_bcfb =options .Algorithm ;};_ebaaa :=_bcbf .PermOwner ;if options !=nil {_ebaaa =options .Permissions ;};var _adfba _gf .Filter ;
switch _bcfb {case RC4_128bit :_adfba =_gf .NewFilterV2 (16);case AES_128bit :_adfba =_gf .NewFilterAESV2 ();case AES_256bit :_adfba =_gf .NewFilterAESV3 ();default:return _d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_dcgcb ,_bcfdee ,_ggcce :=_bab .PdfCryptNewEncrypt (_adfba ,userPass ,ownerPass ,_ebaaa );if _ggcce !=nil {return _ggcce ;};_ddabf ._ggfbe =_dcgcb ;if _bcfdee .Major !=0{_ddabf .SetVersion (_bcfdee .Major ,_bcfdee .Minor );};_ddabf ._befge =_bcfdee .Encrypt ;
_ddabf ._bcede =_bab .MakeArray (_bab .MakeHexString (_bcfdee .ID0 ),_bab .MakeHexString (_bcfdee .ID1 ));_fgfeb :=_bab .MakeIndirectObject (_bcfdee .Encrypt );_ddabf ._gdgbe =_fgfeb ;_ddabf .addObject (_fgfeb );return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_dfec *PdfFunctionType2 )ToPdfObject ()_bab .PdfObject {_geagff :=_bab .MakeDict ();_geagff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bab .MakeInteger (2));_fadeg :=&_bab .PdfObjectArray {};for _ ,_addg :=range _dfec .Domain {_fadeg .Append (_bab .MakeFloat (_addg ));
};_geagff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fadeg );if _dfec .Range !=nil {_fgaaa :=&_bab .PdfObjectArray {};for _ ,_eeaa :=range _dfec .Range {_fgaaa .Append (_bab .MakeFloat (_eeaa ));};_geagff .Set ("\u0052\u0061\u006eg\u0065",_fgaaa );};
if _dfec .C0 !=nil {_bgaf :=&_bab .PdfObjectArray {};for _ ,_fafcg :=range _dfec .C0 {_bgaf .Append (_bab .MakeFloat (_fafcg ));};_geagff .Set ("\u0043\u0030",_bgaf );};if _dfec .C1 !=nil {_dgfe :=&_bab .PdfObjectArray {};for _ ,_bbcaf :=range _dfec .C1 {_dgfe .Append (_bab .MakeFloat (_bbcaf ));
};_geagff .Set ("\u0043\u0031",_dgfe );};_geagff .Set ("\u004e",_bab .MakeFloat (_dfec .N ));if _dfec ._efaa !=nil {_dfec ._efaa .PdfObject =_geagff ;return _dfec ._efaa ;};return _geagff ;};

// String returns a string representation of the field.
func (_ffbb *PdfField )String ()string {if _eacfa ,_ddebgd :=_ffbb .ToPdfObject ().(*_bab .PdfIndirectObject );_ddebgd {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ffbb ._fbbf ,_eacfa .PdfObject .String ());};return "";};func (_dcc *PdfReader )newPdfActionRenditionFromDict (_ddeb *_bab .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ddeb .Get ("\u0052"),AN :_ddeb .Get ("\u0041\u004e"),OP :_ddeb .Get ("\u004f\u0050"),JS :_ddeb .Get ("\u004a\u0053")},nil ;
};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_aggg *PdfColorspaceDeviceN )ToPdfObject ()_bab .PdfObject {_acfcb :=_bab .MakeArray (_bab .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_acfcb .Append (_aggg .ColorantNames );_acfcb .Append (_aggg .AlternateSpace .ToPdfObject ());_acfcb .Append (_aggg .TintTransform .ToPdfObject ());
if _aggg .Attributes !=nil {_acfcb .Append (_aggg .Attributes .ToPdfObject ());};if _aggg ._bccca !=nil {_aggg ._bccca .PdfObject =_acfcb ;return _aggg ._bccca ;};return _acfcb ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bab .PdfIndirectObject )*PdfOutlineItem {_aafeb :=PdfOutlineItem {};_aafeb ._agea =&_aafeb ;_aafeb .Title =_bab .MakeString (title );_ccdfc :=_bab .MakeArray ();_ccdfc .Append (page );_ccdfc .Append (_bab .MakeName ("\u0046\u0069\u0074"));
_aafeb .Dest =_ccdfc ;return &_aafeb ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_begff *PdfPage )ToPdfObject ()_bab .PdfObject {_fgaf :=_begff ._efdec ;_begff .GetPageDict ();return _fgaf ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_cgffa OutlineDest )ToPdfObject ()_bab .PdfObject {if (_cgffa .PageObj ==nil &&_cgffa .Page < 0)||_cgffa .Mode ==""{return _bab .MakeNull ();};_bfdfca :=_bab .MakeArray ();if _cgffa .PageObj !=nil {_bfdfca .Append (_cgffa .PageObj );}else {_bfdfca .Append (_bab .MakeInteger (_cgffa .Page ));
};_bfdfca .Append (_bab .MakeName (_cgffa .Mode ));switch _cgffa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_bfdfca .Append (_bab .MakeFloat (_cgffa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_bfdfca .Append (_bab .MakeFloat (_cgffa .X ));
case "\u0058\u0059\u005a":_bfdfca .Append (_bab .MakeFloat (_cgffa .X ));_bfdfca .Append (_bab .MakeFloat (_cgffa .Y ));_bfdfca .Append (_bab .MakeFloat (_cgffa .Zoom ));default:_bfdfca .Set (1,_bab .MakeName ("\u0046\u0069\u0074"));};return _bfdfca ;};


// SetFontByName sets the font specified by keyName to the given object.
func (_gfagf *PdfPageResources )SetFontByName (keyName _bab .PdfObjectName ,obj _bab .PdfObject )error {if _gfagf .Font ==nil {_gfagf .Font =_bab .MakeDict ();};_bfada ,_eebc :=_bab .TraceToDirectObject (_gfagf .Font ).(*_bab .PdfObjectDictionary );if !_eebc {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bab .TraceToDirectObject (_gfagf .Font ));
return _bab .ErrTypeError ;};_bfada .Set (keyName ,obj );return nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// AddImageResource adds an image to the XObject resources.
func (_gggdd *PdfPage )AddImageResource (name _bab .PdfObjectName ,ximg *XObjectImage )error {var _gabcf *_bab .PdfObjectDictionary ;if _gggdd .Resources .XObject ==nil {_gabcf =_bab .MakeDict ();_gggdd .Resources .XObject =_gabcf ;}else {var _aebfg bool ;
_gabcf ,_aebfg =(_gggdd .Resources .XObject ).(*_bab .PdfObjectDictionary );if !_aebfg {return _cg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gabcf .Set (name ,ximg .ToPdfObject ());
return nil ;};func (_bbefc *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bbefc .fontCommon };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eegc *PdfShadingType7 )ToPdfObject ()_bab .PdfObject {_eegc .PdfShading .ToPdfObject ();_fgbgfc ,_befgbg :=_eegc .getShadingDict ();if _befgbg !=nil {_cgb .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eegc .BitsPerCoordinate !=nil {_fgbgfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eegc .BitsPerCoordinate );};if _eegc .BitsPerComponent !=nil {_fgbgfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eegc .BitsPerComponent );
};if _eegc .BitsPerFlag !=nil {_fgbgfc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_eegc .BitsPerFlag );};if _eegc .Decode !=nil {_fgbgfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eegc .Decode );};if _eegc .Function !=nil {if len (_eegc .Function )==1{_fgbgfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eegc .Function [0].ToPdfObject ());
}else {_cbefg :=_bab .MakeArray ();for _ ,_efea :=range _eegc .Function {_cbefg .Append (_efea .ToPdfObject ());};_fgbgfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbefg );};};return _eegc ._bfgd ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _f .Time ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gfdf *PdfOutline )ToPdfObject ()_bab .PdfObject {_ddcbd :=_gfdf ._aaffa ;_daeg :=_ddcbd .PdfObject .(*_bab .PdfObjectDictionary );_daeg .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _gfdf .First !=nil {_daeg .Set ("\u0046\u0069\u0072s\u0074",_gfdf .First .ToPdfObject ());
};if _gfdf .Last !=nil {_daeg .Set ("\u004c\u0061\u0073\u0074",_gfdf .Last .GetContext ().GetContainingPdfObject ());};if _gfdf .Parent !=nil {_daeg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfdf .Parent .GetContext ().GetContainingPdfObject ());};
if _gfdf .Count !=nil {_daeg .Set ("\u0043\u006f\u0075n\u0074",_bab .MakeInteger (*_gfdf .Count ));};return _ddcbd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gdef *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bab .PdfObject ;Movie _bab .PdfObject ;A _bab .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_geeg *PdfAnnotationLink )ToPdfObject ()_bab .PdfObject {_geeg .PdfAnnotation .ToPdfObject ();_fbb :=_geeg ._bcc ;_ddfa :=_fbb .PdfObject .(*_bab .PdfObjectDictionary );_ddfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u004c\u0069\u006e\u006b"));
if _geeg ._egb !=nil &&_geeg ._egb ._dcb !=nil {_ddfa .Set ("\u0041",_geeg ._egb ._dcb .ToPdfObject ());}else if _geeg .A !=nil {_ddfa .Set ("\u0041",_geeg .A );};_ddfa .SetIfNotNil ("\u0044\u0065\u0073\u0074",_geeg .Dest );_ddfa .SetIfNotNil ("\u0048",_geeg .H );
_ddfa .SetIfNotNil ("\u0050\u0041",_geeg .PA );_ddfa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_geeg .QuadPoints );_ddfa .SetIfNotNil ("\u0042\u0053",_geeg .BS );return _fbb ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gabc pdfFontType3 )GetRuneMetrics (r rune )(_cb .CharMetrics ,bool ){_aggd :=_gabc .Encoder ();if _aggd ==nil {_cgb .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_gabc );
return _cb .CharMetrics {},false ;};_gddab ,_bdgda :=_aggd .RuneToCharcode (r );if !_bdgda {if r !=' '{_cgb .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_gabc );
};return _cb .CharMetrics {},false ;};_bdgca ,_cebc :=_gabc .GetCharMetrics (_gddab );return _bdgca ,_cebc ;};func (_accf *PdfReader )newPdfActionResetFormFromDict (_ddb *_bab .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ddb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ddb .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_ffcc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_ffcc .N =N ;return _ffcc ,nil ;};func _cecd (_egaea *_bab .PdfObjectDictionary )bool {for _ ,_fddb :=range _egaea .Keys (){if _ ,_dgg :=_ddac [_fddb .String ()];_dgg {return true ;};};return false ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;
ButtonTypeRadio ButtonType =iota ;);

// ToPdfObject implements interface PdfModel.
func (_ce *PdfActionNamed )ToPdfObject ()_bab .PdfObject {_ce .PdfAction .ToPdfObject ();_abcf :=_ce ._ec ;_gab :=_abcf .PdfObject .(*_bab .PdfObjectDictionary );_gab .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeNamed )));_gab .SetIfNotNil ("\u004e",_ce .N );
return _abcf ;};

// ToInteger convert to an integer format.
func (_gfag *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_deabb :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_deabb *_gfag .R ()),uint32 (_deabb *_gfag .G ()),uint32 (_deabb *_gfag .B ())};};type pdfFont interface{_cb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bab .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func _fdgg (_afdf _bab .PdfObject )(*PdfColorspaceCalGray ,error ){_fadf :=NewPdfColorspaceCalGray ();if _edbb ,_egfgc :=_afdf .(*_bab .PdfIndirectObject );
_egfgc {_fadf ._gaa =_edbb ;};_afdf =_bab .TraceToDirectObject (_afdf );_aceff ,_gbfe :=_afdf .(*_bab .PdfObjectArray );if !_gbfe {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aceff .Len ()!=2{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_afdf =_bab .TraceToDirectObject (_aceff .Get (0));_gfge ,_gbfe :=_afdf .(*_bab .PdfObjectName );if !_gbfe {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_gfge !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_d .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_afdf =_bab .TraceToDirectObject (_aceff .Get (1));
_dffa ,_gbfe :=_afdf .(*_bab .PdfObjectDictionary );if !_gbfe {return nil ,_d .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_afdf =_dffa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_afdf =_bab .TraceToDirectObject (_afdf );_efef ,_gbfe :=_afdf .(*_bab .PdfObjectArray );if !_gbfe {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _efef .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_aeca ,_adea :=_efef .GetAsFloat64Slice ();
if _adea !=nil {return nil ,_adea ;};_fadf .WhitePoint =_aeca ;_afdf =_dffa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _afdf !=nil {_afdf =_bab .TraceToDirectObject (_afdf );_dacd ,_beac :=_afdf .(*_bab .PdfObjectArray );if !_beac {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _dacd .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ebae ,_ebdc :=_dacd .GetAsFloat64Slice ();
if _ebdc !=nil {return nil ,_ebdc ;};_fadf .BlackPoint =_ebae ;};_afdf =_dffa .Get ("\u0047\u0061\u006dm\u0061");if _afdf !=nil {_afdf =_bab .TraceToDirectObject (_afdf );_fbfad ,_bcdd :=_bab .GetNumberAsFloat (_afdf );if _bcdd !=nil {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_fadf .Gamma =_fbfad ;};return _fadf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfActionRendition )ToPdfObject ()_bab .PdfObject {_ege .PdfAction .ToPdfObject ();_fe :=_ege ._ec ;_dfb :=_fe .PdfObject .(*_bab .PdfObjectDictionary );_dfb .SetIfNotNil ("\u0053",_bab .MakeName (string (ActionTypeRendition )));_dfb .SetIfNotNil ("\u0052",_ege .R );
_dfb .SetIfNotNil ("\u0041\u004e",_ege .AN );_dfb .SetIfNotNil ("\u004f\u0050",_ege .OP );_dfb .SetIfNotNil ("\u004a\u0053",_ege .JS );return _fe ;};

// GetOptimizer returns current PDF optimizer.
func (_ebcdd *PdfWriter )GetOptimizer ()Optimizer {return _ebcdd ._bcbcc };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_dcaed *PdfPageResources )GetColorspaceByName (keyName _bab .PdfObjectName )(PdfColorspace ,bool ){_cafca ,_fcba :=_dcaed .GetColorspaces ();if _fcba !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fcba );
return nil ,false ;};if _cafca ==nil {return nil ,false ;};_gaecce ,_fbcba :=_cafca .Colorspaces [string (keyName )];if !_fbcba {return nil ,false ;};return _gaecce ,true ;};func _gdeebb (_fggca *_bab .PdfObjectDictionary )(*PdfShadingType6 ,error ){_eaede :=PdfShadingType6 {};
_aefea :=_fggca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aefea ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbacc ,_bcfea :=_aefea .(*_bab .PdfObjectInteger );if !_bcfea {_cgb .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aefea );
return nil ,_bab .ErrTypeError ;};_eaede .BitsPerCoordinate =_cbacc ;_aefea =_fggca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aefea ==nil {_cgb .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cbacc ,_bcfea =_aefea .(*_bab .PdfObjectInteger );if !_bcfea {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aefea );
return nil ,_bab .ErrTypeError ;};_eaede .BitsPerComponent =_cbacc ;_aefea =_fggca .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aefea ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbacc ,_bcfea =_aefea .(*_bab .PdfObjectInteger );if !_bcfea {_cgb .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aefea );
return nil ,_bab .ErrTypeError ;};_eaede .BitsPerComponent =_cbacc ;_aefea =_fggca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aefea ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbded ,_bcfea :=_aefea .(*_bab .PdfObjectArray );if !_bcfea {_cgb .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aefea );
return nil ,_bab .ErrTypeError ;};_eaede .Decode =_dbded ;if _gdebg :=_fggca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gdebg !=nil {_eaede .Function =[]PdfFunction {};if _cbbcb ,_fbdab :=_gdebg .(*_bab .PdfObjectArray );_fbdab {for _ ,_edeea :=range _cbbcb .Elements (){_abdga ,_ccafd :=_cdegf (_edeea );
if _ccafd !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccafd );return nil ,_ccafd ;};_eaede .Function =append (_eaede .Function ,_abdga );
};}else {_gbbfeg ,_eedbf :=_cdegf (_gdebg );if _eedbf !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eedbf );return nil ,_eedbf ;
};_eaede .Function =append (_eaede .Function ,_gbbfeg );};};return &_eaede ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_dgcf *PdfFieldButton )IsPush ()bool {return _dgcf .GetType ()==ButtonTypePush };

// SetVersion sets the PDF version of the output file.
func (_aadcd *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_aadcd ._gffad =majorVersion ;_aadcd ._bbad =minorVersion ;};var (ErrRequiredAttributeMissing =_cg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_fgbf =_cg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_cg .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cg .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_dbc .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bab .ErrNotSupported );ErrType1CFontNotSupported =_dbc .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bab .ErrNotSupported );
ErrType3FontNotSupported =_dbc .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bab .ErrNotSupported );
ErrTTCmapNotSupported =_dbc .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bab .ErrNotSupported );
ErrSignNotEnoughSpace =_dbc .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dbc .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// GetContainingPdfObject implements interface PdfModel.
func (_beab *PdfFilespec )GetContainingPdfObject ()_bab .PdfObject {return _beab ._cebg };

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_gfdaa :=&PdfOutline {_aaffa :_bab .MakeIndirectObject (_bab .MakeDict ())};_gfdaa ._agea =_gfdaa ;return _gfdaa ;};

// IsColored specifies if the pattern is colored.
func (_acaca *PdfTilingPattern )IsColored ()bool {if _acaca .PaintType !=nil &&*_acaca .PaintType ==1{return true ;};return false ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bbd :=NewPdfAction ();_efe :=&PdfActionMovie {};_efe .PdfAction =_bbd ;_bbd .SetContext (_efe );return _efe ;};func (_bead *LTV )buildCertChain (_cgccd ,_gfaed []*_ef .Certificate )([]*_ef .Certificate ,map[string ]*_ef .Certificate ,error ){_cgffc :=map[string ]*_ef .Certificate {};
for _ ,_cfdeg :=range _cgccd {_cgffc [_cfdeg .Subject .CommonName ]=_cfdeg ;};_ebeea :=_cgccd ;for _ ,_dcae :=range _gfaed {_abgfa :=_dcae .Subject .CommonName ;if _ ,_baggad :=_cgffc [_abgfa ];_baggad {continue ;};_cgffc [_abgfa ]=_dcae ;_ebeea =append (_ebeea ,_dcae );
};if len (_ebeea )==0{return nil ,nil ,ErrSignNoCertificates ;};var _gfeb error ;for _dbegf :=_ebeea [0];_dbegf !=nil &&!_bead .CertClient .IsCA (_dbegf );{_dgbgb ,_fbgec :=_cgffc [_dbegf .Issuer .CommonName ];if !_fbgec {if _dgbgb ,_gfeb =_bead .CertClient .GetIssuer (_dbegf );
_gfeb !=nil {_cgb .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gfeb );
break ;};_cgffc [_dbegf .Issuer .CommonName ]=_dgbgb ;_ebeea =append (_ebeea ,_dgbgb );};_dbegf =_dgbgb ;};return _ebeea ,_cgffc ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_eefd *PdfPattern )ToPdfObject ()_bab .PdfObject {_eeggg :=_eefd .getDict ();_eeggg .Set ("\u0054\u0079\u0070\u0065",_bab .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eeggg .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bab .MakeInteger (_eefd .PatternType ));
return _eefd ._ecege ;};func _gdeeb (_cbdbga _bab .PdfObject )(*PdfShading ,error ){_cbegd :=&PdfShading {};var _dbfad *_bab .PdfObjectDictionary ;if _dffag ,_bdeff :=_bab .GetIndirect (_cbdbga );_bdeff {_cbegd ._bfgd =_dffag ;_eggdb ,_debdf :=_dffag .PdfObject .(*_bab .PdfObjectDictionary );
if !_debdf {_cgb .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bab .ErrTypeError ;};_dbfad =_eggdb ;}else if _dgaf ,_dabed :=_bab .GetStream (_cbdbga );
_dabed {_cbegd ._bfgd =_dgaf ;_dbfad =_dgaf .PdfObjectDictionary ;}else if _caaaa ,_cdbfa :=_bab .GetDict (_cbdbga );_cdbfa {_cbegd ._bfgd =_caaaa ;_dbfad =_caaaa ;}else {_cgb .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_cbdbga );
return nil ,_bab .ErrTypeError ;};if _dbfad ==nil {_cgb .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cbdbga =_dbfad .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cbdbga ==nil {_cgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbdbga =_bab .TraceToDirectObject (_cbdbga );_cbccb ,_abbdf :=_cbdbga .(*_bab .PdfObjectInteger );if !_abbdf {_cgb .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cbdbga );
return nil ,_bab .ErrTypeError ;};if *_cbccb < 1||*_cbccb > 7{_cgb .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_cbccb );
return nil ,_bab .ErrTypeError ;};_cbegd .ShadingType =_cbccb ;_cbdbga =_dbfad .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _cbdbga ==nil {_cgb .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddcc ,_afbae :=NewPdfColorspaceFromPdfObject (_cbdbga );if _afbae !=nil {_cgb .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_afbae );
return nil ,_afbae ;};_cbegd .ColorSpace =_ddcc ;_cbdbga =_dbfad .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _cbdbga !=nil {_cbdbga =_bab .TraceToDirectObject (_cbdbga );_dbgba ,_edggd :=_cbdbga .(*_bab .PdfObjectArray );if !_edggd {_cgb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbdbga );
return nil ,_bab .ErrTypeError ;};_cbegd .Background =_dbgba ;};_cbdbga =_dbfad .Get ("\u0042\u0042\u006f\u0078");if _cbdbga !=nil {_cbdbga =_bab .TraceToDirectObject (_cbdbga );_ebcbd ,_gdcbaa :=_cbdbga .(*_bab .PdfObjectArray );if !_gdcbaa {_cgb .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbdbga );
return nil ,_bab .ErrTypeError ;};_feedcb ,_caddc :=NewPdfRectangle (*_ebcbd );if _caddc !=nil {_cgb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_caddc );return nil ,_caddc ;};_cbegd .BBox =_feedcb ;};
_cbdbga =_dbfad .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _cbdbga !=nil {_cbdbga =_bab .TraceToDirectObject (_cbdbga );_fecab ,_afaae :=_cbdbga .(*_bab .PdfObjectBool );if !_afaae {_cgb .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbdbga );
return nil ,_bab .ErrTypeError ;};_cbegd .AntiAlias =_fecab ;};switch *_cbccb {case 1:_fagce ,_ccfbd :=_ddbed (_dbfad );if _ccfbd !=nil {return nil ,_ccfbd ;};_fagce .PdfShading =_cbegd ;_cbegd ._gdbgg =_fagce ;return _cbegd ,nil ;case 2:_ebdbg ,_gfcbb :=_edfa (_dbfad );
if _gfcbb !=nil {return nil ,_gfcbb ;};_ebdbg .PdfShading =_cbegd ;_cbegd ._gdbgg =_ebdbg ;return _cbegd ,nil ;case 3:_cebfc ,_fcae :=_gfbgd (_dbfad );if _fcae !=nil {return nil ,_fcae ;};_cebfc .PdfShading =_cbegd ;_cbegd ._gdbgg =_cebfc ;return _cbegd ,nil ;
case 4:_gcbbb ,_cagfb :=_dfdf (_dbfad );if _cagfb !=nil {return nil ,_cagfb ;};_gcbbb .PdfShading =_cbegd ;_cbegd ._gdbgg =_gcbbb ;return _cbegd ,nil ;case 5:_caac ,_ecfdbe :=_addgf (_dbfad );if _ecfdbe !=nil {return nil ,_ecfdbe ;};_caac .PdfShading =_cbegd ;
_cbegd ._gdbgg =_caac ;return _cbegd ,nil ;case 6:_gdgff ,_abadf :=_gdeebb (_dbfad );if _abadf !=nil {return nil ,_abadf ;};_gdgff .PdfShading =_cbegd ;_cbegd ._gdbgg =_gdgff ;return _cbegd ,nil ;case 7:_aadefg ,_gfgfg :=_babb (_dbfad );if _gfgfg !=nil {return nil ,_gfgfg ;
};_aadefg .PdfShading =_cbegd ;_cbegd ._gdbgg =_aadefg ;return _cbegd ,nil ;};return nil ,_cg .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func (_fgb *PdfReader )newPdfActionThreadFromDict (_dde *_bab .PdfObjectDictionary )(*PdfActionThread ,error ){_caf ,_deae :=_eec (_dde .Get ("\u0046"));
if _deae !=nil {return nil ,_deae ;};return &PdfActionThread {D :_dde .Get ("\u0044"),B :_dde .Get ("\u0042"),F :_caf },nil ;};func _edfa (_cfced *_bab .PdfObjectDictionary )(*PdfShadingType2 ,error ){_fgdc :=PdfShadingType2 {};_abgac :=_cfced .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _abgac ==nil {_cgb .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_gdggf ,_ebeac :=_abgac .(*_bab .PdfObjectArray );if !_ebeac {_cgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abgac );return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _gdggf .Len ()!=4{_cgb .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gdggf .Len ());return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_fgdc .Coords =_gdggf ;if _fcdf :=_cfced .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fcdf !=nil {_fcdf =_bab .TraceToDirectObject (_fcdf );_aeeeb ,_ecdgb :=_fcdf .(*_bab .PdfObjectArray );if !_ecdgb {_cgb .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcdf );
return nil ,_cg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgdc .Domain =_aeeeb ;};_abgac =_cfced .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _abgac ==nil {_cgb .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fgdc .Function =[]PdfFunction {};if _gcebc ,_gggfg :=_abgac .(*_bab .PdfObjectArray );_gggfg {for _ ,_bcccc :=range _gcebc .Elements (){_ecad ,_fagd :=_cdegf (_bcccc );if _fagd !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fagd );
return nil ,_fagd ;};_fgdc .Function =append (_fgdc .Function ,_ecad );};}else {_cfgeb ,_aeafa :=_cdegf (_abgac );if _aeafa !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeafa );
return nil ,_aeafa ;};_fgdc .Function =append (_fgdc .Function ,_cfgeb );};if _bbda :=_cfced .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bbda !=nil {_bbda =_bab .TraceToDirectObject (_bbda );_bdagc ,_aeed :=_bbda .(*_bab .PdfObjectArray );if !_aeed {_cgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbda );
return nil ,_bab .ErrTypeError ;};if _bdagc .Len ()!=2{_cgb .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bdagc .Len ());return nil ,ErrInvalidAttribute ;
};_fgdc .Extend =_bdagc ;};return &_fgdc ,nil ;};

// SetFlag sets the flag for the field.
func (_defbd *PdfField )SetFlag (flag FieldFlag ){_defbd .Ff =_bab .MakeInteger (int64 (flag ))};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_cb .CharMetrics ;func (_gca *PdfReader )newPdfAnnotationSquareFromDict (_aceb *_bab .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gebd :=PdfAnnotationSquare {};_fgd ,_gaf :=_gca .newPdfAnnotationMarkupFromDict (_aceb );if _gaf !=nil {return nil ,_gaf ;
};_gebd .PdfAnnotationMarkup =_fgd ;_gebd .BS =_aceb .Get ("\u0042\u0053");_gebd .IC =_aceb .Get ("\u0049\u0043");_gebd .BE =_aceb .Get ("\u0042\u0045");_gebd .RD =_aceb .Get ("\u0052\u0044");return &_gebd ,nil ;};func (_dgae *PdfReader )newPdfAnnotationScreenFromDict (_cbb *_bab .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ccbb :=PdfAnnotationScreen {};
_ccbb .T =_cbb .Get ("\u0054");_ccbb .MK =_cbb .Get ("\u004d\u004b");_ccbb .A =_cbb .Get ("\u0041");_ccbb .AA =_cbb .Get ("\u0041\u0041");return &_ccbb ,nil ;};

// Fill populates `form` with values provided by `provider`.
func (_gbff *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gbff .fill (provider ,nil )};

// GetFontDescriptor returns the font descriptor for `font`.
func (_afgaa PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _afgaa ._dfbfg .getFontDescriptor (),nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gffc pdfCIDFontType2 )GetCharMetrics (code _ea .CharCode )(_cb .CharMetrics ,bool ){if _bcdg ,_gaade :=_gffc ._ceba [code ];_gaade {return _cb .CharMetrics {Wx :_bcdg },true ;};_bebde :=rune (code );_degg ,_cebgd :=_gffc ._aefcc [_bebde ];if !_cebgd {_degg =int (_gffc ._deagdb );
};return _cb .CharMetrics {Wx :float64 (_degg )},true ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_abgce *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_abgce .ToPdfOutline ().PdfOutlineTreeNode ;};

// ToGoTime returns the date in time.Time format.
func (_daeacb PdfDate )ToGoTime ()_f .Time {_aaeda :=int (_daeacb ._cecf *60*60+_daeacb ._fead *60);switch _daeacb ._fcbfd {case '-':_aaeda =-_aaeda ;case 'Z':_aaeda =0;};_eccb :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_daeacb ._fcbfd ,_daeacb ._cecf ,_daeacb ._fead );
_abcca :=_f .FixedZone (_eccb ,_aaeda );return _f .Date (int (_daeacb ._gfgge ),_f .Month (_daeacb ._ceda ),int (_daeacb ._gbfea ),int (_daeacb ._cbcea ),int (_daeacb ._ccedb ),int (_daeacb ._bdgfc ),0,_abcca );};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bcfdg *PdfPage )GetAllContentStreams ()(string ,error ){_baage ,_gabfc :=_bcfdg .GetContentStreams ();if _gabfc !=nil {return "",_gabfc ;};return _bf .Join (_baage ,"\u0020"),nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_bgea *modelManager )GetModelFromPrimitive (primitive _bab .PdfObject )PdfModel {model ,_fdac :=_bgea ._bcga [primitive ];if !_fdac {return nil ;};return model ;};func _fbbd (_gcdc _bab .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_cgb .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gcdc .String (),_gcdc );
_gae :=NewPdfColorspaceSpecialPattern ();if _cbbd ,_aadc :=_gcdc .(*_bab .PdfIndirectObject );_aadc {_gae ._bbac =_cbbd ;};_gcdc =_bab .TraceToDirectObject (_gcdc );if _gadg ,_gdda :=_gcdc .(*_bab .PdfObjectName );_gdda {if *_gadg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _gae ,nil ;};_gbbbe ,_dgddc :=_gcdc .(*_bab .PdfObjectArray );if !_dgddc {_cgb .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gcdc );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gbbbe .Len ()!=1&&_gbbbe .Len ()!=2{_cgb .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gbbbe );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gcdc =_gbbbe .Get (0);if _cdeg ,_dgefg :=_gcdc .(*_bab .PdfObjectName );_dgefg {if *_cdeg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_cgb .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_cdeg );
return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gbbbe .Len ()> 1{_gcdc =_gbbbe .Get (1);_gcdc =_bab .TraceToDirectObject (_gcdc );_aged ,_eceb :=NewPdfColorspaceFromPdfObject (_gcdc );if _eceb !=nil {return nil ,_eceb ;
};_gae .UnderlyingCS =_aged ;};_cgb .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_gae .UnderlyingCS );
return _gae ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_cfgfb *XObjectForm )SetContentStream (content []byte ,encoder _bab .StreamEncoder )error {_gedba :=content ;if encoder ==nil {if _cfgfb .Filter !=nil {encoder =_cfgfb .Filter ;}else {encoder =_bab .NewRawEncoder ();};};_cbfg ,_dbdbb :=encoder .EncodeBytes (_gedba );
if _dbdbb !=nil {return _dbdbb ;};_gedba =_cbfg ;_cfgfb .Stream =_gedba ;_cfgfb .Filter =encoder ;return nil ;};func _baaead (_dbbfb *_bab .PdfObjectDictionary ,_dbge *fontCommon )(*pdfCIDFontType2 ,error ){if _dbge ._egbf !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cgb .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dbge );
return nil ,_bab .ErrRangeError ;};_gegeg :=_eggb (_dbge );_dedd ,_aececa :=_bab .GetDict (_dbbfb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aececa {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbge );
return nil ,ErrRequiredAttributeMissing ;};_gegeg .CIDSystemInfo =_dedd ;_gegeg .DW =_dbbfb .Get ("\u0044\u0057");_gegeg .W =_dbbfb .Get ("\u0057");_gegeg .DW2 =_dbbfb .Get ("\u0044\u0057\u0032");_gegeg .W2 =_dbbfb .Get ("\u0057\u0032");_gegeg .CIDToGIDMap =_dbbfb .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gegeg ._deagdb =1000.0;if _aeag ,_dgedd :=_bab .GetNumberAsFloat (_gegeg .DW );_dgedd ==nil {_gegeg ._deagdb =_aeag ;};_ecffb ,_dccf :=_gagac (_gegeg .W );if _dccf !=nil {return nil ,_dccf ;};if _ecffb ==nil {_ecffb =map[_ea .CharCode ]float64 {};};_gegeg ._ceba =_ecffb ;
return _gegeg ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_aaeb *PdfFont )GetCharMetrics (code _ea .CharCode )(CharMetrics ,bool ){var _fggc _cb .CharMetrics ;switch _fddea :=_aaeb ._dfbfg .(type ){case *pdfFontSimple :if _bgba ,_adbcc :=_fddea .GetCharMetrics (code );_adbcc {return _bgba ,_adbcc ;};case *pdfFontType0 :if _bfea ,_fgad :=_fddea .GetCharMetrics (code );
_fgad {return _bfea ,_fgad ;};case *pdfCIDFontType0 :if _effda ,_fbbge :=_fddea .GetCharMetrics (code );_fbbge {return _effda ,_fbbge ;};case *pdfCIDFontType2 :if _gdbad ,_daecc :=_fddea .GetCharMetrics (code );_daecc {return _gdbad ,_daecc ;};case *pdfFontType3 :if _dbbg ,_cafc :=_fddea .GetCharMetrics (code );
_cafc {return _dbbg ,_cafc ;};default:_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_aaeb ._dfbfg );
return _fggc ,false ;};if _feac ,_feae :=_aaeb .GetFontDescriptor ();_feae ==nil &&_feac !=nil {return _cb .CharMetrics {Wx :_feac ._acddd },true ;};_cgb .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_aaeb );
return _fggc ,false ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_bdage *_bab .PdfIndirectObject ;_baadg *_bab .PdfIndirectObject ;_begec map[_bab .PdfObject ]struct{};_bbceb []_bab .PdfObject ;_acagcb map[_bab .PdfObject ]struct{};_beff []*_bab .PdfIndirectObject ;_badbg *PdfOutlineTreeNode ;_abbdcc *_bab .PdfObjectDictionary ;
_gfegf []_bab .PdfObject ;_cgddgb *_bab .PdfIndirectObject ;_bgfgg *_b .Writer ;_effee int64 ;_fadac error ;_ggfbe *_bab .PdfCrypt ;_befge *_bab .PdfObjectDictionary ;_gdgbe *_bab .PdfIndirectObject ;_bcede *_bab .PdfObjectArray ;_gffad int ;_bbad int ;
_acdced *bool ;_ebgfb map[_bab .PdfObject ][]*_bab .PdfObjectDictionary ;_dgagg *PdfAcroForm ;_bcbcc Optimizer ;_gebaa map[int ]crossReference ;_fcdaa int64 ;ObjNumOffset int ;_fbeeg bool ;_aeagd _bab .XrefTable ;_fgccf int64 ;_fafbb int64 ;_efead map[_bab .PdfObject ]int64 ;
_cfbgf map[_bab .PdfObject ]struct{};_caaafb string ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fdbg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ToPdfObject converts date to a PDF string object.
func (_ccfcfc *PdfDate )ToPdfObject ()_bab .PdfObject {_beebd :=_d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ccfcfc ._gfgge ,_ccfcfc ._ceda ,_ccfcfc ._gbfea ,_ccfcfc ._cbcea ,_ccfcfc ._ccedb ,_ccfcfc ._bdgfc ,_ccfcfc ._fcbfd ,_ccfcfc ._cecf ,_ccfcfc ._fead );
return _bab .MakeString (_beebd );};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_gggca FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_gggca .Mask ()|fl .Mask ())};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ebeg :=NewPdfAction ();_bd :=&PdfActionTrans {};_bd .PdfAction =_ebeg ;_ebeg .SetContext (_bd );return _bd ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_bgae *PdfFont )BytesToCharcodes (data []byte )[]_ea .CharCode {_cgb .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cdbb ,_dffd :=_bgae ._dfbfg .(*pdfFontType0 );_dffd &&_cdbb ._fgcac !=nil {if _afdc ,_aeefb :=_cdbb .bytesToCharcodes (data );_aeefb {return _afdc ;};};_ebcfa :=make ([]_ea .CharCode ,0,len (data )+len (data )%2);if _bgae .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bdeb :=0;_bdeb < len (data );_bdeb +=2{_ffcb :=uint16 (data [_bdeb ])<<8|uint16 (data [_bdeb +1]);_ebcfa =append (_ebcfa ,_ea .CharCode (_ffcb ));};}else {for _ ,_aagf :=range data {_ebcfa =append (_ebcfa ,_ea .CharCode (_aagf ));
};};return _ebcfa ;};func (_afec *PdfReader )newPdfAnnotationSquigglyFromDict (_ebc *_bab .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gcc :=PdfAnnotationSquiggly {};_acdd ,_ced :=_afec .newPdfAnnotationMarkupFromDict (_ebc );if _ced !=nil {return nil ,_ced ;
};_gcc .PdfAnnotationMarkup =_acdd ;_gcc .QuadPoints =_ebc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcc ,nil ;};

// SetImage updates XObject Image with new image data.
func (_cbdae *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_cbdae .Filter .UpdateParams (img .GetParamsDict ());_dcdb ,_feece :=_cbdae .Filter .EncodeBytes (img .Data );if _feece !=nil {return _feece ;};_cbdae .Stream =_dcdb ;_eaeca :=img .Width ;
_cbdae .Width =&_eaeca ;_fbbcd :=img .Height ;_cbdae .Height =&_fbbcd ;_degaeb :=img .BitsPerComponent ;_cbdae .BitsPerComponent =&_degaeb ;if cs ==nil {if img .ColorComponents ==1{_cbdae .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cbdae .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_cbdae .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cbdae .ColorSpace =cs ;};return nil ;
};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_ddee *XObjectImage )SetFilter (encoder _bab .StreamEncoder )error {_fbgba :=_ddee .Stream ;_feagf ,_fdcfgd :=_ddee .Filter .DecodeBytes (_fbgba );if _fdcfgd !=nil {return _fdcfgd ;};_ddee .Filter =encoder ;encoder .UpdateParams (_ddee .getParamsDict ());
_fbgba ,_fdcfgd =encoder .EncodeBytes (_feagf );if _fdcfgd !=nil {return _fdcfgd ;};_ddee .Stream =_fbgba ;return nil ;};func _agffg (_dege *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_dege }};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_dcb PdfModel ;Type _bab .PdfObject ;S _bab .PdfObject ;Next _bab .PdfObject ;_ec *_bab .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ddca *PdfAnnotation3D )ToPdfObject ()_bab .PdfObject {_ddca .PdfAnnotation .ToPdfObject ();_cee :=_ddca ._bcc ;_cabe :=_cee .PdfObject .(*_bab .PdfObjectDictionary );_cabe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0033\u0044"));
_cabe .SetIfNotNil ("\u0033\u0044\u0044",_ddca .T3DD );_cabe .SetIfNotNil ("\u0033\u0044\u0056",_ddca .T3DV );_cabe .SetIfNotNil ("\u0033\u0044\u0041",_ddca .T3DA );_cabe .SetIfNotNil ("\u0033\u0044\u0049",_ddca .T3DI );_cabe .SetIfNotNil ("\u0033\u0044\u0042",_ddca .T3DB );
return _cee ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gacfb *PdfField )GetContainingPdfObject ()_bab .PdfObject {return _gacfb ._fced };

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_febc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbeaa ,_cagcb :=_bab .GetNumbersAsFloat (objects );
if _cagcb !=nil {return nil ,_cagcb ;};return _febc .ColorFromFloats (_fbeaa );};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_adgd :=NewPdfAnnotation ();_ffac :=&PdfAnnotationText {};_ffac .PdfAnnotation =_adgd ;_ffac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adgd .SetContext (_ffac );return _ffac ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_abcg :=NewPdfAnnotation ();_dce :=&PdfAnnotationStrikeOut {};_dce .PdfAnnotation =_abcg ;_dce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abcg .SetContext (_dce );return _dce ;};func (_beeg *PdfReader )newPdfActionGotoRFromDict (_baae *_bab .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bca ,_ffb :=_eec (_baae .Get ("\u0046"));
if _ffb !=nil {return nil ,_ffb ;};return &PdfActionGoToR {D :_baae .Get ("\u0044"),NewWindow :_baae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bca },nil ;};func _eec (_gag _bab .PdfObject )(*PdfFilespec ,error ){if _gag ==nil {return nil ,nil ;
};return NewPdfFilespecFromObj (_gag );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_acef *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddd :=vals [0];if _ddd < 0.0||_ddd > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cebf :=vals [1];if _cebf < 0.0||_cebf > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgga :=vals [2];if _fgga < 0.0||_fgga > 1.0{return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bbbc :=NewPdfColorDeviceRGB (_ddd ,_cebf ,_fgga );return _bbbc ,nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bab .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_bccca *_bab .PdfIndirectObject ;};func _ddfbd (_fccef []byte )bool {if len (_fccef )< 4{return true ;
};for _dgfd :=range _fccef [:4]{_eebbe :=rune (_dgfd );if !_gg .Is (_gg .ASCII_Hex_Digit ,_eebbe )&&!_gg .IsSpace (_eebbe ){return true ;};};return false ;};

// R returns the value of the red component of the color.
func (_ccade *PdfColorDeviceRGB )R ()float64 {return _ccade [0]};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_cebae *PdfPageResources )GetXObjectFormByName (keyName _bab .PdfObjectName )(*XObjectForm ,error ){_faeac ,_afagd :=_cebae .GetXObjectByName (keyName );if _faeac ==nil {return nil ,nil ;};if _afagd !=XObjectTypeForm {return nil ,_cg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fgbab ,_becd :=NewXObjectFormFromStream (_faeac );if _becd !=nil {return nil ,_becd ;};return _fgbab ,nil ;};func (_aedcd *pdfFontSimple )updateStandard14Font (){_fabgf ,_bcdgb :=_aedcd .Encoder ().(_ea .SimpleEncoder );if !_bcdgb {_cgb .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_aedcd .Encoder (),_aedcd );
return ;};_dcgee :=_fabgf .Charcodes ();_aedcd ._dbfe =make (map[_ea .CharCode ]float64 ,len (_dcgee ));for _ ,_aeaf :=range _dcgee {_cafdb ,_ :=_fabgf .CharcodeToRune (_aeaf );_gbad ,_ :=_aedcd ._cfdae .Read (_cafdb );_aedcd ._dbfe [_aeaf ]=_gbad .Wx ;
};};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fgfae FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fgfae .Mask ()&^fl .Mask ())};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bbcf DefaultImageHandler )Read (reader _ad .Reader )(*Image ,error ){_aebcg ,_ ,_gbadf :=_eg .Decode (reader );if _gbadf !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gbadf );
return nil ,_gbadf ;};return _bbcf .NewImageFromGoImage (_aebcg );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gdcba pdfCIDFontType0 )GetCharMetrics (code _ea .CharCode )(_cb .CharMetrics ,bool ){_bacd :=_gdcba ._agacd ;if _bbcea ,_fcfbf :=_gdcba ._defdb [code ];_fcfbf {_bacd =_bbcea ;};return _cb .CharMetrics {Wx :_bacd },true ;};func _deeda (_accbe *_bab .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cfgdf :=&PdfTilingPattern {};
_bedf :=_accbe .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _bedf ==nil {_cgb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdfed ,_fcbcb :=_bedf .(*_bab .PdfObjectInteger );
if !_fcbcb {_cgb .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bedf );return nil ,_bab .ErrTypeError ;
};_cfgdf .PaintType =_cdfed ;_bedf =_accbe .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bedf ==nil {_cgb .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ebbcg ,_fcbcb :=_bedf .(*_bab .PdfObjectInteger );if !_fcbcb {_cgb .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bedf );
return nil ,_bab .ErrTypeError ;};_cfgdf .TilingType =_ebbcg ;_bedf =_accbe .Get ("\u0042\u0042\u006f\u0078");if _bedf ==nil {_cgb .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bedf =_bab .TraceToDirectObject (_bedf );_fcdae ,_fcbcb :=_bedf .(*_bab .PdfObjectArray );if !_fcbcb {_cgb .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bedf );
return nil ,_bab .ErrTypeError ;};_aaaag ,_ccde :=NewPdfRectangle (*_fcdae );if _ccde !=nil {_cgb .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ccde );return nil ,_ccde ;};_cfgdf .BBox =_aaaag ;_bedf =_accbe .Get ("\u0058\u0053\u0074e\u0070");
if _bedf ==nil {_cgb .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_agcac ,_ccde :=_bab .GetNumberAsFloat (_bedf );if _ccde !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_agcac );
return nil ,_ccde ;};_cfgdf .XStep =_bab .MakeFloat (_agcac );_bedf =_accbe .Get ("\u0059\u0053\u0074e\u0070");if _bedf ==nil {_cgb .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ddbbd ,_ccde :=_bab .GetNumberAsFloat (_bedf );if _ccde !=nil {_cgb .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ddbbd );
return nil ,_ccde ;};_cfgdf .YStep =_bab .MakeFloat (_ddbbd );_bedf =_accbe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bedf ==nil {_cgb .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_accbe ,_fcbcb =_bab .TraceToDirectObject (_bedf ).(*_bab .PdfObjectDictionary );if !_fcbcb {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bedf );
};_eeddc ,_ccde :=NewPdfPageResourcesFromDict (_accbe );if _ccde !=nil {return nil ,_ccde ;};_cfgdf .Resources =_eeddc ;if _egag :=_accbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_egag !=nil {_fefdd ,_feba :=_egag .(*_bab .PdfObjectArray );if !_feba {_cgb .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egag );
return nil ,_bab .ErrTypeError ;};_cfgdf .Matrix =_fefdd ;};return _cfgdf ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject implements interface PdfModel.
func (_bede *PdfAnnotationScreen )ToPdfObject ()_bab .PdfObject {_bede .PdfAnnotation .ToPdfObject ();_caeb :=_bede ._bcc ;_cfcd :=_caeb .PdfObject .(*_bab .PdfObjectDictionary );_cfcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_cfcd .SetIfNotNil ("\u0054",_bede .T );_cfcd .SetIfNotNil ("\u004d\u004b",_bede .MK );_cfcd .SetIfNotNil ("\u0041",_bede .A );_cfcd .SetIfNotNil ("\u0041\u0041",_bede .AA );return _caeb ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bab .PdfObject ;Flags _bab .PdfObject ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_fcccb .Lock ();defer _fcccb .Unlock ();_gfebd =title };

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_gadd *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_agbda :=&PdfColorPattern {};_cfda ,_bada :=objects [len (objects )-1].(*_bab .PdfObjectName );if !_bada {_cgb .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_agbda .PatternName =*_cfda ;if len (objects )> 1{_faaa :=objects [0:len (objects )-1];if _gadd .UnderlyingCS ==nil {_cgb .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_cg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ddbgg ,_efgeb :=_gadd .UnderlyingCS .ColorFromPdfObjects (_faaa );if _efgeb !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_efgeb );
return nil ,_efgeb ;};_agbda .Color =_ddbgg ;};return _agbda ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ad .ReadSeeker )(*PdfFont ,error ){const _abgf =_ea .CharCode (32);const _acaac =_ea .CharCode (255);_baeec ,_eacd :=_gc .ReadAll (r );if _eacd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_eacd );
return nil ,_eacd ;};_abeab ,_eacd :=_cb .TtfParse (_bcb .NewReader (_baeec ));if _eacd !=nil {_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_eacd );
return nil ,_eacd ;};_gcdd :=&pdfFontSimple {_dbfe :make (map[_ea .CharCode ]float64 ),fontCommon :fontCommon {_egbf :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gcdd ._agbga =_ea .NewWinAnsiEncoder ();_gcdd ._cefg =_abeab .PostScriptName ;_gcdd .FirstChar =_bab .MakeInteger (int64 (_abgf ));
_gcdd .LastChar =_bab .MakeInteger (int64 (_acaac ));_beaef :=1000.0/float64 (_abeab .UnitsPerEm );if len (_abeab .Widths )<=0{return nil ,_cg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gedcbb :=_beaef *float64 (_abeab .Widths [0]);_fdceb :=make ([]float64 ,0,_acaac -_abgf +1);for _fgff :=_abgf ;_fgff <=_acaac ;_fgff ++{_cbdbg ,_gcegab :=_gcdd .Encoder ().CharcodeToRune (_fgff );if !_gcegab {_cgb .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fgff );
_fdceb =append (_fdceb ,_gedcbb );continue ;};_gegfa ,_faae :=_abeab .Chars [_cbdbg ];if !_faae {_cgb .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_fdceb =append (_fdceb ,_gedcbb );
continue ;};_dbgac :=_beaef *float64 (_abeab .Widths [_gegfa ]);_fdceb =append (_fdceb ,_dbgac );};_gcdd .Widths =_bab .MakeIndirectObject (_bab .MakeArrayFromFloats (_fdceb ));if len (_fdceb )< int (_acaac -_abgf +1){_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_fdceb ),255-32+1);
return nil ,_bab .ErrRangeError ;};for _cdbe :=_abgf ;_cdbe <=_acaac ;_cdbe ++{_gcdd ._dbfe [_cdbe ]=_fdceb [_cdbe -_abgf ];};_gcdd .Encoding =_bab .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_acbfc :=&PdfFontDescriptor {};
_acbfc .FontName =_bab .MakeName (_abeab .PostScriptName );_acbfc .Ascent =_bab .MakeFloat (_beaef *float64 (_abeab .TypoAscender ));_acbfc .Descent =_bab .MakeFloat (_beaef *float64 (_abeab .TypoDescender ));_acbfc .CapHeight =_bab .MakeFloat (_beaef *float64 (_abeab .CapHeight ));
_acbfc .FontBBox =_bab .MakeArrayFromFloats ([]float64 {_beaef *float64 (_abeab .Xmin ),_beaef *float64 (_abeab .Ymin ),_beaef *float64 (_abeab .Xmax ),_beaef *float64 (_abeab .Ymax )});_acbfc .ItalicAngle =_bab .MakeFloat (_abeab .ItalicAngle );_acbfc .MissingWidth =_bab .MakeFloat (_beaef *float64 (_abeab .Widths [0]));
_aebcc ,_eacd :=_bab .MakeStream (_baeec ,_bab .NewFlateEncoder ());if _eacd !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_eacd );
return nil ,_eacd ;};_aebcc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bab .MakeInteger (int64 (len (_baeec ))));_acbfc .FontFile2 =_aebcc ;if _abeab .Bold {_acbfc .StemV =_bab .MakeInteger (120);}else {_acbfc .StemV =_bab .MakeInteger (70);
};_cdgd :=_adbg ;if _abeab .IsFixedPitch {_cdgd |=_fbgdf ;};if _abeab .ItalicAngle !=0{_cdgd |=_acae ;};_acbfc .Flags =_bab .MakeInteger (int64 (_cdgd ));_gcdd ._dbcbe =_acbfc ;_gfcc :=&PdfFont {_dfbfg :_gcdd };return _gfcc ,nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_aecaf *DSS )ToPdfObject ()_bab .PdfObject {_fbba :=_aecaf ._ddgc .PdfObject .(*_bab .PdfObjectDictionary );_fbba .Clear ();_gggd :=_bab .MakeDict ();for _dcgec ,_dcag :=range _aecaf .VRI {_gggd .Set (*_bab .MakeName (_dcgec ),_dcag .ToPdfObject ());
};_fbba .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_ggfeg (_aecaf .Certs ));_fbba .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_ggfeg (_aecaf .OCSPs ));_fbba .SetIfNotNil ("\u0043\u0052\u004c\u0073",_ggfeg (_aecaf .CRLs ));_fbba .Set ("\u0056\u0052\u0049",_gggd );
return _aecaf ._ddgc ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_defdf *PdfShadingPattern )ToPdfObject ()_bab .PdfObject {_defdf .PdfPattern .ToPdfObject ();_bcgb :=_defdf .getDict ();if _defdf .Shading !=nil {_bcgb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_defdf .Shading .ToPdfObject ());};if _defdf .Matrix !=nil {_bcgb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_defdf .Matrix );
};if _defdf .ExtGState !=nil {_bcgb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_defdf .ExtGState );};return _defdf ._ecege ;};func _beba (_gafe ,_cdec string )string {if _bf .Contains (_gafe ,"\u002b"){_cbdb :=_bf .Split (_gafe ,"\u002b");if len (_cbdb )==2{_gafe =_cbdb [1];
};};return _cdec +"\u002b"+_gafe ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bab .PdfObjectArray ;Domain *_bab .PdfObjectArray ;Function []PdfFunction ;Extend *_bab .PdfObjectArray ;};

// B returns the value of the blue component of the color.
func (_bceef *PdfColorDeviceRGB )B ()float64 {return _bceef [2]};

// ToPdfObject implements interface PdfModel.
func (_ecac *PdfAnnotationWidget )ToPdfObject ()_bab .PdfObject {_ecac .PdfAnnotation .ToPdfObject ();_gabb :=_ecac ._bcc ;_fbfe :=_gabb .PdfObject .(*_bab .PdfObjectDictionary );if _ecac ._acg {return _gabb ;};_ecac ._acg =true ;_fbfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_fbfe .SetIfNotNil ("\u0048",_ecac .H );_fbfe .SetIfNotNil ("\u004d\u004b",_ecac .MK );_fbfe .SetIfNotNil ("\u0041",_ecac .A );_fbfe .SetIfNotNil ("\u0041\u0041",_ecac .AA );_fbfe .SetIfNotNil ("\u0042\u0053",_ecac .BS );_bfae :=_ecac .Parent ;if _ecac ._ece !=nil {if _ecac ._ece ._fced ==_ecac ._bcc {_ecac ._ece .ToPdfObject ();
};_bfae =_ecac ._ece .GetContainingPdfObject ();};if _bfae !=_gabb {_fbfe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfae );};_ecac ._acg =false ;return _gabb ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_aebf :=&PdfBorderStyle {};return _aebf };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bfaec *PdfPageResources )GetExtGState (keyName _bab .PdfObjectName )(_bab .PdfObject ,bool ){if _bfaec .ExtGState ==nil {return nil ,false ;};_aeecd ,_bcaae :=_bab .TraceToDirectObject (_bfaec .ExtGState ).(*_bab .PdfObjectDictionary );if !_bcaae {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bfaec .ExtGState );
return nil ,false ;};if _afeca :=_aeecd .Get (keyName );_afeca !=nil {return _afeca ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_feab *VRI )ToPdfObject ()*_bab .PdfObjectDictionary {_egcc :=_bab .MakeDict ();_egcc .SetIfNotNil (_bab .PdfObjectName ("\u0043\u0065\u0072\u0074"),_ggfeg (_feab .Cert ));_egcc .SetIfNotNil (_bab .PdfObjectName ("\u004f\u0043\u0053\u0050"),_ggfeg (_feab .OCSP ));
_egcc .SetIfNotNil (_bab .PdfObjectName ("\u0043\u0052\u004c"),_ggfeg (_feab .CRL ));_egcc .SetIfNotNil ("\u0054\u0055",_feab .TU );_egcc .SetIfNotNil ("\u0054\u0053",_feab .TS );return _egcc ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_decgc *PdfPattern )GetContainingPdfObject ()_bab .PdfObject {return _decgc ._ecege };

// SetBorderWidth sets the style's border width.
func (_gcce *PdfBorderStyle )SetBorderWidth (width float64 ){_gcce .W =&width };func _ccafb (_gbbcg *_bab .PdfObjectDictionary )(*PdfFieldButton ,error ){_ddfc :=&PdfFieldButton {};_ddfc .Opt ,_ =_bab .GetArray (_gbbcg .Get ("\u004f\u0070\u0074"));return _ddfc ,nil ;
};func _cbbca (_cacgc *_bab .PdfObjectStream )(*PdfFunctionType0 ,error ){_afgca :=&PdfFunctionType0 {};_afgca ._bbaag =_cacgc ;_dfff :=_cacgc .PdfObjectDictionary ;_accc ,_afbdf :=_bab .TraceToDirectObject (_dfff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bab .PdfObjectArray );
if !_afbdf {_cgb .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _accc .Len ()< 0||_accc .Len ()%2!=0{_cgb .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_afgca .NumInputs =_accc .Len ()/2;_faee ,_bbege :=_accc .ToFloat64Array ();if _bbege !=nil {return nil ,_bbege ;};_afgca .Domain =_faee ;_accc ,_afbdf =_bab .TraceToDirectObject (_dfff .Get ("\u0052\u0061\u006eg\u0065")).(*_bab .PdfObjectArray );if !_afbdf {_cgb .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _accc .Len ()< 0||_accc .Len ()%2!=0{return nil ,_cg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_afgca .NumOutputs =_accc .Len ()/2;_bbedd ,_bbege :=_accc .ToFloat64Array ();if _bbege !=nil {return nil ,_bbege ;};_afgca .Range =_bbedd ;_accc ,_afbdf =_bab .TraceToDirectObject (_dfff .Get ("\u0053\u0069\u007a\u0065")).(*_bab .PdfObjectArray );if !_afbdf {_cgb .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_agcad ,_bbege :=_accc .ToIntegerArray ();
if _bbege !=nil {return nil ,_bbege ;};if len (_agcad )!=_afgca .NumInputs {_cgb .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgca .Size =_agcad ;_fece ,_afbdf :=_bab .TraceToDirectObject (_dfff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bab .PdfObjectInteger );
if !_afbdf {_cgb .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_fece !=1&&*_fece !=2&&*_fece !=4&&*_fece !=8&&*_fece !=12&&*_fece !=16&&*_fece !=24&&*_fece !=32{_cgb .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_fece );
return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgca .BitsPerSample =int (*_fece );_afgca .Order =1;_eggc ,_afbdf :=_bab .TraceToDirectObject (_dfff .Get ("\u004f\u0072\u0064e\u0072")).(*_bab .PdfObjectInteger );
if _afbdf {if *_eggc !=1&&*_eggc !=3{_cgb .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_eggc );return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgca .Order =int (*_eggc );
};_accc ,_afbdf =_bab .TraceToDirectObject (_dfff .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bab .PdfObjectArray );if _afbdf {_cdecb ,_ffgd :=_accc .ToFloat64Array ();if _ffgd !=nil {return nil ,_ffgd ;};_afgca .Encode =_cdecb ;};_accc ,_afbdf =_bab .TraceToDirectObject (_dfff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bab .PdfObjectArray );
if _afbdf {_daagd ,_gcfba :=_accc .ToFloat64Array ();if _gcfba !=nil {return nil ,_gcfba ;};_afgca .Decode =_daagd ;};_cggd ,_bbege :=_bab .DecodeStream (_cacgc );if _bbege !=nil {return nil ,_bbege ;};_afgca ._bfbga =_cggd ;return _afgca ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bbeg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bbeg .flattenFieldsWithOpts (false ,appgen ,opts );};

// ToInteger convert to an integer format.
func (_eef *PdfColorCalGray )ToInteger (bits int )uint32 {_dcgc :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_dcgc *_eef .Val ());};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_dbd *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gdga :=_ee .NewReader (img .getBase ());_gegf :=_ca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bdad :=_ee .NewWriter (_gegf );
_ecbe :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_bfbd :=make ([]uint32 ,3);var (_cedd error ;_geea ,_gbbb ,_gccd ,_bfbda ,_afcc ,_aadef float64 ;);for {_cedd =_gdga .ReadSamples (_bfbd );if _cedd ==_ad .EOF {break ;}else if _cedd !=nil {return img ,_cedd ;
};_geea =float64 (_bfbd [0])/_ecbe ;_gbbb =float64 (_bfbd [1])/_ecbe ;_gccd =float64 (_bfbd [2])/_ecbe ;_bfbda =_dbd .Matrix [0]*_ab .Pow (_geea ,_dbd .Gamma [0])+_dbd .Matrix [3]*_ab .Pow (_gbbb ,_dbd .Gamma [1])+_dbd .Matrix [6]*_ab .Pow (_gccd ,_dbd .Gamma [2]);
_afcc =_dbd .Matrix [1]*_ab .Pow (_geea ,_dbd .Gamma [0])+_dbd .Matrix [4]*_ab .Pow (_gbbb ,_dbd .Gamma [1])+_dbd .Matrix [7]*_ab .Pow (_gccd ,_dbd .Gamma [2]);_aadef =_dbd .Matrix [2]*_ab .Pow (_geea ,_dbd .Gamma [0])+_dbd .Matrix [5]*_ab .Pow (_gbbb ,_dbd .Gamma [1])+_dbd .Matrix [8]*_ab .Pow (_gccd ,_dbd .Gamma [2]);
_geea =3.240479*_bfbda +-1.537150*_afcc +-0.498535*_aadef ;_gbbb =-0.969256*_bfbda +1.875992*_afcc +0.041556*_aadef ;_gccd =0.055648*_bfbda +-0.204043*_afcc +1.057311*_aadef ;_geea =_ab .Min (_ab .Max (_geea ,0),1.0);_gbbb =_ab .Min (_ab .Max (_gbbb ,0),1.0);
_gccd =_ab .Min (_ab .Max (_gccd ,0),1.0);_bfbd [0]=uint32 (_geea *_ecbe );_bfbd [1]=uint32 (_gbbb *_ecbe );_bfbd [2]=uint32 (_gccd *_ecbe );if _cedd =_bdad .WriteSamples (_bfbd );_cedd !=nil {return img ,_cedd ;};};return _bdaad (&_gegf ),nil ;};func (_dbbfg *PdfWriter )writeString (_egcfd string ){if _dbbfg ._fadac !=nil {return ;
};_gfbff ,_cacce :=_dbbfg ._bgfgg .WriteString (_egcfd );_dbbfg ._effee +=int64 (_gfbff );_dbbfg ._fadac =_cacce ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_efg :=NewPdfAction ();_gb :=&PdfActionNamed {};_gb .PdfAction =_efg ;_efg .SetContext (_gb );return _gb ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_afc :=NewPdfAnnotation ();_fad :=&PdfAnnotationCircle {};_fad .PdfAnnotation =_afc ;_fad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afc .SetContext (_fad );return _fad ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_aecae *PdfColorspaceDeviceN )GetNumComponents ()int {return _aecae .ColorantNames .Len ()};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_acf :=&PdfAction {};_acf ._ec =_bab .MakeIndirectObject (_bab .MakeDict ());return _acf ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fcec *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bab .PdfObject )(PdfColor ,error ){if len (objects )!=_fcec .GetNumComponents (){return nil ,_cg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_effd ,_bbga :=_bab .GetNumbersAsFloat (objects );
if _bbga !=nil {return nil ,_bbga ;};return _fcec .ColorFromFloats (_effd );};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_ecdd :=&PdfColorspaceLab {};_ecdd .BlackPoint =[]float64 {0.0,0.0,0.0};_ecdd .Range =[]float64 {-100,100,-100,100};return _ecdd ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ad .ReadSeeker )(*PdfReader ,error ){const _ceded ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_cfded :=&PdfReader {_bcfc :rs ,_eccf :map[_bab .PdfObject ]struct{}{},_dccce :_eggca (),_geegb :true };
_bfecd ,_fbgc :=_cagee ("\u0072");if _fbgc !=nil {return nil ,_fbgc ;};_fbgc =_cbf .Track (_bfecd ,_ceded );if _fbgc !=nil {return nil ,_fbgc ;};_cfded ._cgdgc =_bfecd ;_cdgde ,_fbgc :=_bab .NewParser (rs );if _fbgc !=nil {return nil ,_fbgc ;};_cfded ._fdcebg =_cdgde ;
_gddga ,_fbgc :=_cfded .IsEncrypted ();if _fbgc !=nil {return nil ,_fbgc ;};if !_gddga {_fbgc =_cfded .loadStructure ();if _fbgc !=nil {return nil ,_fbgc ;};};return _cfded ,nil ;};func _dbbbb (_fdcda _bab .PdfObject ){_cgb .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fdcda ,_fdcda .String ());
if _bbgbcd ,_dddaa :=_fdcda .(*_bab .PdfObjectStream );_dddaa {_addaf ,_aebfaa :=_bab .DecodeStream (_bbgbcd );if _aebfaa !=nil {_cgb .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_aebfaa );return ;};_cgb .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_addaf );
}else if _gccc ,_eeedd :=_fdcda .(*_bab .PdfIndirectObject );_eeedd {_cgb .Log .Debug ("\u0025\u0054\u0020%\u0076",_gccc .PdfObject ,_gccc .PdfObject );_cgb .Log .Debug ("\u0025\u0073",_gccc .PdfObject .String ());};};

// GetTrailer returns the PDF's trailer dictionary.
func (_bdgaa *PdfReader )GetTrailer ()(*_bab .PdfObjectDictionary ,error ){_ffgfd :=_bdgaa ._fdcebg .GetTrailer ();if _ffgfd ==nil {return nil ,_cg .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ffgfd ,nil ;
};func (_eddg *PdfField )inherit (_ffgf func (*PdfField )bool )(bool ,error ){_gbce :=map[*PdfField ]bool {};_gdcbc :=false ;_dddcf :=_eddg ;for _dddcf !=nil {if _ ,_ceab :=_gbce [_dddcf ];_ceab {return false ,_cg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_eeee :=_ffgf (_dddcf );if _eeee {_gdcbc =true ;break ;};_gbce [_dddcf ]=true ;_dddcf =_dddcf .Parent ;};return _gdcbc ,nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_gggb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_agcgf ,_aagb :=color .(*PdfColorPattern );if !_aagb {_cgb .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _agcgf .Color ==nil {return color ,nil ;};if _gggb .UnderlyingCS ==nil {return nil ,_cg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _gggb .UnderlyingCS .ColorToRGB (_agcgf .Color );
};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bab .PdfIndirectObject ;SV *_bab .PdfIndirectObject ;};

// HasExtGState checks if ExtGState name is available.
func (_edbge *PdfPage )HasExtGState (name _bab .PdfObjectName )bool {if _edbge .Resources ==nil {return false ;};if _edbge .Resources .ExtGState ==nil {return false ;};_bbeaf ,_dgdbd :=_bab .TraceToDirectObject (_edbge .Resources .ExtGState ).(*_bab .PdfObjectDictionary );
if !_dgdbd {_cgb .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bab .TraceToDirectObject (_edbge .Resources .ExtGState ));
return false ;};_dabdc :=_bbeaf .Get (name );_baeca :=_dabdc !=nil ;return _baeca ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ffbe *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_agba :=NewPdfAnnotation ();_fcc :=&PdfAnnotationPrinterMark {};_fcc .PdfAnnotation =_agba ;_agba .SetContext (_fcc );return _fcc ;};func _fcbg (_fade *_bab .PdfObjectDictionary ,_ageb *fontCommon )(*pdfFontType3 ,error ){_ecfd :=_agffg (_ageb );
_aedca :=_fade .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aedca ==nil {_aedca =_bab .MakeInteger (0);};_ecfd .FirstChar =_aedca ;_cdbbc ,_bggaa :=_bab .GetIntVal (_aedca );if !_bggaa {_cgb .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aedca );
return nil ,_bab .ErrTypeError ;};_gfece :=_ea .CharCode (_cdbbc );_aedca =_fade .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aedca ==nil {_aedca =_bab .MakeInteger (255);};_ecfd .LastChar =_aedca ;_cdbbc ,_bggaa =_bab .GetIntVal (_aedca );
if !_bggaa {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aedca );return nil ,_bab .ErrTypeError ;
};_dgaea :=_ea .CharCode (_cdbbc );_aedca =_fade .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _aedca !=nil {_ecfd .Resources =_aedca ;};_aedca =_fade .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _aedca ==nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_aedca );
return nil ,_bab .ErrNotSupported ;};_ecfd .CharProcs =_aedca ;_aedca =_fade .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _aedca ==nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_aedca );
return nil ,_bab .ErrNotSupported ;};_ecfd .FontMatrix =_aedca ;_ecfd ._gfgce =make (map[_ea .CharCode ]float64 );_aedca =_fade .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aedca !=nil {_ecfd .Widths =_aedca ;_bcfde ,_ebdb :=_bab .GetArray (_aedca );
if !_ebdb {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aedca );return nil ,_bab .ErrTypeError ;
};_facdb ,_abegc :=_bcfde .ToFloat64Array ();if _abegc !=nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_abegc ;};if len (_facdb )!=int (_dgaea -_gfece +1){_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dgaea -_gfece +1,len (_facdb ));
return nil ,_bab .ErrRangeError ;};_eafe ,_ebdb :=_bab .GetArray (_ecfd .FontMatrix );if !_ebdb {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eafe );
return nil ,_abegc ;};_abcc ,_abegc :=_eafe .ToFloat64Array ();if _abegc !=nil {_cgb .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_abegc ;};_fggb :=_fg .NewMatrix (_abcc [0],_abcc [1],_abcc [2],_abcc [3],_abcc [4],_abcc [5]);for _ccacf ,_afad :=range _facdb {_ebdbd ,_ :=_fggb .Transform (_afad ,_afad );_ecfd ._gfgce [_gfece +_ea .CharCode (_ccacf )]=_ebdbd ;};};_ecfd .Encoding =_bab .TraceToDirectObject (_fade .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_efbg :=_fade .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _efbg !=nil {_ecfd ._debg =_bab .TraceToDirectObject (_efbg );_fcdc ,_fcecg :=_dbfge (_ecfd ._debg ,&_ecfd .fontCommon );if _fcecg !=nil {return nil ,_fcecg ;};_ecfd ._cfdd =_fcdc ;
};if _ffgea :=_ecfd ._cfdd ;_ffgea !=nil {_ecfd ._cdfa =_ea .NewCMapEncoder ("",nil ,_ffgea );}else {_ecfd ._cdfa =_ea .NewPdfDocEncoder ();};return _ecfd ,nil ;};

// Items returns all children outline items.
func (_ccggb *Outline )Items ()[]*OutlineItem {return _ccggb .Entries };

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ad .ReadSeeker )(*PdfReader ,error ){const _fccb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_gddac :=&PdfReader {_bcfc :rs ,_eccf :map[_bab .PdfObject ]struct{}{},_dccce :_eggca (),_geegb :false };
_ecda ,_bggdb :=_cagee ("\u0072");if _bggdb !=nil {return nil ,_bggdb ;};_bggdb =_cbf .Track (_ecda ,_fccb );if _bggdb !=nil {return nil ,_bggdb ;};_gddac ._cgdgc =_ecda ;_bcgc ,_bggdb :=_bab .NewParser (rs );if _bggdb !=nil {return nil ,_bggdb ;};_gddac ._fdcebg =_bcgc ;
_gadgg ,_bggdb :=_gddac .IsEncrypted ();if _bggdb !=nil {return nil ,_bggdb ;};if !_gadgg {_bggdb =_gddac .loadStructure ();if _bggdb !=nil {return nil ,_bggdb ;};};return _gddac ,nil ;};func _ffdb (_aabdb *_bab .PdfIndirectObject )(*PdfOutline ,error ){_dbcfee ,_fabgb :=_aabdb .PdfObject .(*_bab .PdfObjectDictionary );
if !_fabgb {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bdgde :=NewPdfOutline ();if _dbgbg :=_dbcfee .Get ("\u0054\u0079\u0070\u0065");
_dbgbg !=nil {_aeccf ,_cdcd :=_dbgbg .(*_bab .PdfObjectName );if _cdcd {if *_aeccf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_cgb .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_aeccf );
};};};if _dfcb :=_dbcfee .Get ("\u0043\u006f\u0075n\u0074");_dfcb !=nil {_bfgge ,_eaeg :=_bab .GetNumberAsInt64 (_dfcb );if _eaeg !=nil {return nil ,_eaeg ;};_bdgde .Count =&_bfgge ;};return _bdgde ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bgcfd *PdfPattern )IsTiling ()bool {return _bgcfd .PatternType ==1};

// ToPdfObject implements interface PdfModel.
func (_cdac *PdfAnnotationPopup )ToPdfObject ()_bab .PdfObject {_cdac .PdfAnnotation .ToPdfObject ();_dgbf :=_cdac ._bcc ;_bfb :=_dgbf .PdfObject .(*_bab .PdfObjectDictionary );_bfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bab .MakeName ("\u0050\u006f\u0070u\u0070"));
_bfb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cdac .Parent );_bfb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cdac .Open );return _dgbf ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_gbecb *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _ebgdb (_edbbf _bab .PdfObject )(string ,error ){_edbbf =_bab .TraceToDirectObject (_edbbf );switch _ecgba :=_edbbf .(type ){case *_bab .PdfObjectString :return _ecgba .Str (),nil ;
case *_bab .PdfObjectStream :_dbeb ,_cfeg :=_bab .DecodeStream (_ecgba );if _cfeg !=nil {return "",_cfeg ;};return string (_dbeb ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_edbbf );
};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bbbd *PdfPageResources )GetContainingPdfObject ()_bab .PdfObject {return _bbbd ._bdcac };

// ToPdfObject returns the PDF representation of the colorspace.
func (_bffg *PdfColorspaceSpecialPattern )ToPdfObject ()_bab .PdfObject {if _bffg .UnderlyingCS ==nil {return _bab .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_edf :=_bab .MakeArray (_bab .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_edf .Append (_bffg .UnderlyingCS .ToPdfObject ());
if _bffg ._bbac !=nil {_bffg ._bbac .PdfObject =_edf ;return _bffg ._bbac ;};return _edf ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_efdg :=NewPdfAnnotation ();_gfd :=&PdfAnnotation3D {};_gfd .PdfAnnotation =_efdg ;_efdg .SetContext (_gfd );return _gfd ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_faadg :=PdfColorDeviceRGB {r ,g ,b };return &_faadg ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dbcf *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject converts the font to a PDF representation.
func (_gbbg *pdfFontType0 )ToPdfObject ()_bab .PdfObject {if _gbbg ._aaff ==nil {_gbbg ._aaff =&_bab .PdfIndirectObject {};};_cbcfe :=_gbbg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gbbg ._aaff .PdfObject =_cbcfe ;if _gbbg .Encoding !=nil {_cbcfe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbbg .Encoding );
}else if _gbbg ._aecf !=nil {_cbcfe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbbg ._aecf .ToPdfObject ());};if _gbbg .DescendantFont !=nil {_cbcfe .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bab .MakeArray (_gbbg .DescendantFont .ToPdfObject ()));
};return _gbbg ._aaff ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fgbb :=NewPdfAnnotation ();_fdd :=&PdfAnnotationLine {};_fdd .PdfAnnotation =_fgbb ;_fdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgbb .SetContext (_fdd );return _fdd ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// Encoder returns the font's text encoder.
func (_cdca *PdfFont )Encoder ()_ea .TextEncoder {_eace :=_cdca .actualFont ();if _eace ==nil {_cgb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_cdca ._dfbfg );
return nil ;};return _eace .Encoder ();};