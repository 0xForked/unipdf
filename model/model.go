//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_d "bufio";_ccc "bytes";_gcf "crypto/rand";_be "crypto/sha1";_gc "crypto/x509";_a "encoding/binary";_dc "encoding/hex";_ac "errors";_b "fmt";_fe "github.com/unidoc/pkcs7";_dac "github.com/unidoc/unipdf/v3/common";_cd "github.com/unidoc/unipdf/v3/core";
_dcg "github.com/unidoc/unipdf/v3/core/security";_dacb "github.com/unidoc/unipdf/v3/core/security/crypt";_ef "github.com/unidoc/unipdf/v3/internal/cmap";_agb "github.com/unidoc/unipdf/v3/internal/imageutil";_ee "github.com/unidoc/unipdf/v3/internal/license";
_dce "github.com/unidoc/unipdf/v3/internal/sampling";_cg "github.com/unidoc/unipdf/v3/internal/textencoding";_ca "github.com/unidoc/unipdf/v3/internal/transform";_bcd "github.com/unidoc/unipdf/v3/model/internal/fonts";_ce "github.com/unidoc/unipdf/v3/model/sigutil";
_eb "github.com/unidoc/unipdf/v3/ps";_gee "github.com/unidoc/unitype";_dg "golang.org/x/xerrors";_beg "image";_gd "image/color";_ "image/gif";_ "image/png";_ag "io";_ge "io/ioutil";_fc "math";_e "math/rand";_ab "os";_f "regexp";_gb "sort";_fa "strconv";
_fg "strings";_bc "sync";_c "time";_df "unicode";_ff "unicode/utf8";);func _ffcfc (_gadcdg string )map[string ]string {_fcff :=_fdcac .Split (_gadcdg ,-1);_ddga :=map[string ]string {};for _ ,_bgded :=range _fcff {_cgbcc :=_gafca .FindStringSubmatch (_bgded );
if _cgbcc ==nil {continue ;};_fccega ,_fdfc :=_cgbcc [1],_cgbcc [2];_ddga [_fccega ]=_fdfc ;};return _ddga ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_egce *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ea :=NewPdfAction ();_cgf :=&PdfActionSetOCGState {};_cgf .PdfAction =_ea ;_ea .SetContext (_cgf );return _cgf ;};func (_ggb *PdfReader )loadAction (_bbgg _cd .PdfObject )(*PdfAction ,error ){if _fade ,_fdcea :=_cd .GetIndirect (_bbgg );
_fdcea {_edf ,_eecd :=_ggb .newPdfActionFromIndirectObject (_fade );if _eecd !=nil {return nil ,_eecd ;};return _edf ,nil ;}else if !_cd .IsNullObject (_bbgg ){return nil ,_ac .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func _cbbd (_dbcba _cd .PdfObject )(*PdfPageResourcesColorspaces ,error ){_cggba :=&PdfPageResourcesColorspaces {};if _eaacd ,_dbce :=_dbcba .(*_cd .PdfIndirectObject );_dbce {_cggba ._abcbf =_eaacd ;_dbcba =_eaacd .PdfObject ;};_eedb ,_fdcda :=_cd .GetDict (_dbcba );
if !_fdcda {return nil ,_ac .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cggba .Names =[]string {};_cggba .Colorspaces =map[string ]PdfColorspace {};for _ ,_feaed :=range _eedb .Keys (){_ddebe :=_eedb .Get (_feaed );
_cggba .Names =append (_cggba .Names ,string (_feaed ));_cbbef ,_befdd :=NewPdfColorspaceFromPdfObject (_ddebe );if _befdd !=nil {return nil ,_befdd ;};_cggba .Colorspaces [string (_feaed )]=_cbbef ;};return _cggba ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_geff *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _geff .AlternateSpace ==nil {return nil ,_ac .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _geff .AlternateSpace .ColorToRGB (color );};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cd .PdfObject ;MK _cd .PdfObject ;A _cd .PdfObject ;AA _cd .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbag *PdfPageResourcesColorspaces )ToPdfObject ()_cd .PdfObject {_ecfee :=_cd .MakeDict ();for _ ,_ddegf :=range _gbag .Names {_ecfee .Set (_cd .PdfObjectName (_ddegf ),_gbag .Colorspaces [_ddegf ].ToPdfObject ());};if _gbag ._abcbf !=nil {_gbag ._abcbf .PdfObject =_ecfee ;
return _gbag ._abcbf ;};return _ecfee ;};

// M returns the value of the magenta component of the color.
func (_ffec *PdfColorDeviceCMYK )M ()float64 {return _ffec [1]};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_gccdg *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cg .CharCode )(_ffef []rune ,_cfgde ,_aafba int ){_cgefc ,_cfgde ,_aafba :=_gccdg .CharcodesToStrings (charcodes );return []rune (_fg .Join (_cgefc ,"")),_cfgde ,_aafba ;};func (_afe *PdfReader )newPdfActionURIFromDict (_ebeg *_cd .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_ebeg .Get ("\u0055\u0052\u0049"),IsMap :_ebeg .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// Fill populates `form` with values provided by `provider`.
func (_abefc *PdfAcroForm )Fill (provider FieldValueProvider )error {return _abefc .fill (provider ,nil )};func (_cfgfc *pdfFontSimple )updateStandard14Font (){_cbec ,_bbbcg :=_cfgfc .Encoder ().(_cg .SimpleEncoder );if !_bbbcg {_dac .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cfgfc .Encoder (),_cfgfc );
return ;};_affd :=_cbec .Charcodes ();_cfgfc ._fafag =make (map[_cg .CharCode ]float64 ,len (_affd ));for _ ,_edbff :=range _affd {_gebe ,_ :=_cbec .CharcodeToRune (_edbff );_bacae ,_ :=_cfgfc ._caed .Read (_gebe );_cfgfc ._fafag [_edbff ]=_bacae .Wx ;
};};func (_cggc *PdfReader )newPdfActionTransFromDict (_dgg *_cd .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dgg .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// Y returns the value of the yellow component of the color.
func (_cgaba *PdfColorDeviceCMYK )Y ()float64 {return _cgaba [2]};func _ebaa (_fcde _cd .PdfObject )(*PdfFontDescriptor ,error ){_ggfed :=&PdfFontDescriptor {};_fcde =_cd .ResolveReference (_fcde );if _cbeg ,_aagf :=_fcde .(*_cd .PdfIndirectObject );_aagf {_ggfed ._decf =_cbeg ;
_fcde =_cbeg .PdfObject ;};_bgba ,_adcfa :=_cd .GetDict (_fcde );if !_adcfa {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fcde );
return nil ,_cd .ErrTypeError ;};if _gcfd :=_bgba .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gcfd !=nil {_ggfed .FontName =_gcfd ;}else {_dac .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_dgae ,_ :=_cd .GetName (_ggfed .FontName );if _ageec :=_bgba .Get ("\u0054\u0079\u0070\u0065");_ageec !=nil {_ceea ,_acda :=_ageec .(*_cd .PdfObjectName );if !_acda ||string (*_ceea )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dac .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ageec ,_dgae ,_ggfed .FontName );
};}else {_dac .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dgae ,_ggfed .FontName );
};_ggfed .FontFamily =_bgba .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_ggfed .FontStretch =_bgba .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_ggfed .FontWeight =_bgba .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_ggfed .Flags =_bgba .Get ("\u0046\u006c\u0061g\u0073");_ggfed .FontBBox =_bgba .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_ggfed .ItalicAngle =_bgba .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_ggfed .Ascent =_bgba .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_ggfed .Descent =_bgba .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_ggfed .Leading =_bgba .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_ggfed .CapHeight =_bgba .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_ggfed .XHeight =_bgba .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_ggfed .StemV =_bgba .Get ("\u0053\u0074\u0065m\u0056");_ggfed .StemH =_bgba .Get ("\u0053\u0074\u0065m\u0048");_ggfed .AvgWidth =_bgba .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_ggfed .MaxWidth =_bgba .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_ggfed .MissingWidth =_bgba .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_ggfed .FontFile =_bgba .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_ggfed .FontFile2 =_bgba .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_ggfed .FontFile3 =_bgba .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_ggfed .CharSet =_bgba .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_ggfed .Style =_bgba .Get ("\u0053\u0074\u0079l\u0065");_ggfed .Lang =_bgba .Get ("\u004c\u0061\u006e\u0067");
_ggfed .FD =_bgba .Get ("\u0046\u0044");_ggfed .CIDSet =_bgba .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _ggfed .Flags !=nil {if _dcga ,_agcdf :=_cd .GetIntVal (_ggfed .Flags );_agcdf {_ggfed ._acaaa =_dcga ;};};if _ggfed .MissingWidth !=nil {if _daadf ,_cegc :=_cd .GetNumberAsFloat (_ggfed .MissingWidth );
_cegc ==nil {_ggfed ._bedg =_daadf ;};};if _ggfed .FontFile !=nil {_eaag ,_cefca :=_cgfda (_ggfed .FontFile );if _cefca !=nil {return _ggfed ,_cefca ;};_dac .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_eaag );_ggfed .fontFile =_eaag ;
};if _ggfed .FontFile2 !=nil {_fdcg ,_ggbg :=_bcd .NewFontFile2FromPdfObject (_ggfed .FontFile2 );if _ggbg !=nil {return _ggfed ,_ggbg ;};_dac .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_fdcg .String ());_ggfed ._fccfb =&_fdcg ;
};return _ggfed ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cd .PdfObject ;B _cd .PdfObject ;};

// ImageToRGB convert an indexed image to RGB.
func (_gefb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_gefb .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_dcgdg :=_agb .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._deff ,img ._ddfef );_dedbe :=_dce .NewReader (img .getBase ());_dbea :=_dce .NewWriter (_dcgdg );var (_dadd uint32 ;_gecac int ;_ggfc error ;);for {_dadd ,_ggfc =_dedbe .ReadSample ();
if _ggfc ==_ag .EOF {break ;}else if _ggfc !=nil {return img ,_ggfc ;};_gecac =int (_dadd );_dac .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gecac ,N ,len (_gefb ._dbga ));
if (_gecac +1)*N > len (_gefb ._dbga ){_gecac =len (_gefb ._dbga )/N -1;_dac .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gecac );if _gecac < 0{_dac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ccdg :=_gecac *N ;_ccdg < (_gecac +1)*N ;_ccdg ++{if _ggfc =_dbea .WriteSample (uint32 (_gefb ._dbga [_ccdg ]));_ggfc !=nil {return img ,_ggfc ;};};};return _gefb .Base .ImageToRGB (_ebdb (&_dcgdg ));};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cd .PdfObjectString ;Q *_cd .PdfObjectInteger ;DS *_cd .PdfObjectString ;RV _cd .PdfObject ;MaxLen *_cd .PdfObjectInteger ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cd .PdfObject ;Mac _cd .PdfObject ;Unix _cd .PdfObject ;NewWindow _cd .PdfObject ;};func (_dcdgf *PdfReader )loadDSS ()(*DSS ,error ){if _dcdgf ._agbbba .GetCrypter ()!=nil &&!_dcdgf ._agbbba .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cddcg :=_dcdgf ._bbaed .Get ("\u0044\u0053\u0053");if _cddcg ==nil {return nil ,nil ;};_cbfgd ,_ :=_cd .GetIndirect (_cddcg );_cddcg =_cd .TraceToDirectObject (_cddcg );switch _affea :=_cddcg .(type ){case *_cd .PdfObjectNull :return nil ,nil ;case *_cd .PdfObjectDictionary :return _bbbc (_cbfgd ,_affea );
};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cddcg );};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_acecd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _acecd .baseFields ()._gdegf !=nil {return _acecd .baseFields ()._gdegf ;};if _bfbfgd :=_acecd ._fedf .getFontDescriptor ();_bfbfgd !=nil {return _bfbfgd ;};_dac .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_acecd );
return nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cd .PdfObject ;ColorSpace _cd .PdfObject ;Pattern _cd .PdfObject ;Shading _cd .PdfObject ;XObject _cd .PdfObject ;Font _cd .PdfObject ;ProcSet _cd .PdfObject ;Properties _cd .PdfObject ;_acae *_cd .PdfObjectDictionary ;
_egeca *PdfPageResourcesColorspaces ;};func (_fffd *PdfReader )newPdfAnnotationRichMediaFromDict (_fabb *_cd .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ecg :=&PdfAnnotationRichMedia {};_ecg .RichMediaSettings =_fabb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");
_ecg .RichMediaContent =_fabb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ecg ,nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cd .PdfObjectBool ;SigFlags *_cd .PdfObjectInteger ;CO *_cd .PdfObjectArray ;DR *PdfPageResources ;DA *_cd .PdfObjectString ;Q *_cd .PdfObjectInteger ;XFA _cd .PdfObject ;_cbfda *_cd .PdfIndirectObject ;
};func (_begf *PdfReader )newPdfAnnotationWidgetFromDict (_cce *_cd .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_cbga :=PdfAnnotationWidget {};_cbga .H =_cce .Get ("\u0048");_cbga .MK =_cce .Get ("\u004d\u004b");_cbga .A =_cce .Get ("\u0041");
_cbga .AA =_cce .Get ("\u0041\u0041");_cbga .BS =_cce .Get ("\u0042\u0053");_cbga .Parent =_cce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_cbga ,nil ;};func (_egd *PdfReader )newPdfAnnotationHighlightFromDict (_eabe *_cd .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_gab :=PdfAnnotationHighlight {};
_aeg ,_cbg :=_egd .newPdfAnnotationMarkupFromDict (_eabe );if _cbg !=nil {return nil ,_cbg ;};_gab .PdfAnnotationMarkup =_aeg ;_gab .QuadPoints =_eabe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gab ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fbgf *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_cbdb :=_dce .NewReader (img .getBase ());_bdgd :=_agb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._deff ,img ._ddfef );
_ecbgd :=_dce .NewWriter (_bdgd );_abdg :=_fc .Pow (2,float64 (img .BitsPerComponent ))-1;_fggea :=_fbgf .GetNumComponents ();_eggd :=make ([]uint32 ,_fggea );_febd :=make ([]float64 ,_fggea );for {_agcgd :=_cbdb .ReadSamples (_eggd );if _agcgd ==_ag .EOF {break ;
}else if _agcgd !=nil {return img ,_agcgd ;};for _gfgb :=0;_gfgb < _fggea ;_gfgb ++{_gacb :=float64 (_eggd [_gfgb ])/_abdg ;_febd [_gfgb ]=_gacb ;};_effgc ,_agcgd :=_fbgf .TintTransform .Evaluate (_febd );if _agcgd !=nil {return img ,_agcgd ;};for _ ,_bagd :=range _effgc {_bagd =_fc .Min (_fc .Max (0,_bagd ),1.0);
if _agcgd =_ecbgd .WriteSample (uint32 (_bagd *_abdg ));_agcgd !=nil {return img ,_agcgd ;};};};return _fbgf .AlternateSpace .ImageToRGB (_ebdb (&_bdgd ));};

// AddPages adds pages to be appended to the end of the source PDF.
func (_bee *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bda :=range pages {_bda =_bda .Duplicate ();_cafbfd (_bda );_bee ._edc =append (_bee ._edc ,_bda );};};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_dabf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_dabf ._egeca =colorspace ;};func (_fede fontCommon )asPdfObjectDictionary (_cbdd string )*_cd .PdfObjectDictionary {if _cbdd !=""&&_fede ._ecea !=""&&_cbdd !=_fede ._ecea {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_cbdd ,_fede );
}else if _cbdd ==""&&_fede ._ecea ==""{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fede );
}else if _fede ._ecea ==""{_fede ._ecea =_cbdd ;};_fbff :=_cd .MakeDict ();_fbff .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0046\u006f\u006e\u0074"));_fbff .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cd .MakeName (_fede ._bgdfc ));
_fbff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName (_fede ._ecea ));if _fede ._gdegf !=nil {_fbff .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_fede ._gdegf .ToPdfObject ());};if _fede ._befae !=nil {_fbff .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fede ._befae );
}else if _fede ._deeg !=nil {_fecb ,_fcefd :=_fede ._deeg .Stream ();if _fcefd !=nil {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_fcefd );
}else {_fbff .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fecb );};};return _fbff ;};func (_dacgd Image )getBase ()_agb .ImageBase {return _agb .NewImageBase (int (_dacgd .Width ),int (_dacgd .Height ),int (_dacgd .BitsPerComponent ),_dacgd .ColorComponents ,_dacgd .Data ,_dacgd ._deff ,_dacgd ._ddfef );
};func _afdbc (_bcaf _bcd .StdFont )pdfFontSimple {_gagfg :=_bcaf .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ecea :"\u0054\u0079\u0070e\u0031",_bgdfc :_bcaf .Name ()},_caed :_bcaf .GetMetricsTable (),_gbggb :&PdfFontDescriptor {FontName :_cd .MakeName (string (_gagfg .Name )),FontFamily :_cd .MakeName (_gagfg .Family ),FontWeight :_cd .MakeFloat (float64 (_gagfg .Weight )),Flags :_cd .MakeInteger (int64 (_gagfg .Flags )),FontBBox :_cd .MakeArrayFromFloats (_gagfg .BBox [:]),ItalicAngle :_cd .MakeFloat (_gagfg .ItalicAngle ),Ascent :_cd .MakeFloat (_gagfg .Ascent ),Descent :_cd .MakeFloat (_gagfg .Descent ),CapHeight :_cd .MakeFloat (_gagfg .CapHeight ),XHeight :_cd .MakeFloat (_gagfg .XHeight ),StemV :_cd .MakeFloat (_gagfg .StemV ),StemH :_cd .MakeFloat (_gagfg .StemH )},_becba :_bcaf .Encoder ()};
};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_egee _ag .ReadSeeker ;_beac *_cd .PdfParser ;_gfbg *PdfReader ;Reader *PdfReader ;_edc []*PdfPage ;_fcaf *PdfAcroForm ;_ddfd *DSS ;_edef _cd .XrefTable ;_ggae int64 ;_ffbd int ;_fba []_cd .PdfObject ;_facfe map[_cd .PdfObject ]struct{};
_bcg map[_cd .PdfObject ]int64 ;_ebb map[_cd .PdfObject ]struct{};_aegg map[_cd .PdfObject ]struct{};_gfa int64 ;_fbdg bool ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gdgg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edaa ,_gceb :=_cd .GetNumbersAsFloat (objects );
if _gceb !=nil {return nil ,_gceb ;};return _gdgg .ColorFromFloats (_edaa );};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cd .PdfObject ;};

// GetContentStreams returns the content stream as an array of strings.
func (_fdga *PdfPage )GetContentStreams ()([]string ,error ){_ebfb :=_fdga .GetContentStreamObjs ();var _gabga []string ;for _ ,_cabec :=range _ebfb {_cegd ,_cdagf :=_gabbe (_cabec );if _cdagf !=nil {return nil ,_cdagf ;};_gabga =append (_gabga ,_cegd );
};return _gabga ,nil ;};func (_gfgg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_adfcg *XObjectForm )SetContentStream (content []byte ,encoder _cd .StreamEncoder )error {_gcbcd :=content ;if encoder ==nil {if _adfcg .Filter !=nil {encoder =_adfcg .Filter ;}else {encoder =_cd .NewRawEncoder ();};};_bfaa ,_gdgbb :=encoder .EncodeBytes (_gcbcd );
if _gdgbb !=nil {return _gdgbb ;};_gcbcd =_bfaa ;_adfcg .Stream =_gcbcd ;_adfcg .Filter =encoder ;return nil ;};

// Subtype returns the font's "Subtype" field.
func (_dgbb *PdfFont )Subtype ()string {_gfef :=_dgbb .baseFields ()._ecea ;if _fgad ,_aceac :=_dgbb ._fedf .(*pdfFontType0 );_aceac {_gfef =_gfef +"\u003a"+_fgad .DescendantFont .Subtype ();};return _gfef ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bfea *PdfFont )ToPdfObject ()_cd .PdfObject {if _bfea ._fedf ==nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cd .MakeNull ();
};return _bfea ._fedf .ToPdfObject ();};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ddfa :=PdfColorDeviceGray (grayVal );return &_ddfa ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bff :=NewPdfAction ();_ffc :=&PdfActionImportData {};_ffc .PdfAction =_bff ;_bff .SetContext (_ffc );return _ffc ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cd .StreamEncoder ;FormType _cd .PdfObject ;BBox _cd .PdfObject ;Matrix _cd .PdfObject ;Resources *PdfPageResources ;Group _cd .PdfObject ;Ref _cd .PdfObject ;MetaData _cd .PdfObject ;PieceInfo _cd .PdfObject ;LastModified _cd .PdfObject ;
StructParent _cd .PdfObject ;StructParents _cd .PdfObject ;OPI _cd .PdfObject ;OC _cd .PdfObject ;Name _cd .PdfObject ;

// Stream data.
Stream []byte ;_cbbga *_cd .PdfObjectStream ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cd .PdfObject ;Name _cd .PdfObject ;State _cd .PdfObject ;StateModel _cd .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gcdee *Outline )ToPdfObject ()_cd .PdfObject {return _gcdee .ToPdfOutline ().ToPdfObject ()};

// ToInteger convert to an integer format.
func (_gbea *PdfColorLab )ToInteger (bits int )[3]uint32 {_ceca :=_fc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ceca *_gbea .L ()),uint32 (_ceca *_gbea .A ()),uint32 (_ceca *_gbea .B ())};};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_cgd :=NewPdfAnnotation ();_cga :=&PdfAnnotationSound {};_cga .PdfAnnotation =_cgd ;_cga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgd .SetContext (_cga );return _cga ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_cbcf *PdfPage )error ;};func (_fbef *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cd .StreamEncoder ;Intent _cd .PdfObject ;ImageMask _cd .PdfObject ;Mask _cd .PdfObject ;Matte _cd .PdfObject ;Decode _cd .PdfObject ;Interpolate _cd .PdfObject ;Alternatives _cd .PdfObject ;
SMask _cd .PdfObject ;SMaskInData _cd .PdfObject ;Name _cd .PdfObject ;StructParent _cd .PdfObject ;ID _cd .PdfObject ;OPI _cd .PdfObject ;Metadata _cd .PdfObject ;OC _cd .PdfObject ;Stream []byte ;_bgda *_cd .PdfObjectStream ;};func (_cdab PdfFont )actualFont ()pdfFont {if _cdab ._fedf ==nil {_dac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdab );
};return _cdab ._fedf ;};func (_cebd *PdfFilespec )getDict ()*_cd .PdfObjectDictionary {if _agab ,_gdcf :=_cebd ._gcea .(*_cd .PdfIndirectObject );_gdcf {_dbfe ,_daaf :=_agab .PdfObject .(*_cd .PdfObjectDictionary );if !_daaf {return nil ;};return _dbfe ;
}else if _cacb ,_becfg :=_cebd ._gcea .(*_cd .PdfObjectDictionary );_becfg {return _cacb ;}else {_dac .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cebd ._gcea );
return nil ;};};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_cd .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_dgef *_cd .PdfIndirectObject ;};

// AddFont adds a font dictionary to the Font resources.
func (_fcgbg *PdfPage )AddFont (name _cd .PdfObjectName ,font _cd .PdfObject )error {if _fcgbg .Resources ==nil {_fcgbg .Resources =NewPdfPageResources ();};if _fcgbg .Resources .Font ==nil {_fcgbg .Resources .Font =_cd .MakeDict ();};_eaga ,_bcafb :=_cd .TraceToDirectObject (_fcgbg .Resources .Font ).(*_cd .PdfObjectDictionary );
if !_bcafb {_dac .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cd .TraceToDirectObject (_fcgbg .Resources .Font ));
return _ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eaga .Set (name ,font );return nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cd .PdfObjectStream ;Data []byte ;_eecdd *_cd .PdfIndirectObject ;_ebff *_cd .PdfObjectStream ;};

// ToPdfObject implements interface PdfModel.
func (_ddfe *PdfAnnotationUnderline )ToPdfObject ()_cd .PdfObject {_ddfe .PdfAnnotation .ToPdfObject ();_ecaf :=_ddfe ._fef ;_faba :=_ecaf .PdfObject .(*_cd .PdfObjectDictionary );_ddfe .PdfAnnotationMarkup .appendToPdfDictionary (_faba );_faba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_faba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddfe .QuadPoints );return _ecaf ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ceagf *PdfWriter )SetRotation (rotate int64 )error {_ecffde ,_agfeb :=_cd .GetDict (_ceagf ._gcfcbc );if !_agfeb {return ErrTypeCheck ;};_ecffde .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cd .MakeInteger (rotate ));return nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_aad :=NewPdfAnnotation ();_fdb :=&PdfAnnotationPolyLine {};_fdb .PdfAnnotation =_aad ;_fdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aad .SetContext (_fdb );return _fdb ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cd .PdfObjectStream )(*XObjectForm ,error ){_bfecd :=&XObjectForm {};_bfecd ._cbbga =stream ;_gebae :=*(stream .PdfObjectDictionary );_ecbccc ,_aabbc :=_cd .NewEncoderFromStream (stream );if _aabbc !=nil {return nil ,_aabbc ;
};_bfecd .Filter =_ecbccc ;if _aafgcd :=_gebae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_aafgcd !=nil {_fbbaf ,_cegcg :=_aafgcd .(*_cd .PdfObjectName );if !_cegcg {return nil ,_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_fbbaf !="\u0046\u006f\u0072\u006d"{_dac .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ac .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _babee :=_gebae .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_babee !=nil {_bfecd .FormType =_babee ;};if _bafaf :=_gebae .Get ("\u0042\u0042\u006f\u0078");_bafaf !=nil {_bfecd .BBox =_bafaf ;};if _efaf :=_gebae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_efaf !=nil {_bfecd .Matrix =_efaf ;};if _gabeg :=_gebae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gabeg !=nil {_gabeg =_cd .TraceToDirectObject (_gabeg );_facaf ,_dbdbd :=_gabeg .(*_cd .PdfObjectDictionary );if !_dbdbd {_dac .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cd .ErrTypeError ;};_cbfee ,_cbcgb :=NewPdfPageResourcesFromDict (_facaf );if _cbcgb !=nil {_dac .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_cbcgb ;};_bfecd .Resources =_cbfee ;_dac .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_bfecd .Resources );};_bfecd .Group =_gebae .Get ("\u0047\u0072\u006fu\u0070");
_bfecd .Ref =_gebae .Get ("\u0052\u0065\u0066");_bfecd .MetaData =_gebae .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_bfecd .PieceInfo =_gebae .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bfecd .LastModified =_gebae .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_bfecd .StructParent =_gebae .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bfecd .StructParents =_gebae .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_bfecd .OPI =_gebae .Get ("\u004f\u0050\u0049");
_bfecd .OC =_gebae .Get ("\u004f\u0043");_bfecd .Name =_gebae .Get ("\u004e\u0061\u006d\u0065");_bfecd .Stream =stream .Stream ;return _bfecd ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_dcfc *PdfPage )AddExtGState (name _cd .PdfObjectName ,egs *_cd .PdfObjectDictionary )error {if _dcfc .Resources ==nil {_dcfc .Resources =NewPdfPageResources ();};if _dcfc .Resources .ExtGState ==nil {_dcfc .Resources .ExtGState =_cd .MakeDict ();
};_fbbgg ,_eaac :=_cd .TraceToDirectObject (_dcfc .Resources .ExtGState ).(*_cd .PdfObjectDictionary );if !_eaac {_dac .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cd .TraceToDirectObject (_dcfc .Resources .ExtGState ));
return _ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbbgg .Set (name ,egs );return nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ebf :=NewPdfAction ();_age :=&PdfActionGoToR {};_age .PdfAction =_ebf ;_ebf .SetContext (_age );return _age ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cd .PdfObject )(*PdfFilespec ,error ){_accdc :=&PdfFilespec {};var _ecfcf *_cd .PdfObjectDictionary ;if _feba ,_gfbde :=_cd .GetIndirect (obj );_gfbde {_accdc ._gcea =_feba ;_eeea ,_deda :=_cd .GetDict (_feba .PdfObject );
if !_deda {_dac .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cd .ErrTypeError ;};_ecfcf =_eeea ;}else if _fbadf ,_ffega :=_cd .GetDict (obj );
_ffega {_accdc ._gcea =_fbadf ;_ecfcf =_fbadf ;}else {_dac .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_cd .ErrTypeError ;};if _ecfcf ==nil {_dac .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ac .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bebb :=_ecfcf .Get ("\u0054\u0079\u0070\u0065");_bebb !=nil {_fecfa ,_fgeaa :=_bebb .(*_cd .PdfObjectName );if !_fgeaa {_dac .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bebb );
}else {if *_fecfa !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dac .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_fecfa );
};};};if _ceda :=_ecfcf .Get ("\u0046\u0053");_ceda !=nil {_accdc .FS =_ceda ;};if _abcb :=_ecfcf .Get ("\u0046");_abcb !=nil {_accdc .F =_abcb ;};if _bfbgf :=_ecfcf .Get ("\u0055\u0046");_bfbgf !=nil {_accdc .UF =_bfbgf ;};if _fffg :=_ecfcf .Get ("\u0044\u004f\u0053");
_fffg !=nil {_accdc .DOS =_fffg ;};if _gaffg :=_ecfcf .Get ("\u004d\u0061\u0063");_gaffg !=nil {_accdc .Mac =_gaffg ;};if _bgde :=_ecfcf .Get ("\u0055\u006e\u0069\u0078");_bgde !=nil {_accdc .Unix =_bgde ;};if _gddf :=_ecfcf .Get ("\u0049\u0044");_gddf !=nil {_accdc .ID =_gddf ;
};if _bdfe :=_ecfcf .Get ("\u0056");_bdfe !=nil {_accdc .V =_bdfe ;};if _acadb :=_ecfcf .Get ("\u0045\u0046");_acadb !=nil {_accdc .EF =_acadb ;};if _gfbab :=_ecfcf .Get ("\u0052\u0046");_gfbab !=nil {_accdc .RF =_gfbab ;};if _aedb :=_ecfcf .Get ("\u0044\u0065\u0073\u0063");
_aedb !=nil {_accdc .Desc =_aedb ;};if _eaebg :=_ecfcf .Get ("\u0043\u0049");_eaebg !=nil {_accdc .CI =_eaebg ;};return _accdc ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_adegc *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_geee pdfFontSimple )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){if _geee ._caed !=nil {_bafae ,_bgbd :=_geee ._caed .Read (r );if _bgbd {return _bafae ,true ;};};_babcf :=_geee .Encoder ();if _babcf ==nil {_dac .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_geee );
return _bcd .CharMetrics {},false ;};_egef ,_bgcgd :=_babcf .RuneToCharcode (r );if !_bgcgd {if r !=' '{_dac .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_geee );
};return _bcd .CharMetrics {},false ;};_abdfd ,_fcdg :=_geee .GetCharMetrics (_egef );return _abdfd ,_fcdg ;};func (_gffce *fontFile )parseASCIIPart (_dbbfa []byte )error {if len (_dbbfa )< 2||string (_dbbfa [:2])!="\u0025\u0021"{return _ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cbeb ,_ceabb ,_eeae :=_dcbd (_dbbfa );if _eeae !=nil {return _eeae ;};_ageb :=_ffcfc (_cbeb );_gffce ._dbcga =_ageb ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gffce ._dbcga ==""{_dac .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _ceabb !=""{_afaa ,_cbggf :=_fdfd (_ceabb );if _cbggf !=nil {return _cbggf ;};_eabf ,_cbggf :=_cg .NewCustomSimpleTextEncoder (_afaa ,nil );if _cbggf !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_cbggf );
return nil ;};_gffce ._facfg =_eabf ;};return nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_aebc *LTV )Enable (sig *PdfSignature ,extraCerts []*_gc .Certificate )error {if _cade :=_aebc .validateSig (sig );_cade !=nil {return _cade ;};_gdde ,_bfbgd :=_aebc .generateVRIKey (sig );if _bfbgd !=nil {return _bfbgd ;};if _ ,_becdf :=_aebc ._bgceb .VRI [_gdde ];
_becdf &&_aebc .SkipExisting {return nil ;};_acddg ,_bfbgd :=sig .GetCerts ();if _bfbgd !=nil {return _bfbgd ;};return _aebc .enable (_acddg ,extraCerts ,_gdde );};func (_cebde *PdfReader )loadStructure ()error {if _cebde ._agbbba .GetCrypter ()!=nil &&!_cebde ._agbbba .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgga :=_cebde ._agbbba .GetTrailer ();if _cgga ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_abecg ,_bbcfb :=_cgga .Get ("\u0052\u006f\u006f\u0074").(*_cd .PdfObjectReference );if !_bbcfb {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_cgga );
};_eaafd ,_gaffgb :=_cebde ._agbbba .LookupByReference (*_abecg );if _gaffgb !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gaffgb );
return _gaffgb ;};_ecefd ,_bbcfb :=_eaafd .(*_cd .PdfIndirectObject );if !_bbcfb {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_eaafd ,*_cgga );
return _ac .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fcadg ,_bbcfb :=(*_ecefd ).PdfObject .(*_cd .PdfObjectDictionary );if !_bbcfb {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ecefd .PdfObject );
return _ac .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dac .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fcadg );_dgbcc ,_bbcfb :=_fcadg .Get ("\u0050\u0061\u0067e\u0073").(*_cd .PdfObjectReference );
if !_bbcfb {return _ac .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_bdeeg ,_gaffgb :=_cebde ._agbbba .LookupByReference (*_dgbcc );
if _gaffgb !=nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gaffgb ;};_fdeba ,_bbcfb :=_bdeeg .(*_cd .PdfIndirectObject );if !_bbcfb {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_dac .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fdeba );return _ac .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eeged ,_bbcfb :=_fdeba .PdfObject .(*_cd .PdfObjectDictionary );if !_bbcfb {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fdeba );
return _ac .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_becde ,_bbcfb :=_cd .GetInt (_eeged .Get ("\u0043\u006f\u0075n\u0074"));if !_bbcfb {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ac .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bbcfb =_cd .GetName (_eeged .Get ("\u0054\u0079\u0070\u0065"));!_bbcfb {_dac .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_eeged .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0050\u0061\u0067e\u0073"));};if _fcfb ,_agcdcc :=_cd .GetInt (_eeged .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_agcdcc {_fceg :=int64 (*_fcfb );_cebde .Rotate =&_fceg ;};_cebde ._ccdaa =_abecg ;
_cebde ._bbaed =_fcadg ;_cebde ._edeag =_eeged ;_cebde ._bbed =_fdeba ;_cebde ._cgdbac =int (*_becde );_cebde ._ccacd =[]*_cd .PdfIndirectObject {};_caeab :=map[_cd .PdfObject ]struct{}{};_gaffgb =_cebde .buildPageList (_fdeba ,nil ,_caeab );if _gaffgb !=nil {return _gaffgb ;
};_dac .Log .Trace ("\u002d\u002d\u002d");_dac .Log .Trace ("\u0054\u004f\u0043");_dac .Log .Trace ("\u0050\u0061\u0067e\u0073");_dac .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_cebde ._ccacd ),_cebde ._ccacd );_cebde ._facac ,_gaffgb =_cebde .loadOutlines ();
if _gaffgb !=nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gaffgb );
return _gaffgb ;};_cebde .AcroForm ,_gaffgb =_cebde .loadForms ();if _gaffgb !=nil {return _gaffgb ;};_cebde .DSS ,_gaffgb =_cebde .loadDSS ();if _gaffgb !=nil {return _gaffgb ;};return nil ;};

// String returns a string representation of what flags are set.
func (_cabf FieldFlag )String ()string {_fcgb :="";if _cabf ==FieldFlagClear {_fcgb ="\u0043\u006c\u0065a\u0072";return _fcgb ;};if _cabf &FieldFlagReadOnly > 0{_fcgb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cabf &FieldFlagRequired > 0{_fcgb +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _cabf &FieldFlagNoExport > 0{_fcgb +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cabf &FieldFlagNoToggleToOff > 0{_fcgb +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cabf &FieldFlagRadio > 0{_fcgb +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _cabf &FieldFlagPushbutton > 0{_fcgb +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cabf &FieldFlagRadiosInUnision > 0{_fcgb +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cabf &FieldFlagMultiline > 0{_fcgb +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _cabf &FieldFlagPassword > 0{_fcgb +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cabf &FieldFlagFileSelect > 0{_fcgb +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cabf &FieldFlagDoNotScroll > 0{_fcgb +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _cabf &FieldFlagComb > 0{_fcgb +="\u007c\u0043\u006fm\u0062";};if _cabf &FieldFlagRichText > 0{_fcgb +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cabf &FieldFlagDoNotSpellCheck > 0{_fcgb +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _cabf &FieldFlagCombo > 0{_fcgb +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cabf &FieldFlagEdit > 0{_fcgb +="\u007c\u0045\u0064i\u0074";};if _cabf &FieldFlagSort > 0{_fcgb +="\u007c\u0053\u006fr\u0074";};if _cabf &FieldFlagMultiSelect > 0{_fcgb +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _cabf &FieldFlagCommitOnSelChange > 0{_fcgb +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _fg .Trim (_fcgb ,"\u007c");};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_facgd *PdfPage )ToPdfObject ()_cd .PdfObject {_gcgg :=_facgd ._adcdb ;_facgd .GetPageDict ();return _gcgg ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cd .PdfObject ,error );};func (_fff *PdfReader )newPdfAnnotationStrikeOut (_dcag *_cd .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_gcc :=PdfAnnotationStrikeOut {};_egad ,_fgfc :=_fff .newPdfAnnotationMarkupFromDict (_dcag );
if _fgfc !=nil {return nil ,_fgfc ;};_gcc .PdfAnnotationMarkup =_egad ;_gcc .QuadPoints =_dcag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcc ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cdaea *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_dffb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _acgec []_cg .TextEncoder ;var _ecffe _cg .CMapEncoder ;if _gfce :=_dffb .baseFields ()._deeg ;_gfce !=nil {_ecffe =_cg .NewCMapEncoder ("",nil ,_gfce );};_gegf :=_dffb .Encoder ();
if _gegf !=nil {switch _cebgc :=_gegf .(type ){case _cg .SimpleEncoder :_dddbc :=_cebgc .BaseName ();if _ ,_dgff :=_dabaa [_dddbc ];_dgff {_acgec =append (_acgec ,_gegf );};};};if len (_acgec )==0{if _dffb .baseFields ()._deeg !=nil {_acgec =append (_acgec ,_ecffe );
};if _gegf !=nil {_acgec =append (_acgec ,_gegf );};};var _cagd _ccc .Buffer ;var _edbaf int ;for _ ,_dfga :=range data {var _caceed bool ;for _ ,_effd :=range _acgec {if _cfbe :=_effd .Encode (string (_dfga ));len (_cfbe )> 0{_cagd .Write (_cfbe );_caceed =true ;
break ;};};if !_caceed {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dfga );
_edbaf ++;};};if _edbaf !=0{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_edbaf ,_dffb ,_acgec );
};return _cagd .Bytes (),_edbaf ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gcba *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=_gcba .GetNumComponents (){return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adff ,_ebdd :=_cd .GetNumbersAsFloat (objects );
if _ebdd !=nil {return nil ,_ebdd ;};return _gcba .ColorFromFloats (_adff );};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cd .PdfObject ;MK _cd .PdfObject ;A _cd .PdfObject ;AA _cd .PdfObject ;BS _cd .PdfObject ;Parent _cd .PdfObject ;_edb *PdfField ;_feec bool ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_eccdc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _eccdc .RunesToCharcodeBytes ([]rune (str ));};func _gabbe (_dgeef _cd .PdfObject )(string ,error ){_dgeef =_cd .TraceToDirectObject (_dgeef );switch _gbaa :=_dgeef .(type ){case *_cd .PdfObjectString :return _gbaa .Str (),nil ;
case *_cd .PdfObjectStream :_fcfce ,_bfbbe :=_cd .DecodeStream (_gbaa );if _bfbbe !=nil {return "",_bfbbe ;};return string (_fcfce ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_dgeef );
};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bfegg *pdfFontSimple )ToPdfObject ()_cd .PdfObject {if _bfegg ._feeb ==nil {_bfegg ._feeb =&_cd .PdfIndirectObject {};};_gdcd :=_bfegg .baseFields ().asPdfObjectDictionary ("");_bfegg ._feeb .PdfObject =_gdcd ;if _bfegg .FirstChar !=nil {_gdcd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bfegg .FirstChar );
};if _bfegg .LastChar !=nil {_gdcd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bfegg .LastChar );};if _bfegg .Widths !=nil {_gdcd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bfegg .Widths );};if _bfegg .Encoding !=nil {_gdcd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfegg .Encoding );
}else if _bfegg ._acgfg !=nil {_ccacfc :=_bfegg ._acgfg .ToPdfObject ();if _ccacfc !=nil {_gdcd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ccacfc );};};return _bfegg ._feeb ;};

// ToInteger convert to an integer format.
func (_gcee *PdfColorDeviceGray )ToInteger (bits int )uint32 {_adbc :=_fc .Pow (2,float64 (bits ))-1;return uint32 (_adbc *_gcee .Val ());};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gadcd *PdfColorspaceCalRGB )ToPdfObject ()_cd .PdfObject {_fbbd :=&_cd .PdfObjectArray {};_fbbd .Append (_cd .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_ecbfe :=_cd .MakeDict ();if _gadcd .WhitePoint !=nil {_fcec :=_cd .MakeArray (_cd .MakeFloat (_gadcd .WhitePoint [0]),_cd .MakeFloat (_gadcd .WhitePoint [1]),_cd .MakeFloat (_gadcd .WhitePoint [2]));
_ecbfe .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fcec );}else {_dac .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gadcd .BlackPoint !=nil {_fcece :=_cd .MakeArray (_cd .MakeFloat (_gadcd .BlackPoint [0]),_cd .MakeFloat (_gadcd .BlackPoint [1]),_cd .MakeFloat (_gadcd .BlackPoint [2]));_ecbfe .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fcece );
};if _gadcd .Gamma !=nil {_edgbc :=_cd .MakeArray (_cd .MakeFloat (_gadcd .Gamma [0]),_cd .MakeFloat (_gadcd .Gamma [1]),_cd .MakeFloat (_gadcd .Gamma [2]));_ecbfe .Set ("\u0047\u0061\u006dm\u0061",_edgbc );};if _gadcd .Matrix !=nil {_dfac :=_cd .MakeArray (_cd .MakeFloat (_gadcd .Matrix [0]),_cd .MakeFloat (_gadcd .Matrix [1]),_cd .MakeFloat (_gadcd .Matrix [2]),_cd .MakeFloat (_gadcd .Matrix [3]),_cd .MakeFloat (_gadcd .Matrix [4]),_cd .MakeFloat (_gadcd .Matrix [5]),_cd .MakeFloat (_gadcd .Matrix [6]),_cd .MakeFloat (_gadcd .Matrix [7]),_cd .MakeFloat (_gadcd .Matrix [8]));
_ecbfe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfac );};_fbbd .Append (_ecbfe );if _gadcd ._adcg !=nil {_gadcd ._adcg .PdfObject =_fbbd ;return _gadcd ._adcg ;};return _fbbd ;};

// A returns the value of the A component of the color.
func (_eega *PdfColorLab )A ()float64 {return _eega [1]};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ecbd *OutlineItem )Insert (index uint ,item *OutlineItem ){_adgdg :=uint (len (_ecbd .Entries ));if index > _adgdg {index =_adgdg ;};_ecbd .Entries =append (_ecbd .Entries [:index ],append ([]*OutlineItem {item },_ecbd .Entries [index :]...)...);
};

// ToInteger convert to an integer format.
func (_ddee *PdfColorCalGray )ToInteger (bits int )uint32 {_efdc :=_fc .Pow (2,float64 (bits ))-1;return uint32 (_efdc *_ddee .Val ());};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_egbf *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcdac ,_abaa :=_cd .GetNumbersAsFloat (objects );
if _abaa !=nil {return nil ,_abaa ;};return _egbf .ColorFromFloats (_gcdac );};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cd .StreamEncoder )(*XObjectImage ,error ){_bcfgc :=NewXObjectImage ();return UpdateXObjectImageFromImage (_bcfgc ,img ,cs ,encoder );};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_edfd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _edfd .Alternate ==nil {_dac .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _edfd .N ==1{_dac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_eccb :=NewPdfColorspaceDeviceGray ();return _eccb .ColorToRGB (color );}else if _edfd .N ==3{_dac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _edfd .N ==4{_dac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_eagbf :=NewPdfColorspaceDeviceCMYK ();return _eagbf .ColorToRGB (color );}else {return nil ,_ac .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dac .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_edfd );
return _edfd .Alternate .ColorToRGB (color );};func _dcbd (_agae []byte )(_dceb ,_daca string ,_dcfgg error ){_dac .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_agae ));_dcgbe :=_gagc .FindIndex (_agae );
if _dcgbe ==nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_cd .ErrTypeError ;
};_acefd :=_dcgbe [1];_dffc :=_fg .Index (string (_agae [_acefd :]),_febda );if _dffc < 0{_dceb =string (_agae [_acefd :]);return _dceb ,"",nil ;};_fafg :=_acefd +_dffc ;_dceb =string (_agae [_acefd :_fafg ]);_dffce :=_fafg ;_dffc =_fg .Index (string (_agae [_dffce :]),_gecaf );
if _dffc < 0{_dac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dcfgg );return "","",_cd .ErrTypeError ;};_afaeb :=_dffce +_dffc ;
_daca =string (_agae [_dffce :_afaeb ]);return _dceb ,_daca ,nil ;};func _adeb (_cdgda *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_cdgda }};func (_dfbec *pdfFontSimple )addEncoding ()error {var (_bffea string ;_ecabf map[_cg .CharCode ]_cg .GlyphName ;
_bbabbg _cg .SimpleEncoder ;);if _dfbec .Encoder ()!=nil {_ddfg ,_dcae :=_dfbec .Encoder ().(_cg .SimpleEncoder );if _dcae &&_ddfg !=nil {_bffea =_ddfg .BaseName ();};};if _dfbec .Encoding !=nil {_ecadc ,_bcff ,_abebd :=_dfbec .getFontEncoding ();if _abebd !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfbec ._bgdfc ,_dfbec ._ecea ,_dfbec .Encoding ,_dfbec .Encoding ,_abebd );
return _abebd ;};if _ecadc !=""{_bffea =_ecadc ;};_ecabf =_bcff ;_bbabbg ,_abebd =_cg .NewSimpleTextEncoder (_bffea ,_ecabf );if _abebd !=nil {return _abebd ;};};if _bbabbg ==nil {_eebbf :=_dfbec ._gdegf ;if _eebbf !=nil {switch _dfbec ._ecea {case "\u0054\u0079\u0070e\u0031":if _eebbf .fontFile !=nil &&_eebbf .fontFile ._facfg !=nil {_dac .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_bbabbg =_eebbf .fontFile ._facfg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _eebbf ._fccfb !=nil {_dac .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_caaec ,_eaddd :=_eebbf ._fccfb .MakeEncoder ();
if _eaddd ==nil {_bbabbg =_caaec ;};};};};};if _bbabbg !=nil {if _ecabf !=nil {_dac .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecabf ,_dfbec .baseFields ());
_bbabbg =_cg .ApplyDifferences (_bbabbg ,_ecabf );};_dfbec .SetEncoder (_bbabbg );};return nil ;};func (_dead *PdfReader )newPdfAnnotationLineFromDict (_egag *_cd .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_effe :=PdfAnnotationLine {};_bcc ,_bfe :=_dead .newPdfAnnotationMarkupFromDict (_egag );
if _bfe !=nil {return nil ,_bfe ;};_effe .PdfAnnotationMarkup =_bcc ;_effe .L =_egag .Get ("\u004c");_effe .BS =_egag .Get ("\u0042\u0053");_effe .LE =_egag .Get ("\u004c\u0045");_effe .IC =_egag .Get ("\u0049\u0043");_effe .LL =_egag .Get ("\u004c\u004c");
_effe .LLE =_egag .Get ("\u004c\u004c\u0045");_effe .Cap =_egag .Get ("\u0043\u0061\u0070");_effe .IT =_egag .Get ("\u0049\u0054");_effe .LLO =_egag .Get ("\u004c\u004c\u004f");_effe .CP =_egag .Get ("\u0043\u0050");_effe .Measure =_egag .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_effe .CO =_egag .Get ("\u0043\u004f");return &_effe ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_bdc :=NewPdfAnnotation ();_cgef :=&PdfAnnotationMovie {};_cgef .PdfAnnotation =_bdc ;_bdc .SetContext (_cgef );return _cgef ;};func _fgbca (_cecb []byte )bool {if len (_cecb )< 4{return true ;};for _gbcgc :=range _cecb [:4]{_bgca :=rune (_gbcgc );
if !_df .Is (_df .ASCII_Hex_Digit ,_bgca )&&!_df .IsSpace (_bgca ){return true ;};};return false ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func _gaca (_baecc *PdfField )[]*PdfField {_afgca :=[]*PdfField {_baecc };for _ ,_dcbdb :=range _baecc .Kids {_afgca =append (_afgca ,_gaca (_dcbdb )...);
};return _afgca ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cd .PdfObject ;V _cd .PdfObject ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_bgdb *PdfReader )newPdfAnnotationSoundFromDict (_agfe *_cd .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_daeg :=PdfAnnotationSound {};_gaefg ,_fgcg :=_bgdb .newPdfAnnotationMarkupFromDict (_agfe );
if _fgcg !=nil {return nil ,_fgcg ;};_daeg .PdfAnnotationMarkup =_gaefg ;_daeg .Name =_agfe .Get ("\u004e\u0061\u006d\u0065");_daeg .Sound =_agfe .Get ("\u0053\u006f\u0075n\u0064");return &_daeg ,nil ;};func (_fabbf *DSS )generateHashMaps ()error {_bbae ,_edafe :=_fabbf .generateHashMap (_fabbf .Certs );
if _edafe !=nil {return _edafe ;};_bgge ,_edafe :=_fabbf .generateHashMap (_fabbf .OCSPs );if _edafe !=nil {return _edafe ;};_aef ,_edafe :=_fabbf .generateHashMap (_fabbf .CRLs );if _edafe !=nil {return _edafe ;};_fabbf ._cgae =_bbae ;_fabbf ._gcfcb =_bgge ;
_fabbf ._cbbe =_aef ;return nil ;};func _fecd (_efaa _cd .PdfObject )(*PdfBorderStyle ,error ){_ccfd :=&PdfBorderStyle {};_ccfd ._fcefa =_efaa ;var _bgg *_cd .PdfObjectDictionary ;_efaa =_cd .TraceToDirectObject (_efaa );_bgg ,_aed :=_efaa .(*_cd .PdfObjectDictionary );
if !_aed {return nil ,_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _cffd :=_bgg .Get ("\u0054\u0079\u0070\u0065");_cffd !=nil {_aafd ,_dcfe :=_cffd .(*_cd .PdfObjectName );if !_dcfe {_dac .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_cffd );
}else {if *_aafd !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dac .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_aafd );};};};if _fgd :=_bgg .Get ("\u0057");
_fgd !=nil {_bfdcf ,_ggcg :=_cd .GetNumberAsFloat (_fgd );if _ggcg !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ggcg );return nil ,_ggcg ;};_ccfd .W =&_bfdcf ;
};if _bagb :=_bgg .Get ("\u0053");_bagb !=nil {_aeeed ,_gaegb :=_bagb .(*_cd .PdfObjectName );if !_gaegb {return nil ,_ac .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ddeca BorderStyle ;switch *_aeeed {case "\u0053":_ddeca =BorderStyleSolid ;case "\u0044":_ddeca =BorderStyleDashed ;case "\u0042":_ddeca =BorderStyleBeveled ;case "\u0049":_ddeca =BorderStyleInset ;case "\u0055":_ddeca =BorderStyleUnderline ;default:_dac .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_aeeed );
return nil ,_ac .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_ccfd .S =&_ddeca ;};if _bdcg :=_bgg .Get ("\u0044");_bdcg !=nil {_bbc ,_bgcg :=_bdcg .(*_cd .PdfObjectArray );
if !_bgcg {_dac .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bdcg );return nil ,_ac .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_egdf ,_debg :=_bbc .ToIntegerArray ();if _debg !=nil {_dac .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_debg );
return nil ,_debg ;};_ccfd .D =&_egdf ;};return _ccfd ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_dagb :=PdfColorDeviceRGB {r ,g ,b };return &_dagb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ccegd *PdfShadingType4 )ToPdfObject ()_cd .PdfObject {_ccegd .PdfShading .ToPdfObject ();_faaga ,_cbca :=_ccegd .getShadingDict ();if _cbca !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ccegd .BitsPerCoordinate !=nil {_faaga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ccegd .BitsPerCoordinate );};if _ccegd .BitsPerComponent !=nil {_faaga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ccegd .BitsPerComponent );
};if _ccegd .BitsPerFlag !=nil {_faaga .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ccegd .BitsPerFlag );};if _ccegd .Decode !=nil {_faaga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ccegd .Decode );};if _ccegd .Function !=nil {if len (_ccegd .Function )==1{_faaga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ccegd .Function [0].ToPdfObject ());
}else {_adbaa :=_cd .MakeArray ();for _ ,_bedb :=range _ccegd .Function {_adbaa .Append (_bedb .ToPdfObject ());};_faaga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adbaa );};};return _ccegd ._fdadf ;};func (_caggf *PdfWriter )writeBytes (_cbbcc []byte ){if _caggf ._dfgef !=nil {return ;
};_bgcfb ,_gbfcfa :=_caggf ._ffbdb .Write (_cbbcc );_caggf ._gefee +=int64 (_bgcfb );_caggf ._dfgef =_gbfcfa ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_cdfb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};type fontFile struct{_dbcga string ;_bfgg string ;_facfg _cg .SimpleEncoder ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cd .PdfObject ;IsMap _cd .PdfObject ;};func _bfdd (_ccgc *_cd .PdfObjectDictionary ,_debb *fontCommon ,_gedg _cg .TextEncoder )(*pdfFontSimple ,error ){_bcdg :=_fedc (_debb );_bcdg ._becba =_gedg ;if _gedg ==nil {_gdfdg :=_ccgc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _gdfdg ==nil {_gdfdg =_cd .MakeInteger (0);};_bcdg .FirstChar =_gdfdg ;_baca ,_fdfa :=_cd .GetIntVal (_gdfdg );if !_fdfa {_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gdfdg );
return nil ,_cd .ErrTypeError ;};_dageg :=_cg .CharCode (_baca );_gdfdg =_ccgc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gdfdg ==nil {_gdfdg =_cd .MakeInteger (255);};_bcdg .LastChar =_gdfdg ;_baca ,_fdfa =_cd .GetIntVal (_gdfdg );if !_fdfa {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gdfdg );
return nil ,_cd .ErrTypeError ;};_dgedf :=_cg .CharCode (_baca );_bcdg ._fafag =make (map[_cg .CharCode ]float64 );_gdfdg =_ccgc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gdfdg !=nil {_bcdg .Widths =_gdfdg ;_befc ,_ccdda :=_cd .GetArray (_gdfdg );
if !_ccdda {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gdfdg );return nil ,_cd .ErrTypeError ;
};_bgff ,_dgdbe :=_befc .ToFloat64Array ();if _dgdbe !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_dgdbe ;};if len (_bgff )!=int (_dgedf -_dageg +1){_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dgedf -_dageg +1,len (_bgff ));
return nil ,_cd .ErrRangeError ;};for _bfac ,_bbeb :=range _bgff {_bcdg ._fafag [_dageg +_cg .CharCode (_bfac )]=_bbeb ;};};};_bcdg .Encoding =_cd .TraceToDirectObject (_ccgc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bcdg ,nil ;
};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_dbfb *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_dbfb .ToPdfOutline ().PdfOutlineTreeNode ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cbegee *PdfPageResources )GetShadingByName (keyName _cd .PdfObjectName )(*PdfShading ,bool ){if _cbegee .Shading ==nil {return nil ,false ;};_acbc ,_fageg :=_cd .TraceToDirectObject (_cbegee .Shading ).(*_cd .PdfObjectDictionary );if !_fageg {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbegee .Shading );
return nil ,false ;};if _edfg :=_acbc .Get (keyName );_edfg !=nil {_fefed ,_deaag :=_ffag (_edfg );if _deaag !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_deaag );
return nil ,false ;};return _fefed ,true ;};return nil ,false ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_afc :=NewPdfAnnotation ();_facb :=&PdfAnnotation3D {};_facb .PdfAnnotation =_afc ;_afc .SetContext (_facb );return _facb ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_agbda *PdfReader )GetEncryptionMethod ()string {_eegea :=_agbda ._agbbba .GetCrypter ();return _eegea .String ();};func _agacg (_bdbaf _cd .PdfObject ,_cgaa bool )(*PdfFont ,error ){_egceb ,_debf ,_eagd :=_cafee (_bdbaf );if _eagd !=nil {if _eagd ==ErrType1CFontNotSupported {_bccabb ,_fbaed :=_bfdd (_egceb ,_debf ,nil );
if _fbaed !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_debf ,_fbaed );
return nil ,_eagd ;};return &PdfFont {_fedf :_bccabb },_eagd ;};return nil ,_eagd ;};_gbfde :=&PdfFont {};switch _debf ._ecea {case "\u0054\u0079\u0070e\u0030":if !_cgaa {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_debf );
return nil ,_ac .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dfad ,_gdgf :=_fgef (_egceb ,_debf );if _gdgf !=nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_debf ,_gdgf );
return nil ,_gdgf ;};_gbfde ._fedf =_dfad ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _gdaf *pdfFontSimple ;_dacga ,_dcba :=_bcd .NewStdFontByName (_bcd .StdFontName (_debf ._bgdfc ));
if _dcba {_fgbb :=_afdbc (_dacga );_gbfde ._fedf =&_fgbb ;_dbeef :=_cd .TraceToDirectObject (_fgbb .ToPdfObject ());_bgga ,_eeeac ,_eadc :=_cafee (_dbeef );if _eadc !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_debf ,_fgbb );
return nil ,_eadc ;};for _ ,_agada :=range _egceb .Keys (){_bgga .Set (_agada ,_egceb .Get (_agada ));};_gdaf ,_eadc =_bfdd (_bgga ,_eeeac ,_fgbb ._becba );if _eadc !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_debf ,_fgbb );
return nil ,_eadc ;};_gdaf ._fafag =_fgbb ._fafag ;_gdaf ._caed =_fgbb ._caed ;}else {_gdaf ,_eagd =_bfdd (_egceb ,_debf ,nil );if _eagd !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_debf ,_eagd );
return nil ,_eagd ;};};_eagd =_gdaf .addEncoding ();if _eagd !=nil {return nil ,_eagd ;};if _dcba {_gdaf .updateStandard14Font ();};if _dcba &&_gdaf ._acgfg ==nil &&_gdaf ._becba ==nil {_dac .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdaf );
_dac .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dacga );};if len (_gdaf ._fafag )==0{_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_gdaf );};_gbfde ._fedf =_gdaf ;
case "\u0054\u0079\u0070e\u0033":_gcbe ,_afgb :=_cfcd (_egceb ,_debf );if _afgb !=nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_afgb );
return nil ,_afgb ;};_gbfde ._fedf =_gcbe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ccfe ,_aaff :=_gecb (_egceb ,_debf );if _aaff !=nil {_dac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_aaff );
return nil ,_aaff ;};_gbfde ._fedf =_ccfe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eccd ,_fabe :=_bgbga (_egceb ,_debf );if _fabe !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_debf ,_fabe );
return nil ,_fabe ;};_gbfde ._fedf =_eccd ;default:_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_debf );
return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_debf );};return _gbfde ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_gaddb *PdfColorspaceICCBased )ToPdfObject ()_cd .PdfObject {_agcdc :=&_cd .PdfObjectArray {};_agcdc .Append (_cd .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cacf *_cd .PdfObjectStream ;if _gaddb ._ebff !=nil {_cacf =_gaddb ._ebff ;
}else {_cacf =&_cd .PdfObjectStream {};};_dfagf :=_cd .MakeDict ();_dfagf .Set ("\u004e",_cd .MakeInteger (int64 (_gaddb .N )));if _gaddb .Alternate !=nil {_dfagf .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_gaddb .Alternate .ToPdfObject ());};
if _gaddb .Metadata !=nil {_dfagf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gaddb .Metadata );};if _gaddb .Range !=nil {var _acaf []_cd .PdfObject ;for _ ,_adcf :=range _gaddb .Range {_acaf =append (_acaf ,_cd .MakeFloat (_adcf ));};_dfagf .Set ("\u0052\u0061\u006eg\u0065",_cd .MakeArray (_acaf ...));
};_dfagf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_gaddb .Data ))));_cacf .Stream =_gaddb .Data ;_cacf .PdfObjectDictionary =_dfagf ;_agcdc .Append (_cacf );if _gaddb ._eecdd !=nil {_gaddb ._eecdd .PdfObject =_agcdc ;return _gaddb ._eecdd ;
};return _agcdc ;};

// ToPdfObject implements interface PdfModel.
func (_cab *PdfActionGoToR )ToPdfObject ()_cd .PdfObject {_cab .PdfAction .ToPdfObject ();_agf :=_cab ._cea ;_gdb :=_agf .PdfObject .(*_cd .PdfObjectDictionary );_gdb .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeGoToR )));if _cab .F !=nil {_gdb .Set ("\u0046",_cab .F .ToPdfObject ());
};_gdb .SetIfNotNil ("\u0044",_cab .D );_gdb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cab .NewWindow );return _agf ;};

// G returns the value of the green component of the color.
func (_dbge *PdfColorDeviceRGB )G ()float64 {return _dbge [1]};func _afgc (_fgda ,_cdbf string )string {if _fg .Contains (_fgda ,"\u002b"){_fabgc :=_fg .Split (_fgda ,"\u002b");if len (_fabgc )==2{_fgda =_fabgc [1];};};return _cdbf +"\u002b"+_fgda ;};func (_ggcgf SignatureValidationResult )String ()string {var _cafbfa _ccc .Buffer ;
_cafbfa .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ggcgf .Name ));if _ggcgf .Date ._feafed > 0{_cafbfa .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ggcgf .Date .ToGoTime ().String ()));}else {_cafbfa .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ggcgf .Reason )> 0{_cafbfa .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ggcgf .Reason ));}else {_cafbfa .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_ggcgf .Location )> 0{_cafbfa .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ggcgf .Location ));}else {_cafbfa .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ggcgf .ContactInfo )> 0{_cafbfa .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ggcgf .ContactInfo ));}else {_cafbfa .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_cafbfa .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ggcgf .Fields )));if _ggcgf .IsSigned {_cafbfa .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_cafbfa .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _ggcgf .IsVerified {_cafbfa .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_cafbfa .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _ggcgf .IsTrusted {_cafbfa .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_cafbfa .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_ggcgf .GeneralizedTime .IsZero (){_cafbfa .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ggcgf .GeneralizedTime .String ()));
};return _cafbfa .String ();};func (_bcad *PdfReader )newPdfPageFromDict (_egaf *_cd .PdfObjectDictionary )(*PdfPage ,error ){_cfbga :=NewPdfPage ();_cfbga ._dbeb =_egaf ;_bdggd :=*_egaf ;_abgfb ,_cddd :=_bdggd .Get ("\u0054\u0079\u0070\u0065").(*_cd .PdfObjectName );
if !_cddd {return nil ,_ac .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_abgfb !="\u0050\u0061\u0067\u0065"{return nil ,_ac .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _gadfff :=_bdggd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_gadfff !=nil {_cfbga .Parent =_gadfff ;};if _ffcfg :=_bdggd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_ffcfg !=nil {_eggfb ,_bebba :=_cd .GetString (_ffcfg );
if !_bebba {return nil ,_ac .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_gggff ,_agfec :=NewPdfDate (_eggfb .Str ());if _agfec !=nil {return nil ,_agfec ;};_cfbga .LastModified =&_gggff ;};if _fgfcc :=_bdggd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fgfcc !=nil &&!_cd .IsNullObject (_fgfcc ){_fbdgc ,_edeg :=_cd .GetDict (_fgfcc );
if !_edeg {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fgfcc );};var _eaffe error ;_cfbga .Resources ,_eaffe =NewPdfPageResourcesFromDict (_fbdgc );
if _eaffe !=nil {return nil ,_eaffe ;};}else {_bbgde ,_bbdad :=_cfbga .getParentResources ();if _bbdad !=nil {return nil ,_bbdad ;};if _bbgde ==nil {_bbgde =NewPdfPageResources ();};_cfbga .Resources =_bbgde ;};if _gddfd :=_bdggd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gddfd !=nil {_gecab ,_ccffa :=_cd .GetArray (_gddfd );if !_ccffa {return nil ,_ac .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _caaddg error ;
_cfbga .MediaBox ,_caaddg =NewPdfRectangle (*_gecab );if _caaddg !=nil {return nil ,_caaddg ;};};if _dfab :=_bdggd .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_dfab !=nil {_bada ,_decgd :=_cd .GetArray (_dfab );if !_decgd {return nil ,_ac .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _cadd error ;_cfbga .CropBox ,_cadd =NewPdfRectangle (*_bada );if _cadd !=nil {return nil ,_cadd ;};};if _cddgf :=_bdggd .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cddgf !=nil {_cbefb ,_gaaaa :=_cd .GetArray (_cddgf );if !_gaaaa {return nil ,_ac .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _accfa error ;_cfbga .BleedBox ,_accfa =NewPdfRectangle (*_cbefb );if _accfa !=nil {return nil ,_accfa ;};};if _adcdg :=_bdggd .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_adcdg !=nil {_bcgf ,_eac :=_cd .GetArray (_adcdg );if !_eac {return nil ,_ac .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gcacb error ;_cfbga .TrimBox ,_gcacb =NewPdfRectangle (*_bcgf );if _gcacb !=nil {return nil ,_gcacb ;};};if _aaagc :=_bdggd .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_aaagc !=nil {_bdbde ,_fggeg :=_cd .GetArray (_aaagc );if !_fggeg {return nil ,_ac .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _cbac error ;_cfbga .ArtBox ,_cbac =NewPdfRectangle (*_bdbde );if _cbac !=nil {return nil ,_cbac ;};};if _eadfc :=_bdggd .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_eadfc !=nil {_cfbga .BoxColorInfo =_eadfc ;};if _bfgcc :=_bdggd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_bfgcc !=nil {_cfbga .Contents =_bfgcc ;};if _ebgc :=_bdggd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ebgc !=nil {_gegfg ,_ggbgd :=_cd .GetInt (_ebgc );if !_ggbgd {return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ceacg :=int64 (*_gegfg );_cfbga .Rotate =&_ceacg ;};if _ddegb :=_bdggd .Get ("\u0047\u0072\u006fu\u0070");_ddegb !=nil {_cfbga .Group =_ddegb ;};if _eacf :=_bdggd .Get ("\u0054\u0068\u0075m\u0062");_eacf !=nil {_cfbga .Thumb =_eacf ;};if _ecce :=_bdggd .Get ("\u0042");
_ecce !=nil {_cfbga .B =_ecce ;};if _dccg :=_bdggd .Get ("\u0044\u0075\u0072");_dccg !=nil {_cfbga .Dur =_dccg ;};if _cfgcg :=_bdggd .Get ("\u0054\u0072\u0061n\u0073");_cfgcg !=nil {_cfbga .Trans =_cfgcg ;};if _adafa :=_bdggd .Get ("\u0041\u0041");_adafa !=nil {_cfbga .AA =_adafa ;
};if _eaeba :=_bdggd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eaeba !=nil {_cfbga .Metadata =_eaeba ;};if _ffegf :=_bdggd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ffegf !=nil {_cfbga .PieceInfo =_ffegf ;};if _fabcf :=_bdggd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_fabcf !=nil {_cfbga .StructParents =_fabcf ;};if _gffb :=_bdggd .Get ("\u0049\u0044");_gffb !=nil {_cfbga .ID =_gffb ;};if _faaed :=_bdggd .Get ("\u0050\u005a");_faaed !=nil {_cfbga .PZ =_faaed ;};if _fggff :=_bdggd .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_fggff !=nil {_cfbga .SeparationInfo =_fggff ;};if _ceef :=_bdggd .Get ("\u0054\u0061\u0062\u0073");_ceef !=nil {_cfbga .Tabs =_ceef ;};if _bddg :=_bdggd .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bddg !=nil {_cfbga .TemplateInstantiated =_bddg ;};if _dgbad :=_bdggd .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dgbad !=nil {_cfbga .PresSteps =_dgbad ;};if _efbbe :=_bdggd .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_efbbe !=nil {_cfbga .UserUnit =_efbbe ;
};if _affbg :=_bdggd .Get ("\u0056\u0050");_affbg !=nil {_cfbga .VP =_affbg ;};if _bdfaaf :=_bdggd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_bdfaaf !=nil {_cfbga .Annots =_bdfaaf ;};_cfbga ._adega =_bcad ;return _cfbga ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dabb *PdfAnnotationStrikeOut )ToPdfObject ()_cd .PdfObject {_dabb .PdfAnnotation .ToPdfObject ();_bcecb :=_dabb ._fef ;_bgf :=_bcecb .PdfObject .(*_cd .PdfObjectDictionary );_dabb .PdfAnnotationMarkup .appendToPdfDictionary (_bgf );_bgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_bgf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dabb .QuadPoints );return _bcecb ;};func (_baed *LTV )generateVRIKey (_fgga *PdfSignature )(string ,error ){_fgfdc ,_beceb :=_fbcdg (_fgga .Contents .Bytes ());if _beceb !=nil {return "",_beceb ;
};return _fg .ToUpper (_dc .EncodeToString (_fgfdc )),nil ;};

// ToPdfObject implements interface PdfModel.
func (_baeb *PdfAnnotation3D )ToPdfObject ()_cd .PdfObject {_baeb .PdfAnnotation .ToPdfObject ();_cceg :=_baeb ._fef ;_adg :=_cceg .PdfObject .(*_cd .PdfObjectDictionary );_adg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0033\u0044"));
_adg .SetIfNotNil ("\u0033\u0044\u0044",_baeb .T3DD );_adg .SetIfNotNil ("\u0033\u0044\u0056",_baeb .T3DV );_adg .SetIfNotNil ("\u0033\u0044\u0041",_baeb .T3DA );_adg .SetIfNotNil ("\u0033\u0044\u0049",_baeb .T3DI );_adg .SetIfNotNil ("\u0033\u0044\u0042",_baeb .T3DB );
return _cceg ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_adbca :=&PdfColorspaceCalGray {};_adbca .BlackPoint =[]float64 {0.0,0.0,0.0};_adbca .Gamma =1;return _adbca ;};

// ToPdfObject implements interface PdfModel.
func (_ebfe *PdfActionNamed )ToPdfObject ()_cd .PdfObject {_ebfe .PdfAction .ToPdfObject ();_eca :=_ebfe ._cea ;_efg :=_eca .PdfObject .(*_cd .PdfObjectDictionary );_efg .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeNamed )));_efg .SetIfNotNil ("\u004e",_ebfe .N );
return _eca ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_efgaa FieldFlag )Mask ()uint32 {return uint32 (_efgaa )};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cd .PdfObject ;Name _cd .PdfObject ;};func (_bcbc *pdfFontSimple )baseFields ()*fontCommon {return &_bcbc .fontCommon };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cffc *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cffc .Alternate ==nil {if _cffc .N ==1{_gbfd :=NewPdfColorspaceDeviceGray ();return _gbfd .ColorFromFloats (vals );}else if _cffc .N ==3{_accd :=NewPdfColorspaceDeviceRGB ();
return _accd .ColorFromFloats (vals );}else if _cffc .N ==4{_defee :=NewPdfColorspaceDeviceCMYK ();return _defee .ColorFromFloats (vals );}else {return nil ,_ac .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cffc .Alternate .ColorFromFloats (vals );};var _eaba =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ag .ReadSeeker )(*PdfReader ,error ){const _baeda ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _adgae (rs ,&ReaderOpts {LazyLoad :true },false ,_baeda );
};

// ToPdfObject returns the PDF representation of the page resources.
func (_fcgef *PdfPageResources )ToPdfObject ()_cd .PdfObject {_daaaa :=_fcgef ._acae ;_daaaa .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fcgef .ExtGState );if _fcgef ._egeca !=nil {_fcgef .ColorSpace =_fcgef ._egeca .ToPdfObject ();};
_daaaa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fcgef .ColorSpace );_daaaa .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_fcgef .Pattern );_daaaa .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fcgef .Shading );
_daaaa .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_fcgef .XObject );_daaaa .SetIfNotNil ("\u0046\u006f\u006e\u0074",_fcgef .Font );_daaaa .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_fcgef .ProcSet );_daaaa .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_fcgef .Properties );
return _daaaa ;};

// C returns the value of the C component of the color.
func (_cbbc *PdfColorCalRGB )C ()float64 {return _cbbc [2]};func _eddgc (_dfee *_cd .PdfObjectDictionary )(*PdfFieldButton ,error ){_cfade :=&PdfFieldButton {};_cfade .Opt ,_ =_cd .GetArray (_dfee .Get ("\u004f\u0070\u0074"));return _cfade ,nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_efccb FieldFlag )Has (fl FieldFlag )bool {return (_efccb .Mask ()&fl .Mask ())> 0};

// ColorToRGB converts a Lab color to an RGB color.
func (_gbfa *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgdf :=func (_faga float64 )float64 {if _faga >=6.0/29{return _faga *_faga *_faga ;};return 108.0/841*(_faga -4/29);};_eccfc ,_bfca :=color .(*PdfColorLab );if !_bfca {_dac .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_eccfc .L ();AStar :=_eccfc .A ();BStar :=_eccfc .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_gbfa .WhitePoint [0]*_cgdf (L );Y :=_gbfa .WhitePoint [1]*_cgdf (M );Z :=_gbfa .WhitePoint [2]*_cgdf (N );_dceee :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cbfgc :=-0.969256*X +1.875992*Y +0.041556*Z ;_edcf :=0.055648*X +-0.204043*Y +1.057311*Z ;_dceee =_fc .Min (_fc .Max (_dceee ,0),1.0);
_cbfgc =_fc .Min (_fc .Max (_cbfgc ,0),1.0);_edcf =_fc .Min (_fc .Max (_edcf ,0),1.0);return NewPdfColorDeviceRGB (_dceee ,_cbfgc ,_edcf ),nil ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_dfebg *PdfWriter )SetOpenAction (dest _cd .PdfObject )error {if dest ==nil ||_cd .IsNullObject (dest ){return nil ;};_dfebg ._eddc .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _dfebg .addObjects (dest );};func (_agag *PdfReader )newPdfAnnotationFreeTextFromDict (_dga *_cd .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_deac :=PdfAnnotationFreeText {};
_ffde ,_aded :=_agag .newPdfAnnotationMarkupFromDict (_dga );if _aded !=nil {return nil ,_aded ;};_deac .PdfAnnotationMarkup =_ffde ;_deac .DA =_dga .Get ("\u0044\u0041");_deac .Q =_dga .Get ("\u0051");_deac .RC =_dga .Get ("\u0052\u0043");_deac .DS =_dga .Get ("\u0044\u0053");
_deac .CL =_dga .Get ("\u0043\u004c");_deac .IT =_dga .Get ("\u0049\u0054");_deac .BE =_dga .Get ("\u0042\u0045");_deac .RD =_dga .Get ("\u0052\u0044");_deac .BS =_dga .Get ("\u0042\u0053");_deac .LE =_dga .Get ("\u004c\u0045");return &_deac ,nil ;};func (_bece *PdfAppender )replaceObject (_fbgd ,_gdab _cd .PdfObject ){switch _edec :=_fbgd .(type ){case *_cd .PdfIndirectObject :_bece ._bcg [_gdab ]=_edec .ObjectNumber ;
case *_cd .PdfObjectStream :_bece ._bcg [_gdab ]=_edec .ObjectNumber ;};};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_dgdf :=NewPdfAction ();_cdd :=&PdfActionRendition {};_cdd .PdfAction =_dgdf ;_dgdf .SetContext (_cdd );return _cdd ;};

// SetOCProperties sets the optional content properties.
func (_cegde *PdfWriter )SetOCProperties (ocProperties _cd .PdfObject )error {_cgacc :=_cegde ._eddc ;if ocProperties !=nil {_dac .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_cgacc .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cegde .addObjects (ocProperties );};return nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_gagb :=&PdfAppender {_egee :reader ._cgff ,Reader :reader ,_beac :reader ._agbbba ,_aegg :reader ._ebac };_gbce ,_gfdf :=_gagb ._egee .Seek (0,_ag .SeekEnd );if _gfdf !=nil {return nil ,_gfdf ;
};_gagb ._gfa =_gbce ;if _ ,_gfdf =_gagb ._egee .Seek (0,_ag .SeekStart );_gfdf !=nil {return nil ,_gfdf ;};_gagb ._gfbg ,_gfdf =NewPdfReader (_gagb ._egee );if _gfdf !=nil {return nil ,_gfdf ;};for _ ,_gcec :=range _gagb .Reader .GetObjectNums (){if _gagb ._ffbd < _gcec {_gagb ._ffbd =_gcec ;
};};_gagb ._edef =_gagb ._beac .GetXrefTable ();_gagb ._ggae =_gagb ._beac .GetXrefOffset ();_gagb ._edc =append (_gagb ._edc ,_gagb ._gfbg .PageList ...);_gagb ._facfe =make (map[_cd .PdfObject ]struct{});_gagb ._bcg =make (map[_cd .PdfObject ]int64 );
_gagb ._ebb =make (map[_cd .PdfObject ]struct{});_gagb ._fcaf =_gagb ._gfbg .AcroForm ;_gagb ._ddfd =_gagb ._gfbg .DSS ;return _gagb ,nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ddgd *Image )Resample (targetBitsPerComponent int64 ){if _ddgd .BitsPerComponent ==targetBitsPerComponent {return ;};_eagde :=_ddgd .GetSamples ();if targetBitsPerComponent < _ddgd .BitsPerComponent {_fcbgc :=_ddgd .BitsPerComponent -targetBitsPerComponent ;
for _gcfcef :=range _eagde {_eagde [_gcfcef ]>>=uint (_fcbgc );};}else if targetBitsPerComponent > _ddgd .BitsPerComponent {_dacab :=targetBitsPerComponent -_ddgd .BitsPerComponent ;for _feafe :=range _eagde {_eagde [_feafe ]<<=uint (_dacab );};};_ddgd .BitsPerComponent =targetBitsPerComponent ;
if _ddgd .BitsPerComponent < 8{_ddgd .resampleLowBits (_eagde );return ;};_aabfa :=_agb .BytesPerLine (int (_ddgd .Width ),int (_ddgd .BitsPerComponent ),_ddgd .ColorComponents );_bbgb :=make ([]byte ,_aabfa *int (_ddgd .Height ));var (_bdeb ,_bebce ,_fedd ,_ebfdcg int ;
_eaaac uint32 ;);for _fedd =0;_fedd < int (_ddgd .Height );_fedd ++{_bdeb =_fedd *_aabfa ;_bebce =(_fedd +1)*_aabfa -1;_efbad :=_dce .ResampleUint32 (_eagde [_bdeb :_bebce ],int (targetBitsPerComponent ),8);for _ebfdcg ,_eaaac =range _efbad {_bbgb [_ebfdcg +_bdeb ]=byte (_eaaac );
};};_ddgd .Data =_bbgb ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_eaa :=NewPdfAnnotation ();_bdcb :=&PdfAnnotationTrapNet {};_bdcb .PdfAnnotation =_eaa ;_eaa .SetContext (_bdcb );return _bdcb ;};

// ToPdfObject implements interface PdfModel.
func (_aegf *PdfAnnotationCaret )ToPdfObject ()_cd .PdfObject {_aegf .PdfAnnotation .ToPdfObject ();_cace :=_aegf ._fef ;_acfa :=_cace .PdfObject .(*_cd .PdfObjectDictionary );_aegf .PdfAnnotationMarkup .appendToPdfDictionary (_acfa );_acfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0043\u0061\u0072e\u0074"));
_acfa .SetIfNotNil ("\u0052\u0044",_aegf .RD );_acfa .SetIfNotNil ("\u0053\u0079",_aegf .Sy );return _cace ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_cbebb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fced :=NewPdfOutlineItem ();_fced .Title =_cd .MakeEncodedString (_cbebb .Title ,true );_fced .Dest =_cbebb .Dest .ToPdfObject ();var _dcbgd []*PdfOutlineItem ;var _dbbbd int64 ;var _edeb *PdfOutlineItem ;
for _ ,_gbgfe :=range _cbebb .Entries {_gecbf ,_ebad :=_gbgfe .ToPdfOutlineItem ();_gecbf .Parent =&_fced .PdfOutlineTreeNode ;if _edeb !=nil {_edeb .Next =&_gecbf .PdfOutlineTreeNode ;_gecbf .Prev =&_edeb .PdfOutlineTreeNode ;};_dcbgd =append (_dcbgd ,_gecbf );
_dbbbd +=_ebad ;_edeb =_gecbf ;};_gadga :=len (_dcbgd );_dbbbd +=int64 (_gadga );if _gadga > 0{_fced .First =&_dcbgd [0].PdfOutlineTreeNode ;_fced .Last =&_dcbgd [_gadga -1].PdfOutlineTreeNode ;_fced .Count =&_dbbbd ;};return _fced ,_dbbbd ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_cge :=NewPdfAnnotation ();_gaeg :=&PdfAnnotationRichMedia {};_gaeg .PdfAnnotation =_cge ;_cge .SetContext (_gaeg );return _gaeg ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cd .PdfObject ;GetContainingPdfObject ()_cd .PdfObject ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fbad FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fbad .Mask ()&^fl .Mask ())};func _dbgef (_ecdba _cd .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_aeeeda :=NewPdfColorspaceSpecialIndexed ();if _ebfdc ,_cfgd :=_ecdba .(*_cd .PdfIndirectObject );
_cfgd {_aeeeda ._bbcg =_ebfdc ;};_ecdba =_cd .TraceToDirectObject (_ecdba );_cacee ,_cbag :=_ecdba .(*_cd .PdfObjectArray );if !_cbag {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cacee .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_ecdba =_cacee .Get (0);_afag ,_cbag :=_ecdba .(*_cd .PdfObjectName );if !_cbag {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_afag !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_ecdba =_cacee .Get (1);_gbgec ,_cbafg :=DetermineColorspaceNameFromPdfObject (_ecdba );if _cbafg !=nil {return nil ,_cbafg ;};if _gbgec =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_gbgec =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dac .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_gbgec );
return nil ,_aceec ;};_faag ,_cbafg :=NewPdfColorspaceFromPdfObject (_ecdba );if _cbafg !=nil {return nil ,_cbafg ;};_aeeeda .Base =_faag ;_ecdba =_cacee .Get (2);_bbfb ,_cbafg :=_cd .GetNumberAsInt64 (_ecdba );if _cbafg !=nil {return nil ,_cbafg ;};if _bbfb > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_aeeeda .HiVal =int (_bbfb );_ecdba =_cacee .Get (3);_aeeeda .Lookup =_ecdba ;_ecdba =_cd .TraceToDirectObject (_ecdba );var _fbcbb []byte ;if _gaadd ,_fccf :=_ecdba .(*_cd .PdfObjectString );_fccf {_fbcbb =_gaadd .Bytes ();_dac .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_fbcbb );
}else if _gaed ,_fgbda :=_ecdba .(*_cd .PdfObjectStream );_fgbda {_dac .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_ecdba .String ());_dac .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gaed .Stream ),_gaed .Stream );
_bffe ,_gcac :=_cd .DecodeStream (_gaed );if _gcac !=nil {return nil ,_gcac ;};_dac .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_bffe ),_bffe );_fbcbb =_bffe ;}else {_dac .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ecdba );
return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_fbcbb )< _aeeeda .Base .GetNumComponents ()*(_aeeeda .HiVal +1){_dac .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_dac .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_fbcbb ),_aeeeda .Base .GetNumComponents (),_aeeeda .HiVal );
}else {_fbcbb =_fbcbb [:_aeeeda .Base .GetNumComponents ()*(_aeeeda .HiVal +1)];};_aeeeda ._dbga =_fbcbb ;return _aeeeda ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dbdcg *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dbdcg ._cfeg ==nil {_dbdcg ._cfeg =_eb .NewPSExecutor (_dbdcg .Program );};var _bbdec []_eb .PSObject ;for _ ,_deagg :=range xVec {_bbdec =append (_bbdec ,_eb .MakeReal (_deagg ));
};_fcdcf ,_cfgb :=_dbdcg ._cfeg .Execute (_bbdec );if _cfgb !=nil {return nil ,_cfgb ;};_dfebf ,_cfgb :=_eb .PSObjectArrayToFloat64Array (_fcdcf );if _cfgb !=nil {return nil ,_cfgb ;};return _dfebf ,nil ;};

// Write writes out the PDF.
func (_cggf *PdfWriter )Write (writer _ag .Writer )error {_dac .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_afcbf :=_ee .GetLicenseKey ();if (_afcbf ==nil ||!_afcbf .IsLicensed ())&&!_aagfa {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ac .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _cggf ._bfecb !=nil {_dac .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_cggf ._bfecb );
_ccfde :=_cggf ._bfecb .ToPdfObject ();_dac .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ccfde ,_ccfde ,_ccfde );_cggf ._eddc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ccfde );
_cgdbc :=_cggf .addObjects (_ccfde );if _cgdbc !=nil {return _cgdbc ;};};if _cggf ._ccec !=nil {_dac .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_ffdd :=_cggf ._ccec .ToPdfObject ();_dac .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ffdd );
_cggf ._eddc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ffdd );_gaadb :=_cggf .addObjects (_ffdd );if _gaadb !=nil {return _gaadb ;};};for _dcce ,_eddef :=range _cggf ._ggcba {if !_cggf .hasObject (_dcce ){_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dcce ,_dcce ,_dcce );
for _ ,_dfcgf :=range _eddef {for _ ,_aedg :=range _dfcgf .Keys (){_ebge :=_dfcgf .Get (_aedg );if _ebge ==_dcce {_dac .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_dfcgf .Set (_aedg ,_cd .MakeNull ());break ;};};};};};_cggf ._eddc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cd .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_cggf ._fbeec ,_cggf ._cddaac )));_cggf .copyObjects ();if _cggf ._edggd !=nil {var _dafg error ;
_cggf ._aaeg ,_dafg =_cggf ._edggd .Optimize (_cggf ._aaeg );if _dafg !=nil {return _dafg ;};_ddbda :=make (map[_cd .PdfObject ]struct{},len (_cggf ._aaeg ));for _ ,_ddggg :=range _cggf ._aaeg {_ddbda [_ddggg ]=struct{}{};};_cggf ._eebaaf =_ddbda ;};_cggf ._gefee =_cggf ._edfaa ;
_cggf ._ffbdb =_d .NewWriter (writer );_eebga :=_cggf ._fbeec > 1||(_cggf ._fbeec ==1&&_cggf ._cddaac > 4);if _cggf ._cccgf !=nil {_eebga =*_cggf ._cccgf ;};_gcgee :=make (map[_cd .PdfObject ]bool );for _ ,_ffcce :=range _cggf ._aaeg {if _bcgb ,_aeaae :=_ffcce .(*_cd .PdfObjectStreams );
_aeaae {_eebga =true ;for _ ,_bffdg :=range _bcgb .Elements (){_gcgee [_bffdg ]=true ;if _cbdde ,_ecaca :=_bffdg .(*_cd .PdfIndirectObject );_ecaca {_gcgee [_cbdde .PdfObject ]=true ;};};};};if _eebga &&_cggf ._fbeec ==1&&_cggf ._cddaac < 5{_cggf ._cddaac =5;
};if _cggf ._fgcc {_cggf .writeString ("\u000a");}else {_cggf .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_cggf ._fbeec ,_cggf ._cddaac ));_cggf .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_cggf .updateObjectNumbers ();_dac .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cggf ._aaeg ));_cggf ._ccdf =make (map[int ]crossReference );_cggf ._ccdf [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _cggf ._fgeac .ObjectMap !=nil {for _eddbb ,_acba :=range _cggf ._fgeac .ObjectMap {if _eddbb ==0{continue ;};if _acba .XType ==_cd .XrefTypeObjectStream {_fcgfe :=crossReference {Type :2,ObjectNumber :_acba .OsObjNumber ,Index :_acba .OsObjIndex };
_cggf ._ccdf [_eddbb ]=_fcgfe ;};if _acba .XType ==_cd .XrefTypeTableEntry {_feff :=crossReference {Type :1,ObjectNumber :_acba .ObjectNumber ,Offset :_acba .Offset };_cggf ._ccdf [_eddbb ]=_feff ;};};};for _ ,_aebfc :=range _cggf ._aaeg {if _gebga :=_gcgee [_aebfc ];
_gebga {continue ;};_ddea :=int64 (0);switch _efebc :=_aebfc .(type ){case *_cd .PdfIndirectObject :_ddea =_efebc .ObjectNumber ;case *_cd .PdfObjectStream :_ddea =_efebc .ObjectNumber ;case *_cd .PdfObjectStreams :_ddea =_efebc .ObjectNumber ;default:_dac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_aebfc );
return ErrTypeCheck ;};if _cggf ._fbga !=nil &&_aebfc !=_cggf ._ggfeb {_gfeeg :=_cggf ._fbga .Encrypt (_aebfc ,_ddea ,0);if _gfeeg !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gfeeg );
return _gfeeg ;};};_cggf .writeObject (int (_ddea ),_aebfc );};_aeeba :=_cggf ._gefee ;var _aafcb int ;for _dddca :=range _cggf ._ccdf {if _dddca > _aafcb {_aafcb =_dddca ;};};if _eebga {_ddfdc :=_aafcb +1;_cggf ._ccdf [_ddfdc ]=crossReference {Type :1,ObjectNumber :_ddfdc ,Offset :_aeeba };
_bfead :=_ccc .NewBuffer (nil );_daebd :=_cd .MakeArray ();for _bedcg :=0;_bedcg <=_aafcb ;{for ;_bedcg <=_aafcb ;_bedcg ++{_fcdbd ,_agceg :=_cggf ._ccdf [_bedcg ];if _agceg &&(!_cggf ._fgcc ||_cggf ._fgcc &&(_fcdbd .Type ==1&&_fcdbd .Offset >=_cggf ._decgdg ||_fcdbd .Type ==0)){break ;
};};var _gfadd int ;for _gfadd =_bedcg +1;_gfadd <=_aafcb ;_gfadd ++{_eggae ,_decbf :=_cggf ._ccdf [_gfadd ];if _decbf &&(!_cggf ._fgcc ||_cggf ._fgcc &&(_eggae .Type ==1&&_eggae .Offset > _cggf ._decgdg )){continue ;};break ;};_daebd .Append (_cd .MakeInteger (int64 (_bedcg )),_cd .MakeInteger (int64 (_gfadd -_bedcg )));
for _cdgbdd :=_bedcg ;_cdgbdd < _gfadd ;_cdgbdd ++{_deaac :=_cggf ._ccdf [_cdgbdd ];switch _deaac .Type {case 0:_a .Write (_bfead ,_a .BigEndian ,byte (0));_a .Write (_bfead ,_a .BigEndian ,uint32 (0));_a .Write (_bfead ,_a .BigEndian ,uint16 (0xFFFF));
case 1:_a .Write (_bfead ,_a .BigEndian ,byte (1));_a .Write (_bfead ,_a .BigEndian ,uint32 (_deaac .Offset ));_a .Write (_bfead ,_a .BigEndian ,uint16 (_deaac .Generation ));case 2:_a .Write (_bfead ,_a .BigEndian ,byte (2));_a .Write (_bfead ,_a .BigEndian ,uint32 (_deaac .ObjectNumber ));
_a .Write (_bfead ,_a .BigEndian ,uint16 (_deaac .Index ));};};_bedcg =_gfadd +1;};_bfcea ,_ebgab :=_cd .MakeStream (_bfead .Bytes (),_cd .NewFlateEncoder ());if _ebgab !=nil {return _ebgab ;};_bfcea .ObjectNumber =int64 (_ddfdc );_bfcea .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0058\u0052\u0065\u0066"));
_bfcea .PdfObjectDictionary .Set ("\u0057",_cd .MakeArray (_cd .MakeInteger (1),_cd .MakeInteger (4),_cd .MakeInteger (2)));_bfcea .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_daebd );_bfcea .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cd .MakeInteger (int64 (_ddfdc +1)));
_bfcea .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_cggf ._gcfga );_bfcea .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_cggf ._ddcdg );if _cggf ._fgcc &&_cggf ._bfbdg > 0{_bfcea .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cd .MakeInteger (_cggf ._bfbdg ));
};if _cggf ._fbga !=nil {_bfcea .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cggf ._ggfeb );_bfcea .Set ("\u0049\u0044",_cggf ._cacd );_dac .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cggf ._cacd );};_cggf .writeObject (int (_bfcea .ObjectNumber ),_bfcea );
}else {_cggf .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _afeae :=0;_afeae <=_aafcb ;{for ;_afeae <=_aafcb ;_afeae ++{_cdgdc ,_eggca :=_cggf ._ccdf [_afeae ];if _eggca &&(!_cggf ._fgcc ||_cggf ._fgcc &&(_cdgdc .Type ==1&&_cdgdc .Offset >=_cggf ._decgdg ||_cdgdc .Type ==0)){break ;
};};var _gadba int ;for _gadba =_afeae +1;_gadba <=_aafcb ;_gadba ++{_dgcaf ,_egcac :=_cggf ._ccdf [_gadba ];if _egcac &&(!_cggf ._fgcc ||_cggf ._fgcc &&(_dgcaf .Type ==1&&_dgcaf .Offset > _cggf ._decgdg )){continue ;};break ;};_fdfag :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_afeae ,_gadba -_afeae );
_cggf .writeString (_fdfag );for _gfcdgd :=_afeae ;_gfcdgd < _gadba ;_gfcdgd ++{_bgdbd :=_cggf ._ccdf [_gfcdgd ];switch _bgdbd .Type {case 0:_fdfag =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_cggf .writeString (_fdfag );case 1:_fdfag =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bgdbd .Offset ,0);_cggf .writeString (_fdfag );};};_afeae =_gadba +1;};_eadcd :=_cd .MakeDict ();_eadcd .Set ("\u0049\u006e\u0066\u006f",_cggf ._gcfga );
_eadcd .Set ("\u0052\u006f\u006f\u0074",_cggf ._ddcdg );_eadcd .Set ("\u0053\u0069\u007a\u0065",_cd .MakeInteger (int64 (_aafcb +1)));if _cggf ._fgcc &&_cggf ._bfbdg > 0{_eadcd .Set ("\u0050\u0072\u0065\u0076",_cd .MakeInteger (_cggf ._bfbdg ));};if _cggf ._fbga !=nil {_eadcd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_cggf ._ggfeb );
_eadcd .Set ("\u0049\u0044",_cggf ._cacd );_dac .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_cggf ._cacd );};_cggf .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_cggf .writeString (_eadcd .WriteString ());_cggf .writeString ("\u000a");
};_aegab :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_aeeba );_cggf .writeString (_aegab );_cggf .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _cggf ._dfgef ==nil {_cggf ._dfgef =_cggf ._ffbdb .Flush ();
};return _cggf ._dfgef ;};

// Val returns the value of the color.
func (_geaf *PdfColorCalGray )Val ()float64 {return float64 (*_geaf )};func (_dfec *PdfReader )newPdfAnnotationPolyLineFromDict (_eeee *_cd .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_cfaa :=PdfAnnotationPolyLine {};_adc ,_fgabe :=_dfec .newPdfAnnotationMarkupFromDict (_eeee );
if _fgabe !=nil {return nil ,_fgabe ;};_cfaa .PdfAnnotationMarkup =_adc ;_cfaa .Vertices =_eeee .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cfaa .LE =_eeee .Get ("\u004c\u0045");_cfaa .BS =_eeee .Get ("\u0042\u0053");_cfaa .IC =_eeee .Get ("\u0049\u0043");
_cfaa .BE =_eeee .Get ("\u0042\u0045");_cfaa .IT =_eeee .Get ("\u0049\u0054");_cfaa .Measure =_eeee .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cfaa ,nil ;};func _fcfaa ()string {_gcebg .Lock ();defer _gcebg .Unlock ();return _dgddd };func (_caa *PdfReader )newPdfActionSoundFromDict (_ccdd *_cd .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ccdd .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ccdd .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ccdd .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ccdd .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ccdd .Get ("\u004d\u0069\u0078")},nil ;
};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func _eabaa ()string {_gcebg .Lock ();defer _gcebg .Unlock ();return _gcga };

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_afaf *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cd .GetNumberAsFloat (_afaf .CapHeight );};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ccacf ,_bgebg :=_bcd .NewStdFontByName (HelveticaName );if !_bgebg {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_bbfd :=_afdbc (_ccacf );return &PdfFont {_fedf :&_bbfd };};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ffabb ,_eecdc :=NewStandard14Font (basefont );if _eecdc !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ffabb ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_aaga *PdfFieldButton )GetType ()ButtonType {_ddce :=ButtonTypeCheckbox ;if _aaga .Ff !=nil {if (uint32 (*_aaga .Ff )&FieldFlagPushbutton .Mask ())> 0{_ddce =ButtonTypePush ;}else if (uint32 (*_aaga .Ff )&FieldFlagRadio .Mask ())> 0{_ddce =ButtonTypeRadio ;
};};return _ddce ;};func _gafe (_bffab *XObjectImage )error {if _bffab .SMask ==nil {return nil ;};_fegbg ,_fged :=_bffab .SMask .(*_cd .PdfObjectStream );if !_fged {_dac .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _cd .ErrTypeError ;};_bfacf :=_fegbg .PdfObjectDictionary ;_fbag :=_bfacf .Get ("\u004d\u0061\u0074t\u0065");if _fbag ==nil {return nil ;};_bcfab ,_bbgfa :=_dgdec (_fbag .(*_cd .PdfObjectArray ));if _bbgfa !=nil {return _bbgfa ;};_ageca :=_cd .MakeArrayFromFloats ([]float64 {_bcfab });
_bfacf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ageca );return nil ;};

// ToPdfObject returns a stream object.
func (_adaef *XObjectForm )ToPdfObject ()_cd .PdfObject {_feeea :=_adaef ._cbbga ;_dgcbf :=_feeea .PdfObjectDictionary ;if _adaef .Filter !=nil {_dgcbf =_adaef .Filter .MakeStreamDict ();_feeea .PdfObjectDictionary =_dgcbf ;};_dgcbf .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dgcbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0046\u006f\u0072\u006d"));_dgcbf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_adaef .FormType );_dgcbf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_adaef .BBox );_dgcbf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_adaef .Matrix );
if _adaef .Resources !=nil {_dgcbf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_adaef .Resources .ToPdfObject ());};_dgcbf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_adaef .Group );_dgcbf .SetIfNotNil ("\u0052\u0065\u0066",_adaef .Ref );
_dgcbf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_adaef .MetaData );_dgcbf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_adaef .PieceInfo );_dgcbf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_adaef .LastModified );
_dgcbf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_adaef .StructParent );_dgcbf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_adaef .StructParents );_dgcbf .SetIfNotNil ("\u004f\u0050\u0049",_adaef .OPI );
_dgcbf .SetIfNotNil ("\u004f\u0043",_adaef .OC );_dgcbf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adaef .Name );_dgcbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_adaef .Stream ))));_feeea .Stream =_adaef .Stream ;return _feeea ;
};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bcge *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bcge .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _fbaea ()string {_gcebg .Lock ();defer _gcebg .Unlock ();return _cdcca };

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_dgcf *PdfPattern )GetContainingPdfObject ()_cd .PdfObject {return _dgcf ._geeaf };

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bgdf :=NewPdfAnnotation ();_abdc :=&PdfAnnotationSquare {};_abdc .PdfAnnotation =_bgdf ;_abdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgdf .SetContext (_abdc );return _abdc ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eabgf :=&PdfPageResources {};_eabgf ._acae =_cd .MakeDict ();return _eabgf ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ggcde *PdfPageResources )SetXObjectImageByName (keyName _cd .PdfObjectName ,ximg *XObjectImage )error {_cedf :=ximg .ToPdfObject ().(*_cd .PdfObjectStream );_cdcee :=_ggcde .SetXObjectByName (keyName ,_cedf );return _cdcee ;};

// ToPdfObject implements interface PdfModel.
func (_ddebc *PdfAnnotationStamp )ToPdfObject ()_cd .PdfObject {_ddebc .PdfAnnotation .ToPdfObject ();_fgeg :=_ddebc ._fef ;_ebeb :=_fgeg .PdfObject .(*_cd .PdfObjectDictionary );_ddebc .PdfAnnotationMarkup .appendToPdfDictionary (_ebeb );_ebeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0053\u0074\u0061m\u0070"));
_ebeb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ddebc .Name );return _fgeg ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ce .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ce .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ce .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ecffd *PdfAppender ;_bgceb *DSS ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cdfd *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cdfd .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cdfd ._fcaf =acroForm ;};

// ToInteger convert to an integer format.
func (_aebbc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gede :=_fc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gede *_aebbc .A ()),uint32 (_gede *_aebbc .B ()),uint32 (_gede *_aebbc .C ())};};

// ToPdfObject implements interface PdfModel.
func (_gfb *PdfAnnotationText )ToPdfObject ()_cd .PdfObject {_gfb .PdfAnnotation .ToPdfObject ();_afce :=_gfb ._fef ;_bbdd :=_afce .PdfObject .(*_cd .PdfObjectDictionary );if _gfb .PdfAnnotationMarkup !=nil {_gfb .PdfAnnotationMarkup .appendToPdfDictionary (_bbdd );
};_bbdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0054\u0065\u0078\u0074"));_bbdd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gfb .Open );_bbdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gfb .Name );_bbdd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gfb .State );
_bbdd .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_gfb .StateModel );return _afce ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_ada *PdfAppender )UpdatePage (page *PdfPage ){_ada .updateObjectsDeep (page .ToPdfObject (),nil )};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_gecf pdfFontSimple )GetCharMetrics (code _cg .CharCode )(_bcd .CharMetrics ,bool ){if _egdfb ,_bggb :=_gecf ._fafag [code ];_bggb {return _bcd .CharMetrics {Wx :_egdfb },true ;};if _bcd .IsStdFont (_bcd .StdFontName (_gecf ._bgdfc )){return _bcd .CharMetrics {Wx :250},true ;
};return _bcd .CharMetrics {},false ;};func (_aabad fontCommon )isCIDFont ()bool {if _aabad ._ecea ==""{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aabad );
};_dged :=false ;switch _aabad ._ecea {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_dged =true ;};_dac .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_dged ,_aabad );
return _dged ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_dgfc *PdfFieldChoice )ToPdfObject ()_cd .PdfObject {_dgfc .PdfField .ToPdfObject ();_cffgc :=_dgfc ._ebfdd ;_cffe :=_cffgc .PdfObject .(*_cd .PdfObjectDictionary );_cffe .Set ("\u0046\u0054",_cd .MakeName ("\u0043\u0068"));if _dgfc .Opt !=nil {_cffe .Set ("\u004f\u0070\u0074",_dgfc .Opt );
};if _dgfc .TI !=nil {_cffe .Set ("\u0054\u0049",_dgfc .TI );};if _dgfc .I !=nil {_cffe .Set ("\u0049",_dgfc .I );};return _cffgc ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dffa *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dffa ._adfdg !=nil {return _dffa ._adfdg ,nil ;};if _dffa .Annots ==nil {_dffa ._adfdg =[]*PdfAnnotation {};return nil ,nil ;};if _dffa ._adega ==nil {_dffa ._adfdg =[]*PdfAnnotation {};
return nil ,nil ;};_edag ,_bbfed :=_dffa ._adega .loadAnnotations (_dffa .Annots );if _bbfed !=nil {return nil ,_bbfed ;};if _edag ==nil {_dffa ._adfdg =[]*PdfAnnotation {};};_dffa ._adfdg =_edag ;return _dffa ._adfdg ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_feafed int64 ;_cbaec int64 ;_edbg int64 ;_bdbaa int64 ;_gegbbb int64 ;_gcfac int64 ;_ffagg byte ;_dffcec int64 ;_eefg int64 ;};var _dddcd =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func _fgef (_ffdfb *_cd .PdfObjectDictionary ,_ecac *fontCommon )(*pdfFontType0 ,error ){_ddae ,_fafa :=_cd .GetArray (_ffdfb .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_fafa {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ecac );
return nil ,_cd .ErrRangeError ;};if _ddae .Len ()!=1{_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ddae .Len ());return nil ,_cd .ErrRangeError ;
};_edgef ,_bfbgg :=_agacg (_ddae .Get (0),false );if _bfbgg !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bfbgg ,_ecac );
return nil ,_bfbgg ;};_afbf :=_adeb (_ecac );_afbf .DescendantFont =_edgef ;_baeeg ,_fafa :=_cd .GetNameVal (_ffdfb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fafa {if _baeeg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_baeeg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_afbf ._cccad =_cg .NewIdentityTextEncoder (_baeeg );
}else if _ef .IsPredefinedCMap (_baeeg ){_afbf ._cdaag ,_bfbgg =_ef .LoadPredefinedCMap (_baeeg );if _bfbgg !=nil {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_baeeg ,_bfbgg );
};}else {_dac .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_baeeg );};};if _bdfeb :=_edgef .baseFields ()._deeg ;_bdfeb !=nil {if _adbce :=_bdfeb .Name ();_adbce =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_adbce =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_adbce =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_adbce =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_afbf ._cccad =_cg .NewCMapEncoder (_baeeg ,_afbf ._cdaag ,_bdfeb );
};};return _afbf ,nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_dbee :=&PdfFieldSignature {};_dbee .PdfField =NewPdfField ();_dbee .PdfField .SetContext (_dbee );_dbee .PdfAnnotationWidget =NewPdfAnnotationWidget ();_dbee .PdfAnnotationWidget .SetContext (_dbee );
_dbee .PdfAnnotationWidget ._fef =_dbee .PdfField ._ebfdd ;_dbee .T =_cd .MakeString ("");_dbee .F =_cd .MakeInteger (132);_dbee .V =signature ;return _dbee ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_gbab *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baaa :=vals [0];if _baaa < 0.0||_baaa > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eabd :=vals [1];if _eabd < 0.0||_eabd > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgdgc :=vals [2];if _dgdgc < 0.0||_dgdgc > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eegg :=NewPdfColorDeviceRGB (_baaa ,_eabd ,_dgdgc );return _eegg ,nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_bcebe :=&PdfPageResourcesColorspaces {};_bcebe .Names =[]string {};_bcebe .Colorspaces =map[string ]PdfColorspace {};_bcebe ._abcbf =&_cd .PdfIndirectObject {};return _bcebe ;};func (_cgcb *PdfAppender )addNewObject (_egc _cd .PdfObject ){if _ ,_dedd :=_cgcb ._facfe [_egc ];
!_dedd {_cgcb ._fba =append (_cgcb ._fba ,_egc );_cgcb ._facfe [_egc ]=struct{}{};};};

// ToPdfObject implements interface PdfModel.
func (_adf *PdfAnnotationPrinterMark )ToPdfObject ()_cd .PdfObject {_adf .PdfAnnotation .ToPdfObject ();_dgcd :=_adf ._fef ;_badd :=_dgcd .PdfObject .(*_cd .PdfObjectDictionary );_badd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_badd .SetIfNotNil ("\u004d\u004e",_adf .MN );return _dgcd ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_dfg :=NewPdfAnnotation ();_cfaf :=&PdfAnnotationUnderline {};_cfaf .PdfAnnotation =_dfg ;_cfaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfg .SetContext (_cfaf );return _cfaf ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_agacf *PdfPageResources )GetExtGState (keyName _cd .PdfObjectName )(_cd .PdfObject ,bool ){if _agacf .ExtGState ==nil {return nil ,false ;};_dfgg ,_bcabb :=_cd .TraceToDirectObject (_agacf .ExtGState ).(*_cd .PdfObjectDictionary );if !_bcabb {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agacf .ExtGState );
return nil ,false ;};if _cgbfb :=_dfgg .Get (keyName );_cgbfb !=nil {return _cgbfb ,true ;};return nil ,false ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cd .PdfObject ;FontFamily _cd .PdfObject ;FontStretch _cd .PdfObject ;FontWeight _cd .PdfObject ;Flags _cd .PdfObject ;FontBBox _cd .PdfObject ;ItalicAngle _cd .PdfObject ;Ascent _cd .PdfObject ;Descent _cd .PdfObject ;
Leading _cd .PdfObject ;CapHeight _cd .PdfObject ;XHeight _cd .PdfObject ;StemV _cd .PdfObject ;StemH _cd .PdfObject ;AvgWidth _cd .PdfObject ;MaxWidth _cd .PdfObject ;MissingWidth _cd .PdfObject ;FontFile _cd .PdfObject ;FontFile2 _cd .PdfObject ;FontFile3 _cd .PdfObject ;
CharSet _cd .PdfObject ;_acaaa int ;_bedg float64 ;*fontFile ;_fccfb *_bcd .TtfType ;

// Additional entries for CIDFonts
Style _cd .PdfObject ;Lang _cd .PdfObject ;FD _cd .PdfObject ;CIDSet _cd .PdfObject ;_decf *_cd .PdfIndirectObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cd .PdfObject ;};func (_fdafa *PdfReader )resolveReference (_eeecc *_cd .PdfObjectReference )(_cd .PdfObject ,bool ,error ){_gegba ,_aebfa :=_fdafa ._agbbba .ObjCache [int (_eeecc .ObjectNumber )];
if !_aebfa {_dac .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_eeecc );_adaff ,_eaacb :=_fdafa ._agbbba .LookupByReference (*_eeecc );if _eaacb !=nil {return nil ,false ,_eaacb ;};
_fdafa ._agbbba .ObjCache [int (_eeecc .ObjectNumber )]=_adaff ;return _adaff ,false ,nil ;};return _gegba ,true ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cd .PdfObject ;Sy _cd .PdfObject ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cd .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_fgegg *_cd .PdfIndirectObject ;};

// SetBorderWidth sets the style's border width.
func (_cef *PdfBorderStyle )SetBorderWidth (width float64 ){_cef .W =&width };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_gadb :=NewPdfAnnotation ();_gfff :=&PdfAnnotationWidget {};_gfff .PdfAnnotation =_gadb ;_gadb .SetContext (_gfff );return _gfff ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fdccd ,_befdb :=_ab .Open (filePath );if _befdb !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_befdb );
return nil ,_befdb ;};defer _fdccd .Close ();return NewPdfFontFromTTF (_fdccd );};

// GetNumComponents returns the number of color components (1 for Separation).
func (_deec *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_eagb *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetNumComponents returns the number of color components.
func (_acc *PdfColorspaceICCBased )GetNumComponents ()int {return _acc .N };

// GetPageDict converts the Page to a PDF object dictionary.
func (_gefc *PdfPage )GetPageDict ()*_cd .PdfObjectDictionary {_eedec :=_gefc ._dbeb ;_eedec .Clear ();_eedec .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0050\u0061\u0067\u0065"));_eedec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gefc .Parent );
if _gefc .LastModified !=nil {_eedec .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gefc .LastModified .ToPdfObject ());};if _gefc .Resources !=nil {_eedec .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gefc .Resources .ToPdfObject ());
};if _gefc .CropBox !=nil {_eedec .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gefc .CropBox .ToPdfObject ());};if _gefc .MediaBox !=nil {_eedec .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gefc .MediaBox .ToPdfObject ());};if _gefc .BleedBox !=nil {_eedec .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gefc .BleedBox .ToPdfObject ());
};if _gefc .TrimBox !=nil {_eedec .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gefc .TrimBox .ToPdfObject ());};if _gefc .ArtBox !=nil {_eedec .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gefc .ArtBox .ToPdfObject ());};_eedec .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gefc .BoxColorInfo );
_eedec .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gefc .Contents );if _gefc .Rotate !=nil {_eedec .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cd .MakeInteger (*_gefc .Rotate ));};_eedec .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gefc .Group );
_eedec .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gefc .Thumb );_eedec .SetIfNotNil ("\u0042",_gefc .B );_eedec .SetIfNotNil ("\u0044\u0075\u0072",_gefc .Dur );_eedec .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gefc .Trans );_eedec .SetIfNotNil ("\u0041\u0041",_gefc .AA );
_eedec .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gefc .Metadata );_eedec .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gefc .PieceInfo );_eedec .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gefc .StructParents );
_eedec .SetIfNotNil ("\u0049\u0044",_gefc .ID );_eedec .SetIfNotNil ("\u0050\u005a",_gefc .PZ );_eedec .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gefc .SeparationInfo );_eedec .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gefc .Tabs );
_eedec .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gefc .TemplateInstantiated );_eedec .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gefc .PresSteps );_eedec .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gefc .UserUnit );
_eedec .SetIfNotNil ("\u0056\u0050",_gefc .VP );if _gefc ._adfdg !=nil {_gfbgg :=_cd .MakeArray ();for _ ,_efedg :=range _gefc ._adfdg {if _fgbbb :=_efedg .GetContext ();_fgbbb !=nil {_gfbgg .Append (_fgbbb .ToPdfObject ());}else {_gfbgg .Append (_efedg .ToPdfObject ());
};};if _gfbgg .Len ()> 0{_eedec .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_gfbgg );};}else if _gefc .Annots !=nil {_eedec .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gefc .Annots );};return _eedec ;};

// IsCID returns true if the underlying font is CID.
func (_abddb *PdfFont )IsCID ()bool {return _abddb .baseFields ().isCIDFont ()};func _bebea (_cafg _cd .PdfObject )(*PdfFunctionType2 ,error ){_bbdddf :=&PdfFunctionType2 {};var _agaa *_cd .PdfObjectDictionary ;if _aadc ,_bbffa :=_cafg .(*_cd .PdfIndirectObject );
_bbffa {_gadg ,_eccfg :=_aadc .PdfObject .(*_cd .PdfObjectDictionary );if !_eccfg {return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbdddf ._fbgg =_aadc ;_agaa =_gadg ;}else if _ecgb ,_aaaba :=_cafg .(*_cd .PdfObjectDictionary );
_aaaba {_agaa =_ecgb ;}else {return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dac .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_agaa .String ());_gebbg ,_bdfac :=_cd .TraceToDirectObject (_agaa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cd .PdfObjectArray );
if !_bdfac {_dac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gebbg .Len ()< 0||_gebbg .Len ()%2!=0{_dac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ac .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cbfgf ,_beee :=_gebbg .ToFloat64Array ();if _beee !=nil {return nil ,_beee ;};_bbdddf .Domain =_cbfgf ;_gebbg ,_bdfac =_cd .TraceToDirectObject (_agaa .Get ("\u0052\u0061\u006eg\u0065")).(*_cd .PdfObjectArray );if _bdfac {if _gebbg .Len ()< 0||_gebbg .Len ()%2!=0{return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_beddc ,_ceae :=_gebbg .ToFloat64Array ();if _ceae !=nil {return nil ,_ceae ;};_bbdddf .Range =_beddc ;};_gebbg ,_bdfac =_cd .TraceToDirectObject (_agaa .Get ("\u0043\u0030")).(*_cd .PdfObjectArray );if _bdfac {_febfe ,_eaaf :=_gebbg .ToFloat64Array ();
if _eaaf !=nil {return nil ,_eaaf ;};_bbdddf .C0 =_febfe ;};_gebbg ,_bdfac =_cd .TraceToDirectObject (_agaa .Get ("\u0043\u0031")).(*_cd .PdfObjectArray );if _bdfac {_egdb ,_effea :=_gebbg .ToFloat64Array ();if _effea !=nil {return nil ,_effea ;};_bbdddf .C1 =_egdb ;
};if len (_bbdddf .C0 )!=len (_bbdddf .C1 ){_dac .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_cd .ErrRangeError ;};N ,_beee :=_cd .GetNumberAsFloat (_cd .TraceToDirectObject (_agaa .Get ("\u004e")));
if _beee !=nil {_dac .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_agaa .String ());return nil ,_beee ;};_bbdddf .N =N ;
return _bbdddf ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gbdb *PdfColorspaceSpecialPattern )ToPdfObject ()_cd .PdfObject {if _gbdb .UnderlyingCS ==nil {return _cd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_dceg :=_cd .MakeArray (_cd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dceg .Append (_gbdb .UnderlyingCS .ToPdfObject ());
if _gbdb ._dbgbc !=nil {_gbdb ._dbgbc .PdfObject =_dceg ;return _gbdb ._dbgbc ;};return _dceg ;};

// Register registers (caches) a model to primitive object relationship.
func (_eebaa *modelManager )Register (primitive _cd .PdfObject ,model PdfModel ){_eebaa ._bdfb [model ]=primitive ;_eebaa ._aaadc [primitive ]=model ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cgacf :=PdfDate {};_degce :=_feeabg .FindAllStringSubmatch (dateStr ,1);if len (_degce )< 1{return _cgacf ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_degce [0])!=10{return _cgacf ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_cgacf ._feafed ,_ =_fa .ParseInt (_degce [0][1],10,32);_cgacf ._cbaec ,_ =_fa .ParseInt (_degce [0][2],10,32);_cgacf ._edbg ,_ =_fa .ParseInt (_degce [0][3],10,32);_cgacf ._bdbaa ,_ =_fa .ParseInt (_degce [0][4],10,32);_cgacf ._gegbbb ,_ =_fa .ParseInt (_degce [0][5],10,32);
_cgacf ._gcfac ,_ =_fa .ParseInt (_degce [0][6],10,32);if len (_degce [0][7])> 0{_cgacf ._ffagg =_degce [0][7][0];}else {_cgacf ._ffagg ='+';};if len (_degce [0][8])> 0{_cgacf ._dffcec ,_ =_fa .ParseInt (_degce [0][8],10,32);}else {_cgacf ._dffcec =0;};
if len (_degce [0][9])> 0{_cgacf ._eefg ,_ =_fa .ParseInt (_degce [0][9],10,32);}else {_cgacf ._eefg =0;};return _cgacf ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cd .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cd .PdfObject ;Flags _cd .PdfObject ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gaaec *XObjectImage )SetFilter (encoder _cd .StreamEncoder )error {_edeec :=_gaaec .Stream ;_cced ,_ebgec :=_gaaec .Filter .DecodeBytes (_edeec );if _ebgec !=nil {return _ebgec ;};_gaaec .Filter =encoder ;encoder .UpdateParams (_gaaec .getParamsDict ());
_edeec ,_ebgec =encoder .EncodeBytes (_cced );if _ebgec !=nil {return _ebgec ;};_gaaec .Stream =_edeec ;return nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cd .PdfObjectArray ;Domain *_cd .PdfObjectArray ;Function []PdfFunction ;Extend *_cd .PdfObjectArray ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_dfbbe *PdfPageResources )GetFontByName (keyName _cd .PdfObjectName )(_cd .PdfObject ,bool ){if _dfbbe .Font ==nil {return nil ,false ;};_fadbe ,_eafd :=_cd .TraceToDirectObject (_dfbbe .Font ).(*_cd .PdfObjectDictionary );if !_eafd {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cd .TraceToDirectObject (_dfbbe .Font ));
return nil ,false ;};if _beaba :=_fadbe .Get (keyName );_beaba !=nil {return _beaba ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_ffcg *PdfActionLaunch )ToPdfObject ()_cd .PdfObject {_ffcg .PdfAction .ToPdfObject ();_ddf :=_ffcg ._cea ;_ggf :=_ddf .PdfObject .(*_cd .PdfObjectDictionary );_ggf .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeLaunch )));if _ffcg .F !=nil {_ggf .Set ("\u0046",_ffcg .F .ToPdfObject ());
};_ggf .SetIfNotNil ("\u0057\u0069\u006e",_ffcg .Win );_ggf .SetIfNotNil ("\u004d\u0061\u0063",_ffcg .Mac );_ggf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ffcg .Unix );_ggf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ffcg .NewWindow );
return _ddf ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_afdba *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _afdba ._dfdc .(*PdfShadingPattern );};func _dfega ()string {_gcebg .Lock ();defer _gcebg .Unlock ();if len (_dgdcd )> 0{return _dgdcd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func (_def *PdfReader )newPdfActionThreadFromDict (_dde *_cd .PdfObjectDictionary )(*PdfActionThread ,error ){_cag ,_ebc :=_ace (_dde .Get ("\u0046"));if _ebc !=nil {return nil ,_ebc ;};return &PdfActionThread {D :_dde .Get ("\u0044"),B :_dde .Get ("\u0042"),F :_cag },nil ;
};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dgggg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ac .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_gagf ,_fdgf :=_agb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._deff ,img ._ddfef );if _fdgf !=nil {return img ,_fdgf ;};_gaaa ,_fdgf :=_agb .NRGBAConverter .Convert (_gagf );if _fdgf !=nil {return img ,_fdgf ;
};_bfbf :=_ebdb (_gaaa .Base ());_dac .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dac .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_dac .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_bfbf .Data );
_dac .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_bfbf );return _bfbf ,nil ;};func (_bfeg *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_cf :=NewPdfAction ();_cgb :=&PdfActionGoToE {};_cgb .PdfAction =_cf ;_cf .SetContext (_cgb );return _cgb ;};func (_gbdfe *PdfReader )buildOutlineTree (_adeae _cd .PdfObject ,_afgff *PdfOutlineTreeNode ,_bfcbd *PdfOutlineTreeNode ,_eabeb map[_cd .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _eabeb ==nil {_eabeb =map[_cd .PdfObject ]struct{}{};
};_eabeb [_adeae ]=struct{}{};_cddfc ,_abcbg :=_adeae .(*_cd .PdfIndirectObject );if !_abcbg {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_adeae );
};_gbdaf ,_bfaffc :=_cddfc .PdfObject .(*_cd .PdfObjectDictionary );if !_bfaffc {return nil ,nil ,_ac .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dac .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_gbdaf ,_cddfc ,_cddfc );
if _ccbg :=_gbdaf .Get ("\u0054\u0069\u0074l\u0065");_ccbg !=nil {_bcfdg ,_gabe :=_gbdfe .newPdfOutlineItemFromIndirectObject (_cddfc );if _gabe !=nil {return nil ,nil ,_gabe ;};_bcfdg .Parent =_afgff ;_bcfdg .Prev =_bfcbd ;_bedecg :=_cd .ResolveReference (_gbdaf .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_egede :=_eabeb [_bedecg ];_bedecg !=nil &&_bedecg !=_cddfc &&!_egede {if !_cd .IsNullObject (_bedecg ){_gcebcb ,_eefe ,_fdcgd :=_gbdfe .buildOutlineTree (_bedecg ,&_bcfdg .PdfOutlineTreeNode ,nil ,_eabeb );if _fdcgd !=nil {_dac .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fdcgd );
}else {_bcfdg .First =_gcebcb ;_bcfdg .Last =_eefe ;};};};_gbefe :=_cd .ResolveReference (_gbdaf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_adbgd :=_eabeb [_gbefe ];_gbefe !=nil &&_gbefe !=_cddfc &&!_adbgd {if !_cd .IsNullObject (_gbefe ){_gbecb ,_bdbag ,_cebec :=_gbdfe .buildOutlineTree (_gbefe ,_afgff ,&_bcfdg .PdfOutlineTreeNode ,_eabeb );
if _cebec !=nil {_dac .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_cebec );
}else {_bcfdg .Next =_gbecb ;return &_bcfdg .PdfOutlineTreeNode ,_bdbag ,nil ;};};};return &_bcfdg .PdfOutlineTreeNode ,&_bcfdg .PdfOutlineTreeNode ,nil ;};_fcggeb ,_fabea :=_eebag (_cddfc );if _fabea !=nil {return nil ,nil ,_fabea ;};_fcggeb .Parent =_afgff ;
if _efegf :=_gbdaf .Get ("\u0046\u0069\u0072s\u0074");_efegf !=nil {_efegf =_cd .ResolveReference (_efegf );if _ ,_cebac :=_eabeb [_efegf ];_efegf !=nil &&_efegf !=_cddfc &&!_cebac {_fbfafg :=_cd .TraceToDirectObject (_efegf );if _ ,_gegdg :=_fbfafg .(*_cd .PdfObjectNull );
!_gegdg &&_fbfafg !=nil {_dggge ,_dbef ,_ebebc :=_gbdfe .buildOutlineTree (_efegf ,&_fcggeb .PdfOutlineTreeNode ,nil ,_eabeb );if _ebebc !=nil {_dac .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_ebebc );
}else {_fcggeb .First =_dggge ;_fcggeb .Last =_dbef ;};};};};return &_fcggeb .PdfOutlineTreeNode ,&_fcggeb .PdfOutlineTreeNode ,nil ;};func (_edcc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _edcc ._agbbba .GetCrypter ()!=nil &&!_edcc ._agbbba .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_geag :=_edcc ._bbaed ;_gfefc :=_geag .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _gfefc ==nil {return nil ,nil ;};_cgaag ,_ :=_cd .GetIndirect (_gfefc );_gfefc =_cd .TraceToDirectObject (_gfefc );if _cd .IsNullObject (_gfefc ){_dac .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_cbcdg ,_cfgaa :=_cd .GetDict (_gfefc );if !_cfgaa {_dac .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gfefc );_dac .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_gfefc );};_dac .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_dac .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_edcc ._cgeagg {_bdgdb :=_edcc .traverseObjectData (_cbcdg );
if _bdgdb !=nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_bdgdb );
return nil ,_bdgdb ;};};_cdbcf ,_fggece :=_edcc .newPdfAcroFormFromDict (_cgaag ,_cbcdg );if _fggece !=nil {return nil ,_fggece ;};return _cdbcf ,nil ;};func (_cefd *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fabfg :=_cefd ._gdegf ;_fabfg !=nil {return _fabfg ;
};return _cefd ._gbggb ;};func (_fbaa *PdfReader )newPdfFieldSignatureFromDict (_bdaa *_cd .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cecc :=&PdfFieldSignature {};_gdaa ,_gcfb :=_cd .GetIndirect (_bdaa .Get ("\u0056"));if _gcfb {var _ffdg error ;
_cecc .V ,_ffdg =_fbaa .newPdfSignatureFromIndirect (_gdaa );if _ffdg !=nil {return nil ,_ffdg ;};};_cecc .Lock ,_ =_cd .GetIndirect (_bdaa .Get ("\u004c\u006f\u0063\u006b"));_cecc .SV ,_ =_cd .GetIndirect (_bdaa .Get ("\u0053\u0056"));return _cecc ,nil ;
};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cd .PdfObject ;Open _cd .PdfObject ;};func (_eggaa *DSS )addOCSPs (_abedg [][]byte )([]*_cd .PdfObjectStream ,error ){return _eggaa .add (&_eggaa .OCSPs ,_eggaa ._gcfcb ,_abedg );};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _c .Time ){_gcebg .Lock ();defer _gcebg .Unlock ();_adcgb =creationDate ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_acgab :=&PdfSignature {Type :_cd .MakeName ("\u0053\u0069\u0067"),Handler :handler };_dgdc :=&pdfSignDictionary {PdfObjectDictionary :_cd .MakeDict (),_abcg :&handler ,_bbac :_acgab };_acgab ._eeda =_cd .MakeIndirectObject (_dgdc );
return _acgab ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ccf :=NewPdfAction ();_gef :=&PdfActionURI {};_gef .PdfAction =_ccf ;_ccf .SetContext (_gef );return _gef ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cd .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cd .PdfObject ;Contents _cd .PdfObject ;
Rotate *int64 ;Group _cd .PdfObject ;Thumb _cd .PdfObject ;B _cd .PdfObject ;Dur _cd .PdfObject ;Trans _cd .PdfObject ;AA _cd .PdfObject ;Metadata _cd .PdfObject ;PieceInfo _cd .PdfObject ;StructParents _cd .PdfObject ;ID _cd .PdfObject ;PZ _cd .PdfObject ;
SeparationInfo _cd .PdfObject ;Tabs _cd .PdfObject ;TemplateInstantiated _cd .PdfObject ;PresSteps _cd .PdfObject ;UserUnit _cd .PdfObject ;VP _cd .PdfObject ;Annots _cd .PdfObject ;_adfdg []*PdfAnnotation ;_dbeb *_cd .PdfObjectDictionary ;_adcdb *_cd .PdfIndirectObject ;
_adega *PdfReader ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_egedg :=PdfPage {};_egedg ._dbeb =_cd .MakeDict ();_egedg .Resources =NewPdfPageResources ();_cgccd :=_cd .PdfIndirectObject {};_cgccd .PdfObject =_egedg ._dbeb ;_egedg ._adcdb =&_cgccd ;return &_egedg ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gg :=NewPdfAction ();_gca :=&PdfActionTrans {};_gca .PdfAction =_gg ;_gg .SetContext (_gca );return _gca ;};func (_eggc *PdfReader )newPdfAnnotationRedactFromDict (_cdaf *_cd .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fbc :=PdfAnnotationRedact {};
_fbd ,_fbe :=_eggc .newPdfAnnotationMarkupFromDict (_cdaf );if _fbe !=nil {return nil ,_fbe ;};_fbc .PdfAnnotationMarkup =_fbd ;_fbc .QuadPoints =_cdaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbc .IC =_cdaf .Get ("\u0049\u0043");
_fbc .RO =_cdaf .Get ("\u0052\u004f");_fbc .OverlayText =_cdaf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_fbc .Repeat =_cdaf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fbc .DA =_cdaf .Get ("\u0044\u0041");_fbc .Q =_cdaf .Get ("\u0051");
return &_fbc ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_gafg PdfModel ;_ebfdd *_cd .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cd .PdfObjectName ;T *_cd .PdfObjectString ;TU *_cd .PdfObjectString ;TM *_cd .PdfObjectString ;Ff *_cd .PdfObjectInteger ;
V _cd .PdfObject ;DV _cd .PdfObject ;AA _cd .PdfObject ;};

// Encoder returns the font's text encoder.
func (_agagb pdfCIDFontType0 )Encoder ()_cg .TextEncoder {return _agagb ._ggee };

// ToPdfObject implements interface PdfModel.
func (_aeb *PdfAnnotationHighlight )ToPdfObject ()_cd .PdfObject {_aeb .PdfAnnotation .ToPdfObject ();_gge :=_aeb ._fef ;_faa :=_gge .PdfObject .(*_cd .PdfObjectDictionary );_aeb .PdfAnnotationMarkup .appendToPdfDictionary (_faa );_faa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_faa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aeb .QuadPoints );return _gge ;};

// Val returns the color value.
func (_dbdb *PdfColorDeviceGray )Val ()float64 {return float64 (*_dbdb )};

// HasFontByName checks if has font resource by name.
func (_agdgaf *PdfPage )HasFontByName (name _cd .PdfObjectName )bool {_dcac ,_baegc :=_agdgaf .Resources .Font .(*_cd .PdfObjectDictionary );if !_baegc {return false ;};if _fafee :=_dcac .Get (name );_fafee !=nil {return true ;};return false ;};func (_debff *PdfReader )newPdfAcroFormFromDict (_gbgc *_cd .PdfIndirectObject ,_caffga *_cd .PdfObjectDictionary )(*PdfAcroForm ,error ){_feegg :=NewPdfAcroForm ();
if _gbgc !=nil {_feegg ._cbfda =_gbgc ;_gbgc .PdfObject =_cd .MakeDict ();};if _fgde :=_caffga .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_fgde !=nil {_dafb ,_fbfa :=_cd .GetArray (_fgde );if !_fbfa {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fgde );
};var _cdec []*PdfField ;for _ ,_ddecd :=range _dafb .Elements (){_gebea ,_aafade :=_cd .GetIndirect (_ddecd );if !_aafade {if _ ,_bgeaa :=_ddecd .(*_cd .PdfObjectNull );_bgeaa {_dac .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_dac .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ddecd );
return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dfbg ,_geded :=_debff .newPdfFieldFromIndirectObject (_gebea ,nil );
if _geded !=nil {return nil ,_geded ;};_dac .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_dfbg );_cdec =append (_cdec ,_dfbg );};_feegg .Fields =&_cdec ;};if _fccd :=_caffga .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_fccd !=nil {_cfee ,_bbabgc :=_cd .GetBool (_fccd );if _bbabgc {_feegg .NeedAppearances =_cfee ;}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fccd );
};};if _bgfea :=_caffga .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bgfea !=nil {_eaegd ,_fbbca :=_cd .GetInt (_bgfea );if _fbbca {_feegg .SigFlags =_eaegd ;}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgfea );
};};if _dabcbg :=_caffga .Get ("\u0043\u004f");_dabcbg !=nil {_dcdg ,_gefbf :=_cd .GetArray (_dabcbg );if _gefbf {_feegg .CO =_dcdg ;}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dabcbg );
};};if _babef :=_caffga .Get ("\u0044\u0052");_babef !=nil {if _acdf ,_gbgce :=_cd .GetDict (_babef );_gbgce {_daedg ,_faaa :=NewPdfPageResourcesFromDict (_acdf );if _faaa !=nil {_dac .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_faaa );
return nil ,_faaa ;};_feegg .DR =_daedg ;}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_babef );};};if _bbagc :=_caffga .Get ("\u0044\u0041");
_bbagc !=nil {_fggebd ,_ccgdf :=_cd .GetString (_bbagc );if _ccgdf {_feegg .DA =_fggebd ;}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bbagc );
};};if _bgbae :=_caffga .Get ("\u0051");_bgbae !=nil {_dbegf ,_cdcgc :=_cd .GetInt (_bgbae );if _cdcgc {_feegg .Q =_dbegf ;}else {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bgbae );
};};if _bdaba :=_caffga .Get ("\u0058\u0046\u0041");_bdaba !=nil {_feegg .XFA =_bdaba ;};_feegg .ToPdfObject ();return _feegg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cee *PdfActionGoTo3DView )ToPdfObject ()_cd .PdfObject {_cee .PdfAction .ToPdfObject ();_agde :=_cee ._cea ;_ed :=_agde .PdfObject .(*_cd .PdfObjectDictionary );_ed .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeGoTo3DView )));_ed .SetIfNotNil ("\u0054\u0041",_cee .TA );
_ed .SetIfNotNil ("\u0056",_cee .V );return _agde ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cbgf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cbgf .N =N ;return _cbgf ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cgab :=NewPdfAnnotation ();_fce :=&PdfAnnotationProjection {};_fce .PdfAnnotation =_cgab ;_fce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgab .SetContext (_fce );return _fce ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_bgfa *_cd .PdfIndirectObject ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fffbd *PdfWriter )SetDocInfo (info *PdfInfo ){if _fffbd .hasObject (_fffbd ._gcfga ){delete (_fffbd ._eebaaf ,_fffbd ._gcfga );delete (_fffbd ._fecfaa ,_fffbd ._gcfga );for _efbd ,_gedafa :=range _fffbd ._aaeg {if _gedafa ==_fffbd ._gcfga {copy (_fffbd ._aaeg [_efbd :],_fffbd ._aaeg [_efbd +1:]);
_fffbd ._aaeg [len (_fffbd ._aaeg )-1]=nil ;_fffbd ._aaeg =_fffbd ._aaeg [:len (_fffbd ._aaeg )-1];break ;};};};_eagafe :=_cd .PdfIndirectObject {};_eagafe .PdfObject =info .ToPdfObject ();_fffbd ._gcfga =&_eagafe ;_fffbd .addObject (&_eagafe );};type pdfSignDictionary struct{*_cd .PdfObjectDictionary ;
_abcg *SignatureHandler ;_bbac *PdfSignature ;_gfded int64 ;_fgfdef int ;_bbgdc int ;_fbgfd int ;_egddg int ;};func (_ddbd *PdfReader )newPdfAnnotationFileAttachmentFromDict (_edgd *_cd .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_gfcg :=PdfAnnotationFileAttachment {};
_gcce ,_cdcd :=_ddbd .newPdfAnnotationMarkupFromDict (_edgd );if _cdcd !=nil {return nil ,_cdcd ;};_gfcg .PdfAnnotationMarkup =_gcce ;_gfcg .FS =_edgd .Get ("\u0046\u0053");_gfcg .Name =_edgd .Get ("\u004e\u0061\u006d\u0065");return &_gfcg ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_ccebec *PdfPattern )ToPdfObject ()_cd .PdfObject {_bccc :=_ccebec .getDict ();_bccc .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bccc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cd .MakeInteger (_ccebec .PatternType ));
return _ccebec ._geeaf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebae *PdfColorspaceDeviceGray )ToPdfObject ()_cd .PdfObject {return _cd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_gbfcf *PdfWriter )copyObject (_efede _cd .PdfObject ,_eebab map[_cd .PdfObject ]_cd .PdfObject ,_ebddg map[_cd .PdfObject ]struct{},_aaffg bool )_cd .PdfObject {_gbcd :=!_gbfcf ._fgcc &&_ebddg !=nil ;
if _ddaec ,_abfba :=_eebab [_efede ];_abfba {if _gbcd &&!_aaffg {delete (_ebddg ,_efede );};return _ddaec ;};_egfa :=_efede ;switch _gegef :=_efede .(type ){case *_cd .PdfObjectArray :_ggcef :=_cd .MakeArray ();_egfa =_ggcef ;_eebab [_efede ]=_egfa ;for _ ,_fbafd :=range _gegef .Elements (){_ggcef .Append (_gbfcf .copyObject (_fbafd ,_eebab ,_ebddg ,_aaffg ));
};case *_cd .PdfObjectStreams :_bgfcb :=&_cd .PdfObjectStreams {PdfObjectReference :_gegef .PdfObjectReference };_egfa =_bgfcb ;_eebab [_efede ]=_egfa ;for _ ,_afgg :=range _gegef .Elements (){_bgfcb .Append (_gbfcf .copyObject (_afgg ,_eebab ,_ebddg ,_aaffg ));
};case *_cd .PdfObjectStream :_bfafg :=&_cd .PdfObjectStream {Stream :_gegef .Stream ,PdfObjectReference :_gegef .PdfObjectReference };_egfa =_bfafg ;_eebab [_efede ]=_egfa ;_bfafg .PdfObjectDictionary =_gbfcf .copyObject (_gegef .PdfObjectDictionary ,_eebab ,_ebddg ,_aaffg ).(*_cd .PdfObjectDictionary );
case *_cd .PdfObjectDictionary :var _beccd bool ;if _gbcd &&!_aaffg {if _fgbfd ,_ :=_cd .GetNameVal (_gegef .Get ("\u0054\u0079\u0070\u0065"));_fgbfd =="\u0050\u0061\u0067\u0065"{_ ,_cbfdf :=_gbfcf ._aada [_gegef ];_aaffg =!_cbfdf ;_beccd =_aaffg ;};};
_beedc :=_cd .MakeDict ();_egfa =_beedc ;_eebab [_efede ]=_egfa ;for _ ,_feccc :=range _gegef .Keys (){_beedc .Set (_feccc ,_gbfcf .copyObject (_gegef .Get (_feccc ),_eebab ,_ebddg ,_aaffg ));};if _beccd {_egfa =_cd .MakeNull ();_aaffg =false ;};case *_cd .PdfIndirectObject :_cdece :=&_cd .PdfIndirectObject {PdfObjectReference :_gegef .PdfObjectReference };
_egfa =_cdece ;_eebab [_efede ]=_egfa ;_cdece .PdfObject =_gbfcf .copyObject (_gegef .PdfObject ,_eebab ,_ebddg ,_aaffg );case *_cd .PdfObjectString :_faafg :=*_gegef ;_egfa =&_faafg ;_eebab [_efede ]=_egfa ;case *_cd .PdfObjectName :_cgded :=*_gegef ;
_egfa =&_cgded ;_eebab [_efede ]=_egfa ;case *_cd .PdfObjectNull :_egfa =_cd .MakeNull ();_eebab [_efede ]=_egfa ;case *_cd .PdfObjectInteger :_edade :=*_gegef ;_egfa =&_edade ;_eebab [_efede ]=_egfa ;case *_cd .PdfObjectReference :_abfbb :=*_gegef ;_egfa =&_abfbb ;
_eebab [_efede ]=_egfa ;case *_cd .PdfObjectFloat :_ecabea :=*_gegef ;_egfa =&_ecabea ;_eebab [_efede ]=_egfa ;case *_cd .PdfObjectBool :_cagg :=*_gegef ;_egfa =&_cagg ;_eebab [_efede ]=_egfa ;case *pdfSignDictionary :_ddgde :=&pdfSignDictionary {PdfObjectDictionary :_cd .MakeDict (),_abcg :_gegef ._abcg ,_bbac :_gegef ._bbac };
_egfa =_ddgde ;_eebab [_efede ]=_egfa ;for _ ,_bbef :=range _gegef .Keys (){_ddgde .Set (_bbef ,_gbfcf .copyObject (_gegef .Get (_bbef ),_eebab ,_ebddg ,_aaffg ));};default:_dac .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_efede );
};if _gbcd &&_aaffg {_ebddg [_efede ]=struct{}{};};return _egfa ;};func _ddcfb (_bgebga _cd .PdfObject )(PdfFunction ,error ){_bgebga =_cd .ResolveReference (_bgebga );if _aagb ,_cfge :=_bgebga .(*_cd .PdfObjectStream );_cfge {_fcaa :=_aagb .PdfObjectDictionary ;
_cgbgd ,_abag :=_fcaa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cd .PdfObjectInteger );if !_abag {_dac .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ac .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cgbgd ==0{return _eddea (_aagb );}else if *_cgbgd ==4{return _efefd (_aagb );
}else {return nil ,_ac .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gcefc ,_ddeec :=_bgebga .(*_cd .PdfIndirectObject );_ddeec {_eccfd ,_gcddb :=_gcefc .PdfObject .(*_cd .PdfObjectDictionary );
if !_gcddb {_dac .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ac .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_dabaf ,_gcddb :=_eccfd .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cd .PdfObjectInteger );
if !_gcddb {_dac .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ac .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_dabaf ==2{return _bebea (_gcefc );}else if *_dabaf ==3{return _ggcf (_gcefc );}else {return nil ,_ac .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _fgbf ,_bgaa :=_bgebga .(*_cd .PdfObjectDictionary );
_bgaa {_afaedg ,_dgde :=_fgbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cd .PdfObjectInteger );if !_dgde {_dac .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ac .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_afaedg ==2{return _bebea (_fgbf );}else if *_afaedg ==3{return _ggcf (_fgbf );
}else {return nil ,_ac .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dac .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_bgebga );
return nil ,_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_eegca *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgcda ,_cdfc :=color .(*PdfColorCalRGB );if !_cdfc {_dac .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecfg :=_dgcda .A ();_eceb :=_dgcda .B ();_bdea :=_dgcda .C ();X :=_eegca .Matrix [0]*_fc .Pow (_ecfg ,_eegca .Gamma [0])+_eegca .Matrix [3]*_fc .Pow (_eceb ,_eegca .Gamma [1])+_eegca .Matrix [6]*_fc .Pow (_bdea ,_eegca .Gamma [2]);
Y :=_eegca .Matrix [1]*_fc .Pow (_ecfg ,_eegca .Gamma [0])+_eegca .Matrix [4]*_fc .Pow (_eceb ,_eegca .Gamma [1])+_eegca .Matrix [7]*_fc .Pow (_bdea ,_eegca .Gamma [2]);Z :=_eegca .Matrix [2]*_fc .Pow (_ecfg ,_eegca .Gamma [0])+_eegca .Matrix [5]*_fc .Pow (_eceb ,_eegca .Gamma [1])+_eegca .Matrix [8]*_fc .Pow (_bdea ,_eegca .Gamma [2]);
_eafc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ccca :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbed :=0.055648*X +-0.204043*Y +1.057311*Z ;_eafc =_fc .Min (_fc .Max (_eafc ,0),1.0);_ccca =_fc .Min (_fc .Max (_ccca ,0),1.0);_cbed =_fc .Min (_fc .Max (_cbed ,0),1.0);
return NewPdfColorDeviceRGB (_eafc ,_ccca ,_cbed ),nil ;};func (_ebeged *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject implements interface PdfModel.
func (_agcg *PdfAnnotationPolygon )ToPdfObject ()_cd .PdfObject {_agcg .PdfAnnotation .ToPdfObject ();_effee :=_agcg ._fef ;_dfdg :=_effee .PdfObject .(*_cd .PdfObjectDictionary );_agcg .PdfAnnotationMarkup .appendToPdfDictionary (_dfdg );_dfdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_dfdg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_agcg .Vertices );_dfdg .SetIfNotNil ("\u004c\u0045",_agcg .LE );_dfdg .SetIfNotNil ("\u0042\u0053",_agcg .BS );_dfdg .SetIfNotNil ("\u0049\u0043",_agcg .IC );_dfdg .SetIfNotNil ("\u0042\u0045",_agcg .BE );
_dfdg .SetIfNotNil ("\u0049\u0054",_agcg .IT );_dfdg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_agcg .Measure );return _effee ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_beace *PdfPage )GetAllContentStreams ()(string ,error ){_facfgf ,_bfcfb :=_beace .GetContentStreams ();if _bfcfb !=nil {return "",_bfcfb ;};return _fg .Join (_facfgf ,"\u0020"),nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ec PdfModel ;Type _cd .PdfObject ;S _cd .PdfObject ;Next _cd .PdfObject ;_cea *_cd .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_fdcd *PdfColorspaceLab )DecodeArray ()[]float64 {_bcgc :=[]float64 {0,100};if _fdcd .Range !=nil &&len (_fdcd .Range )==4{_bcgc =append (_bcgc ,_fdcd .Range ...);}else {_bcgc =append (_bcgc ,-100,100,-100,100);};return _bcgc ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ead *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ead .Range };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_abbg *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func _ffdfd (_cefcag _cd .PdfObject )[]*_cd .PdfObjectStream {if _cefcag ==nil {return nil ;};_bbad ,_dccda :=_cd .GetArray (_cefcag );if !_dccda ||_bbad .Len ()==0{return nil ;
};_gdbag :=make ([]*_cd .PdfObjectStream ,0,_bbad .Len ());for _ ,_bgfaf :=range _bbad .Elements (){if _geafa ,_acdag :=_cd .GetStream (_bgfaf );_acdag {_gdbag =append (_gdbag ,_geafa );};};return _gdbag ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cd .PdfObject ;BS _cd .PdfObject ;};

// WriteString outputs the object as it is to be written to file.
func (_ecge *pdfSignDictionary )WriteString ()string {_ecge ._fgfdef =0;_ecge ._bbgdc =0;_ecge ._fbgfd =0;_ecge ._egddg =0;_deaab :=_ccc .NewBuffer (nil );_deaab .WriteString ("\u003c\u003c");for _ ,_gfcfb :=range _ecge .Keys (){_bfdg :=_ecge .Get (_gfcfb );
switch _gfcfb {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_deaab .WriteString (_gfcfb .WriteString ());_deaab .WriteString ("\u0020");_ecge ._fbgfd =_deaab .Len ();_deaab .WriteString (_bfdg .WriteString ());_deaab .WriteString ("\u0020");_ecge ._egddg =_deaab .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_deaab .WriteString (_gfcfb .WriteString ());_deaab .WriteString ("\u0020");_ecge ._fgfdef =_deaab .Len ();_deaab .WriteString (_bfdg .WriteString ());_deaab .WriteString ("\u0020");_ecge ._bbgdc =_deaab .Len ()-1;
default:_deaab .WriteString (_gfcfb .WriteString ());_deaab .WriteString ("\u0020");_deaab .WriteString (_bfdg .WriteString ());};};_deaab .WriteString ("\u003e\u003e");return _deaab .String ();};func _cafbfd (_gfacf *PdfPage ){_agfgg :=_ee .GetLicenseKey ();
if _agfgg !=nil &&_agfgg .IsLicensed (){return ;};_cfacc :=_cd .PdfObjectName ("\u0055\u0046\u0031");if !_gfacf .Resources .HasFontByName (_cfacc ){_gfacf .Resources .SetFontByName (_cfacc ,DefaultFont ().ToPdfObject ());};var _dfbdd []string ;_dfbdd =append (_dfbdd ,"\u0071");
_dfbdd =append (_dfbdd ,"\u0042\u0054");_dfbdd =append (_dfbdd ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_cfacc .String ()));_dfbdd =append (_dfbdd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dfbdd =append (_dfbdd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_ccad :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dfbdd =append (_dfbdd ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_ccad ));_dfbdd =append (_dfbdd ,"\u0045\u0054");_dfbdd =append (_dfbdd ,"\u0051");_gaaef :=_fg .Join (_dfbdd ,"\u000a");_gfacf .AddContentStreamByString (_gaaef );_gfacf .ToPdfObject ();
};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// GetOutlineTree returns the outline tree.
func (_fcbde *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fcbde ._facac };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_beed *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgcff :=vals [0];if _fgcff < 0.0||_fgcff > 100.0{_dac .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_fgcff );
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abba :=vals [1];_efba :=float64 (-100);_cbfeb :=float64 (100);if len (_beed .Range )> 1{_efba =_beed .Range [0];_cbfeb =_beed .Range [1];};if _abba < _efba ||_abba > _cbfeb {_dac .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_abba ,_efba ,_cbfeb );
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbec :=vals [2];_afba :=float64 (-100);_ebeaf :=float64 (100);if len (_beed .Range )> 3{_afba =_beed .Range [2];_ebeaf =_beed .Range [3];};if _dbec < _afba ||_dbec > _ebeaf {_dac .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dbec ,_afba ,_ebeaf );
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adgd :=NewPdfColorLab (_fgcff ,_abba ,_dbec );return _adgd ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_efgbb *Image )ColorAt (x ,y int )(_gd .Color ,error ){_adcc :=_agb .BytesPerLine (int (_efgbb .Width ),int (_efgbb .BitsPerComponent ),_efgbb .ColorComponents );switch _efgbb .ColorComponents {case 1:return _agb .ColorAtGrayscale (x ,y ,int (_efgbb .BitsPerComponent ),_adcc ,_efgbb .Data ,_efgbb ._ddfef );
case 3:return _agb .ColorAtNRGBA (x ,y ,int (_efgbb .Width ),_adcc ,int (_efgbb .BitsPerComponent ),_efgbb .Data ,_efgbb ._deff ,_efgbb ._ddfef );case 4:return _agb .ColorAtCMYK (x ,y ,int (_efgbb .Width ),_efgbb .Data ,_efgbb ._ddfef );};_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_efgbb .ColorComponents ,_efgbb .BitsPerComponent );
return nil ,_ac .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cd .PdfObjectInteger ;BitsPerComponent *_cd .PdfObjectInteger ;VerticesPerRow *_cd .PdfObjectInteger ;Decode *_cd .PdfObjectArray ;Function []PdfFunction ;};const (ButtonTypeCheckbox ButtonType =iota ;
ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// AddCustomInfo adds a custom info into document info dictionary.
func (_ccgd *PdfInfo )AddCustomInfo (name string ,value string )error {if _ccgd ._cbef ==nil {_ccgd ._cbef =_cd .MakeDict ();};if _ ,_gcfe :=_cabe [name ];_gcfe {return _b .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_ccgd ._cbef .SetIfNotNil (*_cd .MakeName (name ),_cd .MakeString (value ));return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_feeg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cd .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gdca []_cd .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bab []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_dcec *PdfFont )baseFields ()*fontCommon {if _dcec ._fedf ==nil {_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _dcec ._fedf .baseFields ();};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eefde *PdfOutlineItem )ToPdfObject ()_cd .PdfObject {_cbgc :=_eefde ._cgbcf ;_cffgfc :=_cbgc .PdfObject .(*_cd .PdfObjectDictionary );_cffgfc .Set ("\u0054\u0069\u0074l\u0065",_eefde .Title );if _eefde .A !=nil {_cffgfc .Set ("\u0041",_eefde .A );
};if _cedga :=_cffgfc .Get ("\u0053\u0045");_cedga !=nil {_cffgfc .Remove ("\u0053\u0045");};if _eefde .C !=nil {_cffgfc .Set ("\u0043",_eefde .C );};if _eefde .Dest !=nil {_cffgfc .Set ("\u0044\u0065\u0073\u0074",_eefde .Dest );};if _eefde .F !=nil {_cffgfc .Set ("\u0046",_eefde .F );
};if _eefde .Count !=nil {_cffgfc .Set ("\u0043\u006f\u0075n\u0074",_cd .MakeInteger (*_eefde .Count ));};if _eefde .Next !=nil {_cffgfc .Set ("\u004e\u0065\u0078\u0074",_eefde .Next .ToPdfObject ());};if _eefde .First !=nil {_cffgfc .Set ("\u0046\u0069\u0072s\u0074",_eefde .First .ToPdfObject ());
};if _eefde .Prev !=nil {_cffgfc .Set ("\u0050\u0072\u0065\u0076",_eefde .Prev .GetContext ().GetContainingPdfObject ());};if _eefde .Last !=nil {_cffgfc .Set ("\u004c\u0061\u0073\u0074",_eefde .Last .GetContext ().GetContainingPdfObject ());};if _eefde .Parent !=nil {_cffgfc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eefde .Parent .GetContext ().GetContainingPdfObject ());
};return _cbgc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_caefb pdfFontType0 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){if _caefb .DescendantFont ==nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_caefb );
return _bcd .CharMetrics {},false ;};return _caefb .DescendantFont .GetRuneMetrics (r );};type pdfFontType3 struct{fontCommon ;_bega *_cd .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _cd .PdfObject ;Encoding _cd .PdfObject ;FontBBox _cd .PdfObject ;FontMatrix _cd .PdfObject ;FirstChar _cd .PdfObject ;LastChar _cd .PdfObject ;Widths _cd .PdfObject ;Resources _cd .PdfObject ;_gdcca map[_cg .CharCode ]float64 ;_cedgg _cg .TextEncoder ;
};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_faacf *PdfPage )AddContentStreamByString (contentStr string )error {_cgafe ,_abgdg :=_cd .MakeStream ([]byte (contentStr ),_cd .NewFlateEncoder ());if _abgdg !=nil {return _abgdg ;};if _faacf .Contents ==nil {_faacf .Contents =_cgafe ;}else {_egeef :=_cd .TraceToDirectObject (_faacf .Contents );
_ebda ,_ffcb :=_egeef .(*_cd .PdfObjectArray );if !_ffcb {_ebda =_cd .MakeArray (_egeef );};_ebda .Append (_cgafe );_faacf .Contents =_ebda ;};return nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cd .PdfObject )(_cd .PdfObjectName ,error ){var _feca *_cd .PdfObjectName ;var _efeg *_cd .PdfObjectArray ;if _bede ,_eefd :=obj .(*_cd .PdfIndirectObject );_eefd {if _ddfcd ,_fag :=_bede .PdfObject .(*_cd .PdfObjectArray );
_fag {_efeg =_ddfcd ;}else if _gdedd ,_bcca :=_bede .PdfObject .(*_cd .PdfObjectName );_bcca {_feca =_gdedd ;};}else if _afg ,_adec :=obj .(*_cd .PdfObjectArray );_adec {_efeg =_afg ;}else if _aaa ,_ccacg :=obj .(*_cd .PdfObjectName );_ccacg {_feca =_aaa ;
};if _feca !=nil {switch *_feca {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_feca ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_feca ,nil ;
};};if _efeg !=nil &&_efeg .Len ()> 0{if _acbd ,_acgf :=_efeg .Get (0).(*_cd .PdfObjectName );_acgf {switch *_acbd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _efeg .Len ()==1{return *_acbd ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_acbd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_acbd ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_acbd ,nil ;};};};return "",nil ;};const (_edcfa =0x00001;_dbfa =0x00002;_daee =0x00004;_efcgc =0x00008;_bafa =0x00020;_efca =0x00040;_efeff =0x10000;
_bgfb =0x20000;_baad =0x40000;);

// SetAnnotations sets the annotations list.
func (_gccdb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gccdb ._adfdg =annotations };func (_ebde *PdfReader )newPdfAnnotationSquigglyFromDict (_ddd *_cd .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_ddbb :=PdfAnnotationSquiggly {};
_cdea ,_abfc :=_ebde .newPdfAnnotationMarkupFromDict (_ddd );if _abfc !=nil {return nil ,_abfc ;};_ddbb .PdfAnnotationMarkup =_cdea ;_ddbb .QuadPoints =_ddd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ddbb ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bcggg *PdfAcroForm )ToPdfObject ()_cd .PdfObject {_gdgbfd :=_bcggg ._cbfda ;_aggg :=_gdgbfd .PdfObject .(*_cd .PdfObjectDictionary );if _bcggg .Fields !=nil {_gdfac :=_cd .PdfObjectArray {};for _ ,_dfade :=range *_bcggg .Fields {_gedaf :=_dfade .GetContext ();
if _gedaf !=nil {_gdfac .Append (_gedaf .ToPdfObject ());}else {_gdfac .Append (_dfade .ToPdfObject ());};};_aggg .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_gdfac );};if _bcggg .NeedAppearances !=nil {_aggg .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bcggg .NeedAppearances );
};if _bcggg .SigFlags !=nil {_aggg .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bcggg .SigFlags );};if _bcggg .CO !=nil {_aggg .Set ("\u0043\u004f",_bcggg .CO );};if _bcggg .DR !=nil {_aggg .Set ("\u0044\u0052",_bcggg .DR .ToPdfObject ());
};if _bcggg .DA !=nil {_aggg .Set ("\u0044\u0041",_bcggg .DA );};if _bcggg .Q !=nil {_aggg .Set ("\u0051",_bcggg .Q );};if _bcggg .XFA !=nil {_aggg .Set ("\u0058\u0046\u0041",_bcggg .XFA );};return _gdgbfd ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_ffdf *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fdbee :=_ffdf .actualFont ();if _fdbee ==nil {_dac .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_ffdf ._fedf );
return _bcd .CharMetrics {},false ;};if _efbaf ,_dbbb :=_fdbee .GetRuneMetrics (r );_dbbb {return _efbaf ,true ;};if _fabg ,_gacc :=_ffdf .GetFontDescriptor ();_gacc ==nil &&_fabg !=nil {return _bcd .CharMetrics {Wx :_fabg ._bedg },true ;};_dac .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffdf );
return _bcd .CharMetrics {},false ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_fbce *Image )GetParamsDict ()*_cd .PdfObjectDictionary {_cecbb :=_cd .MakeDict ();_cecbb .Set ("\u0057\u0069\u0064t\u0068",_cd .MakeInteger (_fbce .Width ));_cecbb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cd .MakeInteger (_fbce .Height ));_cecbb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cd .MakeInteger (int64 (_fbce .ColorComponents )));
_cecbb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cd .MakeInteger (_fbce .BitsPerComponent ));return _cecbb ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_bdgc *PdfFieldText )ToPdfObject ()_cd .PdfObject {_bdgc .PdfField .ToPdfObject ();_gcdf :=_bdgc ._ebfdd ;_edgc :=_gcdf .PdfObject .(*_cd .PdfObjectDictionary );_edgc .Set ("\u0046\u0054",_cd .MakeName ("\u0054\u0078"));if _bdgc .DA !=nil {_edgc .Set ("\u0044\u0041",_bdgc .DA );
};if _bdgc .Q !=nil {_edgc .Set ("\u0051",_bdgc .Q );};if _bdgc .DS !=nil {_edgc .Set ("\u0044\u0053",_bdgc .DS );};if _bdgc .RV !=nil {_edgc .Set ("\u0052\u0056",_bdgc .RV );};if _bdgc .MaxLen !=nil {_edgc .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_bdgc .MaxLen );
};return _gcdf ;};func (_cdbb *PdfFunctionType0 )processSamples ()error {_afebe :=_dce .ResampleBytes (_cdbb ._beacf ,_cdbb .BitsPerSample );_cdbb ._cagbg =_afebe ;return nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fbcgc ,_cfaaf :=_dgbbg (basefont );if _cfaaf !=nil {return nil ,_cfaaf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fbcgc ._acgfg =_cg .NewWinAnsiEncoder ();};return &PdfFont {_fedf :&_fbcgc },nil ;
};type pdfCIDFontType0 struct{fontCommon ;_egcaa *_cd .PdfIndirectObject ;_ggee _cg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cd .PdfObject ;W _cd .PdfObject ;DW2 _cd .PdfObject ;W2 _cd .PdfObject ;_ebddf map[_cg .CharCode ]float64 ;_agecf float64 ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bdgcf *PdfReader )CheckAccessRights (password []byte )(bool ,_dcg .Permissions ,error ){return _bdgcf ._agbbba .CheckAccessRights (password );};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_ggeae *Image )SetSamples (samples []uint32 ){if _ggeae .BitsPerComponent < 8{samples =_ggeae .samplesAddPadding (samples );};_afef :=_dce .ResampleUint32 (samples ,int (_ggeae .BitsPerComponent ),8);_acdgb :=make ([]byte ,len (_afef ));for _fdaag ,_gaag :=range _afef {_acdgb [_fdaag ]=byte (_gaag );
};_ggeae .Data =_acdgb ;};

// Encoder returns the font's text encoder.
func (_bbce *pdfFontSimple )Encoder ()_cg .TextEncoder {if _bbce ._acgfg !=nil {return _bbce ._acgfg ;};if _bbce ._becba !=nil {return _bbce ._becba ;};_agagd ,_ :=_cg .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _agagd ;};

// GetXObjectByName gets XObject by name.
func (_edfbb *PdfPage )GetXObjectByName (name _cd .PdfObjectName )(_cd .PdfObject ,bool ){_eggg ,_abdfdd :=_edfbb .Resources .XObject .(*_cd .PdfObjectDictionary );if !_abdfdd {return nil ,false ;};if _fccb :=_eggg .Get (name );_fccb !=nil {return _fccb ,true ;
};return nil ,false ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;type pdfCIDFontType2 struct{fontCommon ;_cgdga *_cd .PdfIndirectObject ;_dddfd _cg .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cd .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cd .PdfObject ;W _cd .PdfObject ;DW2 _cd .PdfObject ;W2 _cd .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cd .PdfObject ;_baea map[_cg .CharCode ]float64 ;_ccfac float64 ;_abda map[rune ]int ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cd .PdfObject ;Name _cd .PdfObject ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eaedd OutlineDest )ToPdfObject ()_cd .PdfObject {if (_eaedd .PageObj ==nil &&_eaedd .Page < 0)||_eaedd .Mode ==""{return _cd .MakeNull ();};_bedecb :=_cd .MakeArray ();if _eaedd .PageObj !=nil {_bedecb .Append (_eaedd .PageObj );}else {_bedecb .Append (_cd .MakeInteger (_eaedd .Page ));
};_bedecb .Append (_cd .MakeName (_eaedd .Mode ));switch _eaedd .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_bedecb .Append (_cd .MakeFloat (_eaedd .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_bedecb .Append (_cd .MakeFloat (_eaedd .X ));
case "\u0058\u0059\u005a":_bedecb .Append (_cd .MakeFloat (_eaedd .X ));_bedecb .Append (_cd .MakeFloat (_eaedd .Y ));_bedecb .Append (_cd .MakeFloat (_eaedd .Zoom ));default:_bedecb .Set (1,_cd .MakeName ("\u0046\u0069\u0074"));};return _bedecb ;};

// GetPdfInfo returns the PDF info dictionary.
func (_eceaf *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_egafd :=PdfInfo {};_febdb ,_dagde :=_eceaf .GetTrailer ();if _dagde !=nil {return nil ,_dagde ;};var _eeebf *_cd .PdfObjectDictionary ;_babec :=_febdb .Get ("\u0049\u006e\u0066\u006f");switch _bddc :=_babec .(type ){case *_cd .PdfObjectReference :_acbfa :=_bddc ;
_babec ,_dagde =_eceaf .GetIndirectObjectByNumber (int (_acbfa .ObjectNumber ));_babec =_cd .TraceToDirectObject (_babec );if _dagde !=nil {return nil ,_dagde ;};_eeebf ,_ =_babec .(*_cd .PdfObjectDictionary );case *_cd .PdfObjectDictionary :_eeebf =_bddc ;
};if _eeebf ==nil {return nil ,_ac .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_fddc :=range _eeebf .Keys (){switch _fddc {case "\u0054\u0069\u0074l\u0065":_egafd .Title ,_ =_cd .GetString (_eeebf .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_egafd .Author ,_ =_cd .GetString (_eeebf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_egafd .Subject ,_ =_cd .GetString (_eeebf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_egafd .Keywords ,_ =_cd .GetString (_eeebf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_egafd .Creator ,_ =_cd .GetString (_eeebf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_egafd .Producer ,_ =_cd .GetString (_eeebf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_egafd .Trapped ,_ =_cd .GetName (_eeebf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _fcfa ,_bbffae :=_cd .GetString (_eeebf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_bbffae &&_fcfa .String ()!=""{_bcfae ,_eafef :=NewPdfDate (_fcfa .String ());
if _eafef !=nil {return nil ,_eafef ;};_egafd .CreationDate =&_bcfae ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _afecf ,_caabg :=_cd .GetString (_eeebf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_caabg &&_afecf .String ()!=""{_bcecg ,_cbecg :=NewPdfDate (_afecf .String ());
if _cbecg !=nil {return nil ,_cbecg ;};_egafd .ModifiedDate =&_bcecg ;};default:_fcfba ,_ :=_cd .GetString (_eeebf .Get (_fddc ));if _egafd ._cbef ==nil {_egafd ._cbef =_cd .MakeDict ();};_egafd ._cbef .Set (_fddc ,_fcfba );};};return &_egafd ,nil ;};func _gecb (_dcbg *_cd .PdfObjectDictionary ,_ggge *fontCommon )(*pdfCIDFontType0 ,error ){if _ggge ._ecea !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ggge );
return nil ,_cd .ErrRangeError ;};_ffcagf :=_eaad (_ggge );_edgdg ,_ggbga :=_cd .GetDict (_dcbg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ggbga {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ggge );
return nil ,ErrRequiredAttributeMissing ;};_ffcagf .CIDSystemInfo =_edgdg ;_ffcagf .DW =_dcbg .Get ("\u0044\u0057");_ffcagf .W =_dcbg .Get ("\u0057");_ffcagf .DW2 =_dcbg .Get ("\u0044\u0057\u0032");_ffcagf .W2 =_dcbg .Get ("\u0057\u0032");_ffcagf ._agecf =1000.0;
if _acgg ,_bcebf :=_cd .GetNumberAsFloat (_ffcagf .DW );_bcebf ==nil {_ffcagf ._agecf =_acgg ;};_gcgd ,_dfgbf :=_baae (_ffcagf .W );if _dfgbf !=nil {return nil ,_dfgbf ;};if _gcgd ==nil {_gcgd =map[_cg .CharCode ]float64 {};};_ffcagf ._ebddf =_gcgd ;return _ffcagf ,nil ;
};func _aafgc ()string {_gcebg .Lock ();defer _gcebg .Unlock ();return _fgce };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_babca pdfCIDFontType2 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){_fccfc ,_ccdab :=_babca ._abda [r ];if !_ccdab {_ceab ,_abgg :=_cd .GetInt (_babca .DW );if !_abgg {return _bcd .CharMetrics {},false ;};_fccfc =int (*_ceab );};return _bcd .CharMetrics {Wx :float64 (_fccfc )},true ;
};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_ebgd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject implements interface PdfModel.
func (_cccg *PdfActionGoToE )ToPdfObject ()_cd .PdfObject {_cccg .PdfAction .ToPdfObject ();_cad :=_cccg ._cea ;_begb :=_cad .PdfObject .(*_cd .PdfObjectDictionary );_begb .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeGoToE )));if _cccg .F !=nil {_begb .Set ("\u0046",_cccg .F .ToPdfObject ());
};_begb .SetIfNotNil ("\u0044",_cccg .D );_begb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cccg .NewWindow );_begb .SetIfNotNil ("\u0054",_cccg .T );return _cad ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_ffed :=&PdfOutline {_agaeb :_cd .MakeIndirectObject (_cd .MakeDict ())};_ffed ._aaaag =_ffed ;return _ffed ;};type pdfFont interface{_bcd .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cd .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cd .PdfObject ;LE _cd .PdfObject ;BS _cd .PdfObject ;IC _cd .PdfObject ;BE _cd .PdfObject ;IT _cd .PdfObject ;Measure _cd .PdfObject ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cd .PdfObject ;IC _cd .PdfObject ;BE _cd .PdfObject ;RD _cd .PdfObject ;};func _ggfd (_faac _cd .PdfObject ,_bfbbc *fontCommon )(*_ef .CMap ,error ){_bagbc ,_efbee :=_cd .GetStream (_faac );
if !_efbee {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_faac );
return nil ,_cd .ErrTypeError ;};_cbdfc ,_eddf :=_cd .DecodeStream (_bagbc );if _eddf !=nil {return nil ,_eddf ;};_fcgf ,_eddf :=_ef .LoadCmapFromData (_cbdfc ,!_bfbbc .isCIDFont ());if _eddf !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bagbc .ObjectNumber ,_eddf );
};return _fcgf ,_eddf ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_ggebbg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fcbefa :=RC4_128bit ;if options !=nil {_fcbefa =options .Algorithm ;};_geead :=_dcg .PermOwner ;if options !=nil {_geead =options .Permissions ;};var _aeebe _dacb .Filter ;
switch _fcbefa {case RC4_128bit :_aeebe =_dacb .NewFilterV2 (16);case AES_128bit :_aeebe =_dacb .NewFilterAESV2 ();case AES_256bit :_aeebe =_dacb .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_bcbb ,_fdcgc ,_bedab :=_cd .PdfCryptNewEncrypt (_aeebe ,userPass ,ownerPass ,_geead );if _bedab !=nil {return _bedab ;};_ggebbg ._fbga =_bcbb ;if _fdcgc .Major !=0{_ggebbg .SetVersion (_fdcgc .Major ,_fdcgc .Minor );};_ggebbg ._facfee =_fdcgc .Encrypt ;
_ggebbg ._cacd =_cd .MakeArray (_cd .MakeHexString (_fdcgc .ID0 ),_cd .MakeHexString (_fdcgc .ID1 ));_edddc :=_cd .MakeIndirectObject (_fdcgc .Encrypt );_ggebbg ._ggfeb =_edddc ;_ggebbg .addObject (_edddc );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_defd *PdfAnnotationWidget )ToPdfObject ()_cd .PdfObject {_defd .PdfAnnotation .ToPdfObject ();_edge :=_defd ._fef ;_ffca :=_edge .PdfObject .(*_cd .PdfObjectDictionary );if _defd ._feec {return _edge ;};_defd ._feec =true ;_ffca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ffca .SetIfNotNil ("\u0048",_defd .H );_ffca .SetIfNotNil ("\u004d\u004b",_defd .MK );_ffca .SetIfNotNil ("\u0041",_defd .A );_ffca .SetIfNotNil ("\u0041\u0041",_defd .AA );_ffca .SetIfNotNil ("\u0042\u0053",_defd .BS );_gacf :=_defd .Parent ;if _defd ._edb !=nil {if _defd ._edb ._ebfdd ==_defd ._fef {_defd ._edb .ToPdfObject ();
};_gacf =_defd ._edb .GetContainingPdfObject ();};if _gacf !=_edge {_ffca .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gacf );};_defd ._feec =false ;return _edge ;};func (_fcbg *PdfReader )newPdfActionHideFromDict (_ddaa *_cd .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_ddaa .Get ("\u0054"),H :_ddaa .Get ("\u0048")},nil ;
};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ag .ReadSeeker )(*PdfFont ,error ){_fccaa ,_adbcg :=_ge .ReadAll (r );if _adbcg !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_adbcg );
return nil ,_adbcg ;};_deaf ,_adbcg :=_bcd .TtfParse (_ccc .NewReader (_fccaa ));if _adbcg !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_adbcg );
return nil ,_adbcg ;};_gcced :=&pdfCIDFontType2 {fontCommon :fontCommon {_ecea :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_deaf .Widths )<=0{return nil ,_ac .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfdfd :=1000.0/float64 (_deaf .UnitsPerEm );_dfed :=_bfdfd *float64 (_deaf .Widths [0]);_eebc :=make (map[rune ]int );_cefcf :=make (map[_bcd .GID ]int );_gbfae :=_bcd .GID (len (_deaf .Widths ));for _cbcddd ,_bffec :=range _deaf .Chars {if _bffec > _gbfae -1{continue ;
};_acbf :=int (_bfdfd *float64 (_deaf .Widths [_bffec ]));_eebc [_cbcddd ]=_acbf ;_cefcf [_bffec ]=_acbf ;};_gcced ._abda =_eebc ;_gcced .DW =_cd .MakeInteger (int64 (_dfed ));_gbfab :=_gfccf (_cefcf ,uint16 (_gbfae ));_gcced .W =_cd .MakeIndirectObject (_gbfab );
_caadd :=_cd .MakeDict ();_caadd .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cd .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_caadd .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cd .MakeString ("\u0041\u0064\u006fb\u0065"));
_caadd .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cd .MakeInteger (0));_gcced .CIDSystemInfo =_caadd ;_adgfb :=&PdfFontDescriptor {FontName :_cd .MakeName (_deaf .PostScriptName ),Ascent :_cd .MakeFloat (_bfdfd *float64 (_deaf .TypoAscender )),Descent :_cd .MakeFloat (_bfdfd *float64 (_deaf .TypoDescender )),CapHeight :_cd .MakeFloat (_bfdfd *float64 (_deaf .CapHeight )),FontBBox :_cd .MakeArrayFromFloats ([]float64 {_bfdfd *float64 (_deaf .Xmin ),_bfdfd *float64 (_deaf .Ymin ),_bfdfd *float64 (_deaf .Xmax ),_bfdfd *float64 (_deaf .Ymax )}),ItalicAngle :_cd .MakeFloat (_deaf .ItalicAngle ),MissingWidth :_cd .MakeFloat (_dfed )};
_bdee ,_adbcg :=_cd .MakeStream (_fccaa ,_cd .NewFlateEncoder ());if _adbcg !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_adbcg );
return nil ,_adbcg ;};_bdee .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cd .MakeInteger (int64 (len (_fccaa ))));_adgfb .FontFile2 =_bdee ;if _deaf .Bold {_adgfb .StemV =_cd .MakeInteger (120);}else {_adgfb .StemV =_cd .MakeInteger (70);
};_beca :=_daee ;if _deaf .IsFixedPitch {_beca |=_edcfa ;};if _deaf .ItalicAngle !=0{_beca |=_efca ;};_adgfb .Flags =_cd .MakeInteger (int64 (_beca ));_gcced ._bgdfc =_deaf .PostScriptName ;_gcced ._gdegf =_adgfb ;_beda :=pdfFontType0 {fontCommon :fontCommon {_ecea :"\u0054\u0079\u0070e\u0030",_bgdfc :_deaf .PostScriptName },DescendantFont :&PdfFont {_fedf :_gcced },Encoding :_cd .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_cccad :_deaf .NewEncoder ()};
if len (_deaf .Chars )> 0{_fbaeb :=make (map[_ef .CharCode ]rune ,len (_deaf .Chars ));for _cdacd ,_cbae :=range _deaf .Chars {_cfae :=_ef .CharCode (_cbae );if _ggaee ,_cdde :=_fbaeb [_cfae ];!_cdde ||(_cdde &&_ggaee > _cdacd ){_fbaeb [_cfae ]=_cdacd ;
};};_beda ._deeg =_ef .NewToUnicodeCMap (_fbaeb );};_fgcac :=PdfFont {_fedf :&_beda };return &_fgcac ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_ecacg *PdfSignature )SetLocation (location string ){_ecacg .Location =_cd .MakeString (location )};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_aafc *PdfPageResources )HasExtGState (keyName _cd .PdfObjectName )bool {_ ,_edebg :=_aafc .GetFontByName (keyName );return _edebg ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bdcbf *PdfShadingPattern )ToPdfObject ()_cd .PdfObject {_bdcbf .PdfPattern .ToPdfObject ();_dbfaa :=_bdcbf .getDict ();if _bdcbf .Shading !=nil {_dbfaa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bdcbf .Shading .ToPdfObject ());};if _bdcbf .Matrix !=nil {_dbfaa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bdcbf .Matrix );
};if _bdcbf .ExtGState !=nil {_dbfaa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bdcbf .ExtGState );};return _bdcbf ._geeaf ;};func (_eabee *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _eabee ._gdegf };

// ToPdfObject implements interface PdfModel.
func (_eg *PdfActionMovie )ToPdfObject ()_cd .PdfObject {_eg .PdfAction .ToPdfObject ();_daff :=_eg ._cea ;_cfe :=_daff .PdfObject .(*_cd .PdfObjectDictionary );_cfe .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeMovie )));_cfe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_eg .Annotation );
_cfe .SetIfNotNil ("\u0054",_eg .T );_cfe .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_eg .Operation );return _daff ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cgabg :=&PdfColorspaceSpecialSeparation {};return _cgabg ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bagc *PdfField )GetContext ()PdfModel {return _bagc ._gafg };func (_fcc *PdfReader )newPdfAnnotationPolygonFromDict (_fbg *_cd .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_cae :=PdfAnnotationPolygon {};_edgf ,_cege :=_fcc .newPdfAnnotationMarkupFromDict (_fbg );
if _cege !=nil {return nil ,_cege ;};_cae .PdfAnnotationMarkup =_edgf ;_cae .Vertices =_fbg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_cae .LE =_fbg .Get ("\u004c\u0045");_cae .BS =_fbg .Get ("\u0042\u0053");_cae .IC =_fbg .Get ("\u0049\u0043");
_cae .BE =_fbg .Get ("\u0042\u0045");_cae .IT =_fbg .Get ("\u0049\u0054");_cae .Measure =_fbg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_cae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_db *PdfActionRendition )ToPdfObject ()_cd .PdfObject {_db .PdfAction .ToPdfObject ();_adb :=_db ._cea ;_dgc :=_adb .PdfObject .(*_cd .PdfObjectDictionary );_dgc .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeRendition )));_dgc .SetIfNotNil ("\u0052",_db .R );
_dgc .SetIfNotNil ("\u0041\u004e",_db .AN );_dgc .SetIfNotNil ("\u004f\u0050",_db .OP );_dgc .SetIfNotNil ("\u004a\u0053",_db .JS );return _adb ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToInteger convert to an integer format.
func (_aabg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_bfgc :=_fc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bfgc *_aabg .R ()),uint32 (_bfgc *_aabg .G ()),uint32 (_bfgc *_aabg .B ())};};func _bceb (_gdfb *_cd .PdfObjectDictionary )(*PdfFieldText ,error ){_gbba :=&PdfFieldText {};
_gbba .DA ,_ =_cd .GetString (_gdfb .Get ("\u0044\u0041"));_gbba .Q ,_ =_cd .GetInt (_gdfb .Get ("\u0051"));_gbba .DS ,_ =_cd .GetString (_gdfb .Get ("\u0044\u0053"));_gbba .RV =_gdfb .Get ("\u0052\u0056");_gbba .MaxLen ,_ =_cd .GetInt (_gdfb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _gbba ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_dbcc *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gaefd []*PdfOutlineTreeNode ;var _bdgef []string ;var _dfaeab func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_dfaeab =func (_fcdea *PdfOutlineTreeNode ,_abfd *[]*PdfOutlineTreeNode ,_cggg *[]string ,_ddgec int ){if _fcdea ==nil {return ;
};if _fcdea ._aaaag ==nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_fdaef ,_deafb :=_fcdea ._aaaag .(*PdfOutlineItem );if _deafb {*_abfd =append (*_abfd ,&_fdaef .PdfOutlineTreeNode );
_ddbgg :=_fg .Repeat ("\u0020",_ddgec *2)+_fdaef .Title .Decoded ();*_cggg =append (*_cggg ,_ddbgg );};if _fcdea .First !=nil {_fbbag :=_fg .Repeat ("\u0020",_ddgec *2)+"\u002b";*_cggg =append (*_cggg ,_fbbag );_dfaeab (_fcdea .First ,_abfd ,_cggg ,_ddgec +1);
};if _deafb &&_fdaef .Next !=nil {_dfaeab (_fdaef .Next ,_abfd ,_cggg ,_ddgec );};};_dfaeab (_dbcc ._facac ,&_gaefd ,&_bdgef ,0);return _gaefd ,_bdgef ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fggd *PdfReader )Decrypt (password []byte )(bool ,error ){_bgcd ,_bbgbc :=_fggd ._agbbba .Decrypt (password );if _bbgbc !=nil {return false ,_bbgbc ;};if !_bgcd {return false ,nil ;};_bbgbc =_fggd .loadStructure ();if _bbgbc !=nil {_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bbgbc );
return false ,_bbgbc ;};return true ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cd .PdfObjectInteger ;TilingType *_cd .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cd .PdfObjectFloat ;YStep *_cd .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cd .PdfObjectArray ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cggbb *PdfField )Flags ()FieldFlag {var _fcbeg FieldFlag ;_cfaag ,_ggfef :=_cggbb .inherit (func (_dgfa *PdfField )bool {if _dgfa .Ff !=nil {_fcbeg =FieldFlag (*_dgfa .Ff );return true ;};return false ;});if _ggfef !=nil {_dac .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ggfef );
};if !_cfaag {_dac .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fcbeg ;};func (_bbd *PdfReader )newPdfActionGotoFromDict (_ged *_cd .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ged .Get ("\u0044")},nil ;
};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_fedf pdfFont };func (_dggb *PdfReader )newPdfAnnotationCircleFromDict (_bebfa *_cd .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_aag :=PdfAnnotationCircle {};_fdeg ,_bbab :=_dggb .newPdfAnnotationMarkupFromDict (_bebfa );if _bbab !=nil {return nil ,_bbab ;
};_aag .PdfAnnotationMarkup =_fdeg ;_aag .BS =_bebfa .Get ("\u0042\u0053");_aag .IC =_bebfa .Get ("\u0049\u0043");_aag .BE =_bebfa .Get ("\u0042\u0045");_aag .RD =_bebfa .Get ("\u0052\u0044");return &_aag ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cffcd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cffcd ._adfdg ==nil {_cffcd .GetAnnotations ();};_cffcd ._adfdg =append (_cffcd ._adfdg ,annot );};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_bb :=NewPdfAction ();_ccd :=&PdfActionSubmitForm {};_ccd .PdfAction =_bb ;_bb .SetContext (_ccd );return _ccd ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ecbfd :_cd .MakeIndirectObject (_cd .MakeDict ()),VRI :map[string ]*VRI {}};};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_fbdaa *Image )GetSamples ()[]uint32 {_dfeec :=_dce .ResampleBytes (_fbdaa .Data ,int (_fbdaa .BitsPerComponent ));if _fbdaa .BitsPerComponent < 8{_dfeec =_fbdaa .samplesTrimPadding (_dfeec );};_ebfg :=int (_fbdaa .Width )*int (_fbdaa .Height )*_fbdaa .ColorComponents ;
if len (_dfeec )< _ebfg {_dac .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dfeec ),_ebfg );
return _dfeec ;}else if len (_dfeec )> _ebfg {_dac .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dfeec ),_ebfg );
_dfeec =_dfeec [:_ebfg ];};return _dfeec ;};func (_cfebb *DSS )addCerts (_gbad [][]byte )([]*_cd .PdfObjectStream ,error ){return _cfebb .add (&_cfebb .Certs ,_cfebb ._cgae ,_gbad );};var ImageHandling ImageHandler =DefaultImageHandler {};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_ggagb *PdfPage )SetContentStreams (cStreams []string ,encoder _cd .StreamEncoder )error {if len (cStreams )==0{_ggagb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cd .NewRawEncoder ();};var _adac []*_cd .PdfObjectStream ;for _ ,_gcgdg :=range cStreams {_ffac :=&_cd .PdfObjectStream {};
_bagcfe :=encoder .MakeStreamDict ();_acgbb ,_acfg :=encoder .EncodeBytes ([]byte (_gcgdg ));if _acfg !=nil {return _acfg ;};_bagcfe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_acgbb ))));_ffac .PdfObjectDictionary =_bagcfe ;
_ffac .Stream =_acgbb ;_adac =append (_adac ,_ffac );};if len (_adac )==1{_ggagb .Contents =_adac [0];}else {_fgdc :=_cd .MakeArray ();for _ ,_cdbcc :=range _adac {_fgdc .Append (_cdbcc );};_ggagb .Contents =_fgdc ;};return nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_fccgec *PdfRectangle )ToPdfObject ()_cd .PdfObject {return _cd .MakeArray (_cd .MakeFloat (_fccgec .Llx ),_cd .MakeFloat (_fccgec .Lly ),_cd .MakeFloat (_fccgec .Urx ),_cd .MakeFloat (_fccgec .Ury ));};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_dcdac *PdfOutline )GetContainingPdfObject ()_cd .PdfObject {return _dcdac ._agaeb };

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bgcgff int ,_fgae *PdfPage );

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_eeda *_cd .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cd .PdfObjectName ;Filter *_cd .PdfObjectName ;SubFilter *_cd .PdfObjectName ;Contents *_cd .PdfObjectString ;Cert _cd .PdfObject ;ByteRange *_cd .PdfObjectArray ;Reference *_cd .PdfObjectArray ;Changes *_cd .PdfObjectArray ;Name *_cd .PdfObjectString ;
M *_cd .PdfObjectString ;Location *_cd .PdfObjectString ;Reason *_cd .PdfObjectString ;ContactInfo *_cd .PdfObjectString ;R *_cd .PdfObjectInteger ;V *_cd .PdfObjectInteger ;PropBuild *_cd .PdfObjectDictionary ;PropAuthTime *_cd .PdfObjectInteger ;PropAuthType *_cd .PdfObjectName ;
};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cd .PdfObject ;FS _cd .PdfObject ;F _cd .PdfObject ;UF _cd .PdfObject ;DOS _cd .PdfObject ;Mac _cd .PdfObject ;Unix _cd .PdfObject ;ID _cd .PdfObject ;V _cd .PdfObject ;EF _cd .PdfObject ;RF _cd .PdfObject ;Desc _cd .PdfObject ;
CI _cd .PdfObject ;_gcea _cd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cca *PdfActionTrans )ToPdfObject ()_cd .PdfObject {_cca .PdfAction .ToPdfObject ();_ddfb :=_cca ._cea ;_ecc :=_ddfb .PdfObject .(*_cd .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeTrans )));_ecc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cca .Trans );
return _ddfb ;};func (_ecff *PdfAnnotationMarkup )appendToPdfDictionary (_dcgb *_cd .PdfObjectDictionary ){_dcgb .SetIfNotNil ("\u0054",_ecff .T );if _ecff .Popup !=nil {_dcgb .Set ("\u0050\u006f\u0070u\u0070",_ecff .Popup .ToPdfObject ());};_dcgb .SetIfNotNil ("\u0043\u0041",_ecff .CA );
_dcgb .SetIfNotNil ("\u0052\u0043",_ecff .RC );_dcgb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ecff .CreationDate );_dcgb .SetIfNotNil ("\u0049\u0052\u0054",_ecff .IRT );_dcgb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_ecff .Subj );
_dcgb .SetIfNotNil ("\u0052\u0054",_ecff .RT );_dcgb .SetIfNotNil ("\u0049\u0054",_ecff .IT );_dcgb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_ecff .ExData );};

// Encoder returns the font's text encoder.
func (_gfbgb pdfFontType3 )Encoder ()_cg .TextEncoder {return _gfbgb ._cedgg };

// ToPdfObject implements interface PdfModel.
func (_fae *PdfActionURI )ToPdfObject ()_cd .PdfObject {_fae .PdfAction .ToPdfObject ();_bfb :=_fae ._cea ;_gf :=_bfb .PdfObject .(*_cd .PdfObjectDictionary );_gf .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeURI )));_gf .SetIfNotNil ("\u0055\u0052\u0049",_fae .URI );
_gf .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fae .IsMap );return _bfb ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _c .Time ){_gcebg .Lock ();defer _gcebg .Unlock ();_cbba =modifiedDate ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edgbd *PdfShadingType7 )ToPdfObject ()_cd .PdfObject {_edgbd .PdfShading .ToPdfObject ();_gffg ,_cgccc :=_edgbd .getShadingDict ();if _cgccc !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edgbd .BitsPerCoordinate !=nil {_gffg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_edgbd .BitsPerCoordinate );};if _edgbd .BitsPerComponent !=nil {_gffg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_edgbd .BitsPerComponent );
};if _edgbd .BitsPerFlag !=nil {_gffg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_edgbd .BitsPerFlag );};if _edgbd .Decode !=nil {_gffg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_edgbd .Decode );};if _edgbd .Function !=nil {if len (_edgbd .Function )==1{_gffg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edgbd .Function [0].ToPdfObject ());
}else {_gfga :=_cd .MakeArray ();for _ ,_gddba :=range _edgbd .Function {_gfga .Append (_gddba .ToPdfObject ());};_gffg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfga );};};return _edgbd ._fdadf ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bdgfa *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cd .StreamEncoder ,error ){_aggb ,_dgcfa :=_bdgfa ._geeaf .(*_cd .PdfObjectStream );if !_dgcfa {_dac .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgfa ._geeaf );
return nil ,nil ,_cd .ErrTypeError ;};_cfadb ,_gfadag :=_cd .DecodeStream (_aggb );if _gfadag !=nil {_dac .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gfadag );
return nil ,nil ,_gfadag ;};_cfac ,_gfadag :=_cd .NewEncoderFromStream (_aggb );if _gfadag !=nil {_dac .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gfadag );
return nil ,nil ,_gfadag ;};return _cfadb ,_cfac ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cfbb *XObjectImage )ToImage ()(*Image ,error ){_dgdee :=&Image {};if _cfbb .Height ==nil {return nil ,_ac .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_dgdee .Height =*_cfbb .Height ;if _cfbb .Width ==nil {return nil ,_ac .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dgdee .Width =*_cfbb .Width ;if _cfbb .BitsPerComponent ==nil {switch _cfbb .Filter .(type ){case *_cd .CCITTFaxEncoder ,*_cd .JBIG2Encoder :_dgdee .BitsPerComponent =1;
case *_cd .LZWEncoder ,*_cd .RunLengthEncoder :_dgdee .BitsPerComponent =8;default:return nil ,_ac .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_dgdee .BitsPerComponent =*_cfbb .BitsPerComponent ;};_dgdee .ColorComponents =_cfbb .ColorSpace .GetNumComponents ();_cfbb ._bgda .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cd .MakeInteger (int64 (_dgdee .ColorComponents )));
_eacd ,_fafcg :=_cd .DecodeStream (_cfbb ._bgda );if _fafcg !=nil {return nil ,_fafcg ;};_dgdee .Data =_eacd ;if _cfbb .Decode !=nil {_bebcc ,_bagaaf :=_cfbb .Decode .(*_cd .PdfObjectArray );if !_bagaaf {_dac .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ac .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ceeg ,_bfaef :=_bebcc .ToFloat64Array ();if _bfaef !=nil {return nil ,_bfaef ;};_dgdee ._ddfef =_ceeg ;};return _dgdee ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gffcc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _gffcc .fill (provider ,appGen );};

// ToInteger convert to an integer format.
func (_caea *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gebb :=_fc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gebb *_caea .C ()),uint32 (_gebb *_caea .M ()),uint32 (_gebb *_caea .Y ()),uint32 (_gebb *_caea .K ())};};

// AllFields returns a flattened list of all fields in the form.
func (_dfeb *PdfAcroForm )AllFields ()[]*PdfField {if _dfeb ==nil {return nil ;};var _gcdc []*PdfField ;if _dfeb .Fields !=nil {for _ ,_ddag :=range *_dfeb .Fields {_gcdc =append (_gcdc ,_gaca (_ddag )...);};};return _gcdc ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_deee *PdfPageResources )HasFontByName (keyName _cd .PdfObjectName )bool {_ ,_adgea :=_deee .GetFontByName (keyName );return _adgea ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_dabg *PdfPage )AppendContentStream (contentStr string )error {_fdcfg ,_gabba :=_dabg .GetContentStreams ();if _gabba !=nil {return _gabba ;};if len (_fdcfg )==0{_fdcfg =[]string {contentStr };return _dabg .SetContentStreams (_fdcfg ,_cd .NewFlateEncoder ());
};var _cbecc _ccc .Buffer ;_cbecc .WriteString (_fdcfg [len (_fdcfg )-1]);_cbecc .WriteString ("\u000a");_cbecc .WriteString (contentStr );_fdcfg [len (_fdcfg )-1]=_cbecc .String ();return _dabg .SetContentStreams (_fdcfg ,_cd .NewFlateEncoder ());};

// GetCharMetrics returns the char metrics for character code `code`.
func (_adddg pdfFontType0 )GetCharMetrics (code _cg .CharCode )(_bcd .CharMetrics ,bool ){if _adddg .DescendantFont ==nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_adddg );
return _bcd .CharMetrics {},false ;};return _adddg .DescendantFont .GetCharMetrics (code );};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_ebdc *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_ebdc .HiVal )};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_defa *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_defa .NumInputs {_dac .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ac .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _defa ._cagbg ==nil {_gefe :=_defa .processSamples ();if _gefe !=nil {return nil ,_gefe ;};};_fbab :=_defa .Encode ;if _fbab ==nil {_fbab =[]float64 {};
for _geegf :=0;_geegf < len (_defa .Size );_geegf ++{_fbab =append (_fbab ,0);_fbab =append (_fbab ,float64 (_defa .Size [_geegf ]-1));};};_fecff :=_defa .Decode ;if _fecff ==nil {_fecff =_defa .Range ;};_deag :=make ([]int ,len (x ));for _decg :=0;_decg < len (x );
_decg ++{_cbdbb :=x [_decg ];_cgbga :=_fc .Min (_fc .Max (_cbdbb ,_defa .Domain [2*_decg ]),_defa .Domain [2*_decg +1]);_bdgf :=_agb .LinearInterpolate (_cgbga ,_defa .Domain [2*_decg ],_defa .Domain [2*_decg +1],_fbab [2*_decg ],_fbab [2*_decg +1]);_ecbcg :=_fc .Min (_fc .Max (_bdgf ,0),float64 (_defa .Size [_decg ]-1));
_cebc :=int (_fc .Floor (_ecbcg +0.5));if _cebc < 0{_cebc =0;}else if _cebc > _defa .Size [_decg ]{_cebc =_defa .Size [_decg ]-1;};_deag [_decg ]=_cebc ;};_bgad :=_deag [0];for _cfga :=1;_cfga < _defa .NumInputs ;_cfga ++{_begff :=_deag [_cfga ];for _dcegb :=0;
_dcegb < _cfga ;_dcegb ++{_begff *=_defa .Size [_dcegb ];};_bgad +=_begff ;};_bgad *=_defa .NumOutputs ;var _gaae []float64 ;for _efggc :=0;_efggc < _defa .NumOutputs ;_efggc ++{_feee :=_bgad +_efggc ;if _feee >=len (_defa ._cagbg ){_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_cfdf :=_defa ._cagbg [_feee ];_ddaga :=_agb .LinearInterpolate (float64 (_cfdf ),0,_fc .Pow (2,float64 (_defa .BitsPerSample )),_fecff [2*_efggc ],_fecff [2*_efggc +1]);_faeg :=_fc .Min (_fc .Max (_ddaga ,_defa .Range [2*_efggc ]),_defa .Range [2*_efggc +1]);
_gaae =append (_gaae ,_faeg );};return _gaae ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cd .PdfObjectArray ;TI *_cd .PdfObjectInteger ;I *_cd .PdfObjectArray ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bcd .CharMetrics ;

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cd .PdfObject ;BS _cd .PdfObject ;LE _cd .PdfObject ;IC _cd .PdfObject ;LL _cd .PdfObject ;LLE _cd .PdfObject ;Cap _cd .PdfObject ;IT _cd .PdfObject ;LLO _cd .PdfObject ;CP _cd .PdfObject ;
Measure _cd .PdfObject ;CO _cd .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_acaba *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _afaab (_fffa *_cd .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ecaa :=PdfShadingType2 {};_ebgcg :=_fffa .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ebgcg ==nil {_dac .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_eafa ,_gcbec :=_ebgcg .(*_cd .PdfObjectArray );if !_gcbec {_dac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebgcg );
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _eafa .Len ()!=4{_dac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eafa .Len ());
return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ecaa .Coords =_eafa ;if _ffbdc :=_fffa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ffbdc !=nil {_ffbdc =_cd .TraceToDirectObject (_ffbdc );
_fdcbb ,_decb :=_ffbdc .(*_cd .PdfObjectArray );if !_decb {_dac .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffbdc );return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ecaa .Domain =_fdcbb ;};_ebgcg =_fffa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebgcg ==nil {_dac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ecaa .Function =[]PdfFunction {};if _bddae ,_befee :=_ebgcg .(*_cd .PdfObjectArray );_befee {for _ ,_gcfcd :=range _bddae .Elements (){_gfgd ,_dfcef :=_ddcfb (_gcfcd );if _dfcef !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfcef );
return nil ,_dfcef ;};_ecaa .Function =append (_ecaa .Function ,_gfgd );};}else {_egeea ,_gacbg :=_ddcfb (_ebgcg );if _gacbg !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gacbg );
return nil ,_gacbg ;};_ecaa .Function =append (_ecaa .Function ,_egeea );};if _cebddd :=_fffa .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cebddd !=nil {_cebddd =_cd .TraceToDirectObject (_cebddd );_egdg ,_afge :=_cebddd .(*_cd .PdfObjectArray );if !_afge {_dac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cebddd );
return nil ,_cd .ErrTypeError ;};if _egdg .Len ()!=2{_dac .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_egdg .Len ());return nil ,ErrInvalidAttribute ;
};_ecaa .Extend =_egdg ;};return &_ecaa ,nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_bbgef :=NewPdfOutline ();_bbgef ._aaaag =&_bbgef ;return _bbgef ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cd .PdfObject ;Dest _cd .PdfObject ;H _cd .PdfObject ;PA _cd .PdfObject ;QuadPoints _cd .PdfObject ;BS _cd .PdfObject ;_cbf *PdfAction ;_dba *PdfReader ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fdc :=NewPdfAction ();_bd :=&PdfActionSound {};_bd .PdfAction =_fdc ;_fdc .SetContext (_bd );return _bd ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_eddba *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_caaae :=_dce .NewReader (img .getBase ());_baec :=_agb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_eddba .AlternateSpace .GetNumComponents (),nil ,img ._deff ,nil );
_aagc :=_dce .NewWriter (_baec );_deddd :=_fc .Pow (2,float64 (img .BitsPerComponent ))-1;_dac .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_dac .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_eddba .TintTransform );_aeeea :=_eddba .AlternateSpace .DecodeArray ();var (_bgebc uint32 ;_eaaec error ;);for {_bgebc ,_eaaec =_caaae .ReadSample ();
if _eaaec ==_ag .EOF {break ;};if _eaaec !=nil {return img ,_eaaec ;};_agfb :=float64 (_bgebc )/_deddd ;_egcb ,_babed :=_eddba .TintTransform .Evaluate ([]float64 {_agfb });if _babed !=nil {return img ,_babed ;};for _fbae ,_abdb :=range _egcb {_bagg :=_agb .LinearInterpolate (_abdb ,_aeeea [_fbae *2],_aeeea [_fbae *2+1],0,1);
if _babed =_aagc .WriteSample (uint32 (_bagg *_deddd ));_babed !=nil {return img ,_babed ;};};};return _eddba .AlternateSpace .ImageToRGB (_ebdb (&_baec ));};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetContainingPdfObject implements interface PdfModel.
func (_fagd *PdfFilespec )GetContainingPdfObject ()_cd .PdfObject {return _fagd ._gcea };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bedd *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bccab ,_babe :=_cd .GetNumbersAsFloat (objects );
if _babe !=nil {return nil ,_babe ;};return _bedd .ColorFromFloats (_bccab );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_gaf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cafc *PdfPageResources )GetPatternByName (keyName _cd .PdfObjectName )(*PdfPattern ,bool ){if _cafc .Pattern ==nil {return nil ,false ;};_fedg ,_adbcac :=_cd .TraceToDirectObject (_cafc .Pattern ).(*_cd .PdfObjectDictionary );if !_adbcac {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cafc .Pattern );
return nil ,false ;};if _dbafc :=_fedg .Get (keyName );_dbafc !=nil {_afeag ,_dcgac :=_egdbc (_dbafc );if _dcgac !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dcgac );
return nil ,false ;};return _afeag ,true ;};return nil ,false ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_baee *PdfFieldButton )ToPdfObject ()_cd .PdfObject {_baee .PdfField .ToPdfObject ();_gabb :=_baee ._ebfdd ;_ebffb :=_gabb .PdfObject .(*_cd .PdfObjectDictionary );_ebffb .Set ("\u0046\u0054",_cd .MakeName ("\u0042\u0074\u006e"));if _baee .Opt !=nil {_ebffb .Set ("\u004f\u0070\u0074",_baee .Opt );
};return _gabb ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gddd *PdfPage )GetContainingPdfObject ()_cd .PdfObject {return _gddd ._adcdb };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_fagg *PdfFont )BytesToCharcodes (data []byte )[]_cg .CharCode {_dac .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ggdc ,_aggd :=_fagg ._fedf .(*pdfFontType0 );_aggd &&_ggdc ._cdaag !=nil {if _gggbb ,_eebfc :=_ggdc .bytesToCharcodes (data );_eebfc {return _gggbb ;};};_bbcf :=make ([]_cg .CharCode ,0,len (data )+len (data )%2);if _fagg .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _gagg :=0;_gagg < len (data );_gagg +=2{_dbdef :=uint16 (data [_gagg ])<<8|uint16 (data [_gagg +1]);_bbcf =append (_bbcf ,_cg .CharCode (_dbdef ));};}else {for _ ,_bgce :=range data {_bbcf =append (_bbcf ,_cg .CharCode (_bgce ));
};};return _bbcf ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_bfdbg *PdfPattern )GetContext ()PdfModel {return _bfdbg ._dfdc };

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdge *PdfColorspaceDeviceRGB )ToPdfObject ()_cd .PdfObject {return _cd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_defba *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecad ,_bfegc :=_cd .GetNumbersAsFloat (objects );
if _bfegc !=nil {return nil ,_bfegc ;};return _defba .ColorFromFloats (_ecad );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cd .PdfObject ;NewWindow _cd .PdfObject ;T _cd .PdfObject ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cd .PdfObject ;};func (_fdegf *PdfAppender )updateObjectsDeep (_edbe _cd .PdfObject ,_gdeg map[_cd .PdfObject ]struct{}){if _gdeg ==nil {_gdeg =map[_cd .PdfObject ]struct{}{};
};if _ ,_fcdd :=_gdeg [_edbe ];_fcdd ||_edbe ==nil {return ;};_gdeg [_edbe ]=struct{}{};_bceg :=_cd .ResolveReferencesDeep (_edbe ,_fdegf ._aegg );if _bceg !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bceg );};switch _bcfg :=_edbe .(type ){case *_cd .PdfIndirectObject :switch {case _bcfg .GetParser ()==_fdegf ._gfbg ._agbbba :return ;
case _bcfg .GetParser ()==_fdegf .Reader ._agbbba :_fbb ,_ :=_fdegf ._gfbg .GetIndirectObjectByNumber (int (_bcfg .ObjectNumber ));_bef ,_gadc :=_fbb .(*_cd .PdfIndirectObject );if _gadc &&_bef !=nil {if _bef .PdfObject !=_bcfg .PdfObject &&_bef .PdfObject .WriteString ()!=_bcfg .PdfObject .WriteString (){_fdegf .addNewObject (_edbe );
_fdegf ._bcg [_edbe ]=_bcfg .ObjectNumber ;};};default:_fdegf .addNewObject (_edbe );};_fdegf .updateObjectsDeep (_bcfg .PdfObject ,_gdeg );case *_cd .PdfObjectArray :for _ ,_ebege :=range _bcfg .Elements (){_fdegf .updateObjectsDeep (_ebege ,_gdeg );};
case *_cd .PdfObjectDictionary :for _ ,_gebd :=range _bcfg .Keys (){_fdegf .updateObjectsDeep (_bcfg .Get (_gebd ),_gdeg );};case *_cd .PdfObjectStreams :if _bcfg .GetParser ()!=_fdegf ._gfbg ._agbbba {for _ ,_dfce :=range _bcfg .Elements (){_fdegf .updateObjectsDeep (_dfce ,_gdeg );
};};case *_cd .PdfObjectStream :switch {case _bcfg .GetParser ()==_fdegf ._gfbg ._agbbba :return ;case _bcfg .GetParser ()==_fdegf .Reader ._agbbba :if _aaba ,_daed :=_fdegf ._gfbg ._agbbba .LookupByReference (_bcfg .PdfObjectReference );_daed ==nil {var _fcfe bool ;
if _cagf ,_fed :=_cd .GetStream (_aaba );_fed &&_ccc .Equal (_cagf .Stream ,_bcfg .Stream ){_fcfe =true ;};if _gfag ,_eddb :=_cd .GetDict (_aaba );_fcfe &&_eddb {_fcfe =_gfag .WriteString ()==_bcfg .PdfObjectDictionary .WriteString ();};if _fcfe {return ;
};};if _bcfg .ObjectNumber !=0{_fdegf ._bcg [_edbe ]=_bcfg .ObjectNumber ;};default:if _ ,_ccbd :=_fdegf ._facfe [_edbe ];!_ccbd {_fdegf .addNewObject (_edbe );};};_fdegf .updateObjectsDeep (_bcfg .PdfObjectDictionary ,_gdeg );};};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bdca *PdfColorLab )GetNumComponents ()int {return 3};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cd .PdfObjectString ;Author *_cd .PdfObjectString ;Subject *_cd .PdfObjectString ;Keywords *_cd .PdfObjectString ;Creator *_cd .PdfObjectString ;Producer *_cd .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_cd .PdfObjectName ;
_cbef *_cd .PdfObjectDictionary ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_fcegg *PdfReader )GetOCProperties ()(_cd .PdfObject ,error ){_ddbge :=_fcegg ._bbaed ;_bcbe :=_ddbge .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bcbe =_cd .ResolveReference (_bcbe );if !_fcegg ._cgeagg {_cgcda :=_fcegg .traverseObjectData (_bcbe );
if _cgcda !=nil {return nil ,_cgcda ;};};return _bcbe ,nil ;};func _eafg (_beba _cd .PdfObject )(*PdfColorspaceLab ,error ){_cggcag :=NewPdfColorspaceLab ();if _fbf ,_gdabc :=_beba .(*_cd .PdfIndirectObject );_gdabc {_cggcag ._abae =_fbf ;};_beba =_cd .TraceToDirectObject (_beba );
_dbbd ,_fceb :=_beba .(*_cd .PdfObjectArray );if !_fceb {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbbd .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_beba =_cd .TraceToDirectObject (_dbbd .Get (0));_agbge ,_fceb :=_beba .(*_cd .PdfObjectName );if !_fceb {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_agbge !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_beba =_cd .TraceToDirectObject (_dbbd .Get (1));_gggc ,_fceb :=_beba .(*_cd .PdfObjectDictionary );
if !_fceb {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_beba =_gggc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_beba =_cd .TraceToDirectObject (_beba );_fbbg ,_fceb :=_beba .(*_cd .PdfObjectArray );if !_fceb {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _fbbg .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_dcgba ,_gaff :=_fbbg .GetAsFloat64Slice ();if _gaff !=nil {return nil ,_gaff ;};_cggcag .WhitePoint =_dcgba ;_beba =_gggc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _beba !=nil {_beba =_cd .TraceToDirectObject (_beba );
_efcec ,_dgge :=_beba .(*_cd .PdfObjectArray );if !_dgge {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _efcec .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ccbde ,_cecaa :=_efcec .GetAsFloat64Slice ();if _cecaa !=nil {return nil ,_cecaa ;};_cggcag .BlackPoint =_ccbde ;};_beba =_gggc .Get ("\u0052\u0061\u006eg\u0065");if _beba !=nil {_beba =_cd .TraceToDirectObject (_beba );_gfge ,_fgge :=_beba .(*_cd .PdfObjectArray );
if !_fgge {_dac .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gfge .Len ()!=4{_dac .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dfda ,_bfagb :=_gfge .GetAsFloat64Slice ();if _bfagb !=nil {return nil ,_bfagb ;};_cggcag .Range =_dfda ;};return _cggcag ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gfbd *PdfAnnotationWatermark )ToPdfObject ()_cd .PdfObject {_gfbd .PdfAnnotation .ToPdfObject ();_aafad :=_gfbd ._fef ;_gdg :=_aafad .PdfObject .(*_cd .PdfObjectDictionary );_gdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gdg .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gfbd .FixedPrint );return _aafad ;};type modelManager struct{_bdfb map[PdfModel ]_cd .PdfObject ;_aaadc map[_cd .PdfObject ]PdfModel ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_adccc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eegae :=_adccc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eegae )> 0;_dgfcb :=_cd .NewFlateEncoder ();_eeeee :=_cd .MakeArray ();if wrapContents {_eegbc ,_afbag :=_cd .MakeStream ([]byte ("\u0071\u000a"),_dgfcb );
if _afbag !=nil {return _afbag ;};_eeeee .Append (_eegbc );};_eeeee .Append (_eegae ...);if wrapContents {_adccb ,_dfaf :=_cd .MakeStream ([]byte ("\u000a\u0051\u000a"),_dgfcb );if _dfaf !=nil {return _dfaf ;};_eeeee .Append (_adccb );};_ffccg ,_abbag :=_cd .MakeStream (cs ,_dgfcb );
if _abbag !=nil {return _abbag ;};_eeeee .Append (_ffccg );_adccc .Contents =_eeeee ;return nil ;};

// SetDate sets the `M` field of the signature.
func (_dcbgg *PdfSignature )SetDate (date _c .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dcbgg .M =_cd .MakeString (date .Format (format ));
};func _ggcf (_abedd _cd .PdfObject )(*PdfFunctionType3 ,error ){_cccga :=&PdfFunctionType3 {};var _afeed *_cd .PdfObjectDictionary ;if _bdgca ,_dddaf :=_abedd .(*_cd .PdfIndirectObject );_dddaf {_bgbc ,_agded :=_bdgca .PdfObject .(*_cd .PdfObjectDictionary );
if !_agded {return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cccga ._bdbfd =_bdgca ;_afeed =_bgbc ;}else if _beeb ,_cgfa :=_abedd .(*_cd .PdfObjectDictionary );_cgfa {_afeed =_beeb ;}else {return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cfgag ,_aeec :=_cd .TraceToDirectObject (_afeed .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cd .PdfObjectArray );if !_aeec {_dac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cfgag .Len ()!=2{_dac .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ac .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fbbb ,_dccde :=_cfgag .ToFloat64Array ();
if _dccde !=nil {return nil ,_dccde ;};_cccga .Domain =_fbbb ;_cfgag ,_aeec =_cd .TraceToDirectObject (_afeed .Get ("\u0052\u0061\u006eg\u0065")).(*_cd .PdfObjectArray );if _aeec {if _cfgag .Len ()< 0||_cfgag .Len ()%2!=0{return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_fbeed ,_cgaea :=_cfgag .ToFloat64Array ();if _cgaea !=nil {return nil ,_cgaea ;};_cccga .Range =_fbeed ;};_cfgag ,_aeec =_cd .TraceToDirectObject (_afeed .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cd .PdfObjectArray );if !_aeec {_dac .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cccga .Functions =[]PdfFunction {};
for _ ,_dffd :=range _cfgag .Elements (){_cfcab ,_dgdd :=_ddcfb (_dffd );if _dgdd !=nil {return nil ,_dgdd ;};_cccga .Functions =append (_cccga .Functions ,_cfcab );};_cfgag ,_aeec =_cd .TraceToDirectObject (_afeed .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cd .PdfObjectArray );
if !_aeec {_dac .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_gfgf ,_dccde :=_cfgag .ToFloat64Array ();if _dccde !=nil {return nil ,_dccde ;};_cccga .Bounds =_gfgf ;if len (_cccga .Bounds )!=len (_cccga .Functions )-1{_dac .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_cccga .Bounds ),len (_cccga .Functions ));
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfgag ,_aeec =_cd .TraceToDirectObject (_afeed .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cd .PdfObjectArray );if !_aeec {_dac .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_adbg ,_dccde :=_cfgag .ToFloat64Array ();
if _dccde !=nil {return nil ,_dccde ;};_cccga .Encode =_adbg ;if len (_cccga .Encode )!=2*len (_cccga .Functions ){_dac .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_cccga .Encode ),len (_cccga .Functions ));
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _cccga ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cd .PdfObjectName ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bfbee *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_dcdc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _dcdc .MediaBox !=nil {return _dcdc .MediaBox ,nil ;};_ccfcg :=_dcdc .Parent ;for _ccfcg !=nil {_gaacd ,_afdce :=_cd .GetDict (_ccfcg );if !_afdce {return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _acabc :=_gaacd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_acabc !=nil {_bgfc ,_ggeee :=_cd .GetArray (_acabc );if !_ggeee {return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_afeaa ,_agdb :=NewPdfRectangle (*_bgfc );if _agdb !=nil {return nil ,_agdb ;};return _afeaa ,nil ;};_ccfcg =_gaacd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ac .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};var _dabaa =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_fdade *LTV )EnableAll (extraCerts []*_gc .Certificate )error {_gabf :=_fdade ._ecffd ._gfbg .AcroForm ;for _ ,_eagdd :=range _gabf .AllFields (){_deaae ,_ :=_eagdd .GetContext ().(*PdfFieldSignature );if _deaae ==nil {continue ;};_fdgfc :=_deaae .V ;
if _bgfag :=_fdade .validateSig (_fdgfc );_bgfag !=nil {_dac .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_bgfag );
};if _cgda :=_fdade .Enable (_fdgfc ,extraCerts );_cgda !=nil {return _cgda ;};};return nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cd .PdfObject ;};func (_cefc fontCommon )fontFlags ()int {if _cefc ._gdegf ==nil {return 0;};return _cefc ._gdegf ._acaaa ;};

// SetAction sets the PDF action for the annotation link.
func (_ddb *PdfAnnotationLink )SetAction (action *PdfAction ){_ddb ._cbf =action ;if action ==nil {_ddb .A =nil ;};};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// SetReason sets the `Reason` field of the signature.
func (_adaee *PdfSignature )SetReason (reason string ){_adaee .Reason =_cd .MakeString (reason )};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cd .PdfObject ;};func (_dccf *pdfFontType3 )baseFields ()*fontCommon {return &_dccf .fontCommon };func (_agdgd *PdfReader )flattenFieldsWithOpts (_daaff bool ,_aged FieldAppearanceGenerator ,_gddg *FieldFlattenOpts )error {if _gddg ==nil {_gddg =&FieldFlattenOpts {};
};var _cgbf bool ;_cbea :=map[*PdfAnnotation ]bool {};{var _cagae []*PdfField ;_cfdaa :=_agdgd .AcroForm ;if _cfdaa !=nil {if _gddg .FilterFunc !=nil {_cagae =_cfdaa .filteredFields (_gddg .FilterFunc ,true );_cgbf =_cfdaa .Fields !=nil &&len (*_cfdaa .Fields )> 0;
}else {_cagae =_cfdaa .AllFields ();};};for _ ,_dfffe :=range _cagae {for _ ,_cbdc :=range _dfffe .Annotations {_cbea [_cbdc .PdfAnnotation ]=_dfffe .V !=nil ;if _aged !=nil {_dabd ,_gafb :=_aged .GenerateAppearanceDict (_cfdaa ,_dfffe ,_cbdc );if _gafb !=nil {return _gafb ;
};_cbdc .AP =_dabd ;};};};};if _daaff {for _ ,_bdffg :=range _agdgd .PageList {_bfdf ,_baefc :=_bdffg .GetAnnotations ();if _baefc !=nil {return _baefc ;};for _ ,_abdf :=range _bfdf {_cbea [_abdf ]=true ;};};};for _ ,_bfeb :=range _agdgd .PageList {var _bgbe []*PdfAnnotation ;
if _aged !=nil {if _fegb :=_aged .WrapContentStream (_bfeb );_fegb !=nil {return _fegb ;};};_gfdc ,_aebe :=_bfeb .GetAnnotations ();if _aebe !=nil {return _aebe ;};for _ ,_fagac :=range _gfdc {_gega ,_gafba :=_cbea [_fagac ];if !_gafba &&_gddg .AnnotFilterFunc !=nil {if _ ,_cacfa :=_fagac .GetContext ().(*PdfAnnotationWidget );
!_cacfa {_gafba =_gddg .AnnotFilterFunc (_fagac );};};if !_gafba {_bgbe =append (_bgbe ,_fagac );continue ;};switch _fagac .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_gcebc ,_geebc ,_ddcea :=_bfbgc (_fagac );if _ddcea !=nil {if !_gega {_dac .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_ddcea );
continue ;};if _gcebc ==nil {continue ;};_fcca :=_bfeb .Resources .GenerateXObjectName ();_bfeb .Resources .SetXObjectFormByName (_fcca ,_gcebc );_efdgf :=_fc .Min (_geebc .Llx ,_geebc .Urx );_cbdg :=_fc .Min (_geebc .Lly ,_geebc .Ury );var _eafcb []string ;
_eafcb =append (_eafcb ,"\u0071");_eafcb =append (_eafcb ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_efdgf ,_cbdg ));
_eafcb =append (_eafcb ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_fcca .String ()));_eafcb =append (_eafcb ,"\u0051");_cfgc :=_fg .Join (_eafcb ,"\u000a");_ddcea =_bfeb .AppendContentStream (_cfgc );if _ddcea !=nil {return _ddcea ;};if _gcebc .Resources !=nil {_fbbc ,_bcdc :=_cd .GetDict (_gcebc .Resources .Font );
if _bcdc {for _ ,_dggc :=range _fbbc .Keys (){if !_bfeb .Resources .HasFontByName (_dggc ){_bfeb .Resources .SetFontByName (_dggc ,_fbbc .Get (_dggc ));};};};};};if len (_bgbe )> 0{_bfeb ._adfdg =_bgbe ;}else {_bfeb ._adfdg =[]*PdfAnnotation {};};};if !_cgbf {_agdgd .AcroForm =nil ;
};return nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ggea *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_dbgb :=pageNum -1;var _abg *PdfPage ;for _ffgf ,_aede :=range _ggea ._edc {if _ffgf ==_dbgb {_abg =_aede ;};};if _abg ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _abg ._adcdb !=nil &&_abg ._adcdb .GetParser ()==_ggea ._gfbg ._agbbba {_abg =_abg .Duplicate ();_ggea ._edc [_dbgb ]=_abg ;};page =page .Duplicate ();_cafbfd (page );_ebfa :=_acaa (_abg );_afdb :=_acaa (page );_cgec :=make (map[_cd .PdfObjectName ]_cd .PdfObjectName );
for _ffge :=range _afdb {if _ ,_dfde :=_ebfa [_ffge ];_dfde {for _gddb :=1;true ;_gddb ++{_ggg :=_cd .PdfObjectName (string (_ffge )+_fa .Itoa (_gddb ));if _ ,_fcad :=_ebfa [_ggg ];!_fcad {_cgec [_ffge ]=_ggg ;break ;};};};};_fcge ,_eebe :=page .GetContentStreams ();
if _eebe !=nil {return _eebe ;};_cged ,_eebe :=_abg .GetContentStreams ();if _eebe !=nil {return _eebe ;};for _acef ,_bfag :=range _fcge {for _dfcg ,_ggdg :=range _cgec {_bfag =_fg .Replace (_bfag ,"\u002f"+string (_dfcg ),"\u002f"+string (_ggdg ),-1);
};_fcge [_acef ]=_bfag ;};_cged =append (_cged ,_fcge ...);if _efcg :=_abg .SetContentStreams (_cged ,_cd .NewFlateEncoder ());_efcg !=nil {return _efcg ;};_abg ._adfdg =append (_abg ._adfdg ,page ._adfdg ...);if _abg .Resources ==nil {_abg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_abg .Resources .Font =_ggea .mergeResources (_abg .Resources .Font ,page .Resources .Font ,_cgec );_abg .Resources .XObject =_ggea .mergeResources (_abg .Resources .XObject ,page .Resources .XObject ,_cgec );_abg .Resources .Properties =_ggea .mergeResources (_abg .Resources .Properties ,page .Resources .Properties ,_cgec );
if _abg .Resources .ProcSet ==nil {_abg .Resources .ProcSet =page .Resources .ProcSet ;};_abg .Resources .Shading =_ggea .mergeResources (_abg .Resources .Shading ,page .Resources .Shading ,_cgec );_abg .Resources .ExtGState =_ggea .mergeResources (_abg .Resources .ExtGState ,page .Resources .ExtGState ,_cgec );
};_befg ,_eebe :=_abg .GetMediaBox ();if _eebe !=nil {return _eebe ;};_gecd ,_eebe :=page .GetMediaBox ();if _eebe !=nil {return _eebe ;};var _cbbf bool ;if _befg .Llx > _gecd .Llx {_befg .Llx =_gecd .Llx ;_cbbf =true ;};if _befg .Lly > _gecd .Lly {_befg .Lly =_gecd .Lly ;
_cbbf =true ;};if _befg .Urx < _gecd .Urx {_befg .Urx =_gecd .Urx ;_cbbf =true ;};if _befg .Ury < _gecd .Ury {_befg .Ury =_gecd .Ury ;_cbbf =true ;};if _cbbf {_abg .MediaBox =_befg ;};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_baead pdfCIDFontType2 )GetCharMetrics (code _cg .CharCode )(_bcd .CharMetrics ,bool ){if _gbaf ,_eebbe :=_baead ._baea [code ];_eebbe {return _bcd .CharMetrics {Wx :_gbaf },true ;};_cccaf :=rune (code );_abegg ,_dffe :=_baead ._abda [_cccaf ];if !_dffe {_abegg =int (_baead ._ccfac );
};return _bcd .CharMetrics {Wx :float64 (_abegg )},true ;};func (_dfdga *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_dff :=NewPdfAnnotation ();_gfc :=&PdfAnnotationCircle {};_gfc .PdfAnnotation =_dff ;_gfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dff .SetContext (_gfc );return _gfc ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_gcfg DefaultImageHandler )NewImageFromGoImage (goimg _beg .Image )(*Image ,error ){_ecaba ,_fdegc :=_agb .FromGoImage (goimg );if _fdegc !=nil {return nil ,_fdegc ;};_cdfge :=_ebdb (_ecaba .Base ());return &_cdfge ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_bebab *PdfReader )GetIndirectObjectByNumber (number int )(_cd .PdfObject ,error ){_cbcg ,_eadfg :=_bebab ._agbbba .LookupByNumber (number );return _cbcg ,_eadfg ;};func (_gfabe *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _gfabe ._gdegf };


// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gdcc *PdfAppender )UpdateObject (obj _cd .PdfObject ){_gdcc .replaceObject (obj ,obj );if _ ,_cgcc :=_gdcc ._facfe [obj ];!_cgcc {_gdcc ._fba =append (_gdcc ._fba ,obj );_gdcc ._facfe [obj ]=struct{}{};};};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_bage *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_bage .updateObjectsDeep (dss .ToPdfObject (),nil );};_bage ._ddfd =dss ;};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfAnnotationProjection )ToPdfObject ()_cd .PdfObject {_ege .PdfAnnotation .ToPdfObject ();_dcgd :=_ege ._fef ;_gaa :=_dcgd .PdfObject .(*_cd .PdfObjectDictionary );_ege .PdfAnnotationMarkup .appendToPdfDictionary (_gaa );return _dcgd ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_adce *LTV )EnableByName (name string ,extraCerts []*_gc .Certificate )error {_bgfd :=_adce ._ecffd ._gfbg .AcroForm ;for _ ,_gegd :=range _bgfd .AllFields (){_befgf ,_ :=_gegd .GetContext ().(*PdfFieldSignature );if _befgf ==nil {continue ;};if _gagbb :=_befgf .PartialName ();
_gagbb !=name {continue ;};return _adce .Enable (_befgf .V ,extraCerts );};return nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_eff :=NewPdfAnnotation ();_egg :=&PdfAnnotationLink {};_egg .PdfAnnotation =_eff ;_eff .SetContext (_egg );return _egg ;};func (_aaf *PdfReader )newPdfActionNamedFromDict (_agc *_cd .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_agc .Get ("\u004e")},nil ;
};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fedb *PdfOutline )ToPdfObject ()_cd .PdfObject {_fcgdf :=_fedb ._agaeb ;_ffga :=_fcgdf .PdfObject .(*_cd .PdfObjectDictionary );_ffga .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fedb .First !=nil {_ffga .Set ("\u0046\u0069\u0072s\u0074",_fedb .First .ToPdfObject ());
};if _fedb .Last !=nil {_ffga .Set ("\u004c\u0061\u0073\u0074",_fedb .Last .GetContext ().GetContainingPdfObject ());};if _fedb .Parent !=nil {_ffga .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fedb .Parent .GetContext ().GetContainingPdfObject ());};
if _fedb .Count !=nil {_ffga .Set ("\u0043\u006f\u0075n\u0074",_cd .MakeInteger (*_fedb .Count ));};return _fcgdf ;};func (_gccb *PdfReader )newPdfAnnotation3DFromDict (_eeeg *_cd .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ddeb :=PdfAnnotation3D {};
_ddeb .T3DD =_eeeg .Get ("\u0033\u0044\u0044");_ddeb .T3DV =_eeeg .Get ("\u0033\u0044\u0056");_ddeb .T3DA =_eeeg .Get ("\u0033\u0044\u0041");_ddeb .T3DI =_eeeg .Get ("\u0033\u0044\u0049");_ddeb .T3DB =_eeeg .Get ("\u0033\u0044\u0042");return &_ddeb ,nil ;
};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_gcebg .Lock ();defer _gcebg .Unlock ();_cdcca =keywords };func _dcbfe (_gdeeg *PdfField ,_aaffd _cd .PdfObject )error {switch _gdeeg .GetContext ().(type ){case *PdfFieldText :switch _feac :=_aaffd .(type ){case *_cd .PdfObjectName :_dfdgf :=_feac ;
_dac .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_dfdgf .String ());
_gdeeg .V =_cd .MakeEncodedString (_feac .String (),true );case *_cd .PdfObjectString :_gdeeg .V =_cd .MakeEncodedString (_feac .String (),true );default:_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_feac ,_feac );
};case *PdfFieldButton :switch _aaffd .(type ){case *_cd .PdfObjectName :if len (_aaffd .String ())> 0{_gdeeg .V =_aaffd ;_adcd (_gdeeg ,_aaffd );};case *_cd .PdfObjectString :if len (_aaffd .String ())> 0{_gdeeg .V =_cd .MakeName (_aaffd .String ());_adcd (_gdeeg ,_gdeeg .V );
};default:_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_gdeeg .PartialName (),_aaffd );_gdeeg .V =_aaffd ;};case *PdfFieldChoice :switch _aaffd .(type ){case *_cd .PdfObjectName :if len (_aaffd .String ())> 0{_gdeeg .V =_cd .MakeString (_aaffd .String ());
_adcd (_gdeeg ,_aaffd );};case *_cd .PdfObjectString :if len (_aaffd .String ())> 0{_gdeeg .V =_aaffd ;_adcd (_gdeeg ,_cd .MakeName (_aaffd .String ()));};default:_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_gdeeg .PartialName (),_aaffd );
_gdeeg .V =_aaffd ;};case *PdfFieldSignature :_dac .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_gdeeg .PartialName (),_aaffd );
};return nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cd .PdfObjectArray ;ExtGState _cd .PdfObject ;};func (_egga *PdfReader )newPdfAnnotationStampFromDict (_geb *_cd .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_effc :=PdfAnnotationStamp {};
_fefg ,_cffg :=_egga .newPdfAnnotationMarkupFromDict (_geb );if _cffg !=nil {return nil ,_cffg ;};_effc .PdfAnnotationMarkup =_fefg ;_effc .Name =_geb .Get ("\u004e\u0061\u006d\u0065");return &_effc ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_ebcf *PdfFont )CharcodesToUnicode (charcodes []_cg .CharCode )[]rune {_edgdb ,_ ,_ :=_ebcf .CharcodesToUnicodeWithStats (charcodes );return _edgdb ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cd .PdfObject ;AN _cd .PdfObject ;OP _cd .PdfObject ;JS _cd .PdfObject ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_fdbb *PdfInfo )ToPdfObject ()_cd .PdfObject {_befga :=_cd .MakeDict ();_befga .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_fdbb .Title );_befga .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_fdbb .Author );_befga .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_fdbb .Subject );
_befga .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fdbb .Keywords );_befga .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_fdbb .Creator );_befga .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fdbb .Producer );
_befga .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_fdbb .Trapped );if _fdbb .CreationDate !=nil {_befga .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fdbb .CreationDate .ToPdfObject ());};if _fdbb .ModifiedDate !=nil {_befga .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_fdbb .ModifiedDate .ToPdfObject ());
};for _ ,_ceee :=range _fdbb ._cbef .Keys (){_befga .SetIfNotNil (_ceee ,_fdbb ._cbef .Get (_ceee ));};return _befga ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_fdefg pdfFontType3 )GetCharMetrics (code _cg .CharCode )(_bcd .CharMetrics ,bool ){if _cfcf ,_bceca :=_fdefg ._gdcca [code ];_bceca {return _bcd .CharMetrics {Wx :_cfcf },true ;};if _bcd .IsStdFont (_bcd .StdFontName (_fdefg ._bgdfc )){return _bcd .CharMetrics {Wx :250},true ;
};return _bcd .CharMetrics {},false ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_abec *PdfAcroForm )GetContainingPdfObject ()_cd .PdfObject {return _abec ._cbfda };

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gea :=NewPdfAction ();_cfa :=&PdfActionHide {};_cfa .PdfAction =_gea ;_gea .SetContext (_cfa );return _cfa ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fbfg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fggeb :=vals [0];_effed :=[]float64 {_fggeb };_ceac ,_bbabb :=_fbfg .TintTransform .Evaluate (_effed );
if _bbabb !=nil {_dac .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bbabb );_dac .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fbfg .TintTransform );
return nil ,_bbabb ;};_dac .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_ceac ,_fbfg .AlternateSpace );
_caeaa ,_bbabb :=_fbfg .AlternateSpace .ColorFromFloats (_ceac );if _bbabb !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bbabb );
return nil ,_bbabb ;};return _caeaa ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_eag PdfModel ;Rect _cd .PdfObject ;Contents _cd .PdfObject ;P _cd .PdfObject ;NM _cd .PdfObject ;M _cd .PdfObject ;F _cd .PdfObject ;AP _cd .PdfObject ;AS _cd .PdfObject ;Border _cd .PdfObject ;C _cd .PdfObject ;StructParent _cd .PdfObject ;
OC _cd .PdfObject ;_fef *_cd .PdfIndirectObject ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cd .PdfObjectInteger ;BitsPerComponent *_cd .PdfObjectInteger ;BitsPerFlag *_cd .PdfObjectInteger ;Decode *_cd .PdfObjectArray ;Function []PdfFunction ;};func (_fdde *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dgcb *_cd .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dddf :=PdfAnnotationPrinterMark {};
_dddf .MN =_dgcb .Get ("\u004d\u004e");return &_dddf ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ecde *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if _ecde .Alternate ==nil {if _ecde .N ==1{_dfca :=NewPdfColorspaceDeviceGray ();return _dfca .ColorFromPdfObjects (objects );}else if _ecde .N ==3{_gdaeb :=NewPdfColorspaceDeviceRGB ();
return _gdaeb .ColorFromPdfObjects (objects );}else if _ecde .N ==4{_fefb :=NewPdfColorspaceDeviceCMYK ();return _fefb .ColorFromPdfObjects (objects );}else {return nil ,_ac .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _ecde .Alternate .ColorFromPdfObjects (objects );};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cd .PdfObject ;RichMediaContent _cd .PdfObject ;};var _ _cd .PdfObject =&pdfSignDictionary {};func _afafd ()string {_gcebg .Lock ();defer _gcebg .Unlock ();_ffagf :=_ee .GetLicenseKey ();
if len (_ecdg )> 0&&(_ffagf .IsLicensed ()||_aagfa ){return _ecdg ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_aggf (),_ffagf .TypeToString ());
};

// SetContext sets the sub annotation (context).
func (_dfbf *PdfAnnotation )SetContext (ctx PdfModel ){_dfbf ._eag =ctx };

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cd .PdfObjectName ;Colorants _cd .PdfObject ;Process _cd .PdfObject ;MixingHints _cd .PdfObject ;_dcea *_cd .PdfIndirectObject ;};func (_dfcd *PdfShading )getShadingDict ()(*_cd .PdfObjectDictionary ,error ){_dgbef :=_dfcd ._fdadf ;
if _bbdgd ,_dcgbb :=_dgbef .(*_cd .PdfIndirectObject );_dcgbb {_ebdcda ,_ddbbf :=_bbdgd .PdfObject .(*_cd .PdfObjectDictionary );if !_ddbbf {return nil ,_cd .ErrTypeError ;};return _ebdcda ,nil ;}else if _addfb ,_bccd :=_dgbef .(*_cd .PdfObjectStream );
_bccd {return _addfb .PdfObjectDictionary ,nil ;}else if _ebdea ,_gegbe :=_dgbef .(*_cd .PdfObjectDictionary );_gegbe {return _ebdea ,nil ;}else {_dac .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_cd .ErrTypeError ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_debca *PdfShading )ToPdfObject ()_cd .PdfObject {_dbba :=_debca ._fdadf ;_cacbd ,_acdce :=_debca .getShadingDict ();if _acdce !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _debca .ShadingType !=nil {_cacbd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_debca .ShadingType );};if _debca .ColorSpace !=nil {_cacbd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_debca .ColorSpace .ToPdfObject ());
};if _debca .Background !=nil {_cacbd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_debca .Background );};if _debca .BBox !=nil {_cacbd .Set ("\u0042\u0042\u006f\u0078",_debca .BBox .ToPdfObject ());};if _debca .AntiAlias !=nil {_cacbd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_debca .AntiAlias );
};return _dbba ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cgac *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccg ,_deed :=color .(*PdfColorDeviceCMYK );if !_deed {_dac .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eecb :=_ccg .C ();_egfb :=_ccg .M ();_cdbc :=_ccg .Y ();_bdcc :=_ccg .K ();_eecb =_eecb *(1-_bdcc )+_bdcc ;_egfb =_egfb *(1-_bdcc )+_bdcc ;
_cdbc =_cdbc *(1-_bdcc )+_bdcc ;_bfbfg :=1-_eecb ;_adecf :=1-_egfb ;_ffbc :=1-_cdbc ;return NewPdfColorDeviceRGB (_bfbfg ,_adecf ,_ffbc ),nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_aaafe *PdfWriter )AddPage (page *PdfPage )error {const _adfbf ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cafbfd (page );_cgaed :=page .ToPdfObject ();_dac .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_dac .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cgaed );_ggfag ,_dcfff :=_cd .GetIndirect (_cgaed );if !_dcfff {return _ac .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dac .Log .Trace ("\u0025\u0073",_ggfag );_dac .Log .Trace ("\u0025\u0073",_ggfag .PdfObject );_aeegb ,_dcfff :=_cd .GetDict (_ggfag .PdfObject );if !_dcfff {return _ac .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eddga ,_dcfff :=_cd .GetName (_aeegb .Get ("\u0054\u0079\u0070\u0065"));if !_dcfff {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_aeegb .Get ("\u0054\u0079\u0070\u0065"));
};if _eddga .String ()!="\u0050\u0061\u0067\u0065"{return _ac .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_ecgfe :=[]_cd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_eabdc ,_fgdac :=_cd .GetIndirect (_aeegb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dac .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_aeegb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fgdac );
for _fgdac {_dac .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eabdc );_fbaee ,_efbfe :=_cd .GetDict (_eabdc .PdfObject );if !_efbfe {return _ac .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_caaf :=range _ecgfe {_dac .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_caaf );if _aeegb .Get (_caaf )!=nil {_dac .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _eeada :=_fbaee .Get (_caaf );_eeada !=nil {_dac .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_caaf );_aeegb .Set (_caaf ,_eeada );};};_eabdc ,_fgdac =_cd .GetIndirect (_fbaee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_dac .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fbaee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dac .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_aeegb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aaafe ._gcfcbc );_ggfag .PdfObject =_aeegb ;_dfagdd ,_dcfff :=_cd .GetDict (_aaafe ._gcfcbc .PdfObject );if !_dcfff {return _ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dfagc ,_dcfff :=_cd .GetArray (_dfagdd .Get ("\u004b\u0069\u0064\u0073"));if !_dcfff {return _ac .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dfagc .Append (_ggfag );_aaafe ._aada [_aeegb ]=struct{}{};_cfgfe ,_dcfff :=_cd .GetInt (_dfagdd .Get ("\u0043\u006f\u0075n\u0074"));if !_dcfff {return _ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_cfgfe =*_cfgfe +1;if page ._adega ==nil {_dbefa :=_ee .Track (_aaafe ._eadcf ,_adfbf );if _dbefa !=nil {return _dbefa ;};}else {_bbddg :=_ee .Track (page ._adega ._fbdcg ,_adfbf );if _bbddg !=nil {return _bbddg ;};};_aaafe .addObject (_ggfag );_fceed :=_aaafe .addObjects (_aeegb );
if _fceed !=nil {return _fceed ;};return nil ;};

// GetAction returns the PDF action for the annotation link.
func (_aba *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _aba ._cbf !=nil {return _aba ._cbf ,nil ;};if _aba .A ==nil {return nil ,nil ;};if _aba ._dba ==nil {return nil ,nil ;};_edg ,_agca :=_aba ._dba .loadAction (_aba .A );if _agca !=nil {return nil ,_agca ;
};_aba ._cbf =_edg ;return _aba ._cbf ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_febag *PdfFont )CharcodesToStrings (charcodes []_cg .CharCode )([]string ,int ,int ){_cffgf :=_febag .baseFields ();_fcceg :=make ([]string ,0,len (charcodes ));_bdacb :=0;_bdgg :=_febag .Encoder ();if _bdgg !=nil {switch _bfdbfa :=_bdgg .(type ){case _cg .SimpleEncoder :_dgbfaf :=_bfdbfa .BaseName ();
if _ ,_bbcge :=_dabaa [_dgbfaf ];_bbcge {for _ ,_gaac :=range charcodes {if _ggcb ,_acdc :=_bdgg .CharcodeToRune (_gaac );_acdc {_fcceg =append (_fcceg ,string (_ggcb ));}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gaac ,charcodes ,_cffgf .isCIDFont (),_febag ,_bdgg );
_bdacb ++;_fcceg =append (_fcceg ,_ef .MissingCodeString );};};return _fcceg ,len (_fcceg ),_bdacb ;};};};for _ ,_daga :=range charcodes {if _cffgf ._deeg !=nil {if _fdbe ,_beea :=_cffgf ._deeg .CharcodeToUnicode (_ef .CharCode (_daga ));_beea {_fcceg =append (_fcceg ,_fdbe );
continue ;};};if _bdgg !=nil {if _ceba ,_baff :=_bdgg .CharcodeToRune (_daga );_baff {_fcceg =append (_fcceg ,string (_ceba ));continue ;};};_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_daga ,charcodes ,_cffgf .isCIDFont (),_febag ,_bdgg );
_bdacb ++;_fcceg =append (_fcceg ,_ef .MissingCodeString );};if _bdacb !=0{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bdacb ,_febag );
};return _fcceg ,len (_fcceg ),_bdacb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_afdge *PdfColorspaceLab )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_becd ,_agad :=_cd .GetNumbersAsFloat (objects );
if _agad !=nil {return nil ,_agad ;};return _afdge .ColorFromFloats (_becd );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cd .PdfIndirectObject ;SV *_cd .PdfIndirectObject ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cdcg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdcg .AlternateSpace ==nil {return nil ,_ac .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cdcg .AlternateSpace .ColorToRGB (color );};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cd .PdfObject )(*PdfFont ,error ){return _agacg (fontObj ,true )};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_eeaf :=PdfColorCalRGB {a ,b ,c };return &_eeaf ;};func _gcabe (_aebed *_cd .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gefgg :=PdfShadingType1 {};if _efdec :=_aebed .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_efdec !=nil {_efdec =_cd .TraceToDirectObject (_efdec );_daccd ,_ccfacf :=_efdec .(*_cd .PdfObjectArray );if !_ccfacf {_dac .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efdec );
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gefgg .Domain =_daccd ;};if _cecdg :=_aebed .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cecdg !=nil {_cecdg =_cd .TraceToDirectObject (_cecdg );
_dcfb ,_gffa :=_cecdg .(*_cd .PdfObjectArray );if !_gffa {_dac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cecdg );return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gefgg .Matrix =_dcfb ;};_daae :=_aebed .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _daae ==nil {_dac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gefgg .Function =[]PdfFunction {};if _gfca ,_fegec :=_daae .(*_cd .PdfObjectArray );_fegec {for _ ,_fgaef :=range _gfca .Elements (){_cfaab ,_cgbca :=_ddcfb (_fgaef );if _cgbca !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgbca );
return nil ,_cgbca ;};_gefgg .Function =append (_gefgg .Function ,_cfaab );};}else {_ebfcb ,_baggf :=_ddcfb (_daae );if _baggf !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_baggf );
return nil ,_baggf ;};_gefgg .Function =append (_gefgg .Function ,_ebfcb );};return &_gefgg ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_gdggg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _gdggg .AcroForm ==nil {return nil ,nil ;};if _gdggg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gdffc *PdfSignature ;
_fbdcf *PdfField ;_edfag SignatureHandler ;};var _ecdeg []*sigFieldPair ;for _ ,_dcfeb :=range _gdggg .AcroForm .AllFields (){if _dcfeb .V ==nil {continue ;};if _dbbg ,_cfabd :=_cd .GetDict (_dcfeb .V );_cfabd {if _dfefb ,_aabdd :=_cd .GetNameVal (_dbbg .Get ("\u0054\u0079\u0070\u0065"));
_aabdd &&_dfefb =="\u0053\u0069\u0067"{_bbddf ,_ggfcd :=_cd .GetIndirect (_dcfeb .V );if !_ggfcd {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_gcddge ,_aece :=_gdggg .newPdfSignatureFromIndirect (_bbddf );if _aece !=nil {return nil ,_aece ;};var _cegab SignatureHandler ;for _ ,_acgga :=range handlers {if _acgga .IsApplicable (_gcddge ){_cegab =_acgga ;break ;};};_ecdeg =append (_ecdeg ,&sigFieldPair {_gdffc :_gcddge ,_fbdcf :_dcfeb ,_edfag :_cegab });
};};};var _efbcc []SignatureValidationResult ;for _ ,_aaaf :=range _ecdeg {_gccdf :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_aaaf ._fbdcf }};if _aaaf ._edfag ==nil {_gccdf .Errors =append (_gccdf .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_efbcc =append (_efbcc ,_gccdf );continue ;};_decfa ,_ceedbf :=_aaaf ._edfag .NewDigest (_aaaf ._gdffc );if _ceedbf !=nil {_gccdf .Errors =append (_gccdf .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_ceedbf .Error ());
_efbcc =append (_efbcc ,_gccdf );continue ;};_dabad :=_aaaf ._gdffc .ByteRange ;if _dabad ==nil {_gccdf .Errors =append (_gccdf .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_efbcc =append (_efbcc ,_gccdf );
continue ;};for _afaga :=0;_afaga < _dabad .Len ();_afaga =_afaga +2{_gfaec ,_ :=_cd .GetNumberAsInt64 (_dabad .Get (_afaga ));_eacga ,_ :=_cd .GetIntVal (_dabad .Get (_afaga +1));if _ ,_bbecc :=_gdggg ._cgff .Seek (_gfaec ,_ag .SeekStart );_bbecc !=nil {return nil ,_bbecc ;
};_bgcec :=make ([]byte ,_eacga );if _ ,_gcade :=_gdggg ._cgff .Read (_bgcec );_gcade !=nil {return nil ,_gcade ;};_decfa .Write (_bgcec );};_ffff ,_ceedbf :=_aaaf ._edfag .Validate (_aaaf ._gdffc ,_decfa );if _ceedbf !=nil {return nil ,_ceedbf ;};_ffff .Name =_aaaf ._gdffc .Name .Decoded ();
_ffff .Reason =_aaaf ._gdffc .Reason .Decoded ();if _aaaf ._gdffc .M !=nil {_acca ,_fcecc :=NewPdfDate (_aaaf ._gdffc .M .String ());if _fcecc !=nil {_ffff .Errors =append (_ffff .Errors ,_fcecc .Error ());continue ;};_ffff .Date =_acca ;};_ffff .ContactInfo =_aaaf ._gdffc .ContactInfo .Decoded ();
_ffff .Location =_aaaf ._gdffc .Location .Decoded ();_ffff .Fields =_gccdf .Fields ;_efbcc =append (_efbcc ,_ffff );};return _efbcc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_baef *PdfAnnotationScreen )ToPdfObject ()_cd .PdfObject {_baef .PdfAnnotation .ToPdfObject ();_gaeb :=_baef ._fef ;_aadf :=_gaeb .PdfObject .(*_cd .PdfObjectDictionary );_aadf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_aadf .SetIfNotNil ("\u0054",_baef .T );_aadf .SetIfNotNil ("\u004d\u004b",_baef .MK );_aadf .SetIfNotNil ("\u0041",_baef .A );_aadf .SetIfNotNil ("\u0041\u0041",_baef .AA );return _gaeb ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gcdb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ac .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_agffd ,_gface :=_agb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._deff ,img ._ddfef );if _gface !=nil {return img ,_gface ;};_geeb ,_gface :=_agb .GrayConverter .Convert (_agffd );
if _gface !=nil {return img ,_gface ;};return _ebdb (_geeb .Base ()),nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_aea *PdfReader )newPdfActionGotoEFromDict (_fdd *_cd .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ceeb ,_gbe :=_ace (_fdd .Get ("\u0046"));if _gbe !=nil {return nil ,_gbe ;};return &PdfActionGoToE {D :_fdd .Get ("\u0044"),NewWindow :_fdd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fdd .Get ("\u0054"),F :_ceeb },nil ;
};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_eage *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_eea :=_dce .NewReader (img .getBase ());_ecbf :=_agb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cede :=_dce .NewWriter (_ecbf );
_bbdg :=_fc .Pow (2,float64 (img .BitsPerComponent ))-1;_gbge :=make ([]uint32 ,3);var (_ebed uint32 ;ANorm ,X ,Y ,Z ,_dcgf ,_gcdbf ,_bac float64 ;_afdg error ;);for {_ebed ,_afdg =_eea .ReadSample ();if _afdg ==_ag .EOF {break ;}else if _afdg !=nil {return img ,_afdg ;
};ANorm =float64 (_ebed )/_bbdg ;X =_eage .WhitePoint [0]*_fc .Pow (ANorm ,_eage .Gamma );Y =_eage .WhitePoint [1]*_fc .Pow (ANorm ,_eage .Gamma );Z =_eage .WhitePoint [2]*_fc .Pow (ANorm ,_eage .Gamma );_dcgf =3.240479*X +-1.537150*Y +-0.498535*Z ;_gcdbf =-0.969256*X +1.875992*Y +0.041556*Z ;
_bac =0.055648*X +-0.204043*Y +1.057311*Z ;_dcgf =_fc .Min (_fc .Max (_dcgf ,0),1.0);_gcdbf =_fc .Min (_fc .Max (_gcdbf ,0),1.0);_bac =_fc .Min (_fc .Max (_bac ,0),1.0);_gbge [0]=uint32 (_dcgf *_bbdg );_gbge [1]=uint32 (_gcdbf *_bbdg );_gbge [2]=uint32 (_bac *_bbdg );
if _afdg =_cede .WriteSamples (_gbge );_afdg !=nil {return img ,_afdg ;};};return _ebdb (&_ecbf ),nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cacc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dac .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dccdf :=[]float64 {0.0};if _cacc .C0 !=nil {_dccdf =_cacc .C0 ;};_aaag :=[]float64 {1.0};if _cacc .C1 !=nil {_aaag =_cacc .C1 ;};var _gaacg []float64 ;for _afdgea :=0;_afdgea < len (_dccdf );_afdgea ++{_feegc :=_dccdf [_afdgea ]+_fc .Pow (x [0],_cacc .N )*(_aaag [_afdgea ]-_dccdf [_afdgea ]);
_gaacg =append (_gaacg ,_feegc );};return _gaacg ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gddfb *modelManager )GetPrimitiveFromModel (model PdfModel )_cd .PdfObject {_dcbff ,_efdd :=_gddfb ._bdfb [model ];if !_efdd {return nil ;};return _dcbff ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_gbd :=NewPdfAction ();_dd :=&PdfActionGoTo {};_dd .PdfAction =_gbd ;_gbd .SetContext (_dd );return _dd ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_badg *_cd .PdfObjectDictionary ;_adcg *_cd .PdfIndirectObject ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_gda :=NewPdfAction ();_ced :=&PdfActionMovie {};_ced .PdfAction =_gda ;_gda .SetContext (_ced );return _ced ;};var _aagfa =false ;func _baae (_bafc _cd .PdfObject )(map[_cg .CharCode ]float64 ,error ){if _bafc ==nil {return nil ,nil ;
};_debc ,_ecab :=_cd .GetArray (_bafc );if !_ecab {return nil ,nil ;};_cgfc :=map[_cg .CharCode ]float64 {};_gdfd :=_debc .Len ();for _acbdf :=0;_acbdf < _gdfd -1;_acbdf ++{_bbfe :=_cd .TraceToDirectObject (_debc .Get (_acbdf ));_fdff ,_efed :=_cd .GetIntVal (_bbfe );
if !_efed {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_acbdf ,_bbfe );};_acbdf ++;if _acbdf > _gdfd -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_debc );
};_dagg :=_cd .TraceToDirectObject (_debc .Get (_acbdf ));switch _dagg .(type ){case *_cd .PdfObjectArray :_fggc ,_ :=_cd .GetArray (_dagg );if _aeda ,_dfgbff :=_fggc .ToFloat64Array ();_dfgbff ==nil {for _ggdga :=0;_ggdga < len (_aeda );_ggdga ++{_cgfc [_cg .CharCode (_fdff +_ggdga )]=_aeda [_ggdga ];
};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_acbdf ,_dagg );};case *_cd .PdfObjectInteger :_ebaac ,_fdefea :=_cd .GetIntVal (_dagg );
if !_fdefea {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_acbdf ,_dagg );};_acbdf ++;if _acbdf > _gdfd -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_debc );
};_dfdf :=_debc .Get (_acbdf );_fbda ,_bfge :=_cd .GetNumberAsFloat (_dfdf );if _bfge !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_acbdf ,_dfdf );
};for _dabc :=_fdff ;_dabc <=_ebaac ;_dabc ++{_cgfc [_cg .CharCode (_dabc )]=_fbda ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_acbdf ,_dagg );
};};return _cgfc ,nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_eedef *XObjectForm )GetContentStream ()([]byte ,error ){_gaacgg ,_dcaeg :=_cd .DecodeStream (_eedef ._cbbga );if _dcaeg !=nil {return nil ,_dcaeg ;};return _gaacgg ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// Height returns the height of `rect`.
func (_dafac *PdfRectangle )Height ()float64 {return _fc .Abs (_dafac .Ury -_dafac .Lly )};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_afced *PdfReader )Inspect ()(map[string ]int ,error ){return _afced ._agbbba .Inspect ()};

// ToPdfObject returns the PDF representation of the function.
func (_febb *PdfFunctionType2 )ToPdfObject ()_cd .PdfObject {_cgace :=_cd .MakeDict ();_cgace .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cd .MakeInteger (2));_cgbe :=&_cd .PdfObjectArray {};for _ ,_bbfa :=range _febb .Domain {_cgbe .Append (_cd .MakeFloat (_bbfa ));
};_cgace .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgbe );if _febb .Range !=nil {_gbbgf :=&_cd .PdfObjectArray {};for _ ,_agagde :=range _febb .Range {_gbbgf .Append (_cd .MakeFloat (_agagde ));};_cgace .Set ("\u0052\u0061\u006eg\u0065",_gbbgf );};
if _febb .C0 !=nil {_afbc :=&_cd .PdfObjectArray {};for _ ,_abee :=range _febb .C0 {_afbc .Append (_cd .MakeFloat (_abee ));};_cgace .Set ("\u0043\u0030",_afbc );};if _febb .C1 !=nil {_efde :=&_cd .PdfObjectArray {};for _ ,_eaea :=range _febb .C1 {_efde .Append (_cd .MakeFloat (_eaea ));
};_cgace .Set ("\u0043\u0031",_efde );};_cgace .Set ("\u004e",_cd .MakeFloat (_febb .N ));if _febb ._fbgg !=nil {_febb ._fbgg .PdfObject =_cgace ;return _febb ._fbgg ;};return _cgace ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cgee *Image )ToGoImage ()(_beg .Image ,error ){_dac .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dgfb ,_bgdgf :=_agb .NewImage (int (_cgee .Width ),int (_cgee .Height ),int (_cgee .BitsPerComponent ),_cgee .ColorComponents ,_cgee .Data ,_cgee ._deff ,_cgee ._ddfef );
if _bgdgf !=nil {return nil ,_bgdgf ;};return _dgfb ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_gcebg .Lock ();defer _gcebg .Unlock ();_dgdcd =creator };func (_fabgf *PdfPage )getParentResources ()(*PdfPageResources ,error ){_daafb :=_fabgf .Parent ;for _daafb !=nil {_caag ,_gedgb :=_cd .GetDict (_daafb );if !_gedgb {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_ac .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _cdaaf :=_caag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cdaaf !=nil {_bbage ,_bcfgb :=_cd .GetDict (_cdaaf );
if !_bcfgb {return nil ,_ac .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_agagdeb ,_ggeef :=NewPdfPageResourcesFromDict (_bbage );if _ggeef !=nil {return nil ,_ggeef ;};return _agagdeb ,nil ;
};_daafb =_caag .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bfbde *PdfPageResources )GetXObjectByName (keyName _cd .PdfObjectName )(*_cd .PdfObjectStream ,XObjectType ){if _bfbde .XObject ==nil {return nil ,XObjectTypeUndefined ;};_egeb ,_gbbad :=_cd .TraceToDirectObject (_bfbde .XObject ).(*_cd .PdfObjectDictionary );
if !_gbbad {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cd .TraceToDirectObject (_bfbde .XObject ));
return nil ,XObjectTypeUndefined ;};if _cbbbcg :=_egeb .Get (keyName );_cbbbcg !=nil {_fdba ,_degfd :=_cd .GetStream (_cbbbcg );if !_degfd {_dac .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_cbbbcg );
return nil ,XObjectTypeUndefined ;};_fcdff :=_fdba .PdfObjectDictionary ;_ccaab ,_degfd :=_cd .TraceToDirectObject (_fcdff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cd .PdfObjectName );if !_degfd {_dac .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fcdff .String ());
return nil ,XObjectTypeUndefined ;};if *_ccaab =="\u0049\u006d\u0061g\u0065"{return _fdba ,XObjectTypeImage ;}else if *_ccaab =="\u0046\u006f\u0072\u006d"{return _fdba ,XObjectTypeForm ;}else if *_ccaab =="\u0050\u0053"{return _fdba ,XObjectTypePS ;}else {_dac .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_ccaab );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ToPdfObject implements interface PdfModel.
func (_bfae *PdfAnnotationPopup )ToPdfObject ()_cd .PdfObject {_bfae .PdfAnnotation .ToPdfObject ();_agcd :=_bfae ._fef ;_cec :=_agcd .PdfObject .(*_cd .PdfObjectDictionary );_cec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0050\u006f\u0070u\u0070"));
_cec .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfae .Parent );_cec .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bfae .Open );return _agcd ;};func (_fabd *PdfReader )newPdfAnnotationUnderlineFromDict (_aeaf *_cd .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_cgde :=PdfAnnotationUnderline {};
_aeag ,_ebec :=_fabd .newPdfAnnotationMarkupFromDict (_aeaf );if _ebec !=nil {return nil ,_ebec ;};_cgde .PdfAnnotationMarkup =_aeag ;_cgde .QuadPoints =_aeaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cgde ,nil ;};func (_deg *PdfReader )newPdfActionJavaScriptFromDict (_ecf *_cd .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_ecf .Get ("\u004a\u0053")},nil ;
};func _adcd (_gbgb *PdfField ,_gaadg _cd .PdfObject ){for _ ,_gfgbg :=range _gbgb .Annotations {_gfgbg .AS =_gaadg ;_gfgbg .ToPdfObject ();};};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fdeb :=NewPdfAnnotation ();_cfb :=&PdfAnnotationFreeText {};_cfb .PdfAnnotation =_fdeb ;_cfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdeb .SetContext (_cfb );return _cfb ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fbfaf *PdfOutlineTreeNode )GetContainingPdfObject ()_cd .PdfObject {return _fbfaf .GetContext ().GetContainingPdfObject ();};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_aafadef []byte )(_bcdgb int ,_ddgeb error );};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_daf :=NewPdfAction ();_afd :=&PdfActionLaunch {};_afd .PdfAction =_daf ;_daf .SetContext (_afd );return _afd ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_fggec *PdfColorspaceDeviceN )ToPdfObject ()_cd .PdfObject {_ecdc :=_cd .MakeArray (_cd .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_ecdc .Append (_fggec .ColorantNames );_ecdc .Append (_fggec .AlternateSpace .ToPdfObject ());_ecdc .Append (_fggec .TintTransform .ToPdfObject ());
if _fggec .Attributes !=nil {_ecdc .Append (_fggec .Attributes .ToPdfObject ());};if _fggec ._dgef !=nil {_fggec ._dgef .PdfObject =_ecdc ;return _fggec ._dgef ;};return _ecdc ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_cbgfd *PdfPattern )IsTiling ()bool {return _cbgfd .PatternType ==1};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_efdeg *PdfPageResources )SetXObjectByName (keyName _cd .PdfObjectName ,stream *_cd .PdfObjectStream )error {if _efdeg .XObject ==nil {_efdeg .XObject =_cd .MakeDict ();};_ebgaa :=_cd .TraceToDirectObject (_efdeg .XObject );_bgeg ,_cffgdc :=_ebgaa .(*_cd .PdfObjectDictionary );
if !_cffgdc {_dac .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_efdeg .XObject ,_ebgaa );return _ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bgeg .Set (keyName ,stream );return nil ;};func _degg (_fdcga *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_fdcga }};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bafgc *PdfReader )GetOutlines ()(*Outline ,error ){if _bafgc ==nil {return nil ,_ac .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_ecacf :=_bafgc .GetOutlineTree ();if _ecacf ==nil {return nil ,_ac .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _aagcg func (_bgbb *PdfOutlineTreeNode ,_cabeg *[]*OutlineItem );_aagcg =func (_edab *PdfOutlineTreeNode ,_feaa *[]*OutlineItem ){if _edab ==nil {return ;};if _edab ._aaaag ==nil {_dac .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _faacff *OutlineItem ;if _efee ,_feded :=_edab ._aaaag .(*PdfOutlineItem );_feded {_cbcdb :=_efee .Dest ;if (_cbcdb ==nil ||_cd .IsNullObject (_cbcdb ))&&_efee .A !=nil {if _fdfbc ,_fggb :=_cd .GetDict (_efee .A );_fggb {_cbcdb ,_ =_cd .GetArray (_fdfbc .Get ("\u0044"));
};};var _ecbad OutlineDest ;if _cbcdb !=nil &&!_cd .IsNullObject (_cbcdb ){if _cdaafg ,_cbaga :=_dagga (_cbcdb ,_bafgc );_cbaga ==nil {_ecbad =*_cdaafg ;}else {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_cbcdb ,_cbaga );
};};_faacff =NewOutlineItem (_efee .Title .Decoded (),_ecbad );*_feaa =append (*_feaa ,_faacff );if _efee .Next !=nil {_aagcg (_efee .Next ,_feaa );};};if _edab .First !=nil {if _faacff !=nil {_feaa =&_faacff .Entries ;};_aagcg (_edab .First ,_feaa );};
};_ffgdda :=NewOutline ();_aagcg (_ecacf ,&_ffgdda .Entries );return _ffgdda ,nil ;};func (_afgcd *pdfCIDFontType2 )baseFields ()*fontCommon {return &_afgcd .fontCommon };

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_dbdd :=&PdfColorspaceCalRGB {};_dbdd .BlackPoint =[]float64 {0.0,0.0,0.0};_dbdd .Gamma =[]float64 {1.0,1.0,1.0};_dbdd .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _dbdd ;};func (_dfba *PdfReader )newPdfAnnotationTextFromDict (_dggg *_cd .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gfe :=PdfAnnotationText {};
_gce ,_cgdb :=_dfba .newPdfAnnotationMarkupFromDict (_dggg );if _cgdb !=nil {return nil ,_cgdb ;};_gfe .PdfAnnotationMarkup =_gce ;_gfe .Open =_dggg .Get ("\u004f\u0070\u0065\u006e");_gfe .Name =_dggg .Get ("\u004e\u0061\u006d\u0065");_gfe .State =_dggg .Get ("\u0053\u0074\u0061t\u0065");
_gfe .StateModel =_dggg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gfe ,nil ;};func (_gegb *Image )samplesAddPadding (_becc []uint32 )[]uint32 {_fagdd :=_agb .BytesPerLine (int (_gegb .Width ),int (_gegb .BitsPerComponent ),_gegb .ColorComponents )*(8/int (_gegb .BitsPerComponent ));
_bfaeg :=_fagdd *int (_gegb .Height );if len (_becc )==_bfaeg {return _becc ;};_gbafe :=make ([]uint32 ,_bfaeg );_bdgb :=int (_gegb .Width )*_gegb .ColorComponents ;for _feedb :=0;_feedb < int (_gegb .Height );_feedb ++{_gebbd :=_feedb *int (_gegb .Width );
_ebfc :=_feedb *_fagdd ;for _adbb :=0;_adbb < _bdgb ;_adbb ++{_gbafe [_ebfc +_adbb ]=_becc [_gebbd +_adbb ];};};return _gbafe ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cd .PdfObject ;};func (_eccf *PdfReader )newPdfAnnotationWatermarkFromDict (_cbfg *_cd .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_facf :=PdfAnnotationWatermark {};_facf .FixedPrint =_cbfg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_facf ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_eegfa *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// WriteToFile writes the output PDF to file.
func (_acgfb *PdfWriter )WriteToFile (outputFilePath string )error {_fegc ,_fbfdb :=_ab .Create (outputFilePath );if _fbfdb !=nil {return _fbfdb ;};defer _fegc .Close ();return _acgfb .Write (_fegc );};

// ToPdfObject returns a PDF object representation of the outline item.
func (_babb *OutlineItem )ToPdfObject ()_cd .PdfObject {_cceag ,_ :=_babb .ToPdfOutlineItem ();return _cceag .ToPdfObject ();};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_deff []byte ;_ddfef []float64 ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_dgccb byte )byte ;func _fdfd (_ddfbb string )(map[_cg .CharCode ]_cg .GlyphName ,error ){_agdga :=_fg .Split (_ddfbb ,"\u000a");_cfef :=make (map[_cg .CharCode ]_cg .GlyphName );for _ ,_cgcgf :=range _agdga {_geec :=_eafb .FindStringSubmatch (_cgcgf );
if _geec ==nil {continue ;};_ecacc ,_dccc :=_geec [1],_geec [2];_aecg ,_gbdgb :=_fa .Atoi (_ecacc );if _gbdgb !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_cgcgf );
return nil ,_cd .ErrTypeError ;};_cfef [_cg .CharCode (_aecg )]=_cg .GlyphName (_dccc );};_dac .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cfef );
return _cfef ,nil ;};func _dbfba (_cdafg *_cd .PdfObjectDictionary )(*PdfShadingType4 ,error ){_aegbg :=PdfShadingType4 {};_dacbg :=_cdafg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dacbg ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ddef ,_dgce :=_dacbg .(*_cd .PdfObjectInteger );if !_dgce {_dac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dacbg );
return nil ,_cd .ErrTypeError ;};_aegbg .BitsPerCoordinate =_ddef ;_dacbg =_cdafg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dacbg ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ddef ,_dgce =_dacbg .(*_cd .PdfObjectInteger );if !_dgce {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dacbg );
return nil ,_cd .ErrTypeError ;};_aegbg .BitsPerComponent =_ddef ;_dacbg =_cdafg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dacbg ==nil {_dac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddef ,_dgce =_dacbg .(*_cd .PdfObjectInteger );if !_dgce {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dacbg );
return nil ,_cd .ErrTypeError ;};_aegbg .BitsPerComponent =_ddef ;_dacbg =_cdafg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dacbg ==nil {_dac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gcge ,_dgce :=_dacbg .(*_cd .PdfObjectArray );if !_dgce {_dac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dacbg );
return nil ,_cd .ErrTypeError ;};_aegbg .Decode =_gcge ;_dacbg =_cdafg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dacbg ==nil {_dac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_aegbg .Function =[]PdfFunction {};if _bbcee ,_fbgde :=_dacbg .(*_cd .PdfObjectArray );_fbgde {for _ ,_geefd :=range _bbcee .Elements (){_dccbg ,_dfbge :=_ddcfb (_geefd );if _dfbge !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfbge );
return nil ,_dfbge ;};_aegbg .Function =append (_aegbg .Function ,_dccbg );};}else {_dbdca ,_dgbee :=_ddcfb (_dacbg );if _dgbee !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgbee );
return nil ,_dgbee ;};_aegbg .Function =append (_aegbg .Function ,_dbdca );};return &_aegbg ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_eaae *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_dedb :=_dce .NewReader (img .getBase ());_cceb :=_agb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cegf :=_dce .NewWriter (_cceb );
_bbgcc :=_fc .Pow (2,float64 (img .BitsPerComponent ))-1;_aaded :=make ([]uint32 ,3);var (_ddcd error ;_fadd ,_baebf ,_fbac ,_dbcg ,_aacd ,_bfbef float64 ;);for {_ddcd =_dedb .ReadSamples (_aaded );if _ddcd ==_ag .EOF {break ;}else if _ddcd !=nil {return img ,_ddcd ;
};_fadd =float64 (_aaded [0])/_bbgcc ;_baebf =float64 (_aaded [1])/_bbgcc ;_fbac =float64 (_aaded [2])/_bbgcc ;_dbcg =_eaae .Matrix [0]*_fc .Pow (_fadd ,_eaae .Gamma [0])+_eaae .Matrix [3]*_fc .Pow (_baebf ,_eaae .Gamma [1])+_eaae .Matrix [6]*_fc .Pow (_fbac ,_eaae .Gamma [2]);
_aacd =_eaae .Matrix [1]*_fc .Pow (_fadd ,_eaae .Gamma [0])+_eaae .Matrix [4]*_fc .Pow (_baebf ,_eaae .Gamma [1])+_eaae .Matrix [7]*_fc .Pow (_fbac ,_eaae .Gamma [2]);_bfbef =_eaae .Matrix [2]*_fc .Pow (_fadd ,_eaae .Gamma [0])+_eaae .Matrix [5]*_fc .Pow (_baebf ,_eaae .Gamma [1])+_eaae .Matrix [8]*_fc .Pow (_fbac ,_eaae .Gamma [2]);
_fadd =3.240479*_dbcg +-1.537150*_aacd +-0.498535*_bfbef ;_baebf =-0.969256*_dbcg +1.875992*_aacd +0.041556*_bfbef ;_fbac =0.055648*_dbcg +-0.204043*_aacd +1.057311*_bfbef ;_fadd =_fc .Min (_fc .Max (_fadd ,0),1.0);_baebf =_fc .Min (_fc .Max (_baebf ,0),1.0);
_fbac =_fc .Min (_fc .Max (_fbac ,0),1.0);_aaded [0]=uint32 (_fadd *_bbgcc );_aaded [1]=uint32 (_baebf *_bbgcc );_aaded [2]=uint32 (_fbac *_bbgcc );if _ddcd =_cegf .WriteSamples (_aaded );_ddcd !=nil {return img ,_ddcd ;};};return _ebdb (&_cceb ),nil ;
};func (_bcbcb *PdfReader )buildPageList (_edaad *_cd .PdfIndirectObject ,_begg *_cd .PdfIndirectObject ,_egde map[_cd .PdfObject ]struct{})error {if _edaad ==nil {return nil ;};if _ ,_aabd :=_egde [_edaad ];_aabd {_dac .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_edaad .ObjectNumber );
return nil ;};_egde [_edaad ]=struct{}{};_cdgc ,_aadg :=_edaad .PdfObject .(*_cd .PdfObjectDictionary );if !_aadg {return _ac .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_beaa ,_aadg :=(*_cdgc ).Get ("\u0054\u0079\u0070\u0065").(*_cd .PdfObjectName );
if !_aadg {if _cdgc .Get ("\u004b\u0069\u0064\u0073")==nil {return _ac .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dac .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_beaa =_cd .MakeName ("\u0050\u0061\u0067e\u0073");_cdgc .Set ("\u0054\u0079\u0070\u0065",_beaa );};_dac .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_beaa ,_edaad );
if *_beaa =="\u0050\u0061\u0067\u0065"{_dggef ,_abbec :=_bcbcb .newPdfPageFromDict (_cdgc );if _abbec !=nil {return _abbec ;};_dggef .setContainer (_edaad );if _begg !=nil {_cdgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_begg );};_bcbcb ._ccacd =append (_bcbcb ._ccacd ,_edaad );
_bcbcb .PageList =append (_bcbcb .PageList ,_dggef );return nil ;};if *_beaa !="\u0050\u0061\u0067e\u0073"{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_beaa );
return _ac .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _begg !=nil {_cdgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_begg );};if !_bcbcb ._cgeagg {_faad :=_bcbcb .traverseObjectData (_edaad );if _faad !=nil {return _faad ;};};_edbefb ,_agffdd :=_bcbcb ._agbbba .Resolve (_cdgc .Get ("\u004b\u0069\u0064\u0073"));
if _agffdd !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _agffdd ;};var _bbfef *_cd .PdfObjectArray ;
_bbfef ,_aadg =_edbefb .(*_cd .PdfObjectArray );if !_aadg {_fgcbc ,_gbdd :=_edbefb .(*_cd .PdfIndirectObject );if !_gbdd {return _ac .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bbfef ,_aadg =_fgcbc .PdfObject .(*_cd .PdfObjectArray );
if !_aadg {return _ac .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dac .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bbfef );
for _eddbe ,_fgage :=range _bbfef .Elements (){_bagdc ,_fagag :=_cd .GetIndirect (_fgage );if !_fagag {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_bagdc );
return _ac .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bbfef .Set (_eddbe ,_bagdc );_agffdd =_bcbcb .buildPageList (_bagdc ,_edaad ,_egde );if _agffdd !=nil {return _agffdd ;
};};return nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_eaf :=NewPdfAnnotation ();_gbc :=&PdfAnnotationSquiggly {};_gbc .PdfAnnotation =_eaf ;_gbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaf .SetContext (_gbc );return _gbc ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cd .PdfObject ;_dbga []byte ;_bbcg *_cd .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_eccga *PdfOutlineTreeNode )ToPdfObject ()_cd .PdfObject {return _eccga .GetContext ().ToPdfObject ();};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_gcebg .Lock ();defer _gcebg .Unlock ();_ecdg =producer };func _eebag (_aadede *_cd .PdfIndirectObject )(*PdfOutline ,error ){_afcd ,_geeca :=_aadede .PdfObject .(*_cd .PdfObjectDictionary );if !_geeca {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eceg :=NewPdfOutline ();if _dfbd :=_afcd .Get ("\u0054\u0079\u0070\u0065");_dfbd !=nil {_fdae ,_gebeb :=_dfbd .(*_cd .PdfObjectName );if _gebeb {if *_fdae !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fdae );
};};};if _ddcb :=_afcd .Get ("\u0043\u006f\u0075n\u0074");_ddcb !=nil {_cfbd ,_bdccd :=_cd .GetNumberAsInt64 (_ddcb );if _bdccd !=nil {return nil ,_bdccd ;};_eceg .Count =&_cfbd ;};return _eceg ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fdce :=NewPdfAnnotation ();_ggd :=&PdfAnnotationHighlight {};_ggd .PdfAnnotation =_fdce ;_ggd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdce .SetContext (_ggd );return _ggd ;};func _adfef (_cdgbd []byte )[]byte {const _gaedef =52845;
const _cfca =22719;_gcab :=55665;for _ ,_cbegb :=range _cdgbd [:4]{_gcab =(int (_cbegb )+_gcab )*_gaedef +_cfca ;};_adfdf :=make ([]byte ,len (_cdgbd )-4);for _ebdcc ,_gebfd :=range _cdgbd [4:]{_adfdf [_ebdcc ]=byte (int (_gebfd )^_gcab >>8);_gcab =(int (_gebfd )+_gcab )*_gaedef +_cfca ;
};return _adfdf ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_deb :=NewPdfAnnotation ();_ddeg :=&PdfAnnotationPrinterMark {};_ddeg .PdfAnnotation =_deb ;_deb .SetContext (_ddeg );return _ddeg ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cd .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_cd .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_adfae ,_ffbdg :=encoder .EncodeBytes (img .Data );
if _ffbdg !=nil {_dac .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ffbdg );return nil ,_ffbdg ;};_eeddfb :=NewXObjectImage ();_edffg :=img .Width ;_faed :=img .Height ;
_eeddfb .Width =&_edffg ;_eeddfb .Height =&_faed ;_ggca :=img .BitsPerComponent ;_eeddfb .BitsPerComponent =&_ggca ;_eeddfb .Filter =encoder ;_eeddfb .Stream =_adfae ;if cs ==nil {if img .ColorComponents ==1{_eeddfb .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_eeddfb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_eeddfb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ac .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_eeddfb .ColorSpace =cs ;};if len (img ._deff )!=0{_gbafd :=NewXObjectImage ();_gbafd .Filter =encoder ;_gggdd ,_ccffb :=encoder .EncodeBytes (img ._deff );if _ccffb !=nil {_dac .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ccffb );
return nil ,_ccffb ;};_gbafd .Stream =_gggdd ;_gbafd .BitsPerComponent =_eeddfb .BitsPerComponent ;_gbafd .Width =&img .Width ;_gbafd .Height =&img .Height ;_gbafd .ColorSpace =NewPdfColorspaceDeviceGray ();_eeddfb .SMask =_gbafd .ToPdfObject ();}else {_eeddfb .SMask =xobjIn .SMask ;
_eeddfb .ImageMask =xobjIn .ImageMask ;if _eeddfb .ColorSpace .GetNumComponents ()==1{_gafe (_eeddfb );};};return _eeddfb ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gggbde *PdfPattern )SetContext (ctx PdfModel ){_gggbde ._dfdc =ctx };

// ToPdfObject implements interface PdfModel.
func (_eaeg *PdfAnnotationMovie )ToPdfObject ()_cd .PdfObject {_eaeg .PdfAnnotation .ToPdfObject ();_acdd :=_eaeg ._fef ;_degf :=_acdd .PdfObject .(*_cd .PdfObjectDictionary );_degf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u004d\u006f\u0076i\u0065"));
_degf .SetIfNotNil ("\u0054",_eaeg .T );_degf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_eaeg .Movie );_degf .SetIfNotNil ("\u0041",_eaeg .A );return _acdd ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_eaafb *LTV )EnableChain (chain []*_gc .Certificate )error {return _eaafb .enable (nil ,chain ,"")};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_eab :=NewPdfAnnotation ();_bce :=&PdfAnnotationInk {};_bce .PdfAnnotation =_eab ;_bce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eab .SetContext (_bce );return _bce ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_bcb *PdfReader )newPdfAnnotationMarkupFromDict (_egge *_cd .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_ddg :=&PdfAnnotationMarkup {};if _becb :=_egge .Get ("\u0054");_becb !=nil {_ddg .T =_becb ;};if _aafb :=_egge .Get ("\u0050\u006f\u0070u\u0070");
_aafb !=nil {_fcdf ,_afee :=_aafb .(*_cd .PdfIndirectObject );if !_afee {if _ ,_agbg :=_aafb .(*_cd .PdfObjectNull );!_agbg {return nil ,_ac .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_bdfa ,_gcg :=_bcb .newPdfAnnotationFromIndirectObject (_fcdf );if _gcg !=nil {return nil ,_gcg ;};if _bdfa !=nil {_egf ,_bgc :=_bdfa ._eag .(*PdfAnnotationPopup );if !_bgc {return nil ,_ac .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_ddg .Popup =_egf ;};};};if _fea :=_egge .Get ("\u0043\u0041");_fea !=nil {_ddg .CA =_fea ;};if _fgab :=_egge .Get ("\u0052\u0043");_fgab !=nil {_ddg .RC =_fgab ;};if _ggcd :=_egge .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ggcd !=nil {_ddg .CreationDate =_ggcd ;};if _bffa :=_egge .Get ("\u0049\u0052\u0054");_bffa !=nil {_ddg .IRT =_bffa ;};if _gde :=_egge .Get ("\u0053\u0075\u0062\u006a");_gde !=nil {_ddg .Subj =_gde ;};if _ecdb :=_egge .Get ("\u0052\u0054");_ecdb !=nil {_ddg .RT =_ecdb ;
};if _acab :=_egge .Get ("\u0049\u0054");_acab !=nil {_ddg .IT =_acab ;};if _efbf :=_egge .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_efbf !=nil {_ddg .ExData =_efbf ;};return _ddg ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_aeacc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_fcbdb *PdfOutlineItem )GetContainingPdfObject ()_cd .PdfObject {return _fcbdb ._cgbcf };func (_ebfea *LTV )getCerts (_fccfd []*_gc .Certificate )([][]byte ,error ){_ebedbe :=make ([][]byte ,0,len (_fccfd ));for _ ,_ebbf :=range _fccfd {_ebedbe =append (_ebedbe ,_ebbf .Raw );
};return _ebedbe ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cd .PdfObjectStream )(*XObjectImage ,error ){_cddca :=&XObjectImage {};_cddca ._bgda =stream ;_ceged :=*(stream .PdfObjectDictionary );_fgfef ,_aced :=_cd .NewEncoderFromStream (stream );if _aced !=nil {return nil ,_aced ;
};_cddca .Filter =_fgfef ;if _ecegf :=_cd .TraceToDirectObject (_ceged .Get ("\u0057\u0069\u0064t\u0068"));_ecegf !=nil {_bfbgcg ,_eecad :=_ecegf .(*_cd .PdfObjectInteger );if !_eecad {return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fgagb :=int64 (*_bfbgcg );_cddca .Width =&_fgagb ;}else {return nil ,_ac .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bbfgd :=_cd .TraceToDirectObject (_ceged .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_bbfgd !=nil {_fdfgb ,_ccccb :=_bbfgd .(*_cd .PdfObjectInteger );if !_ccccb {return nil ,_ac .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cdeae :=int64 (*_fdfgb );
_cddca .Height =&_cdeae ;}else {return nil ,_ac .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _gefac :=_cd .TraceToDirectObject (_ceged .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_gefac !=nil {_dbdcc ,_fbadfd :=NewPdfColorspaceFromPdfObject (_gefac );if _fbadfd !=nil {return nil ,_fbadfd ;};_cddca .ColorSpace =_dbdcc ;}else {_dac .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_cddca .ColorSpace =NewPdfColorspaceDeviceGray ();};if _ceacb :=_cd .TraceToDirectObject (_ceged .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_ceacb !=nil {_cdefb ,_ebaf :=_ceacb .(*_cd .PdfObjectInteger );
if !_ebaf {return nil ,_ac .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fbbdf :=int64 (*_cdefb );_cddca .BitsPerComponent =&_fbbdf ;};_cddca .Intent =_ceged .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_cddca .ImageMask =_ceged .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_cddca .Mask =_ceged .Get ("\u004d\u0061\u0073\u006b");_cddca .Decode =_ceged .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_cddca .Interpolate =_ceged .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_cddca .Alternatives =_ceged .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_cddca .SMask =_ceged .Get ("\u0053\u004d\u0061s\u006b");_cddca .SMaskInData =_ceged .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_cddca .Matte =_ceged .Get ("\u004d\u0061\u0074t\u0065");_cddca .Name =_ceged .Get ("\u004e\u0061\u006d\u0065");_cddca .StructParent =_ceged .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cddca .ID =_ceged .Get ("\u0049\u0044");
_cddca .OPI =_ceged .Get ("\u004f\u0050\u0049");_cddca .Metadata =_ceged .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cddca .OC =_ceged .Get ("\u004f\u0043");_cddca .Stream =stream .Stream ;return _cddca ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_acfbc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _acfbc .UnderlyingCS ==nil {return nil ,_ac .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _acfbc .UnderlyingCS .ColorFromFloats (vals );};func _fbcdg (_feab []byte )([]byte ,error ){_ebeba :=_be .New ();if _ ,_cdaed :=_ag .Copy (_ebeba ,_ccc .NewReader (_feab ));_cdaed !=nil {return nil ,_cdaed ;};return _ebeba .Sum (nil ),nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_fbdcc *PdfFieldSignature )ToPdfObject ()_cd .PdfObject {if _fbdcc .PdfAnnotationWidget !=nil {_fbdcc .PdfAnnotationWidget .ToPdfObject ();};_fbdcc .PdfField .ToPdfObject ();_fdcdf :=_fbdcc ._ebfdd ;_bgac :=_fdcdf .PdfObject .(*_cd .PdfObjectDictionary );
_bgac .SetIfNotNil ("\u0046\u0054",_cd .MakeName ("\u0053\u0069\u0067"));_bgac .SetIfNotNil ("\u004c\u006f\u0063\u006b",_fbdcc .Lock );_bgac .SetIfNotNil ("\u0053\u0056",_fbdcc .SV );if _fbdcc .V !=nil {_bgac .SetIfNotNil ("\u0056",_fbdcc .V .ToPdfObject ());
};return _fdcdf ;};func _cfcd (_bebeg *_cd .PdfObjectDictionary ,_gbfg *fontCommon )(*pdfFontType3 ,error ){_gabd :=_dfbb (_gbfg );_cagag :=_bebeg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _cagag ==nil {_cagag =_cd .MakeInteger (0);};_gabd .FirstChar =_cagag ;
_acff ,_fadda :=_cd .GetIntVal (_cagag );if !_fadda {_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cagag );
return nil ,_cd .ErrTypeError ;};_fdee :=_cg .CharCode (_acff );_cagag =_bebeg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cagag ==nil {_cagag =_cd .MakeInteger (255);};_gabd .LastChar =_cagag ;_acff ,_fadda =_cd .GetIntVal (_cagag );
if !_fadda {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cagag );return nil ,_cd .ErrTypeError ;
};_edbb :=_cg .CharCode (_acff );_cagag =_bebeg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cagag !=nil {_gabd .Resources =_cagag ;};_cagag =_bebeg .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _cagag ==nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_cagag );
return nil ,_cd .ErrNotSupported ;};_gabd .CharProcs =_cagag ;_cagag =_bebeg .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _cagag ==nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_cagag );
return nil ,_cd .ErrNotSupported ;};_gabd .FontMatrix =_cagag ;_gabd ._gdcca =make (map[_cg .CharCode ]float64 );_cagag =_bebeg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cagag !=nil {_gabd .Widths =_cagag ;_bgcf ,_fbfb :=_cd .GetArray (_cagag );
if !_fbfb {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cagag );return nil ,_cd .ErrTypeError ;
};_gaede ,_bbabf :=_bgcf .ToFloat64Array ();if _bbabf !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bbabf ;};if len (_gaede )!=int (_edbb -_fdee +1){_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_edbb -_fdee +1,len (_gaede ));
return nil ,_cd .ErrRangeError ;};_dbega ,_fbfb :=_cd .GetArray (_gabd .FontMatrix );if !_fbfb {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dbega );
return nil ,_bbabf ;};_gfde ,_bbabf :=_dbega .ToFloat64Array ();if _bbabf !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bbabf ;};_gbbda :=_ca .NewMatrix (_gfde [0],_gfde [1],_gfde [2],_gfde [3],_gfde [4],_gfde [5]);for _fccg ,_ffbg :=range _gaede {_bacg ,_ :=_gbbda .Transform (_ffbg ,_ffbg );_gabd ._gdcca [_fdee +_cg .CharCode (_fccg )]=_bacg ;};};_gabd .Encoding =_cd .TraceToDirectObject (_bebeg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_fcfga :=_bebeg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fcfga !=nil {_gabd ._befae =_cd .TraceToDirectObject (_fcfga );_cfcgc ,_bcag :=_ggfd (_gabd ._befae ,&_gabd .fontCommon );if _bcag !=nil {return nil ,_bcag ;};_gabd ._deeg =_cfcgc ;
};if _bfgce :=_gabd ._deeg ;_bfgce !=nil {_gabd ._cedgg =_cg .NewCMapEncoder ("",nil ,_bfgce );}else {_gabd ._cedgg =_cg .NewPdfDocEncoder ();};return _gabd ,nil ;};

// GetBorderWidth returns the border style's width.
func (_daega *PdfBorderStyle )GetBorderWidth ()float64 {if _daega .W ==nil {return 1;};return *_daega .W ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cd .PdfObjectStream ;OCSP []*_cd .PdfObjectStream ;CRL []*_cd .PdfObjectStream ;TU *_cd .PdfObjectString ;TS *_cd .PdfObjectString ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cd .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cd .PdfObject ;A _cd .PdfObject ;SE _cd .PdfObject ;C _cd .PdfObject ;F _cd .PdfObject ;
_cgbcf *_cd .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_gcda *PdfAnnotationRedact )ToPdfObject ()_cd .PdfObject {_gcda .PdfAnnotation .ToPdfObject ();_ccbb :=_gcda ._fef ;_daef :=_ccbb .PdfObject .(*_cd .PdfObjectDictionary );_gcda .PdfAnnotationMarkup .appendToPdfDictionary (_daef );_daef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_daef .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gcda .QuadPoints );_daef .SetIfNotNil ("\u0049\u0043",_gcda .IC );_daef .SetIfNotNil ("\u0052\u004f",_gcda .RO );_daef .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gcda .OverlayText );
_daef .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gcda .Repeat );_daef .SetIfNotNil ("\u0044\u0041",_gcda .DA );_daef .SetIfNotNil ("\u0051",_gcda .Q );return _ccbb ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_bdefe *DSS )ToPdfObject ()_cd .PdfObject {_cbad :=_bdefe ._ecbfd .PdfObject .(*_cd .PdfObjectDictionary );_cbad .Clear ();_gfcf :=_cd .MakeDict ();for _accb ,_cgbc :=range _bdefe .VRI {_gfcf .Set (*_cd .MakeName (_accb ),_cgbc .ToPdfObject ());};
_cbad .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_bggfc (_bdefe .Certs ));_cbad .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_bggfc (_bdefe .OCSPs ));_cbad .SetIfNotNil ("\u0043\u0052\u004c\u0073",_bggfc (_bdefe .CRLs ));_cbad .Set ("\u0056\u0052\u0049",_gfcf );
return _bdefe ._ecbfd ;};func (_ffb *PdfReader )newPdfActionSubmitFormFromDict (_fgg *_cd .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_eeb ,_bbe :=_ace (_fgg .Get ("\u0046"));if _bbe !=nil {return nil ,_bbe ;};return &PdfActionSubmitForm {F :_eeb ,Fields :_fgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_dcff *PdfAnnotationLine )ToPdfObject ()_cd .PdfObject {_dcff .PdfAnnotation .ToPdfObject ();_ggbd :=_dcff ._fef ;_bfg :=_ggbd .PdfObject .(*_cd .PdfObjectDictionary );_dcff .PdfAnnotationMarkup .appendToPdfDictionary (_bfg );_bfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u004c\u0069\u006e\u0065"));
_bfg .SetIfNotNil ("\u004c",_dcff .L );_bfg .SetIfNotNil ("\u0042\u0053",_dcff .BS );_bfg .SetIfNotNil ("\u004c\u0045",_dcff .LE );_bfg .SetIfNotNil ("\u0049\u0043",_dcff .IC );_bfg .SetIfNotNil ("\u004c\u004c",_dcff .LL );_bfg .SetIfNotNil ("\u004c\u004c\u0045",_dcff .LLE );
_bfg .SetIfNotNil ("\u0043\u0061\u0070",_dcff .Cap );_bfg .SetIfNotNil ("\u0049\u0054",_dcff .IT );_bfg .SetIfNotNil ("\u004c\u004c\u004f",_dcff .LLO );_bfg .SetIfNotNil ("\u0043\u0050",_dcff .CP );_bfg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dcff .Measure );
_bfg .SetIfNotNil ("\u0043\u004f",_dcff .CO );return _ggbd ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ffcf :=NewPdfAnnotation ();_cfg :=&PdfAnnotationStrikeOut {};_cfg .PdfAnnotation =_ffcf ;_cfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffcf .SetContext (_cfg );return _cfg ;};

// String returns a string representation of the field.
func (_deacg *PdfField )String ()string {if _dbdg ,_fage :=_deacg .ToPdfObject ().(*_cd .PdfIndirectObject );_fage {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_deacg ._gafg ,_dbdg .PdfObject .String ());};return "";};func (_eabdg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_eabdg .fontCommon };


// GetContainingPdfObject implements interface PdfModel.
func (_eef *PdfAction )GetContainingPdfObject ()_cd .PdfObject {return _eef ._cea };func (_afa *PdfReader )newPdfActionImportDataFromDict (_cde *_cd .PdfObjectDictionary )(*PdfActionImportData ,error ){_dfb ,_cdc :=_ace (_cde .Get ("\u0046"));if _cdc !=nil {return nil ,_cdc ;
};return &PdfActionImportData {F :_dfb },nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gbcgd *PdfReader )PageFromIndirectObject (ind *_cd .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gbcgd .PageList )!=len (_gbcgd ._ccacd ){return nil ,0,_ac .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _cccd ,_fcdead :=range _gbcgd ._ccacd {if _fcdead ==ind {return _gbcgd .PageList [_cccd ],_cccd +1,nil ;};};return nil ,0,_ac .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// HasExtGState checks if ExtGState name is available.
func (_fgbe *PdfPage )HasExtGState (name _cd .PdfObjectName )bool {if _fgbe .Resources ==nil {return false ;};if _fgbe .Resources .ExtGState ==nil {return false ;};_babcb ,_ddfgga :=_cd .TraceToDirectObject (_fgbe .Resources .ExtGState ).(*_cd .PdfObjectDictionary );
if !_ddfgga {_dac .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cd .TraceToDirectObject (_fgbe .Resources .ExtGState ));
return false ;};_egggb :=_babcb .Get (name );_bbga :=_egggb !=nil ;return _bbga ;};

// L returns the value of the L component of the color.
func (_gbbg *PdfColorLab )L ()float64 {return _gbbg [0]};func _fggg (_gffc _cd .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_eegd :=NewPdfColorspaceSpecialSeparation ();if _aeggg ,_cgbb :=_gffc .(*_cd .PdfIndirectObject );_cgbb {_eegd ._fgegg =_aeggg ;
};_gffc =_cd .TraceToDirectObject (_gffc );_agac ,_accf :=_gffc .(*_cd .PdfObjectArray );if !_accf {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _agac .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gffc =_agac .Get (0);
_dfae ,_accf :=_gffc .(*_cd .PdfObjectName );if !_accf {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_dfae !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gffc =_agac .Get (1);_dfae ,_accf =_gffc .(*_cd .PdfObjectName );if !_accf {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_eegd .ColorantName =_dfae ;_gffc =_agac .Get (2);_bbeg ,_adgf :=NewPdfColorspaceFromPdfObject (_gffc );if _adgf !=nil {return nil ,_adgf ;};_eegd .AlternateSpace =_bbeg ;_dcdd ,_adgf :=_ddcfb (_agac .Get (3));if _adgf !=nil {return nil ,_adgf ;};_eegd .TintTransform =_dcdd ;
return _eegd ,nil ;};func (_fdeeb *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fbcd []*PdfFieldSignature ;for _ ,_dggfb :=range _fdeeb .AllFields (){switch _befef :=_dggfb .GetContext ().(type ){case *PdfFieldSignature :_baebbc :=_befef ;
_fbcd =append (_fbcd ,_baebbc );};};return _fbcd ;};func (_eccgc *LTV )enable (_adegb ,_dacf []*_gc .Certificate ,_feae string )error {_bbdfg ,_bcab ,_egbb :=_eccgc .buildCertChain (_adegb ,_dacf );if _egbb !=nil {return _egbb ;};_cddaa ,_egbb :=_eccgc .getCerts (_bbdfg );
if _egbb !=nil {return _egbb ;};_cagdd ,_egbb :=_eccgc .getOCSPs (_bbdfg ,_bcab );if _egbb !=nil {return _egbb ;};_bafd ,_egbb :=_eccgc .getCRLs (_bbdfg );if _egbb !=nil {return _egbb ;};_ecfe :=_eccgc ._bgceb ;_cdgdgg ,_egbb :=_ecfe .addCerts (_cddaa );
if _egbb !=nil {return _egbb ;};_ggdfe ,_egbb :=_ecfe .addOCSPs (_cagdd );if _egbb !=nil {return _egbb ;};_egagc ,_egbb :=_ecfe .addCRLs (_bafd );if _egbb !=nil {return _egbb ;};if _feae !=""{_ecfe .VRI [_feae ]=&VRI {Cert :_cdgdgg ,OCSP :_ggdfe ,CRL :_egagc };
};_eccgc ._ecffd .SetDSS (_ecfe );return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_dbgbc *_cd .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_fddbc *PdfColorCalRGB )GetNumComponents ()int {return 3};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_eaefd *PdfFieldButton )SetType (btype ButtonType ){_cbcd :=uint32 (0);if _eaefd .Ff !=nil {_cbcd =uint32 (*_eaefd .Ff );};switch btype {case ButtonTypePush :_cbcd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_cbcd |=FieldFlagRadio .Mask ();
};_eaefd .Ff =_cd .MakeInteger (int64 (_cbcd ));};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_dae *PdfAction )GetContext ()PdfModel {if _dae ==nil {return nil ;};return _dae ._ec ;};

// ToPdfObject implements interface PdfModel.
func (_ddec *PdfAnnotationSquiggly )ToPdfObject ()_cd .PdfObject {_ddec .PdfAnnotation .ToPdfObject ();_caba :=_ddec ._fef ;_ffgg :=_caba .PdfObject .(*_cd .PdfObjectDictionary );_ddec .PdfAnnotationMarkup .appendToPdfDictionary (_ffgg );_ffgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_ffgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ddec .QuadPoints );return _caba ;};func _bdfacf (_bdeac *_cd .PdfObjectDictionary )(*PdfShadingPattern ,error ){_fedce :=&PdfShadingPattern {};_edgfe :=_bdeac .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _edgfe ==nil {_dac .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_agabc ,_fefgge :=_ffag (_edgfe );if _fefgge !=nil {_dac .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fefgge );
return nil ,_fefgge ;};_fedce .Shading =_agabc ;if _dfdee :=_bdeac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dfdee !=nil {_dggga ,_dgdeg :=_dfdee .(*_cd .PdfObjectArray );if !_dgdeg {_dac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfdee );
return nil ,_cd .ErrTypeError ;};_fedce .Matrix =_dggga ;};if _eebee :=_bdeac .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_eebee !=nil {_fedce .ExtGState =_eebee ;};return _fedce ,nil ;};func (_abdgf *PdfReader )newPdfSignatureFromIndirect (_cdabc *_cd .PdfIndirectObject )(*PdfSignature ,error ){_cgce ,_bege :=_cdabc .PdfObject .(*_cd .PdfObjectDictionary );
if !_bege {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _faaca ,_gbbgb :=_abdgf ._bdcga .GetModelFromPrimitive (_cdabc ).(*PdfSignature );_gbbgb {return _faaca ,nil ;};_efdf :=&PdfSignature {};_efdf ._eeda =_cdabc ;_efdf .Type ,_ =_cd .GetName (_cgce .Get ("\u0054\u0079\u0070\u0065"));
_efdf .Filter ,_bege =_cd .GetName (_cgce .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bege {_dac .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_efdf .SubFilter ,_ =_cd .GetName (_cgce .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_efdf .Contents ,_bege =_cd .GetString (_cgce .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bege {_dac .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_efdf .Cert =_cgce .Get ("\u0043\u0065\u0072\u0074");_efdf .ByteRange ,_ =_cd .GetArray (_cgce .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_efdf .Reference ,_ =_cd .GetArray (_cgce .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_efdf .Changes ,_ =_cd .GetArray (_cgce .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_efdf .Name ,_ =_cd .GetString (_cgce .Get ("\u004e\u0061\u006d\u0065"));_efdf .M ,_ =_cd .GetString (_cgce .Get ("\u004d"));_efdf .Location ,_ =_cd .GetString (_cgce .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_efdf .Reason ,_ =_cd .GetString (_cgce .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_efdf .ContactInfo ,_ =_cd .GetString (_cgce .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_efdf .R ,_ =_cd .GetInt (_cgce .Get ("\u0052"));
_efdf .V ,_ =_cd .GetInt (_cgce .Get ("\u0056"));_efdf .PropBuild ,_ =_cd .GetDict (_cgce .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_efdf .PropAuthTime ,_ =_cd .GetInt (_cgce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_efdf .PropAuthType ,_ =_cd .GetName (_cgce .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _efdf ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dbe *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;};var _cabe =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cd .PdfObject ;Q _cd .PdfObject ;RC _cd .PdfObject ;DS _cd .PdfObject ;CL _cd .PdfObject ;IT _cd .PdfObject ;BE _cd .PdfObject ;RD _cd .PdfObject ;BS _cd .PdfObject ;LE _cd .PdfObject ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbcaf *PdfShadingType3 )ToPdfObject ()_cd .PdfObject {_gbcaf .PdfShading .ToPdfObject ();_baegd ,_dddbe :=_gbcaf .getShadingDict ();if _dddbe !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gbcaf .Coords !=nil {_baegd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gbcaf .Coords );};if _gbcaf .Domain !=nil {_baegd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbcaf .Domain );};if _gbcaf .Function !=nil {if len (_gbcaf .Function )==1{_baegd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbcaf .Function [0].ToPdfObject ());
}else {_gccdd :=_cd .MakeArray ();for _ ,_cagbgc :=range _gbcaf .Function {_gccdd .Append (_cagbgc .ToPdfObject ());};_baegd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gccdd );};};if _gbcaf .Extend !=nil {_baegd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gbcaf .Extend );
};return _gbcaf ._fdadf ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_agaeb *_cd .PdfIndirectObject ;};func (_bdffe *PdfReader )loadAnnotations (_dagc _cd .PdfObject )([]*PdfAnnotation ,error ){_dabe ,_fdebc :=_cd .GetArray (_dagc );if !_fdebc {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gedcb []*PdfAnnotation ;for _ ,_cagbga :=range _dabe .Elements (){_cagbga =_cd .ResolveReference (_cagbga );if _ ,_gbaff :=_cagbga .(*_cd .PdfObjectNull );_gbaff {continue ;};_agcdg ,_affab :=_cagbga .(*_cd .PdfObjectDictionary );_cebdd ,_aaedf :=_cagbga .(*_cd .PdfIndirectObject );
if _affab {_cebdd =&_cd .PdfIndirectObject {};_cebdd .PdfObject =_agcdg ;}else {if !_aaedf {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gbecc ,_gcefd :=_bdffe .newPdfAnnotationFromIndirectObject (_cebdd );if _gcefd !=nil {return nil ,_gcefd ;};switch _cfff :=_gbecc .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gbecd :=range _bdffe .AcroForm .AllFields (){if _gbecd ._ebfdd ==_cfff .Parent {_cfff ._edb =_gbecd ;
break ;};};};if _gbecc !=nil {_gedcb =append (_gedcb ,_gbecc );};};return _gedcb ,nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_addfg *PdfPattern )IsShading ()bool {return _addfg .PatternType ==2};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gffd _ag .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gbdba _beg .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_gggbba _beg .Image )(*Image ,error );

// Compress an image.
Compress (_ebgae *Image ,_cebfd int64 )(*Image ,error );};

// Initialize initializes the PdfSignature.
func (_bfbba *PdfSignature )Initialize ()error {if _bfbba .Handler ==nil {return _ac .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _bfbba .Handler .InitSignature (_bfbba );};var _ pdfFont =(*pdfFontType3 )(nil );

// ToPdfObject returns the PDF representation of the function.
func (_efdba *PdfFunctionType4 )ToPdfObject ()_cd .PdfObject {_ffdce :=_efdba ._ffabbc ;if _ffdce ==nil {_efdba ._ffabbc =&_cd .PdfObjectStream {};_ffdce =_efdba ._ffabbc ;};_fbge :=_cd .MakeDict ();_fbge .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cd .MakeInteger (4));
_egdc :=&_cd .PdfObjectArray {};for _ ,_gdega :=range _efdba .Domain {_egdc .Append (_cd .MakeFloat (_gdega ));};_fbge .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egdc );_gcecf :=&_cd .PdfObjectArray {};for _ ,_egbdg :=range _efdba .Range {_gcecf .Append (_cd .MakeFloat (_egbdg ));
};_fbge .Set ("\u0052\u0061\u006eg\u0065",_gcecf );if _efdba ._bgcfd ==nil &&_efdba .Program !=nil {_efdba ._bgcfd =[]byte (_efdba .Program .String ());};_fbge .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_efdba ._bgcfd ))));
_ffdce .Stream =_efdba ._bgcfd ;_ffdce .PdfObjectDictionary =_fbge ;return _ffdce ;};

// ToPdfObject returns a stream object.
func (_dgea *XObjectImage )ToPdfObject ()_cd .PdfObject {_ceaa :=_dgea ._bgda ;_gcgdd :=_ceaa .PdfObjectDictionary ;if _dgea .Filter !=nil {_gcgdd =_dgea .Filter .MakeStreamDict ();_ceaa .PdfObjectDictionary =_gcgdd ;};_gcgdd .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_gcgdd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0049\u006d\u0061g\u0065"));_gcgdd .Set ("\u0057\u0069\u0064t\u0068",_cd .MakeInteger (*(_dgea .Width )));_gcgdd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cd .MakeInteger (*(_dgea .Height )));
if _dgea .BitsPerComponent !=nil {_gcgdd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cd .MakeInteger (*(_dgea .BitsPerComponent )));};if _dgea .ColorSpace !=nil {_gcgdd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dgea .ColorSpace .ToPdfObject ());
};_gcgdd .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_dgea .Intent );_gcgdd .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_dgea .ImageMask );_gcgdd .SetIfNotNil ("\u004d\u0061\u0073\u006b",_dgea .Mask );_gfcde :=_gcgdd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _dgea .Decode ==nil &&_gfcde {_gcgdd .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _dgea .Decode !=nil {_gcgdd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dgea .Decode );};_gcgdd .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_dgea .Interpolate );
_gcgdd .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_dgea .Alternatives );_gcgdd .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_dgea .SMask );_gcgdd .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_dgea .SMaskInData );
_gcgdd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dgea .Matte );_gcgdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgea .Name );_gcgdd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dgea .StructParent );_gcgdd .SetIfNotNil ("\u0049\u0044",_dgea .ID );
_gcgdd .SetIfNotNil ("\u004f\u0050\u0049",_dgea .OPI );_gcgdd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dgea .Metadata );_gcgdd .SetIfNotNil ("\u004f\u0043",_dgea .OC );_gcgdd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_dgea .Stream ))));
_ceaa .Stream =_dgea .Stream ;return _ceaa ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_egdfd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_eeege ,_egeeb :=color .(*PdfColorDeviceRGB );if !_egeeb {_dac .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _eeege ,nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_bcd .StdFontName ;

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_abfe *PdfPageResources )GetColorspaceByName (keyName _cd .PdfObjectName )(PdfColorspace ,bool ){_dgfd ,_cddfdb :=_abfe .GetColorspaces ();if _cddfdb !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cddfdb );
return nil ,false ;};if _dgfd ==nil {return nil ,false ;};_ccdeg ,_eecbc :=_dgfd .Colorspaces [string (keyName )];if !_eecbc {return nil ,false ;};return _ccdeg ,true ;};func (_bffd *LTV )getOCSPs (_fffdc []*_gc .Certificate ,_gbeag map[string ]*_gc .Certificate )([][]byte ,error ){_beacg :=make ([][]byte ,0,len (_fffdc ));
for _ ,_bcef :=range _fffdc {for _ ,_cagdda :=range _bcef .OCSPServer {if _bffd .CertClient .IsCA (_bcef ){continue ;};_aead ,_faace :=_gbeag [_bcef .Issuer .CommonName ];if !_faace {_dac .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_cdgde ,_dgdfa :=_bffd .OCSPClient .MakeRequest (_cagdda ,_bcef ,_aead );if _dgdfa !=nil {_dac .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_dgdfa );
continue ;};_beacg =append (_beacg ,_cdgde );};};return _beacg ,nil ;};func (_febff *PdfReader )newPdfActionRenditionFromDict (_ffa *_cd .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ffa .Get ("\u0052"),AN :_ffa .Get ("\u0041\u004e"),OP :_ffa .Get ("\u004f\u0050"),JS :_ffa .Get ("\u004a\u0053")},nil ;
};func (_daec fontCommon )coreString ()string {_efef :="";if _daec ._gdegf !=nil {_efef =_daec ._gdegf .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_daec ._ecea ,_daec ._bgdfc ,_daec ._cafe ,_daec ._fdbef ,_daec ._befae !=nil ,_daec .fontFlags (),_efef );
};func (_baa *PdfReader )newPdfActionFromIndirectObject (_fac *_cd .PdfIndirectObject )(*PdfAction ,error ){_dcee ,_ccda :=_fac .PdfObject .(*_cd .PdfObjectDictionary );if !_ccda {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_baa ._bdcga .GetModelFromPrimitive (_dcee );model !=nil {_gag ,_gdf :=model .(*PdfAction );if !_gdf {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _gag ,nil ;};_ccfa :=&PdfAction {};_ccfa ._cea =_fac ;_baa ._bdcga .Register (_dcee ,_ccfa );if _gcd :=_dcee .Get ("\u0054\u0079\u0070\u0065");_gcd !=nil {_de ,_bag :=_gcd .(*_cd .PdfObjectName );if !_bag {_dac .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gcd );
}else {if *_de !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dac .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_de );
};_ccfa .Type =_de ;};};if _cdf :=_dcee .Get ("\u004e\u0065\u0078\u0074");_cdf !=nil {_ccfa .Next =_cdf ;};if _ebe :=_dcee .Get ("\u0053");_ebe !=nil {_ccfa .S =_ebe ;};_dda ,_cfec :=_ccfa .S .(*_cd .PdfObjectName );if !_cfec {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ccfa .S );
return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ccfa .S );};_ae :=PdfActionType (_dda .String ());
switch _ae {case ActionTypeGoTo :_febf ,_egb :=_baa .newPdfActionGotoFromDict (_dcee );if _egb !=nil {return nil ,_egb ;};_febf .PdfAction =_ccfa ;_ccfa ._ec =_febf ;return _ccfa ,nil ;case ActionTypeGoToR :_cac ,_bdf :=_baa .newPdfActionGotoRFromDict (_dcee );
if _bdf !=nil {return nil ,_bdf ;};_cac .PdfAction =_ccfa ;_ccfa ._ec =_cac ;return _ccfa ,nil ;case ActionTypeGoToE :_fb ,_fcd :=_baa .newPdfActionGotoEFromDict (_dcee );if _fcd !=nil {return nil ,_fcd ;};_fb .PdfAction =_ccfa ;_ccfa ._ec =_fb ;return _ccfa ,nil ;
case ActionTypeLaunch :_faec ,_ecae :=_baa .newPdfActionLaunchFromDict (_dcee );if _ecae !=nil {return nil ,_ecae ;};_faec .PdfAction =_ccfa ;_ccfa ._ec =_faec ;return _ccfa ,nil ;case ActionTypeThread :_bgd ,_fga :=_baa .newPdfActionThreadFromDict (_dcee );
if _fga !=nil {return nil ,_fga ;};_bgd .PdfAction =_ccfa ;_ccfa ._ec =_bgd ;return _ccfa ,nil ;case ActionTypeURI :_cda ,_agbb :=_baa .newPdfActionURIFromDict (_dcee );if _agbb !=nil {return nil ,_agbb ;};_cda .PdfAction =_ccfa ;_ccfa ._ec =_cda ;return _ccfa ,nil ;
case ActionTypeSound :_bba ,_fde :=_baa .newPdfActionSoundFromDict (_dcee );if _fde !=nil {return nil ,_fde ;};_bba .PdfAction =_ccfa ;_ccfa ._ec =_bba ;return _ccfa ,nil ;case ActionTypeMovie :_ccae ,_ceg :=_baa .newPdfActionMovieFromDict (_dcee );if _ceg !=nil {return nil ,_ceg ;
};_ccae .PdfAction =_ccfa ;_ccfa ._ec =_ccae ;return _ccfa ,nil ;case ActionTypeHide :_efd ,_abb :=_baa .newPdfActionHideFromDict (_dcee );if _abb !=nil {return nil ,_abb ;};_efd .PdfAction =_ccfa ;_ccfa ._ec =_efd ;return _ccfa ,nil ;case ActionTypeNamed :_ffd ,_bedf :=_baa .newPdfActionNamedFromDict (_dcee );
if _bedf !=nil {return nil ,_bedf ;};_ffd .PdfAction =_ccfa ;_ccfa ._ec =_ffd ;return _ccfa ,nil ;case ActionTypeSubmitForm :_ecca ,_eba :=_baa .newPdfActionSubmitFormFromDict (_dcee );if _eba !=nil {return nil ,_eba ;};_ecca .PdfAction =_ccfa ;_ccfa ._ec =_ecca ;
return _ccfa ,nil ;case ActionTypeResetForm :_gdbe ,_geeg :=_baa .newPdfActionResetFormFromDict (_dcee );if _geeg !=nil {return nil ,_geeg ;};_gdbe .PdfAction =_ccfa ;_ccfa ._ec =_gdbe ;return _ccfa ,nil ;case ActionTypeImportData :_abcd ,_geaa :=_baa .newPdfActionImportDataFromDict (_dcee );
if _geaa !=nil {return nil ,_geaa ;};_abcd .PdfAction =_ccfa ;_ccfa ._ec =_abcd ;return _ccfa ,nil ;case ActionTypeSetOCGState :_efa ,_faca :=_baa .newPdfActionSetOCGStateFromDict (_dcee );if _faca !=nil {return nil ,_faca ;};_efa .PdfAction =_ccfa ;_ccfa ._ec =_efa ;
return _ccfa ,nil ;case ActionTypeRendition :_gcdd ,_gdbc :=_baa .newPdfActionRenditionFromDict (_dcee );if _gdbc !=nil {return nil ,_gdbc ;};_gcdd .PdfAction =_ccfa ;_ccfa ._ec =_gcdd ;return _ccfa ,nil ;case ActionTypeTrans :_agdg ,_daa :=_baa .newPdfActionTransFromDict (_dcee );
if _daa !=nil {return nil ,_daa ;};_agdg .PdfAction =_ccfa ;_ccfa ._ec =_agdg ;return _ccfa ,nil ;case ActionTypeGoTo3DView :_gdff ,_fgc :=_baa .newPdfActionGoTo3DViewFromDict (_dcee );if _fgc !=nil {return nil ,_fgc ;};_gdff .PdfAction =_ccfa ;_ccfa ._ec =_gdff ;
return _ccfa ,nil ;case ActionTypeJavaScript :_dfe ,_dbg :=_baa .newPdfActionJavaScriptFromDict (_dcee );if _dbg !=nil {return nil ,_dbg ;};_dfe .PdfAction =_ccfa ;_ccfa ._ec =_dfe ;return _ccfa ,nil ;};_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ae );
return nil ,nil ;};func (_agfc *PdfWriter )addObject (_feeee _cd .PdfObject )bool {_gfaf :=_agfc .hasObject (_feeee );if !_gfaf {_fbfba :=_cd .ResolveReferencesDeep (_feeee ,_agfc ._fecfaa );if _fbfba !=nil {_dac .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_fbfba );
};_agfc ._aaeg =append (_agfc ._aaeg ,_feeee );_agfc ._eebaaf [_feeee ]=struct{}{};return true ;};return false ;};func _dfbb (_ecgaa *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ecgaa }};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);func (_fegd *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _fegd ._gdegf };func _cbafd (_egdbg _cd .PdfObject ){_dac .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_egdbg ,_egdbg .String ());
if _feebd ,_bccda :=_egdbg .(*_cd .PdfObjectStream );_bccda {_acgd ,_dafff :=_cd .DecodeStream (_feebd );if _dafff !=nil {_dac .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dafff );return ;};_dac .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_acgd );
}else if _dgcfaf ,_afcga :=_egdbg .(*_cd .PdfIndirectObject );_afcga {_dac .Log .Debug ("\u0025\u0054\u0020%\u0076",_dgcfaf .PdfObject ,_dgcfaf .PdfObject );_dac .Log .Debug ("\u0025\u0073",_dgcfaf .PdfObject .String ());};};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cd .PdfObject ;T3DV _cd .PdfObject ;T3DA _cd .PdfObject ;T3DI _cd .PdfObject ;T3DB _cd .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cebg *PdfAnnotationLink )ToPdfObject ()_cd .PdfObject {_cebg .PdfAnnotation .ToPdfObject ();_ffcggg :=_cebg ._fef ;_cdac :=_ffcggg .PdfObject .(*_cd .PdfObjectDictionary );_cdac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u004c\u0069\u006e\u006b"));
if _cebg ._cbf !=nil &&_cebg ._cbf ._ec !=nil {_cdac .Set ("\u0041",_cebg ._cbf ._ec .ToPdfObject ());}else if _cebg .A !=nil {_cdac .Set ("\u0041",_cebg .A );};_cdac .SetIfNotNil ("\u0044\u0065\u0073\u0074",_cebg .Dest );_cdac .SetIfNotNil ("\u0048",_cebg .H );
_cdac .SetIfNotNil ("\u0050\u0041",_cebg .PA );_cdac .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cebg .QuadPoints );_cdac .SetIfNotNil ("\u0042\u0053",_cebg .BS );return _ffcggg ;};func _bgbga (_eadd *_cd .PdfObjectDictionary ,_cgcg *fontCommon )(*pdfCIDFontType2 ,error ){if _cgcg ._ecea !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dac .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cgcg );
return nil ,_cd .ErrRangeError ;};_cagc :=_degg (_cgcg );_aacfa ,_fbee :=_cd .GetDict (_eadd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fbee {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cgcg );
return nil ,ErrRequiredAttributeMissing ;};_cagc .CIDSystemInfo =_aacfa ;_cagc .DW =_eadd .Get ("\u0044\u0057");_cagc .W =_eadd .Get ("\u0057");_cagc .DW2 =_eadd .Get ("\u0044\u0057\u0032");_cagc .W2 =_eadd .Get ("\u0057\u0032");_cagc .CIDToGIDMap =_eadd .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cagc ._ccfac =1000.0;if _gecc ,_fbed :=_cd .GetNumberAsFloat (_cagc .DW );_fbed ==nil {_cagc ._ccfac =_gecc ;};_gada ,_gbcef :=_baae (_cagc .W );if _gbcef !=nil {return nil ,_gbcef ;};if _gada ==nil {_gada =map[_cg .CharCode ]float64 {};};_cagc ._baea =_gada ;
return _cagc ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_fabdb *pdfCIDFontType2 )ToPdfObject ()_cd .PdfObject {if _fabdb ._cgdga ==nil {_fabdb ._cgdga =&_cd .PdfIndirectObject {};};_agbgg :=_fabdb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_fabdb ._cgdga .PdfObject =_agbgg ;if _fabdb .CIDSystemInfo !=nil {_agbgg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_fabdb .CIDSystemInfo );};if _fabdb .DW !=nil {_agbgg .Set ("\u0044\u0057",_fabdb .DW );};if _fabdb .DW2 !=nil {_agbgg .Set ("\u0044\u0057\u0032",_fabdb .DW2 );
};if _fabdb .W !=nil {_agbgg .Set ("\u0057",_fabdb .W );};if _fabdb .W2 !=nil {_agbgg .Set ("\u0057\u0032",_fabdb .W2 );};if _fabdb .CIDToGIDMap !=nil {_agbgg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_fabdb .CIDToGIDMap );};
return _fabdb ._cgdga ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_edfa *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ac .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gdaea :=field .V ;if _gdaea ==nil {return _ac .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cfd :=pageNum -1;
if _cfd < 0||_cfd > len (_edfa ._edc )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gcff :=_edfa .Reader .PageList [_cfd ];field .P =_gcff .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_cd .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_gcff .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _edfa ._fcaf ==_edfa ._gfbg .AcroForm {_edfa ._fcaf =_edfa .Reader .AcroForm ;};_acg :=_edfa ._fcaf ;if _acg ==nil {_acg =NewPdfAcroForm ();};_acg .SigFlags =_cd .MakeInteger (3);_dfgb :=append (_acg .AllFields (),field .PdfField );
_acg .Fields =&_dfgb ;_edfa .ReplaceAcroForm (_acg );_edfa .UpdatePage (_gcff );_edfa ._edc [_cfd ]=_gcff ;return nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cafag :=&PdfOutlineItem {_cgbcf :_cd .MakeIndirectObject (_cd .MakeDict ())};_cafag ._aaaag =_cafag ;return _cafag ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_abff DefaultImageHandler )Read (reader _ag .Reader )(*Image ,error ){_bbca ,_ ,_cdecc :=_beg .Decode (reader );if _cdecc !=nil {_dac .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cdecc );
return nil ,_cdecc ;};return _abff .NewImageFromGoImage (_bbca );};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_aafca *PdfPageResources )GetXObjectFormByName (keyName _cd .PdfObjectName )(*XObjectForm ,error ){_acfbf ,_cfdc :=_aafca .GetXObjectByName (keyName );if _acfbf ==nil {return nil ,nil ;};if _cfdc !=XObjectTypeForm {return nil ,_ac .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_feaaf ,_aabba :=NewXObjectFormFromStream (_acfbf );if _aabba !=nil {return nil ,_aabba ;};return _feaaf ,nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_aaaag interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_cfabf *pdfCIDFontType0 )ToPdfObject ()_cd .PdfObject {return _cd .MakeNull ()};func (_defeg *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_fbgfe *PdfTilingPattern )ToPdfObject ()_cd .PdfObject {_fbgfe .PdfPattern .ToPdfObject ();_ceff :=_fbgfe .getDict ();if _fbgfe .PaintType !=nil {_ceff .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_fbgfe .PaintType );};if _fbgfe .TilingType !=nil {_ceff .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fbgfe .TilingType );
};if _fbgfe .BBox !=nil {_ceff .Set ("\u0042\u0042\u006f\u0078",_fbgfe .BBox .ToPdfObject ());};if _fbgfe .XStep !=nil {_ceff .Set ("\u0058\u0053\u0074e\u0070",_fbgfe .XStep );};if _fbgfe .YStep !=nil {_ceff .Set ("\u0059\u0053\u0074e\u0070",_fbgfe .YStep );
};if _fbgfe .Resources !=nil {_ceff .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fbgfe .Resources .ToPdfObject ());};if _fbgfe .Matrix !=nil {_ceff .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fbgfe .Matrix );};return _fbgfe ._geeaf ;};func (_dade *PdfAcroForm )fill (_bdbe FieldValueProvider ,_eaff FieldAppearanceGenerator )error {if _dade ==nil {return nil ;
};_gcae ,_gcdfd :=_bdbe .FieldValues ();if _gcdfd !=nil {return _gcdfd ;};for _ ,_fegf :=range _dade .AllFields (){_aebeg :=_fegf .PartialName ();_ffgb ,_gaafb :=_gcae [_aebeg ];if !_gaafb {if _afgd ,_cdef :=_fegf .FullName ();_cdef ==nil {_ffgb ,_gaafb =_gcae [_afgd ];
};};if !_gaafb {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_aebeg );
continue ;};if _agcaf :=_dcbfe (_fegf ,_ffgb );_agcaf !=nil {return _agcaf ;};if _eaff ==nil {continue ;};for _ ,_eebd :=range _fegf .Annotations {_fbfbc ,_ebbge :=_eaff .GenerateAppearanceDict (_dade ,_fegf ,_eebd );if _ebbge !=nil {return _ebbge ;};_eebd .AP =_fbfbc ;
_eebd .ToPdfObject ();};};return nil ;};func (_dccd *PdfAcroForm )filteredFields (_cfafb FieldFilterFunc ,_babcda bool )[]*PdfField {if _dccd ==nil {return nil ;};return _bbge (_dccd .Fields ,_cfafb ,_babcda );};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ebac :map[_cd .PdfObject ]struct{}{},_bdcga :_dcdbg (),_agbbba :_cd .NewParserFromString (txt )};};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gebf *DSS )GetContainingPdfObject ()_cd .PdfObject {return _gebf ._ecbfd };

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_baebb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _baebb .Alternate ==nil {_dac .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _baebb .N ==1{_dac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bfaff :=NewPdfColorspaceDeviceGray ();return _bfaff .ImageToRGB (img );}else if _baebb .N ==3{_dac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _baebb .N ==4{_dac .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bdab :=NewPdfColorspaceDeviceCMYK ();return _bdab .ImageToRGB (img );}else {return img ,_ac .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dac .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_baebb );
_bcgg ,_ecga :=_baebb .Alternate .ImageToRGB (img );_dac .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dac .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_bcgg );
return _bcgg ,_ecga ;};

// ToPdfObject implements interface PdfModel.
func (_af *PdfAction )ToPdfObject ()_cd .PdfObject {_ba :=_af ._cea ;_ecd :=_ba .PdfObject .(*_cd .PdfObjectDictionary );_ecd .Clear ();_ecd .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ecd .SetIfNotNil ("\u0053",_af .S );
_ecd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_af .Next );return _ba ;};

// ToPdfObject implements interface PdfModel.
func (_ffgd *PdfAnnotationSound )ToPdfObject ()_cd .PdfObject {_ffgd .PdfAnnotation .ToPdfObject ();_agfg :=_ffgd ._fef ;_dddb :=_agfg .PdfObject .(*_cd .PdfObjectDictionary );_ffgd .PdfAnnotationMarkup .appendToPdfDictionary (_dddb );_dddb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0053\u006f\u0075n\u0064"));
_dddb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ffgd .Sound );_dddb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ffgd .Name );return _agfg ;};

// ToPdfObject implements interface PdfModel.
func (_ebea *PdfAnnotationCircle )ToPdfObject ()_cd .PdfObject {_ebea .PdfAnnotation .ToPdfObject ();_edbc :=_ebea ._fef ;_facc :=_edbc .PdfObject .(*_cd .PdfObjectDictionary );_ebea .PdfAnnotationMarkup .appendToPdfDictionary (_facc );_facc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_facc .SetIfNotNil ("\u0042\u0053",_ebea .BS );_facc .SetIfNotNil ("\u0049\u0043",_ebea .IC );_facc .SetIfNotNil ("\u0042\u0045",_ebea .BE );_facc .SetIfNotNil ("\u0052\u0044",_ebea .RD );return _edbc ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_gfac *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcbd ,_gcfa :=_cd .GetNumbersAsFloat (objects );
if _gcfa !=nil {return nil ,_gcfa ;};return _gfac .ColorFromFloats (_bcbd );};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_aagcc *PdfFontDescriptor )ToPdfObject ()_cd .PdfObject {_adbf :=_cd .MakeDict ();if _aagcc ._decf ==nil {_aagcc ._decf =&_cd .PdfIndirectObject {};};_aagcc ._decf .PdfObject =_adbf ;_adbf .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _aagcc .FontName !=nil {_adbf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_aagcc .FontName );};if _aagcc .FontFamily !=nil {_adbf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_aagcc .FontFamily );};if _aagcc .FontStretch !=nil {_adbf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_aagcc .FontStretch );
};if _aagcc .FontWeight !=nil {_adbf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_aagcc .FontWeight );};if _aagcc .Flags !=nil {_adbf .Set ("\u0046\u006c\u0061g\u0073",_aagcc .Flags );};if _aagcc .FontBBox !=nil {_adbf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_aagcc .FontBBox );
};if _aagcc .ItalicAngle !=nil {_adbf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_aagcc .ItalicAngle );};if _aagcc .Ascent !=nil {_adbf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_aagcc .Ascent );};if _aagcc .Descent !=nil {_adbf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_aagcc .Descent );
};if _aagcc .Leading !=nil {_adbf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_aagcc .Leading );};if _aagcc .CapHeight !=nil {_adbf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_aagcc .CapHeight );};if _aagcc .XHeight !=nil {_adbf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_aagcc .XHeight );
};if _aagcc .StemV !=nil {_adbf .Set ("\u0053\u0074\u0065m\u0056",_aagcc .StemV );};if _aagcc .StemH !=nil {_adbf .Set ("\u0053\u0074\u0065m\u0048",_aagcc .StemH );};if _aagcc .AvgWidth !=nil {_adbf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_aagcc .AvgWidth );
};if _aagcc .MaxWidth !=nil {_adbf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_aagcc .MaxWidth );};if _aagcc .MissingWidth !=nil {_adbf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_aagcc .MissingWidth );};if _aagcc .FontFile !=nil {_adbf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_aagcc .FontFile );
};if _aagcc .FontFile2 !=nil {_adbf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_aagcc .FontFile2 );};if _aagcc .FontFile3 !=nil {_adbf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_aagcc .FontFile3 );};if _aagcc .CharSet !=nil {_adbf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_aagcc .CharSet );
};if _aagcc .Style !=nil {_adbf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_aagcc .FontName );};if _aagcc .Lang !=nil {_adbf .Set ("\u004c\u0061\u006e\u0067",_aagcc .Lang );};if _aagcc .FD !=nil {_adbf .Set ("\u0046\u0044",_aagcc .FD );};
if _aagcc .CIDSet !=nil {_adbf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_aagcc .CIDSet );};return _aagcc ._decf ;};

// SetVersion sets the PDF version of the output file.
func (_agcgg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_agcgg ._fbeec =majorVersion ;_agcgg ._cddaac =minorVersion ;};func _cgbggf (_babg _cd .PdfObject )(*PdfColorspaceCalRGB ,error ){_becf :=NewPdfColorspaceCalRGB ();if _effg ,_fgbd :=_babg .(*_cd .PdfIndirectObject );
_fgbd {_becf ._adcg =_effg ;};_babg =_cd .TraceToDirectObject (_babg );_bbecg ,_fbdc :=_babg .(*_cd .PdfObjectArray );if !_fbdc {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbecg .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_babg =_cd .TraceToDirectObject (_bbecg .Get (0));_geaaf ,_fbdc :=_babg .(*_cd .PdfObjectName );if !_fbdc {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_geaaf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_babg =_cd .TraceToDirectObject (_bbecg .Get (1));
_cfab ,_fbdc :=_babg .(*_cd .PdfObjectDictionary );if !_fbdc {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_babg =_cfab .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_babg =_cd .TraceToDirectObject (_babg );_geef ,_fbdc :=_babg .(*_cd .PdfObjectArray );if !_fbdc {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _geef .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ccgg ,_gabg :=_geef .GetAsFloat64Slice ();
if _gabg !=nil {return nil ,_gabg ;};_becf .WhitePoint =_ccgg ;_babg =_cfab .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _babg !=nil {_babg =_cd .TraceToDirectObject (_babg );_cbfd ,_fgea :=_babg .(*_cd .PdfObjectArray );if !_fgea {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _cbfd .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_efcc ,_caef :=_cbfd .GetAsFloat64Slice ();
if _caef !=nil {return nil ,_caef ;};_becf .BlackPoint =_efcc ;};_babg =_cfab .Get ("\u0047\u0061\u006dm\u0061");if _babg !=nil {_babg =_cd .TraceToDirectObject (_babg );_agce ,_cded :=_babg .(*_cd .PdfObjectArray );if !_cded {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _agce .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_bagaa ,_fcea :=_agce .GetAsFloat64Slice ();if _fcea !=nil {return nil ,_fcea ;
};_becf .Gamma =_bagaa ;};_babg =_cfab .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _babg !=nil {_babg =_cd .TraceToDirectObject (_babg );_eabg ,_acec :=_babg .(*_cd .PdfObjectArray );if !_acec {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _eabg .Len ()!=9{_dac .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_eabg .String ());return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_agg ,_gefg :=_eabg .GetAsFloat64Slice ();if _gefg !=nil {return nil ,_gefg ;};_becf .Matrix =_agg ;};return _becf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcea *PdfAnnotationPolyLine )ToPdfObject ()_cd .PdfObject {_bcea .PdfAnnotation .ToPdfObject ();_gdc :=_bcea ._fef ;_egda :=_gdc .PdfObject .(*_cd .PdfObjectDictionary );_bcea .PdfAnnotationMarkup .appendToPdfDictionary (_egda );_egda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_egda .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bcea .Vertices );_egda .SetIfNotNil ("\u004c\u0045",_bcea .LE );_egda .SetIfNotNil ("\u0042\u0053",_bcea .BS );_egda .SetIfNotNil ("\u0049\u0043",_bcea .IC );_egda .SetIfNotNil ("\u0042\u0045",_bcea .BE );
_egda .SetIfNotNil ("\u0049\u0054",_bcea .IT );_egda .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bcea .Measure );return _gdc ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_ddfea :=&PdfColorspaceDeviceN {};return _ddfea ;};

// Add appends a top level outline item to the outline.
func (_cdbcg *Outline )Add (item *OutlineItem ){_cdbcg .Entries =append (_cdbcg .Entries ,item )};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_bad :=NewPdfAnnotation ();_bdg :=&PdfAnnotationPopup {};_bdg .PdfAnnotation =_bad ;_bad .SetContext (_bdg );return _bdg ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dgbf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebg :=vals [0];if _ebg < 0.0||_ebg > 1.0{_dac .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ebg < 0.0{_ebg =0.0;}else if _ebg > 1.0{_ebg =1.0;};return NewPdfColorDeviceGray (_ebg ),nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_gcebg .Lock ();defer _gcebg .Unlock ();_fgce =subject };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dgdfe *PdfPageResources )SetColorspaceByName (keyName _cd .PdfObjectName ,cs PdfColorspace )error {_fdfaa ,_cdge :=_dgdfe .GetColorspaces ();if _cdge !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cdge );
return _cdge ;};if _fdfaa ==nil {_fdfaa =NewPdfPageResourcesColorspaces ();_dgdfe .SetColorSpace (_fdfaa );};_fdfaa .Set (keyName ,cs );return nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ceecd *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _abfbf []float64 ;for _abgd :=0;_abgd < _ceecd .GetNumComponents ();_abgd ++{_abfbf =append (_abfbf ,0.0,1.0);};return _abfbf ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_aac *PdfAnnotation )ToPdfObject ()_cd .PdfObject {_gfcc :=_aac ._fef ;_aacf :=_gfcc .PdfObject .(*_cd .PdfObjectDictionary );_aacf .Clear ();_aacf .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0041\u006e\u006eo\u0074"));_aacf .SetIfNotNil ("\u0052\u0065\u0063\u0074",_aac .Rect );
_aacf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aac .Contents );_aacf .SetIfNotNil ("\u0050",_aac .P );_aacf .SetIfNotNil ("\u004e\u004d",_aac .NM );_aacf .SetIfNotNil ("\u004d",_aac .M );_aacf .SetIfNotNil ("\u0046",_aac .F );_aacf .SetIfNotNil ("\u0041\u0050",_aac .AP );
_aacf .SetIfNotNil ("\u0041\u0053",_aac .AS );_aacf .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_aac .Border );_aacf .SetIfNotNil ("\u0043",_aac .C );_aacf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aac .StructParent );
_aacf .SetIfNotNil ("\u004f\u0043",_aac .OC );return _gfcc ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_agcae FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_agcae .Mask ()|fl .Mask ())};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_aa :=NewPdfAction ();_ga :=&PdfActionThread {};_ga .PdfAction =_aa ;_aa .SetContext (_ga );return _ga ;};func _fedc (_fcbf *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fcbf }};func (_cdb *PdfReader )newPdfActionGotoRFromDict (_efeb *_cd .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dcd ,_dcdb :=_ace (_efeb .Get ("\u0046"));
if _dcdb !=nil {return nil ,_dcdb ;};return &PdfActionGoToR {D :_efeb .Get ("\u0044"),NewWindow :_efeb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dcd },nil ;};func (_fcgd *LTV )getCRLs (_dabcc []*_gc .Certificate )([][]byte ,error ){_agbff :=make ([][]byte ,0,len (_dabcc ));
for _ ,_cecaad :=range _dabcc {for _ ,_cbdfb :=range _cecaad .CRLDistributionPoints {if _fcgd .CertClient .IsCA (_cecaad ){continue ;};_eggf ,_cafb :=_fcgd .CRLClient .MakeRequest (_cbdfb ,_cecaad );if _cafb !=nil {_dac .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_cafb );
continue ;};_agbff =append (_agbff ,_eggf );};};return _agbff ,nil ;};func (_ddbe *PdfReader )newPdfAnnotationTrapNetFromDict (_agec *_cd .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_abe :=PdfAnnotationTrapNet {};return &_abe ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gdcef :=PdfWriter {};_gdcef ._eebaaf =map[_cd .PdfObject ]struct{}{};_gdcef ._aaeg =[]_cd .PdfObject {};_gdcef ._ggcba =map[_cd .PdfObject ][]*_cd .PdfObjectDictionary {};_gdcef ._fecfaa =map[_cd .PdfObject ]struct{}{};_gdcef ._fbeec =1;
_gdcef ._cddaac =3;_facdg :=_cd .MakeDict ();_cbebg :=[]struct{_degcg _cd .PdfObjectName ;_gebee string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_afafd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_dfega ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_fcfaa ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_aafgc ()},{"\u0054\u0069\u0074l\u0065",_eabaa ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fbaea ()}};
for _ ,_cbcgd :=range _cbebg {if _cbcgd ._gebee !=""{_facdg .Set (_cbcgd ._degcg ,_cd .MakeString (_cbcgd ._gebee ));};};if _abaae :=_fegdg ();!_abaae .IsZero (){if _egadc ,_caded :=NewPdfDateFromTime (_abaae );_caded ==nil {_facdg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_egadc .ToPdfObject ());
};};if _cccca :=_bacf ();!_cccca .IsZero (){if _eddbeg ,_egfe :=NewPdfDateFromTime (_cccca );_egfe ==nil {_facdg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_eddbeg .ToPdfObject ());};};_dbfg :=_cd .PdfIndirectObject {};_dbfg .PdfObject =_facdg ;_gdcef ._gcfga =&_dbfg ;
_gdcef .addObject (&_dbfg );_dfeef :=_cd .PdfIndirectObject {};_fccbf :=_cd .MakeDict ();_fccbf .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_dfeef .PdfObject =_fccbf ;_gdcef ._ddcdg =&_dfeef ;_gdcef .addObject (_gdcef ._ddcdg );
_abged ,_fadab :=_becad ("\u0077");if _fadab !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fadab );};_gdcef ._eadcf =_abged ;_gfaeb :=_cd .PdfIndirectObject {};_cgcff :=_cd .MakeDict ();_cgcff .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0050\u0061\u0067e\u0073"));
_dgede :=_cd .PdfObjectArray {};_cgcff .Set ("\u004b\u0069\u0064\u0073",&_dgede );_cgcff .Set ("\u0043\u006f\u0075n\u0074",_cd .MakeInteger (0));_gfaeb .PdfObject =_cgcff ;_gdcef ._gcfcbc =&_gfaeb ;_gdcef ._aada =map[_cd .PdfObject ]struct{}{};_gdcef .addObject (_gdcef ._gcfcbc );
_fccbf .Set ("\u0050\u0061\u0067e\u0073",&_gfaeb );_gdcef ._eddc =_fccbf ;_dac .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_dfeef );return _gdcef ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_agbbba *_cd .PdfParser ;_ccdaa _cd .PdfObject ;_bbed *_cd .PdfIndirectObject ;_edeag *_cd .PdfObjectDictionary ;_ccacd []*_cd .PdfIndirectObject ;PageList []*PdfPage ;_cgdbac int ;_bbaed *_cd .PdfObjectDictionary ;_facac *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_bdcga *modelManager ;_cgeagg bool ;_ebac map[_cd .PdfObject ]struct{};_cgff _ag .ReadSeeker ;_fbdcg string ;};func _becad (_aeege string )(string ,error ){var _gedfe _ccc .Buffer ;_gedfe .WriteString (_aeege );
_ebfgb :=make ([]byte ,8+16);_aeaa :=_c .Now ().UTC ().UnixNano ();_a .BigEndian .PutUint64 (_ebfgb ,uint64 (_aeaa ));_ ,_cfcgd :=_gcf .Read (_ebfgb [8:]);if _cfcgd !=nil {return "",_cfcgd ;};_gedfe .WriteString (_dc .EncodeToString (_ebfgb ));return _gedfe .String (),nil ;
};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_fdcgad *pdfFontSimple )SetEncoder (encoder _cg .TextEncoder ){_fdcgad ._acgfg =encoder };

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bcddb *PdfReader )GetPageLabels ()(_cd .PdfObject ,error ){_gfbad :=_cd .ResolveReference (_bcddb ._bbaed .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _gfbad ==nil {return nil ,nil ;};if !_bcddb ._cgeagg {_dggggf :=_bcddb .traverseObjectData (_gfbad );
if _dggggf !=nil {return nil ,_dggggf ;};};return _gfbad ,nil ;};

// String returns a human readable description of `fontfile`.
func (_fggcf *fontFile )String ()string {_geae :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fggcf ._facfg !=nil {_geae =_fggcf ._facfg .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fggcf ._dbcga ,_geae );
};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ebfdd :_cd .MakeIndirectObject (_cd .MakeDict ())}};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _c .Time )(PdfDate ,error ){_ffcbb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gcca ,_ :=_fa .ParseInt (_ffcbb [1:3],10,32);_agefb ,_ :=_fa .ParseInt (_ffcbb [4:6],10,32);return PdfDate {_feafed :int64 (timeObj .Year ()),_cbaec :int64 (timeObj .Month ()),_edbg :int64 (timeObj .Day ()),_bdbaa :int64 (timeObj .Hour ()),_gegbbb :int64 (timeObj .Minute ()),_gcfac :int64 (timeObj .Second ()),_ffagg :_ffcbb [0],_dffcec :_gcca ,_eefg :_agefb },nil ;
};

// IsColored specifies if the pattern is colored.
func (_ggaa *PdfTilingPattern )IsColored ()bool {if _ggaa .PaintType !=nil &&*_ggaa .PaintType ==1{return true ;};return false ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cfde *PdfReader )GetNamedDestinations ()(_cd .PdfObject ,error ){_addc :=_cd .ResolveReference (_cfde ._bbaed .Get ("\u0044\u0065\u0073t\u0073"));if _addc ==nil {return nil ,nil ;};if !_cfde ._cgeagg {_gbbgd :=_cfde .traverseObjectData (_addc );
if _gbbgd !=nil {return nil ,_gbbgd ;};};return _addc ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_effcb pdfFontType3 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){_gcaf :=_effcb .Encoder ();if _gcaf ==nil {_dac .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_effcb );
return _bcd .CharMetrics {},false ;};_cddec ,_eege :=_gcaf .RuneToCharcode (r );if !_eege {if r !=' '{_dac .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_effcb );
};return _bcd .CharMetrics {},false ;};_eead ,_bgcea :=_effcb .GetCharMetrics (_cddec );return _eead ,_bgcea ;};

// WriteToFile writes the Appender output to file specified by path.
func (_dabab *PdfAppender )WriteToFile (outputPath string )error {_beag ,_bgab :=_ab .Create (outputPath );if _bgab !=nil {return _bgab ;};defer _beag .Close ();return _dabab .Write (_beag );};func (_cabff *LTV )buildCertChain (_cdba ,_acgae []*_gc .Certificate )([]*_gc .Certificate ,map[string ]*_gc .Certificate ,error ){_fafba :=map[string ]*_gc .Certificate {};
for _ ,_dbdbe :=range _cdba {_fafba [_dbdbe .Subject .CommonName ]=_dbdbe ;};_aagca :=_cdba ;for _ ,_gbda :=range _acgae {_dadab :=_gbda .Subject .CommonName ;if _ ,_dgca :=_fafba [_dadab ];_dgca {continue ;};_fafba [_dadab ]=_gbda ;_aagca =append (_aagca ,_gbda );
};if len (_aagca )==0{return nil ,nil ,ErrSignNoCertificates ;};var _dgeb error ;for _faaf :=_aagca [0];_faaf !=nil &&!_cabff .CertClient .IsCA (_faaf );{_ccdb ,_beead :=_fafba [_faaf .Issuer .CommonName ];if !_beead {if _ccdb ,_dgeb =_cabff .CertClient .GetIssuer (_faaf );
_dgeb !=nil {_dac .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_dgeb );
break ;};_fafba [_faaf .Issuer .CommonName ]=_ccdb ;_aagca =append (_aagca ,_ccdb );};_faaf =_ccdb ;};return _aagca ,_fafba ,nil ;};func (_aafa *PdfReader )newPdfAnnotationProjectionFromDict (_gdd *_cd .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_acbg :=&PdfAnnotationProjection {};
_dbdf ,_aaef :=_aafa .newPdfAnnotationMarkupFromDict (_gdd );if _aaef !=nil {return nil ,_aaef ;};_acbg .PdfAnnotationMarkup =_dbdf ;return _acbg ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gdfa *PdfAnnotationWidget )Field ()*PdfField {return _gdfa ._edb };

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cd .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// Encoder returns the font's text encoder.
func (_adge pdfFontType0 )Encoder ()_cg .TextEncoder {return _adge ._cccad };

// K returns the value of the key component of the color.
func (_bfdbf *PdfColorDeviceCMYK )K ()float64 {return _bfdbf [3]};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_aedef *Outline )ToPdfOutline ()*PdfOutline {_addf :=NewPdfOutline ();var _dcdbgd []*PdfOutlineItem ;var _gdfg int64 ;var _gfdb *PdfOutlineItem ;for _ ,_gbfc :=range _aedef .Entries {_abcbe ,_deaff :=_gbfc .ToPdfOutlineItem ();_abcbe .Parent =&_addf .PdfOutlineTreeNode ;
if _gfdb !=nil {_gfdb .Next =&_abcbe .PdfOutlineTreeNode ;_abcbe .Prev =&_gfdb .PdfOutlineTreeNode ;};_dcdbgd =append (_dcdbgd ,_abcbe );_gdfg +=_deaff ;_gfdb =_abcbe ;};_adfg :=int64 (len (_dcdbgd ));_gdfg +=_adfg ;if _adfg > 0{_addf .First =&_dcdbgd [0].PdfOutlineTreeNode ;
_addf .Last =&_dcdbgd [_adfg -1].PdfOutlineTreeNode ;_addf .Count =&_gdfg ;};return _addf ;};func (_daab *Image )resampleLowBits (_cfgg []uint32 ){_gebg :=_agb .BytesPerLine (int (_daab .Width ),int (_daab .BitsPerComponent ),_daab .ColorComponents );_ebab :=make ([]byte ,_daab .ColorComponents *_gebg *int (_daab .Height ));
_gebbgd :=int (_daab .BitsPerComponent )*_daab .ColorComponents *int (_daab .Width );_bebgb :=uint8 (8);var (_becbf ,_gfacg int ;_cegb uint32 ;);for _febe :=0;_febe < int (_daab .Height );_febe ++{_gfacg =_febe *_gebg ;for _ggdfb :=0;_ggdfb < _gebbgd ;
_ggdfb ++{_cegb =_cfgg [_becbf ];_bebgb -=uint8 (_daab .BitsPerComponent );_ebab [_gfacg ]|=byte (_cegb )<<_bebgb ;if _bebgb ==0{_bebgb =8;_gfacg ++;};_becbf ++;};};_daab .Data =_ebab ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_aaaa *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eabed :=vals [0];if _eabed < 0.0||_eabed > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dcc :=vals [1];if _dcc < 0.0||_dcc > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdefe :=vals [2];if _fdefe < 0.0||_fdefe > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dbddf :=NewPdfColorCalRGB (_eabed ,_dcc ,_fdefe );return _dbddf ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);func (_dbb *PdfReader )newPdfAnnotationCaretFromDict (_eegc *_cd .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bbgc :=PdfAnnotationCaret {};_aae ,_dfa :=_dbb .newPdfAnnotationMarkupFromDict (_eegc );if _dfa !=nil {return nil ,_dfa ;};_bbgc .PdfAnnotationMarkup =_aae ;
_bbgc .RD =_eegc .Get ("\u0052\u0044");_bbgc .Sy =_eegc .Get ("\u0053\u0079");return &_bbgc ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_cgcfc *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cd .GetNumberAsFloat (_cgcfc .Ascent );};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_fcfgd *PdfReader )GetObjectNums ()[]int {return _fcfgd ._agbbba .GetObjectNums ()};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dfcb :=NewPdfAnnotation ();_acee :=&PdfAnnotationScreen {};_acee .PdfAnnotation =_dfcb ;_dfcb .SetContext (_acee );return _acee ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cd .PdfObjectDictionary )(*PdfPageResources ,error ){_fdcdg :=NewPdfPageResources ();if _fgaa :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fgaa !=nil {_fdcdg .ExtGState =_fgaa ;};if _bfce :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_bfce !=nil &&!_cd .IsNullObject (_bfce ){_fdcdg .ColorSpace =_bfce ;};if _cfecb :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_cfecb !=nil {_fdcdg .Pattern =_cfecb ;};if _efgdf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_efgdf !=nil {_fdcdg .Shading =_efgdf ;
};if _eebaf :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_eebaf !=nil {_fdcdg .XObject =_eebaf ;};if _bagcd :=_cd .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bagcd !=nil {_fdcdg .Font =_bagcd ;};if _ebdcd :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_ebdcd !=nil {_fdcdg .ProcSet =_ebdcd ;};if _gdeb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gdeb !=nil {_fdcdg .Properties =_gdeb ;};return _fdcdg ,nil ;};var _fdcac =_f .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");


// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_eagcb *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_gegbb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_adgac ,_ecfbc :=_eagcb .GetNumPages ();if _ecfbc !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecfbc );
return nil ,_ecfbc ;};for _aeab :=1;_aeab <=_adgac ;_aeab ++{_bgbcc ,_cgccb :=_eagcb .GetPage (_aeab );if _cgccb !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgccb );return nil ,_cgccb ;};if opts .PageProcessCallback !=nil {_cgccb =opts .PageProcessCallback (_aeab ,_bgbcc );
if _cgccb !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgccb );return nil ,_cgccb ;};}else if opts .PageCallback !=nil {opts .PageCallback (_aeab ,_bgbcc );};_cgccb =_gegbb .AddPage (_bgbcc );if _cgccb !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgccb );
return nil ,_cgccb ;};};_gegbb ._fbeec =_eagcb .PdfVersion ().Major ;_gegbb ._cddaac =_eagcb .PdfVersion ().Minor ;if !opts .SkipInfo {_ebcd ,_ddced :=_eagcb .GetPdfInfo ();if _ddced !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddced );
}else {_gegbb ._gcfga .PdfObject =_ebcd .ToPdfObject ();};};if !opts .SkipAcroForm {_abage :=_gegbb .SetForms (_eagcb .AcroForm );if _abage !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abage );return nil ,_abage ;};};if !opts .SkipOutlines {_gegbb .AddOutlineTree (_eagcb .GetOutlineTree ());
};if !opts .SkipOCProperties {_fceae ,_cafbf :=_eagcb .GetOCProperties ();if _cafbf !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cafbf );}else {_cafbf =_gegbb .SetOCProperties (_fceae );if _cafbf !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cafbf );
};};};if !opts .SkipPageLabels {_gdedc ,_cgbaf :=_eagcb .GetPageLabels ();if _cgbaf !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbaf );}else {_cgbaf =_gegbb .SetPageLabels (_gdedc );if _cgbaf !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbaf );
};};};if !opts .SkipNamedDests {_ggbda ,_fcgdb :=_eagcb .GetNamedDestinations ();if _fcgdb !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcgdb );}else {_fcgdb =_gegbb .SetNamedDestinations (_ggbda );if _fcgdb !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcgdb );
};};};if !opts .SkipNameDictionary {_gafcf ,_cbbbg :=_eagcb .GetNameDictionary ();if _cbbbg !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbbbg );}else {_cbbbg =_gegbb .SetNameDictionary (_gafcf );if _cbbbg !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbbbg );
};};};if !opts .SkipRotation &&_eagcb .Rotate !=nil {if _eggcc :=_gegbb .SetRotation (*_eagcb .Rotate );_eggcc !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eggcc );};};return &_gegbb ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_afga :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_afga ;};

// ToPdfObject implements interface PdfModel.
func (_caf *PdfAnnotationFreeText )ToPdfObject ()_cd .PdfObject {_caf .PdfAnnotation .ToPdfObject ();_dge :=_caf ._fef ;_cage :=_dge .PdfObject .(*_cd .PdfObjectDictionary );_caf .PdfAnnotationMarkup .appendToPdfDictionary (_cage );_cage .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_cage .SetIfNotNil ("\u0044\u0041",_caf .DA );_cage .SetIfNotNil ("\u0051",_caf .Q );_cage .SetIfNotNil ("\u0052\u0043",_caf .RC );_cage .SetIfNotNil ("\u0044\u0053",_caf .DS );_cage .SetIfNotNil ("\u0043\u004c",_caf .CL );_cage .SetIfNotNil ("\u0049\u0054",_caf .IT );
_cage .SetIfNotNil ("\u0042\u0045",_caf .BE );_cage .SetIfNotNil ("\u0052\u0044",_caf .RD );_cage .SetIfNotNil ("\u0042\u0053",_caf .BS );_cage .SetIfNotNil ("\u004c\u0045",_caf .LE );return _dge ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_abgdd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_agfgf ,_ ,_gbgf :=_abgdd .CharcodesToUnicodeWithStats (_abgdd .BytesToCharcodes (data ));_efbe :=_cg .ExpandLigatures (_agfgf );return _efbe ,_ff .RuneCountInString (_efbe ),_gbgf ;
};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_efgg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_efgg .GetNumComponents (){return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebbd ,_dfbc :=_efgg .TintTransform .Evaluate (vals );
if _dfbc !=nil {return nil ,_dfbc ;};_fagaa ,_dfbc :=_efgg .AlternateSpace .ColorFromFloats (_ebbd );if _dfbc !=nil {return nil ,_dfbc ;};return _fagaa ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cd .PdfObject ;H _cd .PdfObject ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dbda *PdfColorCalGray )GetNumComponents ()int {return 1};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cd .PdfObjectInteger ;BitsPerComponent *_cd .PdfObjectInteger ;BitsPerFlag *_cd .PdfObjectInteger ;Decode *_cd .PdfObjectArray ;Function []PdfFunction ;};var (_gagc =_f .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_gafca =_f .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eafb =_f .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_febda ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gecaf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gfdfd ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fdad *PdfColorspaceSpecialIndexed )ToPdfObject ()_cd .PdfObject {_cdfe :=_cd .MakeArray (_cd .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cdfe .Append (_fdad .Base .ToPdfObject ());_cdfe .Append (_cd .MakeInteger (int64 (_fdad .HiVal )));
_cdfe .Append (_fdad .Lookup );if _fdad ._bbcg !=nil {_fdad ._bbcg .PdfObject =_cdfe ;return _fdad ._bbcg ;};return _cdfe ;};

// GetNumPages returns the number of pages in the document.
func (_caaed *PdfReader )GetNumPages ()(int ,error ){if _caaed ._agbbba .GetCrypter ()!=nil &&!_caaed ._agbbba .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_caaed ._ccacd ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbf *PdfActionHide )ToPdfObject ()_cd .PdfObject {_bbf .PdfAction .ToPdfObject ();_faf :=_bbf ._cea ;_cddf :=_faf .PdfObject .(*_cd .PdfObjectDictionary );_cddf .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeHide )));_cddf .SetIfNotNil ("\u0054",_bbf .T );
_cddf .SetIfNotNil ("\u0048",_bbf .H );return _faf ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_gfbgc *PdfWriter )SetOptimizer (optimizer Optimizer ){_gfbgc ._edggd =optimizer };

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cd .PdfObjectArray ;};func _ffag (_agadc _cd .PdfObject )(*PdfShading ,error ){_ffcfd :=&PdfShading {};var _eeag *_cd .PdfObjectDictionary ;if _bgaab ,_fcedb :=_cd .GetIndirect (_agadc );_fcedb {_ffcfd ._fdadf =_bgaab ;
_aceg ,_eefef :=_bgaab .PdfObject .(*_cd .PdfObjectDictionary );if !_eefef {_dac .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cd .ErrTypeError ;
};_eeag =_aceg ;}else if _dgccg ,_gegfd :=_cd .GetStream (_agadc );_gegfd {_ffcfd ._fdadf =_dgccg ;_eeag =_dgccg .PdfObjectDictionary ;}else if _bcdga ,_fdefc :=_cd .GetDict (_agadc );_fdefc {_ffcfd ._fdadf =_bcdga ;_eeag =_bcdga ;}else {_dac .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_agadc );
return nil ,_cd .ErrTypeError ;};if _eeag ==nil {_dac .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ac .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_agadc =_eeag .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _agadc ==nil {_dac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_agadc =_cd .TraceToDirectObject (_agadc );_eacec ,_ggeag :=_agadc .(*_cd .PdfObjectInteger );if !_ggeag {_dac .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_agadc );
return nil ,_cd .ErrTypeError ;};if *_eacec < 1||*_eacec > 7{_dac .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_eacec );
return nil ,_cd .ErrTypeError ;};_ffcfd .ShadingType =_eacec ;_agadc =_eeag .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _agadc ==nil {_dac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbdfg ,_dabaeg :=NewPdfColorspaceFromPdfObject (_agadc );if _dabaeg !=nil {_dac .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_dabaeg );
return nil ,_dabaeg ;};_ffcfd .ColorSpace =_dbdfg ;_agadc =_eeag .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _agadc !=nil {_agadc =_cd .TraceToDirectObject (_agadc );_dbefd ,_ffgc :=_agadc .(*_cd .PdfObjectArray );if !_ffgc {_dac .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_agadc );
return nil ,_cd .ErrTypeError ;};_ffcfd .Background =_dbefd ;};_agadc =_eeag .Get ("\u0042\u0042\u006f\u0078");if _agadc !=nil {_agadc =_cd .TraceToDirectObject (_agadc );_bgcdg ,_gdafd :=_agadc .(*_cd .PdfObjectArray );if !_gdafd {_dac .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_agadc );
return nil ,_cd .ErrTypeError ;};_agdad ,_feacc :=NewPdfRectangle (*_bgcdg );if _feacc !=nil {_dac .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_feacc );return nil ,_feacc ;};_ffcfd .BBox =_agdad ;};_agadc =_eeag .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _agadc !=nil {_agadc =_cd .TraceToDirectObject (_agadc );_dgddf ,_fdfab :=_agadc .(*_cd .PdfObjectBool );if !_fdfab {_dac .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agadc );
return nil ,_cd .ErrTypeError ;};_ffcfd .AntiAlias =_dgddf ;};switch *_eacec {case 1:_ggbfe ,_dcega :=_gcabe (_eeag );if _dcega !=nil {return nil ,_dcega ;};_ggbfe .PdfShading =_ffcfd ;_ffcfd ._cdgf =_ggbfe ;return _ffcfd ,nil ;case 2:_bdcdg ,_edfca :=_afaab (_eeag );
if _edfca !=nil {return nil ,_edfca ;};_bdcdg .PdfShading =_ffcfd ;_ffcfd ._cdgf =_bdcdg ;return _ffcfd ,nil ;case 3:_cgabf ,_gbbaf :=_ddgc (_eeag );if _gbbaf !=nil {return nil ,_gbbaf ;};_cgabf .PdfShading =_ffcfd ;_ffcfd ._cdgf =_cgabf ;return _ffcfd ,nil ;
case 4:_effbd ,_cdbfe :=_dbfba (_eeag );if _cdbfe !=nil {return nil ,_cdbfe ;};_effbd .PdfShading =_ffcfd ;_ffcfd ._cdgf =_effbd ;return _ffcfd ,nil ;case 5:_dcdeg ,_gcfgd :=_feda (_eeag );if _gcfgd !=nil {return nil ,_gcfgd ;};_dcdeg .PdfShading =_ffcfd ;
_ffcfd ._cdgf =_dcdeg ;return _ffcfd ,nil ;case 6:_ebfeff ,_caaef :=_feebb (_eeag );if _caaef !=nil {return nil ,_caaef ;};_ebfeff .PdfShading =_ffcfd ;_ffcfd ._cdgf =_ebfeff ;return _ffcfd ,nil ;case 7:_adca ,_gebca :=_acfaa (_eeag );if _gebca !=nil {return nil ,_gebca ;
};_adca .PdfShading =_ffcfd ;_ffcfd ._cdgf =_adca ;return _ffcfd ,nil ;};return nil ,_ac .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_gcebg .Lock ();defer _gcebg .Unlock ();_gcga =title };

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ddaag *PdfColorspaceLab )GetNumComponents ()int {return 3};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cd .PdfObject ;IC _cd .PdfObject ;RO _cd .PdfObject ;OverlayText _cd .PdfObject ;Repeat _cd .PdfObject ;DA _cd .PdfObject ;Q _cd .PdfObject ;};

// String returns a string that describes `base`.
func (_aeegf fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_aeegf .coreString ());};var (CourierName =_bcd .CourierName ;CourierBoldName =_bcd .CourierBoldName ;CourierObliqueName =_bcd .CourierObliqueName ;
CourierBoldObliqueName =_bcd .CourierBoldObliqueName ;HelveticaName =_bcd .HelveticaName ;HelveticaBoldName =_bcd .HelveticaBoldName ;HelveticaObliqueName =_bcd .HelveticaObliqueName ;HelveticaBoldObliqueName =_bcd .HelveticaBoldObliqueName ;SymbolName =_bcd .SymbolName ;
ZapfDingbatsName =_bcd .ZapfDingbatsName ;TimesRomanName =_bcd .TimesRomanName ;TimesBoldName =_bcd .TimesBoldName ;TimesItalicName =_bcd .TimesItalicName ;TimesBoldItalicName =_bcd .TimesBoldItalicName ;);func _ddgc (_acbcd *_cd .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fded :=PdfShadingType3 {};
_fcgea :=_acbcd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fcgea ==nil {_dac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bddag ,_ggce :=_fcgea .(*_cd .PdfObjectArray );if !_ggce {_dac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcgea );
return nil ,_cd .ErrTypeError ;};if _bddag .Len ()!=6{_dac .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bddag .Len ());return nil ,ErrInvalidAttribute ;
};_fded .Coords =_bddag ;if _fafeb :=_acbcd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fafeb !=nil {_fafeb =_cd .TraceToDirectObject (_fafeb );_ebecd ,_daedge :=_fafeb .(*_cd .PdfObjectArray );if !_daedge {_dac .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fafeb );
return nil ,_cd .ErrTypeError ;};_fded .Domain =_ebecd ;};_fcgea =_acbcd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fcgea ==nil {_dac .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_fded .Function =[]PdfFunction {};if _gcbac ,_afcff :=_fcgea .(*_cd .PdfObjectArray );_afcff {for _ ,_dadb :=range _gcbac .Elements (){_cgcfcg ,_gabdg :=_ddcfb (_dadb );if _gabdg !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gabdg );
return nil ,_gabdg ;};_fded .Function =append (_fded .Function ,_cgcfcg );};}else {_cgecf ,_ebffd :=_ddcfb (_fcgea );if _ebffd !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebffd );
return nil ,_ebffd ;};_fded .Function =append (_fded .Function ,_cgecf );};if _afcc :=_acbcd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_afcc !=nil {_afcc =_cd .TraceToDirectObject (_afcc );_cacfe ,_adgdb :=_afcc .(*_cd .PdfObjectArray );if !_adgdb {_dac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afcc );
return nil ,_cd .ErrTypeError ;};if _cacfe .Len ()!=2{_dac .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cacfe .Len ());return nil ,ErrInvalidAttribute ;
};_fded .Extend =_cacfe ;};return &_fded ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gae *PdfActionImportData )ToPdfObject ()_cd .PdfObject {_gae .PdfAction .ToPdfObject ();_add :=_gae ._cea ;_fdca :=_add .PdfObject .(*_cd .PdfObjectDictionary );_fdca .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeImportData )));if _gae .F !=nil {_fdca .Set ("\u0046",_gae .F .ToPdfObject ());
};return _add ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// ToPdfObject returns the PDF representation of the function.
func (_ffadg *PdfFunctionType3 )ToPdfObject ()_cd .PdfObject {_cffga :=_cd .MakeDict ();_cffga .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cd .MakeInteger (3));_dcgfc :=&_cd .PdfObjectArray {};for _ ,_bedcc :=range _ffadg .Domain {_dcgfc .Append (_cd .MakeFloat (_bedcc ));
};_cffga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcgfc );if _ffadg .Range !=nil {_abde :=&_cd .PdfObjectArray {};for _ ,_eeead :=range _ffadg .Range {_abde .Append (_cd .MakeFloat (_eeead ));};_cffga .Set ("\u0052\u0061\u006eg\u0065",_abde );};if _ffadg .Functions !=nil {_fccda :=&_cd .PdfObjectArray {};
for _ ,_abccd :=range _ffadg .Functions {_fccda .Append (_abccd .ToPdfObject ());};_cffga .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_fccda );};if _ffadg .Bounds !=nil {_dfaa :=&_cd .PdfObjectArray {};for _ ,_egbca :=range _ffadg .Bounds {_dfaa .Append (_cd .MakeFloat (_egbca ));
};_cffga .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_dfaa );};if _ffadg .Encode !=nil {_feeed :=&_cd .PdfObjectArray {};for _ ,_fabbd :=range _ffadg .Encode {_feeed .Append (_cd .MakeFloat (_fabbd ));};_cffga .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_feeed );
};if _ffadg ._bdbfd !=nil {_ffadg ._bdbfd .PdfObject =_cffga ;return _ffadg ._bdbfd ;};return _cffga ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func _bbbc (_bgabd *_cd .PdfIndirectObject ,_caca *_cd .PdfObjectDictionary )(*DSS ,error ){if _bgabd ==nil {_bgabd =_cd .MakeIndirectObject (nil );};_bgabd .PdfObject =_cd .MakeDict ();_abef :=map[string ]*VRI {};if _adedb ,_fcda :=_cd .GetDict (_caca .Get ("\u0056\u0052\u0049"));
_fcda {for _ ,_fgfg :=range _adedb .Keys (){if _agfba ,_dgbfa :=_cd .GetDict (_adedb .Get (_fgfg ));_dgbfa {_abef [_fg .ToUpper (_fgfg .String ())]=_egdd (_agfba );};};};return &DSS {Certs :_ffdfd (_caca .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_ffdfd (_caca .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_ffdfd (_caca .Get ("\u0043\u0052\u004c\u0073")),VRI :_abef ,_ecbfd :_bgabd },nil ;
};

// SetName sets the `Name` field of the signature.
func (_adab *PdfSignature )SetName (name string ){_adab .Name =_cd .MakeString (name )};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cfed *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adfa ,_ceag :=_cd .GetNumbersAsFloat (objects );
if _ceag !=nil {return nil ,_ceag ;};return _cfed .ColorFromFloats (_adfa );};

// Add appends an outline item as a child of the current outline item.
func (_egaa *OutlineItem )Add (item *OutlineItem ){_egaa .Entries =append (_egaa .Entries ,item )};func (_fcggc *DSS )addCRLs (_aaab [][]byte )([]*_cd .PdfObjectStream ,error ){return _fcggc .add (&_fcggc .CRLs ,_fcggc ._cbbe ,_aaab );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gdfdb *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dac .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ac .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ddcdg *_cd .PdfIndirectObject ;_gcfcbc *_cd .PdfIndirectObject ;_aada map[_cd .PdfObject ]struct{};_aaeg []_cd .PdfObject ;_eebaaf map[_cd .PdfObject ]struct{};_fgee []*_cd .PdfIndirectObject ;_bfecb *PdfOutlineTreeNode ;_eddc *_cd .PdfObjectDictionary ;
_faddd []_cd .PdfObject ;_gcfga *_cd .PdfIndirectObject ;_ffbdb *_d .Writer ;_gefee int64 ;_dfgef error ;_fbga *_cd .PdfCrypt ;_facfee *_cd .PdfObjectDictionary ;_ggfeb *_cd .PdfIndirectObject ;_cacd *_cd .PdfObjectArray ;_fbeec int ;_cddaac int ;_cccgf *bool ;
_ggcba map[_cd .PdfObject ][]*_cd .PdfObjectDictionary ;_ccec *PdfAcroForm ;_edggd Optimizer ;_ccdf map[int ]crossReference ;_edfaa int64 ;ObjNumOffset int ;_fgcc bool ;_fgeac _cd .XrefTable ;_bfbdg int64 ;_decgdg int64 ;_feafd map[_cd .PdfObject ]int64 ;
_fecfaa map[_cd .PdfObject ]struct{};_eadcf string ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_dadg :=appender .Reader .DSS ;if _dadg ==nil {_dadg =NewDSS ();};if _gceea :=_dadg .generateHashMaps ();_gceea !=nil {return nil ,_gceea ;};return &LTV {CertClient :_ce .NewCertClient (),OCSPClient :_ce .NewOCSPClient (),CRLClient :_ce .NewCRLClient (),SkipExisting :true ,_ecffd :appender ,_bgceb :_dadg },nil ;
};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// GetSubFilter returns SubFilter value or empty string.
func (_gaada *pdfSignDictionary )GetSubFilter ()string {_bdgec :=_gaada .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _bdgec ==nil {return "";};if _edbaa ,_affdg :=_cd .GetNameVal (_bdgec );_affdg {return _edbaa ;};return "";};

// SetForms sets the Acroform for a PDF file.
func (_cfbde *PdfWriter )SetForms (form *PdfAcroForm )error {_cfbde ._ccec =form ;return nil };

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_ab .File ,error ){const _ggbf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_cbegf ,_cefec :=_ab .Open (pdfFile );if _cefec !=nil {return nil ,nil ,_cefec ;};_aebbe ,_cefec :=_adgae (_cbegf ,opts ,true ,_ggbf );if _cefec !=nil {_cbegf .Close ();return nil ,nil ,_cefec ;};return _aebbe ,_cbegf ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gdbdg pdfCIDFontType0 )GetRuneMetrics (r rune )(_bcd .CharMetrics ,bool ){return _bcd .CharMetrics {Wx :_gdbdg ._agecf },true ;};

// SetAlpha sets the alpha layer for the image.
func (_afec *Image )SetAlpha (alpha []byte ){_afec ._deff =alpha };

// ToPdfObject implements interface PdfModel.
func (_ade *PdfActionSubmitForm )ToPdfObject ()_cd .PdfObject {_ade .PdfAction .ToPdfObject ();_fee :=_ade ._cea ;_eee :=_fee .PdfObject .(*_cd .PdfObjectDictionary );_eee .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeSubmitForm )));if _ade .F !=nil {_eee .Set ("\u0046",_ade .F .ToPdfObject ());
};_eee .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ade .Fields );_eee .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ade .Flags );return _fee ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_gcgb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dac .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dac .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_dac .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dac .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_dgba ,_cdcb :=_agb .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._deff ,img ._ddfef );if _cdcb !=nil {return Image {},_cdcb ;};_gedf ,_cdcb :=_agb .NRGBAConverter .Convert (_dgba );if _cdcb !=nil {return Image {},_cdcb ;
};return _ebdb (_gedf .Base ()),nil ;};func _bfba (_cbbbc *_cd .PdfObjectDictionary )(*PdfFieldChoice ,error ){_gdgcd :=&PdfFieldChoice {};_gdgcd .Opt ,_ =_cd .GetArray (_cbbbc .Get ("\u004f\u0070\u0074"));_gdgcd .TI ,_ =_cd .GetInt (_cbbbc .Get ("\u0054\u0049"));
_gdgcd .I ,_ =_cd .GetArray (_cbbbc .Get ("\u0049"));return _gdgcd ,nil ;};func _bbge (_gaaad *[]*PdfField ,_caec FieldFilterFunc ,_dfacf bool )[]*PdfField {if _gaaad ==nil {return nil ;};_cabc :=*_gaaad ;if len (*_gaaad )==0{return nil ;};_cgcaf :=_cabc [:0];
if _caec ==nil {_caec =func (*PdfField )bool {return true };};var _dfefe []*PdfField ;for _ ,_eadb :=range _cabc {_baeaf :=_caec (_eadb );if _baeaf {_dfefe =append (_dfefe ,_eadb );if len (_eadb .Kids )> 0{_dfefe =append (_dfefe ,_bbge (&_eadb .Kids ,_caec ,_dfacf )...);
};};if !_dfacf ||!_baeaf ||len (_eadb .Kids )> 0{_cgcaf =append (_cgcaf ,_eadb );};};*_gaaad =_cgcaf ;return _dfefe ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_eccea int ,_ccaa *PdfPage )error ;

// String implements interface PdfObject.
func (_fd *PdfAction )String ()string {_bf ,_abd :=_fd .ToPdfObject ().(*_cd .PdfIndirectObject );if _abd {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fd ._ec ,_bf .PdfObject .String ());};return "";};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cd .PdfObject ;PreserveRB _cd .PdfObject ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_cfbad *PdfOutlineTreeNode )GetContext ()PdfModel {if _abbgc ,_cfdb :=_cfbad ._aaaag .(*PdfOutline );_cfdb {return _abbgc ;};if _bfgdb ,_bdfbd :=_cfbad ._aaaag .(*PdfOutlineItem );_bdfbd {return _bfgdb ;};_dac .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_dabgf *PdfPageResources )HasXObjectByName (keyName _cd .PdfObjectName )bool {_dcef ,_ :=_dabgf .GetXObjectByName (keyName );return _dcef !=nil ;};func (_ggcgc *DSS )add (_bbea *[]*_cd .PdfObjectStream ,_adcb map[string ]*_cd .PdfObjectStream ,_cece [][]byte )([]*_cd .PdfObjectStream ,error ){_dbece :=make ([]*_cd .PdfObjectStream ,0,len (_cece ));
for _ ,_abbab :=range _cece {_fbca ,_ggdb :=_fbcdg (_abbab );if _ggdb !=nil {return nil ,_ggdb ;};_acge ,_caad :=_adcb [string (_fbca )];if !_caad {_acge ,_ggdb =_cd .MakeStream (_abbab ,_cd .NewRawEncoder ());if _ggdb !=nil {return nil ,_ggdb ;};_adcb [string (_fbca )]=_acge ;
*_bbea =append (*_bbea ,_acge );};_dbece =append (_dbece ,_acge );};return _dbece ,nil ;};func _egdbc (_ddcga _cd .PdfObject )(*PdfPattern ,error ){_ccde :=&PdfPattern {};var _beef *_cd .PdfObjectDictionary ;if _eaegaa ,_fgdab :=_cd .GetIndirect (_ddcga );
_fgdab {_ccde ._geeaf =_eaegaa ;_eagdc ,_adba :=_eaegaa .PdfObject .(*_cd .PdfObjectDictionary );if !_adba {_dac .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_eaegaa .PdfObject );
return nil ,_cd .ErrTypeError ;};_beef =_eagdc ;}else if _cfgdd ,_ddffd :=_cd .GetStream (_ddcga );_ddffd {_ccde ._geeaf =_cfgdd ;_beef =_cfgdd .PdfObjectDictionary ;}else {_dac .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ddcga );
return nil ,_cd .ErrTypeError ;};_caddg :=_beef .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _caddg ==nil {_dac .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gcaea ,_geece :=_caddg .(*_cd .PdfObjectInteger );if !_geece {_dac .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_caddg );
return nil ,_cd .ErrTypeError ;};if *_gcaea !=1&&*_gcaea !=2{_dac .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gcaea );return nil ,_cd .ErrRangeError ;
};_ccde .PatternType =int64 (*_gcaea );switch *_gcaea {case 1:_ebca ,_fefef :=_gdggb (_beef );if _fefef !=nil {return nil ,_fefef ;};_ebca .PdfPattern =_ccde ;_ccde ._dfdc =_ebca ;return _ccde ,nil ;case 2:_dbae ,_cgba :=_bdfacf (_beef );if _cgba !=nil {return nil ,_cgba ;
};_dbae .PdfPattern =_ccde ;_ccde ._dfdc =_dbae ;return _ccde ,nil ;};return nil ,_ac .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// SetContentStream sets the pattern cell's content stream.
func (_bgfdd *PdfTilingPattern )SetContentStream (content []byte ,encoder _cd .StreamEncoder )error {_dcagc ,_fbdga :=_bgfdd ._geeaf .(*_cd .PdfObjectStream );if !_fbdga {_dac .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgfdd ._geeaf );
return _cd .ErrTypeError ;};if encoder ==nil {encoder =_cd .NewRawEncoder ();};_cacab :=_dcagc .PdfObjectDictionary ;_fecbf :=encoder .MakeStreamDict ();_cacab .Merge (_fecbf );_dfgdf ,_eagbc :=encoder .EncodeBytes (content );if _eagbc !=nil {return _eagbc ;
};_cacab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_dfgdf ))));_dcagc .Stream =_dfgdf ;return nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cd .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cd .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cd .PdfObjectBool ;_cdgf PdfModel ;_fdadf _cd .PdfObject ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// C returns the value of the cyan component of the color.
func (_ddbf *PdfColorDeviceCMYK )C ()float64 {return _ddbf [0]};func (_ecb *PdfReader )newPdfActionLaunchFromDict (_abf *_cd .PdfObjectDictionary )(*PdfActionLaunch ,error ){_bdff ,_dab :=_ace (_abf .Get ("\u0046"));if _dab !=nil {return nil ,_dab ;};return &PdfActionLaunch {Win :_abf .Get ("\u0057\u0069\u006e"),Mac :_abf .Get ("\u004d\u0061\u0063"),Unix :_abf .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_abf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bdff },nil ;
};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dfegf *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_geea ,_cdda :=color .(*PdfColorPattern );if !_cdda {_dac .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _geea .Color ==nil {return color ,nil ;};if _dfegf .UnderlyingCS ==nil {return nil ,_ac .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dfegf .UnderlyingCS .ColorToRGB (_geea .Color );
};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cfad *PdfField )SetContext (ctx PdfModel ){_cfad ._gafg =ctx };

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dacg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dacg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dbecd *PdfPageResources )SetXObjectFormByName (keyName _cd .PdfObjectName ,xform *XObjectForm )error {_gdce :=xform .ToPdfObject ().(*_cd .PdfObjectStream );_gcaff :=_dbecd .SetXObjectByName (keyName ,_gdce );return _gcaff ;};var _ pdfFont =(*pdfFontType0 )(nil );
func (_fbedc *PdfWriter )addObjects (_fcaec _cd .PdfObject )error {_dac .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _adcfb ,_cbcge :=_fcaec .(*_cd .PdfIndirectObject );_cbcge {_dac .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");
_dac .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fcaec ,_adcfb );_dac .Log .Trace ("\u002d\u0020\u0025\u0073",_adcfb .PdfObject );if _fbedc .addObject (_adcfb ){_dacgec :=_fbedc .addObjects (_adcfb .PdfObject );if _dacgec !=nil {return _dacgec ;
};};return nil ;};if _eeddf ,_acfebg :=_fcaec .(*_cd .PdfObjectStream );_acfebg {_dac .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dac .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fcaec ,_fcaec );if _fbedc .addObject (_eeddf ){_aebbg :=_fbedc .addObjects (_eeddf .PdfObjectDictionary );
if _aebbg !=nil {return _aebbg ;};};return nil ;};if _ceffc ,_cfbee :=_fcaec .(*_cd .PdfObjectDictionary );_cfbee {_dac .Log .Trace ("\u0044\u0069\u0063\u0074");_dac .Log .Trace ("\u002d\u0020\u0025\u0073",_fcaec );for _ ,_fbfab :=range _ceffc .Keys (){_edefe :=_ceffc .Get (_fbfab );
if _cfcc ,_aacgc :=_edefe .(*_cd .PdfObjectReference );_aacgc {_edefe =_cfcc .Resolve ();_ceffc .Set (_fbfab ,_edefe );};if _fbfab !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _bdbgf :=_fbedc .addObjects (_edefe );_bdbgf !=nil {return _bdbgf ;};}else {if _ ,_cgag :=_edefe .(*_cd .PdfObjectNull );
_cgag {continue ;};if _ffgbc :=_fbedc .hasObject (_edefe );!_ffgbc {_dac .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_edefe ,_edefe ,_edefe );
_fbedc ._ggcba [_edefe ]=append (_fbedc ._ggcba [_edefe ],_ceffc );};};};return nil ;};if _eaafa ,_bbefb :=_fcaec .(*_cd .PdfObjectArray );_bbefb {_dac .Log .Trace ("\u0041\u0072\u0072a\u0079");_dac .Log .Trace ("\u002d\u0020\u0025\u0073",_fcaec );if _eaafa ==nil {return _ac .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gbfbe ,_bdgbb :=range _eaafa .Elements (){if _bfgf ,_bdde :=_bdgbb .(*_cd .PdfObjectReference );_bdde {_bdgbb =_bfgf .Resolve ();_eaafa .Set (_gbfbe ,_bdgbb );};if _gaegg :=_fbedc .addObjects (_bdgbb );_gaegg !=nil {return _gaegg ;};};return nil ;
};if _ ,_adcae :=_fcaec .(*_cd .PdfObjectReference );_adcae {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fcaec );
return _ac .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _dcg .Permissions ;Algorithm EncryptionAlgorithm ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cefb DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_baga *PdfReader )newPdfActionGoTo3DViewFromDict (_dfbe *_cd .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_dfbe .Get ("\u0054\u0041"),V :_dfbe .Get ("\u0056")},nil ;
};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fdf :=&PdfFilespec {};_fdf ._gcea =_cd .MakeIndirectObject (_cd .MakeDict ());return _fdf ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dfgf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};func _acfaa (_egbe *_cd .PdfObjectDictionary )(*PdfShadingType7 ,error ){_agfa :=PdfShadingType7 {};_ccgfc :=_egbe .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ccgfc ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_eebcc ,_cefa :=_ccgfc .(*_cd .PdfObjectInteger );if !_cefa {_dac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccgfc );
return nil ,_cd .ErrTypeError ;};_agfa .BitsPerCoordinate =_eebcc ;_ccgfc =_egbe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ccgfc ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_eebcc ,_cefa =_ccgfc .(*_cd .PdfObjectInteger );if !_cefa {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ccgfc );
return nil ,_cd .ErrTypeError ;};_agfa .BitsPerComponent =_eebcc ;_ccgfc =_egbe .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ccgfc ==nil {_dac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eebcc ,_cefa =_ccgfc .(*_cd .PdfObjectInteger );if !_cefa {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ccgfc );
return nil ,_cd .ErrTypeError ;};_agfa .BitsPerComponent =_eebcc ;_ccgfc =_egbe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ccgfc ==nil {_dac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfbde ,_cefa :=_ccgfc .(*_cd .PdfObjectArray );if !_cefa {_dac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccgfc );
return nil ,_cd .ErrTypeError ;};_agfa .Decode =_dfbde ;if _acbcf :=_egbe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_acbcf !=nil {_agfa .Function =[]PdfFunction {};if _dgbg ,_adaec :=_acbcf .(*_cd .PdfObjectArray );_adaec {for _ ,_fcbef :=range _dgbg .Elements (){_abfcg ,_eeaaf :=_ddcfb (_fcbef );
if _eeaaf !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeaaf );return nil ,_eeaaf ;};_agfa .Function =append (_agfa .Function ,_abfcg );
};}else {_fagaf ,_egggf :=_ddcfb (_acbcf );if _egggf !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egggf );return nil ,_egggf ;
};_agfa .Function =append (_agfa .Function ,_fagaf );};};return &_agfa ,nil ;};func _feebb (_bbbce *_cd .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fgafd :=PdfShadingType6 {};_fcbfb :=_bbbce .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _fcbfb ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gfbcc ,_cdgba :=_fcbfb .(*_cd .PdfObjectInteger );if !_cdgba {_dac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcbfb );
return nil ,_cd .ErrTypeError ;};_fgafd .BitsPerCoordinate =_gfbcc ;_fcbfb =_bbbce .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fcbfb ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gfbcc ,_cdgba =_fcbfb .(*_cd .PdfObjectInteger );if !_cdgba {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fcbfb );
return nil ,_cd .ErrTypeError ;};_fgafd .BitsPerComponent =_gfbcc ;_fcbfb =_bbbce .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fcbfb ==nil {_dac .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gfbcc ,_cdgba =_fcbfb .(*_cd .PdfObjectInteger );if !_cdgba {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fcbfb );
return nil ,_cd .ErrTypeError ;};_fgafd .BitsPerComponent =_gfbcc ;_fcbfb =_bbbce .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fcbfb ==nil {_dac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ceedb ,_cdgba :=_fcbfb .(*_cd .PdfObjectArray );if !_cdgba {_dac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcbfb );
return nil ,_cd .ErrTypeError ;};_fgafd .Decode =_ceedb ;if _baadd :=_bbbce .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_baadd !=nil {_fgafd .Function =[]PdfFunction {};if _ggfa ,_eafga :=_baadd .(*_cd .PdfObjectArray );_eafga {for _ ,_fgaec :=range _ggfa .Elements (){_bgbcg ,_ecddf :=_ddcfb (_fgaec );
if _ecddf !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecddf );return nil ,_ecddf ;};_fgafd .Function =append (_fgafd .Function ,_bgbcg );
};}else {_fggee ,_dcfce :=_ddcfb (_baadd );if _dcfce !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dcfce );return nil ,_dcfce ;
};_fgafd .Function =append (_fgafd .Function ,_fggee );};};return &_fgafd ,nil ;};func (_fcf *PdfReader )newPdfAnnotationMovieFromDict (_bbgd *_cd .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cadfb :=PdfAnnotationMovie {};_cadfb .T =_bbgd .Get ("\u0054");
_cadfb .Movie =_bbgd .Get ("\u004d\u006f\u0076i\u0065");_cadfb .A =_bbgd .Get ("\u0041");return &_cadfb ,nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bg :=NewPdfAction ();_bed :=&PdfActionNamed {};_bed .PdfAction =_bg ;_bg .SetContext (_bed );return _bed ;};

// SetContext set the sub annotation (context).
func (_abdag *PdfShading )SetContext (ctx PdfModel ){_abdag ._cdgf =ctx };func (_beec *PdfSignature )extractChainFromPKCS7 ()([]*_gc .Certificate ,error ){_afdad ,_afcgg :=_fe .Parse (_beec .Contents .Bytes ());if _afcgg !=nil {return nil ,_afcgg ;};return _afdad .Certificates ,nil ;
};

// SetContext sets the sub action (context).
func (_ad *PdfAction )SetContext (ctx PdfModel ){_ad ._ec =ctx };func (_dcegf *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _dcegf ._agbbba .GetCrypter ()!=nil &&!_dcegf ._agbbba .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_afbgbg :=_dcegf ._bbaed ;_eeaa :=_afbgbg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eeaa ==nil {return nil ,nil ;};_dac .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_begfb :=_cd .ResolveReference (_eeaa );
_dac .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_begfb );if _gccbe :=_cd .IsNullObject (_begfb );_gccbe {_dac .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_agcda ,_efccf :=_begfb .(*_cd .PdfIndirectObject );if !_efccf {if _ ,_aacgf :=_cd .GetDict (_begfb );!_aacgf {_dac .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_dac .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_agcda =_cd .MakeIndirectObject (_begfb );};_ccaaa ,_efccf :=_agcda .PdfObject .(*_cd .PdfObjectDictionary );if !_efccf {return nil ,_ac .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_dac .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_ccaaa );_dabba ,_ ,_bdeegb :=_dcegf .buildOutlineTree (_agcda ,nil ,nil ,nil );if _bdeegb !=nil {return nil ,_bdeegb ;};_dac .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_dabba );
return _dabba ,nil ;};func (_aafg *PdfAppender )mergeResources (_fabc ,_fdef _cd .PdfObject ,_cgcfe map[_cd .PdfObjectName ]_cd .PdfObjectName )_cd .PdfObject {if _fdef ==nil &&_fabc ==nil {return nil ;};if _fdef ==nil {return _fabc ;};_bdb ,_efce :=_cd .GetDict (_fdef );
if !_efce {return _fabc ;};if _fabc ==nil {_cdce :=_cd .MakeDict ();_cdce .Merge (_bdb );return _fdef ;};_bgdg ,_efce :=_cd .GetDict (_fabc );if !_efce {_dac .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bgdg =_cd .MakeDict ();};for _ ,_dgcc :=range _bdb .Keys (){if _gdec ,_eaaa :=_cgcfe [_dgcc ];_eaaa {_bgdg .Set (_gdec ,_bdb .Get (_dgcc ));}else {_bgdg .Set (_dgcc ,_bdb .Get (_dgcc ));};};return _bgdg ;};

// ToGoTime returns the date in time.Time format.
func (_daceb PdfDate )ToGoTime ()_c .Time {_degc :=int (_daceb ._dffcec *60*60+_daceb ._eefg *60);switch _daceb ._ffagg {case '-':_degc =-_degc ;case 'Z':_degc =0;};_ecgac :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_daceb ._ffagg ,_daceb ._dffcec ,_daceb ._eefg );
_agef :=_c .FixedZone (_ecgac ,_degc );return _c .Date (int (_daceb ._feafed ),_c .Month (_daceb ._cbaec ),int (_daceb ._edbg ),int (_daceb ._bdbaa ),int (_daceb ._gegbbb ),int (_daceb ._gcfac ),0,_agef );};func _dgbbg (_afdaa StdFontName )(pdfFontSimple ,error ){_bgdge ,_fcefg :=_bcd .NewStdFontByName (_afdaa );
if !_fcefg {return pdfFontSimple {},ErrFontNotSupported ;};_ebfac :=_afdbc (_bgdge );return _ebfac ,nil ;};

// String returns the name of the colorspace (DeviceN).
func (_efga *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_beacf []byte ;_cagbg []uint32 ;_gefa *_cd .PdfObjectStream ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_fggab *PdfPage )Size ()(float64 ,float64 ,error ){_bccbf ,_babf :=_fggab .GetMediaBox ();if _babf !=nil {return 0,0,_babf ;};_ddfgg ,_gfdgg :=_bccbf .Width (),_bccbf .Height ();if _gbbe :=_fggab .Rotate ;_gbbe !=nil &&*_gbbe %360!=0&&*_gbbe %90==0{if _dedc :=(360+*_gbbe %360)%360;
_dedc ==90||_dedc ==270{_ddfgg ,_gfdgg =_gfdgg ,_ddfgg ;};};return _ddfgg ,_gfdgg ,nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ecba *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cd .GetNumberAsFloat (_ecba .Descent );};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_fbgg *_cd .PdfIndirectObject ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_eaab *PdfWriter )SetNameDictionary (names _cd .PdfObject )error {if names ==nil {return nil ;};_dac .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_eaab ._eddc .Set ("\u004e\u0061\u006de\u0073",names );return _eaab .addObjects (names );};func _babd (_edfaf *_cd .PdfObjectDictionary )bool {for _ ,_ccfc :=range _edfaf .Keys (){if _ ,_ddcf :=_dddcd [_ccfc .String ()];_ddcf {return true ;};};return false ;
};func _gbcfg (_cafd _cd .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ebgb :=&PdfColorspaceDeviceNAttributes {};var _efea *_cd .PdfObjectDictionary ;switch _feaf :=_cafd .(type ){case *_cd .PdfIndirectObject :_ebgb ._dcea =_feaf ;var _bbdb bool ;
_efea ,_bbdb =_feaf .PdfObject .(*_cd .PdfObjectDictionary );if !_bbdb {_dac .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};case *_cd .PdfObjectDictionary :_efea =_feaf ;case *_cd .PdfObjectReference :_abaf :=_feaf .Resolve ();return _gbcfg (_abaf );default:_dac .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cddc :=_efea .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cddc !=nil {_eaef ,_bcac :=_cd .TraceToDirectObject (_cddc ).(*_cd .PdfObjectName );if !_bcac {_dac .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ebgb .Subtype =_eaef ;};if _fcbb :=_efea .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fcbb !=nil {_ebgb .Colorants =_fcbb ;};if _edafb :=_efea .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_edafb !=nil {_ebgb .Process =_edafb ;};if _gdgb :=_efea .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gdgb !=nil {_ebgb .MixingHints =_gdgb ;};return _ebgb ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ggda *Outline )Insert (index uint ,item *OutlineItem ){_cbgge :=uint (len (_ggda .Entries ));if index > _cbgge {index =_cbgge ;};_ggda .Entries =append (_ggda .Entries [:index ],append ([]*OutlineItem {item },_ggda .Entries [index :]...)...);};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cabg :=NewPdfAnnotation ();_agbd :=&PdfAnnotationStamp {};_agbd .PdfAnnotation =_cabg ;_agbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cabg .SetContext (_agbd );return _agbd ;};

// String returns a string describing the font descriptor.
func (_ffae *PdfFontDescriptor )String ()string {var _eede []string ;if _ffae .FontName !=nil {_eede =append (_eede ,_ffae .FontName .String ());};if _ffae .FontFamily !=nil {_eede =append (_eede ,_ffae .FontFamily .String ());};if _ffae .fontFile !=nil {_eede =append (_eede ,_ffae .fontFile .String ());
};if _ffae ._fccfb !=nil {_eede =append (_eede ,_ffae ._fccfb .String ());};_eede =append (_eede ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ffae .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_fg .Join (_eede ,"\u002c\u0020"));
};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fcefa _cd .PdfObject ;};func (_ffbad *Image )samplesTrimPadding (_efbc []uint32 )[]uint32 {_gdfee :=_ffbad .ColorComponents *int (_ffbad .Width )*int (_ffbad .Height );if len (_efbc )==_gdfee {return _efbc ;
};_fecgc :=make ([]uint32 ,_gdfee );_fafb :=int (_ffbad .Width )*_ffbad .ColorComponents ;var _agfgfd ,_bcae ,_gdfde ,_fgbbf int ;_fbceg :=_agb .BytesPerLine (int (_ffbad .Width ),int (_ffbad .BitsPerComponent ),_ffbad .ColorComponents );for _agfgfd =0;
_agfgfd < int (_ffbad .Height );_agfgfd ++{_bcae =_agfgfd *int (_ffbad .Width );_gdfde =_agfgfd *_fbceg ;for _fgbbf =0;_fgbbf < _fafb ;_fgbbf ++{_fecgc [_bcae +_fgbbf ]=_efbc [_gdfde +_fgbbf ];};};return _fecgc ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_fbgb *PdfPageResources )SetFontByName (keyName _cd .PdfObjectName ,obj _cd .PdfObject )error {if _fbgb .Font ==nil {_fbgb .Font =_cd .MakeDict ();};_bafcb ,_gege :=_cd .TraceToDirectObject (_fbgb .Font ).(*_cd .PdfObjectDictionary );if !_gege {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cd .TraceToDirectObject (_fbgb .Font ));
return _cd .ErrTypeError ;};_bafcb .Set (keyName ,obj );return nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cd .PdfObjectArray ;Matrix *_cd .PdfObjectArray ;Function []PdfFunction ;};func _cafee (_aafga _cd .PdfObject )(*_cd .PdfObjectDictionary ,*fontCommon ,error ){_ccfg :=&fontCommon {};if _daad ,_abgdc :=_aafga .(*_cd .PdfIndirectObject );
_abgdc {_ccfg ._fdbef =_daad .ObjectNumber ;};_abdgd ,_fcefb :=_cd .GetDict (_aafga );if !_fcefb {_dac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aafga );
return nil ,nil ,ErrFontNotSupported ;};_gfcb ,_fcefb :=_cd .GetNameVal (_abdgd .Get ("\u0054\u0079\u0070\u0065"));if !_fcefb {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gfcb !="\u0046\u006f\u006e\u0074"{_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gfcb ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cd .ErrTypeError ;};_dgeg ,_fcefb :=_cd .GetNameVal (_abdgd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fcefb {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_ccfg ._ecea =_dgeg ;_cebef ,_fcefb :=_cd .GetNameVal (_abdgd .Get ("\u004e\u0061\u006d\u0065"));if _fcefb {_ccfg ._cafe =_cebef ;};_faecg :=_abdgd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _faecg !=nil {_ccfg ._befae =_cd .TraceToDirectObject (_faecg );
_ebgbe ,_cbdad :=_ggfd (_ccfg ._befae ,_ccfg );if _cbdad !=nil {return _abdgd ,_ccfg ,_cbdad ;};_ccfg ._deeg =_ebgbe ;}else if _dgeg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_dgeg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dfea ,_ggdbc :=_ef .NewCIDSystemInfo (_abdgd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _ggdbc !=nil {return _abdgd ,_ccfg ,_ggdbc ;};_effbb :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dfea .Registry ,_dfea .Ordering );if _ef .IsPredefinedCMap (_effbb ){_ccfg ._deeg ,_ggdbc =_ef .LoadPredefinedCMap (_effbb );
if _ggdbc !=nil {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_effbb ,_ggdbc );
};};};_dbeab :=_abdgd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dbeab !=nil {_eccc ,_abbb :=_ebaa (_dbeab );if _abbb !=nil {_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abbb );
return _abdgd ,_ccfg ,_abbb ;};_ccfg ._gdegf =_eccc ;};if _dgeg !="\u0054\u0079\u0070e\u0033"{_aefb ,_bcgd :=_cd .GetNameVal (_abdgd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bcgd {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _abdgd ,_ccfg ,ErrRequiredAttributeMissing ;};_ccfg ._bgdfc =_aefb ;};return _abdgd ,_ccfg ,nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_edfb *PdfColorspaceCalGray )ToPdfObject ()_cd .PdfObject {_ddc :=&_cd .PdfObjectArray {};_ddc .Append (_cd .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fcee :=_cd .MakeDict ();if _edfb .WhitePoint !=nil {_fcee .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cd .MakeArray (_cd .MakeFloat (_edfb .WhitePoint [0]),_cd .MakeFloat (_edfb .WhitePoint [1]),_cd .MakeFloat (_edfb .WhitePoint [2])));
}else {_dac .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _edfb .BlackPoint !=nil {_fcee .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cd .MakeArray (_cd .MakeFloat (_edfb .BlackPoint [0]),_cd .MakeFloat (_edfb .BlackPoint [1]),_cd .MakeFloat (_edfb .BlackPoint [2])));
};_fcee .Set ("\u0047\u0061\u006dm\u0061",_cd .MakeFloat (_edfb .Gamma ));_ddc .Append (_fcee );if _edfb ._bgfa !=nil {_edfb ._bgfa .PdfObject =_ddc ;return _edfb ._bgfa ;};return _ddc ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_caeg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cd .PdfObject {_ddaf :=_cd .MakeDict ();if _caeg .Subtype !=nil {_ddaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_caeg .Subtype );};_ddaf .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_caeg .Colorants );
_ddaf .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_caeg .Process );_ddaf .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_caeg .MixingHints );if _caeg ._dcea !=nil {_caeg ._dcea .PdfObject =_ddaf ;return _caeg ._dcea ;
};return _ddaf ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_aca :=NewPdfAction ();_gac :=&PdfActionResetForm {};_gac .PdfAction =_aca ;_aca .SetContext (_gac );return _gac ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_agbgb *PdfFont )SubsetRegistered ()error {switch _bbdf :=_agbgb ._fedf .(type ){case *pdfFontType0 :_babcd :=_bbdf .subsetRegistered ();if _babcd !=nil {_dac .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_babcd );
return _babcd ;};if _bbdf ._ffdeb !=nil {if _bbdf ._cccad !=nil {_bbdf ._cccad .ToPdfObject ();};_bbdf .ToPdfObject ();};default:_dac .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bbdf );
};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_afagf *PdfSignature )GetContainingPdfObject ()_cd .PdfObject {return _afagf ._eeda };

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_feef ,_bagf :=_ab .Open (filePath );if _bagf !=nil {_dac .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bagf );
return nil ,_bagf ;};defer _feef .Close ();return NewCompositePdfFontFromTTF (_feef );};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gggf *PdfField )FullName ()(string ,error ){var _cadb _ccc .Buffer ;_cfdac :=[]string {};if _gggf .T !=nil {_cfdac =append (_cfdac ,_gggf .T .Decoded ());};_bccff :=map[*PdfField ]bool {};_bccff [_gggf ]=true ;_ecef :=_gggf .Parent ;for _ecef !=nil {if _ ,_dfge :=_bccff [_ecef ];
_dfge {return _cadb .String (),_ac .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ecef .T ==nil {return _cadb .String (),_ac .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_cfdac =append (_cfdac ,_ecef .T .Decoded ());_bccff [_ecef ]=true ;_ecef =_ecef .Parent ;};for _bbfg :=len (_cfdac )-1;_bbfg >=0;_bbfg --{_cadb .WriteString (_cfdac [_bbfg ]);if _bbfg > 0{_cadb .WriteString ("\u002e");};};return _cadb .String (),nil ;
};func _egdd (_aaec *_cd .PdfObjectDictionary )*VRI {_aagg ,_ :=_cd .GetString (_aaec .Get ("\u0054\u0055"));_babc ,_ :=_cd .GetString (_aaec .Get ("\u0054\u0053"));return &VRI {Cert :_ffdfd (_aaec .Get ("\u0043\u0065\u0072\u0074")),OCSP :_ffdfd (_aaec .Get ("\u004f\u0043\u0053\u0050")),CRL :_ffdfd (_aaec .Get ("\u0043\u0052\u004c")),TU :_aagg ,TS :_babc };
};

// B returns the value of the B component of the color.
func (_gbdg *PdfColorCalRGB )B ()float64 {return _gbdg [1]};

// R returns the value of the red component of the color.
func (_eddg *PdfColorDeviceRGB )R ()float64 {return _eddg [0]};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fgfdf *PdfReader )GetTrailer ()(*_cd .PdfObjectDictionary ,error ){_fdgfcg :=_fgfdf ._agbbba .GetTrailer ();if _fdgfcg ==nil {return nil ,_ac .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fdgfcg ,nil ;
};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_affbd *PdfPageResources )GenerateXObjectName ()_cd .PdfObjectName {_feegcc :=1;for {_egbbf :=_cd .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_feegcc ));if !_affbd .HasXObjectByName (*_egbbf ){return *_egbbf ;};_feegcc ++;};};func _bfbgc (_aadeg *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_gdgbf ,_abdd :=_cd .GetDict (_aadeg .AP );
if !_abdd {return nil ,nil ,_ac .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _gdgbf ==nil {return nil ,nil ,nil ;};_agdae ,_abdd :=_cd .GetArray (_aadeg .Rect );
if !_abdd ||_agdae .Len ()!=4{return nil ,nil ,_ac .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_efdbf ,_adfb :=NewPdfRectangle (*_agdae );if _adfb !=nil {return nil ,nil ,_adfb ;};_agge :=_cd .TraceToDirectObject (_gdgbf .Get ("\u004e"));
switch _dacc :=_agge .(type ){case *_cd .PdfObjectStream :_dfbce :=_dacc ;_dedf ,_edgg :=NewXObjectFormFromStream (_dfbce );return _dedf ,_efdbf ,_edgg ;case *_cd .PdfObjectDictionary :_dbaf :=_dacc ;_dffgb ,_dbbf :=_cd .GetName (_aadeg .AS );if !_dbbf {return nil ,nil ,nil ;
};if _dbaf .Get (*_dffgb )==nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_cdgb ,_dbbf :=_cd .GetStream (_dbaf .Get (*_dffgb ));if !_dbbf {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dffgb );
return nil ,nil ,_ac .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_gceeed ,_gdbd :=NewXObjectFormFromStream (_cdgb );return _gceeed ,_efdbf ,_gdbd ;};_dac .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_agge );
return nil ,nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_fedba *PdfShading )GetContainingPdfObject ()_cd .PdfObject {return _fedba ._fdadf };

// ReplacePage replaces the original page to a new page.
func (_dgdg *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_abcc :=pageNum -1;for _egca :=range _dgdg ._edc {if _egca ==_abcc {_acfb :=page .Duplicate ();_cafbfd (_acfb );_dgdg ._edc [_egca ]=_acfb ;};};};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_dggfc *Image )ToJBIG2Image ()(*_cd .JBIG2Image ,error ){_dgefg ,_eeade :=_dggfc .ToGoImage ();if _eeade !=nil {return nil ,_eeade ;};return _cd .GoImageToJBIG2 (_dgefg ,_cd .JB2ImageAutoThreshold );};func _egcae (_gfad _cd .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dac .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gfad .String (),_gfad );
_fada :=NewPdfColorspaceSpecialPattern ();if _fcce ,_egcef :=_gfad .(*_cd .PdfIndirectObject );_egcef {_fada ._dbgbc =_fcce ;};_gfad =_cd .TraceToDirectObject (_gfad );if _bdbd ,_bedc :=_gfad .(*_cd .PdfObjectName );_bedc {if *_bdbd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _fada ,nil ;};_dagd ,_gbcc :=_gfad .(*_cd .PdfObjectArray );if !_gbcc {_dac .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gfad );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dagd .Len ()!=1&&_dagd .Len ()!=2{_dac .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dagd );
return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gfad =_dagd .Get (0);if _daeb ,_ffab :=_gfad .(*_cd .PdfObjectName );_ffab {if *_daeb !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dac .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_daeb );
return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dagd .Len ()> 1{_gfad =_dagd .Get (1);_gfad =_cd .TraceToDirectObject (_gfad );_baeg ,_ccga :=NewPdfColorspaceFromPdfObject (_gfad );if _ccga !=nil {return nil ,_ccga ;
};_fada .UnderlyingCS =_baeg ;};_dac .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fada .UnderlyingCS );
return _fada ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_facd *PdfField )GetContainingPdfObject ()_cd .PdfObject {return _facd ._ebfdd };func _feda (_bbded *_cd .PdfObjectDictionary )(*PdfShadingType5 ,error ){_ecgbg :=PdfShadingType5 {};_adebg :=_bbded .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _adebg ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecegc ,_dffbb :=_adebg .(*_cd .PdfObjectInteger );if !_dffbb {_dac .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_adebg );
return nil ,_cd .ErrTypeError ;};_ecgbg .BitsPerCoordinate =_ecegc ;_adebg =_bbded .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _adebg ==nil {_dac .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ecegc ,_dffbb =_adebg .(*_cd .PdfObjectInteger );if !_dffbb {_dac .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_adebg );
return nil ,_cd .ErrTypeError ;};_ecgbg .BitsPerComponent =_ecegc ;_adebg =_bbded .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _adebg ==nil {_dac .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ecegc ,_dffbb =_adebg .(*_cd .PdfObjectInteger );if !_dffbb {_dac .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_adebg );
return nil ,_cd .ErrTypeError ;};_ecgbg .VerticesPerRow =_ecegc ;_adebg =_bbded .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _adebg ==nil {_dac .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fafac ,_dffbb :=_adebg .(*_cd .PdfObjectArray );if !_dffbb {_dac .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adebg );
return nil ,_cd .ErrTypeError ;};_ecgbg .Decode =_fafac ;if _bgfad :=_bbded .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bgfad !=nil {_ecgbg .Function =[]PdfFunction {};if _ffdfe ,_cddgfe :=_bgfad .(*_cd .PdfObjectArray );_cddgfe {for _ ,_edfda :=range _ffdfe .Elements (){_aaadg ,_abbd :=_ddcfb (_edfda );
if _abbd !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abbd );return nil ,_abbd ;};_ecgbg .Function =append (_ecgbg .Function ,_aaadg );
};}else {_ggec ,_cefbb :=_ddcfb (_bgfad );if _cefbb !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cefbb );return nil ,_cefbb ;
};_ecgbg .Function =append (_ecgbg .Function ,_ggec );};};return &_ecgbg ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gagbc *PdfColorspaceSpecialSeparation )ToPdfObject ()_cd .PdfObject {_eccg :=_cd .MakeArray (_cd .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_eccg .Append (_gagbc .ColorantName );_eccg .Append (_gagbc .AlternateSpace .ToPdfObject ());
_eccg .Append (_gagbc .TintTransform .ToPdfObject ());if _gagbc ._fgegg !=nil {_gagbc ._fgegg .PdfObject =_eccg ;return _gagbc ._fgegg ;};return _eccg ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fcb :=NewPdfAction ();_abc :=&PdfActionGoTo3DView {};_abc .PdfAction =_fcb ;_fcb .SetContext (_abc );return _abc ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cd .PdfObjectArray )(*PdfRectangle ,error ){_eddda :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _eeaca error ;_eddda .Llx ,_eeaca =_cd .GetNumberAsFloat (arr .Get (0));if _eeaca !=nil {return nil ,_eeaca ;};_eddda .Lly ,_eeaca =_cd .GetNumberAsFloat (arr .Get (1));if _eeaca !=nil {return nil ,_eeaca ;};_eddda .Urx ,_eeaca =_cd .GetNumberAsFloat (arr .Get (2));
if _eeaca !=nil {return nil ,_eeaca ;};_eddda .Ury ,_eeaca =_cd .GetNumberAsFloat (arr .Get (3));if _eeaca !=nil {return nil ,_eeaca ;};return &_eddda ,nil ;};func (_gdaee *PdfReader )newPdfAnnotationSquareFromDict (_gdef *_cd .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_dbf :=PdfAnnotationSquare {};
_acd ,_fcg :=_gdaee .newPdfAnnotationMarkupFromDict (_gdef );if _fcg !=nil {return nil ,_fcg ;};_dbf .PdfAnnotationMarkup =_acd ;_dbf .BS =_gdef .Get ("\u0042\u0053");_dbf .IC =_gdef .Get ("\u0049\u0043");_dbf .BE =_gdef .Get ("\u0042\u0045");_dbf .RD =_gdef .Get ("\u0052\u0044");
return &_dbf ,nil ;};func (_ffcgg *PdfAnnotation )String ()string {_aga :="";_gad ,_cfeb :=_ffcgg .ToPdfObject ().(*_cd .PdfIndirectObject );if _cfeb {_aga =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ffcgg ._eag ,_gad .PdfObject .String ());};
return _aga ;};

// B returns the value of the B component of the color.
func (_eefdc *PdfColorLab )B ()float64 {return _eefdc [2]};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cd .PdfObject ;IC _cd .PdfObject ;BE _cd .PdfObject ;RD _cd .PdfObject ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bfa :=NewPdfAnnotation ();_ffe :=&PdfAnnotationText {};_ffe .PdfAnnotation =_bfa ;_ffe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfa .SetContext (_ffe );return _ffe ;};func (_cedce *PdfSignature )extractChainFromCert ()([]*_gc .Certificate ,error ){var _dcca *_cd .PdfObjectArray ;
switch _cdefg :=_cedce .Cert .(type ){case *_cd .PdfObjectString :_dcca =_cd .MakeArray (_cdefg );case *_cd .PdfObjectArray :_dcca =_cdefg ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cdefg );
};var _fdceac _ccc .Buffer ;for _ ,_bdegf :=range _dcca .Elements (){_gccf ,_adceg :=_cd .GetString (_bdegf );if !_adceg {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_bdegf );
};if _ ,_efeed :=_fdceac .Write (_gccf .Bytes ());_efeed !=nil {return nil ,_efeed ;};};return _gc .ParseCertificates (_fdceac .Bytes ());};func (_caga *PdfReader )newPdfActionSetOCGStateFromDict (_dca *_cd .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_dca .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_dca .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ColorToRGB converts gray -> rgb for a single color component.
func (_cceed *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfcb ,_cgcd :=color .(*PdfColorDeviceGray );if !_cgcd {_dac .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bfcb ),float64 (*_bfcb ),float64 (*_bfcb )),nil ;};func (_aage *PdfWriter )writeString (_afbfg string ){if _aage ._dfgef !=nil {return ;
};_fgff ,_gddeg :=_aage ._ffbdb .WriteString (_afbfg );_aage ._gefee +=int64 (_fgff );_aage ._dfgef =_gddeg ;};

// HasXObjectByName checks if has XObject resource by name.
func (_dcde *PdfPage )HasXObjectByName (name _cd .PdfObjectName )bool {_cfcaa ,_abccc :=_dcde .Resources .XObject .(*_cd .PdfObjectDictionary );if !_abccc {return false ;};if _ccfb :=_cfcaa .Get (name );_ccfb !=nil {return true ;};return false ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cd .PdfObject ;Volume _cd .PdfObject ;Synchronous _cd .PdfObject ;Repeat _cd .PdfObject ;Mix _cd .PdfObject ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _ag .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _gdfaa ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _adgae (rs ,opts ,true ,_gdfaa );
};func (_bedec *DSS )generateHashMap (_eaeb []*_cd .PdfObjectStream )(map[string ]*_cd .PdfObjectStream ,error ){_dcda :=map[string ]*_cd .PdfObjectStream {};for _ ,_bgddc :=range _eaeb {_befa ,_agdd :=_cd .DecodeStream (_bgddc );if _agdd !=nil {return nil ,_agdd ;
};_dagdd ,_agdd :=_fbcdg (_befa );if _agdd !=nil {return nil ,_agdd ;};_dcda [string (_dagdd )]=_bgddc ;};return _dcda ,nil ;};func _bdag (_acbda _cd .PdfObject )(*PdfColorspaceICCBased ,error ){_eada :=&PdfColorspaceICCBased {};if _gaad ,_ceebc :=_acbda .(*_cd .PdfIndirectObject );
_ceebc {_eada ._eecdd =_gaad ;};_acbda =_cd .TraceToDirectObject (_acbda );_cfcg ,_dceeg :=_acbda .(*_cd .PdfObjectArray );if !_dceeg {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfcg .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_acbda =_cd .TraceToDirectObject (_cfcg .Get (0));_fgag ,_dceeg :=_acbda .(*_cd .PdfObjectName );if !_dceeg {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_fgag !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_acbda =_cfcg .Get (1);
_adag ,_dceeg :=_cd .GetStream (_acbda );if !_dceeg {_dac .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_acbda );
return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_edfc :=_adag .PdfObjectDictionary ;_efcb ,_dceeg :=_edfc .Get ("\u004e").(*_cd .PdfObjectInteger );
if !_dceeg {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_efcb !=1&&*_efcb !=3&&*_efcb !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_eada .N =int (*_efcb );if _geca :=_edfc .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_geca !=nil {_bdac ,_dbde :=NewPdfColorspaceFromPdfObject (_geca );if _dbde !=nil {return nil ,_dbde ;};_eada .Alternate =_bdac ;};if _bfgd :=_edfc .Get ("\u0052\u0061\u006eg\u0065");
_bfgd !=nil {_bfgd =_cd .TraceToDirectObject (_bfgd );_cebe ,_baac :=_bfgd .(*_cd .PdfObjectArray );if !_baac {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cebe .Len ()!=2*_eada .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_dffff ,_ebgf :=_cebe .GetAsFloat64Slice ();if _ebgf !=nil {return nil ,_ebgf ;};_eada .Range =_dffff ;}else {_eada .Range =make ([]float64 ,2*_eada .N );for _cggb :=0;_cggb < _eada .N ;_cggb ++{_eada .Range [2*_cggb ]=0.0;_eada .Range [2*_cggb +1]=1.0;
};};if _edce :=_edfc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_edce !=nil {_dffg ,_aeafc :=_edce .(*_cd .PdfObjectStream );if !_aeafc {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_eada .Metadata =_dffg ;};_ccgb ,_gedc :=_cd .DecodeStream (_adag );if _gedc !=nil {return nil ,_gedc ;};_eada .Data =_ccgb ;_eada ._ebff =_adag ;return _eada ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bgea *PdfColorspaceLab )ToPdfObject ()_cd .PdfObject {_gceee :=_cd .MakeArray ();_gceee .Append (_cd .MakeName ("\u004c\u0061\u0062"));_acgc :=_cd .MakeDict ();if _bgea .WhitePoint !=nil {_ccea :=_cd .MakeArray (_cd .MakeFloat (_bgea .WhitePoint [0]),_cd .MakeFloat (_bgea .WhitePoint [1]),_cd .MakeFloat (_bgea .WhitePoint [2]));
_acgc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ccea );}else {_dac .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _bgea .BlackPoint !=nil {_dgbe :=_cd .MakeArray (_cd .MakeFloat (_bgea .BlackPoint [0]),_cd .MakeFloat (_bgea .BlackPoint [1]),_cd .MakeFloat (_bgea .BlackPoint [2]));_acgc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dgbe );
};if _bgea .Range !=nil {_eecac :=_cd .MakeArray (_cd .MakeFloat (_bgea .Range [0]),_cd .MakeFloat (_bgea .Range [1]),_cd .MakeFloat (_bgea .Range [2]),_cd .MakeFloat (_bgea .Range [3]));_acgc .Set ("\u0052\u0061\u006eg\u0065",_eecac );};_gceee .Append (_acgc );
if _bgea ._abae !=nil {_bgea ._abae .PdfObject =_gceee ;return _bgea ._abae ;};return _gceee ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bea :=NewPdfAction ();_feb :=&PdfActionJavaScript {};_feb .PdfAction =_bea ;_bea .SetContext (_feb );return _feb ;};

// ToPdfObject converts the font to a PDF representation.
func (_bcgef *pdfFontType3 )ToPdfObject ()_cd .PdfObject {if _bcgef ._bega ==nil {_bcgef ._bega =&_cd .PdfIndirectObject {};};_dacbe :=_bcgef .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_bcgef ._bega .PdfObject =_dacbe ;if _bcgef .FirstChar !=nil {_dacbe .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bcgef .FirstChar );
};if _bcgef .LastChar !=nil {_dacbe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bcgef .LastChar );};if _bcgef .Widths !=nil {_dacbe .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bcgef .Widths );};if _bcgef .Encoding !=nil {_dacbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcgef .Encoding );
}else if _bcgef ._cedgg !=nil {_fafd :=_bcgef ._cedgg .ToPdfObject ();if _fafd !=nil {_dacbe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fafd );};};if _bcgef .FontBBox !=nil {_dacbe .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bcgef .FontBBox );
};if _bcgef .FontMatrix !=nil {_dacbe .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_bcgef .FontMatrix );};if _bcgef .CharProcs !=nil {_dacbe .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_bcgef .CharProcs );};if _bcgef .Resources !=nil {_dacbe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bcgef .Resources );
};return _bcgef ._bega ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_abdbf *PdfPageResourcesColorspaces )Set (key _cd .PdfObjectName ,val PdfColorspace ){if _ ,_afdd :=_abdbf .Colorspaces [string (key )];!_afdd {_abdbf .Names =append (_abdbf .Names ,string (key ));};_abdbf .Colorspaces [string (key )]=val ;};

// GetOptimizer returns current PDF optimizer.
func (_eebgdg *PdfWriter )GetOptimizer ()Optimizer {return _eebgdg ._edggd };func _fdda (_fecg _cd .PdfObject )(*PdfColorspaceCalGray ,error ){_bdccb :=NewPdfColorspaceCalGray ();if _ccce ,_fefcf :=_fecg .(*_cd .PdfIndirectObject );_fefcf {_bdccb ._bgfa =_ccce ;
};_fecg =_cd .TraceToDirectObject (_fecg );_geed ,_gbbf :=_fecg .(*_cd .PdfObjectArray );if !_gbbf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _geed .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_fecg =_cd .TraceToDirectObject (_geed .Get (0));_aabc ,_gbbf :=_fecg .(*_cd .PdfObjectName );if !_gbbf {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_aabc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fecg =_cd .TraceToDirectObject (_geed .Get (1));
_fadf ,_gbbf :=_fecg .(*_cd .PdfObjectDictionary );if !_gbbf {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};
_fecg =_fadf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fecg =_cd .TraceToDirectObject (_fecg );_ece ,_gbbf :=_fecg .(*_cd .PdfObjectArray );if !_gbbf {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _ece .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cecd ,_eaegg :=_ece .GetAsFloat64Slice ();
if _eaegg !=nil {return nil ,_eaegg ;};_bdccb .WhitePoint =_cecd ;_fecg =_fadf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fecg !=nil {_fecg =_cd .TraceToDirectObject (_fecg );_effb ,_afcg :=_fecg .(*_cd .PdfObjectArray );
if !_afcg {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _effb .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_afaed ,_eaed :=_effb .GetAsFloat64Slice ();if _eaed !=nil {return nil ,_eaed ;};_bdccb .BlackPoint =_afaed ;};_fecg =_fadf .Get ("\u0047\u0061\u006dm\u0061");if _fecg !=nil {_fecg =_cd .TraceToDirectObject (_fecg );_fcae ,_efceg :=_cd .GetNumberAsFloat (_fecg );
if _efceg !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_bdccb .Gamma =_fcae ;};return _bdccb ,nil ;};func (_cfgbf *PdfPage )setContainer (_deefe *_cd .PdfIndirectObject ){_deefe .PdfObject =_cfgbf ._dbeb ;
_cfgbf ._adcdb =_deefe ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gbcf *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgdd :=vals [0];if _ffgdd < 0.0||_ffgdd > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acea :=NewPdfColorCalGray (_ffgdd );return _acea ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cbfda :_cd .MakeIndirectObject (_cd .MakeDict ())};};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_egbc *PdfAnnotation )GetContext ()PdfModel {if _egbc ==nil {return nil ;};return _egbc ._eag ;};

// GetContentStream returns the pattern cell's content stream
func (_fdcaca *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gdfdbe ,_ ,_edcfae :=_fdcaca .GetContentStreamWithEncoder ();return _gdfdbe ,_edcfae ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_eedf :=&PdfColorspaceLab {};_eedf .BlackPoint =[]float64 {0.0,0.0,0.0};_eedf .Range =[]float64 {-100,100,-100,100};return _eedf ;};func (_gbb *PdfReader )newPdfActionMovieFromDict (_cb *_cd .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cb .Get ("\u0054"),Operation :_cb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// A returns the value of the A component of the color.
func (_cecg *PdfColorCalRGB )A ()float64 {return _cecg [0]};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_cddg *PdfFieldButton )IsRadio ()bool {return _cddg .GetType ()==ButtonTypeRadio };func _aggf ()string {return _dac .Version };

// ToPdfObject implements interface PdfModel.
func (_bbb *PdfActionGoTo )ToPdfObject ()_cd .PdfObject {_bbb .PdfAction .ToPdfObject ();_ggc :=_bbb ._cea ;_agd :=_ggc .PdfObject .(*_cd .PdfObjectDictionary );_agd .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeGoTo )));_agd .SetIfNotNil ("\u0044",_bbb .D );
return _ggc ;};

// ToPdfObject implements interface PdfModel.
func (_agaf *PdfAnnotationSquare )ToPdfObject ()_cd .PdfObject {_agaf .PdfAnnotation .ToPdfObject ();_bcde :=_agaf ._fef ;_ffeg :=_bcde .PdfObject .(*_cd .PdfObjectDictionary );if _agaf .PdfAnnotationMarkup !=nil {_agaf .PdfAnnotationMarkup .appendToPdfDictionary (_ffeg );
};_ffeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ffeg .SetIfNotNil ("\u0042\u0053",_agaf .BS );_ffeg .SetIfNotNil ("\u0049\u0043",_agaf .IC );_ffeg .SetIfNotNil ("\u0042\u0045",_agaf .BE );
_ffeg .SetIfNotNil ("\u0052\u0044",_agaf .RD );return _bcde ;};func (_bgdc *PdfReader )newPdfFieldFromIndirectObject (_dcfg *_cd .PdfIndirectObject ,_ddbg *PdfField )(*PdfField ,error ){if _gegc ,_gdcb :=_bgdc ._bdcga .GetModelFromPrimitive (_dcfg ).(*PdfField );
_gdcb {return _gegc ,nil ;};_agcbf ,_eagc :=_cd .GetDict (_dcfg );if !_eagc {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gcdbd :=NewPdfField ();_gcdbd ._ebfdd =_dcfg ;_gcdbd ._ebfdd .PdfObject =_agcbf ;if _bgec ,_accbb :=_cd .GetName (_agcbf .Get ("\u0046\u0054"));_accbb {_gcdbd .FT =_bgec ;};if _ddbg !=nil {_gcdbd .Parent =_ddbg ;};_gcdbd .T ,_ =_agcbf .Get ("\u0054").(*_cd .PdfObjectString );
_gcdbd .TU ,_ =_agcbf .Get ("\u0054\u0055").(*_cd .PdfObjectString );_gcdbd .TM ,_ =_agcbf .Get ("\u0054\u004d").(*_cd .PdfObjectString );_gcdbd .Ff ,_ =_agcbf .Get ("\u0046\u0066").(*_cd .PdfObjectInteger );_gcdbd .V =_agcbf .Get ("\u0056");_gcdbd .DV =_agcbf .Get ("\u0044\u0056");
_gcdbd .AA =_agcbf .Get ("\u0041\u0041");_baf :=_gcdbd .FT ;if _baf ==nil &&_ddbg !=nil {_baf =_ddbg .FT ;};if _baf !=nil {switch *_baf {case "\u0054\u0078":_cgedc ,_ccegf :=_bceb (_agcbf );if _ccegf !=nil {return nil ,_ccegf ;};_cgedc .PdfField =_gcdbd ;
_gcdbd ._gafg =_cgedc ;case "\u0043\u0068":_gbae ,_gggd :=_bfba (_agcbf );if _gggd !=nil {return nil ,_gggd ;};_gbae .PdfField =_gcdbd ;_gcdbd ._gafg =_gbae ;case "\u0042\u0074\u006e":_dede ,_bgabf :=_eddgc (_agcbf );if _bgabf !=nil {return nil ,_bgabf ;
};_dede .PdfField =_gcdbd ;_gcdbd ._gafg =_dede ;case "\u0053\u0069\u0067":_affe ,_ecfc :=_bgdc .newPdfFieldSignatureFromDict (_agcbf );if _ecfc !=nil {return nil ,_ecfc ;};_affe .PdfField =_gcdbd ;_gcdbd ._gafg =_affe ;default:_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gcdbd .FT );
return nil ,_ac .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _gbee ,_ccgae :=_cd .GetName (_agcbf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_ccgae {if *_gbee =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fadef ,_aeeg :=_bgdc .newPdfAnnotationFromIndirectObject (_dcfg );
if _aeeg !=nil {return nil ,_aeeg ;};_afbgd ,_efgba :=_fadef .GetContext ().(*PdfAnnotationWidget );if !_efgba {return nil ,_ac .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_afbgd ._edb =_gcdbd ;_afbgd .Parent =_gcdbd ._ebfdd ;_gcdbd .Annotations =append (_gcdbd .Annotations ,_afbgd );return _gcdbd ,nil ;};};_ebef :=true ;if _fdcc ,_caff :=_cd .GetArray (_agcbf .Get ("\u004b\u0069\u0064\u0073"));_caff {_dgfg :=make ([]*_cd .PdfIndirectObject ,0,_fdcc .Len ());
for _ ,_abeb :=range _fdcc .Elements (){_ggdf ,_ffcc :=_cd .GetIndirect (_abeb );if !_ffcc {_dgdb ,_aeeb :=_cd .GetStream (_abeb );if _aeeb &&_dgdb .PdfObjectDictionary !=nil {_gcbc ,_gbec :=_cd .GetNameVal (_dgdb .Get ("\u0054\u0079\u0070\u0065"));if _gbec &&_gcbc =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dac .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ac .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_gbcg ,_gfab :=_cd .GetDict (_ggdf );
if !_gfab {return nil ,ErrTypeCheck ;};if _ebef {_ebef =!_babd (_gbcg );};_dgfg =append (_dgfg ,_ggdf );};for _ ,_dbad :=range _dgfg {if _ebef {_fgca ,_gbgeg :=_bgdc .newPdfAnnotationFromIndirectObject (_dbad );if _gbgeg !=nil {_dac .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbgeg );
return nil ,_gbgeg ;};_fdebf ,_dgee :=_fgca ._eag .(*PdfAnnotationWidget );if !_dgee {return nil ,ErrTypeCheck ;};_fdebf ._edb =_gcdbd ;_gcdbd .Annotations =append (_gcdbd .Annotations ,_fdebf );}else {_cdaa ,_ggcc :=_bgdc .newPdfFieldFromIndirectObject (_dbad ,_gcdbd );
if _ggcc !=nil {_dac .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_ggcc );return nil ,_ggcc ;};_gcdbd .Kids =append (_gcdbd .Kids ,_cdaa );
};};};return _gcdbd ,nil ;};func (_aec *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _aec ._gdegf ==nil &&_aec .DescendantFont !=nil {return _aec .DescendantFont .FontDescriptor ();};return _aec ._gdegf ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cd .PdfObject ;};func _dgdec (_ffabg *_cd .PdfObjectArray )(float64 ,error ){_fccbb ,_acffb :=_ffabg .ToFloat64Array ();if _acffb !=nil {_dac .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffabg ,_acffb );
};switch len (_fccbb ){case 1:return _fccbb [0],nil ;case 3:_fabec :=PdfColorspaceDeviceRGB {};_cbegg ,_aadcb :=_fabec .ColorFromFloats (_fccbb );if _aadcb !=nil {return 0.0,_aadcb ;};return _cbegg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_ebegg :=PdfColorspaceDeviceCMYK {};
_gfegb ,_cfafe :=_ebegg .ColorFromFloats (_fccbb );if _cfafe !=nil {return 0.0,_cfafe ;};_decbg ,_cfafe :=_ebegg .ColorToRGB (_gfegb .(*PdfColorDeviceCMYK ));if _cfafe !=nil {return 0.0,_cfafe ;};return _decbg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_acffb =_ac .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_dac .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffabg ,_acffb );
return 0.0,_acffb ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_fda :=NewPdfAnnotation ();_cdg :=&PdfAnnotationCaret {};_cdg .PdfAnnotation =_fda ;_cdg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fda .SetContext (_cdg );return _cdg ;};

// ToPdfObject implements interface PdfModel.
func (_eefb *PdfActionThread )ToPdfObject ()_cd .PdfObject {_eefb .PdfAction .ToPdfObject ();_dcf :=_eefb ._cea ;_dad :=_dcf .PdfObject .(*_cd .PdfObjectDictionary );_dad .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeThread )));if _eefb .F !=nil {_dad .Set ("\u0046",_eefb .F .ToPdfObject ());
};_dad .SetIfNotNil ("\u0044",_eefb .D );_dad .SetIfNotNil ("\u0042",_eefb .B );return _dcf ;};

// ToPdfObject converts date to a PDF string object.
func (_egafb *PdfDate )ToPdfObject ()_cd .PdfObject {_babff :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_egafb ._feafed ,_egafb ._cbaec ,_egafb ._edbg ,_egafb ._bdbaa ,_egafb ._gegbbb ,_egafb ._gcfac ,_egafb ._ffagg ,_egafb ._dffcec ,_egafb ._eefg );
return _cd .MakeString (_babff );};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ecec *PdfRectangle )Normalize (){if _ecec .Llx > _ecec .Urx {_ecec .Llx ,_ecec .Urx =_ecec .Urx ,_ecec .Llx ;};if _ecec .Lly > _ecec .Ury {_ecec .Lly ,_ecec .Ury =_ecec .Ury ,_ecec .Lly ;};};func _cdfa (_eedg _cd .PdfObject )(*PdfColorspaceDeviceN ,error ){_agcb :=NewPdfColorspaceDeviceN ();
if _ddaagg ,_cdeg :=_eedg .(*_cd .PdfIndirectObject );_cdeg {_agcb ._dgef =_ddaagg ;};_eedg =_cd .TraceToDirectObject (_eedg );_afgfe ,_aaad :=_eedg .(*_cd .PdfObjectArray );if !_aaad {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _afgfe .Len ()!=4&&_afgfe .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_eedg =_afgfe .Get (0);
_acdg ,_aaad :=_eedg .(*_cd .PdfObjectName );if !_aaad {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_acdg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_eedg =_afgfe .Get (1);
_eedg =_cd .TraceToDirectObject (_eedg );_ccbdef ,_aaad :=_eedg .(*_cd .PdfObjectArray );if !_aaad {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_agcb .ColorantNames =_ccbdef ;_eedg =_afgfe .Get (2);_dfef ,_dbgd :=NewPdfColorspaceFromPdfObject (_eedg );if _dbgd !=nil {return nil ,_dbgd ;};_agcb .AlternateSpace =_dfef ;_abed ,_dbgd :=_ddcfb (_afgfe .Get (3));if _dbgd !=nil {return nil ,_dbgd ;
};_agcb .TintTransform =_abed ;if _afgfe .Len ()==5{_eeab ,_efgb :=_gbcfg (_afgfe .Get (4));if _efgb !=nil {return nil ,_efgb ;};_agcb .Attributes =_eeab ;};return _agcb ,nil ;};func (_fgfd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cd .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aade *PdfColorspaceDeviceCMYK )ToPdfObject ()_cd .PdfObject {return _cd .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_afea *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbcc ,_febc :=_cd .GetNumbersAsFloat (objects );
if _febc !=nil {return nil ,_febc ;};return _afea .ColorFromFloats (_cbcc );};func (_dfc *PdfReader )newPdfActionResetFormFromDict (_dea *_cd .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dea .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// IsEncrypted returns true if the PDF file is encrypted.
func (_ggfg *PdfReader )IsEncrypted ()(bool ,error ){return _ggfg ._agbbba .IsEncrypted ()};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ccaeg *PdfPage )Duplicate ()*PdfPage {_bged :=*_ccaeg ;_bged ._dbeb =_cd .MakeDict ();_bged ._adcdb =_cd .MakeIndirectObject (_bged ._dbeb );return &_bged ;};func _cgfda (_gadff _cd .PdfObject )(*fontFile ,error ){_dac .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_gadff );
_effba :=&fontFile {};_gadff =_cd .TraceToDirectObject (_gadff );_bfdbb ,_cacef :=_gadff .(*_cd .PdfObjectStream );if !_cacef {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_gadff );
return nil ,_cd .ErrTypeError ;};_fbba :=_bfdbb .PdfObjectDictionary ;_aabef ,_beeg :=_cd .DecodeStream (_bfdbb );if _beeg !=nil {return nil ,_beeg ;};_cfdg ,_cacef :=_cd .GetNameVal (_fbba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cacef {_effba ._bfgg =_cfdg ;
if _cfdg =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dac .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_adef ,_ :=_cd .GetIntVal (_fbba .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_dccb ,_ :=_cd .GetIntVal (_fbba .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _adef > len (_aabef ){_adef =len (_aabef );};
if _adef +_dccb > len (_aabef ){_dccb =len (_aabef )-_adef ;};_cafa :=_aabef [:_adef ];var _bccb []byte ;if _dccb > 0{_bccb =_aabef [_adef :_adef +_dccb ];};if _adef > 0&&_dccb > 0{_aafae :=_effba .loadFromSegments (_cafa ,_bccb );if _aafae !=nil {return nil ,_aafae ;
};};return _effba ,nil ;};

// Items returns all children outline items.
func (_fgfb *OutlineItem )Items ()[]*OutlineItem {return _fgfb .Entries };

// AddWatermarkImage adds a watermark to the page.
func (_eeeeb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ebfcd ,_dcgg :=_eeeeb .GetMediaBox ();if _dcgg !=nil {return _dcgg ;};_cfgdc :=_ebfcd .Urx -_ebfcd .Llx ;_bbee :=_ebfcd .Ury -_ebfcd .Lly ;_dgbea :=float64 (*ximg .Width );
_ggaeeg :=(_cfgdc -_dgbea )/2;if opt .FitToWidth {_dgbea =_cfgdc ;_ggaeeg =0;};_dfbac :=_bbee ;_cfcb :=float64 (0);if opt .PreserveAspectRatio {_dfbac =_dgbea *float64 (*ximg .Height )/float64 (*ximg .Width );_cfcb =(_bbee -_dfbac )/2;};if _eeeeb .Resources ==nil {_eeeeb .Resources =NewPdfPageResources ();
};_aggec :=0;_fbaeg :=_cd .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_aggec ));for _eeeeb .Resources .HasXObjectByName (_fbaeg ){_aggec ++;_fbaeg =_cd .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_aggec ));};_dcgg =_eeeeb .AddImageResource (_fbaeg ,ximg );
if _dcgg !=nil {return _dcgg ;};_aggec =0;_gcgfd :=_cd .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_aggec ));for _eeeeb .HasExtGState (_gcgfd ){_aggec ++;_gcgfd =_cd .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_aggec ));};_dcad :=_cd .MakeDict ();
_dcad .Set ("\u0042\u004d",_cd .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_dcad .Set ("\u0043\u0041",_cd .MakeFloat (opt .Alpha ));_dcad .Set ("\u0063\u0061",_cd .MakeFloat (opt .Alpha ));_dcgg =_eeeeb .AddExtGState (_gcgfd ,_dcad );if _dcgg !=nil {return _dcgg ;
};_fgggf :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gcgfd ,_dgbea ,_dfbac ,_ggaeeg ,_cfcb ,_fbaeg );
_eeeeb .AddContentStreamByString (_fgggf );return nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_caedf *PdfShading )GetContext ()PdfModel {return _caedf ._cdgf };

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ToPdfObject implements interface PdfModel.
func (_edd *PdfAnnotationRichMedia )ToPdfObject ()_cd .PdfObject {_edd .PdfAnnotation .ToPdfObject ();_bced :=_edd ._fef ;_bbddd :=_bced .PdfObject .(*_cd .PdfObjectDictionary );_bbddd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_bbddd .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_edd .RichMediaSettings );_bbddd .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_edd .RichMediaContent );
return _bced ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bgbaea *PdfShadingType1 )ToPdfObject ()_cd .PdfObject {_bgbaea .PdfShading .ToPdfObject ();_cccda ,_ggga :=_bgbaea .getShadingDict ();if _ggga !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bgbaea .Domain !=nil {_cccda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgbaea .Domain );};if _bgbaea .Matrix !=nil {_cccda .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bgbaea .Matrix );};if _bgbaea .Function !=nil {if len (_bgbaea .Function )==1{_cccda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgbaea .Function [0].ToPdfObject ());
}else {_cead :=_cd .MakeArray ();for _ ,_addeg :=range _bgbaea .Function {_cead .Append (_addeg .ToPdfObject ());};_cccda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cead );};};return _bgbaea ._fdadf ;};func (_dag *PdfReader )newPdfAnnotationLinkFromDict (_gadf *_cd .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bebf :=PdfAnnotationLink {};
_bebf .A =_gadf .Get ("\u0041");_bebf .Dest =_gadf .Get ("\u0044\u0065\u0073\u0074");_bebf .H =_gadf .Get ("\u0048");_bebf .PA =_gadf .Get ("\u0050\u0041");_bebf .QuadPoints =_gadf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bebf .BS =_gadf .Get ("\u0042\u0053");
return &_bebf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_afgf *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_afgf .Base .GetNumComponents ();_gfae :=int (vals [0])*N ;
if _gfae < 0||(_gfae +N -1)>=len (_afgf ._dbga ){return nil ,_ac .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_geda :=_afgf ._dbga [_gfae :_gfae +N ];var _gbgg []float64 ;for _ ,_eefa :=range _geda {_gbgg =append (_gbgg ,float64 (_eefa )/255.0);
};_cgabd ,_aedd :=_afgf .Base .ColorFromFloats (_gbgg );if _aedd !=nil {return nil ,_aedd ;};return _cgabd ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gaec *PdfWriter )SetNamedDestinations (dests _cd .PdfObject )error {if dests ==nil {return nil ;};_dac .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_gaec ._eddc .Set ("\u0044\u0065\u0073t\u0073",dests );return _gaec .addObjects (dests );};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// CustomKeys returns all custom info keys as list.
func (_dfaea *PdfInfo )CustomKeys ()[]string {if _dfaea ._cbef ==nil {return nil ;};_ceeec :=make ([]string ,len (_dfaea ._cbef .Keys ()));for _ ,_gafc :=range _dfaea ._cbef .Keys (){_ceeec =append (_ceeec ,_gafc .String ());};return _ceeec ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_aacg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _aacg .UnderlyingCS .GetNumComponents ();};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_edea *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_cfda :=0.3*_edea .R ()+0.59*_edea .G ()+0.11*_edea .B ();_cfda =_fc .Min (_fc .Max (_cfda ,0.0),1.0);return NewPdfColorDeviceGray (_cfda );};

// BaseFont returns the font's "BaseFont" field.
func (_adae *PdfFont )BaseFont ()string {return _adae .baseFields ()._bgdfc };func _fcdc ()string {_eeef :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _abegb _ccc .Buffer ;for _dfgd :=0;_dfgd < 6;_dfgd ++{_abegb .WriteRune (rune (_eeef [_e .Intn (len (_eeef ))]));};return _abegb .String ();};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cd .PdfObject )(PdfColorspace ,error ){var _eebb *_cd .PdfIndirectObject ;var _aabe *_cd .PdfObjectName ;var _fdcad *_cd .PdfObjectArray ;if _efaad ,_agdge :=obj .(*_cd .PdfIndirectObject );_agdge {_eebb =_efaad ;
};obj =_cd .TraceToDirectObject (obj );switch _fdgb :=obj .(type ){case *_cd .PdfObjectArray :_fdcad =_fdgb ;case *_cd .PdfObjectName :_aabe =_fdgb ;};if _aabe !=nil {switch *_aabe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_dac .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_aabe );return nil ,_aceec ;};};if _fdcad !=nil &&_fdcad .Len ()> 0{var _feag _cd .PdfObject =_eebb ;
if _eebb ==nil {_feag =_fdcad ;};if _gccd ,_bcddc :=_cd .GetName (_fdcad .Get (0));_bcddc {switch _gccd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fdcad .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fdcad .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fdcad .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fdda (_feag );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _cgbggf (_feag );
case "\u004c\u0061\u0062":return _eafg (_feag );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bdag (_feag );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _egcae (_feag );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dbgef (_feag );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fggg (_feag );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cdfa (_feag );default:_dac .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_gccd );
};};};_dac .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cbda :=PdfColorCalGray (grayVal );return &_cbda ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_fcbe *PdfField )IsTerminal ()bool {return len (_fcbe .Kids )==0};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ffefd *PdfReader )GetNameDictionary ()(_cd .PdfObject ,error ){_eeegcf :=_cd .ResolveReference (_ffefd ._bbaed .Get ("\u004e\u0061\u006de\u0073"));if _eeegcf ==nil {return nil ,nil ;};if !_ffefd ._cgeagg {_acfga :=_ffefd .traverseObjectData (_eeegcf );
if _acfga !=nil {return nil ,_acfga ;};};return _eeegcf ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_agbdc :=PdfColorLab {l ,a ,b };return &_agbdc };

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_dcabb *PdfSignature )bool ;Validate (_faegg *PdfSignature ,_eeeec Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_dadabf *PdfSignature )(Hasher ,error );Sign (_ebeeg *PdfSignature ,_cddfg Hasher )error ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_baccg pdfCIDFontType0 )GetCharMetrics (code _cg .CharCode )(_bcd .CharMetrics ,bool ){_ffefc :=_baccg ._agecf ;if _effa ,_eecfa :=_baccg ._ebddf [code ];_eecfa {_ffefc =_effa ;};return _bcd .CharMetrics {Wx :_ffefc },true ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_decce *XObjectImage )GetContainingPdfObject ()_cd .PdfObject {return _decce ._bgda };

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_fece :=NewPdfAnnotation ();_fecf :=&PdfAnnotationWatermark {};_fecf .PdfAnnotation =_fece ;_fece .SetContext (_fecf );return _fecf ;};

// AddImageResource adds an image to the XObject resources.
func (_bfec *PdfPage )AddImageResource (name _cd .PdfObjectName ,ximg *XObjectImage )error {var _dacbc *_cd .PdfObjectDictionary ;if _bfec .Resources .XObject ==nil {_dacbc =_cd .MakeDict ();_bfec .Resources .XObject =_dacbc ;}else {var _adfgg bool ;_dacbc ,_adfgg =(_bfec .Resources .XObject ).(*_cd .PdfObjectDictionary );
if !_adfgg {return _ac .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dacbc .Set (name ,ximg .ToPdfObject ());return nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_dgd :=&PdfAction {};_dgd ._cea =_cd .MakeIndirectObject (_cd .MakeDict ());return _dgd ;};func (_fcecg *pdfFontType0 )bytesToCharcodes (_fddd []byte )([]_cg .CharCode ,bool ){if _fcecg ._cdaag ==nil {return nil ,false ;
};_fcdad ,_daedc :=_fcecg ._cdaag .BytesToCharcodes (_fddd );if !_daedc {return nil ,false ;};_cbcdd :=make ([]_cg .CharCode ,len (_fcdad ));for _ddcgc ,_fgbg :=range _fcdad {_cbcdd [_ddcgc ]=_cg .CharCode (_fgbg );};return _cbcdd ,true ;};

// PdfVersion returns version of the PDF file.
func (_bgae *PdfReader )PdfVersion ()_cd .Version {return _bgae ._agbbba .PdfVersion ()};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_agcaa *XObjectForm )GetContainingPdfObject ()_cd .PdfObject {return _agcaa ._cbbga };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cd .PdfObject ;T _cd .PdfObject ;Operation _cd .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dbc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_ega *PdfActionSetOCGState )ToPdfObject ()_cd .PdfObject {_ega .PdfAction .ToPdfObject ();_dgf :=_ega ._cea ;_fgf :=_dgf .PdfObject .(*_cd .PdfObjectDictionary );_fgf .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeSetOCGState )));_fgf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_ega .State );
_fgf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_ega .PreserveRB );return _dgf ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ebbdg *PdfWriter )SetPageLabels (pageLabels _cd .PdfObject )error {if pageLabels ==nil {return nil ;};_dac .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_ebbdg ._eddc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _ebbdg .addObjects (pageLabels );};

// SetShadingByName sets a shading resource specified by keyName.
func (_cffeg *PdfPageResources )SetShadingByName (keyName _cd .PdfObjectName ,shadingObj _cd .PdfObject )error {if _cffeg .Shading ==nil {_cffeg .Shading =_cd .MakeDict ();};_aabb ,_effbbb :=_cffeg .Shading .(*_cd .PdfObjectDictionary );if !_effbbb {return _cd .ErrTypeError ;
};_aabb .Set (keyName ,shadingObj );return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cd .PdfObject ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cd .PdfObjectInteger ;BitsPerComponent *_cd .PdfObjectInteger ;BitsPerFlag *_cd .PdfObjectInteger ;Decode *_cd .PdfObjectArray ;Function []PdfFunction ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_edaaf *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_fagdb ,_fedgf :=_cd .GetDict (_edaaf ._eddc .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fedgf {_fagdb =_cd .MakeDict ();_edaaf ._eddc .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_fagdb );
};_eebea ,_fedgf :=_cd .GetDict (_fagdb .Get (_cd .PdfObjectName (extName )));if !_fedgf {_eebea =_cd .MakeDict ();_fagdb .Set (_cd .PdfObjectName (extName ),_eebea );};if _ffabe ,_ :=_cd .GetNameVal (_eebea .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ffabe !=baseVersion {_eebea .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cd .MakeName (baseVersion ));};if _aeggf ,_ :=_cd .GetIntVal (_eebea .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_aeggf !=extLevel {_eebea .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cd .MakeInteger (int64 (extLevel )));};};type pdfFontSimple struct{fontCommon ;_feeb *_cd .PdfIndirectObject ;_fafag map[_cg .CharCode ]float64 ;
_acgfg _cg .TextEncoder ;_becba _cg .TextEncoder ;_gbggb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cd .PdfObject ;LastChar _cd .PdfObject ;Widths _cd .PdfObject ;Encoding _cd .PdfObject ;_caed *_bcd .RuneCharSafeMap ;};func (_dgbbe *pdfFontSimple )getFontEncoding ()(_gccbce string ,_dbeg map[_cg .CharCode ]_cg .GlyphName ,_caffg error ){_gccbce ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _degd ,_faab :=_eaba [_dgbbe ._bgdfc ];_faab {_gccbce =_degd ;}else if _dgbbe .fontFlags ()&_daee !=0{for _aacge ,_bfcf :=range _eaba {if _fg .Contains (_dgbbe ._bgdfc ,_aacge ){_gccbce =_bfcf ;break ;};};};if _dgbbe .Encoding ==nil {return _gccbce ,nil ,nil ;
};switch _bgffg :=_dgbbe .Encoding .(type ){case *_cd .PdfObjectName :return string (*_bgffg ),nil ,nil ;case *_cd .PdfObjectDictionary :_cdcgg ,_egddb :=_cd .GetName (_bgffg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _egddb {_gccbce =_cdcgg .String ();};if _gbceg :=_bgffg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_gbceg !=nil {_beced ,_adfe :=_cd .GetArray (_gbceg );if !_adfe {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_bgffg ,_bgffg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cd .ErrTypeError ;};_dbeg ,_caffg =_cg .FromFontDifferences (_beced );};return _gccbce ,_dbeg ,_caffg ;default:_dac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_dgbbe .Encoding ,_dgbbe .Encoding );
return "",nil ,_cd .ErrTypeError ;};};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_bggcd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ebbgf []*PdfField ;_fbadd :=map[*_cd .PdfIndirectObject ]struct{}{};for _ ,_eace :=range _bggcd .PageList {_efcbg ,_bgaee :=_eace .GetAnnotations ();if _bgaee !=nil {return _bgaee ;
};for _ ,_bgdfca :=range _efcbg {var _dgda *PdfField ;switch _aedaf :=_bgdfca .GetContext ().(type ){case *PdfAnnotationWidget :if _aedaf ._edb !=nil {_dgda =_aedaf ._edb ;break ;};if _eafe ,_gfaa :=_cd .GetIndirect (_aedaf .Parent );_gfaa {_dgda ,_bgaee =_bggcd .newPdfFieldFromIndirectObject (_eafe ,nil );
if _bgaee ==nil {break ;};_dac .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eafe ,_bgaee );
};if _aedaf ._fef !=nil {_dgda ,_bgaee =_bggcd .newPdfFieldFromIndirectObject (_aedaf ._fef ,nil );if _bgaee ==nil {break ;};_dac .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_aedaf ._fef ,_bgaee );
};};if _dgda ==nil {continue ;};if _ ,_ebcg :=_fbadd [_dgda ._ebfdd ];_ebcg {continue ;};_fbadd [_dgda ._ebfdd ]=struct{}{};_ebbgf =append (_ebbgf ,_dgda );};};if len (_ebbgf )==0{return nil ;};if _bggcd .AcroForm ==nil {_bggcd .AcroForm =NewPdfAcroForm ();
};_bggcd .AcroForm .Fields =&_ebbgf ;return nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bdbfd *_cd .PdfIndirectObject ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_edgb *BorderStyle )GetPdfName ()string {switch *_edgb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// SetDecode sets the decode image float slice.
func (_gfcbf *Image )SetDecode (decode []float64 ){_gfcbf ._ddfef =decode };func _eaad (_ccegb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_ccegb }};

// ToPdfObject implements interface PdfModel.
func (_bdeg *PdfAnnotationInk )ToPdfObject ()_cd .PdfObject {_bdeg .PdfAnnotation .ToPdfObject ();_fbcg :=_bdeg ._fef ;_cgcf :=_fbcg .PdfObject .(*_cd .PdfObjectDictionary );_bdeg .PdfAnnotationMarkup .appendToPdfDictionary (_cgcf );_cgcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0049\u006e\u006b"));
_cgcf .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_bdeg .InkList );_cgcf .SetIfNotNil ("\u0042\u0053",_bdeg .BS );return _fbcg ;};

// SetImage updates XObject Image with new image data.
func (_begced *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_begced .Filter .UpdateParams (img .GetParamsDict ());_abfgc ,_egddf :=_begced .Filter .EncodeBytes (img .Data );if _egddf !=nil {return _egddf ;};_begced .Stream =_abfgc ;_fbgff :=img .Width ;
_begced .Width =&_fbgff ;_dagcg :=img .Height ;_begced .Height =&_dagcg ;_decc :=img .BitsPerComponent ;_begced .BitsPerComponent =&_decc ;if cs ==nil {if img .ColorComponents ==1{_begced .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_begced .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_begced .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ac .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_begced .ColorSpace =cs ;};return nil ;
};

// B returns the value of the blue component of the color.
func (_fgcf *PdfColorDeviceRGB )B ()float64 {return _fgcf [2]};func (_aabf *PdfReader )newPdfAnnotationInkFromDict (_cabgf *_cd .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_cggca :=PdfAnnotationInk {};_feg ,_efge :=_aabf .newPdfAnnotationMarkupFromDict (_cabgf );
if _efge !=nil {return nil ,_efge ;};_cggca .PdfAnnotationMarkup =_feg ;_cggca .InkList =_cabgf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_cggca .BS =_cabgf .Get ("\u0042\u0053");return &_cggca ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_dfd :=&PdfAnnotation {};_dfd ._fef =_cd .MakeIndirectObject (_cd .MakeDict ());return _dfd ;};func (_addb *PdfReader )traverseObjectData (_cccf _cd .PdfObject )error {return _cd .ResolveReferencesDeep (_cccf ,_addb ._ebac );
};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cgfe *PdfPage )GetPageAsIndirectObject ()*_cd .PdfIndirectObject {return _cgfe ._adcdb };func (_bbdc *fontFile )loadFromSegments (_abad ,_ddbdg []byte )error {_dac .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_abad ),len (_ddbdg ));
_aedba :=_bbdc .parseASCIIPart (_abad );if _aedba !=nil {return _aedba ;};_dac .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bbdc );if len (_ddbdg )==0{return nil ;};_dac .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bbdc );
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fca *PdfActionResetForm )ToPdfObject ()_cd .PdfObject {_fca .PdfAction .ToPdfObject ();_fad :=_fca ._cea ;_eeec :=_fad .PdfObject .(*_cd .PdfObjectDictionary );_eeec .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeResetForm )));_eeec .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fca .Fields );
_eeec .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fca .Flags );return _fad ;};func (_gfg *PdfReader )newPdfAnnotationScreenFromDict (_abfb *_cd .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ageg :=PdfAnnotationScreen {};_ageg .T =_abfb .Get ("\u0054");
_ageg .MK =_abfb .Get ("\u004d\u004b");_ageg .A =_abfb .Get ("\u0041");_ageg .AA =_abfb .Get ("\u0041\u0041");return &_ageg ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgfdg *PdfShadingType2 )ToPdfObject ()_cd .PdfObject {_fgfdg .PdfShading .ToPdfObject ();_cebdb ,_dcade :=_fgfdg .getShadingDict ();if _dcade !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cebdb ==nil {_dac .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fgfdg .Coords !=nil {_cebdb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fgfdg .Coords );
};if _fgfdg .Domain !=nil {_cebdb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgfdg .Domain );};if _fgfdg .Function !=nil {if len (_fgfdg .Function )==1{_cebdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgfdg .Function [0].ToPdfObject ());
}else {_cdca :=_cd .MakeArray ();for _ ,_gfgff :=range _fgfdg .Function {_cdca .Append (_gfgff .ToPdfObject ());};_cebdb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdca );};};if _fgfdg .Extend !=nil {_cebdb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fgfdg .Extend );
};return _fgfdg ._fdadf ;};func (_fadfa *PdfReader )newPdfOutlineItemFromIndirectObject (_fbfd *_cd .PdfIndirectObject )(*PdfOutlineItem ,error ){_cfgcd ,_beeab :=_fbfd .PdfObject .(*_cd .PdfObjectDictionary );if !_beeab {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_deba :=NewPdfOutlineItem ();_bggc :=_cfgcd .Get ("\u0054\u0069\u0074l\u0065");if _bggc ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_dbddg ,_fbcee :=_cd .GetString (_bggc );if !_fbcee {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bggc );};_deba .Title =_dbddg ;if _agea :=_cfgcd .Get ("\u0043\u006f\u0075n\u0074");
_agea !=nil {_fefgg ,_dbddd :=_agea .(*_cd .PdfObjectInteger );if !_dbddd {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_agea );};_fdab :=int64 (*_fefgg );
_deba .Count =&_fdab ;};if _fgcffc :=_cfgcd .Get ("\u0044\u0065\u0073\u0074");_fgcffc !=nil {_deba .Dest =_cd .ResolveReference (_fgcffc );if !_fadfa ._cgeagg {_fcffd :=_fadfa .traverseObjectData (_deba .Dest );if _fcffd !=nil {return nil ,_fcffd ;};};
};if _gcbb :=_cfgcd .Get ("\u0041");_gcbb !=nil {_deba .A =_cd .ResolveReference (_gcbb );if !_fadfa ._cgeagg {_eadf :=_fadfa .traverseObjectData (_deba .A );if _eadf !=nil {return nil ,_eadf ;};};};if _ggag :=_cfgcd .Get ("\u0053\u0045");_ggag !=nil {_deba .SE =nil ;
};if _cbefc :=_cfgcd .Get ("\u0043");_cbefc !=nil {_deba .C =_cd .ResolveReference (_cbefc );};if _affa :=_cfgcd .Get ("\u0046");_affa !=nil {_deba .F =_cd .ResolveReference (_affa );};return _deba ,nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ColorToRGB converts a CalGray color to an RGB color.
func (_befe *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gccbc ,_dbcb :=color .(*PdfColorCalGray );if !_dbcb {_dac .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ac .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gccbc .Val ();X :=_befe .WhitePoint [0]*_fc .Pow (ANorm ,_befe .Gamma );Y :=_befe .WhitePoint [1]*_fc .Pow (ANorm ,_befe .Gamma );
Z :=_befe .WhitePoint [2]*_fc .Pow (ANorm ,_befe .Gamma );_edad :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ddde :=-0.969256*X +1.875992*Y +0.041556*Z ;_gbg :=0.055648*X +-0.204043*Y +1.057311*Z ;_edad =_fc .Min (_fc .Max (_edad ,0),1.0);_ddde =_fc .Min (_fc .Max (_ddde ,0),1.0);
_gbg =_fc .Min (_fc .Max (_gbg ,0),1.0);return NewPdfColorDeviceRGB (_edad ,_ddde ,_gbg ),nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fead *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cgdg :=func (_bbbea float64 )float64 {if _bbbea >=6.0/29{return _bbbea *_bbbea *_bbbea ;};return 108.0/841*(_bbbea -4/29);};_fgbc :=img ._ddfef ;if len (_fgbc )!=6{_dac .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_fgbc =_fead .DecodeArray ();};_fadff :=_dce .NewReader (img .getBase ());_cbgg :=_agb .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._deff ,img ._ddfef );_egeg :=_dce .NewWriter (_cbgg );_bdcd :=_fc .Pow (2,float64 (img .BitsPerComponent ))-1;
_adaf :=make ([]uint32 ,3);var (_adafc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_cccea ,_bfff ,_dgad float64 ;);for {_adafc =_fadff .ReadSamples (_adaf );if _adafc ==_ag .EOF {break ;}else if _adafc !=nil {return img ,_adafc ;};Ls =float64 (_adaf [0])/_bdcd ;
As =float64 (_adaf [1])/_bdcd ;Bs =float64 (_adaf [2])/_bdcd ;Ls =_agb .LinearInterpolate (Ls ,0.0,1.0,_fgbc [0],_fgbc [1]);As =_agb .LinearInterpolate (As ,0.0,1.0,_fgbc [2],_fgbc [3]);Bs =_agb .LinearInterpolate (Bs ,0.0,1.0,_fgbc [4],_fgbc [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_fead .WhitePoint [0]*_cgdg (L );Y =_fead .WhitePoint [1]*_cgdg (M );Z =_fead .WhitePoint [2]*_cgdg (N );_cccea =3.240479*X +-1.537150*Y +-0.498535*Z ;_bfff =-0.969256*X +1.875992*Y +0.041556*Z ;_dgad =0.055648*X +-0.204043*Y +1.057311*Z ;
_cccea =_fc .Min (_fc .Max (_cccea ,0),1.0);_bfff =_fc .Min (_fc .Max (_bfff ,0),1.0);_dgad =_fc .Min (_fc .Max (_dgad ,0),1.0);_adaf [0]=uint32 (_cccea *_bdcd );_adaf [1]=uint32 (_bfff *_bdcd );_adaf [2]=uint32 (_dgad *_bdcd );if _adafc =_egeg .WriteSamples (_adaf );
_adafc !=nil {return img ,_adafc ;};};return _ebdb (&_cbgg ),nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_cddfd *Image )AlphaMap (mapFunc AlphaMapFunc ){for _febac ,_feadf :=range _cddfd ._deff {_cddfd ._deff [_febac ]=mapFunc (_feadf );};};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cd .PdfObject ;Popup *PdfAnnotationPopup ;CA _cd .PdfObject ;RC _cd .PdfObject ;CreationDate _cd .PdfObject ;IRT _cd .PdfObject ;Subj _cd .PdfObject ;RT _cd .PdfObject ;IT _cd .PdfObject ;ExData _cd .PdfObject ;};

// SetFlag sets the flag for the field.
func (_bdecd *PdfField )SetFlag (flag FieldFlag ){_bdecd .Ff =_cd .MakeInteger (int64 (flag ))};func (_efaeb *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_bbbcf *PdfPageResources )HasColorspaceByName (keyName _cd .PdfObjectName )bool {_bggcdg ,_eacg :=_bbbcf .GetColorspaces ();if _eacg !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eacg );
return false ;};if _bggcdg ==nil {return false ;};_ ,_gecfg :=_bggcdg .Colorspaces [string (keyName )];return _gecfg ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ecbfd *_cd .PdfIndirectObject ;Certs []*_cd .PdfObjectStream ;OCSPs []*_cd .PdfObjectStream ;CRLs []*_cd .PdfObjectStream ;VRI map[string ]*VRI ;_cgae map[string ]*_cd .PdfObjectStream ;_gcfcb map[string ]*_cd .PdfObjectStream ;_cbbe map[string ]*_cd .PdfObjectStream ;
};func (_abgf *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fadeg *PdfShadingType5 )ToPdfObject ()_cd .PdfObject {_fadeg .PdfShading .ToPdfObject ();_gfeed ,_fdbbf :=_fadeg .getShadingDict ();if _fdbbf !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fadeg .BitsPerCoordinate !=nil {_gfeed .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fadeg .BitsPerCoordinate );};if _fadeg .BitsPerComponent !=nil {_gfeed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fadeg .BitsPerComponent );
};if _fadeg .VerticesPerRow !=nil {_gfeed .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fadeg .VerticesPerRow );};if _fadeg .Decode !=nil {_gfeed .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fadeg .Decode );};
if _fadeg .Function !=nil {if len (_fadeg .Function )==1{_gfeed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fadeg .Function [0].ToPdfObject ());}else {_baeag :=_cd .MakeArray ();for _ ,_bcggf :=range _fadeg .Function {_baeag .Append (_bcggf .ToPdfObject ());
};_gfeed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baeag );};};return _fadeg ._fdadf ;};func _bggfc (_ecgff []*_cd .PdfObjectStream )*_cd .PdfObjectArray {if len (_ecgff )==0{return nil ;};_ebdbd :=make ([]_cd .PdfObject ,0,len (_ecgff ));
for _ ,_aaabg :=range _ecgff {_ebdbd =append (_ebdbd ,_aaabg );};return _cd .MakeArray (_ebdbd ...);};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dcgeg DefaultImageHandler )NewGrayImageFromGoImage (goimg _beg .Image )(*Image ,error ){_eeece :=goimg .Bounds ();_geba :=&Image {Width :int64 (_eeece .Dx ()),Height :int64 (_eeece .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bdfaa :=goimg .(type ){case *_beg .Gray :if len (_bdfaa .Pix )!=_eeece .Dx ()*_eeece .Dy (){_befcc ,_daggf :=_agb .GrayConverter .Convert (goimg );
if _daggf !=nil {return nil ,_daggf ;};_geba .Data =_befcc .Pix ();}else {_geba .Data =_bdfaa .Pix ;};case *_beg .Gray16 :_geba .BitsPerComponent =16;if len (_bdfaa .Pix )!=_eeece .Dx ()*_eeece .Dy ()*2{_cccaa ,_cfba :=_agb .Gray16Converter .Convert (goimg );
if _cfba !=nil {return nil ,_cfba ;};_geba .Data =_cccaa .Pix ();}else {_geba .Data =_bdfaa .Pix ;};case _agb .Image :_gfada :=_bdfaa .Base ();if _gfada .ColorComponents ==1{_geba .BitsPerComponent =int64 (_gfada .BitsPerComponent );_geba .Data =_gfada .Data ;
return _geba ,nil ;};_gadbb ,_ccgf :=_agb .GrayConverter .Convert (goimg );if _ccgf !=nil {return nil ,_ccgf ;};_geba .Data =_gadbb .Pix ();default:_begae ,_aaae :=_agb .GrayConverter .Convert (goimg );if _aaae !=nil {return nil ,_aaae ;};_geba .Data =_begae .Pix ();
};return _geba ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dee :=NewPdfAnnotation ();_gff :=&PdfAnnotationFileAttachment {};_gff .PdfAnnotation =_dee ;_gff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dee .SetContext (_gff );return _gff ;};


// GetFontDescriptor returns the font descriptor for `font`.
func (_fcebb PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fcebb ._fedf .getFontDescriptor (),nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_abcbf *_cd .PdfIndirectObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_aacgfd *PdfPageResources )SetPatternByName (keyName _cd .PdfObjectName ,pattern _cd .PdfObject )error {if _aacgfd .Pattern ==nil {_aacgfd .Pattern =_cd .MakeDict ();};_bebda ,_bbgeg :=_aacgfd .Pattern .(*_cd .PdfObjectDictionary );if !_bbgeg {return _cd .ErrTypeError ;
};_bebda .Set (keyName ,pattern );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_fefc *PdfBorderStyle )ToPdfObject ()_cd .PdfObject {_eed :=_cd .MakeDict ();if _fefc ._fcefa !=nil {if _bgfe ,_gga :=_fefc ._fcefa .(*_cd .PdfIndirectObject );_gga {_bgfe .PdfObject =_eed ;};};_eed .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fefc .W !=nil {_eed .Set ("\u0057",_cd .MakeFloat (*_fefc .W ));};if _fefc .S !=nil {_eed .Set ("\u0053",_cd .MakeName (_fefc .S .GetPdfName ()));};if _fefc .D !=nil {_eed .Set ("\u0044",_cd .MakeArrayFromIntegers (*_fefc .D ));};if _fefc ._fcefa !=nil {return _fefc ._fcefa ;
};return _eed ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_bgee *PdfPage )GetContentStreamObjs ()[]_cd .PdfObject {if _bgee .Contents ==nil {return nil ;};_bafff :=_cd .TraceToDirectObject (_bgee .Contents );if _gfdfa ,_feaeb :=_bafff .(*_cd .PdfObjectArray );_feaeb {return _gfdfa .Elements ();};return []_cd .PdfObject {_bafff };
};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_agbcf *PdfPageResources )GetXObjectImageByName (keyName _cd .PdfObjectName )(*XObjectImage ,error ){_gcgfb ,_bbdbe :=_agbcf .GetXObjectByName (keyName );if _gcgfb ==nil {return nil ,nil ;};if _bbdbe !=XObjectTypeImage {return nil ,_ac .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_cggbac ,_eebgd :=NewXObjectImageFromStream (_gcgfb );if _eebgd !=nil {return nil ,_eebgd ;};return _cggbac ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ag .ReadSeeker )(*PdfFont ,error ){const _aebg =_cg .CharCode (32);const _ddda =_cg .CharCode (255);_dadc ,_fccegd :=_ge .ReadAll (r );if _fccegd !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fccegd );
return nil ,_fccegd ;};_feedc ,_fccegd :=_bcd .TtfParse (_ccc .NewReader (_dadc ));if _fccegd !=nil {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_fccegd );
return nil ,_fccegd ;};_bdcgc :=&pdfFontSimple {_fafag :make (map[_cg .CharCode ]float64 ),fontCommon :fontCommon {_ecea :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bdcgc ._acgfg =_cg .NewWinAnsiEncoder ();_bdcgc ._bgdfc =_feedc .PostScriptName ;
_bdcgc .FirstChar =_cd .MakeInteger (int64 (_aebg ));_bdcgc .LastChar =_cd .MakeInteger (int64 (_ddda ));_bfffg :=1000.0/float64 (_feedc .UnitsPerEm );if len (_feedc .Widths )<=0{return nil ,_ac .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfbad :=_bfffg *float64 (_feedc .Widths [0]);_aaeb :=make ([]float64 ,0,_ddda -_aebg +1);for _ggcce :=_aebg ;_ggcce <=_ddda ;_ggcce ++{_gdcad ,_eabgg :=_bdcgc .Encoder ().CharcodeToRune (_ggcce );if !_eabgg {_dac .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ggcce );
_aaeb =append (_aaeb ,_bfbad );continue ;};_fdbg ,_gbbd :=_feedc .Chars [_gdcad ];if !_gbbd {_dac .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_aaeb =append (_aaeb ,_bfbad );continue ;
};_adfad :=_bfffg *float64 (_feedc .Widths [_fdbg ]);_aaeb =append (_aaeb ,_adfad );};_bdcgc .Widths =_cd .MakeIndirectObject (_cd .MakeArrayFromFloats (_aaeb ));if len (_aaeb )< int (_ddda -_aebg +1){_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_aaeb ),255-32+1);
return nil ,_cd .ErrRangeError ;};for _aegd :=_aebg ;_aegd <=_ddda ;_aegd ++{_bdcgc ._fafag [_aegd ]=_aaeb [_aegd -_aebg ];};_bdcgc .Encoding =_cd .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gafbc :=&PdfFontDescriptor {};
_gafbc .FontName =_cd .MakeName (_feedc .PostScriptName );_gafbc .Ascent =_cd .MakeFloat (_bfffg *float64 (_feedc .TypoAscender ));_gafbc .Descent =_cd .MakeFloat (_bfffg *float64 (_feedc .TypoDescender ));_gafbc .CapHeight =_cd .MakeFloat (_bfffg *float64 (_feedc .CapHeight ));
_gafbc .FontBBox =_cd .MakeArrayFromFloats ([]float64 {_bfffg *float64 (_feedc .Xmin ),_bfffg *float64 (_feedc .Ymin ),_bfffg *float64 (_feedc .Xmax ),_bfffg *float64 (_feedc .Ymax )});_gafbc .ItalicAngle =_cd .MakeFloat (_feedc .ItalicAngle );_gafbc .MissingWidth =_cd .MakeFloat (_bfffg *float64 (_feedc .Widths [0]));
_fdfg ,_fccegd :=_cd .MakeStream (_dadc ,_cd .NewFlateEncoder ());if _fccegd !=nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_fccegd );
return nil ,_fccegd ;};_fdfg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cd .MakeInteger (int64 (len (_dadc ))));_gafbc .FontFile2 =_fdfg ;if _feedc .Bold {_gafbc .StemV =_cd .MakeInteger (120);}else {_gafbc .StemV =_cd .MakeInteger (70);
};_ffcca :=_bafa ;if _feedc .IsFixedPitch {_ffcca |=_edcfa ;};if _feedc .ItalicAngle !=0{_ffcca |=_efca ;};_gafbc .Flags =_cd .MakeInteger (int64 (_ffcca ));_bdcgc ._gdegf =_gafbc ;_bbafb :=&PdfFont {_fedf :_bdcgc };return _bbafb ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );
AES_128bit ;AES_256bit ;);

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_bfabe *PdfColorspaceDeviceN )GetNumComponents ()int {return _bfabe .ColorantNames .Len ()};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdede *PdfShadingType6 )ToPdfObject ()_cd .PdfObject {_cdede .PdfShading .ToPdfObject ();_bedcce ,_ggcdf :=_cdede .getShadingDict ();if _ggcdf !=nil {_dac .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdede .BitsPerCoordinate !=nil {_bedcce .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cdede .BitsPerCoordinate );};if _cdede .BitsPerComponent !=nil {_bedcce .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cdede .BitsPerComponent );
};if _cdede .BitsPerFlag !=nil {_bedcce .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cdede .BitsPerFlag );};if _cdede .Decode !=nil {_bedcce .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cdede .Decode );};if _cdede .Function !=nil {if len (_cdede .Function )==1{_bedcce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdede .Function [0].ToPdfObject ());
}else {_agffc :=_cd .MakeArray ();for _ ,_accba :=range _cdede .Function {_agffc .Append (_accba .ToPdfObject ());};_bedcce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_agffc );};};return _cdede ._fdadf ;};

// String returns a string that describes `font`.
func (_acfe *PdfFont )String ()string {_gfee :="";if _acfe ._fedf .Encoder ()!=nil {_gfee =_acfe ._fedf .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_acfe ._fedf ,_acfe .baseFields ().coreString (),_gfee );
};func (_ggfe *PdfReader )newPdfAnnotationFromIndirectObject (_bbde *_cd .PdfIndirectObject )(*PdfAnnotation ,error ){_feed ,_bcf :=_bbde .PdfObject .(*_cd .PdfObjectDictionary );if !_bcf {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ggfe ._bdcga .GetModelFromPrimitive (_feed );model !=nil {_ceec ,_cbc :=model .(*PdfAnnotation );if !_cbc {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _ceec ,nil ;};_bead :=&PdfAnnotation {};_bead ._fef =_bbde ;_ggfe ._bdcga .Register (_feed ,_bead );if _dcge :=_feed .Get ("\u0054\u0079\u0070\u0065");_dcge !=nil {_feea ,_gcfc :=_dcge .(*_cd .PdfObjectName );if !_gcfc {_dac .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dcge );
}else {if *_feea !="\u0041\u006e\u006eo\u0074"{_dac .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_feea );};};};
if _cff :=_feed .Get ("\u0052\u0065\u0063\u0074");_cff !=nil {_bead .Rect =_cff ;};if _ccb :=_feed .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_ccb !=nil {_bead .Contents =_ccb ;};if _bfdb :=_feed .Get ("\u0050");_bfdb !=nil {_bead .P =_bfdb ;
};if _cdfg :=_feed .Get ("\u004e\u004d");_cdfg !=nil {_bead .NM =_cdfg ;};if _fdcf :=_feed .Get ("\u004d");_fdcf !=nil {_bead .M =_fdcf ;};if _gec :=_feed .Get ("\u0046");_gec !=nil {_bead .F =_gec ;};if _cgc :=_feed .Get ("\u0041\u0050");_cgc !=nil {_bead .AP =_cgc ;
};if _caab :=_feed .Get ("\u0041\u0053");_caab !=nil {_bead .AS =_caab ;};if _efb :=_feed .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_efb !=nil {_bead .Border =_efb ;};if _edee :=_feed .Get ("\u0043");_edee !=nil {_bead .C =_edee ;};if _eae :=_feed .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_eae !=nil {_bead .StructParent =_eae ;};if _aee :=_feed .Get ("\u004f\u0043");_aee !=nil {_bead .OC =_aee ;};_fge :=_feed .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fge ==nil {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_bead ._eag =nil ;return _bead ,nil ;};_beb ,_gdae :=_fge .(*_cd .PdfObjectName );if !_gdae {_dac .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fge );
return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fge );};switch *_beb {case "\u0054\u0065\u0078\u0074":_cadf ,_bfbb :=_ggfe .newPdfAnnotationTextFromDict (_feed );
if _bfbb !=nil {return nil ,_bfbb ;};_cadf .PdfAnnotation =_bead ;_bead ._eag =_cadf ;return _bead ,nil ;case "\u004c\u0069\u006e\u006b":_ffad ,_ffg :=_ggfe .newPdfAnnotationLinkFromDict (_feed );if _ffg !=nil {return nil ,_ffg ;};_ffad .PdfAnnotation =_bead ;
_bead ._eag =_ffad ;return _bead ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bcec ,_ffba :=_ggfe .newPdfAnnotationFreeTextFromDict (_feed );if _ffba !=nil {return nil ,_ffba ;};_bcec .PdfAnnotation =_bead ;_bead ._eag =_bcec ;return _bead ,nil ;
case "\u004c\u0069\u006e\u0065":_acb ,_fcdb :=_ggfe .newPdfAnnotationLineFromDict (_feed );if _fcdb !=nil {return nil ,_fcdb ;};_acb .PdfAnnotation =_bead ;_bead ._eag =_acb ;_dac .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bead ,_bead );
_dac .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_acb ,_acb );_dac .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_acb .PdfAnnotationMarkup ,_acb .PdfAnnotationMarkup );
return _bead ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_aff ,_bae :=_ggfe .newPdfAnnotationSquareFromDict (_feed );if _bae !=nil {return nil ,_bae ;};_aff .PdfAnnotation =_bead ;_bead ._eag =_aff ;return _bead ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_eeca ,_cgbg :=_ggfe .newPdfAnnotationCircleFromDict (_feed );
if _cgbg !=nil {return nil ,_cgbg ;};_eeca .PdfAnnotation =_bead ;_bead ._eag =_eeca ;return _bead ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_aeee ,_begc :=_ggfe .newPdfAnnotationPolygonFromDict (_feed );if _begc !=nil {return nil ,_begc ;};_aeee .PdfAnnotation =_bead ;
_bead ._eag =_aeee ;return _bead ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_defb ,_gaef :=_ggfe .newPdfAnnotationPolyLineFromDict (_feed );if _gaef !=nil {return nil ,_gaef ;};_defb .PdfAnnotation =_bead ;_bead ._eag =_defb ;return _bead ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dgb ,_dbd :=_ggfe .newPdfAnnotationHighlightFromDict (_feed );if _dbd !=nil {return nil ,_dbd ;};_dgb .PdfAnnotation =_bead ;_bead ._eag =_dgb ;return _bead ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_bca ,_feecg :=_ggfe .newPdfAnnotationUnderlineFromDict (_feed );
if _feecg !=nil {return nil ,_feecg ;};_bca .PdfAnnotation =_bead ;_bead ._eag =_bca ;return _bead ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_aab ,_cbe :=_ggfe .newPdfAnnotationSquigglyFromDict (_feed );if _cbe !=nil {return nil ,_cbe ;
};_aab .PdfAnnotation =_bead ;_bead ._eag =_aab ;return _bead ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bde ,_ddfc :=_ggfe .newPdfAnnotationStrikeOut (_feed );if _ddfc !=nil {return nil ,_ddfc ;};_bde .PdfAnnotation =_bead ;_bead ._eag =_bde ;
return _bead ,nil ;case "\u0043\u0061\u0072e\u0074":_fgaf ,_bge :=_ggfe .newPdfAnnotationCaretFromDict (_feed );if _bge !=nil {return nil ,_bge ;};_fgaf .PdfAnnotation =_bead ;_bead ._eag =_fgaf ;return _bead ,nil ;case "\u0053\u0074\u0061m\u0070":_facbd ,_acf :=_ggfe .newPdfAnnotationStampFromDict (_feed );
if _acf !=nil {return nil ,_acf ;};_facbd .PdfAnnotation =_bead ;_bead ._eag =_facbd ;return _bead ,nil ;case "\u0049\u006e\u006b":_eefc ,_bebc :=_ggfe .newPdfAnnotationInkFromDict (_feed );if _bebc !=nil {return nil ,_bebc ;};_eefc .PdfAnnotation =_bead ;
_bead ._eag =_eefc ;return _bead ,nil ;case "\u0050\u006f\u0070u\u0070":_agbf ,_eefbd :=_ggfe .newPdfAnnotationPopupFromDict (_feed );if _eefbd !=nil {return nil ,_eefbd ;};_agbf .PdfAnnotation =_bead ;_bead ._eag =_agbf ;return _bead ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_cgbgg ,_bbda :=_ggfe .newPdfAnnotationFileAttachmentFromDict (_feed );
if _bbda !=nil {return nil ,_bbda ;};_cgbgg .PdfAnnotation =_bead ;_bead ._eag =_cgbgg ;return _bead ,nil ;case "\u0053\u006f\u0075n\u0064":_bgb ,_egba :=_ggfe .newPdfAnnotationSoundFromDict (_feed );if _egba !=nil {return nil ,_egba ;};_bgb .PdfAnnotation =_bead ;
_bead ._eag =_bgb ;return _bead ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ceb ,_fgb :=_ggfe .newPdfAnnotationRichMediaFromDict (_feed );if _fgb !=nil {return nil ,_fgb ;};_ceb .PdfAnnotation =_bead ;_bead ._eag =_ceb ;return _bead ,nil ;
case "\u004d\u006f\u0076i\u0065":_cccb ,_gfd :=_ggfe .newPdfAnnotationMovieFromDict (_feed );if _gfd !=nil {return nil ,_gfd ;};_cccb .PdfAnnotation =_bead ;_bead ._eag =_cccb ;return _bead ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_dec ,_fcef :=_ggfe .newPdfAnnotationScreenFromDict (_feed );
if _fcef !=nil {return nil ,_fcef ;};_dec .PdfAnnotation =_bead ;_bead ._eag =_dec ;return _bead ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bfdc ,_bec :=_ggfe .newPdfAnnotationWidgetFromDict (_feed );if _bec !=nil {return nil ,_bec ;};_bfdc .PdfAnnotation =_bead ;
_bead ._eag =_bfdc ;return _bead ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bga ,_bbaf :=_ggfe .newPdfAnnotationPrinterMarkFromDict (_feed );if _bbaf !=nil {return nil ,_bbaf ;};_bga .PdfAnnotation =_bead ;_bead ._eag =_bga ;
return _bead ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fdaa ,_bgeb :=_ggfe .newPdfAnnotationTrapNetFromDict (_feed );if _bgeb !=nil {return nil ,_bgeb ;};_fdaa .PdfAnnotation =_bead ;_bead ._eag =_fdaa ;return _bead ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_eeg ,_cgea :=_ggfe .newPdfAnnotationWatermarkFromDict (_feed );
if _cgea !=nil {return nil ,_cgea ;};_eeg .PdfAnnotation =_bead ;_bead ._eag =_eeg ;return _bead ,nil ;case "\u0033\u0044":_bbg ,_bdef :=_ggfe .newPdfAnnotation3DFromDict (_feed );if _bdef !=nil {return nil ,_bdef ;};_bbg .PdfAnnotation =_bead ;_bead ._eag =_bbg ;
return _bead ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_efc ,_cbee :=_ggfe .newPdfAnnotationProjectionFromDict (_feed );if _cbee !=nil {return nil ,_cbee ;};_efc .PdfAnnotation =_bead ;_bead ._eag =_efc ;return _bead ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_ebd ,_cffb :=_ggfe .newPdfAnnotationRedactFromDict (_feed );if _cffb !=nil {return nil ,_cffb ;};_ebd .PdfAnnotation =_bead ;_bead ._eag =_ebd ;return _bead ,nil ;};_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_beb );
return nil ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_eec :=NewPdfAnnotation ();_ede :=&PdfAnnotationPolygon {};_ede .PdfAnnotation =_eec ;_ede .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eec .SetContext (_ede );return _ede ;};func _fegdg ()_c .Time {_gcebg .Lock ();
defer _gcebg .Unlock ();return _adcgb };

// Encoder returns the font's text encoder.
func (_dddbg pdfCIDFontType2 )Encoder ()_cg .TextEncoder {return _dddbg ._dddfd };func (_gacg *PdfReader )lookupPageByObject (_fggfff _cd .PdfObject )(*PdfPage ,error ){return nil ,_ac .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// Encoder returns the font's text encoder.
func (_ecebb *PdfFont )Encoder ()_cg .TextEncoder {_fefe :=_ecebb .actualFont ();if _fefe ==nil {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ecebb ._fedf );
return nil ;};return _fefe .Encoder ();};func _efefd (_aacag *_cd .PdfObjectStream )(*PdfFunctionType4 ,error ){_fbffe :=&PdfFunctionType4 {};_fbffe ._ffabbc =_aacag ;_febfd :=_aacag .PdfObjectDictionary ;_gggbd ,_ebga :=_cd .TraceToDirectObject (_febfd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cd .PdfObjectArray );
if !_ebga {_dac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gggbd .Len ()%2!=0{_dac .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ac .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bbfga ,_gadcdf :=_gggbd .ToFloat64Array ();
if _gadcdf !=nil {return nil ,_gadcdf ;};_fbffe .Domain =_bbfga ;_gggbd ,_ebga =_cd .TraceToDirectObject (_febfd .Get ("\u0052\u0061\u006eg\u0065")).(*_cd .PdfObjectArray );if _ebga {if _gggbd .Len ()< 0||_gggbd .Len ()%2!=0{return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ggaef ,_bebg :=_gggbd .ToFloat64Array ();if _bebg !=nil {return nil ,_bebg ;};_fbffe .Range =_ggaef ;};_cbccc ,_gadcdf :=_cd .DecodeStream (_aacag );if _gadcdf !=nil {return nil ,_gadcdf ;};_fbffe ._bgcfd =_cbccc ;_dfecb :=_eb .NewPSParser (_cbccc );
_ccfad ,_gadcdf :=_dfecb .Parse ();if _gadcdf !=nil {return nil ,_gadcdf ;};_fbffe .Program =_ccfad ;return _fbffe ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// GetPage returns the PdfPage model for the specified page number.
func (_cegg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cegg ._agbbba .GetCrypter ()!=nil &&!_cegg ._agbbba .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_cegg ._ccacd )< pageNumber {return nil ,_ac .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_defag :=pageNumber -1;if _defag < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_gfdcf :=_cegg .PageList [_defag ];
return _gfdcf ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ddcg :=map[rune ]int {};for _ ,_abgb :=range text {_ddcg [_abgb ]++;};return _ddcg ;};func (_dbdgf *LTV )validateSig (_bgcfg *PdfSignature )error {if _bgcfg ==nil ||_bgcfg .Contents ==nil ||len (_bgcfg .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bgcfg );
};return nil ;};

// Width returns the width of `rect`.
func (_fcgfb *PdfRectangle )Width ()float64 {return _fc .Abs (_fcgfb .Urx -_fcgfb .Llx )};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dfdc PdfModel ;_geeaf _cd .PdfObject ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_beaf *PdfFieldButton )IsCheckbox ()bool {return _beaf .GetType ()==ButtonTypeCheckbox };

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_egea *PdfAcroForm ,_eeff *PdfField ,_ddcfc *PdfAnnotationWidget )(*_cd .PdfObjectDictionary ,error );};func _acaa (_cbgd *PdfPage )map[_cd .PdfObjectName ]_cd .PdfObject {_facbf :=make (map[_cd .PdfObjectName ]_cd .PdfObject );
if _cbgd .Resources ==nil {return _facbf ;};if _cbgd .Resources .Font !=nil {if _fgabec ,_dggf :=_cd .GetDict (_cbgd .Resources .Font );_dggf {for _ ,_eegf :=range _fgabec .Keys (){_facbf [_eegf ]=_fgabec .Get (_eegf );};};};if _cbgd .Resources .ExtGState !=nil {if _fdaf ,_fcgg :=_cd .GetDict (_cbgd .Resources .ExtGState );
_fcgg {for _ ,_cccbd :=range _fdaf .Keys (){_facbf [_cccbd ]=_fdaf .Get (_cccbd );};};};if _cbgd .Resources .XObject !=nil {if _eebf ,_aafdb :=_cd .GetDict (_cbgd .Resources .XObject );_aafdb {for _ ,_efae :=range _eebf .Keys (){_facbf [_efae ]=_eebf .Get (_efae );
};};};if _cbgd .Resources .Pattern !=nil {if _bcfe ,_ccac :=_cd .GetDict (_cbgd .Resources .Pattern );_ccac {for _ ,_ccff :=range _bcfe .Keys (){_facbf [_ccff ]=_bcfe .Get (_ccff );};};};if _cbgd .Resources .Shading !=nil {if _bbafa ,_fdac :=_cd .GetDict (_cbgd .Resources .Shading );
_fdac {for _ ,_aebb :=range _bbafa .Keys (){_facbf [_aebb ]=_bbafa .Get (_aebb );};};};if _cbgd .Resources .ProcSet !=nil {if _cedg ,_fabf :=_cd .GetDict (_cbgd .Resources .ProcSet );_fabf {for _ ,_ggaf :=range _cedg .Keys (){_facbf [_ggaf ]=_cedg .Get (_ggaf );
};};};if _cbgd .Resources .Properties !=nil {if _fgfa ,_ded :=_cd .GetDict (_cbgd .Resources .Properties );_ded {for _ ,_aafe :=range _fgfa .Keys (){_facbf [_aafe ]=_fgfa .Get (_aafe );};};};return _facbf ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_eabb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cd .PdfObjectArray ;Domain *_cd .PdfObjectArray ;Function []PdfFunction ;Extend *_cd .PdfObjectArray ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cd .PdfObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_gcebg .Lock ();defer _gcebg .Unlock ();_dgddd =author };var _feeabg =_f .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");
func (_ggad *XObjectImage )getParamsDict ()*_cd .PdfObjectDictionary {_cdaee :=_cd .MakeDict ();_cdaee .Set ("\u0057\u0069\u0064t\u0068",_cd .MakeInteger (*_ggad .Width ));_cdaee .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cd .MakeInteger (*_ggad .Height ));
_cdaee .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cd .MakeInteger (int64 (_ggad .ColorSpace .GetNumComponents ())));_cdaee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cd .MakeInteger (*_ggad .BitsPerComponent ));
return _cdaee ;};func (_cgaedc *PdfWriter )writeObject (_cdfbc int ,_eecacg _cd .PdfObject ){_dac .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cdfbc );if _cgdfe ,_geegd :=_eecacg .(*_cd .PdfIndirectObject );
_geegd {_cgaedc ._ccdf [_cdfbc ]=crossReference {Type :1,Offset :_cgaedc ._gefee ,Generation :_cgdfe .GenerationNumber };_cfabfb :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdfbc );if _gead ,_abab :=_cgdfe .PdfObject .(*pdfSignDictionary );
_abab {_gead ._gfded =_cgaedc ._gefee +int64 (len (_cfabfb ));};if _cgdfe .PdfObject ==nil {_dac .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_cgdfe .PdfObject =_cd .MakeNull ();};_cfabfb +=_cgdfe .PdfObject .WriteString ();_cfabfb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cgaedc .writeString (_cfabfb );return ;};if _cfgbe ,_dfcf :=_eecacg .(*_cd .PdfObjectStream );_dfcf {_cgaedc ._ccdf [_cdfbc ]=crossReference {Type :1,Offset :_cgaedc ._gefee ,Generation :_cfgbe .GenerationNumber };
_cacg :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdfbc );_cacg +=_cfgbe .PdfObjectDictionary .WriteString ();_cacg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cgaedc .writeString (_cacg );_cgaedc .writeBytes (_cfgbe .Stream );
_cgaedc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _ccdgd ,_dagbb :=_eecacg .(*_cd .PdfObjectStreams );_dagbb {_cgaedc ._ccdf [_cdfbc ]=crossReference {Type :1,Offset :_cgaedc ._gefee ,Generation :_ccdgd .GenerationNumber };
_gcbaa :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdfbc );var _ddbbfb []string ;var _cddgg string ;var _gbecf int64 ;for _beff ,_beefg :=range _ccdgd .Elements (){_feege ,_gecdc :=_beefg .(*_cd .PdfIndirectObject );if !_gecdc {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cdfbc ,_beefg );
continue ;};_cdafb :=_feege .PdfObject .WriteString ()+"\u0020";_cddgg =_cddgg +_cdafb ;_ddbbfb =append (_ddbbfb ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_feege .ObjectNumber ,_gbecf ));_cgaedc ._ccdf [int (_feege .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cdfbc ,Index :_beff };
_gbecf =_gbecf +int64 (len ([]byte (_cdafb )));};_cegga :=_fg .Join (_ddbbfb ,"\u0020")+"\u0020";_bbgga :=_cd .NewFlateEncoder ();_deacf :=_bbgga .MakeStreamDict ();_deacf .Set (_cd .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cd .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_ecege :=int64 (_ccdgd .Len ());_deacf .Set (_cd .PdfObjectName ("\u004e"),_cd .MakeInteger (_ecege ));_fcbfg :=int64 (len (_cegga ));_deacf .Set (_cd .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cd .MakeInteger (_fcbfg ));_cbcdde ,_ :=_bbgga .EncodeBytes ([]byte (_cegga +_cddgg ));
_afecgb :=int64 (len (_cbcdde ));_deacf .Set (_cd .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cd .MakeInteger (_afecgb ));_gcbaa +=_deacf .WriteString ();_gcbaa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cgaedc .writeString (_gcbaa );
_cgaedc .writeBytes (_cbcdde );_cgaedc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cgaedc .writeString (_eecacg .WriteString ());};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cd .PdfObject ;NewWindow _cd .PdfObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cd .PdfObject ;LE _cd .PdfObject ;BS _cd .PdfObject ;IC _cd .PdfObject ;BE _cd .PdfObject ;IT _cd .PdfObject ;Measure _cd .PdfObject ;};func (_agaebf *PdfPattern )getDict ()*_cd .PdfObjectDictionary {if _cbgdb ,_dgdbec :=_agaebf ._geeaf .(*_cd .PdfIndirectObject );
_dgdbec {_gcbcf ,_eeaba :=_cbgdb .PdfObject .(*_cd .PdfObjectDictionary );if !_eeaba {return nil ;};return _gcbcf ;}else if _ebee ,_bebaa :=_agaebf ._geeaf .(*_cd .PdfObjectStream );_bebaa {return _ebee .PdfObjectDictionary ;}else {_dac .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_agaebf ._geeaf );
return nil ;};};func (_egceg *PdfWriter )updateObjectNumbers (){_cfedb :=_egceg .ObjNumOffset ;_abbf :=0;for _ ,_edebc :=range _egceg ._aaeg {_adbfg :=int64 (_abbf +1+_cfedb );_aeade :=true ;if _egceg ._fgcc {if _ddca ,_eegda :=_egceg ._feafd [_edebc ];
_eegda {_adbfg =_ddca ;_aeade =false ;};};switch _adccd :=_edebc .(type ){case *_cd .PdfIndirectObject :_adccd .ObjectNumber =_adbfg ;_adccd .GenerationNumber =0;case *_cd .PdfObjectStream :_adccd .ObjectNumber =_adbfg ;_adccd .GenerationNumber =0;case *_cd .PdfObjectStreams :_adccd .ObjectNumber =_adbfg ;
_adccd .GenerationNumber =0;default:_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_adccd );continue ;
};if _aeade {_abbf ++;};};_cdcaf :=func (_bggbc _cd .PdfObject )int64 {switch _bfde :=_bggbc .(type ){case *_cd .PdfIndirectObject :return _bfde .ObjectNumber ;case *_cd .PdfObjectStream :return _bfde .ObjectNumber ;case *_cd .PdfObjectStreams :return _bfde .ObjectNumber ;
};return 0;};_gb .SliceStable (_egceg ._aaeg ,func (_eeffe ,_cfeff int )bool {return _cdcaf (_egceg ._aaeg [_eeffe ])< _cdcaf (_egceg ._aaeg [_cfeff ])});};func (_cbfe *PdfReader )newPdfAnnotationPopupFromDict (_bfad *_cd .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_aeac :=PdfAnnotationPopup {};
_aeac .Parent =_bfad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_aeac .Open =_bfad .Get ("\u004f\u0070\u0065\u006e");return &_aeac ,nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_dded *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_cgg *PdfActionJavaScript )ToPdfObject ()_cd .PdfObject {_cgg .PdfAction .ToPdfObject ();_ecdd :=_cgg ._cea ;_bfd :=_ecdd .PdfObject .(*_cd .PdfObjectDictionary );_bfd .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeJavaScript )));_bfd .SetIfNotNil ("\u004a\u0053",_cgg .JS );
return _ecdd ;};var (_gcebg _bc .Mutex ;_dgddd ="";_adcgb _c .Time ;_dgdcd ="";_cdcca ="";_cbba _c .Time ;_ecdg ="";_fgce ="";_gcga ="";);func (_beggg *PdfWriter )hasObject (_ebbfe _cd .PdfObject )bool {_ ,_cabfe :=_beggg ._eebaaf [_ebbfe ];return _cabfe ;
};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_cffa *VRI )ToPdfObject ()*_cd .PdfObjectDictionary {_afbg :=_cd .MakeDict ();_afbg .SetIfNotNil (_cd .PdfObjectName ("\u0043\u0065\u0072\u0074"),_bggfc (_cffa .Cert ));_afbg .SetIfNotNil (_cd .PdfObjectName ("\u004f\u0043\u0053\u0050"),_bggfc (_cffa .OCSP ));
_afbg .SetIfNotNil (_cd .PdfObjectName ("\u0043\u0052\u004c"),_bggfc (_cffa .CRL ));_afbg .SetIfNotNil ("\u0054\u0055",_cffa .TU );_afbg .SetIfNotNil ("\u0054\u0053",_cffa .TS );return _afbg ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_eb .PSProgram ;_cfeg *_eb .PSExecutor ;_bgcfd []byte ;_ffabbc *_cd .PdfObjectStream ;};func _gfccf (_facfa map[_bcd .GID ]int ,_beadf uint16 )*_cd .PdfObjectArray {_aafgg :=&_cd .PdfObjectArray {};
_agbc :=_bcd .GID (_beadf );for _dgbc :=_bcd .GID (0);_dgbc < _agbc ;{_dcece ,_fafe :=_facfa [_dgbc ];if !_fafe {_dgbc ++;continue ;};_aefd :=_dgbc ;for _cgca :=_aefd +1;_cgca < _agbc ;_cgca ++{if _bafg ,_dfdd :=_facfa [_cgca ];!_dfdd ||_dcece !=_bafg {break ;
};_aefd =_cgca ;};_aafgg .Append (_cd .MakeInteger (int64 (_dgbc )));_aafgg .Append (_cd .MakeInteger (int64 (_aefd )));_aafgg .Append (_cd .MakeInteger (int64 (_dcece )));_dgbc =_aefd +1;};return _aafgg ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_edbf *PdfField )ToPdfObject ()_cd .PdfObject {_ebedb :=_edbf ._ebfdd ;_abbe :=_ebedb .PdfObject .(*_cd .PdfObjectDictionary );_abafd :=_cd .MakeArray ();for _ ,_abeg :=range _edbf .Kids {_abafd .Append (_abeg .ToPdfObject ());};for _ ,_aebf :=range _edbf .Annotations {if _aebf ._fef !=_edbf ._ebfdd {_abafd .Append (_aebf .GetContext ().ToPdfObject ());
};};if _edbf .Parent !=nil {_abbe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_edbf .Parent .GetContainingPdfObject ());};if _abafd .Len ()> 0{_abbe .Set ("\u004b\u0069\u0064\u0073",_abafd );};_abbe .SetIfNotNil ("\u0046\u0054",_edbf .FT );_abbe .SetIfNotNil ("\u0054",_edbf .T );
_abbe .SetIfNotNil ("\u0054\u0055",_edbf .TU );_abbe .SetIfNotNil ("\u0054\u004d",_edbf .TM );_abbe .SetIfNotNil ("\u0046\u0066",_edbf .Ff );_abbe .SetIfNotNil ("\u0056",_edbf .V );_abbe .SetIfNotNil ("\u0044\u0056",_edbf .DV );_abbe .SetIfNotNil ("\u0041\u0041",_edbf .AA );
return _ebedb ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gbeb *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gggb :=vals [0];if _gggb < 0.0||_gggb > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acbb :=vals [1];if _acbb < 0.0||_acbb > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdgd :=vals [2];if _gdgd < 0.0||_gdgd > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_afdc :=vals [3];if _afdc < 0.0||_afdc > 1.0{return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbgc :=NewPdfColorDeviceCMYK (_gggb ,_acbb ,_gdgd ,_afdc );return _fbgc ,nil ;};

// PartialName returns the partial name of the field.
func (_dfceg *PdfField )PartialName ()string {_fcbd :="";if _dfceg .T !=nil {_fcbd =_dfceg .T .Decoded ();}else {_dac .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _fcbd ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_feagg *PdfFont )ToUnicode ()string {if _feagg .baseFields ()._deeg ==nil {return "";};return _feagg .baseFields ()._deeg .Name ();};type fontCommon struct{_bgdfc string ;_ecea string ;_cafe string ;_befae _cd .PdfObject ;_deeg *_ef .CMap ;_gdegf *PdfFontDescriptor ;
_fdbef int64 ;};

// ToPdfObject converts the font to a PDF representation.
func (_ceagc *pdfFontType0 )ToPdfObject ()_cd .PdfObject {if _ceagc ._ffdeb ==nil {_ceagc ._ffdeb =&_cd .PdfIndirectObject {};};_fagee :=_ceagc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_ceagc ._ffdeb .PdfObject =_fagee ;if _ceagc .Encoding !=nil {_fagee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ceagc .Encoding );
}else if _ceagc ._cccad !=nil {_fagee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ceagc ._cccad .ToPdfObject ());};if _ceagc .DescendantFont !=nil {_fagee .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cd .MakeArray (_ceagc .DescendantFont .ToPdfObject ()));
};return _ceagc ._ffdeb ;};func _gdggb (_geede *_cd .PdfObjectDictionary )(*PdfTilingPattern ,error ){_agbe :=&PdfTilingPattern {};_ddge :=_geede .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ddge ==nil {_dac .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebgg ,_bgdda :=_ddge .(*_cd .PdfObjectInteger );if !_bgdda {_dac .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddge );
return nil ,_cd .ErrTypeError ;};_agbe .PaintType =_ebgg ;_ddge =_geede .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddge ==nil {_dac .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dbecb ,_bgdda :=_ddge .(*_cd .PdfObjectInteger );if !_bgdda {_dac .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddge );
return nil ,_cd .ErrTypeError ;};_agbe .TilingType =_dbecb ;_ddge =_geede .Get ("\u0042\u0042\u006f\u0078");if _ddge ==nil {_dac .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ddge =_cd .TraceToDirectObject (_ddge );_deded ,_bgdda :=_ddge .(*_cd .PdfObjectArray );if !_bgdda {_dac .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddge );
return nil ,_cd .ErrTypeError ;};_ebegf ,_acfgf :=NewPdfRectangle (*_deded );if _acfgf !=nil {_dac .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_acfgf );return nil ,_acfgf ;};_agbe .BBox =_ebegf ;_ddge =_geede .Get ("\u0058\u0053\u0074e\u0070");
if _ddge ==nil {_dac .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eeeb ,_acfgf :=_cd .GetNumberAsFloat (_ddge );if _acfgf !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eeeb );
return nil ,_acfgf ;};_agbe .XStep =_cd .MakeFloat (_eeeb );_ddge =_geede .Get ("\u0059\u0053\u0074e\u0070");if _ddge ==nil {_dac .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_afbgba ,_acfgf :=_cd .GetNumberAsFloat (_ddge );if _acfgf !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_afbgba );
return nil ,_acfgf ;};_agbe .YStep =_cd .MakeFloat (_afbgba );_ddge =_geede .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ddge ==nil {_dac .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_geede ,_bgdda =_cd .TraceToDirectObject (_ddge ).(*_cd .PdfObjectDictionary );if !_bgdda {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ddge );
};_gdbea ,_acfgf :=NewPdfPageResourcesFromDict (_geede );if _acfgf !=nil {return nil ,_acfgf ;};_agbe .Resources =_gdbea ;if _adgff :=_geede .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_adgff !=nil {_cdcc ,_bbafe :=_adgff .(*_cd .PdfObjectArray );if !_bbafe {_dac .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adgff );
return nil ,_cd .ErrTypeError ;};_agbe .Matrix =_cdcc ;};return _agbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aacff *PdfFilespec )ToPdfObject ()_cd .PdfObject {_babdg :=_aacff .getDict ();_babdg .Clear ();_babdg .Set ("\u0054\u0079\u0070\u0065",_cd .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_babdg .SetIfNotNil ("\u0046\u0053",_aacff .FS );
_babdg .SetIfNotNil ("\u0046",_aacff .F );_babdg .SetIfNotNil ("\u0055\u0046",_aacff .UF );_babdg .SetIfNotNil ("\u0044\u004f\u0053",_aacff .DOS );_babdg .SetIfNotNil ("\u004d\u0061\u0063",_aacff .Mac );_babdg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_aacff .Unix );
_babdg .SetIfNotNil ("\u0049\u0044",_aacff .ID );_babdg .SetIfNotNil ("\u0056",_aacff .V );_babdg .SetIfNotNil ("\u0045\u0046",_aacff .EF );_babdg .SetIfNotNil ("\u0052\u0046",_aacff .RF );_babdg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_aacff .Desc );
_babdg .SetIfNotNil ("\u0043\u0049",_aacff .CI );return _aacff ._gcea ;};func (_gdccg *PdfWriter )seekByName (_bdebe _cd .PdfObject ,_fddfe []string ,_dcefb string )([]_cd .PdfObject ,error ){_dac .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bdebe );
var _fgfe []_cd .PdfObject ;if _cbff ,_acfcc :=_bdebe .(*_cd .PdfIndirectObject );_acfcc {return _gdccg .seekByName (_cbff .PdfObject ,_fddfe ,_dcefb );};if _efaea ,_gcddc :=_bdebe .(*_cd .PdfObjectStream );_gcddc {return _gdccg .seekByName (_efaea .PdfObjectDictionary ,_fddfe ,_dcefb );
};if _eccbb ,_egced :=_bdebe .(*_cd .PdfObjectDictionary );_egced {_dac .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_deedf :=range _eccbb .Keys (){_aecd :=_eccbb .Get (_deedf );if string (_deedf )==_dcefb {_fgfe =append (_fgfe ,_aecd );};for _ ,_dcfea :=range _fddfe {if string (_deedf )==_dcfea {_dac .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_dcfea );
_dfdge ,_ebdg :=_gdccg .seekByName (_aecd ,_fddfe ,_dcefb );if _ebdg !=nil {return _fgfe ,_ebdg ;};_fgfe =append (_fgfe ,_dfdge ...);break ;};};};return _fgfe ,nil ;};return _fgfe ,nil ;};var (ErrRequiredAttributeMissing =_ac .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ac .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_aceec =_ac .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ac .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ac .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_dg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cd .ErrNotSupported );ErrType1CFontNotSupported =_dg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cd .ErrNotSupported );
ErrType3FontNotSupported =_dg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cd .ErrNotSupported );
ErrTTCmapNotSupported =_dg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cd .ErrNotSupported );
ErrSignNotEnoughSpace =_dg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_dg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// DecodeArray returns the component range values for the Separation colorspace.
func (_gecde *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ag .ReadSeeker )(*PdfReader ,error ){const _bebbf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _adgae (rs ,&ReaderOpts {},false ,_bebbf );};func _adgae (_abdge _ag .ReadSeeker ,_cdbfb *ReaderOpts ,_aceea bool ,_cfaac string )(*PdfReader ,error ){if _cdbfb ==nil {_cdbfb =NewReaderOpts ();
};_aaabc :=&PdfReader {_cgff :_abdge ,_ebac :map[_cd .PdfObject ]struct{}{},_bdcga :_dcdbg (),_cgeagg :_cdbfb .LazyLoad };_feeab ,_ffbb :=_becad ("\u0072");if _ffbb !=nil {return nil ,_ffbb ;};_ffbb =_ee .Track (_feeab ,_cfaac );if _ffbb !=nil {return nil ,_ffbb ;
};_aaabc ._fbdcg =_feeab ;_gfagc ,_ffbb :=_cd .NewParser (_abdge );if _ffbb !=nil {return nil ,_ffbb ;};_aaabc ._agbbba =_gfagc ;_adbge ,_ffbb :=_aaabc .IsEncrypted ();if _ffbb !=nil {return nil ,_ffbb ;};if !_adbge {_ffbb =_aaabc .loadStructure ();if _ffbb !=nil {return nil ,_ffbb ;
};}else if _aceea {_abbc ,_aeae :=_aaabc .Decrypt ([]byte (_cdbfb .Password ));if _aeae !=nil {return nil ,_aeae ;};if !_abbc {return nil ,_ac .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _aaabc ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_adea *PdfFunctionType0 )ToPdfObject ()_cd .PdfObject {if _adea ._gefa ==nil {_adea ._gefa =&_cd .PdfObjectStream {};};_cebf :=_cd .MakeDict ();_cebf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cd .MakeInteger (0));
_dabae :=&_cd .PdfObjectArray {};for _ ,_eddfg :=range _adea .Domain {_dabae .Append (_cd .MakeFloat (_eddfg ));};_cebf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dabae );_cdeb :=&_cd .PdfObjectArray {};for _ ,_cefe :=range _adea .Range {_cdeb .Append (_cd .MakeFloat (_cefe ));
};_cebf .Set ("\u0052\u0061\u006eg\u0065",_cdeb );_deacd :=&_cd .PdfObjectArray {};for _ ,_fbbf :=range _adea .Size {_deacd .Append (_cd .MakeInteger (int64 (_fbbf )));};_cebf .Set ("\u0053\u0069\u007a\u0065",_deacd );_cebf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cd .MakeInteger (int64 (_adea .BitsPerSample )));
if _adea .Order !=1{_cebf .Set ("\u004f\u0072\u0064e\u0072",_cd .MakeInteger (int64 (_adea .Order )));};_cebf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cd .MakeInteger (int64 (len (_adea ._beacf ))));_adea ._gefa .Stream =_adea ._beacf ;_adea ._gefa .PdfObjectDictionary =_cebf ;
return _adea ._gefa ;};

// GetCerts returns the signature certificate chain.
func (_fefdg *PdfSignature )GetCerts ()([]*_gc .Certificate ,error ){var _daebf []func ()([]*_gc .Certificate ,error );switch _gcag ,_ :=_cd .GetNameVal (_fefdg .SubFilter );_gcag {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_daebf =append (_daebf ,_fefdg .extractChainFromPKCS7 ,_fefdg .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_daebf =append (_daebf ,_fefdg .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_daebf =append (_daebf ,_fefdg .extractChainFromPKCS7 );
default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_gcag );};for _ ,_gceg :=range _daebf {_fdbf ,_deab :=_gceg ();if _deab !=nil {return nil ,_deab ;
};if len (_fdbf )> 0{return _fdbf ,nil ;};};return nil ,ErrSignNoCertificates ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cd .PdfIndirectObject )*PdfOutlineItem {_cbege :=PdfOutlineItem {};_cbege ._aaaag =&_cbege ;_cbege .Title =_cd .MakeString (title );_becbe :=_cd .MakeArray ();_becbe .Append (page );_becbe .Append (_cd .MakeName ("\u0046\u0069\u0074"));
_cbege .Dest =_becbe ;return &_cbege ;};func (_dcbb *pdfFontType0 )baseFields ()*fontCommon {return &_dcbb .fontCommon };

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_fcgge *modelManager )GetModelFromPrimitive (primitive _cd .PdfObject )PdfModel {model ,_bagcf :=_fcgge ._aaadc [primitive ];if !_bagcf {return nil ;};return model ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gggde *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gggde ._bfecb =outlineTree };

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_cffgd *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_abae *_cd .PdfIndirectObject ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ebfef :=&PdfBorderStyle {};return _ebfef };func (_fcga *PdfWriter )copyObjects (){_accc :=make (map[_cd .PdfObject ]_cd .PdfObject );_cfecc :=make ([]_cd .PdfObject ,0,len (_fcga ._aaeg ));_bcefb :=make (map[_cd .PdfObject ]struct{},len (_fcga ._aaeg ));
_abefg :=make (map[_cd .PdfObject ]struct{});for _ ,_aege :=range _fcga ._aaeg {_fecfc :=_fcga .copyObject (_aege ,_accc ,_abefg ,false );if _ ,_agede :=_abefg [_aege ];_agede {continue ;};_cfecc =append (_cfecc ,_fecfc );_bcefb [_fecfc ]=struct{}{};};
_fcga ._aaeg =_cfecc ;_fcga ._eebaaf =_bcefb ;_fcga ._gcfga =_fcga .copyObject (_fcga ._gcfga ,_accc ,nil ,false ).(*_cd .PdfIndirectObject );_fcga ._ddcdg =_fcga .copyObject (_fcga ._ddcdg ,_accc ,nil ,false ).(*_cd .PdfIndirectObject );if _fcga ._ggfeb !=nil {_fcga ._ggfeb =_fcga .copyObject (_fcga ._ggfeb ,_accc ,nil ,false ).(*_cd .PdfIndirectObject );
};if _fcga ._fgcc {_fbdd :=make (map[_cd .PdfObject ]int64 );for _fabdg ,_ccaee :=range _fcga ._feafd {if _bafaa ,_ecefb :=_accc [_fabdg ];_ecefb {_fbdd [_bafaa ]=_ccaee ;}else {_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_fcga ._feafd =_fbdd ;};};

// GetContainingPdfObject implements interface PdfModel.
func (_fggf *PdfAnnotation )GetContainingPdfObject ()_cd .PdfObject {return _fggf ._fef };

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_bbbf *PdfPageResources )AddExtGState (gsName _cd .PdfObjectName ,gsDict _cd .PdfObject )error {if _bbbf .ExtGState ==nil {_bbbf .ExtGState =_cd .MakeDict ();};_cegdd :=_bbbf .ExtGState ;_bcgac ,_dddd :=_cd .TraceToDirectObject (_cegdd ).(*_cd .PdfObjectDictionary );
if !_dddd {_dac .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_cegdd ,_cd .TraceToDirectObject (_cegdd ));
return _cd .ErrTypeError ;};_bcgac .Set (gsName ,gsDict );return nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_gadd :=NewPdfAnnotation ();_egbd :=&PdfAnnotationLine {};_egbd .PdfAnnotation =_gadd ;_egbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gadd .SetContext (_egbd );return _egbd ;};type pdfFontType0 struct{fontCommon ;
_ffdeb *_cd .PdfIndirectObject ;_cccad _cg .TextEncoder ;Encoding _cd .PdfObject ;DescendantFont *PdfFont ;_cdaag *_ef .CMap ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_cdfdb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdfdb .Base ==nil {return nil ,_ac .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cdfdb .Base .ColorToRGB (color );};func _ebdb (_acfag *_agb .ImageBase )(_eged Image ){_eged .Width =int64 (_acfag .Width );_eged .Height =int64 (_acfag .Height );_eged .BitsPerComponent =int64 (_acfag .BitsPerComponent );_eged .ColorComponents =_acfag .ColorComponents ;
_eged .Data =_acfag .Data ;_eged ._ddfef =_acfag .Decode ;_eged ._deff =_acfag .Alpha ;return _eged ;};

// RemovePage removes a page by number.
func (_cdae *PdfAppender )RemovePage (pageNum int ){_ebbb :=pageNum -1;_cdae ._edc =append (_cdae ._edc [0:_ebbb ],_cdae ._edc [pageNum :]...);};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_gba :=NewPdfAnnotation ();_fab :=&PdfAnnotationRedact {};_fab .PdfAnnotation =_gba ;_fab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gba .SetContext (_fab );return _fab ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_deef *PdfFont )GetCharMetrics (code _cg .CharCode )(CharMetrics ,bool ){var _fgcba _bcd .CharMetrics ;switch _adecfg :=_deef ._fedf .(type ){case *pdfFontSimple :if _begcc ,_feeaf :=_adecfg .GetCharMetrics (code );_feeaf {return _begcc ,_feeaf ;
};case *pdfFontType0 :if _fdge ,_cdag :=_adecfg .GetCharMetrics (code );_cdag {return _fdge ,_cdag ;};case *pdfCIDFontType0 :if _dage ,_ffgea :=_adecfg .GetCharMetrics (code );_ffgea {return _dage ,_ffgea ;};case *pdfCIDFontType2 :if _gbed ,_dfdbd :=_adecfg .GetCharMetrics (code );
_dfdbd {return _gbed ,_dfdbd ;};case *pdfFontType3 :if _bebe ,_aedee :=_adecfg .GetCharMetrics (code );_aedee {return _bebe ,_aedee ;};default:_dac .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_deef ._fedf );
return _fgcba ,false ;};if _eegcd ,_dgcbg :=_deef .GetFontDescriptor ();_dgcbg ==nil &&_eegcd !=nil {return _bcd .CharMetrics {Wx :_eegcd ._bedg },true ;};_dac .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_deef );
return _fgcba ,false ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fgafdd :=&XObjectForm {};_bgbcda :=&_cd .PdfObjectStream {};_bgbcda .PdfObjectDictionary =_cd .MakeDict ();_fgafdd ._cbbga =_bgbcda ;return _fgafdd ;};func _eddea (_aebfb *_cd .PdfObjectStream )(*PdfFunctionType0 ,error ){_bbffc :=&PdfFunctionType0 {};
_bbffc ._gefa =_aebfb ;_fgdb :=_aebfb .PdfObjectDictionary ;_gdgbff ,_gegaf :=_cd .TraceToDirectObject (_fgdb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cd .PdfObjectArray );if !_gegaf {_dac .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gdgbff .Len ()< 0||_gdgbff .Len ()%2!=0{_dac .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ac .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bbffc .NumInputs =_gdgbff .Len ()/2;_eegb ,_baffa :=_gdgbff .ToFloat64Array ();if _baffa !=nil {return nil ,_baffa ;};_bbffc .Domain =_eegb ;
_gdgbff ,_gegaf =_cd .TraceToDirectObject (_fgdb .Get ("\u0052\u0061\u006eg\u0065")).(*_cd .PdfObjectArray );if !_gegaf {_dac .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gdgbff .Len ()< 0||_gdgbff .Len ()%2!=0{return nil ,_ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_bbffc .NumOutputs =_gdgbff .Len ()/2;_bdbf ,_baffa :=_gdgbff .ToFloat64Array ();if _baffa !=nil {return nil ,_baffa ;
};_bbffc .Range =_bdbf ;_gdgbff ,_gegaf =_cd .TraceToDirectObject (_fgdb .Get ("\u0053\u0069\u007a\u0065")).(*_cd .PdfObjectArray );if !_gegaf {_dac .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_defeb ,_baffa :=_gdgbff .ToIntegerArray ();
if _baffa !=nil {return nil ,_baffa ;};if len (_defeb )!=_bbffc .NumInputs {_dac .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbffc .Size =_defeb ;_bacb ,_gegaf :=_cd .TraceToDirectObject (_fgdb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cd .PdfObjectInteger );
if !_gegaf {_dac .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ac .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_bacb !=1&&*_bacb !=2&&*_bacb !=4&&*_bacb !=8&&*_bacb !=12&&*_bacb !=16&&*_bacb !=24&&*_bacb !=32{_dac .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_bacb );
return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbffc .BitsPerSample =int (*_bacb );_bbffc .Order =1;_fbgfc ,_gegaf :=_cd .TraceToDirectObject (_fgdb .Get ("\u004f\u0072\u0064e\u0072")).(*_cd .PdfObjectInteger );
if _gegaf {if *_fbgfc !=1&&*_fbgfc !=3{_dac .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_fbgfc );return nil ,_ac .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbffc .Order =int (*_fbgfc );
};_gdgbff ,_gegaf =_cd .TraceToDirectObject (_fgdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cd .PdfObjectArray );if _gegaf {_agdf ,_deacc :=_gdgbff .ToFloat64Array ();if _deacc !=nil {return nil ,_deacc ;};_bbffc .Encode =_agdf ;};_gdgbff ,_gegaf =_cd .TraceToDirectObject (_fgdb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cd .PdfObjectArray );
if _gegaf {_ffeb ,_ccgad :=_gdgbff .ToFloat64Array ();if _ccgad !=nil {return nil ,_ccgad ;};_bbffc .Decode =_ffeb ;};_bafgd ,_baffa :=_cd .DecodeStream (_aebfb );if _baffa !=nil {return nil ,_baffa ;};_bbffc ._beacf =_bafgd ;return _bbffc ,nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_baegf []_cd .PdfObject )([]_cd .PdfObject ,error );};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_ccfcc *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _cbcb []*PdfField ;if _ccfcc .AcroForm !=nil {_cbcb =_ccfcc .AcroForm .AllFields ();};_ageee :=make (map[*PdfField ]struct{},len (_cbcb ));for _ ,_fceaa :=range _cbcb {_ageee [_fceaa ]=struct{}{};
};for _ ,_cfgcc :=range _ccfcc .PageList {_ddedc ,_cdbab :=_cfgcc .GetAnnotations ();if _cdbab !=nil {return false ,_cdbab ;};for _ ,_daddd :=range _ddedc {_eagaf ,_dacge :=_daddd .GetContext ().(*PdfAnnotationWidget );if !_dacge {continue ;};_cgdd :=_eagaf .Field ();
if _cgdd ==nil {return true ,nil ;};if _ ,_dgbaa :=_ageee [_cgdd ];!_dgbaa {return true ,nil ;};};};return false ,nil ;};func _ace (_ceed _cd .PdfObject )(*PdfFilespec ,error ){if _ceed ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ceed );};


// GetCustomInfo returns a custom info value for the specified name.
func (_defc *PdfInfo )GetCustomInfo (name string )*_cd .PdfObjectString {var _dabbe *_cd .PdfObjectString ;if _defc ._cbef ==nil {return _dabbe ;};if _edaac ,_gfcd :=_defc ._cbef .Get (*_cd .MakeName (name )).(*_cd .PdfObjectString );_gfcd {_dabbe =_edaac ;
};return _dabbe ;};func _dagga (_fffe _cd .PdfObject ,_deecd *PdfReader )(*OutlineDest ,error ){_afecg ,_cedd :=_cd .GetArray (_fffe );if !_cedd {return nil ,_ac .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_cagbe :=_afecg .Len ();if _cagbe < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_cagbe );
};_cggbg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_cdbe :=_afecg .Get (0);if _ggcbb ,_affgd :=_cd .GetIndirect (_cdbe );_affgd {if _ ,_eaega ,_bfdce :=_deecd .PageFromIndirectObject (_ggcbb );_bfdce ==nil {_cggbg .Page =int64 (_eaega -1);}else {_dac .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ggcbb );
};_cggbg .PageObj =_ggcbb ;}else if _feece ,_acfc :=_cd .GetIntVal (_cdbe );_acfc {if _feece >=0&&_feece < len (_deecd .PageList ){_cggbg .PageObj =_deecd .PageList [_feece ].GetPageAsIndirectObject ();}else {_dac .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_feece );
};_cggbg .Page =int64 (_feece );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_cdbe );};_beegc ,_cedd :=_cd .GetNameVal (_afecg .Get (1));
if !_cedd {_dac .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_afecg .Get (1));
return _cggbg ,nil ;};switch _beegc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _cagbe > 2{_cggbg .Y ,_ =_cd .GetNumberAsFloat (_cd .TraceToDirectObject (_afecg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _cagbe > 2{_cggbg .X ,_ =_cd .GetNumberAsFloat (_cd .TraceToDirectObject (_afecg .Get (2)));
};case "\u0058\u0059\u005a":if _cagbe > 4{_cggbg .X ,_ =_cd .GetNumberAsFloat (_cd .TraceToDirectObject (_afecg .Get (2)));_cggbg .Y ,_ =_cd .GetNumberAsFloat (_cd .TraceToDirectObject (_afecg .Get (3)));_cggbg .Zoom ,_ =_cd .GetNumberAsFloat (_cd .TraceToDirectObject (_afecg .Get (4)));
};default:_beegc ="\u0046\u0069\u0074";};_cggbg .Mode =_beegc ;return _cggbg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dace *PdfActionSound )ToPdfObject ()_cd .PdfObject {_dace .PdfAction .ToPdfObject ();_fec :=_dace ._cea ;_efe :=_fec .PdfObject .(*_cd .PdfObjectDictionary );_efe .SetIfNotNil ("\u0053",_cd .MakeName (string (ActionTypeSound )));_efe .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dace .Sound );
_efe .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dace .Volume );_efe .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dace .Synchronous );_efe .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dace .Repeat );
_efe .SetIfNotNil ("\u004d\u0069\u0078",_dace .Mix );return _fec ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_adeac *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _adeac ._egeca !=nil {return _adeac ._egeca ,nil ;};if _adeac .ColorSpace ==nil {return nil ,nil ;};_abea ,_feddc :=_cbbd (_adeac .ColorSpace );if _feddc !=nil {return nil ,_feddc ;
};_adeac ._egeca =_abea ;return _adeac ._egeca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_addd *PdfAnnotationFileAttachment )ToPdfObject ()_cd .PdfObject {_addd .PdfAnnotation .ToPdfObject ();_fege :=_addd ._fef ;_dbdc :=_fege .PdfObject .(*_cd .PdfObjectDictionary );_addd .PdfAnnotationMarkup .appendToPdfDictionary (_dbdc );_dbdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_dbdc .SetIfNotNil ("\u0046\u0053",_addd .FS );_dbdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_addd .Name );return _fege ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cd .PdfObject ;Movie _cd .PdfObject ;A _cd .PdfObject ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_dfddg :=&XObjectImage {};_cabeb :=&_cd .PdfObjectStream {};_cabeb .PdfObjectDictionary =_cd .MakeDict ();_dfddg ._bgda =_cabeb ;return _dfddg ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_ecfga *PdfFieldButton )IsPush ()bool {return _ecfga .GetType ()==ButtonTypePush };func (_ccccf *pdfFontType0 )subsetRegistered ()error {_bgdcb ,_abfg :=_ccccf .DescendantFont ._fedf .(*pdfCIDFontType2 );if !_abfg {_dac .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_ccccf .DescendantFont );
return nil ;};if _bgdcb ==nil {return nil ;};if _bgdcb ._gdegf ==nil {_dac .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _ccccf ._cccad ==nil {_dac .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_acbge ,_abfg :=_cd .GetStream (_bgdcb ._gdegf .FontFile2 );if !_abfg {_dac .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ac .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_acga ,_bbaa :=_cd .DecodeStream (_acbge );if _bbaa !=nil {_dac .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bbaa );
return _bbaa ;};_beab ,_bbaa :=_gee .Parse (_ccc .NewReader (_acga ));if _bbaa !=nil {_dac .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_acbge .Stream ));
return _bbaa ;};var _fadc []rune ;var _fdfb *_gee .Font ;switch _aaed :=_ccccf ._cccad .(type ){case *_cg .TrueTypeFontEncoder :_fadc =_aaed .RegisteredRunes ();_fdfb ,_bbaa =_beab .SubsetKeepRunes (_fadc );if _bbaa !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbaa );
return _bbaa ;};_aaed .SubsetRegistered ();case *_cg .IdentityEncoder :_fadc =_aaed .RegisteredRunes ();_caae :=make ([]_gee .GlyphIndex ,len (_fadc ));for _bacc ,_bfga :=range _fadc {_caae [_bacc ]=_gee .GlyphIndex (_bfga );};_fdfb ,_bbaa =_beab .SubsetKeepIndices (_caae );
if _bbaa !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbaa );return _bbaa ;};case _cg .SimpleEncoder :_abca :=_aaed .Charcodes ();for _ ,_adagg :=range _abca {_aceff ,_ggebb :=_aaed .CharcodeToRune (_adagg );if !_ggebb {_dac .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_adagg );
continue ;};_fadc =append (_fadc ,_aceff );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_ccccf ._cccad );
};var _ggeg _ccc .Buffer ;_bbaa =_fdfb .Write (&_ggeg );if _bbaa !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbaa );return _bbaa ;};if _ccccf ._deeg !=nil {_bfbgca :=make (map[_ef .CharCode ]rune ,len (_fadc ));for _ ,_faae :=range _fadc {_adfdb ,_effbe :=_ccccf ._cccad .RuneToCharcode (_faae );
if !_effbe {continue ;};_bfbgca [_ef .CharCode (_adfdb )]=_faae ;};_ccccf ._deeg =_ef .NewToUnicodeCMap (_bfbgca );};_acbge ,_bbaa =_cd .MakeStream (_ggeg .Bytes (),_cd .NewFlateEncoder ());if _bbaa !=nil {_dac .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbaa );
return _bbaa ;};_acbge .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cd .MakeInteger (int64 (_ggeg .Len ())));if _dgfca ,_edcg :=_cd .GetStream (_bgdcb ._gdegf .FontFile2 );_edcg {*_dgfca =*_acbge ;}else {_bgdcb ._gdegf .FontFile2 =_acbge ;};_dbfc :=_fcdc ();
if len (_ccccf ._bgdfc )> 0{_ccccf ._bgdfc =_afgc (_ccccf ._bgdfc ,_dbfc );};if len (_bgdcb ._bgdfc )> 0{_bgdcb ._bgdfc =_afgc (_bgdcb ._bgdfc ,_dbfc );};if len (_ccccf ._cafe )> 0{_ccccf ._cafe =_afgc (_ccccf ._cafe ,_dbfc );};if _bgdcb ._gdegf !=nil {_afcb ,_cgdba :=_cd .GetName (_bgdcb ._gdegf .FontName );
if _cgdba &&len (_afcb .String ())> 0{_dcgfg :=_afgc (_afcb .String (),_dbfc );_bgdcb ._gdegf .FontName =_cd .MakeName (_dcgfg );};};return nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_aeff *PdfPageResources )GetContainingPdfObject ()_cd .PdfObject {return _aeff ._acae };

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_gcgde *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _gcgde ._dfdc .(*PdfTilingPattern );};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_adfdba *Image )ConvertToBinary ()error {if _adfdba .ColorComponents ==1&&_adfdba .BitsPerComponent ==1{return nil ;};_cddfdf ,_daea :=_adfdba .ToGoImage ();if _daea !=nil {return _daea ;};_egecb ,_daea :=_agb .MonochromeConverter .Convert (_cddfdf );
if _daea !=nil {return _daea ;};_adfdba .Data =_egecb .Base ().Data ;_adfdba ._deff ,_daea =_agb .ScaleAlphaToMonochrome (_adfdba ._deff ,int (_adfdba .Width ),int (_adfdba .Height ));if _daea !=nil {return _daea ;};_adfdba .BitsPerComponent =1;_adfdba .ColorComponents =1;
_adfdba ._ddfef =nil ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_edde *PdfAnnotationTrapNet )ToPdfObject ()_cd .PdfObject {_edde .PdfAnnotation .ToPdfObject ();_ecbg :=_edde ._fef ;_ebfeb :=_ecbg .PdfObject .(*_cd .PdfObjectDictionary );_ebfeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cd .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ecbg ;};

// ToPdfObject implements interface PdfModel.
func (_fcedd *PdfSignature )ToPdfObject ()_cd .PdfObject {_cfeed :=_fcedd ._eeda ;var _afccd *_cd .PdfObjectDictionary ;if _abafdg ,_edgdc :=_cfeed .PdfObject .(*pdfSignDictionary );_edgdc {_afccd =_abafdg .PdfObjectDictionary ;}else {_afccd =_cfeed .PdfObject .(*_cd .PdfObjectDictionary );
};_afccd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fcedd .Type );_afccd .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fcedd .Filter );_afccd .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fcedd .SubFilter );_afccd .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fcedd .ByteRange );
_afccd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fcedd .Contents );_afccd .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fcedd .Cert );_afccd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcedd .Name );_afccd .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fcedd .Reason );
_afccd .SetIfNotNil ("\u004d",_fcedd .M );_afccd .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fcedd .Reference );_afccd .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fcedd .Changes );_afccd .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fcedd .ContactInfo );
return _cfeed ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_afb *PdfAppender )Write (w _ag .Writer )error {if _afb ._fbdg {return _ac .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_cdgd :=NewPdfWriter ();_bcga ,_ccbf :=_cd .GetDict (_cdgd ._gcfcbc );if !_ccbf {return _ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cfc ,_ccbf :=_bcga .Get ("\u004b\u0069\u0064\u0073").(*_cd .PdfObjectArray );if !_ccbf {return _ac .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bffaf ,_ccbf :=_bcga .Get ("\u0043\u006f\u0075n\u0074").(*_cd .PdfObjectInteger );if !_ccbf {return _ac .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_gace :=_afb ._gfbg ._agbbba ;_gadca :=_gace .GetTrailer ();if _gadca ==nil {return _ac .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_egab ,_ccbf :=_cd .GetIndirect (_gadca .Get ("\u0052\u006f\u006f\u0074"));
if !_ccbf {return _ac .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fdcb ,_ccbf :=_cd .GetDict (_egab );if !_ccbf {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_egab ,*_gadca );
return _ac .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_afed :=range _fdcb .Keys (){if _cdgd ._eddc .Get (_afed )==nil {_dfff :=_fdcb .Get (_afed );_cdgd ._eddc .Set (_afed ,_dfff );};};if _afb ._fcaf !=nil {_cdgd ._eddc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_afb ._fcaf .ToPdfObject ());
_afb .updateObjectsDeep (_afb ._fcaf .ToPdfObject (),nil );};if _afb ._ddfd !=nil {_afb .updateObjectsDeep (_afb ._ddfd .ToPdfObject (),nil );_cdgd ._eddc .Set ("\u0044\u0053\u0053",_afb ._ddfd .GetContainingPdfObject ());};if _cdgd ._fbeec < 2{_cdgd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_cdgd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_afb .addNewObject (_cdgd ._gcfga );_afb .addNewObject (_cdgd ._ddcdg );_gded :=false ;if len (_afb ._gfbg .PageList )!=len (_afb ._edc ){_gded =true ;}else {for _eecf :=range _afb ._gfbg .PageList {switch {case _afb ._edc [_eecf ]==_afb ._gfbg .PageList [_eecf ]:case _afb ._edc [_eecf ]==_afb .Reader .PageList [_eecf ]:default:_gded =true ;
};if _gded {break ;};};};if _gded {_afb .updateObjectsDeep (_cdgd ._gcfcbc ,nil );}else {_afb ._ebb [_cdgd ._gcfcbc ]=struct{}{};};_cdgd ._gcfcbc .ObjectNumber =_afb .Reader ._bbed .ObjectNumber ;_afb ._bcg [_cdgd ._gcfcbc ]=_afb .Reader ._bbed .ObjectNumber ;
_bbec :=[]_cd .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_edaf :=range _afb ._edc {_cdfgb :=_edaf .ToPdfObject ();
*_bffaf =*_bffaf +1;if _efdb ,_affb :=_cdfgb .(*_cd .PdfIndirectObject );_affb &&_efdb .GetParser ()==_afb ._gfbg ._agbbba {_cfc .Append (&_efdb .PdfObjectReference );continue ;};if _gbdf ,_gdee :=_cd .GetDict (_cdfgb );_gdee {_gdbb ,_aaca :=_gbdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cd .PdfIndirectObject );
for _aaca {_dac .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gdbb );_bfab ,_fdg :=_gdbb .PdfObject .(*_cd .PdfObjectDictionary );if !_fdg {return _ac .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_efgd :=range _bbec {_dac .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efgd );if _gbdf .Get (_efgd )!=nil {_dac .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _cccc :=_bfab .Get (_efgd );_cccc !=nil {_dac .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_efgd );_gbdf .Set (_efgd ,_cccc );};};_gdbb ,_aaca =_bfab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cd .PdfIndirectObject );
_dac .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gbdf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cdgd ._gcfcbc );};_afb .updateObjectsDeep (_cdfgb ,nil );
_cfc .Append (_cdfgb );};if _ ,_bgbg :=_afb ._egee .Seek (0,_ag .SeekStart );_bgbg !=nil {return _bgbg ;};_dfeg :=make (map[SignatureHandler ]_ag .Writer );_cdgdg :=_cd .MakeArray ();for _ ,_bcdd :=range _afb ._fba {if _eedd ,_bdbg :=_cd .GetIndirect (_bcdd );
_bdbg {if _ecffb ,_aeacf :=_eedd .PdfObject .(*pdfSignDictionary );_aeacf {_eeegc :=*_ecffb ._abcg ;var _bbabg error ;_dfeg [_eeegc ],_bbabg =_eeegc .NewDigest (_ecffb ._bbac );if _bbabg !=nil {return _bbabg ;};_cdgdg .Append (_cd .MakeInteger (0xfffff),_cd .MakeInteger (0xfffff));
};};};if _cdgdg .Len ()> 0{_cdgdg .Append (_cd .MakeInteger (0xfffff),_cd .MakeInteger (0xfffff));};for _ ,_egfd :=range _afb ._fba {if _aegb ,_bccf :=_cd .GetIndirect (_egfd );_bccf {if _ebbg ,_caaa :=_aegb .PdfObject .(*pdfSignDictionary );_caaa {_ebbg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cdgdg );
};};};_gcef :=len (_dfeg )> 0;var _fcfg _ag .Reader =_afb ._egee ;if _gcef {_afda :=make ([]_ag .Writer ,0,len (_dfeg ));for _ ,_edff :=range _dfeg {_afda =append (_afda ,_edff );};_fcfg =_ag .TeeReader (_afb ._egee ,_ag .MultiWriter (_afda ...));};_egec ,_gcb :=_ag .Copy (w ,_fcfg );
if _gcb !=nil {return _gcb ;};if len (_afb ._fba )==0{return nil ;};_cdgd ._edfaa =_egec ;_cdgd .ObjNumOffset =_afb ._ffbd ;_cdgd ._fgcc =true ;_cdgd ._fgeac =_afb ._edef ;_cdgd ._bfbdg =_afb ._ggae ;_cdgd ._decgdg =_afb ._gfa ;_cdgd ._cddaac =_afb ._gfbg .PdfVersion ().Minor ;
_cdgd ._feafd =_afb ._bcg ;_bfbd :=_afb ._beac .GetXrefType ();if _bfbd !=nil {_defe :=*_bfbd ==_cd .XrefTypeObjectStream ;_cdgd ._cccgf =&_defe ;};_cdgd ._eebaaf =map[_cd .PdfObject ]struct{}{};_cdgd ._aaeg =[]_cd .PdfObject {};for _ ,_cfbg :=range _afb ._fba {if _ ,_cfgf :=_afb ._ebb [_cfbg ];
_cfgf {continue ;};_cdgd .addObject (_cfbg );};_bggf :=w ;if _gcef {_bggf =_ccc .NewBuffer (nil );};if _gdgc :=_cdgd .Write (_bggf );_gdgc !=nil {return _gdgc ;};if _gcef {_edbef :=_bggf .(*_ccc .Buffer ).Bytes ();_bdcf :=_cd .MakeArray ();var _gcfce []*pdfSignDictionary ;
var _fbaf int64 ;for _ ,_abgc :=range _cdgd ._aaeg {if _adgc ,_bdge :=_cd .GetIndirect (_abgc );_bdge {if _bdec ,_cagb :=_adgc .PdfObject .(*pdfSignDictionary );_cagb {_gcfce =append (_gcfce ,_bdec );_edba :=_bdec ._gfded +int64 (_bdec ._fgfdef );_bdcf .Append (_cd .MakeInteger (_fbaf ),_cd .MakeInteger (_edba -_fbaf ));
_fbaf =_bdec ._gfded +int64 (_bdec ._bbgdc );};};};_bdcf .Append (_cd .MakeInteger (_fbaf ),_cd .MakeInteger (_egec +int64 (len (_edbef ))-_fbaf ));_cabd :=[]byte (_bdcf .WriteString ());for _ ,_bbbe :=range _gcfce {_fbcb :=int (_bbbe ._gfded -_egec );
for _agff :=_bbbe ._fbgfd ;_agff < _bbbe ._egddg ;_agff ++{_edbef [_fbcb +_agff ]=' ';};_gedb :=_edbef [_fbcb +_bbbe ._fbgfd :_fbcb +_bbbe ._egddg ];copy (_gedb ,_cabd );};var _afeb int ;for _ ,_feecb :=range _gcfce {_fafc :=int (_feecb ._gfded -_egec );
_gfdg :=_edbef [_afeb :_fafc +_feecb ._fgfdef ];_agbfa :=*_feecb ._abcg ;_dfeg [_agbfa ].Write (_gfdg );_afeb =_fafc +_feecb ._bbgdc ;};for _ ,_adeg :=range _gcfce {_cbaf :=_edbef [_afeb :];_gdac :=*_adeg ._abcg ;_dfeg [_gdac ].Write (_cbaf );};for _ ,_ebfd :=range _gcfce {_bfbg :=int (_ebfd ._gfded -_egec );
_cbd :=*_ebfd ._abcg ;_bfbe :=_dfeg [_cbd ];if _bdga :=_cbd .Sign (_ebfd ._bbac ,_bfbe );_bdga !=nil {return _bdga ;};_ebfd ._bbac .ByteRange =_bdcf ;_ffbe :=[]byte (_ebfd ._bbac .Contents .WriteString ());for _eebg :=_ebfd ._fbgfd ;_eebg < _ebfd ._egddg ;
_eebg ++{_edbef [_bfbg +_eebg ]=' ';};for _dgab :=_ebfd ._fgfdef ;_dgab < _ebfd ._bbgdc ;_dgab ++{_edbef [_bfbg +_dgab ]=' ';};_gdgce :=_edbef [_bfbg +_ebfd ._fbgfd :_bfbg +_ebfd ._egddg ];copy (_gdgce ,_cabd );_gdgce =_edbef [_bfbg +_ebfd ._fgfdef :_bfbg +_ebfd ._bbgdc ];
copy (_gdgce ,_ffbe );};_gdeea :=_ccc .NewBuffer (_edbef );_ ,_gcb =_ag .Copy (w ,_gdeea );if _gcb !=nil {return _gcb ;};};_afb ._fbdg =true ;return nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cg .SimpleEncoder ,error ){_ccdgg ,_gdba :=_dgbbg (basefont );if _gdba !=nil {return nil ,nil ,_gdba ;};_adgfg ,_defea :=_ccdgg .Encoder ().(_cg .SimpleEncoder );
if !_defea {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ccdgg .Encoder ());
};_bbgf :=make (map[rune ]_cg .GlyphName );for _adfc :=range alphabet {if _ ,_becec :=_adgfg .RuneToCharcode (_adfc );!_becec {_ ,_bbff :=_ccdgg ._caed .Read (_adfc );if !_bbff {_dac .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_adfc ,_adfc );
continue ;};_cfgdg ,_bbff :=_cg .RuneToGlyph (_adfc );if !_bbff {_dac .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_adfc ,_adfc );continue ;};if len (_bbgf )>=255{return nil ,nil ,_ac .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bbgf [_adfc ]=_cfgdg ;};};var (_cecge []_cg .CharCode ;_aace []_cg .CharCode ;);for _fbcbf :=_cg .CharCode (1);_fbcbf <=0xff;_fbcbf ++{_fcadd ,_caceb :=_adgfg .CharcodeToRune (_fbcbf );if !_caceb {_cecge =append (_cecge ,_fbcbf );continue ;};if _ ,_caceb =alphabet [_fcadd ];
!_caceb {_aace =append (_aace ,_fbcbf );};};_gfbc :=append (_cecge ,_aace ...);if len (_gfbc )< len (_bbgf ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bbgf ),len (_gfbc ));
};_aafgf :=make ([]rune ,0,len (_bbgf ));for _gcfeg :=range _bbgf {_aafgf =append (_aafgf ,_gcfeg );};_gb .Slice (_aafgf ,func (_eeac ,_dcbf int )bool {return _aafgf [_eeac ]< _aafgf [_dcbf ]});_fgcb :=make (map[_cg .CharCode ]_cg .GlyphName ,len (_aafgf ));
for _ ,_cbbg :=range _aafgf {_daaa :=_gfbc [0];_gfbc =_gfbc [1:];_fgcb [_daaa ]=_bbgf [_cbbg ];};_adgfg =_cg .ApplyDifferences (_adgfg ,_fgcb );_ccdgg .SetEncoder (_adgfg );return &PdfFont {_fedf :&_ccdgg },_adgfg ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_gfbag *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cd .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ac .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_bageb :=&PdfColorPattern {};_gdffe ,_dddc :=objects [len (objects )-1].(*_cd .PdfObjectName );if !_dddc {_dac .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_bageb .PatternName =*_gdffe ;if len (objects )> 1{_ccebe :=objects [0:len (objects )-1];if _gfbag .UnderlyingCS ==nil {_dac .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ac .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_bdba ,_geac :=_gfbag .UnderlyingCS .ColorFromPdfObjects (_ccebe );if _geac !=nil {_dac .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_geac );
return nil ,_geac ;};_bageb .Color =_bdba ;};return _bageb ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// Items returns all children outline items.
func (_ecgf *Outline )Items ()[]*OutlineItem {return _ecgf .Entries };

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_dfdb *PdfField )inherit (_ggeb func (*PdfField )bool )(bool ,error ){_afcf :=map[*PdfField ]bool {};_dbcbd :=false ;_dcagf :=_dfdb ;for _dcagf !=nil {if _ ,_bcee :=_afcf [_dcagf ];_bcee {return false ,_ac .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_aaaab :=_ggeb (_dcagf );if _aaaab {_dbcbd =true ;break ;};_afcf [_dcagf ]=true ;_dcagf =_dcagf .Parent ;};return _dbcbd ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cd .PdfObject ;Flags _cd .PdfObject ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _c .Time ;};func _dcdbg ()*modelManager {_ffccaf :=modelManager {};_ffccaf ._bdfb =map[PdfModel ]_cd .PdfObject {};_ffccaf ._aaadc =map[_cd .PdfObject ]PdfModel {};return &_ffccaf ;};func _bacf ()_c .Time {_gcebg .Lock ();defer _gcebg .Unlock ();
return _cbba };