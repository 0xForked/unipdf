//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_g "bufio";_gd "bytes";_b "encoding/binary";_fe "errors";_d "fmt";_bc "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/common/license";_de "github.com/unidoc/unipdf/v3/core";_ab "github.com/unidoc/unipdf/v3/core/security";_ag "github.com/unidoc/unipdf/v3/core/security/crypt";_bd "github.com/unidoc/unipdf/v3/internal/cmap";_cbd "github.com/unidoc/unipdf/v3/internal/imageutil";_bga "github.com/unidoc/unipdf/v3/internal/sampling";_gb "github.com/unidoc/unipdf/v3/internal/textencoding";_eg "github.com/unidoc/unipdf/v3/model/internal/fonts";_cd "github.com/unidoc/unipdf/v3/ps";_dbf "github.com/unidoc/unitype";_a "image";_ec "image/color";_ "image/gif";_ "image/png";_gad "io";_ge "io/ioutil";_bgc "math";_ad "math/rand";_cb "os";_db "regexp";_e "runtime/debug";_gef "sort";_ea "strconv";_c "strings";_ga "time";_fg "unicode";_ff "unicode/utf8";);

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_fefab :=&PdfFilespec {};_fefab ._eddg =_de .MakeIndirectObject (_de .MakeDict ());return _fefab ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bbbf *PdfPage )error ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ecab pdfCIDFontType0 )GetCharMetrics (code _gb .CharCode )(_eg .CharMetrics ,bool ){_eggag :=_ecab ._fefcb ;if _dbbd ,_bebge :=_ecab ._dcegc [code ];_bebge {_eggag =_dbbd ;};return _eg .CharMetrics {Wx :_eggag },true ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _de .PdfObject ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_agda *PdfFieldChoice )ToPdfObject ()_de .PdfObject {_agda .PdfField .ToPdfObject ();_dead :=_agda ._gddee ;_afagg :=_dead .PdfObject .(*_de .PdfObjectDictionary );_afagg .Set ("\u0046\u0054",_de .MakeName ("\u0043\u0068"));if _agda .Opt !=nil {_afagg .Set ("\u004f\u0070\u0074",_agda .Opt );};if _agda .TI !=nil {_afagg .Set ("\u0054\u0049",_agda .TI );};if _agda .I !=nil {_afagg .Set ("\u0049",_agda .I );};return _dead ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_bgfdc *Image )samplesAddPadding (_agfccf []uint32 )[]uint32 {_ccdf :=_cbd .BytesPerLine (int (_bgfdc .Width ),int (_bgfdc .BitsPerComponent ),_bgfdc .ColorComponents )*(8/int (_bgfdc .BitsPerComponent ));_eegdg :=_ccdf *int (_bgfdc .Height );if len (_agfccf )==_eegdg {return _agfccf ;};_dgega :=make ([]uint32 ,_eegdg );_egafc :=int (_bgfdc .Width )*_bgfdc .ColorComponents ;for _eeee :=0;_eeee < int (_bgfdc .Height );_eeee ++{_eacb :=_eeee *int (_bgfdc .Width );_fgcfg :=_eeee *_ccdf ;for _eccba :=0;_eccba < _egafc ;_eccba ++{_dgega [_fgcfg +_eccba ]=_agfccf [_eacb +_eccba ];};};return _dgega ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;BitsPerFlag *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _de .PdfObject ;FS _de .PdfObject ;F _de .PdfObject ;UF _de .PdfObject ;DOS _de .PdfObject ;Mac _de .PdfObject ;Unix _de .PdfObject ;ID _de .PdfObject ;V _de .PdfObject ;EF _de .PdfObject ;RF _de .PdfObject ;Desc _de .PdfObject ;CI _de .PdfObject ;_eddg _de .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gad .ReadSeeker )(*PdfReader ,error ){_acdce :=&PdfReader {_dceac :rs ,_dcgaff :map[_de .PdfObject ]struct{}{},_gafgf :_ecfe (),_daceb :false };_gecff ,_cbcad :=_de .NewParser (rs );if _cbcad !=nil {return nil ,_cbcad ;};_acdce ._fabda =_gecff ;_bfeab ,_cbcad :=_acdce .IsEncrypted ();if _cbcad !=nil {return nil ,_cbcad ;};if !_bfeab {_cbcad =_acdce .loadStructure ();if _cbcad !=nil {return nil ,_cbcad ;};};return _acdce ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_abgg *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _cded []_gb .TextEncoder ;if _cgeed :=_abgg .baseFields ()._eegcf ;_cgeed !=nil {_cded =append (_cded ,_gb .NewCMapEncoder ("",nil ,_cgeed ));};if _cdfb :=_abgg .Encoder ();_cdfb !=nil {_cded =append (_cded ,_cdfb );};var _afagd _gd .Buffer ;var _dafg int ;for _ ,_abeb :=range data {var _acde bool ;for _ ,_bacc :=range _cded {if _bacaf :=_bacc .Encode (string (_abeb ));len (_bacaf )> 0{_afagd .Write (_bacaf );_acde =true ;break ;};};if !_acde {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_abeb );_dafg ++;};};if _dafg !=0{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dafg ,_abgg ,_cded );};return _afagd .Bytes (),_dafg ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bgcb *_de .PdfIndirectObject ;};

// PdfVersion returns version of the PDF file.
func (_bdded *PdfReader )PdfVersion ()_de .Version {return _bdded ._fabda .PdfVersion ()};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_de .PdfObjectStream ;Data []byte ;_dgcc *_de .PdfIndirectObject ;_efcg *_de .PdfObjectStream ;};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_adff :=NewPdfAnnotation ();_cbee :=&PdfAnnotationCaret {};_cbee .PdfAnnotation =_adff ;_cbee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adff .SetContext (_cbee );return _cbee ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_adc *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbbg ,_dceg :=color .(*PdfColorDeviceRGB );if !_dceg {_bc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bbbg ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_de .PdfObjectArray ;TI *_de .PdfObjectInteger ;I *_de .PdfObjectArray ;};var (_ecgd =_db .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_dbbbc =_db .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_edffe =_db .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_cadd ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_abced ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_aecee ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cbfe *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbdb :=vals [0];if _dbdb < 0.0||_dbdb > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgefe :=NewPdfColorCalGray (_dbdb );return _cgefe ,nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_cga :=NewPdfAction ();_ead :=&PdfActionGoToE {};_ead .PdfAction =_cga ;_cga .SetContext (_ead );return _ead ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_abdg FieldFlag )Has (fl FieldFlag )bool {return (_abdg .Mask ()&fl .Mask ())> 0};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_cef :=NewPdfAction ();_af :=&PdfActionGoTo3DView {};_af .PdfAction =_cef ;_cef .SetContext (_af );return _af ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dccb _gad .ReadSeeker ;_bdef *_de .PdfParser ;_bge *PdfReader ;Reader *PdfReader ;_ddebe []*PdfPage ;_gdaa *PdfAcroForm ;_dcbdg _de .XrefTable ;_cff int64 ;_gcgg int ;_gbda []_de .PdfObject ;_edec map[_de .PdfObject ]struct{};_gccf map[_de .PdfObject ]int64 ;_cgdb map[_de .PdfObject ]struct{};_bece map[_de .PdfObject ]struct{};_gac int64 ;_agbb bool ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_beggg *PdfFieldButton )SetType (btype ButtonType ){_aaec :=uint32 (0);if _beggg .Ff !=nil {_aaec =uint32 (*_beggg .Ff );};switch btype {case ButtonTypePush :_aaec |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_aaec |=FieldFlagRadio .Mask ();};_beggg .Ff =_de .MakeInteger (int64 (_aaec ));};func (_afec *Image )samplesTrimPadding (_gaea []uint32 )[]uint32 {_gcab :=_afec .ColorComponents *int (_afec .Width )*int (_afec .Height );if len (_gaea )==_gcab {return _gaea ;};_fffa :=make ([]uint32 ,_gcab );_gegceg :=int (_afec .Width )*_afec .ColorComponents ;var _dfec ,_ebbca ,_gfdcg ,_gbbbc int ;_beegg :=_cbd .BytesPerLine (int (_afec .Width ),int (_afec .BitsPerComponent ),_afec .ColorComponents );for _dfec =0;_dfec < int (_afec .Height );_dfec ++{_ebbca =_dfec *int (_afec .Width );_gfdcg =_dfec *_beegg ;for _gbbbc =0;_gbbbc < _gegceg ;_gbbbc ++{_fffa [_ebbca +_gbbbc ]=_gaea [_gfdcg +_gbbbc ];};};return _fffa ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_aecf *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_caga :=&PdfColorPattern {};_ffgg ,_dgag :=objects [len (objects )-1].(*_de .PdfObjectName );if !_dgag {_bc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_caga .PatternName =*_ffgg ;if len (objects )> 1{_acfb :=objects [0:len (objects )-1];if _aecf .UnderlyingCS ==nil {_bc .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_fe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ecag ,_dbebc :=_aecf .UnderlyingCS .ColorFromPdfObjects (_acfb );if _dbebc !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dbebc );return nil ,_dbebc ;};_caga .Color =_ecag ;};return _caga ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_efaf *PdfPageResources )SetShadingByName (keyName _de .PdfObjectName ,shadingObj _de .PdfObject )error {if _efaf .Shading ==nil {_efaf .Shading =_de .MakeDict ();};_abbbd ,_fcfga :=_efaf .Shading .(*_de .PdfObjectDictionary );if !_fcfga {return _de .ErrTypeError ;};_abbbd .Set (keyName ,shadingObj );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccff *PdfAnnotationMovie )ToPdfObject ()_de .PdfObject {_ccff .PdfAnnotation .ToPdfObject ();_afbb :=_ccff ._afa ;_acce :=_afbb .PdfObject .(*_de .PdfObjectDictionary );_acce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u004d\u006f\u0076i\u0065"));_acce .SetIfNotNil ("\u0054",_ccff .T );_acce .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ccff .Movie );_acce .SetIfNotNil ("\u0041",_ccff .A );return _afbb ;};var _gddf ="";

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gcfg *PdfReader )GetIndirectObjectByNumber (number int )(_de .PdfObject ,error ){_dfdda ,_bdfa :=_gcfg ._fabda .LookupByNumber (number );return _dfdda ,_bdfa ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_de .PdfObjectDictionary )(*PdfPageResources ,error ){_dgbbb :=NewPdfPageResources ();if _dfedg :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_dfedg !=nil {_dgbbb .ExtGState =_dfedg ;};if _dcdae :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_dcdae !=nil &&!_de .IsNullObject (_dcdae ){_dgbbb .ColorSpace =_dcdae ;};if _facad :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_facad !=nil {_dgbbb .Pattern =_facad ;};if _cacfa :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_cacfa !=nil {_dgbbb .Shading =_cacfa ;};if _eccbe :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_eccbe !=nil {_dgbbb .XObject =_eccbe ;};if _fagca :=_de .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fagca !=nil {_dgbbb .Font =_fagca ;};if _fcceb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_fcceb !=nil {_dgbbb .ProcSet =_fcceb ;};if _abbed :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_abbed !=nil {_dgbbb .Properties =_abbed ;};return _dgbbb ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_dceeg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_dceeg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_dceeg ._gdaa =acroForm ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_fbec :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_fbec .N =N ;return _fbec ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fcfdf *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_bggag *PdfShading )getShadingDict ()(*_de .PdfObjectDictionary ,error ){_bcdeg :=_bggag ._daegc ;if _aggf ,_bbfed :=_bcdeg .(*_de .PdfIndirectObject );_bbfed {_gecba ,_feef :=_aggf .PdfObject .(*_de .PdfObjectDictionary );if !_feef {return nil ,_de .ErrTypeError ;};return _gecba ,nil ;}else if _eggfb ,_afcgb :=_bcdeg .(*_de .PdfObjectStream );_afcgb {return _eggfb .PdfObjectDictionary ,nil ;}else if _bfaae ,_eddeg :=_bcdeg .(*_de .PdfObjectDictionary );_eddeg {return _bfaae ,nil ;}else {_bc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_de .ErrTypeError ;};};

// ToPdfObject returns a PDF object representation of the outline item.
func (_baecf *OutlineItem )ToPdfObject ()_de .PdfObject {_ccdb ,_ :=_baecf .ToPdfOutlineItem ();return _ccdb .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_eed *PdfActionThread )ToPdfObject ()_de .PdfObject {_eed .PdfAction .ToPdfObject ();_cdd :=_eed ._cg ;_gbb :=_cdd .PdfObject .(*_de .PdfObjectDictionary );_gbb .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeThread )));if _eed .F !=nil {_gbb .Set ("\u0046",_eed .F .ToPdfObject ());};_gbb .SetIfNotNil ("\u0044",_eed .D );_gbb .SetIfNotNil ("\u0042",_eed .B );return _cdd ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_de .PdfObjectInteger ;TilingType *_de .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_de .PdfObjectFloat ;YStep *_de .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_de .PdfObjectArray ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_egga FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_egga .Mask ()|fl .Mask ())};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_egda :=&PdfBorderStyle {};return _egda };

// ImageToRGB convert an indexed image to RGB.
func (_abcce *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_abcce .Base .GetNumComponents ();if N < 1{return Image {},_d .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_bebf :=_cbd .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._acfbc ,img ._affeg );_gdafb :=_bga .NewReader (img .getBase ());_adbf :=_bga .NewWriter (_bebf );var (_bdaa uint32 ;_fdecg int ;_becad error ;);for {_bdaa ,_becad =_gdafb .ReadSample ();if _becad ==_gad .EOF {break ;}else if _becad !=nil {return img ,_becad ;};_fdecg =int (_bdaa );_bc .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fdecg ,N ,len (_abcce ._bccf ));if (_fdecg +1)*N > len (_abcce ._bccf ){_fdecg =len (_abcce ._bccf )/N -1;_bc .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fdecg );if _fdecg < 0{_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _acfgd :=_fdecg *N ;_acfgd < (_fdecg +1)*N ;_acfgd ++{if _becad =_adbf .WriteSample (uint32 (_abcce ._bccf [_acfgd ]));_becad !=nil {return img ,_becad ;};};};return _abcce .Base .ImageToRGB (_aade (&_bebf ));};

// ColorToRGB converts a Lab color to an RGB color.
func (_eggbb *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_acee :=func (_abgag float64 )float64 {if _abgag >=6.0/29{return _abgag *_abgag *_abgag ;};return 108.0/841*(_abgag -4/29);};_bgaaf ,_eeae :=color .(*PdfColorLab );if !_eeae {_bc .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_bgaaf .L ();AStar :=_bgaaf .A ();BStar :=_bgaaf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_eggbb .WhitePoint [0]*_acee (L );Y :=_eggbb .WhitePoint [1]*_acee (M );Z :=_eggbb .WhitePoint [2]*_acee (N );_feadg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dbce :=-0.969256*X +1.875992*Y +0.041556*Z ;_cfcg :=0.055648*X +-0.204043*Y +1.057311*Z ;_feadg =_bgc .Min (_bgc .Max (_feadg ,0),1.0);_dbce =_bgc .Min (_bgc .Max (_dbce ,0),1.0);_cfcg =_bgc .Min (_bgc .Max (_cfcg ,0),1.0);return NewPdfColorDeviceRGB (_feadg ,_dbce ,_cfcg ),nil ;};func _cgbaec (_dedbe *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ffba ,_gadbb :=_de .GetDict (_dedbe .AP );if !_gadbb {return nil ,nil ,_fe .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _ffba ==nil {return nil ,nil ,nil ;};_cfcf ,_gadbb :=_de .GetArray (_dedbe .Rect );if !_gadbb ||_cfcf .Len ()!=4{return nil ,nil ,_fe .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cfad ,_ccbgf :=NewPdfRectangle (*_cfcf );if _ccbgf !=nil {return nil ,nil ,_ccbgf ;};_cfgaa :=_de .TraceToDirectObject (_ffba .Get ("\u004e"));switch _dggbd :=_cfgaa .(type ){case *_de .PdfObjectStream :_cfgbg :=_dggbd ;_addbe ,_afafg :=NewXObjectFormFromStream (_cfgbg );return _addbe ,_cfad ,_afafg ;case *_de .PdfObjectDictionary :_bdbac :=_dggbd ;_ddac ,_fddc :=_de .GetName (_dedbe .AS );if !_fddc {return nil ,nil ,nil ;};if _bdbac .Get (*_ddac )==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_befe ,_fddc :=_de .GetStream (_bdbac .Get (*_ddac ));if !_fddc {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ddac );return nil ,nil ,_fe .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dfdg ,_dfaa :=NewXObjectFormFromStream (_befe );return _dfdg ,_cfad ,_dfaa ;};_bc .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cfgaa );return nil ,nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;VerticesPerRow *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};func _feea (_cgaaa _de .PdfObject ){_bc .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_cgaaa ,_cgaaa .String ());if _ggfeb ,_efafd :=_cgaaa .(*_de .PdfObjectStream );_efafd {_dfafdb ,_cegga :=_de .DecodeStream (_ggfeb );if _cegga !=nil {_bc .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cegga );return ;};_bc .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_dfafdb );}else if _cccbe ,_fagbbb :=_cgaaa .(*_de .PdfIndirectObject );_fagbbb {_bc .Log .Debug ("\u0025\u0054\u0020%\u0076",_cccbe .PdfObject ,_cccbe .PdfObject );_bc .Log .Debug ("\u0025\u0073",_cccbe .PdfObject .String ());};};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_adgeb :=&PdfColorspaceCalGray {};_adgeb .BlackPoint =[]float64 {0.0,0.0,0.0};_adgeb .Gamma =1;return _adgeb ;};func (_bfdeb *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bfdeb ._fabda .GetCrypter ()!=nil &&!_bfdeb ._fabda .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_bgfbc :=_bfdeb ._effaa ;_aebe :=_bgfbc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _aebe ==nil {return nil ,nil ;};_fgdg ,_ :=_de .GetIndirect (_aebe );_aebe =_de .TraceToDirectObject (_aebe );if _de .IsNullObject (_aebe ){_bc .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_deae ,_dfcb :=_de .GetDict (_aebe );if !_dfcb {_bc .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_aebe );_bc .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_aebe );};_bc .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_bc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bfdeb ._daceb {_dbga :=_bfdeb .traverseObjectData (_deae );if _dbga !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_dbga );return nil ,_dbga ;};};_faae ,_aecfc :=_bfdeb .newPdfAcroFormFromDict (_fgdg ,_deae );if _aecfc !=nil {return nil ,_aecfc ;};return _faae ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_de .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_egeae *_de .PdfIndirectObject ;};func (_dbab *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dbcg :=_dbab ._aceg ;_dbcg !=nil {return _dbcg ;};return _dbab ._cacf ;};func (_ddb *PdfReader )newPdfActionGotoFromDict (_ded *_de .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ded .Get ("\u0044")},nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gcd :=NewPdfAction ();_dg :=&PdfActionHide {};_dg .PdfAction =_gcd ;_gcd .SetContext (_dg );return _dg ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dcgf :=NewPdfAnnotation ();_geae :=&PdfAnnotationStamp {};_geae .PdfAnnotation =_dcgf ;_geae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcgf .SetContext (_geae );return _geae ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _de .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bdfc *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bdfc .Base ==nil {return nil ,_fe .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _bdfc .Base .ColorToRGB (color );};

// AllFields returns a flattened list of all fields in the form.
func (_ddacc *PdfAcroForm )AllFields ()[]*PdfField {if _ddacc ==nil {return nil ;};var _cdbfg []*PdfField ;if _ddacc .Fields !=nil {for _ ,_gdec :=range *_ddacc .Fields {_cdbfg =append (_cdbfg ,_cgebc (_gdec )...);};};return _cdbfg ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_aecaa *PdfColorspaceLab )ToPdfObject ()_de .PdfObject {_bfba :=_de .MakeArray ();_bfba .Append (_de .MakeName ("\u004c\u0061\u0062"));_gced :=_de .MakeDict ();if _aecaa .WhitePoint !=nil {_afge :=_de .MakeArray (_de .MakeFloat (_aecaa .WhitePoint [0]),_de .MakeFloat (_aecaa .WhitePoint [1]),_de .MakeFloat (_aecaa .WhitePoint [2]));_gced .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_afge );}else {_bc .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _aecaa .BlackPoint !=nil {_debe :=_de .MakeArray (_de .MakeFloat (_aecaa .BlackPoint [0]),_de .MakeFloat (_aecaa .BlackPoint [1]),_de .MakeFloat (_aecaa .BlackPoint [2]));_gced .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_debe );};if _aecaa .Range !=nil {_dffgf :=_de .MakeArray (_de .MakeFloat (_aecaa .Range [0]),_de .MakeFloat (_aecaa .Range [1]),_de .MakeFloat (_aecaa .Range [2]),_de .MakeFloat (_aecaa .Range [3]));_gced .Set ("\u0052\u0061\u006eg\u0065",_dffgf );};_bfba .Append (_gced );if _aecaa ._dgba !=nil {_aecaa ._dgba .PdfObject =_bfba ;return _aecaa ._dgba ;};return _bfba ;};

// ToInteger convert to an integer format.
func (_ccae *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_bfbe :=_bgc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_bfbe *_ccae .C ()),uint32 (_bfbe *_ccae .M ()),uint32 (_bfbe *_ccae .Y ()),uint32 (_bfbe *_ccae .K ())};};func (_eaag *PdfReader )newPdfAnnotationCaretFromDict (_gfa *_de .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_feg :=PdfAnnotationCaret {};_feag ,_fcfd :=_eaag .newPdfAnnotationMarkupFromDict (_gfa );if _fcfd !=nil {return nil ,_fcfd ;};_feg .PdfAnnotationMarkup =_feag ;_feg .RD =_gfa .Get ("\u0052\u0044");_feg .Sy =_gfa .Get ("\u0053\u0079");return &_feg ,nil ;};var _bddab ="";

// SetDecode sets the decode image float slice.
func (_afgfde *Image )SetDecode (decode []float64 ){_afgfde ._affeg =decode };

// ToPdfObject implements interface PdfModel.
func (_ccf *PdfAnnotationSound )ToPdfObject ()_de .PdfObject {_ccf .PdfAnnotation .ToPdfObject ();_egea :=_ccf ._afa ;_ggad :=_egea .PdfObject .(*_de .PdfObjectDictionary );_ccf .PdfAnnotationMarkup .appendToPdfDictionary (_ggad );_ggad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u006f\u0075n\u0064"));_ggad .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ccf .Sound );_ggad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ccf .Name );return _egea ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_effde *PdfColorspaceLab )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efab ,_dfaee :=_de .GetNumbersAsFloat (objects );if _dfaee !=nil {return nil ,_dfaee ;};return _effde .ColorFromFloats (_efab );};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _de .PdfObject ;PreserveRB _de .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gagd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfag :=vals [0];if _bfag < 0.0||_bfag > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eagaa :=vals [1];if _eagaa < 0.0||_eagaa > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fadf :=vals [2];if _fadf < 0.0||_fadf > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egba :=NewPdfColorCalRGB (_bfag ,_eagaa ,_fadf );return _egba ,nil ;};func _gebe (_dfefe *_de .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ggfc :=PdfShadingType2 {};_ebfaa :=_dfefe .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ebfaa ==nil {_bc .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_gbfdb ,_gdecb :=_ebfaa .(*_de .PdfObjectArray );if !_gdecb {_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebfaa );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbfdb .Len ()!=4{_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbfdb .Len ());return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ggfc .Coords =_gbfdb ;if _efffa :=_dfefe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_efffa !=nil {_efffa =_de .TraceToDirectObject (_efffa );_adfbeb ,_afafd :=_efffa .(*_de .PdfObjectArray );if !_afafd {_bc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efffa );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggfc .Domain =_adfbeb ;};_ebfaa =_dfefe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebfaa ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ggfc .Function =[]PdfFunction {};if _eecgb ,_adgedg :=_ebfaa .(*_de .PdfObjectArray );_adgedg {for _ ,_fgcgf :=range _eecgb .Elements (){_egbf ,_gcadg :=_gbag (_fgcgf );if _gcadg !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcadg );return nil ,_gcadg ;};_ggfc .Function =append (_ggfc .Function ,_egbf );};}else {_efeb ,_cadda :=_gbag (_ebfaa );if _cadda !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cadda );return nil ,_cadda ;};_ggfc .Function =append (_ggfc .Function ,_efeb );};if _cddg :=_dfefe .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cddg !=nil {_cddg =_de .TraceToDirectObject (_cddg );_dbgca ,_ceada :=_cddg .(*_de .PdfObjectArray );if !_ceada {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cddg );return nil ,_de .ErrTypeError ;};if _dbgca .Len ()!=2{_bc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbgca .Len ());return nil ,ErrInvalidAttribute ;};_ggfc .Extend =_dbgca ;};return &_ggfc ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_gefcb *PdfReader )GetEncryptionMethod ()string {_dcdgf :=_gefcb ._fabda .GetCrypter ();return _dcdgf .String ();};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_de .PdfObjectArray ;Domain *_de .PdfObjectArray ;Function []PdfFunction ;Extend *_de .PdfObjectArray ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_bffc *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _bffc .Range };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_edc :=NewPdfAnnotation ();_ffdb :=&PdfAnnotationPolygon {};_ffdb .PdfAnnotation =_edc ;_ffdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edc .SetContext (_ffdb );return _ffdb ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_addgf PdfModel ;_gddee *_de .PdfIndirectObject ;_eccfb *bool ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_de .PdfObjectName ;T *_de .PdfObjectString ;TU *_de .PdfObjectString ;TM *_de .PdfObjectString ;Ff *_de .PdfObjectInteger ;V _de .PdfObject ;DV _de .PdfObject ;AA _de .PdfObject ;};

// ToInteger convert to an integer format.
func (_fgdb *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_baec :=_bgc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_baec *_fgdb .A ()),uint32 (_baec *_fgdb .B ()),uint32 (_baec *_fgdb .C ())};};func (_agdc *PdfReader )lookupPageByObject (_cdgc _de .PdfObject )(*PdfPage ,error ){return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gfab *PdfColorspaceDeviceCMYK )ToPdfObject ()_de .PdfObject {return _de .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_gccdcb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gccdcb ._aceg ==nil &&_gccdcb .DescendantFont !=nil {return _gccdcb .DescendantFont .FontDescriptor ();};return _gccdcb ._aceg ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_bcabf *modelManager )GetPrimitiveFromModel (model PdfModel )_de .PdfObject {_begda ,_ecfc :=_bcabf ._degf [model ];if !_ecfc {return nil ;};return _begda ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};

// ToInteger convert to an integer format.
func (_fdae *PdfColorLab )ToInteger (bits int )[3]uint32 {_ecd :=_bgc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ecd *_fdae .L ()),uint32 (_ecd *_fdae .A ()),uint32 (_ecd *_fdae .B ())};};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gggg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fe .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_abec ,_bfgg :=_cbd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._acfbc ,img ._affeg );if _bfgg !=nil {return img ,_bfgg ;};_cfdd ,_bfgg :=_cbd .GrayConverter .Convert (_abec );if _bfgg !=nil {return img ,_bfgg ;};return _aade (_cfdd .Base ()),nil ;};func (_dffda *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _dffda ._fabda .GetCrypter ()!=nil &&!_dffda ._fabda .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_dfgcd :=_dffda ._effaa ;_gdfae :=_dfgcd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _gdfae ==nil {return nil ,nil ;};_bc .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_deeac :=_de .ResolveReference (_gdfae );_bc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_deeac );if _cbde :=_de .IsNullObject (_deeac );_cbde {_bc .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_eaaa ,_bgdf :=_deeac .(*_de .PdfIndirectObject );if !_bgdf {if _ ,_egbc :=_de .GetDict (_deeac );!_egbc {_bc .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_bc .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_eaaa =_de .MakeIndirectObject (_deeac );};_egcgb ,_bgdf :=_eaaa .PdfObject .(*_de .PdfObjectDictionary );if !_bgdf {return nil ,_fe .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_bc .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_egcgb );_ffbed ,_ ,_gfdb :=_dffda .buildOutlineTree (_eaaa ,nil ,nil ,nil );if _gfdb !=nil {return nil ,_gfdb ;};_bc .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ffbed );return _ffbed ,nil ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_eefce *PdfPageResources )GetFontByName (keyName _de .PdfObjectName )(_de .PdfObject ,bool ){if _eefce .Font ==nil {return nil ,false ;};_dagd ,_gadca :=_de .TraceToDirectObject (_eefce .Font ).(*_de .PdfObjectDictionary );if !_gadca {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_de .TraceToDirectObject (_eefce .Font ));return nil ,false ;};if _fdab :=_dagd .Get (keyName );_fdab !=nil {return _fdab ,true ;};return nil ,false ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_acgag *Image )ToJBIG2Image ()(*_de .JBIG2Image ,error ){_ffdbb ,_eeec :=_acgag .ToGoImage ();if _eeec !=nil {return nil ,_eeec ;};return _de .GoImageToJBIG2 (_ffdbb ,_de .JB2ImageAutoThreshold );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_acad *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _acad .Alternate ==nil {if _acad .N ==1{_fdba :=NewPdfColorspaceDeviceGray ();return _fdba .ColorFromFloats (vals );}else if _acad .N ==3{_fbb :=NewPdfColorspaceDeviceRGB ();return _fbb .ColorFromFloats (vals );}else if _acad .N ==4{_fbdb :=NewPdfColorspaceDeviceCMYK ();return _fbdb .ColorFromFloats (vals );}else {return nil ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _acad .Alternate .ColorFromFloats (vals );};

// GetOptimizer returns current PDF optimizer.
func (_eagbg *PdfWriter )GetOptimizer ()Optimizer {return _eagbg ._dgdd };

// ToPdfObject implements interface PdfModel.
func (_cbcc *PdfAnnotationStamp )ToPdfObject ()_de .PdfObject {_cbcc .PdfAnnotation .ToPdfObject ();_ddbb :=_cbcc ._afa ;_cfdc :=_ddbb .PdfObject .(*_de .PdfObjectDictionary );_cbcc .PdfAnnotationMarkup .appendToPdfDictionary (_cfdc );_cfdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0074\u0061m\u0070"));_cfdc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cbcc .Name );return _ddbb ;};func (_ggac *PdfReader )newPdfAnnotationFileAttachmentFromDict (_becc *_de .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_egca :=PdfAnnotationFileAttachment {};_fcff ,_gfee :=_ggac .newPdfAnnotationMarkupFromDict (_becc );if _gfee !=nil {return nil ,_gfee ;};_egca .PdfAnnotationMarkup =_fcff ;_egca .FS =_becc .Get ("\u0046\u0053");_egca .Name =_becc .Get ("\u004e\u0061\u006d\u0065");return &_egca ,nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_dfee *PdfColorspaceDeviceN )ToPdfObject ()_de .PdfObject {_bddcc :=_de .MakeArray (_de .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bddcc .Append (_dfee .ColorantNames );_bddcc .Append (_dfee .AlternateSpace .ToPdfObject ());_bddcc .Append (_dfee .TintTransform .ToPdfObject ());if _dfee .Attributes !=nil {_bddcc .Append (_dfee .Attributes .ToPdfObject ());};if _dfee ._edca !=nil {_dfee ._edca .PdfObject =_bddcc ;return _dfee ._edca ;};return _bddcc ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cfegg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_de .PdfObject {_bgbg :=_de .MakeDict ();if _cfegg .Subtype !=nil {_bgbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cfegg .Subtype );};_bgbg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cfegg .Colorants );_bgbg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cfegg .Process );_bgbg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cfegg .MixingHints );if _cfegg ._daec !=nil {_cfegg ._daec .PdfObject =_bgbg ;return _cfegg ._daec ;};return _bgbg ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func _feddb (_caacf StdFontName )(pdfFontSimple ,error ){_badec ,_gaged :=_eg .NewStdFontByName (_caacf );if !_gaged {return pdfFontSimple {},ErrFontNotSupported ;};_bagf :=_cgeeg (_badec );return _bagf ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_dgb :=NewPdfAnnotation ();_feed :=&PdfAnnotationSquare {};_feed .PdfAnnotation =_dgb ;_feed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgb .SetContext (_feed );return _feed ;};

// GetContainingPdfObject implements interface PdfModel.
func (_abed *PdfFilespec )GetContainingPdfObject ()_de .PdfObject {return _abed ._eddg };

// ToPdfObject implements interface PdfModel.
func (_acc *PdfActionGoToE )ToPdfObject ()_de .PdfObject {_acc .PdfAction .ToPdfObject ();_aaf :=_acc ._cg ;_aca :=_aaf .PdfObject .(*_de .PdfObjectDictionary );_aca .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoToE )));if _acc .F !=nil {_aca .Set ("\u0046",_acc .F .ToPdfObject ());};_aca .SetIfNotNil ("\u0044",_acc .D );_aca .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_acc .NewWindow );_aca .SetIfNotNil ("\u0054",_acc .T );return _aaf ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_cgbeae *PdfWriter )AddPage (page *PdfPage )error {_ggbag (page );_affge :=page .ToPdfObject ();_bc .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_bc .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_affge );_acacg ,_bgadb :=_de .GetIndirect (_affge );if !_bgadb {return _fe .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_bc .Log .Trace ("\u0025\u0073",_acacg );_bc .Log .Trace ("\u0025\u0073",_acacg .PdfObject );_eeddcc ,_bgadb :=_de .GetDict (_acacg .PdfObject );if !_bgadb {return _fe .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cbaf ,_bgadb :=_de .GetName (_eeddcc .Get ("\u0054\u0079\u0070\u0065"));if !_bgadb {return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_eeddcc .Get ("\u0054\u0079\u0070\u0065"));};if _cbaf .String ()!="\u0050\u0061\u0067\u0065"{return _fe .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aged :=[]_de .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_ebde ,_gebb :=_de .GetIndirect (_eeddcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bc .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_eeddcc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gebb );for _gebb {_bc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebde );_cabaa ,_dcbda :=_de .GetDict (_ebde .PdfObject );if !_dcbda {return _fe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_ecaba :=range _aged {_bc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ecaba );if _eeddcc .Get (_ecaba )!=nil {_bc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _gffbc :=_cabaa .Get (_ecaba );_gffbc !=nil {_bc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ecaba );_eeddcc .Set (_ecaba ,_gffbc );};};_ebde ,_gebb =_de .GetIndirect (_cabaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cabaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bc .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_eeddcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgbeae ._fcdab );_acacg .PdfObject =_eeddcc ;_fbegd ,_bgadb :=_de .GetDict (_cgbeae ._fcdab .PdfObject );if !_bgadb {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_abab ,_bgadb :=_de .GetArray (_fbegd .Get ("\u004b\u0069\u0064\u0073"));if !_bgadb {return _fe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_abab .Append (_acacg );_cgbeae ._baegd [_eeddcc ]=struct{}{};_edfb ,_bgadb :=_de .GetInt (_fbegd .Get ("\u0043\u006f\u0075n\u0074"));if !_bgadb {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_edfb =*_edfb +1;_cgbeae .addObject (_acacg );_affb :=_cgbeae .addObjects (_eeddcc );if _affb !=nil {return _affb ;};return nil ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_cead []_de .PdfObject )([]_de .PdfObject ,error );};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_gagg *PdfPattern )GetContainingPdfObject ()_de .PdfObject {return _gagg ._addd };

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_aa :=NewPdfAction ();_fc :=&PdfActionSubmitForm {};_fc .PdfAction =_aa ;_aa .SetContext (_fc );return _fc ;};func _gafa (_edbfe *_de .PdfObjectDictionary )(*PdfShadingType6 ,error ){_cbed :=PdfShadingType6 {};_afgbe :=_edbfe .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _afgbe ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_egeff ,_afgd :=_afgbe .(*_de .PdfObjectInteger );if !_afgd {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afgbe );return nil ,_de .ErrTypeError ;};_cbed .BitsPerCoordinate =_egeff ;_afgbe =_edbfe .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _afgbe ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_egeff ,_afgd =_afgbe .(*_de .PdfObjectInteger );if !_afgd {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_afgbe );return nil ,_de .ErrTypeError ;};_cbed .BitsPerComponent =_egeff ;_afgbe =_edbfe .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _afgbe ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_egeff ,_afgd =_afgbe .(*_de .PdfObjectInteger );if !_afgd {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_afgbe );return nil ,_de .ErrTypeError ;};_cbed .BitsPerComponent =_egeff ;_afgbe =_edbfe .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _afgbe ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_eaabb ,_afgd :=_afgbe .(*_de .PdfObjectArray );if !_afgd {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afgbe );return nil ,_de .ErrTypeError ;};_cbed .Decode =_eaabb ;if _eecfe :=_edbfe .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eecfe !=nil {_cbed .Function =[]PdfFunction {};if _efgfg ,_dedba :=_eecfe .(*_de .PdfObjectArray );_dedba {for _ ,_dfbad :=range _efgfg .Elements (){_cfeec ,_bgbfb :=_gbag (_dfbad );if _bgbfb !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgbfb );return nil ,_bgbfb ;};_cbed .Function =append (_cbed .Function ,_cfeec );};}else {_bdgbe ,_edfd :=_gbag (_eecfe );if _edfd !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edfd );return nil ,_edfd ;};_cbed .Function =append (_cbed .Function ,_bdgbe );};};return &_cbed ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_abce *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bcef :=func (_cecaf float64 )float64 {if _cecaf >=6.0/29{return _cecaf *_cecaf *_cecaf ;};return 108.0/841*(_cecaf -4/29);};_dcceg :=img ._affeg ;if len (_dcceg )!=6{_bc .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_dcceg =_abce .DecodeArray ();};_dbebd :=_bga .NewReader (img .getBase ());_cccfg :=_cbd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._acfbc ,img ._affeg );_dbdgc :=_bga .NewWriter (_cccfg );_daagf :=_bgc .Pow (2,float64 (img .BitsPerComponent ))-1;_fegdd :=make ([]uint32 ,3);var (_decc error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_gbceb ,_cbca ,_cfce float64 ;);for {_decc =_dbebd .ReadSamples (_fegdd );if _decc ==_gad .EOF {break ;}else if _decc !=nil {return img ,_decc ;};Ls =float64 (_fegdd [0])/_daagf ;As =float64 (_fegdd [1])/_daagf ;Bs =float64 (_fegdd [2])/_daagf ;Ls =_cbd .LinearInterpolate (Ls ,0.0,1.0,_dcceg [0],_dcceg [1]);As =_cbd .LinearInterpolate (As ,0.0,1.0,_dcceg [2],_dcceg [3]);Bs =_cbd .LinearInterpolate (Bs ,0.0,1.0,_dcceg [4],_dcceg [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_abce .WhitePoint [0]*_bcef (L );Y =_abce .WhitePoint [1]*_bcef (M );Z =_abce .WhitePoint [2]*_bcef (N );_gbceb =3.240479*X +-1.537150*Y +-0.498535*Z ;_cbca =-0.969256*X +1.875992*Y +0.041556*Z ;_cfce =0.055648*X +-0.204043*Y +1.057311*Z ;_gbceb =_bgc .Min (_bgc .Max (_gbceb ,0),1.0);_cbca =_bgc .Min (_bgc .Max (_cbca ,0),1.0);_cfce =_bgc .Min (_bgc .Max (_cfce ,0),1.0);_fegdd [0]=uint32 (_gbceb *_daagf );_fegdd [1]=uint32 (_cbca *_daagf );_fegdd [2]=uint32 (_cfce *_daagf );if _decc =_dbdgc .WriteSamples (_fegdd );_decc !=nil {return img ,_decc ;};};return _aade (&_cccfg ),nil ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _de .PdfObject ;Dest _de .PdfObject ;H _de .PdfObject ;PA _de .PdfObject ;QuadPoints _de .PdfObject ;BS _de .PdfObject ;_bdd *PdfAction ;_fabb *PdfReader ;};

// ToPdfObject implements interface PdfModel.
func (_eacd *PdfAnnotationPopup )ToPdfObject ()_de .PdfObject {_eacd .PdfAnnotation .ToPdfObject ();_ebaa :=_eacd ._afa ;_ageg :=_ebaa .PdfObject .(*_de .PdfObjectDictionary );_ageg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0050\u006f\u0070u\u0070"));_ageg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eacd .Parent );_ageg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eacd .Open );return _ebaa ;};

// ToPdfObject implements interface PdfModel.
func (_eege *PdfBorderStyle )ToPdfObject ()_de .PdfObject {_dfbf :=_de .MakeDict ();if _eege ._dcde !=nil {if _fgf ,_befb :=_eege ._dcde .(*_de .PdfIndirectObject );_befb {_fgf .PdfObject =_dfbf ;};};_dfbf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _eege .W !=nil {_dfbf .Set ("\u0057",_de .MakeFloat (*_eege .W ));};if _eege .S !=nil {_dfbf .Set ("\u0053",_de .MakeName (_eege .S .GetPdfName ()));};if _eege .D !=nil {_dfbf .Set ("\u0044",_de .MakeArrayFromIntegers (*_eege .D ));};if _eege ._dcde !=nil {return _eege ._dcde ;};return _dfbf ;};

// ToPdfObject implements interface PdfModel.
func (_ffag *PdfAnnotationPolygon )ToPdfObject ()_de .PdfObject {_ffag .PdfAnnotation .ToPdfObject ();_gfec :=_ffag ._afa ;_ffeg :=_gfec .PdfObject .(*_de .PdfObjectDictionary );_ffag .PdfAnnotationMarkup .appendToPdfDictionary (_ffeg );_ffeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_ffeg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ffag .Vertices );_ffeg .SetIfNotNil ("\u004c\u0045",_ffag .LE );_ffeg .SetIfNotNil ("\u0042\u0053",_ffag .BS );_ffeg .SetIfNotNil ("\u0049\u0043",_ffag .IC );_ffeg .SetIfNotNil ("\u0042\u0045",_ffag .BE );_ffeg .SetIfNotNil ("\u0049\u0054",_ffag .IT );_ffeg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffag .Measure );return _gfec ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_feaff *modelManager )GetModelFromPrimitive (primitive _de .PdfObject )PdfModel {model ,_fbcaa :=_feaff ._gegd [primitive ];if !_fbcaa {return nil ;};return model ;};

// ToPdfObject implements interface PdfModel.
func (_cbb *PdfActionJavaScript )ToPdfObject ()_de .PdfObject {_cbb .PdfAction .ToPdfObject ();_afb :=_cbb ._cg ;_daa :=_afb .PdfObject .(*_de .PdfObjectDictionary );_daa .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeJavaScript )));_daa .SetIfNotNil ("\u004a\u0053",_cbb .JS );return _afb ;};

// Add appends a top level outline item to the outline.
func (_abece *Outline )Add (item *OutlineItem ){_abece .Entries =append (_abece .Entries ,item )};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_beeb *PdfPageResources )GetColorspaceByName (keyName _de .PdfObjectName )(PdfColorspace ,bool ){_gecgd ,_agdeb :=_beeb .GetColorspaces ();if _agdeb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_agdeb );return nil ,false ;};if _gecgd ==nil {return nil ,false ;};_acdab ,_egafe :=_gecgd .Colorspaces [string (keyName )];if !_egafe {return nil ,false ;};return _acdab ,true ;};func (_efe *PdfReader )newPdfActionSoundFromDict (_dda *_de .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_dda .Get ("\u0053\u006f\u0075n\u0064"),Volume :_dda .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_dda .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_dda .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_dda .Get ("\u004d\u0069\u0078")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_bafc *PdfAnnotationLink )ToPdfObject ()_de .PdfObject {_bafc .PdfAnnotation .ToPdfObject ();_egag :=_bafc ._afa ;_abff :=_egag .PdfObject .(*_de .PdfObjectDictionary );_abff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u004c\u0069\u006e\u006b"));if _bafc ._bdd !=nil &&_bafc ._bdd ._def !=nil {_abff .Set ("\u0041",_bafc ._bdd ._def .ToPdfObject ());}else if _bafc .A !=nil {_abff .Set ("\u0041",_bafc .A );};_abff .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bafc .Dest );_abff .SetIfNotNil ("\u0048",_bafc .H );_abff .SetIfNotNil ("\u0050\u0041",_bafc .PA );_abff .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bafc .QuadPoints );_abff .SetIfNotNil ("\u0042\u0053",_bafc .BS );return _egag ;};func (_ecde *PdfReader )buildPageList (_ggebae *_de .PdfIndirectObject ,_daff *_de .PdfIndirectObject ,_cdbgd map[_de .PdfObject ]struct{})error {if _ggebae ==nil {return nil ;};if _ ,_gefce :=_cdbgd [_ggebae ];_gefce {_bc .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ggebae .ObjectNumber );return nil ;};_cdbgd [_ggebae ]=struct{}{};_adaa ,_fgdgf :=_ggebae .PdfObject .(*_de .PdfObjectDictionary );if !_fgdgf {return _fe .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bcacb ,_fgdgf :=(*_adaa ).Get ("\u0054\u0079\u0070\u0065").(*_de .PdfObjectName );if !_fgdgf {if _adaa .Get ("\u004b\u0069\u0064\u0073")==nil {return _fe .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_bcacb =_de .MakeName ("\u0050\u0061\u0067e\u0073");_adaa .Set ("\u0054\u0079\u0070\u0065",_bcacb );};_bc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bcacb ,_ggebae );if *_bcacb =="\u0050\u0061\u0067\u0065"{_ceea ,_dabfa :=_ecde .newPdfPageFromDict (_adaa );if _dabfa !=nil {return _dabfa ;};_ceea .setContainer (_ggebae );if _daff !=nil {_adaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_daff );};_ecde ._bagea =append (_ecde ._bagea ,_ggebae );_ecde .PageList =append (_ecde .PageList ,_ceea );return nil ;};if *_bcacb !="\u0050\u0061\u0067e\u0073"{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bcacb );return _fe .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _daff !=nil {_adaa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_daff );};if !_ecde ._daceb {_dfeac :=_ecde .traverseObjectData (_ggebae );if _dfeac !=nil {return _dfeac ;};};_caedf ,_gfdaf :=_ecde ._fabda .Resolve (_adaa .Get ("\u004b\u0069\u0064\u0073"));if _gfdaf !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gfdaf ;};var _cgcff *_de .PdfObjectArray ;_cgcff ,_fgdgf =_caedf .(*_de .PdfObjectArray );if !_fgdgf {_aegag ,_gbbbb :=_caedf .(*_de .PdfIndirectObject );if !_gbbbb {return _fe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cgcff ,_fgdgf =_aegag .PdfObject .(*_de .PdfObjectArray );if !_fgdgf {return _fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bc .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_cgcff );for _bfeaf ,_fcaag :=range _cgcff .Elements (){_bdaab ,_cged :=_de .GetIndirect (_fcaag );if !_cged {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_bdaab );return _fe .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cgcff .Set (_bfeaf ,_bdaab );_gfdaf =_ecde .buildPageList (_bdaab ,_ggebae ,_cdbgd );if _gfdaf !=nil {return _gfdaf ;};};return nil ;};

// SetBorderWidth sets the style's border width.
func (_cebc *PdfBorderStyle )SetBorderWidth (width float64 ){_cebc .W =&width };

// ToPdfObject returns the PDF representation of the function.
func (_adba *PdfFunctionType4 )ToPdfObject ()_de .PdfObject {_cccdf :=_adba ._fabab ;if _cccdf ==nil {_adba ._fabab =&_de .PdfObjectStream {};_cccdf =_adba ._fabab ;};_dgbgc :=_de .MakeDict ();_dgbgc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (4));_adced :=&_de .PdfObjectArray {};for _ ,_bbdg :=range _adba .Domain {_adced .Append (_de .MakeFloat (_bbdg ));};_dgbgc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adced );_cadgg :=&_de .PdfObjectArray {};for _ ,_afced :=range _adba .Range {_cadgg .Append (_de .MakeFloat (_afced ));};_dgbgc .Set ("\u0052\u0061\u006eg\u0065",_cadgg );if _adba ._bggf ==nil &&_adba .Program !=nil {_adba ._bggf =[]byte (_adba .Program .String ());};_dgbgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_adba ._bggf ))));_cccdf .Stream =_adba ._bggf ;_cccdf .PdfObjectDictionary =_dgbgc ;return _cccdf ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_fdecb *PdfField )ToPdfObject ()_de .PdfObject {_dgfe :=_fdecb ._gddee ;_gbddf :=_dgfe .PdfObject .(*_de .PdfObjectDictionary );_ebcb :=_de .MakeArray ();for _ ,_bfcc :=range _fdecb .Kids {_ebcb .Append (_bfcc .ToPdfObject ());};for _ ,_cgbfa :=range _fdecb .Annotations {if _cgbfa ._afa !=_fdecb ._gddee {_ebcb .Append (_cgbfa .GetContext ().ToPdfObject ());};};if _fdecb .Parent !=nil {_gbddf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdecb .Parent .GetContainingPdfObject ());};if _ebcb .Len ()> 0{_gbddf .Set ("\u004b\u0069\u0064\u0073",_ebcb );};_gbddf .SetIfNotNil ("\u0046\u0054",_fdecb .FT );_gbddf .SetIfNotNil ("\u0054",_fdecb .T );_gbddf .SetIfNotNil ("\u0054\u0055",_fdecb .TU );_gbddf .SetIfNotNil ("\u0054\u004d",_fdecb .TM );_gbddf .SetIfNotNil ("\u0046\u0066",_fdecb .Ff );_gbddf .SetIfNotNil ("\u0056",_fdecb .V );_gbddf .SetIfNotNil ("\u0044\u0056",_fdecb .DV );_gbddf .SetIfNotNil ("\u0041\u0041",_fdecb .AA );return _dgfe ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_dcg :=NewPdfAction ();_ae :=&PdfActionGoToR {};_ae .PdfAction =_dcg ;_dcg .SetContext (_ae );return _ae ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ebefg *PdfWriter )SetNamedDestinations (names _de .PdfObject )error {if names ==nil {return nil ;};_bc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_ebefg ._efdfc .Set ("\u004e\u0061\u006de\u0073",names );return _ebefg .addObjects (names );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_de .PdfIndirectObject ;SV *_de .PdfIndirectObject ;};func _geed (_bgde _de .PdfObject )(*PdfColorspaceDeviceN ,error ){_bdbgf :=NewPdfColorspaceDeviceN ();if _cgdfe ,_ebgfd :=_bgde .(*_de .PdfIndirectObject );_ebgfd {_bdbgf ._edca =_cgdfe ;};_bgde =_de .TraceToDirectObject (_bgde );_ddaf ,_efbg :=_bgde .(*_de .PdfObjectArray );if !_efbg {return nil ,_d .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ddaf .Len ()!=4&&_ddaf .Len ()!=5{return nil ,_d .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_bgde =_ddaf .Get (0);_febbg ,_efbg :=_bgde .(*_de .PdfObjectName );if !_efbg {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_febbg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_d .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_bgde =_ddaf .Get (1);_bgde =_de .TraceToDirectObject (_bgde );_dceae ,_efbg :=_bgde .(*_de .PdfObjectArray );if !_efbg {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_bdbgf .ColorantNames =_dceae ;_bgde =_ddaf .Get (2);_ebdbc ,_ebae :=NewPdfColorspaceFromPdfObject (_bgde );if _ebae !=nil {return nil ,_ebae ;};_bdbgf .AlternateSpace =_ebdbc ;_bbbga ,_ebae :=_gbag (_ddaf .Get (3));if _ebae !=nil {return nil ,_ebae ;};_bdbgf .TintTransform =_bbbga ;if _ddaf .Len ()==5{_gbefe ,_feabb :=_gdcaa (_ddaf .Get (4));if _feabb !=nil {return nil ,_feabb ;};_bdbgf .Attributes =_gbefe ;};return _bdbgf ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_gbce *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adda :=vals [0];if _adda < 0.0||_adda > 100.0{_bc .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_adda );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfefg :=vals [1];_befg :=float64 (-100);_gdfb :=float64 (100);if len (_gbce .Range )> 1{_befg =_gbce .Range [0];_gdfb =_gbce .Range [1];};if _gfefg < _befg ||_gfefg > _gdfb {_bc .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gfefg ,_befg ,_gdfb );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caf :=vals [2];_ageac :=float64 (-100);_egcf :=float64 (100);if len (_gbce .Range )> 3{_ageac =_gbce .Range [2];_egcf =_gbce .Range [3];};if _caf < _ageac ||_caf > _egcf {_bc .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_caf ,_ageac ,_egcf );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_febd :=NewPdfColorLab (_adda ,_gfefg ,_caf );return _febd ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_eaeag *pdfSignDictionary )WriteString ()string {_eaeag ._aaba =0;_eaeag ._abdadd =0;_eaeag ._ebbaa =0;_eaeag ._gfeca =0;_dgaec :=_gd .NewBuffer (nil );_dgaec .WriteString ("\u003c\u003c");for _ ,_bfcce :=range _eaeag .Keys (){_agbcg :=_eaeag .Get (_bfcce );switch _bfcce {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_dgaec .WriteString (_bfcce .WriteString ());_dgaec .WriteString ("\u0020");_eaeag ._ebbaa =_dgaec .Len ();_dgaec .WriteString (_agbcg .WriteString ());_dgaec .WriteString ("\u0020");_eaeag ._gfeca =_dgaec .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_dgaec .WriteString (_bfcce .WriteString ());_dgaec .WriteString ("\u0020");_eaeag ._aaba =_dgaec .Len ();_dgaec .WriteString (_agbcg .WriteString ());_dgaec .WriteString ("\u0020");_eaeag ._abdadd =_dgaec .Len ()-1;default:_dgaec .WriteString (_bfcce .WriteString ());_dgaec .WriteString ("\u0020");_dgaec .WriteString (_agbcg .WriteString ());};};_dgaec .WriteString ("\u003e\u003e");return _dgaec .String ();};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;BitsPerFlag *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bfea *PdfPage )GetPageAsIndirectObject ()*_de .PdfIndirectObject {return _bfea ._eeea };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_cdad *PdfFieldButton )IsPush ()bool {return _cdad .GetType ()==ButtonTypePush };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_fdfgc =creator };func _ggbag (_agdcf *PdfPage ){_acdfg :=_dc .GetLicenseKey ();if _acdfg !=nil &&_acdfg .IsLicensed (){return ;};_aeggb :=_de .PdfObjectName ("\u0055\u0046\u0031");if !_agdcf .Resources .HasFontByName (_aeggb ){_agdcf .Resources .SetFontByName (_aeggb ,DefaultFont ().ToPdfObject ());};var _egbdd []string ;_egbdd =append (_egbdd ,"\u0071");_egbdd =append (_egbdd ,"\u0042\u0054");_egbdd =append (_egbdd ,_d .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_aeggb .String ()));_egbdd =append (_egbdd ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_egbdd =append (_egbdd ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_cfca :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_egbdd =append (_egbdd ,_d .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cfca ));_egbdd =append (_egbdd ,"\u0045\u0054");_egbdd =append (_egbdd ,"\u0051");_agacf :=_c .Join (_egbdd ,"\u000a");_agdcf .AddContentStreamByString (_agacf );_agdcf .ToPdfObject ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eaab *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_eaab .Base .GetNumComponents ();_beca :=int (vals [0])*N ;if _beca < 0||(_beca +N -1)>=len (_eaab ._bccf ){return nil ,_fe .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_bceba :=_eaab ._bccf [_beca :_beca +N ];var _aedgb []float64 ;for _ ,_dcbee :=range _bceba {_aedgb =append (_aedgb ,float64 (_dcbee )/255.0);};_bgfgd ,_ggdc :=_eaab .Base .ColorFromFloats (_aedgb );if _ggdc !=nil {return nil ,_ggdc ;};return _bgfgd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcge *PdfAnnotationPrinterMark )ToPdfObject ()_de .PdfObject {_dcge .PdfAnnotation .ToPdfObject ();_eded :=_dcge ._afa ;_eaaga :=_eded .PdfObject .(*_de .PdfObjectDictionary );_eaaga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_eaaga .SetIfNotNil ("\u004d\u004e",_dcge .MN );return _eded ;};

// ToPdfObject implements interface PdfModel.
func (_ffegc *PdfAnnotationWatermark )ToPdfObject ()_de .PdfObject {_ffegc .PdfAnnotation .ToPdfObject ();_cabg :=_ffegc ._afa ;_feba :=_cabg .PdfObject .(*_de .PdfObjectDictionary );_feba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_feba .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ffegc .FixedPrint );return _cabg ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bcfbc *PdfPage )SetContentStreams (cStreams []string ,encoder _de .StreamEncoder )error {if len (cStreams )==0{_bcfbc .Contents =nil ;return nil ;};if encoder ==nil {encoder =_de .NewRawEncoder ();};var _eaggcb []*_de .PdfObjectStream ;for _ ,_edbf :=range cStreams {_daaeg :=&_de .PdfObjectStream {};_gbdeb :=encoder .MakeStreamDict ();_gdfg ,_aafca :=encoder .EncodeBytes ([]byte (_edbf ));if _aafca !=nil {return _aafca ;};_gbdeb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_gdfg ))));_daaeg .PdfObjectDictionary =_gbdeb ;_daaeg .Stream =[]byte (_gdfg );_eaggcb =append (_eaggcb ,_daaeg );};if len (_eaggcb )==1{_bcfbc .Contents =_eaggcb [0];}else {_bffb :=_de .MakeArray ();for _ ,_cafbc :=range _eaggcb {_bffb .Append (_cafbc );};_bcfbc .Contents =_bffb ;};return nil ;};

// ToInteger convert to an integer format.
func (_fedf *PdfColorCalGray )ToInteger (bits int )uint32 {_ggfd :=_bgc .Pow (2,float64 (bits ))-1;return uint32 (_ggfd *_fedf .Val ());};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_adb *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_aegb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_gafc ,_edgac :=color .(*PdfColorCalRGB );if !_edgac {_bc .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_effff :=_gafc .A ();_gbcac :=_gafc .B ();_dgdg :=_gafc .C ();X :=_aegb .Matrix [0]*_bgc .Pow (_effff ,_aegb .Gamma [0])+_aegb .Matrix [3]*_bgc .Pow (_gbcac ,_aegb .Gamma [1])+_aegb .Matrix [6]*_bgc .Pow (_dgdg ,_aegb .Gamma [2]);Y :=_aegb .Matrix [1]*_bgc .Pow (_effff ,_aegb .Gamma [0])+_aegb .Matrix [4]*_bgc .Pow (_gbcac ,_aegb .Gamma [1])+_aegb .Matrix [7]*_bgc .Pow (_dgdg ,_aegb .Gamma [2]);Z :=_aegb .Matrix [2]*_bgc .Pow (_effff ,_aegb .Gamma [0])+_aegb .Matrix [5]*_bgc .Pow (_gbcac ,_aegb .Gamma [1])+_aegb .Matrix [8]*_bgc .Pow (_dgdg ,_aegb .Gamma [2]);_dbcab :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gaeg :=-0.969256*X +1.875992*Y +0.041556*Z ;_agbfb :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbcab =_bgc .Min (_bgc .Max (_dbcab ,0),1.0);_gaeg =_bgc .Min (_bgc .Max (_gaeg ,0),1.0);_agbfb =_bgc .Min (_bgc .Max (_agbfb ,0),1.0);return NewPdfColorDeviceRGB (_dbcab ,_gaeg ,_agbfb ),nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_edfad *PdfSignature )GetContainingPdfObject ()_de .PdfObject {return _edfad ._edgfg };

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_dcgaff :map[_de .PdfObject ]struct{}{},_gafgf :_ecfe (),_fabda :_de .NewParserFromString (txt )};};

// GetContentStream returns the XObject Form's content stream.
func (_fdfcad *XObjectForm )GetContentStream ()([]byte ,error ){_begggg ,_aecg :=_de .DecodeStream (_fdfcad ._fecdfb );if _aecg !=nil {return nil ,_aecg ;};return _begggg ,nil ;};func (_efgf *PdfReader )newPdfFieldSignatureFromDict (_fbffa *_de .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gcec :=&PdfFieldSignature {};_bcgd ,_dfbg :=_de .GetIndirect (_fbffa .Get ("\u0056"));if _dfbg {var _dcefc error ;_gcec .V ,_dcefc =_efgf .newPdfSignatureFromIndirect (_bcgd );if _dcefc !=nil {return nil ,_dcefc ;};};_gcec .Lock ,_ =_de .GetIndirect (_fbffa .Get ("\u004c\u006f\u0063\u006b"));_gcec .SV ,_ =_de .GetIndirect (_fbffa .Get ("\u0053\u0056"));return _gcec ,nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_de .PdfIndirectObject )*PdfOutlineItem {_cdbea :=PdfOutlineItem {};_cdbea ._gccdf =&_cdbea ;_cdbea .Title =_de .MakeString (title );_aecaf :=_de .MakeArray ();_aecaf .Append (page );_aecaf .Append (_de .MakeName ("\u0046\u0069\u0074"));_cdbea .Dest =_aecaf ;return &_cdbea ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gfcba *PdfPattern )IsTiling ()bool {return _gfcba .PatternType ==1};

// Mask returns the uin32 bitmask for the specific flag.
func (_gabbg FieldFlag )Mask ()uint32 {return uint32 (_gabbg )};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};func _gadea (_bccff *[]*PdfField ,_faga FieldFilterFunc ,_gggd bool )[]*PdfField {if _bccff ==nil {return nil ;};_cdga :=*_bccff ;if len (*_bccff )==0{return nil ;};_fcdd :=_cdga [:0];if _faga ==nil {_faga =func (*PdfField )bool {return true };};var _cgaab []*PdfField ;for _ ,_aebcfd :=range _cdga {_efda :=_faga (_aebcfd );if _efda {_cgaab =append (_cgaab ,_aebcfd );if len (_aebcfd .Kids )> 0{_cgaab =append (_cgaab ,_gadea (&_aebcfd .Kids ,_faga ,_gggd )...);};};if !_gggd ||!_efda ||len (_aebcfd .Kids )> 0{_fcdd =append (_fcdd ,_aebcfd );};};*_bccff =_fcdd ;return _cgaab ;};func _bbgbf (_gdbbc *_de .PdfObjectDictionary )(*PdfShadingType5 ,error ){_dfged :=PdfShadingType5 {};_cagcb :=_gdbbc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cagcb ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ebace ,_ebgdf :=_cagcb .(*_de .PdfObjectInteger );if !_ebgdf {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cagcb );return nil ,_de .ErrTypeError ;};_dfged .BitsPerCoordinate =_ebace ;_cagcb =_gdbbc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cagcb ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ebace ,_ebgdf =_cagcb .(*_de .PdfObjectInteger );if !_ebgdf {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cagcb );return nil ,_de .ErrTypeError ;};_dfged .BitsPerComponent =_ebace ;_cagcb =_gdbbc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cagcb ==nil {_bc .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_ebace ,_ebgdf =_cagcb .(*_de .PdfObjectInteger );if !_ebgdf {_bc .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cagcb );return nil ,_de .ErrTypeError ;};_dfged .VerticesPerRow =_ebace ;_cagcb =_gdbbc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cagcb ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cafc ,_ebgdf :=_cagcb .(*_de .PdfObjectArray );if !_ebgdf {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cagcb );return nil ,_de .ErrTypeError ;};_dfged .Decode =_cafc ;if _bcbe :=_gdbbc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bcbe !=nil {_dfged .Function =[]PdfFunction {};if _acade ,_cgedf :=_bcbe .(*_de .PdfObjectArray );_cgedf {for _ ,_ffgb :=range _acade .Elements (){_cfebd ,_adffd :=_gbag (_ffgb );if _adffd !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adffd );return nil ,_adffd ;};_dfged .Function =append (_dfged .Function ,_cfebd );};}else {_edaaf ,_befgg :=_gbag (_bcbe );if _befgg !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_befgg );return nil ,_befgg ;};_dfged .Function =append (_dfged .Function ,_edaaf );};};return &_dfged ,nil ;};func _eeddc ()_ga .Time {return _ebcee };func (_adbe *pdfFontType0 )baseFields ()*fontCommon {return &_adbe .fontCommon };

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_adafac :=PdfDate {};_dccg :=_fdaegg .FindAllStringSubmatch (dateStr ,1);if len (_dccg )< 1{return _adafac ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_dccg [0])!=10{return _adafac ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_adafac ._fbbae ,_ =_ea .ParseInt (_dccg [0][1],10,32);_adafac ._ddfea ,_ =_ea .ParseInt (_dccg [0][2],10,32);_adafac ._eafcb ,_ =_ea .ParseInt (_dccg [0][3],10,32);_adafac ._gdgba ,_ =_ea .ParseInt (_dccg [0][4],10,32);_adafac ._eegg ,_ =_ea .ParseInt (_dccg [0][5],10,32);_adafac ._dagfd ,_ =_ea .ParseInt (_dccg [0][6],10,32);if len (_dccg [0][7])> 0{_adafac ._afcfc =_dccg [0][7][0];}else {_adafac ._afcfc ='+';};if len (_dccg [0][8])> 0{_adafac ._efdc ,_ =_ea .ParseInt (_dccg [0][8],10,32);}else {_adafac ._efdc =0;};if len (_dccg [0][9])> 0{_adafac ._bgcag ,_ =_ea .ParseInt (_dccg [0][9],10,32);}else {_adafac ._bgcag =0;};return _adafac ,nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_addg *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bc .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bc .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_bc .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bc .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_ged ,_dfea :=_cbd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._acfbc ,img ._affeg );if _dfea !=nil {return Image {},_dfea ;};_efbb ,_dfea :=_cbd .NRGBAConverter .Convert (_ged );if _dfea !=nil {return Image {},_dfea ;};return _aade (_efbb .Base ()),nil ;};func (_acag *PdfReader )newPdfAcroFormFromDict (_gbdg *_de .PdfIndirectObject ,_gabfc *_de .PdfObjectDictionary )(*PdfAcroForm ,error ){_ebgc :=NewPdfAcroForm ();if _gbdg !=nil {_ebgc ._efgef =_gbdg ;_gbdg .PdfObject =_de .MakeDict ();};if _gadcc :=_gabfc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gadcc !=nil {_ggebd ,_eadgd :=_de .GetArray (_gadcc );if !_eadgd {return nil ,_d .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gadcc );};var _faggf []*PdfField ;for _ ,_afbc :=range _ggebd .Elements (){_ccbc ,_gfgg :=_de .GetIndirect (_afbc );if !_gfgg {if _ ,_dbeeg :=_afbc .(*_de .PdfObjectNull );_dbeeg {_bc .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_bc .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_afbc );return nil ,_d .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bcgcd ,_eeebde :=_acag .newPdfFieldFromIndirectObject (_ccbc ,nil );if _eeebde !=nil {return nil ,_eeebde ;};_bc .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_bcgcd );_faggf =append (_faggf ,_bcgcd );};_ebgc .Fields =&_faggf ;};if _cbdb :=_gabfc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_cbdb !=nil {_ffff ,_affe :=_de .GetBool (_cbdb );if _affe {_ebgc .NeedAppearances =_ffff ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cbdb );};};if _ecdcf :=_gabfc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ecdcf !=nil {_afbba ,_cggd :=_de .GetInt (_ecdcf );if _cggd {_ebgc .SigFlags =_afbba ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecdcf );};};if _caegd :=_gabfc .Get ("\u0043\u004f");_caegd !=nil {_eddgf ,_ffged :=_de .GetArray (_caegd );if _ffged {_ebgc .CO =_eddgf ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_caegd );};};if _bgdeb :=_gabfc .Get ("\u0044\u0052");_bgdeb !=nil {if _cffea ,_cdgg :=_de .GetDict (_bgdeb );_cdgg {_gaec ,_bcebb :=NewPdfPageResourcesFromDict (_cffea );if _bcebb !=nil {_bc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_bcebb );return nil ,_bcebb ;};_ebgc .DR =_gaec ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bgdeb );};};if _ccgeb :=_gabfc .Get ("\u0044\u0041");_ccgeb !=nil {_bfcfg ,_aebbc :=_de .GetString (_ccgeb );if _aebbc {_ebgc .DA =_bfcfg ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ccgeb );};};if _fffbd :=_gabfc .Get ("\u0051");_fffbd !=nil {_ddga ,_beggf :=_de .GetInt (_fffbd );if _beggf {_ebgc .Q =_ddga ;}else {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fffbd );};};if _edde :=_gabfc .Get ("\u0058\u0046\u0041");_edde !=nil {_ebgc .XFA =_edde ;};return _ebgc ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _de .PdfObject ;LE _de .PdfObject ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;IT _de .PdfObject ;Measure _de .PdfObject ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_de .PdfObjectArray ;ExtGState _de .PdfObject ;};func (_fgge *PdfReader )newPdfActionMovieFromDict (_degb *_de .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_degb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_degb .Get ("\u0054"),Operation :_degb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcda *PdfActionSound )ToPdfObject ()_de .PdfObject {_gcda .PdfAction .ToPdfObject ();_ecb :=_gcda ._cg ;_bea :=_ecb .PdfObject .(*_de .PdfObjectDictionary );_bea .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeSound )));_bea .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gcda .Sound );_bea .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gcda .Volume );_bea .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gcda .Synchronous );_bea .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gcda .Repeat );_bea .SetIfNotNil ("\u004d\u0069\u0078",_gcda .Mix );return _ecb ;};

// ToPdfObject implements interface PdfModel.
func (_cdbf *PdfAnnotation3D )ToPdfObject ()_de .PdfObject {_cdbf .PdfAnnotation .ToPdfObject ();_gccdc :=_cdbf ._afa ;_beda :=_gccdc .PdfObject .(*_de .PdfObjectDictionary );_beda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0033\u0044"));_beda .SetIfNotNil ("\u0033\u0044\u0044",_cdbf .T3DD );_beda .SetIfNotNil ("\u0033\u0044\u0056",_cdbf .T3DV );_beda .SetIfNotNil ("\u0033\u0044\u0041",_cdbf .T3DA );_beda .SetIfNotNil ("\u0033\u0044\u0049",_cdbf .T3DI );_beda .SetIfNotNil ("\u0033\u0044\u0042",_cdbf .T3DB );return _gccdc ;};func _agdad (_eedbg _de .PdfObject ,_afadg *fontCommon )(*_bd .CMap ,error ){_dfdgg ,_ggdbb :=_de .GetStream (_eedbg );if !_ggdbb {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_eedbg );return nil ,_de .ErrTypeError ;};_gcbag ,_efec :=_de .DecodeStream (_dfdgg );if _efec !=nil {return nil ,_efec ;};_feec ,_efec :=_bd .LoadCmapFromData (_gcbag ,!_afadg .isCIDFont ());if _efec !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_dfdgg .ObjectNumber ,_efec );};return _feec ,_efec ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_ccb :=&PdfAppender {_dccb :reader ._dceac ,Reader :reader ,_bdef :reader ._fabda ,_bece :reader ._dcgaff };if _deea ,_eddc :=_ccb ._dccb .Seek (0,_gad .SeekEnd );_eddc !=nil {return nil ,_eddc ;}else {_ccb ._gac =_deea ;};if _ ,_gcga :=_ccb ._dccb .Seek (0,_gad .SeekStart );_gcga !=nil {return nil ,_gcga ;};var _afaa error ;_ccb ._bge ,_afaa =NewPdfReader (_ccb ._dccb );if _afaa !=nil {return nil ,_afaa ;};for _ ,_efde :=range _ccb .Reader .GetObjectNums (){if _ccb ._gcgg < _efde {_ccb ._gcgg =_efde ;};};_ccb ._dcbdg =_ccb ._bdef .GetXrefTable ();_ccb ._cff =_ccb ._bdef .GetXrefOffset ();_ccb ._edec =make (map[_de .PdfObject ]struct{});for _ ,_gbee :=range _ccb ._bge .PageList {_ccb ._ddebe =append (_ccb ._ddebe ,_gbee );};_ccb ._gccf =make (map[_de .PdfObject ]int64 );_ccb ._cgdb =make (map[_de .PdfObject ]struct{});_ccb ._gdaa =_ccb ._bge .AcroForm ;return _ccb ,nil ;};func _cgaa (_bcbge []byte )[]byte {const _gdcd =52845;const _cdcfb =22719;_bbge :=55665;for _ ,_eecc :=range _bcbge [:4]{_bbge =(int (_eecc )+_bbge )*_gdcd +_cdcfb ;};_bbef :=make ([]byte ,len (_bcbge )-4);for _cbfgb ,_ffeed :=range _bcbge [4:]{_bbef [_cbfgb ]=byte (int (_ffeed )^_bbge >>8);_bbge =(int (_ffeed )+_bbge )*_gdcd +_cdcfb ;};return _bbef ;};

// ToPdfObject implements interface PdfModel.
func (_gdeb *PdfAnnotationCaret )ToPdfObject ()_de .PdfObject {_gdeb .PdfAnnotation .ToPdfObject ();_afaeg :=_gdeb ._afa ;_bfcd :=_afaeg .PdfObject .(*_de .PdfObjectDictionary );_gdeb .PdfAnnotationMarkup .appendToPdfDictionary (_bfcd );_bfcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0043\u0061\u0072e\u0074"));_bfcd .SetIfNotNil ("\u0052\u0044",_gdeb .RD );_bfcd .SetIfNotNil ("\u0053\u0079",_gdeb .Sy );return _afaeg ;};func (_cda *PdfReader )newPdfAnnotationStrikeOut (_cadb *_de .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_aag :=PdfAnnotationStrikeOut {};_cebe ,_fge :=_cda .newPdfAnnotationMarkupFromDict (_cadb );if _fge !=nil {return nil ,_fge ;};_aag .PdfAnnotationMarkup =_cebe ;_aag .QuadPoints =_cadb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aag ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dbgf *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_beeg *PdfReader )newPdfAnnotationLinkFromDict (_dbag *_de .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gegc :=PdfAnnotationLink {};_gegc .A =_dbag .Get ("\u0041");_gegc .Dest =_dbag .Get ("\u0044\u0065\u0073\u0074");_gegc .H =_dbag .Get ("\u0048");_gegc .PA =_dbag .Get ("\u0050\u0041");_gegc .QuadPoints =_dbag .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gegc .BS =_dbag .Get ("\u0042\u0053");return &_gegc ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gdgbd *PdfPattern )SetContext (ctx PdfModel ){_gdgbd ._acgdg =ctx };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cage *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgaec ,_defea :=_de .GetNumbersAsFloat (objects );if _defea !=nil {return nil ,_defea ;};return _cage .ColorFromFloats (_cgaec );};func (_eegd *PdfReader )newPdfAnnotationPolygonFromDict (_dgcd *_de .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_bac :=PdfAnnotationPolygon {};_ddfa ,_ccea :=_eegd .newPdfAnnotationMarkupFromDict (_dgcd );if _ccea !=nil {return nil ,_ccea ;};_bac .PdfAnnotationMarkup =_ddfa ;_bac .Vertices =_dgcd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bac .LE =_dgcd .Get ("\u004c\u0045");_bac .BS =_dgcd .Get ("\u0042\u0053");_bac .IC =_dgcd .Get ("\u0049\u0043");_bac .BE =_dgcd .Get ("\u0042\u0045");_bac .IT =_dgcd .Get ("\u0049\u0054");_bac .Measure =_dgcd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bac ,nil ;};func (_fgbea *PdfAppender )replaceObject (_bgad ,_ddbfd _de .PdfObject ){switch _dbca :=_bgad .(type ){case *_de .PdfIndirectObject :_fgbea ._gccf [_ddbfd ]=_dbca .ObjectNumber ;case *_de .PdfObjectStream :_fgbea ._gccf [_ddbfd ]=_dbca .ObjectNumber ;};};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_decge *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _decge .AlternateSpace ==nil {return nil ,_fe .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _decge .AlternateSpace .ColorToRGB (color );};

// StdFontName represents name of a standard font.
type StdFontName =_eg .StdFontName ;func _abffe (_dfd _de .PdfObject )(*PdfBorderStyle ,error ){_dbfa :=&PdfBorderStyle {};_dbfa ._dcde =_dfd ;var _adfa *_de .PdfObjectDictionary ;_dfd =_de .TraceToDirectObject (_dfd );_adfa ,_gcf :=_dfd .(*_de .PdfObjectDictionary );if !_gcf {return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _cagd :=_adfa .Get ("\u0054\u0079\u0070\u0065");_cagd !=nil {_eef ,_geggb :=_cagd .(*_de .PdfObjectName );if !_geggb {_bc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_cagd );}else {if *_eef !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bc .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_eef );};};};if _acge :=_adfa .Get ("\u0057");_acge !=nil {_dgda ,_cgb :=_de .GetNumberAsFloat (_acge );if _cgb !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cgb );return nil ,_cgb ;};_dbfa .W =&_dgda ;};if _bdbg :=_adfa .Get ("\u0053");_bdbg !=nil {_bcgcf ,_cgce :=_bdbg .(*_de .PdfObjectName );if !_cgce {return nil ,_fe .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _dbg BorderStyle ;switch *_bcgcf {case "\u0053":_dbg =BorderStyleSolid ;case "\u0044":_dbg =BorderStyleDashed ;case "\u0042":_dbg =BorderStyleBeveled ;case "\u0049":_dbg =BorderStyleInset ;case "\u0055":_dbg =BorderStyleUnderline ;default:_bc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_bcgcf );return nil ,_fe .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dbfa .S =&_dbg ;};if _eccd :=_adfa .Get ("\u0044");_eccd !=nil {_agfe ,_ebf :=_eccd .(*_de .PdfObjectArray );if !_ebf {_bc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_eccd );return nil ,_fe .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_bbea ,_ace :=_agfe .ToIntegerArray ();if _ace !=nil {_bc .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_ace );return nil ,_ace ;};_dbfa .D =&_bbea ;};return _dbfa ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bde :=NewPdfAnnotation ();_cdbd :=&PdfAnnotationScreen {};_cdbd .PdfAnnotation =_bde ;_bde .SetContext (_cdbd );return _cdbd ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_faf :=NewPdfAnnotation ();_bab :=&PdfAnnotationSquiggly {};_bab .PdfAnnotation =_faf ;_bab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_faf .SetContext (_bab );return _bab ;};func (_bca *PdfReader )newPdfAnnotationSquareFromDict (_bcgc *_de .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_badf :=PdfAnnotationSquare {};_agfc ,_gade :=_bca .newPdfAnnotationMarkupFromDict (_bcgc );if _gade !=nil {return nil ,_gade ;};_badf .PdfAnnotationMarkup =_agfc ;_badf .BS =_bcgc .Get ("\u0042\u0053");_badf .IC =_bcgc .Get ("\u0049\u0043");_badf .BE =_bcgc .Get ("\u0042\u0045");_badf .RD =_bcgc .Get ("\u0052\u0044");return &_badf ,nil ;};func _ebdae (_ebaaa _de .PdfObject ,_gffab *PdfReader )(*OutlineDest ,error ){_cgdg ,_bedfef :=_de .GetArray (_ebaaa );if !_bedfef {return nil ,_fe .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_fecgg :=_cgdg .Len ();if _fecgg < 2{return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fecgg );};_bgggb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_dadgda :=_cgdg .Get (0);if _bgafa ,_bbaa :=_de .GetIndirect (_dadgda );_bbaa {if _ ,_eefea ,_eebab :=_gffab .PageFromIndirectObject (_bgafa );_eebab ==nil {_bgggb .Page =int64 (_eefea -1);}else {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bgafa );};_bgggb .PageObj =_bgafa ;}else if _gceeg ,_eeegg :=_de .GetIntVal (_dadgda );_eeegg {if _gceeg >=0&&_gceeg < len (_gffab .PageList ){_bgggb .PageObj =_gffab .PageList [_gceeg ].GetPageAsIndirectObject ();}else {_bc .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gceeg );};_bgggb .Page =int64 (_gceeg );}else {return nil ,_d .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_dadgda );};_fegf ,_bedfef :=_de .GetNameVal (_cgdg .Get (1));if !_bedfef {_bc .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cgdg .Get (1));return _bgggb ,nil ;};switch _fegf {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fecgg > 2{_bgggb .Y ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_cgdg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fecgg > 2{_bgggb .X ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_cgdg .Get (2)));};case "\u0058\u0059\u005a":if _fecgg > 4{_bgggb .X ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_cgdg .Get (2)));_bgggb .Y ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_cgdg .Get (3)));_bgggb .Zoom ,_ =_de .GetNumberAsFloat (_de .TraceToDirectObject (_cgdg .Get (4)));};default:_fegf ="\u0046\u0069\u0074";};_bgggb .Mode =_fegf ;return _bgggb ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_cebg :=NewPdfAnnotation ();_eff :=&PdfAnnotationCircle {};_eff .PdfAnnotation =_cebg ;_eff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cebg .SetContext (_eff );return _eff ;};func _eaage (_cafge _de .PdfObject )(*PdfPageResourcesColorspaces ,error ){_fbag :=&PdfPageResourcesColorspaces {};if _ffbb ,_caed :=_cafge .(*_de .PdfIndirectObject );_caed {_fbag ._ebedca =_ffbb ;_cafge =_ffbb .PdfObject ;};_edfgd ,_edeb :=_de .GetDict (_cafge );if !_edeb {return nil ,_fe .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fbag .Names =[]string {};_fbag .Colorspaces =map[string ]PdfColorspace {};for _ ,_gcdad :=range _edfgd .Keys (){_deeegb :=_edfgd .Get (_gcdad );_fbag .Names =append (_fbag .Names ,string (_gcdad ));_ecec ,_eccef :=NewPdfColorspaceFromPdfObject (_deeegb );if _eccef !=nil {return nil ,_eccef ;};_fbag .Colorspaces [string (_gcdad )]=_ecec ;};return _fbag ,nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_gdgab *pdfFontSimple )ToPdfObject ()_de .PdfObject {if _gdgab ._dada ==nil {_gdgab ._dada =&_de .PdfIndirectObject {};};_eaaba :=_gdgab .baseFields ().asPdfObjectDictionary ("");_gdgab ._dada .PdfObject =_eaaba ;if _gdgab .FirstChar !=nil {_eaaba .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_gdgab .FirstChar );};if _gdgab .LastChar !=nil {_eaaba .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_gdgab .LastChar );};if _gdgab .Widths !=nil {_eaaba .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_gdgab .Widths );};if _gdgab .Encoding !=nil {_eaaba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gdgab .Encoding );}else if _gdgab ._fafa !=nil {_abffed :=_gdgab ._fafa .ToPdfObject ();if _abffed !=nil {_eaaba .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_abffed );};};return _gdgab ._dada ;};func (_bee *PdfReader )newPdfActionRenditionFromDict (_ggce *_de .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_ggce .Get ("\u0052"),AN :_ggce .Get ("\u0041\u004e"),OP :_ggce .Get ("\u004f\u0050"),JS :_ggce .Get ("\u004a\u0053")},nil ;};

// GetContentStream returns the pattern cell's content stream
func (_cdfba *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gbeed ,_ ,_affa :=_cdfba .GetContentStreamWithEncoder ();return _gbeed ,_affa ;};

// String returns a human readable description of `fontfile`.
func (_fbce *fontFile )String ()string {_eedg :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fbce ._cfaaa !=nil {_eedg =_fbce ._cfaaa .String ();};return _d .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fbce ._geecf ,_eedg );};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_fabc *PdfAcroForm )GetContainingPdfObject ()_de .PdfObject {return _fabc ._efgef };

// B returns the value of the B component of the color.
func (_dcgaf *PdfColorCalRGB )B ()float64 {return float64 (_dcgaf [1])};func (_ggbca *PdfReader )traverseObjectData (_fcdfa _de .PdfObject )error {return _de .ResolveReferencesDeep (_fcdfa ,_ggbca ._dcgaff );};func _acfef (_cece *PdfField ,_efdb _de .PdfObject )error {switch _cece .GetContext ().(type ){case *PdfFieldText :switch _bdbc :=_efdb .(type ){case *_de .PdfObjectName :_gdgfb :=_bdbc ;_bc .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gdgfb .String ());_cece .V =_de .MakeEncodedString (_bdbc .String (),true );case *_de .PdfObjectString :_cece .V =_de .MakeEncodedString (_bdbc .String (),true );default:_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_bdbc ,_bdbc );};case *PdfFieldButton :switch _efdb .(type ){case *_de .PdfObjectName :if len (_efdb .String ())> 0{_cece .V =_efdb ;_dgdae (_cece ,_efdb );};case *_de .PdfObjectString :if len (_efdb .String ())> 0{_cece .V =_de .MakeName (_efdb .String ());_dgdae (_cece ,_cece .V );};default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cece .PartialName (),_efdb );_cece .V =_efdb ;};case *PdfFieldChoice :switch _efdb .(type ){case *_de .PdfObjectName :if len (_efdb .String ())> 0{_cece .V =_de .MakeString (_efdb .String ());_dgdae (_cece ,_efdb );};case *_de .PdfObjectString :if len (_efdb .String ())> 0{_cece .V =_efdb ;_dgdae (_cece ,_de .MakeName (_efdb .String ()));};default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cece .PartialName (),_efdb );_cece .V =_efdb ;};case *PdfFieldSignature :_bc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cece .PartialName (),_efdb );};return nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_ebbf *Image )ToGoImage ()(_a .Image ,error ){_bc .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_egdad ,_ddaa :=_cbd .NewImage (int (_ebbf .Width ),int (_ebbf .Height ),int (_ebbf .BitsPerComponent ),_ebbf .ColorComponents ,_ebbf .Data ,_ebbf ._acfbc ,_ebbf ._affeg );if _ddaa !=nil {return nil ,_ddaa ;};return _egdad ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_cffb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _cffb .Alternate ==nil {_bc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _cffb .N ==1{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_eaad :=NewPdfColorspaceDeviceGray ();return _eaad .ImageToRGB (img );}else if _cffb .N ==3{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _cffb .N ==4{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cgee :=NewPdfColorspaceDeviceCMYK ();return _cgee .ImageToRGB (img );}else {return img ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_bc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_cffb );_ecfa ,_bag :=_cffb .Alternate .ImageToRGB (img );_bc .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bc .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ecfa );return _ecfa ,_bag ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _de .PdfObject ;Mac _de .PdfObject ;Unix _de .PdfObject ;NewWindow _de .PdfObject ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_egdag :=&PdfColorspaceCalRGB {};_egdag .BlackPoint =[]float64 {0.0,0.0,0.0};_egdag .Gamma =[]float64 {1.0,1.0,1.0};_egdag .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _egdag ;};func _fffb (_dgge _de .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_abcga :=NewPdfColorspaceSpecialSeparation ();if _cebb ,_afdd :=_dgge .(*_de .PdfIndirectObject );_afdd {_abcga ._egeae =_cebb ;};_dgge =_de .TraceToDirectObject (_dgge );_eaeab ,_eedda :=_dgge .(*_de .PdfObjectArray );if !_eedda {return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _eaeab .Len ()!=4{return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_dgge =_eaeab .Get (0);_defd ,_eedda :=_dgge .(*_de .PdfObjectName );if !_eedda {return nil ,_d .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_defd !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_d .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_dgge =_eaeab .Get (1);_defd ,_eedda =_dgge .(*_de .PdfObjectName );if !_eedda {return nil ,_d .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_abcga .ColorantName =_defd ;_dgge =_eaeab .Get (2);_afgb ,_gadc :=NewPdfColorspaceFromPdfObject (_dgge );if _gadc !=nil {return nil ,_gadc ;};_abcga .AlternateSpace =_afgb ;_bffa ,_gadc :=_gbag (_eaeab .Get (3));if _gadc !=nil {return nil ,_gadc ;};_abcga .TintTransform =_bffa ;return _abcga ,nil ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_eefc *_de .PdfIndirectObject ;};func (_ddde *PdfReader )newPdfAnnotationRichMediaFromDict (_gdff *_de .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ege :=&PdfAnnotationRichMedia {};_ege .RichMediaSettings =_gdff .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_ege .RichMediaContent =_gdff .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ege ,nil ;};

// RemovePage removes a page by number.
func (_cgef *PdfAppender )RemovePage (pageNum int ){_agfec :=pageNum -1;_cgef ._ddebe =append (_cgef ._ddebe [0:_agfec ],_cgef ._ddebe [pageNum :]...);};func (_gaa *PdfAnnotation )String ()string {_cce :="";_dfgea ,_gga :=_gaa .ToPdfObject ().(*_de .PdfIndirectObject );if _gga {_cce =_d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gaa ._fgd ,_dfgea .PdfObject .String ());};return _cce ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cbba *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbfcf ,_bcdgc :=_de .GetNumbersAsFloat (objects );if _bcdgc !=nil {return nil ,_bcdgc ;};return _cbba .ColorFromFloats (_cbfcf );};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gad .ReadSeeker )(*PdfFont ,error ){_eddae ,_aafce :=_ge .ReadAll (r );if _aafce !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aafce );return nil ,_aafce ;};_cbae ,_aafce :=_eg .TtfParse (_gd .NewReader (_eddae ));if _aafce !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_aafce );return nil ,_aafce ;};_cfgbf :=&pdfCIDFontType2 {fontCommon :fontCommon {_fagbeb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_de .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_edee :=make ([]rune ,0,len (_cbae .Chars ));for _gdcf :=range _cbae .Chars {_edee =append (_edee ,rune (_gdcf ));};_gef .Slice (_edee ,func (_aaff ,_decga int )bool {return _edee [_aaff ]< _edee [_decga ]});_egceg :=1000.0/float64 (_cbae .UnitsPerEm );if len (_cbae .Widths )<=0{return nil ,_fe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_fdfac :=_egceg *float64 (_cbae .Widths [0]);_afbe :=make (map[rune ]int );for _ ,_eegbg :=range _edee {_abfbd :=_cbae .Chars [_eegbg ];_bbfd :=_egceg *float64 (_cbae .Widths [_abfbd ]);_afbe [_eegbg ]=int (_bbfd );};_cfgbf ._faefg =_afbe ;_cfgbf .DW =_de .MakeInteger (int64 (_fdfac ));_cbbe :=_gfg (_edee ,_afbe ,_cbae .Chars );_cfgbf .W =_de .MakeIndirectObject (_cbbe );_bgdgg :=_de .MakeDict ();_bgdgg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_de .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_bgdgg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_de .MakeString ("\u0041\u0064\u006fb\u0065"));_bgdgg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_de .MakeInteger (0));_cfgbf .CIDSystemInfo =_bgdgg ;_ddfcga :=&PdfFontDescriptor {FontName :_de .MakeName (_cbae .PostScriptName ),Ascent :_de .MakeFloat (_egceg *float64 (_cbae .TypoAscender )),Descent :_de .MakeFloat (_egceg *float64 (_cbae .TypoDescender )),CapHeight :_de .MakeFloat (_egceg *float64 (_cbae .CapHeight )),FontBBox :_de .MakeArrayFromFloats ([]float64 {_egceg *float64 (_cbae .Xmin ),_egceg *float64 (_cbae .Ymin ),_egceg *float64 (_cbae .Xmax ),_egceg *float64 (_cbae .Ymax )}),ItalicAngle :_de .MakeFloat (float64 (_cbae .ItalicAngle )),MissingWidth :_de .MakeFloat (_egceg *float64 (_cbae .Widths [0]))};_cbadg ,_aafce :=_de .MakeStream (_eddae ,_de .NewFlateEncoder ());if _aafce !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aafce );return nil ,_aafce ;};_cbadg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_de .MakeInteger (int64 (len (_eddae ))));_ddfcga .FontFile2 =_cbadg ;if _cbae .Bold {_ddfcga .StemV =_de .MakeInteger (120);}else {_ddfcga .StemV =_de .MakeInteger (70);};_cfdg :=_adca ;if _cbae .IsFixedPitch {_cfdg |=_bdafe ;};if _cbae .ItalicAngle !=0{_cfdg |=_caadb ;};_ddfcga .Flags =_de .MakeInteger (int64 (_cfdg ));_cfgbf ._ccbbd =_cbae .PostScriptName ;_cfgbf ._aceg =_ddfcga ;_ffgc :=pdfFontType0 {fontCommon :fontCommon {_fagbeb :"\u0054\u0079\u0070e\u0030",_ccbbd :_cbae .PostScriptName },DescendantFont :&PdfFont {_adce :_cfgbf },Encoding :_de .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fcad :_cbae .NewEncoder ()};if len (_cbae .Chars )> 0{_gedab :=make (map[_bd .CharCode ]rune ,len (_cbae .Chars ));for _gfeeb ,_gdga :=range _cbae .Chars {_cffa :=_bd .CharCode (_gdga );if _egcef ,_afcf :=_gedab [_cffa ];!_afcf ||(_afcf &&_egcef > _gfeeb ){_gedab [_cffa ]=_gfeeb ;};};_ffgc ._eegcf =_bd .NewToUnicodeCMap (_gedab );};_ggdcd :=PdfFont {_adce :&_ffgc };return &_ggdcd ,nil ;};func (_acfcc *PdfPattern )getDict ()*_de .PdfObjectDictionary {if _efdac ,_gecf :=_acfcc ._addd .(*_de .PdfIndirectObject );_gecf {_adafa ,_cfbef :=_efdac .PdfObject .(*_de .PdfObjectDictionary );if !_cfbef {return nil ;};return _adafa ;}else if _abfge ,_dfgc :=_acfcc ._addd .(*_de .PdfObjectStream );_dfgc {return _abfge .PdfObjectDictionary ;}else {_bc .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_acfcc ._addd );return nil ;};};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _ga .Time ){_gaag =creationDate };

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func _bgcfa ()string {return _bddab };

// GetPageDict converts the Page to a PDF object dictionary.
func (_gdda *PdfPage )GetPageDict ()*_de .PdfObjectDictionary {_gbgba :=_gdda ._dgdcb ;_gbgba .Clear ();_gbgba .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050\u0061\u0067\u0065"));_gbgba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdda .Parent );if _gdda .LastModified !=nil {_gbgba .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gdda .LastModified .ToPdfObject ());};if _gdda .Resources !=nil {_gbgba .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gdda .Resources .ToPdfObject ());};if _gdda .CropBox !=nil {_gbgba .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gdda .CropBox .ToPdfObject ());};if _gdda .MediaBox !=nil {_gbgba .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gdda .MediaBox .ToPdfObject ());};if _gdda .BleedBox !=nil {_gbgba .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gdda .BleedBox .ToPdfObject ());};if _gdda .TrimBox !=nil {_gbgba .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gdda .TrimBox .ToPdfObject ());};if _gdda .ArtBox !=nil {_gbgba .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gdda .ArtBox .ToPdfObject ());};_gbgba .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gdda .BoxColorInfo );_gbgba .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gdda .Contents );if _gdda .Rotate !=nil {_gbgba .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_de .MakeInteger (*_gdda .Rotate ));};_gbgba .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gdda .Group );_gbgba .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gdda .Thumb );_gbgba .SetIfNotNil ("\u0042",_gdda .B );_gbgba .SetIfNotNil ("\u0044\u0075\u0072",_gdda .Dur );_gbgba .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gdda .Trans );_gbgba .SetIfNotNil ("\u0041\u0041",_gdda .AA );_gbgba .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gdda .Metadata );_gbgba .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gdda .PieceInfo );_gbgba .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gdda .StructParents );_gbgba .SetIfNotNil ("\u0049\u0044",_gdda .ID );_gbgba .SetIfNotNil ("\u0050\u005a",_gdda .PZ );_gbgba .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gdda .SeparationInfo );_gbgba .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gdda .Tabs );_gbgba .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gdda .TemplateInstantiated );_gbgba .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gdda .PresSteps );_gbgba .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gdda .UserUnit );_gbgba .SetIfNotNil ("\u0056\u0050",_gdda .VP );if _gdda ._bbeg !=nil {_bbac :=_de .MakeArray ();for _ ,_bcfbe :=range _gdda ._bbeg {if _agec :=_bcfbe .GetContext ();_agec !=nil {_bbac .Append (_agec .ToPdfObject ());}else {_bbac .Append (_bcfbe .ToPdfObject ());};};if _bbac .Len ()> 0{_gbgba .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_bbac );};}else if _gdda .Annots !=nil {_gbgba .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gdda .Annots );};return _gbgba ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gfcge *Outline )ToPdfObject ()_de .PdfObject {return _gfcge .ToPdfOutline ().ToPdfObject ()};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _de .PdfObject ;BS _de .PdfObject ;LE _de .PdfObject ;IC _de .PdfObject ;LL _de .PdfObject ;LLE _de .PdfObject ;Cap _de .PdfObject ;IT _de .PdfObject ;LLO _de .PdfObject ;CP _de .PdfObject ;Measure _de .PdfObject ;CO _de .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cgfca *PdfShadingPattern )ToPdfObject ()_de .PdfObject {_cgfca .PdfPattern .ToPdfObject ();_ecfb :=_cgfca .getDict ();if _cgfca .Shading !=nil {_ecfb .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cgfca .Shading .ToPdfObject ());};if _cgfca .Matrix !=nil {_ecfb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cgfca .Matrix );};if _cgfca .ExtGState !=nil {_ecfb .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cgfca .ExtGState );};return _cgfca ._addd ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cgd :=NewPdfAction ();_be :=&PdfActionImportData {};_be .PdfAction =_cgd ;_cgd .SetContext (_be );return _be ;};func _gafcc (){_dcdeed ,_ccaac :=_e .ReadBuildInfo ();if !_ccaac {if !_fggbe {_d .Printf ("\u0042\u0075i\u006c\u0064\u0020\u0069n\u0066\u006fr\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0045\u0078\u0069\u0074i\u006e\u0067\u0031\u000a");_cb .Exit (1);}else {return ;};};_bbgd :=0;for _ ,_bdeab :=range _dcdeed .Deps {if _bdeab .Path =="g\u0069\u0074\u0068\u0075\u0062\u002ec\u006f\u006d\u002f\u0075\u006e\u0069\u0064\u006f\u0063/\u0075\u006e\u0069p\u0064f\u002f\u0076\u0033"&&_bdeab .Replace ==nil {_bbgd =1;};};_bacb :=_fggbe ;if _c .HasPrefix (_dcdeed .Path ,"\u0067i\u0074h\u0075\u0062\u002e\u0063\u006fm\u002f\u0075n\u0069\u0064\u006f\u0063\u002f"){_bacb =true ;}else if _c .HasPrefix (_dcdeed .Main .Path ,"\u0067i\u0074h\u0075\u0062\u002e\u0063\u006fm\u002f\u0075n\u0069\u0064\u006f\u0063\u002f"){_bacb =true ;};if _bbgd !=1&&!_bacb {_d .Printf ("\u0050\u0061\u0063\u006b\u0061\u0067\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u002d\u0020E\u0078\u0069t\u0069\u006e\u0067\u000a");_cb .Exit (1);};};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_egc :=NewPdfAction ();_df :=&PdfActionLaunch {};_df .PdfAction =_egc ;_egc .SetContext (_df );return _df ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_gcdf :=NewPdfAnnotation ();_beec :=&PdfAnnotationInk {};_beec .PdfAnnotation =_gcdf ;_beec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcdf .SetContext (_beec );return _beec ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eceb pdfCIDFontType0 )GetRuneMetrics (r rune )(_eg .CharMetrics ,bool ){return _eg .CharMetrics {Wx :_eceb ._fefcb },true ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_ffaf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_gb .CharCode )(_dgccc []rune ,_cfbb ,_gadbf int ){_ffde ,_cfbb ,_gadbf :=_ffaf .CharcodesToStrings (charcodes );return []rune (_c .Join (_ffde ,"")),_cfbb ,_gadbf ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fce *PdfColorCalGray )GetNumComponents ()int {return 1};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_ddbf *PdfAppender )updateObjectsDeep (_fcfdg _de .PdfObject ,_caad map[_de .PdfObject ]struct{}){if _caad ==nil {_caad =map[_de .PdfObject ]struct{}{};};if _ ,_gbfe :=_caad [_fcfdg ];_gbfe ||_fcfdg ==nil {return ;};_caad [_fcfdg ]=struct{}{};_dbeb :=_de .ResolveReferencesDeep (_fcfdg ,_ddbf ._bece );if _dbeb !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbeb );};switch _fagb :=_fcfdg .(type ){case *_de .PdfIndirectObject :switch {case _fagb .GetParser ()==_ddbf ._bge ._fabda :return ;case _fagb .GetParser ()==_ddbf .Reader ._fabda :_ece ,_ :=_ddbf ._bge .GetIndirectObjectByNumber (int (_fagb .ObjectNumber ));_ffac ,_efff :=_ece .(*_de .PdfIndirectObject );if _efff &&_ffac !=nil {if _ffac .PdfObject !=_fagb .PdfObject &&_ffac .PdfObject .WriteString ()!=_fagb .PdfObject .WriteString (){_ddbf .addNewObject (_fcfdg );_ddbf ._gccf [_fcfdg ]=_fagb .ObjectNumber ;};};default:_ddbf .addNewObject (_fcfdg );};_ddbf .updateObjectsDeep (_fagb .PdfObject ,_caad );case *_de .PdfObjectArray :for _ ,_cdcb :=range _fagb .Elements (){_ddbf .updateObjectsDeep (_cdcb ,_caad );};case *_de .PdfObjectDictionary :for _ ,_gbcb :=range _fagb .Keys (){_ddbf .updateObjectsDeep (_fagb .Get (_gbcb ),_caad );};case *_de .PdfObjectStreams :if _fagb .GetParser ()!=_ddbf ._bge ._fabda {for _ ,_acfge :=range _fagb .Elements (){_ddbf .updateObjectsDeep (_acfge ,_caad );};};case *_de .PdfObjectStream :switch {case _fagb .GetParser ()==_ddbf ._bge ._fabda :return ;case _fagb .GetParser ()==_ddbf .Reader ._fabda :if _dfbb ,_cbfb :=_ddbf ._bge ._fabda .LookupByReference (_fagb .PdfObjectReference );_cbfb ==nil {var _cbfg bool ;if _gdca ,_ggcb :=_de .GetStream (_dfbb );_ggcb &&_gd .Equal (_gdca .Stream ,_fagb .Stream ){_cbfg =true ;};if _begg ,_ggg :=_de .GetDict (_dfbb );_cbfg &&_ggg {_cbfg =_begg .WriteString ()==_fagb .PdfObjectDictionary .WriteString ();};if _cbfg {return ;};};if _fagb .ObjectNumber !=0{_ddbf ._gccf [_fcfdg ]=_fagb .ObjectNumber ;};default:if _ ,_cea :=_ddbf ._edec [_fcfdg ];!_cea {_ddbf .addNewObject (_fcfdg );};};_ddbf .updateObjectsDeep (_fagb .PdfObjectDictionary ,_caad );};};func (_dcae *PdfWriter )addObject (_dgfea _de .PdfObject )bool {_agbbad :=_dcae .hasObject (_dgfea );if !_agbbad {_dfcc :=_de .ResolveReferencesDeep (_dgfea ,_dcae ._bagggb );if _dfcc !=nil {_bc .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dfcc );};_dcae ._agfeb =append (_dcae ._agfeb ,_dgfea );_dcae ._abdaa [_dgfea ]=struct{}{};return true ;};return false ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_egdb *PdfColorspaceICCBased )ToPdfObject ()_de .PdfObject {_ebbc :=&_de .PdfObjectArray {};_ebbc .Append (_de .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _eagd *_de .PdfObjectStream ;if _egdb ._efcg !=nil {_eagd =_egdb ._efcg ;}else {_eagd =&_de .PdfObjectStream {};};_fefa :=_de .MakeDict ();_fefa .Set ("\u004e",_de .MakeInteger (int64 (_egdb .N )));if _egdb .Alternate !=nil {_fefa .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_egdb .Alternate .ToPdfObject ());};if _egdb .Metadata !=nil {_fefa .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_egdb .Metadata );};if _egdb .Range !=nil {var _cgaed []_de .PdfObject ;for _ ,_fddf :=range _egdb .Range {_cgaed =append (_cgaed ,_de .MakeFloat (_fddf ));};_fefa .Set ("\u0052\u0061\u006eg\u0065",_de .MakeArray (_cgaed ...));};_fefa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_egdb .Data ))));_eagd .Stream =_egdb .Data ;_eagd .PdfObjectDictionary =_fefa ;_ebbc .Append (_eagd );if _egdb ._dgcc !=nil {_egdb ._dgcc .PdfObject =_ebbc ;return _egdb ._dgcc ;};return _ebbc ;};func (_daab *PdfReader )newPdfActionFromIndirectObject (_bad *_de .PdfIndirectObject )(*PdfAction ,error ){_geb ,_cdg :=_bad .PdfObject .(*_de .PdfObjectDictionary );if !_cdg {return nil ,_d .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_daab ._gafgf .GetModelFromPrimitive (_geb );model !=nil {_cc ,_beae :=model .(*PdfAction );if !_beae {return nil ,_d .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _cc ,nil ;};_gec :=&PdfAction {};_gec ._cg =_bad ;_daab ._gafgf .Register (_geb ,_gec );if _gcb :=_geb .Get ("\u0054\u0079\u0070\u0065");_gcb !=nil {_fac ,_dee :=_gcb .(*_de .PdfObjectName );if !_dee {_bc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gcb );}else {if *_fac !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bc .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_fac );};_gec .Type =_fac ;};};if _fgc :=_geb .Get ("\u004e\u0065\u0078\u0074");_fgc !=nil {_gec .Next =_fgc ;};if _fad :=_geb .Get ("\u0053");_fad !=nil {_gec .S =_fad ;};_eba ,_deg :=_gec .S .(*_de .PdfObjectName );if !_deg {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gec .S );return nil ,_d .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gec .S );};_dde :=PdfActionType (_eba .String ());switch _dde {case ActionTypeGoTo :_ffe ,_gee :=_daab .newPdfActionGotoFromDict (_geb );if _gee !=nil {return nil ,_gee ;};_ffe .PdfAction =_gec ;_gec ._def =_ffe ;return _gec ,nil ;case ActionTypeGoToR :_gdd ,_edb :=_daab .newPdfActionGotoRFromDict (_geb );if _edb !=nil {return nil ,_edb ;};_gdd .PdfAction =_gec ;_gec ._def =_gdd ;return _gec ,nil ;case ActionTypeGoToE :_cad ,_efd :=_daab .newPdfActionGotoEFromDict (_geb );if _efd !=nil {return nil ,_efd ;};_cad .PdfAction =_gec ;_gec ._def =_cad ;return _gec ,nil ;case ActionTypeLaunch :_aedd ,_cbe :=_daab .newPdfActionLaunchFromDict (_geb );if _cbe !=nil {return nil ,_cbe ;};_aedd .PdfAction =_gec ;_gec ._def =_aedd ;return _gec ,nil ;case ActionTypeThread :_cefa ,_aee :=_daab .newPdfActionThreadFromDict (_geb );if _aee !=nil {return nil ,_aee ;};_cefa .PdfAction =_gec ;_gec ._def =_cefa ;return _gec ,nil ;case ActionTypeURI :_gbbd ,_dcb :=_daab .newPdfActionURIFromDict (_geb );if _dcb !=nil {return nil ,_dcb ;};_gbbd .PdfAction =_gec ;_gec ._def =_gbbd ;return _gec ,nil ;case ActionTypeSound :_fdd ,_badd :=_daab .newPdfActionSoundFromDict (_geb );if _badd !=nil {return nil ,_badd ;};_fdd .PdfAction =_gec ;_gec ._def =_fdd ;return _gec ,nil ;case ActionTypeMovie :_ecf ,_fba :=_daab .newPdfActionMovieFromDict (_geb );if _fba !=nil {return nil ,_fba ;};_ecf .PdfAction =_gec ;_gec ._def =_ecf ;return _gec ,nil ;case ActionTypeHide :_gdg ,_gbd :=_daab .newPdfActionHideFromDict (_geb );if _gbd !=nil {return nil ,_gbd ;};_gdg .PdfAction =_gec ;_gec ._def =_gdg ;return _gec ,nil ;case ActionTypeNamed :_ffgd ,_fea :=_daab .newPdfActionNamedFromDict (_geb );if _fea !=nil {return nil ,_fea ;};_ffgd .PdfAction =_gec ;_gec ._def =_ffgd ;return _gec ,nil ;case ActionTypeSubmitForm :_gcg ,_bff :=_daab .newPdfActionSubmitFormFromDict (_geb );if _bff !=nil {return nil ,_bff ;};_gcg .PdfAction =_gec ;_gec ._def =_gcg ;return _gec ,nil ;case ActionTypeResetForm :_gcgc ,_ffab :=_daab .newPdfActionResetFormFromDict (_geb );if _ffab !=nil {return nil ,_ffab ;};_gcgc .PdfAction =_gec ;_gec ._def =_gcgc ;return _gec ,nil ;case ActionTypeImportData :_eea ,_adg :=_daab .newPdfActionImportDataFromDict (_geb );if _adg !=nil {return nil ,_adg ;};_eea .PdfAction =_gec ;_gec ._def =_eea ;return _gec ,nil ;case ActionTypeSetOCGState :_fdf ,_dgf :=_daab .newPdfActionSetOCGStateFromDict (_geb );if _dgf !=nil {return nil ,_dgf ;};_fdf .PdfAction =_gec ;_gec ._def =_fdf ;return _gec ,nil ;case ActionTypeRendition :_gag ,_efa :=_daab .newPdfActionRenditionFromDict (_geb );if _efa !=nil {return nil ,_efa ;};_gag .PdfAction =_gec ;_gec ._def =_gag ;return _gec ,nil ;case ActionTypeTrans :_eaga ,_daf :=_daab .newPdfActionTransFromDict (_geb );if _daf !=nil {return nil ,_daf ;};_eaga .PdfAction =_gec ;_gec ._def =_eaga ;return _gec ,nil ;case ActionTypeGoTo3DView :_fgg ,_fdc :=_daab .newPdfActionGoTo3DViewFromDict (_geb );if _fdc !=nil {return nil ,_fdc ;};_fgg .PdfAction =_gec ;_gec ._def =_fgg ;return _gec ,nil ;case ActionTypeJavaScript :_faca ,_gea :=_daab .newPdfActionJavaScriptFromDict (_geb );if _gea !=nil {return nil ,_gea ;};_faca .PdfAction =_gec ;_gec ._def =_faca ;return _gec ,nil ;};_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_dde );return nil ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func (_fedde *pdfFontSimple )baseFields ()*fontCommon {return &_fedde .fontCommon };

// String returns a string representation of the field.
func (_beabg *PdfField )String ()string {if _eead ,_aefca :=_beabg .ToPdfObject ().(*_de .PdfIndirectObject );_aefca {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_beabg ._addgf ,_eead .PdfObject .String ());};return "";};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fcbe :=NewPdfAction ();_bce :=&PdfActionJavaScript {};_bce .PdfAction =_fcbe ;_fcbe .SetContext (_bce );return _bce ;};

// ToPdfObject implements interface PdfModel.
func (_ggea *PdfAnnotationSquare )ToPdfObject ()_de .PdfObject {_ggea .PdfAnnotation .ToPdfObject ();_cdbc :=_ggea ._afa ;_ddab :=_cdbc .PdfObject .(*_de .PdfObjectDictionary );if _ggea .PdfAnnotationMarkup !=nil {_ggea .PdfAnnotationMarkup .appendToPdfDictionary (_ddab );};_ddab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ddab .SetIfNotNil ("\u0042\u0053",_ggea .BS );_ddab .SetIfNotNil ("\u0049\u0043",_ggea .IC );_ddab .SetIfNotNil ("\u0042\u0045",_ggea .BE );_ddab .SetIfNotNil ("\u0052\u0044",_ggea .RD );return _cdbc ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcdac pdfFontSimple )GetRuneMetrics (r rune )(_eg .CharMetrics ,bool ){if _fcdac ._dgae !=nil {_cdfd ,_abfg :=_fcdac ._dgae [r ];if _abfg {return _cdfd ,true ;};};_ffbd :=_fcdac .Encoder ();if _ffbd ==nil {_bc .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fcdac );return _eg .CharMetrics {},false ;};_fddgf ,_ffdc :=_ffbd .RuneToCharcode (r );if !_ffdc {if r !=' '{_bc .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fcdac );};return _eg .CharMetrics {},false ;};_dcabf ,_adgf :=_fcdac .GetCharMetrics (_fddgf );return _dcabf ,_adgf ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _de .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _de .PdfObject ;Contents _de .PdfObject ;Rotate *int64 ;Group _de .PdfObject ;Thumb _de .PdfObject ;B _de .PdfObject ;Dur _de .PdfObject ;Trans _de .PdfObject ;AA _de .PdfObject ;Metadata _de .PdfObject ;PieceInfo _de .PdfObject ;StructParents _de .PdfObject ;ID _de .PdfObject ;PZ _de .PdfObject ;SeparationInfo _de .PdfObject ;Tabs _de .PdfObject ;TemplateInstantiated _de .PdfObject ;PresSteps _de .PdfObject ;UserUnit _de .PdfObject ;VP _de .PdfObject ;Annots _de .PdfObject ;_bbeg []*PdfAnnotation ;_dgdcb *_de .PdfObjectDictionary ;_eeea *_de .PdfIndirectObject ;_bbbgag *PdfReader ;};func (_fdga *PdfReader )newPdfActionGotoEFromDict (_bdg *_de .PdfObjectDictionary )(*PdfActionGoToE ,error ){_fee ,_fbd :=_fab (_bdg .Get ("\u0046"));if _fbd !=nil {return nil ,_fbd ;};return &PdfActionGoToE {D :_bdg .Get ("\u0044"),NewWindow :_bdg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bdg .Get ("\u0054"),F :_fee },nil ;};

// SetFlag sets the flag for the field.
func (_bcbfe *PdfField )SetFlag (flag FieldFlag ){_bcbfe .Ff =_de .MakeInteger (int64 (flag ))};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aadg *PdfFilespec )ToPdfObject ()_de .PdfObject {_cecc :=_aadg .getDict ();_cecc .Clear ();_cecc .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cecc .SetIfNotNil ("\u0046\u0053",_aadg .FS );_cecc .SetIfNotNil ("\u0046",_aadg .F );_cecc .SetIfNotNil ("\u0055\u0046",_aadg .UF );_cecc .SetIfNotNil ("\u0044\u004f\u0053",_aadg .DOS );_cecc .SetIfNotNil ("\u004d\u0061\u0063",_aadg .Mac );_cecc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_aadg .Unix );_cecc .SetIfNotNil ("\u0049\u0044",_aadg .ID );_cecc .SetIfNotNil ("\u0056",_aadg .V );_cecc .SetIfNotNil ("\u0045\u0046",_aadg .EF );_cecc .SetIfNotNil ("\u0052\u0046",_aadg .RF );_cecc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_aadg .Desc );_cecc .SetIfNotNil ("\u0043\u0049",_aadg .CI );return _aadg ._eddg ;};

// Items returns all children outline items.
func (_daeca *OutlineItem )Items ()[]*OutlineItem {return _daeca .Entries };

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _de .PdfObject ;Flags _de .PdfObject ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ddabb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ccfe *PdfColorspaceSpecialPattern )ToPdfObject ()_de .PdfObject {if _ccfe .UnderlyingCS ==nil {return _de .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gdfd :=_de .MakeArray (_de .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gdfd .Append (_ccfe .UnderlyingCS .ToPdfObject ());if _ccfe ._efbd !=nil {_ccfe ._efbd .PdfObject =_gdfd ;return _ccfe ._efbd ;};return _gdfd ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _de .PdfObject ;Name _de .PdfObject ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_fdbee _gad .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_ecfd _a .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_efabc _a .Image )(*Image ,error );

// Compress an image.
Compress (_dagac *Image ,_ebaf int64 )(*Image ,error );};

// A returns the value of the A component of the color.
func (_agbbe *PdfColorCalRGB )A ()float64 {return float64 (_agbbe [0])};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_fefd *_de .PdfIndirectObject ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_fffe *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _fffe .UnderlyingCS .GetNumComponents ();};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ffcae *PdfPageResources )SetColorspaceByName (keyName _de .PdfObjectName ,cs PdfColorspace )error {_ggaba ,_bfbeb :=_ffcae .GetColorspaces ();if _bfbeb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bfbeb );return _bfbeb ;};if _ggaba ==nil {_ggaba =NewPdfPageResourcesColorspaces ();_ffcae .SetColorSpace (_ggaba );};_ggaba .Set (keyName ,cs );return nil ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_becbc *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_egbd ,_ ,_abbg :=_becbc .CharcodesToUnicodeWithStats (_becbc .BytesToCharcodes (data ));_cddcc :=_gb .ExpandLigatures (_egbd );return _cddcc ,_ff .RuneCountInString (_cddcc ),_abbg ;};

// Width returns the width of `rect`.
func (_eecgd *PdfRectangle )Width ()float64 {return _bgc .Abs (_eecgd .Urx -_eecgd .Llx )};func _aade (_adfae *_cbd .ImageBase )(_dacd Image ){_dacd .Width =int64 (_adfae .Width );_dacd .Height =int64 (_adfae .Height );_dacd .BitsPerComponent =int64 (_adfae .BitsPerComponent );_dacd .ColorComponents =_adfae .ColorComponents ;_dacd .Data =_adfae .Data ;_dacd ._affeg =_adfae .Decode ;_dacd ._acfbc =_adfae .Alpha ;return _dacd ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_gdf :=NewPdfAction ();_dfe :=&PdfActionURI {};_dfe .PdfAction =_gdf ;_gdf .SetContext (_dfe );return _dfe ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _de .PdfObject ;BS _de .PdfObject ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// L returns the value of the L component of the color.
func (_bddb *PdfColorLab )L ()float64 {return float64 (_bddb [0])};var _ _de .PdfObject =&pdfSignDictionary {};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ebffb pdfFontType0 )GetRuneMetrics (r rune )(_eg .CharMetrics ,bool ){if _ebffb .DescendantFont ==nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ebffb );return _eg .CharMetrics {},false ;};return _ebffb .DescendantFont .GetRuneMetrics (r );};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_aacgdf *PdfPageResources )SetXObjectByName (keyName _de .PdfObjectName ,stream *_de .PdfObjectStream )error {if _aacgdf .XObject ==nil {_aacgdf .XObject =_de .MakeDict ();};_adgbg :=_de .TraceToDirectObject (_aacgdf .XObject );_efgeb ,_eaagd :=_adgbg .(*_de .PdfObjectDictionary );if !_eaagd {_bc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_aacgdf .XObject ,_adgbg );return _fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efgeb .Set (keyName ,stream );return nil ;};func (_dfc *PdfReader )newPdfAnnotationFreeTextFromDict (_eedc *_de .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_eebc :=PdfAnnotationFreeText {};_dbdf ,_gfef :=_dfc .newPdfAnnotationMarkupFromDict (_eedc );if _gfef !=nil {return nil ,_gfef ;};_eebc .PdfAnnotationMarkup =_dbdf ;_eebc .DA =_eedc .Get ("\u0044\u0041");_eebc .Q =_eedc .Get ("\u0051");_eebc .RC =_eedc .Get ("\u0052\u0043");_eebc .DS =_eedc .Get ("\u0044\u0053");_eebc .CL =_eedc .Get ("\u0043\u004c");_eebc .IT =_eedc .Get ("\u0049\u0054");_eebc .BE =_eedc .Get ("\u0042\u0045");_eebc .RD =_eedc .Get ("\u0052\u0044");_eebc .BS =_eedc .Get ("\u0042\u0053");_eebc .LE =_eedc .Get ("\u004c\u0045");return &_eebc ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gg :=NewPdfAction ();_fcb :=&PdfActionTrans {};_fcb .PdfAction =_gg ;_gg .SetContext (_fcb );return _fcb ;};

// AddOutlineTree adds outlines to a PDF file.
func (_cgagc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_cgagc ._adbec =outlineTree };func _cdcg (_aaedb *_de .PdfObjectDictionary )(*PdfTilingPattern ,error ){_dddfc :=&PdfTilingPattern {};_ccdcc :=_aaedb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ccdcc ==nil {_bc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_edgae ,_bgdeba :=_ccdcc .(*_de .PdfObjectInteger );if !_bgdeba {_bc .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ccdcc );return nil ,_de .ErrTypeError ;};_dddfc .PaintType =_edgae ;_ccdcc =_aaedb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ccdcc ==nil {_bc .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fagfe ,_bgdeba :=_ccdcc .(*_de .PdfObjectInteger );if !_bgdeba {_bc .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccdcc );return nil ,_de .ErrTypeError ;};_dddfc .TilingType =_fagfe ;_ccdcc =_aaedb .Get ("\u0042\u0042\u006f\u0078");if _ccdcc ==nil {_bc .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccdcc =_de .TraceToDirectObject (_ccdcc );_bbce ,_bgdeba :=_ccdcc .(*_de .PdfObjectArray );if !_bgdeba {_bc .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccdcc );return nil ,_de .ErrTypeError ;};_aeebb ,_fddb :=NewPdfRectangle (*_bbce );if _fddb !=nil {_bc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fddb );return nil ,_fddb ;};_dddfc .BBox =_aeebb ;_ccdcc =_aaedb .Get ("\u0058\u0053\u0074e\u0070");if _ccdcc ==nil {_bc .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bcbdc ,_fddb :=_de .GetNumberAsFloat (_ccdcc );if _fddb !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bcbdc );return nil ,_fddb ;};_dddfc .XStep =_de .MakeFloat (_bcbdc );_ccdcc =_aaedb .Get ("\u0059\u0053\u0074e\u0070");if _ccdcc ==nil {_bc .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdgba ,_fddb :=_de .GetNumberAsFloat (_ccdcc );if _fddb !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cdgba );return nil ,_fddb ;};_dddfc .YStep =_de .MakeFloat (_cdgba );_ccdcc =_aaedb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ccdcc ==nil {_bc .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aaedb ,_bgdeba =_de .TraceToDirectObject (_ccdcc ).(*_de .PdfObjectDictionary );if !_bgdeba {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ccdcc );};_fffag ,_fddb :=NewPdfPageResourcesFromDict (_aaedb );if _fddb !=nil {return nil ,_fddb ;};_dddfc .Resources =_fffag ;if _fdda :=_aaedb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fdda !=nil {_caae ,_aabcc :=_fdda .(*_de .PdfObjectArray );if !_aabcc {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fdda );return nil ,_de .ErrTypeError ;};_dddfc .Matrix =_caae ;};return _dddfc ,nil ;};func (_cbcag *PdfWriter )writeBytes (_befgc []byte ){if _cbcag ._ddabg !=nil {return ;};_fbdg ,_aedfc :=_cbcag ._aagbea .Write (_befgc );_cbcag ._fceed +=int64 (_fbdg );_cbcag ._ddabg =_aedfc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cgfe pdfCIDFontType2 )GetCharMetrics (code _gb .CharCode )(_eg .CharMetrics ,bool ){if _eegb ,_abcgc :=_cgfe ._gdgf [code ];_abcgc {return _eg .CharMetrics {Wx :float64 (_eegb )},true ;};_aada :=rune (code );_fbcfg ,_ceecb :=_cgfe ._faefg [_aada ];if !_ceecb {_fbcfg =int (_cgfe ._bfccg );};return _eg .CharMetrics {Wx :float64 (_fbcfg )},true ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_efgef :_de .MakeIndirectObject (_de .MakeDict ())};};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _de .StreamEncoder )(*XObjectImage ,error ){_afceg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_afceg ,img ,cs ,encoder );};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject implements interface PdfModel.
func (_dbad *PdfAnnotationStrikeOut )ToPdfObject ()_de .PdfObject {_dbad .PdfAnnotation .ToPdfObject ();_dbadg :=_dbad ._afa ;_aga :=_dbadg .PdfObject .(*_de .PdfObjectDictionary );_dbad .PdfAnnotationMarkup .appendToPdfDictionary (_aga );_aga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_aga .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dbad .QuadPoints );return _dbadg ;};func (_gebbc *XObjectImage )getParamsDict ()*_de .PdfObjectDictionary {_efbac :=_de .MakeDict ();_efbac .Set ("\u0057\u0069\u0064t\u0068",_de .MakeInteger (*_gebbc .Width ));_efbac .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_de .MakeInteger (*_gebbc .Height ));_efbac .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_de .MakeInteger (int64 (_gebbc .ColorSpace .GetNumComponents ())));_efbac .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_de .MakeInteger (*_gebbc .BitsPerComponent ));return _efbac ;};func _abeea (_dgcgg *_de .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bddfg :=PdfShadingType4 {};_cdeaf :=_dgcgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cdeaf ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_dgbe ,_gbbcb :=_cdeaf .(*_de .PdfObjectInteger );if !_gbbcb {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdeaf );return nil ,_de .ErrTypeError ;};_bddfg .BitsPerCoordinate =_dgbe ;_cdeaf =_dgcgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cdeaf ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_dgbe ,_gbbcb =_cdeaf .(*_de .PdfObjectInteger );if !_gbbcb {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cdeaf );return nil ,_de .ErrTypeError ;};_bddfg .BitsPerComponent =_dgbe ;_cdeaf =_dgcgg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cdeaf ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_dgbe ,_gbbcb =_cdeaf .(*_de .PdfObjectInteger );if !_gbbcb {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cdeaf );return nil ,_de .ErrTypeError ;};_bddfg .BitsPerComponent =_dgbe ;_cdeaf =_dgcgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cdeaf ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_gcbdc ,_gbbcb :=_cdeaf .(*_de .PdfObjectArray );if !_gbbcb {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdeaf );return nil ,_de .ErrTypeError ;};_bddfg .Decode =_gcbdc ;_cdeaf =_dgcgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cdeaf ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_bddfg .Function =[]PdfFunction {};if _fbbb ,_febdf :=_cdeaf .(*_de .PdfObjectArray );_febdf {for _ ,_dgegab :=range _fbbb .Elements (){_fdfca ,_adbeg :=_gbag (_dgegab );if _adbeg !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adbeg );return nil ,_adbeg ;};_bddfg .Function =append (_bddfg .Function ,_fdfca );};}else {_dfgg ,_eeceb :=_gbag (_cdeaf );if _eeceb !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeceb );return nil ,_eeceb ;};_bddfg .Function =append (_bddfg .Function ,_dfgg );};return &_bddfg ,nil ;};func (_cefe *PdfAnnotationMarkup )appendToPdfDictionary (_ggaf *_de .PdfObjectDictionary ){_ggaf .SetIfNotNil ("\u0054",_cefe .T );if _cefe .Popup !=nil {_ggaf .Set ("\u0050\u006f\u0070u\u0070",_cefe .Popup .ToPdfObject ());};_ggaf .SetIfNotNil ("\u0043\u0041",_cefe .CA );_ggaf .SetIfNotNil ("\u0052\u0043",_cefe .RC );_ggaf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cefe .CreationDate );_ggaf .SetIfNotNil ("\u0049\u0052\u0054",_cefe .IRT );_ggaf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_cefe .Subj );_ggaf .SetIfNotNil ("\u0052\u0054",_cefe .RT );_ggaf .SetIfNotNil ("\u0049\u0054",_cefe .IT );_ggaf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_cefe .ExData );};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_bfda ,_dfffb :=_cb .Open (filePath );if _dfffb !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dfffb );return nil ,_dfffb ;};defer _bfda .Close ();return NewPdfFontFromTTF (_bfda );};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gacf *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _gacf .fill (provider ,appGen );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bfdcc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bfdcc ._bbeg !=nil {return _bfdcc ._bbeg ,nil ;};if _bfdcc .Annots ==nil {_bfdcc ._bbeg =[]*PdfAnnotation {};return nil ,nil ;};if _bfdcc ._bbbgag ==nil {_bfdcc ._bbeg =[]*PdfAnnotation {};return nil ,nil ;};_ebagd ,_cbdbe :=_bfdcc ._bbbgag .loadAnnotations (_bfdcc .Annots );if _cbdbe !=nil {return nil ,_cbdbe ;};if _ebagd ==nil {_bfdcc ._bbeg =[]*PdfAnnotation {};};_bfdcc ._bbeg =_ebagd ;return _bfdcc ._bbeg ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_acab :=NewPdfAnnotation ();_ede :=&PdfAnnotationProjection {};_ede .PdfAnnotation =_acab ;_ede .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acab .SetContext (_ede );return _ede ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fgecg *PdfPageResources )SetXObjectImageByName (keyName _de .PdfObjectName ,ximg *XObjectImage )error {_adegc :=ximg .ToPdfObject ().(*_de .PdfObjectStream );_adedd :=_fgecg .SetXObjectByName (keyName ,_adegc );return _adedd ;};func _eace ()string {return _cfdag };

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gad .ReadSeeker )(*PdfReader ,error ){_fcga :=&PdfReader {_dceac :rs ,_dcgaff :map[_de .PdfObject ]struct{}{},_gafgf :_ecfe (),_daceb :true };_cgaeg ,_accfb :=_de .NewParser (rs );if _accfb !=nil {return nil ,_accfb ;};_fcga ._fabda =_cgaeg ;_cdgd ,_accfb :=_fcga .IsEncrypted ();if _accfb !=nil {return nil ,_accfb ;};if !_cdgd {_accfb =_fcga .loadStructure ();if _accfb !=nil {return nil ,_accfb ;};};return _fcga ,nil ;};func _gfg (_egcad []rune ,_cggc map[rune ]int ,_edgbb map[rune ]_eg .GID )*_de .PdfObjectArray {_cbfbg :=&_de .PdfObjectArray {};for _ddacd :=0;_ddacd < len (_egcad );{_fccgc :=_cggc [_egcad [_ddacd ]];_fdccb :=_ddacd ;for _aaeb :=_ddacd +1;_aaeb < len (_egcad );_aaeb ++{_ffafe :=_cggc [_egcad [_aaeb ]];if _fccgc ==_ffafe {_fdccb =_aaeb ;}else {break ;};};_dfbe :=_edgbb [_egcad [_ddacd ]];_bgcfb :=_edgbb [_egcad [_fdccb ]];_cbfbg .Append (_de .MakeInteger (int64 (_dfbe )));_cbfbg .Append (_de .MakeInteger (int64 (_bgcfb )));_cbfbg .Append (_de .MakeInteger (int64 (_fccgc )));_ddacd =_fdccb +1;};return _cbfbg ;};func _dbdfa (_bbdc *_de .PdfObjectDictionary ,_acdcd *fontCommon ,_bdfcdb _gb .TextEncoder )(*pdfFontSimple ,error ){_affcf :=_faggb (_acdcd );_affcf ._egfa =_bdfcdb ;if _bdfcdb ==nil {_cdffe :=_bbdc .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _cdffe ==nil {_cdffe =_de .MakeInteger (0);};_affcf .FirstChar =_cdffe ;_gcacd ,_cfgaac :=_de .GetIntVal (_cdffe );if !_cfgaac {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cdffe );return nil ,_de .ErrTypeError ;};_dacc :=_gb .CharCode (_gcacd );_cdffe =_bbdc .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cdffe ==nil {_cdffe =_de .MakeInteger (255);};_affcf .LastChar =_cdffe ;_gcacd ,_cfgaac =_de .GetIntVal (_cdffe );if !_cfgaac {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cdffe );return nil ,_de .ErrTypeError ;};_bcefc :=_gb .CharCode (_gcacd );_affcf ._acbc =make (map[_gb .CharCode ]float64 );_cdffe =_bbdc .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cdffe !=nil {_affcf .Widths =_cdffe ;_fbab ,_gbbg :=_de .GetArray (_cdffe );if !_gbbg {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cdffe );return nil ,_de .ErrTypeError ;};_aggec ,_feagg :=_fbab .ToFloat64Array ();if _feagg !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_feagg ;};if len (_aggec )!=int (_bcefc -_dacc +1){_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bcefc -_dacc +1,len (_aggec ));return nil ,_de .ErrRangeError ;};for _fcge ,_gdgff :=range _aggec {_affcf ._acbc [_dacc +_gb .CharCode (_fcge )]=_gdgff ;};};};_affcf .Encoding =_de .TraceToDirectObject (_bbdc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _affcf ,nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ddgcc *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bace *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_agaa :=_bace .actualFont ();if _agaa ==nil {_bc .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bace ._adce );return _eg .CharMetrics {},false ;};if _ccde ,_becff :=_agaa .GetRuneMetrics (r );_becff {return _ccde ,true ;};if _gcgf ,_gbbfd :=_bace .GetFontDescriptor ();_gbbfd ==nil &&_gcgf !=nil {return _eg .CharMetrics {Wx :_gcgf ._fbeg },true ;};_bc .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bace );return _eg .CharMetrics {},false ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_efdf *PdfReader )GetTrailer ()(*_de .PdfObjectDictionary ,error ){_fcfcde :=_efdf ._fabda .GetTrailer ();if _fcfcde ==nil {return nil ,_fe .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fcfcde ,nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_aef :=NewPdfAction ();_eag :=&PdfActionMovie {};_eag .PdfAction =_aef ;_aef .SetContext (_eag );return _eag ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _de .PdfObject )(*PdfFont ,error ){return _eagdb (fontObj ,true )};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_bbggf *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _aecafc []*PdfField ;if _bbggf .AcroForm !=nil {_aecafc =_bbggf .AcroForm .AllFields ();};_fggba :=make (map[*PdfField ]struct{},len (_aecafc ));for _ ,_fdfcb :=range _aecafc {_fggba [_fdfcb ]=struct{}{};};for _ ,_dafgb :=range _bbggf .PageList {_ddcc ,_fefdd :=_dafgb .GetAnnotations ();if _fefdd !=nil {return false ,_fefdd ;};for _ ,_caag :=range _ddcc {_ddafb ,_fece :=_caag .GetContext ().(*PdfAnnotationWidget );if !_fece {continue ;};_cfcga :=_ddafb .Field ();if _cfcga ==nil {return true ,nil ;};if _ ,_dgbgca :=_fggba [_cfcga ];!_dgbgca {return true ,nil ;};};};return false ,nil ;};type pdfCIDFontType2 struct{fontCommon ;_gefgb *_de .PdfIndirectObject ;_ffggf _gb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_de .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _de .PdfObject ;W _de .PdfObject ;DW2 _de .PdfObject ;W2 _de .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _de .PdfObject ;_gdgf map[_gb .CharCode ]float64 ;_bfccg float64 ;_faefg map[rune ]int ;};

// String returns a string describing the font descriptor.
func (_fdgd *PdfFontDescriptor )String ()string {var _aebd []string ;if _fdgd .FontName !=nil {_aebd =append (_aebd ,_fdgd .FontName .String ());};if _fdgd .FontFamily !=nil {_aebd =append (_aebd ,_fdgd .FontFamily .String ());};if _fdgd .fontFile !=nil {_aebd =append (_aebd ,_fdgd .fontFile .String ());};if _fdgd ._cdefg !=nil {_aebd =append (_aebd ,_fdgd ._cdefg .String ());};_aebd =append (_aebd ,_d .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_fdgd .FontFile3 !=nil ));return _d .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_c .Join (_aebd ,"\u002c\u0020"));};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_dbfef *PdfPage )GetAllContentStreams ()(string ,error ){_egedb ,_fgeg :=_dbfef .GetContentStreams ();if _fgeg !=nil {return "",_fgeg ;};return _c .Join (_egedb ,"\u0020"),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_baebg *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _baebg .UnderlyingCS ==nil {return nil ,_fe .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _baebg .UnderlyingCS .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfActionNamed )ToPdfObject ()_de .PdfObject {_fef .PdfAction .ToPdfObject ();_cac :=_fef ._cg ;_dbe :=_cac .PdfObject .(*_de .PdfObjectDictionary );_dbe .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeNamed )));_dbe .SetIfNotNil ("\u004e",_fef .N );return _cac ;};func _gffc (_cafdb _de .PdfObject )(*_de .PdfObjectDictionary ,*fontCommon ,error ){_caea :=&fontCommon {};if _babd ,_gcfd :=_cafdb .(*_de .PdfIndirectObject );_gcfd {_caea ._ecaf =_babd .ObjectNumber ;};_bdbe ,_dbbgd :=_de .GetDict (_cafdb );if !_dbbgd {_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cafdb );return nil ,nil ,ErrFontNotSupported ;};_fgaef ,_dbbgd :=_de .GetNameVal (_bdbe .Get ("\u0054\u0079\u0070\u0065"));if !_dbbgd {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _fgaef !="\u0046\u006f\u006e\u0074"{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fgaef ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_de .ErrTypeError ;};_gded ,_dbbgd :=_de .GetNameVal (_bdbe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dbbgd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_caea ._fagbeb =_gded ;_bedg ,_dbbgd :=_de .GetNameVal (_bdbe .Get ("\u004e\u0061\u006d\u0065"));if _dbbgd {_caea ._bcbfc =_bedg ;};if _gded =="\u0054\u0079\u0070e\u0033"{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_bdbe );return _bdbe ,_caea ,ErrType3FontNotSupported ;};_effg ,_dbbgd :=_de .GetNameVal (_bdbe .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dbbgd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _bdbe ,_caea ,ErrRequiredAttributeMissing ;};_caea ._ccbbd =_effg ;_debeg :=_bdbe .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _debeg !=nil {_ggegf ,_fcce :=_deccb (_debeg );if _fcce !=nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcce );return _bdbe ,_caea ,_fcce ;};_caea ._aceg =_ggegf ;};_beee :=_bdbe .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _beee !=nil {_caea ._beccc =_de .TraceToDirectObject (_beee );_cggf ,_adee :=_agdad (_caea ._beccc ,_caea );if _adee !=nil {return _bdbe ,_caea ,_adee ;};_caea ._eegcf =_cggf ;}else if _gded =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gded =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dfgb ,_dagf :=_bd .NewCIDSystemInfo (_bdbe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _dagf !=nil {return _bdbe ,_caea ,_dagf ;};_cdea :=_d .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_dfgb .Registry ,_dfgb .Ordering );if _bd .IsPredefinedCMap (_cdea ){_caea ._eegcf ,_dagf =_bd .LoadPredefinedCMap (_cdea );if _dagf !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cdea ,_dagf );};};};return _bdbe ,_caea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgfd *PdfAnnotationRichMedia )ToPdfObject ()_de .PdfObject {_bgfd .PdfAnnotation .ToPdfObject ();_eedb :=_bgfd ._afa ;_bbdb :=_eedb .PdfObject .(*_de .PdfObjectDictionary );_bbdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_bbdb .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bgfd .RichMediaSettings );_bbdb .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bgfd .RichMediaContent );return _eedb ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ccbg *PdfField )IsTerminal ()bool {return len (_ccbg .Kids )==0};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cabba *XObjectImage )ToImage ()(*Image ,error ){_dggae :=&Image {};if _cabba .Height ==nil {return nil ,_fe .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dggae .Height =*_cabba .Height ;if _cabba .Width ==nil {return nil ,_fe .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_dggae .Width =*_cabba .Width ;if _cabba .BitsPerComponent ==nil {return nil ,_fe .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_dggae .BitsPerComponent =*_cabba .BitsPerComponent ;_dggae .ColorComponents =_cabba .ColorSpace .GetNumComponents ();_cabba ._afed .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_de .MakeInteger (int64 (_dggae .ColorComponents )));_fgcbc ,_bfeg :=_de .DecodeStream (_cabba ._afed );if _bfeg !=nil {return nil ,_bfeg ;};_dggae .Data =_fgcbc ;if _cabba .Decode !=nil {_egcgc ,_facgbf :=_cabba .Decode .(*_de .PdfObjectArray );if !_facgbf {_bc .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_dgdaed ,_fcccf :=_egcgc .ToFloat64Array ();if _fcccf !=nil {return nil ,_fcccf ;};_dggae ._affeg =_dgdaed ;};return _dggae ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_dedf :=NewPdfAnnotation ();_acgg :=&PdfAnnotationLine {};_acgg .PdfAnnotation =_dedf ;_acgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dedf .SetContext (_acgg );return _acgg ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_gb .SimpleEncoder ,error ){_fbae ,_fcae :=_feddb (basefont );if _fcae !=nil {return nil ,nil ,_fcae ;};_gefac ,_aeef :=_fbae .Encoder ().(_gb .SimpleEncoder );if !_aeef {return nil ,nil ,_d .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fbae .Encoder ());};_eddga :=make (map[rune ]_gb .GlyphName );for _cgaee :=range alphabet {if _ ,_beedg :=_gefac .RuneToCharcode (_cgaee );!_beedg {_ ,_edgba :=_fbae ._dgae [_cgaee ];if !_edgba {_bc .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_cgaee ,_cgaee );continue ;};_cdcfd ,_edgba :=_gb .RuneToGlyph (_cgaee );if !_edgba {_bc .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_cgaee ,_cgaee );continue ;};if len (_eddga )>=255{return nil ,nil ,_fe .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_eddga [_cgaee ]=_cdcfd ;};};var (_effac []_gb .CharCode ;_egfbe []_gb .CharCode ;);for _ebdbb :=_gb .CharCode (1);_ebdbb <=0xff;_ebdbb ++{_bebb ,_abccf :=_gefac .CharcodeToRune (_ebdbb );if !_abccf {_effac =append (_effac ,_ebdbb );continue ;};if _ ,_abccf =alphabet [_bebb ];!_abccf {_egfbe =append (_egfbe ,_ebdbb );};};_aegdb :=append (_effac ,_egfbe ...);if len (_aegdb )< len (_eddga ){return nil ,nil ,_d .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_eddga ),len (_aegdb ));};_edcgb :=make ([]rune ,0,len (_eddga ));for _bgfaa :=range _eddga {_edcgb =append (_edcgb ,_bgfaa );};_gef .Slice (_edcgb ,func (_dfbd ,_gccfe int )bool {return _edcgb [_dfbd ]< _edcgb [_gccfe ]});_bccga :=make (map[_gb .CharCode ]_gb .GlyphName ,len (_edcgb ));for _ ,_bdbad :=range _edcgb {_fbecd :=_aegdb [0];_aegdb =_aegdb [1:];_bccga [_fbecd ]=_eddga [_bdbad ];};_gefac =_gb .ApplyDifferences (_gefac ,_bccga );_fbae .SetEncoder (_gefac );return &PdfFont {_adce :&_fbae },_gefac ,nil ;};func (_fbbcf *PdfReader )buildOutlineTree (_afcd _de .PdfObject ,_abdf *PdfOutlineTreeNode ,_dbaba *PdfOutlineTreeNode ,_gbed map[_de .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gbed ==nil {_gbed =map[_de .PdfObject ]struct{}{};};_gbed [_afcd ]=struct{}{};_dffa ,_ebafd :=_afcd .(*_de .PdfIndirectObject );if !_ebafd {return nil ,nil ,_d .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_afcd );};_gdafg ,_gcae :=_dffa .PdfObject .(*_de .PdfObjectDictionary );if !_gcae {return nil ,nil ,_fe .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bc .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_gdafg ,_dffa ,_dffa );if _dabf :=_gdafg .Get ("\u0054\u0069\u0074l\u0065");_dabf !=nil {_afgfa ,_gdcba :=_fbbcf .newPdfOutlineItemFromIndirectObject (_dffa );if _gdcba !=nil {return nil ,nil ,_gdcba ;};_afgfa .Parent =_abdf ;_afgfa .Prev =_dbaba ;_ddee :=_de .ResolveReference (_gdafg .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_ccabb :=_gbed [_ddee ];_ddee !=nil &&_ddee !=_dffa &&!_ccabb {if !_de .IsNullObject (_ddee ){_cggcg ,_gcbc ,_fdgdd :=_fbbcf .buildOutlineTree (_ddee ,&_afgfa .PdfOutlineTreeNode ,nil ,_gbed );if _fdgdd !=nil {_bc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fdgdd );}else {_afgfa .First =_cggcg ;_afgfa .Last =_gcbc ;};};};_dbaad :=_de .ResolveReference (_gdafg .Get ("\u004e\u0065\u0078\u0074"));if _ ,_cbbg :=_gbed [_dbaad ];_dbaad !=nil &&_dbaad !=_dffa &&!_cbbg {if !_de .IsNullObject (_dbaad ){_gceb ,_egbee ,_ecbcc :=_fbbcf .buildOutlineTree (_dbaad ,_abdf ,&_afgfa .PdfOutlineTreeNode ,_gbed );if _ecbcc !=nil {_bc .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ecbcc );}else {_afgfa .Next =_gceb ;return &_afgfa .PdfOutlineTreeNode ,_egbee ,nil ;};};};return &_afgfa .PdfOutlineTreeNode ,&_afgfa .PdfOutlineTreeNode ,nil ;};_addbb ,_ecbcf :=_afgfdd (_dffa );if _ecbcf !=nil {return nil ,nil ,_ecbcf ;};_addbb .Parent =_abdf ;if _dddea :=_gdafg .Get ("\u0046\u0069\u0072s\u0074");_dddea !=nil {_dddea =_de .ResolveReference (_dddea );_afba :=_de .TraceToDirectObject (_dddea );if _ ,_ebga :=_afba .(*_de .PdfObjectNull );!_ebga &&_afba !=nil {_agae ,_dgcce ,_acae :=_fbbcf .buildOutlineTree (_dddea ,&_addbb .PdfOutlineTreeNode ,nil ,_gbed );if _acae !=nil {_bc .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_acae );}else {_addbb .First =_agae ;_addbb .Last =_dgcce ;};};};return &_addbb .PdfOutlineTreeNode ,&_addbb .PdfOutlineTreeNode ,nil ;};func (_ebcbb *PdfWriter )writeObject (_gbagfe int ,_ececf _de .PdfObject ){_bc .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gbagfe );if _ccfac ,_agbbc :=_ececf .(*_de .PdfIndirectObject );_agbbc {_ebcbb ._egbb [_gbagfe ]=crossReference {Type :1,Offset :_ebcbb ._fceed ,Generation :_ccfac .GenerationNumber };_acaba :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gbagfe );if _caefg ,_gcbdb :=_ccfac .PdfObject .(*pdfSignDictionary );_gcbdb {_caefg ._afda =_ebcbb ._fceed +int64 (len (_acaba ));};if _ccfac .PdfObject ==nil {_bc .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_ccfac .PdfObject =_de .MakeNull ();};_acaba +=_ccfac .PdfObject .WriteString ();_acaba +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_ebcbb .writeString (_acaba );return ;};if _egddb ,_afddc :=_ececf .(*_de .PdfObjectStream );_afddc {_ebcbb ._egbb [_gbagfe ]=crossReference {Type :1,Offset :_ebcbb ._fceed ,Generation :_egddb .GenerationNumber };_acgcb :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gbagfe );_acgcb +=_egddb .PdfObjectDictionary .WriteString ();_acgcb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebcbb .writeString (_acgcb );_ebcbb .writeBytes (_egddb .Stream );_ebcbb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gcdae ,_begfb :=_ececf .(*_de .PdfObjectStreams );_begfb {_ebcbb ._egbb [_gbagfe ]=crossReference {Type :1,Offset :_ebcbb ._fceed ,Generation :_gcdae .GenerationNumber };_effdda :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gbagfe );var _cfbac []string ;var _aaaeb string ;var _faaa int64 ;for _dcded ,_fbbda :=range _gcdae .Elements (){_bcffa ,_bbbe :=_fbbda .(*_de .PdfIndirectObject );if !_bbbe {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gbagfe ,_fbbda );continue ;};_baage :=_bcffa .PdfObject .WriteString ()+"\u0020";_aaaeb =_aaaeb +_baage ;_cfbac =append (_cfbac ,_d .Sprintf ("\u0025\u0064\u0020%\u0064",_bcffa .ObjectNumber ,_faaa ));_ebcbb ._egbb [int (_bcffa .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gbagfe ,Index :_dcded };_faaa =_faaa +int64 (len ([]byte (_baage )));};_eabeg :=_c .Join (_cfbac ,"\u0020")+"\u0020";_eaced :=_de .NewFlateEncoder ();_aecec :=_eaced .MakeStreamDict ();_aecec .Set (_de .PdfObjectName ("\u0054\u0079\u0070\u0065"),_de .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_cacc :=int64 (_gcdae .Len ());_aecec .Set (_de .PdfObjectName ("\u004e"),_de .MakeInteger (_cacc ));_bcbdf :=int64 (len (_eabeg ));_aecec .Set (_de .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_de .MakeInteger (_bcbdf ));_gcce ,_ :=_eaced .EncodeBytes ([]byte (_eabeg +_aaaeb ));_eadec :=int64 (len (_gcce ));_aecec .Set (_de .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_de .MakeInteger (_eadec ));_effdda +=_aecec .WriteString ();_effdda +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_ebcbb .writeString (_effdda );_ebcbb .writeBytes (_gcce );_ebcbb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_ebcbb .writeString (_ececf .WriteString ());};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_aeegf *PdfFieldButton )ToPdfObject ()_de .PdfObject {_aeegf .PdfField .ToPdfObject ();_aaeee :=_aeegf ._gddee ;_adcg :=_aaeee .PdfObject .(*_de .PdfObjectDictionary );_adcg .Set ("\u0046\u0054",_de .MakeName ("\u0042\u0074\u006e"));if _aeegf .Opt !=nil {_adcg .Set ("\u004f\u0070\u0074",_aeegf .Opt );};return _aaeee ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dgccf *PdfPageResources )SetXObjectFormByName (keyName _de .PdfObjectName ,xform *XObjectForm )error {_agfcd :=xform .ToPdfObject ().(*_de .PdfObjectStream );_adcc :=_dgccf .SetXObjectByName (keyName ,_agfcd );return _adcc ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_cfb :=NewPdfAnnotation ();_efg :=&PdfAnnotationSound {};_efg .PdfAnnotation =_cfb ;_efg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfb .SetContext (_efg );return _efg ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_abdad *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _de .GetNumberAsFloat (_abdad .Descent );};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gddcg *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _cgga []float64 ;for _dcged :=0;_dcged < _gddcg .GetNumComponents ();_dcged ++{_cgga =append (_cgga ,0.0,1.0);};return _cgga ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _de .PdfObject ;Flags _de .PdfObject ;};func _ggeb ()string {_ageb :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _aefb _gd .Buffer ;for _dgbg :=0;_dgbg < 6;_dgbg ++{_aefb .WriteRune (rune (_ageb [_ad .Intn (len (_ageb ))]));};return _aefb .String ();};func _cgeb (_gdgb string )(map[_gb .CharCode ]_gb .GlyphName ,error ){_dace :=_c .Split (_gdgb ,"\u000a");_bfcf :=make (map[_gb .CharCode ]_gb .GlyphName );for _ ,_ggcdg :=range _dace {_dddf :=_edffe .FindStringSubmatch (_ggcdg );if _dddf ==nil {continue ;};_gceca ,_bfcg :=_dddf [1],_dddf [2];_gdegg ,_dfeb :=_ea .Atoi (_gceca );if _dfeb !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ggcdg );return nil ,_de .ErrTypeError ;};_bfcf [_gb .CharCode (_gdegg )]=_gb .GlyphName (_bfcg );};_bc .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bfcf );return _bfcf ,nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_abddb *PdfPageResources )SetFontByName (keyName _de .PdfObjectName ,obj _de .PdfObject )error {if _abddb .Font ==nil {_abddb .Font =_de .MakeDict ();};_bgaad ,_ccbcc :=_de .TraceToDirectObject (_abddb .Font ).(*_de .PdfObjectDictionary );if !_ccbcc {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_de .TraceToDirectObject (_abddb .Font ));return _de .ErrTypeError ;};_bgaad .Set (keyName ,obj );return nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _de .PdfObject ;Name _de .PdfObject ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_adgc *PdfAcroForm ,_adbg *PdfField ,_efba *PdfAnnotationWidget )(*_de .PdfObjectDictionary ,error );};func (_eecec *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _eecec ._aceg };func (_gfcb *PdfReader )newPdfAnnotationStampFromDict (_fadca *_de .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_egaf :=PdfAnnotationStamp {};_bef ,_aacb :=_gfcb .newPdfAnnotationMarkupFromDict (_fadca );if _aacb !=nil {return nil ,_aacb ;};_egaf .PdfAnnotationMarkup =_bef ;_egaf .Name =_fadca .Get ("\u004e\u0061\u006d\u0065");return &_egaf ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fde :=NewPdfAnnotation ();_ccg :=&PdfAnnotationPolyLine {};_ccg .PdfAnnotation =_fde ;_ccg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fde .SetContext (_ccg );return _ccg ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _de .PdfObject ;IsMap _de .PdfObject ;};func _eagdb (_adbdc _de .PdfObject ,_fcdaa bool )(*PdfFont ,error ){_dcdab ,_deeeg ,_ccd :=_gffc (_adbdc );if _ccd !=nil {if _ccd ==ErrType3FontNotSupported ||_ccd ==ErrType1CFontNotSupported {_edaag ,_beaf :=_dbdfa (_dcdab ,_deeeg ,nil );if _beaf !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_deeeg ,_beaf );return nil ,_ccd ;};return &PdfFont {_adce :_edaag },_ccd ;};return nil ,_ccd ;};_ccccg :=&PdfFont {};switch _deeeg ._fagbeb {case "\u0054\u0079\u0070e\u0030":if !_fcdaa {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_deeeg );return nil ,_fe .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ebedd ,_dffdb :=_bdbgfc (_dcdab ,_deeeg );if _dffdb !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_deeeg ,_dffdb );return nil ,_dffdb ;};_ccccg ._adce =_ebedd ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ddfd *pdfFontSimple ;_baed ,_ffeeg :=_eg .NewStdFontByName (_eg .StdFontName (_deeeg ._ccbbd ));if _ffeeg {_ceed :=_cgeeg (_baed );_ccccg ._adce =&_ceed ;_ecdc :=_de .TraceToDirectObject (_ceed .ToPdfObject ());_dggee ,_eeeg ,_dgaae :=_gffc (_ecdc );if _dgaae !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_deeeg ,_ceed );return nil ,_dgaae ;};for _ ,_feaaf :=range _dcdab .Keys (){_dggee .Set (_feaaf ,_dcdab .Get (_feaaf ));};_ddfd ,_dgaae =_dbdfa (_dggee ,_eeeg ,_ceed ._egfa );if _dgaae !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_deeeg ,_ceed );return nil ,_dgaae ;};_ddfd ._acbc =_ceed ._acbc ;_ddfd ._dgae =_ceed ._dgae ;}else {_ddfd ,_ccd =_dbdfa (_dcdab ,_deeeg ,nil );if _ccd !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_deeeg ,_ccd );return nil ,_ccd ;};};_ccd =_ddfd .addEncoding ();if _ccd !=nil {return nil ,_ccd ;};if _ffeeg {_ddfd .updateStandard14Font ();};if _ffeeg &&_ddfd ._fafa ==nil &&_ddfd ._egfa ==nil {_bc .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ddfd );_bc .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_baed );};if len (_ddfd ._acbc )==0{_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ddfd );};_ccccg ._adce =_ddfd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fgfe ,_faeea :=_bagd (_dcdab ,_deeeg );if _faeea !=nil {_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_faeea );return nil ,_faeea ;};_ccccg ._adce =_fgfe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bgdg ,_gffa :=_geda (_dcdab ,_deeeg );if _gffa !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_deeeg ,_gffa );return nil ,_gffa ;};_ccccg ._adce =_bgdg ;default:_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_deeeg );return nil ,_d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_deeeg );};return _ccccg ,nil ;};func (_cag *PdfReader )newPdfActionJavaScriptFromDict (_eebf *_de .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_eebf .Get ("\u004a\u0053")},nil ;};func _edaf (_bgggd _de .PdfObject )(*PdfFunctionType2 ,error ){_eegcfa :=&PdfFunctionType2 {};var _dgec *_de .PdfObjectDictionary ;if _begaa ,_aebbd :=_bgggd .(*_de .PdfIndirectObject );_aebbd {_bcga ,_dagg :=_begaa .PdfObject .(*_de .PdfObjectDictionary );if !_dagg {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eegcfa ._fefd =_begaa ;_dgec =_bcga ;}else if _gcee ,_aecd :=_bgggd .(*_de .PdfObjectDictionary );_aecd {_dgec =_gcee ;}else {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bc .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_dgec .String ());_eadef ,_baff :=_de .TraceToDirectObject (_dgec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_baff {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eadef .Len ()< 0||_eadef .Len ()%2!=0{_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gfcf ,_cgcb :=_eadef .ToFloat64Array ();if _cgcb !=nil {return nil ,_cgcb ;};_eegcfa .Domain =_gfcf ;_eadef ,_baff =_de .TraceToDirectObject (_dgec .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if _baff {if _eadef .Len ()< 0||_eadef .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_afcff ,_fcdg :=_eadef .ToFloat64Array ();if _fcdg !=nil {return nil ,_fcdg ;};_eegcfa .Range =_afcff ;};_eadef ,_baff =_de .TraceToDirectObject (_dgec .Get ("\u0043\u0030")).(*_de .PdfObjectArray );if _baff {_cgdef ,_bggb :=_eadef .ToFloat64Array ();if _bggb !=nil {return nil ,_bggb ;};_eegcfa .C0 =_cgdef ;};_eadef ,_baff =_de .TraceToDirectObject (_dgec .Get ("\u0043\u0031")).(*_de .PdfObjectArray );if _baff {_ebac ,_cdbb :=_eadef .ToFloat64Array ();if _cdbb !=nil {return nil ,_cdbb ;};_eegcfa .C1 =_ebac ;};if len (_eegcfa .C0 )!=len (_eegcfa .C1 ){_bc .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_de .ErrRangeError ;};N ,_cgcb :=_de .GetNumberAsFloat (_de .TraceToDirectObject (_dgec .Get ("\u004e")));if _cgcb !=nil {_bc .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_dgec .String ());return nil ,_cgcb ;};_eegcfa .N =N ;return _eegcfa ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bddd *PdfOutline )ToPdfObject ()_de .PdfObject {_gbgb :=_bddd ._ddcbd ;_gfacg :=_gbgb .PdfObject .(*_de .PdfObjectDictionary );_gfacg .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _bddd .First !=nil {_gfacg .Set ("\u0046\u0069\u0072s\u0074",_bddd .First .ToPdfObject ());};if _bddd .Last !=nil {_gfacg .Set ("\u004c\u0061\u0073\u0074",_bddd .Last .GetContext ().GetContainingPdfObject ());};if _bddd .Parent !=nil {_gfacg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bddd .Parent .GetContext ().GetContainingPdfObject ());};if _bddd .Count !=nil {_gfacg .Set ("\u0043\u006f\u0075n\u0074",_de .MakeInteger (*_bddd .Count ));};return _gbgb ;};

// ToPdfObject implements interface PdfModel.
func (_ef *PdfActionLaunch )ToPdfObject ()_de .PdfObject {_ef .PdfAction .ToPdfObject ();_fdg :=_ef ._cg ;_ba :=_fdg .PdfObject .(*_de .PdfObjectDictionary );_ba .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeLaunch )));if _ef .F !=nil {_ba .Set ("\u0046",_ef .F .ToPdfObject ());};_ba .SetIfNotNil ("\u0057\u0069\u006e",_ef .Win );_ba .SetIfNotNil ("\u004d\u0061\u0063",_ef .Mac );_ba .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ef .Unix );_ba .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ef .NewWindow );return _fdg ;};

// G returns the value of the green component of the color.
func (_gafb *PdfColorDeviceRGB )G ()float64 {return float64 (_gafb [1])};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_de .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_edca *_de .PdfIndirectObject ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fgae FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fgae .Mask ()&^fl .Mask ())};func _efbfa (_cbdc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_cbdc }};func (_ecga *PdfReader )newPdfAnnotationCircleFromDict (_fga *_de .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_cdf :=PdfAnnotationCircle {};_bcfde ,_gfc :=_ecga .newPdfAnnotationMarkupFromDict (_fga );if _gfc !=nil {return nil ,_gfc ;};_cdf .PdfAnnotationMarkup =_bcfde ;_cdf .BS =_fga .Get ("\u0042\u0053");_cdf .IC =_fga .Get ("\u0049\u0043");_cdf .BE =_fga .Get ("\u0042\u0045");_cdf .RD =_fga .Get ("\u0052\u0044");return &_cdf ,nil ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_aefee *PdfWriter )SetPageLabels (pageLabels _de .PdfObject )error {if pageLabels ==nil {return nil ;};_bc .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_aefee ._efdfc .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _aefee .addObjects (pageLabels );};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_dgfd *PdfFont )SubsetRegistered ()error {switch _eafe :=_dgfd ._adce .(type ){case *pdfFontType0 :_fdfa :=_eafe .subsetRegistered ();if _fdfa !=nil {_bc .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fdfa );return _fdfa ;};if _eafe ._dbfba !=nil {if _eafe ._fcad !=nil {_eafe ._fcad .ToPdfObject ();};_eafe .ToPdfObject ();};default:_bc .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_eafe );};return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_cgac *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_cbf :=NewPdfAction ();_aeb :=&PdfActionNamed {};_aeb .PdfAction =_cbf ;_cbf .SetContext (_aeb );return _aeb ;};func _bagd (_aafeb *_de .PdfObjectDictionary ,_fdgaf *fontCommon )(*pdfCIDFontType0 ,error ){if _fdgaf ._fagbeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fdgaf );return nil ,_de .ErrRangeError ;};_eaeecb :=_efbfa (_fdgaf );_acffe ,_cebac :=_de .GetDict (_aafeb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cebac {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fdgaf );return nil ,ErrRequiredAttributeMissing ;};_eaeecb .CIDSystemInfo =_acffe ;_eaeecb .DW =_aafeb .Get ("\u0044\u0057");_eaeecb .W =_aafeb .Get ("\u0057");_eaeecb .DW2 =_aafeb .Get ("\u0044\u0057\u0032");_eaeecb .W2 =_aafeb .Get ("\u0057\u0032");_eaeecb ._fefcb =1000.0;if _gege ,_fedb :=_de .GetNumberAsFloat (_eaeecb .DW );_fedb ==nil {_eaeecb ._fefcb =_gege ;};_geef ,_bebed :=_defde (_eaeecb .W );if _bebed !=nil {return nil ,_bebed ;};if _geef ==nil {_geef =map[_gb .CharCode ]float64 {};};_eaeecb ._dcegc =_geef ;return _eaeecb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_afg *PdfActionImportData )ToPdfObject ()_de .PdfObject {_afg .PdfAction .ToPdfObject ();_ffd :=_afg ._cg ;_fda :=_ffd .PdfObject .(*_de .PdfObjectDictionary );_fda .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeImportData )));if _afg .F !=nil {_fda .Set ("\u0046",_afg .F .ToPdfObject ());};return _ffd ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_eg .CharMetrics ;

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_baf :=NewPdfAnnotation ();_cab :=&PdfAnnotationMovie {};_cab .PdfAnnotation =_baf ;_baf .SetContext (_cab );return _cab ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_edgfg *_de .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_de .PdfObjectName ;Filter *_de .PdfObjectName ;SubFilter *_de .PdfObjectName ;Contents *_de .PdfObjectString ;Cert _de .PdfObject ;ByteRange *_de .PdfObjectArray ;Reference *_de .PdfObjectArray ;Changes *_de .PdfObjectArray ;Name *_de .PdfObjectString ;M *_de .PdfObjectString ;Location *_de .PdfObjectString ;Reason *_de .PdfObjectString ;ContactInfo *_de .PdfObjectString ;R *_de .PdfObjectInteger ;V *_de .PdfObjectInteger ;PropBuild *_de .PdfObjectDictionary ;PropAuthTime *_de .PdfObjectInteger ;PropAuthType *_de .PdfObjectName ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_cede *PdfOutlineItem )GetContainingPdfObject ()_de .PdfObject {return _cede ._egdd };func (_bdgb *PdfFunctionType0 )processSamples ()error {_gegb :=_bga .ResampleBytes (_bdgb ._ggeba ,_bdgb .BitsPerSample );_bdgb ._addae =_gegb ;return nil ;};

// SetAction sets the PDF action for the annotation link.
func (_ddeb *PdfAnnotationLink )SetAction (action *PdfAction ){_ddeb ._bdd =action ;if action ==nil {_ddeb .A =nil ;};};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_eddcf *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_gacd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// String returns a string that describes `base`.
func (_gedd fontCommon )String ()string {return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gedd .coreString ());};

// Register registers (caches) a model to primitive object relationship.
func (_gfcbb *modelManager )Register (primitive _de .PdfObject ,model PdfModel ){_gfcbb ._degf [model ]=primitive ;_gfcbb ._gegd [primitive ]=model ;};func _febe (_fdffb *_de .PdfObjectDictionary )(*PdfShadingType7 ,error ){_fgdgc :=PdfShadingType7 {};_bbag :=_fdffb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bbag ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_ecdee ,_baegb :=_bbag .(*_de .PdfObjectInteger );if !_baegb {_bc .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbag );return nil ,_de .ErrTypeError ;};_fgdgc .BitsPerCoordinate =_ecdee ;_bbag =_fdffb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bbag ==nil {_bc .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_ecdee ,_baegb =_bbag .(*_de .PdfObjectInteger );if !_baegb {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bbag );return nil ,_de .ErrTypeError ;};_fgdgc .BitsPerComponent =_ecdee ;_bbag =_fdffb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bbag ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_ecdee ,_baegb =_bbag .(*_de .PdfObjectInteger );if !_baegb {_bc .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bbag );return nil ,_de .ErrTypeError ;};_fgdgc .BitsPerComponent =_ecdee ;_bbag =_fdffb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bbag ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_gfgd ,_baegb :=_bbag .(*_de .PdfObjectArray );if !_baegb {_bc .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbag );return nil ,_de .ErrTypeError ;};_fgdgc .Decode =_gfgd ;if _ddfee :=_fdffb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ddfee !=nil {_fgdgc .Function =[]PdfFunction {};if _fcdgg ,_adbfe :=_ddfee .(*_de .PdfObjectArray );_adbfe {for _ ,_fdecd :=range _fcdgg .Elements (){_gegfd ,_bgbbd :=_gbag (_fdecd );if _bgbbd !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgbbd );return nil ,_bgbbd ;};_fgdgc .Function =append (_fgdgc .Function ,_gegfd );};}else {_gaab ,_ecdab :=_gbag (_ddfee );if _ecdab !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecdab );return nil ,_ecdab ;};_fgdgc .Function =append (_fgdgc .Function ,_gaab );};};return &_fgdgc ,nil ;};func (_dabd *pdfFontType0 )subsetRegistered ()error {_cfba ,_fbbc :=_dabd .DescendantFont ._adce .(*pdfCIDFontType2 );if !_fbbc {_bc .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_dabd .DescendantFont );return nil ;};if _cfba ==nil {return nil ;};if _cfba ._aceg ==nil {_bc .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _dabd ._fcad ==nil {_bc .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_egfe ,_fbbc :=_de .GetStream (_cfba ._aceg .FontFile2 );if !_fbbc {_bc .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _fe .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fcfc ,_fcffea :=_de .DecodeStream (_egfe );if _fcffea !=nil {_bc .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fcffea );return _fcffea ;};_fgbg ,_fcffea :=_dbf .Parse (_gd .NewReader (_fcfc ));if _fcffea !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_egfe .Stream ));return _fcffea ;};var _ecaa []rune ;var _agcg *_dbf .Font ;switch _gccdd :=_dabd ._fcad .(type ){case *_gb .TrueTypeFontEncoder :_ecaa =_gccdd .RegisteredRunes ();_agcg ,_fcffea =_fgbg .SubsetKeepRunes (_ecaa );if _fcffea !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcffea );return _fcffea ;};_gccdd .SubsetRegistered ();case *_gb .IdentityEncoder :_ecaa =_gccdd .RegisteredRunes ();_degca :=make ([]_dbf .GlyphIndex ,len (_ecaa ));for _bgggf ,_afcee :=range _ecaa {_degca [_bgggf ]=_dbf .GlyphIndex (_afcee );};_agcg ,_fcffea =_fgbg .SubsetKeepIndices (_degca );if _fcffea !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcffea );return _fcffea ;};case _gb .SimpleEncoder :_acfea :=_gccdd .Charcodes ();for _ ,_gddca :=range _acfea {_eebbd ,_bdgda :=_gccdd .CharcodeToRune (_gddca );if !_bdgda {_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gddca );continue ;};_ecaa =append (_ecaa ,_eebbd );};default:return _d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_dabd ._fcad );};var _egge _gd .Buffer ;_fcffea =_agcg .Write (&_egge );if _fcffea !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcffea );return _fcffea ;};if _dabd ._eegcf !=nil {_gcbd :=make (map[_bd .CharCode ]rune ,len (_ecaa ));for _ ,_ebeba :=range _ecaa {_babab ,_aded :=_dabd ._fcad .RuneToCharcode (_ebeba );if !_aded {continue ;};_gcbd [_bd .CharCode (_babab )]=_ebeba ;};_dabd ._eegcf =_bd .NewToUnicodeCMap (_gcbd );};_egfe ,_fcffea =_de .MakeStream (_egge .Bytes (),_de .NewFlateEncoder ());if _fcffea !=nil {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcffea );return _fcffea ;};_egfe .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_de .MakeInteger (int64 (_egge .Len ())));if _cbagd ,_bgcdf :=_de .GetStream (_cfba ._aceg .FontFile2 );_bgcdf {*_cbagd =*_egfe ;}else {_cfba ._aceg .FontFile2 =_egfe ;};_ddad :=_ggeb ();if len (_dabd ._ccbbd )> 0{_dabd ._ccbbd =_bgcf (_dabd ._ccbbd ,_ddad );};if len (_cfba ._ccbbd )> 0{_cfba ._ccbbd =_bgcf (_cfba ._ccbbd ,_ddad );};if len (_dabd ._bcbfc )> 0{_dabd ._bcbfc =_bgcf (_dabd ._bcbfc ,_ddad );};if _cfba ._aceg !=nil {_gfce ,_dbbgg :=_de .GetName (_cfba ._aceg .FontName );if _dbbgg &&len (_gfce .String ())> 0{_feedc :=_bgcf (_gfce .String (),_ddad );_cfba ._aceg .FontName =_de .MakeName (_feedc );};};return nil ;};func (_gfbd PdfFont )actualFont ()pdfFont {if _gfbd ._adce ==nil {_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfbd );};return _gfbd ._adce ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;RD _de .PdfObject ;};func _fadge ()string {return _gddf };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_de .PdfObjectArray ;Domain *_de .PdfObjectArray ;Function []PdfFunction ;Extend *_de .PdfObjectArray ;};type modelManager struct{_degf map[PdfModel ]_de .PdfObject ;_gegd map[_de .PdfObject ]PdfModel ;};func _abffb (_eddcb *_de .PdfObjectDictionary )(*PdfFieldChoice ,error ){_efffg :=&PdfFieldChoice {};_efffg .Opt ,_ =_de .GetArray (_eddcb .Get ("\u004f\u0070\u0074"));_efffg .TI ,_ =_de .GetInt (_eddcb .Get ("\u0054\u0049"));_efffg .I ,_ =_de .GetArray (_eddcb .Get ("\u0049"));return _efffg ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_afdgd *PdfPageResourcesColorspaces )ToPdfObject ()_de .PdfObject {_egcg :=_de .MakeDict ();for _ ,_ebaae :=range _afdgd .Names {_egcg .Set (_de .PdfObjectName (_ebaae ),_afdgd .Colorspaces [_ebaae ].ToPdfObject ());};if _afdgd ._ebedca !=nil {_afdgd ._ebedca .PdfObject =_egcg ;return _afdgd ._ebedca ;};return _egcg ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_edac *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _edac .flattenFieldsWithOpts (false ,appgen ,opts );};

// GetContainingPdfObject implements interface PdfModel.
func (_bgbb *PdfAnnotation )GetContainingPdfObject ()_de .PdfObject {return _bgbb ._afa };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bceddb *PdfShadingType5 )ToPdfObject ()_de .PdfObject {_bceddb .PdfShading .ToPdfObject ();_geedc ,_dbefg :=_bceddb .getShadingDict ();if _dbefg !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bceddb .BitsPerCoordinate !=nil {_geedc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bceddb .BitsPerCoordinate );};if _bceddb .BitsPerComponent !=nil {_geedc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bceddb .BitsPerComponent );};if _bceddb .VerticesPerRow !=nil {_geedc .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bceddb .VerticesPerRow );};if _bceddb .Decode !=nil {_geedc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bceddb .Decode );};if _bceddb .Function !=nil {if len (_bceddb .Function )==1{_geedc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bceddb .Function [0].ToPdfObject ());}else {_afdde :=_de .MakeArray ();for _ ,_adga :=range _bceddb .Function {_afdde .Append (_adga .ToPdfObject ());};_geedc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afdde );};};return _bceddb ._daegc ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_cccd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgcb ,_gead :=color .(*PdfColorDeviceCMYK );if !_gead {_bc .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcedd :=_dgcb .C ();_eade :=_dgcb .M ();_cbbc :=_dgcb .Y ();_cfgd :=_dgcb .K ();_bcedd =_bcedd *(1-_cfgd )+_cfgd ;_eade =_eade *(1-_cfgd )+_cfgd ;_cbbc =_cbbc *(1-_cfgd )+_cfgd ;_gbcd :=1-_bcedd ;_ebdba :=1-_eade ;_ddda :=1-_cbbc ;return NewPdfColorDeviceRGB (_gbcd ,_ebdba ,_ddda ),nil ;};func _defde (_cggb _de .PdfObject )(map[_gb .CharCode ]float64 ,error ){if _cggb ==nil {return nil ,nil ;};_gbea ,_ddcg :=_de .GetArray (_cggb );if !_ddcg {return nil ,nil ;};_eefb :=map[_gb .CharCode ]float64 {};_bfded :=_gbea .Len ();for _beffg :=0;_beffg < _bfded -1;_beffg ++{_fccec :=_de .TraceToDirectObject (_gbea .Get (_beffg ));_cbda ,_cegd :=_de .GetIntVal (_fccec );if !_cegd {return nil ,_d .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_beffg ,_fccec );};_beffg ++;if _beffg > _bfded -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gbea );};_efbdd :=_de .TraceToDirectObject (_gbea .Get (_beffg ));switch _efbdd .(type ){case *_de .PdfObjectArray :_gefc ,_ :=_de .GetArray (_efbdd );if _fcbfa ,_cegae :=_gefc .ToFloat64Array ();_cegae ==nil {for _baag :=0;_baag < len (_fcbfa );_baag ++{_eefb [_gb .CharCode (_cbda +_baag )]=_fcbfa [_baag ];};}else {return nil ,_d .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_beffg ,_efbdd );};case *_de .PdfObjectInteger :_eacdgg ,_bbeag :=_de .GetIntVal (_efbdd );if !_bbeag {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_beffg ,_efbdd );};_beffg ++;if _beffg > _bfded -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gbea );};_acdf :=_gbea .Get (_beffg );_aage ,_feacf :=_de .GetNumberAsFloat (_acdf );if _feacf !=nil {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_beffg ,_acdf );};for _aebg :=_cbda ;_aebg <=_eacdgg ;_aebg ++{_eefb [_gb .CharCode (_aebg )]=_aage ;};default:return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_beffg ,_efbdd );};};return _eefb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edcee *PdfShadingType2 )ToPdfObject ()_de .PdfObject {_edcee .PdfShading .ToPdfObject ();_bdfgf ,_bfgaa :=_edcee .getShadingDict ();if _bfgaa !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bdfgf ==nil {_bc .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _edcee .Coords !=nil {_bdfgf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_edcee .Coords );};if _edcee .Domain !=nil {_bdfgf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edcee .Domain );};if _edcee .Function !=nil {if len (_edcee .Function )==1{_bdfgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edcee .Function [0].ToPdfObject ());}else {_bacag :=_de .MakeArray ();for _ ,_dcecd :=range _edcee .Function {_bacag .Append (_dcecd .ToPdfObject ());};_bdfgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bacag );};};if _edcee .Extend !=nil {_bdfgf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_edcee .Extend );};return _edcee ._daegc ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_eagcg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_eagcg ._abddd =colorspace ;};func (_cffbd *pdfFontSimple )updateStandard14Font (){_eede ,_gbfd :=_cffbd .Encoder ().(_gb .SimpleEncoder );if !_gbfd {_bc .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cffbd .Encoder (),_cffbd );return ;};_cgfab :=_eede .Charcodes ();_cffbd ._acbc =make (map[_gb .CharCode ]float64 ,len (_cgfab ));for _ ,_accbg :=range _cgfab {_fbcce ,_ :=_eede .CharcodeToRune (_accbg );_cffbd ._acbc [_accbg ]=_cffbd ._dgae [_fbcce ].Wx ;};};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_bdgcc *PdfPattern )GetContext ()PdfModel {return _bdgcc ._acgdg };

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_dgga *Image )SetSamples (samples []uint32 ){if _dgga .BitsPerComponent < 8{samples =_dgga .samplesAddPadding (samples );};_dedd :=_bga .ResampleUint32 (samples ,int (_dgga .BitsPerComponent ),8);_ccccgd :=make ([]byte ,len (_dedd ));for _egeag ,_eabe :=range _dedd {_ccccgd [_egeag ]=byte (_eabe );};_dgga .Data =_ccccgd ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cbfgg ,_aefe :=_cb .Open (filePath );if _aefe !=nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aefe );return nil ,_aefe ;};defer _cbfgg .Close ();return NewCompositePdfFontFromTTF (_cbfgg );};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fdbe *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};var _edebf ="";

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cebcc *PdfField )GetContainingPdfObject ()_de .PdfObject {return _cebcc ._gddee };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};func (_defdf *PdfPage )setContainer (_bfgaf *_de .PdfIndirectObject ){_bfgaf .PdfObject =_defdf ._dgdcb ;_defdf ._eeea =_bfgaf ;};func (_eada *PdfReader )flattenFieldsWithOpts (_efgg bool ,_abfe FieldAppearanceGenerator ,_becd *FieldFlattenOpts )error {if _becd ==nil {_becd =&FieldFlattenOpts {};};var _dcfe bool ;_egab :=map[*PdfAnnotation ]bool {};{var _egedca []*PdfField ;_fecg :=_eada .AcroForm ;if _fecg !=nil {if _becd .FilterFunc !=nil {_egedca =_fecg .filteredFields (_becd .FilterFunc ,true );_dcfe =_fecg .Fields !=nil &&len (*_fecg .Fields )> 0;}else {_egedca =_fecg .AllFields ();};};for _ ,_bfcad :=range _egedca {for _ ,_deead :=range _bfcad .Annotations {_egab [_deead .PdfAnnotation ]=_bfcad .V !=nil ;if _abfe !=nil {_gbafa ,_ceefe :=_abfe .GenerateAppearanceDict (_fecg ,_bfcad ,_deead );if _ceefe !=nil {return _ceefe ;};_deead .AP =_gbafa ;};};};};if _efgg {for _ ,_aedga :=range _eada .PageList {_ebda ,_ebff :=_aedga .GetAnnotations ();if _ebff !=nil {return _ebff ;};for _ ,_dffgc :=range _ebda {_egab [_dffgc ]=true ;};};};for _ ,_dgab :=range _eada .PageList {var _gbbb []*PdfAnnotation ;if _abfe !=nil {if _fdeg :=_abfe .WrapContentStream (_dgab );_fdeg !=nil {return _fdeg ;};};_dedbf ,_eddd :=_dgab .GetAnnotations ();if _eddd !=nil {return _eddd ;};for _ ,_ceba :=range _dedbf {_baac ,_gbgae :=_egab [_ceba ];if !_gbgae {_gbbb =append (_gbbb ,_ceba );continue ;};switch _ceba .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_edff ,_gggf ,_cacbd :=_cgbaec (_ceba );if _cacbd !=nil {if !_baac {_bc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cacbd );continue ;};if _edff ==nil {continue ;};_afad :=_dgab .Resources .GenerateXObjectName ();_dgab .Resources .SetXObjectFormByName (_afad ,_edff );_cdgb :=_bgc .Min (_gggf .Llx ,_gggf .Urx );_decfe :=_bgc .Min (_gggf .Lly ,_gggf .Ury );var _gdffe []string ;_gdffe =append (_gdffe ,"\u0071");_gdffe =append (_gdffe ,_d .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_cdgb ,_decfe ));_gdffe =append (_gdffe ,_d .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_afad .String ()));_gdffe =append (_gdffe ,"\u0051");_egdg :=_c .Join (_gdffe ,"\u000a");_cacbd =_dgab .AppendContentStream (_egdg );if _cacbd !=nil {return _cacbd ;};if _edff .Resources !=nil {_cabb ,_acecf :=_de .GetDict (_edff .Resources .Font );if _acecf {for _ ,_bccc :=range _cabb .Keys (){if !_dgab .Resources .HasFontByName (_bccc ){_dgab .Resources .SetFontByName (_bccc ,_cabb .Get (_bccc ));};};};};};if len (_gbbb )> 0{_dgab ._bbeg =_gbbb ;}else {_dgab ._bbeg =[]*PdfAnnotation {};};};if !_dcfe {_eada .AcroForm =nil ;};return nil ;};

// Encoder returns the font's text encoder.
func (_gafbe *pdfFontSimple )Encoder ()_gb .TextEncoder {if _gafbe ._fafa !=nil {return _gafbe ._fafa ;};if _gafbe ._egfa !=nil {return _gafbe ._egfa ;};_fafd ,_ :=_gb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _fafd ;};func (_egf *PdfReader )newPdfActionGoTo3DViewFromDict (_baaa *_de .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_baaa .Get ("\u0054\u0041"),V :_baaa .Get ("\u0056")},nil ;};func (_agdg *PdfReader )newPdfAnnotationRedactFromDict (_ebg *_de .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_adfb :=PdfAnnotationRedact {};_bgbd ,_gccd :=_agdg .newPdfAnnotationMarkupFromDict (_ebg );if _gccd !=nil {return nil ,_gccd ;};_adfb .PdfAnnotationMarkup =_bgbd ;_adfb .QuadPoints =_ebg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_adfb .IC =_ebg .Get ("\u0049\u0043");_adfb .RO =_ebg .Get ("\u0052\u004f");_adfb .OverlayText =_ebg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_adfb .Repeat =_ebg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_adfb .DA =_ebg .Get ("\u0044\u0041");_adfb .Q =_ebg .Get ("\u0051");return &_adfb ,nil ;};

// M returns the value of the magenta component of the color.
func (_cefd *PdfColorDeviceCMYK )M ()float64 {return float64 (_cefd [1])};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _de .PdfObject ;V _de .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfecfg *PdfShadingType3 )ToPdfObject ()_de .PdfObject {_gfecfg .PdfShading .ToPdfObject ();_ccbcb ,_ffbbe :=_gfecfg .getShadingDict ();if _ffbbe !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gfecfg .Coords !=nil {_ccbcb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gfecfg .Coords );};if _gfecfg .Domain !=nil {_ccbcb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfecfg .Domain );};if _gfecfg .Function !=nil {if len (_gfecfg .Function )==1{_ccbcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfecfg .Function [0].ToPdfObject ());}else {_bbfg :=_de .MakeArray ();for _ ,_bbaac :=range _gfecfg .Function {_bbfg .Append (_bbaac .ToPdfObject ());};_ccbcb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbfg );};};if _gfecfg .Extend !=nil {_ccbcb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gfecfg .Extend );};return _gfecfg ._daegc ;};

// K returns the value of the key component of the color.
func (_gaee *PdfColorDeviceCMYK )K ()float64 {return float64 (_gaee [3])};type fontFile struct{_geecf string ;_bebfc string ;_cfaaa _gb .SimpleEncoder ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gda :=NewPdfAnnotation ();_dafa :=&PdfAnnotationLink {};_dafa .PdfAnnotation =_gda ;_gda .SetContext (_dafa );return _dafa ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gfad *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_geaaa *PdfReader )GetObjectNums ()[]int {return _geaaa ._fabda .GetObjectNums ()};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _de .PdfObject ;};func (_abca *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_aeeeb *PdfPageResources )GetShadingByName (keyName _de .PdfObjectName )(*PdfShading ,bool ){if _aeeeb .Shading ==nil {return nil ,false ;};_daffc ,_bcge :=_de .TraceToDirectObject (_aeeeb .Shading ).(*_de .PdfObjectDictionary );if !_bcge {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aeeeb .Shading );return nil ,false ;};if _gbagf :=_daffc .Get (keyName );_gbagf !=nil {_aebde ,_cfebb :=_faead (_gbagf );if _cfebb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_cfebb );return nil ,false ;};return _aebde ,true ;};return nil ,false ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;var ImageHandling ImageHandler =DefaultImageHandler {};func _deffg ()string {if len (_fdfgc )> 0{return _fdfgc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcgfc *PdfShadingType7 )ToPdfObject ()_de .PdfObject {_gcgfc .PdfShading .ToPdfObject ();_efga ,_fgggb :=_gcgfc .getShadingDict ();if _fgggb !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gcgfc .BitsPerCoordinate !=nil {_efga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gcgfc .BitsPerCoordinate );};if _gcgfc .BitsPerComponent !=nil {_efga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcgfc .BitsPerComponent );};if _gcgfc .BitsPerFlag !=nil {_efga .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gcgfc .BitsPerFlag );};if _gcgfc .Decode !=nil {_efga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcgfc .Decode );};if _gcgfc .Function !=nil {if len (_gcgfc .Function )==1{_efga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcgfc .Function [0].ToPdfObject ());}else {_bdfda :=_de .MakeArray ();for _ ,_fdcea :=range _gcgfc .Function {_bdfda .Append (_fdcea .ToPdfObject ());};_efga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdfda );};};return _gcgfc ._daegc ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eacff ,_acea :=_eg .NewStdFontByName (HelveticaName );if !_acea {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_cbeeb :=_cgeeg (_eacff );return &PdfFont {_adce :&_cbeeb };};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _de .PdfObject )(*PdfFilespec ,error ){_gage :=&PdfFilespec {};var _bbbc *_de .PdfObjectDictionary ;if _fgag ,_gfefgg :=_de .GetIndirect (obj );_gfefgg {_gage ._eddg =_fgag ;_ebgee ,_fadg :=_de .GetDict (_fgag .PdfObject );if !_fadg {_bc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_de .ErrTypeError ;};_bbbc =_ebgee ;}else if _geec ,_cbegd :=_de .GetDict (obj );_cbegd {_gage ._eddg =_geec ;_bbbc =_geec ;}else {_bc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_de .ErrTypeError ;};if _bbbc ==nil {_bc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fcag :=_bbbc .Get ("\u0054\u0079\u0070\u0065");_fcag !=nil {_bdbde ,_fdee :=_fcag .(*_de .PdfObjectName );if !_fdee {_bc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fcag );}else {if *_bdbde !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bdbde );};};};if _cgff :=_bbbc .Get ("\u0046\u0053");_cgff !=nil {_gage .FS =_cgff ;};if _efgb :=_bbbc .Get ("\u0046");_efgb !=nil {_gage .F =_efgb ;};if _begc :=_bbbc .Get ("\u0055\u0046");_begc !=nil {_gage .UF =_begc ;};if _ebfdaa :=_bbbc .Get ("\u0044\u004f\u0053");_ebfdaa !=nil {_gage .DOS =_ebfdaa ;};if _cafe :=_bbbc .Get ("\u004d\u0061\u0063");_cafe !=nil {_gage .Mac =_cafe ;};if _acgb :=_bbbc .Get ("\u0055\u006e\u0069\u0078");_acgb !=nil {_gage .Unix =_acgb ;};if _gecga :=_bbbc .Get ("\u0049\u0044");_gecga !=nil {_gage .ID =_gecga ;};if _ebec :=_bbbc .Get ("\u0056");_ebec !=nil {_gage .V =_ebec ;};if _fbfff :=_bbbc .Get ("\u0045\u0046");_fbfff !=nil {_gage .EF =_fbfff ;};if _gaad :=_bbbc .Get ("\u0052\u0046");_gaad !=nil {_gage .RF =_gaad ;};if _adde :=_bbbc .Get ("\u0044\u0065\u0073\u0063");_adde !=nil {_gage .Desc =_adde ;};if _fcde :=_bbbc .Get ("\u0043\u0049");_fcde !=nil {_gage .CI =_fcde ;};return _gage ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dbbc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dbbc .flattenFieldsWithOpts (allannots ,appgen ,nil );};func _cgbe (_bbec _de .PdfObject )(*PdfColorspaceICCBased ,error ){_bgfae :=&PdfColorspaceICCBased {};if _eabc ,_aeee :=_bbec .(*_de .PdfIndirectObject );_aeee {_bgfae ._dgcc =_eabc ;};_bbec =_de .TraceToDirectObject (_bbec );_bfgf ,_ebge :=_bbec .(*_de .PdfObjectArray );if !_ebge {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfgf .Len ()!=2{return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_bbec =_de .TraceToDirectObject (_bfgf .Get (0));_accea ,_ebge :=_bbec .(*_de .PdfObjectName );if !_ebge {return nil ,_d .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_accea !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_d .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bbec =_bfgf .Get (1);_abge ,_ebge :=_de .GetStream (_bbec );if !_ebge {_bc .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_bbec );return nil ,_d .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_efbbb :=_abge .PdfObjectDictionary ;_bggg ,_ebge :=_efbbb .Get ("\u004e").(*_de .PdfObjectInteger );if !_ebge {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bggg !=1&&*_bggg !=3&&*_bggg !=4{return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_bgfae .N =int (*_bggg );if _dffce :=_efbbb .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dffce !=nil {_ffga ,_cdff :=NewPdfColorspaceFromPdfObject (_dffce );if _cdff !=nil {return nil ,_cdff ;};_bgfae .Alternate =_ffga ;};if _adfac :=_efbbb .Get ("\u0052\u0061\u006eg\u0065");_adfac !=nil {_adfac =_de .TraceToDirectObject (_adfac );_afbbda ,_cdef :=_adfac .(*_de .PdfObjectArray );if !_cdef {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _afbbda .Len ()!=2*_bgfae .N {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_bgae ,_eadc :=_afbbda .GetAsFloat64Slice ();if _eadc !=nil {return nil ,_eadc ;};_bgfae .Range =_bgae ;}else {_bgfae .Range =make ([]float64 ,2*_bgfae .N );for _aacd :=0;_aacd < _bgfae .N ;_aacd ++{_bgfae .Range [2*_aacd ]=0.0;_bgfae .Range [2*_aacd +1]=1.0;};};if _dcfa :=_efbbb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dcfa !=nil {_accga ,_cbacc :=_dcfa .(*_de .PdfObjectStream );if !_cbacc {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_bgfae .Metadata =_accga ;};_bdba ,_afeb :=_de .DecodeStream (_abge );if _afeb !=nil {return nil ,_afeb ;};_bgfae .Data =_bdba ;_bgfae ._efcg =_abge ;return _bgfae ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_acgea *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_acgea .GetNumComponents (){return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beced ,_fbca :=_acgea .TintTransform .Evaluate (vals );if _fbca !=nil {return nil ,_fbca ;};_eeba ,_fbca :=_acgea .AlternateSpace .ColorFromFloats (_beced );if _fbca !=nil {return nil ,_fbca ;};return _eeba ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_fdce :=map[rune ]int {};for _ ,_ecfae :=range text {_fdce [_ecfae ]++;};return _fdce ;};

// ToPdfObject implements interface PdfModel.
func (_afag *PdfAnnotationFileAttachment )ToPdfObject ()_de .PdfObject {_afag .PdfAnnotation .ToPdfObject ();_gebc :=_afag ._afa ;_bba :=_gebc .PdfObject .(*_de .PdfObjectDictionary );_afag .PdfAnnotationMarkup .appendToPdfDictionary (_bba );_bba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_bba .SetIfNotNil ("\u0046\u0053",_afag .FS );_bba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_afag .Name );return _gebc ;};var _gaag _ga .Time ;

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ggeba []byte ;_addae []uint32 ;_fffeb *_de .PdfObjectStream ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_bgfgc *PdfFontDescriptor )ToPdfObject ()_de .PdfObject {_dabb :=_de .MakeDict ();if _bgfgc ._dffgfa ==nil {_bgfgc ._dffgfa =&_de .PdfIndirectObject {};};_bgfgc ._dffgfa .PdfObject =_dabb ;_dabb .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _bgfgc .FontName !=nil {_dabb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_bgfgc .FontName );};if _bgfgc .FontFamily !=nil {_dabb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_bgfgc .FontFamily );};if _bgfgc .FontStretch !=nil {_dabb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_bgfgc .FontStretch );};if _bgfgc .FontWeight !=nil {_dabb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_bgfgc .FontWeight );};if _bgfgc .Flags !=nil {_dabb .Set ("\u0046\u006c\u0061g\u0073",_bgfgc .Flags );};if _bgfgc .FontBBox !=nil {_dabb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bgfgc .FontBBox );};if _bgfgc .ItalicAngle !=nil {_dabb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_bgfgc .ItalicAngle );};if _bgfgc .Ascent !=nil {_dabb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_bgfgc .Ascent );};if _bgfgc .Descent !=nil {_dabb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_bgfgc .Descent );};if _bgfgc .Leading !=nil {_dabb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_bgfgc .Leading );};if _bgfgc .CapHeight !=nil {_dabb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_bgfgc .CapHeight );};if _bgfgc .XHeight !=nil {_dabb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_bgfgc .XHeight );};if _bgfgc .StemV !=nil {_dabb .Set ("\u0053\u0074\u0065m\u0056",_bgfgc .StemV );};if _bgfgc .StemH !=nil {_dabb .Set ("\u0053\u0074\u0065m\u0048",_bgfgc .StemH );};if _bgfgc .AvgWidth !=nil {_dabb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_bgfgc .AvgWidth );};if _bgfgc .MaxWidth !=nil {_dabb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_bgfgc .MaxWidth );};if _bgfgc .MissingWidth !=nil {_dabb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_bgfgc .MissingWidth );};if _bgfgc .FontFile !=nil {_dabb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_bgfgc .FontFile );};if _bgfgc .FontFile2 !=nil {_dabb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_bgfgc .FontFile2 );};if _bgfgc .FontFile3 !=nil {_dabb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_bgfgc .FontFile3 );};if _bgfgc .CharSet !=nil {_dabb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_bgfgc .CharSet );};if _bgfgc .Style !=nil {_dabb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_bgfgc .FontName );};if _bgfgc .Lang !=nil {_dabb .Set ("\u004c\u0061\u006e\u0067",_bgfgc .Lang );};if _bgfgc .FD !=nil {_dabb .Set ("\u0046\u0044",_bgfgc .FD );};if _bgfgc .CIDSet !=nil {_dabb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_bgfgc .CIDSet );};return _bgfgc ._dffgfa ;};

// ToPdfObject implements interface PdfModel.
func (_aefd *PdfAnnotationUnderline )ToPdfObject ()_de .PdfObject {_aefd .PdfAnnotation .ToPdfObject ();_cdbe :=_aefd ._afa ;_eggb :=_cdbe .PdfObject .(*_de .PdfObjectDictionary );_aefd .PdfAnnotationMarkup .appendToPdfDictionary (_eggb );_eggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_eggb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aefd .QuadPoints );return _cdbe ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dgba *_de .PdfIndirectObject ;};func (_agd *PdfReader )newPdfActionGotoRFromDict (_cgcg *_de .PdfObjectDictionary )(*PdfActionGoToR ,error ){_deeg ,_dfg :=_fab (_cgcg .Get ("\u0046"));if _dfg !=nil {return nil ,_dfg ;};return &PdfActionGoToR {D :_cgcg .Get ("\u0044"),NewWindow :_cgcg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_deeg },nil ;};

// Y returns the value of the yellow component of the color.
func (_baab *PdfColorDeviceCMYK )Y ()float64 {return float64 (_baab [2])};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_de .PdfObjectBool ;SigFlags *_de .PdfObjectInteger ;CO *_de .PdfObjectArray ;DR *PdfPageResources ;DA *_de .PdfObjectString ;Q *_de .PdfObjectInteger ;XFA _de .PdfObject ;_efgef *_de .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_gefab *PdfColorspaceLab )DecodeArray ()[]float64 {_dbbb :=[]float64 {0,100};if _gefab .Range !=nil &&len (_gefab .Range )==4{_dbbb =append (_dbbb ,_gefab .Range ...);}else {_dbbb =append (_dbbb ,-100,100,-100,100);};return _dbbb ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_fega *PdfColorspaceDeviceN )GetNumComponents ()int {return _fega .ColorantNames .Len ()};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _de .PdfObject ;Popup *PdfAnnotationPopup ;CA _de .PdfObject ;RC _de .PdfObject ;CreationDate _de .PdfObject ;IRT _de .PdfObject ;Subj _de .PdfObject ;RT _de .PdfObject ;IT _de .PdfObject ;ExData _de .PdfObject ;};type pdfCIDFontType0 struct{fontCommon ;_cegbd *_de .PdfIndirectObject ;_aadfd _gb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_de .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _de .PdfObject ;W _de .PdfObject ;DW2 _de .PdfObject ;W2 _de .PdfObject ;_dcegc map[_gb .CharCode ]float64 ;_fefcb float64 ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _de .PdfObject ;T _de .PdfObject ;Operation _de .PdfObject ;};

// Write writes out the PDF.
func (_bdegb *PdfWriter )Write (writer _gad .Writer )error {_bc .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_dgdbd :=_dc .GetLicenseKey ();if (_dgdbd ==nil ||!_dgdbd .IsLicensed ())&&!_fggbe {_d .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_d .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _fe .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _bdegb ._adbec !=nil {_bc .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bdegb ._adbec );_cddf :=_bdegb ._adbec .ToPdfObject ();_bc .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_cddf ,_cddf ,_cddf );_bdegb ._efdfc .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_cddf );_fbafa :=_bdegb .addObjects (_cddf );if _fbafa !=nil {return _fbafa ;};};if _bdegb ._abecd !=nil {_bc .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_afdgc :=_bdegb ._abecd .ToPdfObject ();_bc .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_afdgc );_bdegb ._efdfc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_afdgc );_gfgfg :=_bdegb .addObjects (_afdgc );if _gfgfg !=nil {return _gfgfg ;};};for _efaeb ,_fgab :=range _bdegb ._ebafdb {if !_bdegb .hasObject (_efaeb ){_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_efaeb ,_efaeb ,_efaeb );for _ ,_efgaf :=range _fgab {for _ ,_efcfb :=range _efgaf .Keys (){_dggaf :=_efgaf .Get (_efcfb );if _dggaf ==_efaeb {_bc .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_efgaf .Set (_efcfb ,_de .MakeNull ());break ;};};};};};_bdegb ._efdfc .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_de .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_bdegb ._bfgga ,_bdegb ._efagf )));_bdegb .copyObjects ();if _bdegb ._dgdd !=nil {var _gabaf error ;_bdegb ._agfeb ,_gabaf =_bdegb ._dgdd .Optimize (_bdegb ._agfeb );if _gabaf !=nil {return _gabaf ;};_abgfcc :=make (map[_de .PdfObject ]struct{},len (_bdegb ._agfeb ));for _ ,_ddafg :=range _bdegb ._agfeb {_abgfcc [_ddafg ]=struct{}{};};_bdegb ._abdaa =_abgfcc ;};_bdegb ._fceed =_bdegb ._gcgb ;_bdegb ._aagbea =_g .NewWriter (writer );_fecdf :=_bdegb ._bfgga > 1||(_bdegb ._bfgga ==1&&_bdegb ._efagf > 4);if _bdegb ._ccbff !=nil {_fecdf =*_bdegb ._ccbff ;};_ecbae :=make (map[_de .PdfObject ]bool );for _ ,_begfa :=range _bdegb ._agfeb {if _eecfg ,_bcbfd :=_begfa .(*_de .PdfObjectStreams );_bcbfd {_fecdf =true ;for _ ,_efce :=range _eecfg .Elements (){_ecbae [_efce ]=true ;if _ecfcb ,_gadac :=_efce .(*_de .PdfIndirectObject );_gadac {_ecbae [_ecfcb .PdfObject ]=true ;};};};};if _fecdf &&_bdegb ._bfgga ==1&&_bdegb ._efagf < 5{_bdegb ._efagf =5;};if _bdegb ._gabdg {_bdegb .writeString ("\u000a");}else {_bdegb .writeString (_d .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_bdegb ._bfgga ,_bdegb ._efagf ));_bdegb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_bdegb .updateObjectNumbers ();_bc .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_bdegb ._agfeb ));_bdegb ._egbb =make (map[int ]crossReference );_bdegb ._egbb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _bdegb ._cedcg .ObjectMap !=nil {for _cgdgd ,_acdeg :=range _bdegb ._cedcg .ObjectMap {if _cgdgd ==0{continue ;};if _acdeg .XType ==_de .XrefTypeObjectStream {_fefbcb :=crossReference {Type :2,ObjectNumber :_acdeg .OsObjNumber ,Index :_acdeg .OsObjIndex };_bdegb ._egbb [_cgdgd ]=_fefbcb ;};if _acdeg .XType ==_de .XrefTypeTableEntry {_bbafg :=crossReference {Type :1,ObjectNumber :_acdeg .ObjectNumber ,Offset :_acdeg .Offset };_bdegb ._egbb [_cgdgd ]=_bbafg ;};};};for _ ,_gfdgc :=range _bdegb ._agfeb {if _fbaec :=_ecbae [_gfdgc ];_fbaec {continue ;};_cegf :=int64 (0);switch _eadbc :=_gfdgc .(type ){case *_de .PdfIndirectObject :_cegf =_eadbc .ObjectNumber ;case *_de .PdfObjectStream :_cegf =_eadbc .ObjectNumber ;case *_de .PdfObjectStreams :_cegf =_eadbc .ObjectNumber ;default:_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_gfdgc );return ErrTypeCheck ;};if _bdegb ._dgebf !=nil &&_gfdgc !=_bdegb ._bgdee {_cddccd :=_bdegb ._dgebf .Encrypt (_gfdgc ,int64 (_cegf ),0);if _cddccd !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_cddccd );return _cddccd ;};};_bdegb .writeObject (int (_cegf ),_gfdgc );};_eddfd :=_bdegb ._fceed ;var _beadc int ;for _eeef :=range _bdegb ._egbb {if _eeef > _beadc {_beadc =_eeef ;};};if _fecdf {_deag :=_beadc +1;_bdegb ._egbb [_deag ]=crossReference {Type :1,ObjectNumber :_deag ,Offset :_eddfd };_ecabb :=_gd .NewBuffer (nil );_fddbg :=_de .MakeArray ();for _efbff :=0;_efbff <=_beadc ;{for ;_efbff <=_beadc ;_efbff ++{_efbgcc ,_fgbee :=_bdegb ._egbb [_efbff ];if _fgbee &&(!_bdegb ._gabdg ||_bdegb ._gabdg &&(_efbgcc .Type ==1&&_efbgcc .Offset >=_bdegb ._ddbca ||_efbgcc .Type ==0)){break ;};};var _ecafd int ;for _ecafd =_efbff +1;_ecafd <=_beadc ;_ecafd ++{_cebaa ,_bbfcd :=_bdegb ._egbb [_ecafd ];if _bbfcd &&(!_bdegb ._gabdg ||_bdegb ._gabdg &&(_cebaa .Type ==1&&_cebaa .Offset > _bdegb ._ddbca )){continue ;};break ;};_fddbg .Append (_de .MakeInteger (int64 (_efbff )),_de .MakeInteger (int64 (_ecafd -_efbff )));for _bbcd :=_efbff ;_bbcd < _ecafd ;_bbcd ++{_gefgf :=_bdegb ._egbb [_bbcd ];switch _gefgf .Type {case 0:_b .Write (_ecabb ,_b .BigEndian ,byte (0));_b .Write (_ecabb ,_b .BigEndian ,uint32 (0));_b .Write (_ecabb ,_b .BigEndian ,uint16 (0xFFFF));case 1:_b .Write (_ecabb ,_b .BigEndian ,byte (1));_b .Write (_ecabb ,_b .BigEndian ,uint32 (_gefgf .Offset ));_b .Write (_ecabb ,_b .BigEndian ,uint16 (_gefgf .Generation ));case 2:_b .Write (_ecabb ,_b .BigEndian ,byte (2));_b .Write (_ecabb ,_b .BigEndian ,uint32 (_gefgf .ObjectNumber ));_b .Write (_ecabb ,_b .BigEndian ,uint16 (_gefgf .Index ));};};_efbff =_ecafd +1;};_dbcfa ,_gbefa :=_de .MakeStream (_ecabb .Bytes (),_de .NewFlateEncoder ());if _gbefa !=nil {return _gbefa ;};_dbcfa .ObjectNumber =int64 (_deag );_dbcfa .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0058\u0052\u0065\u0066"));_dbcfa .PdfObjectDictionary .Set ("\u0057",_de .MakeArray (_de .MakeInteger (1),_de .MakeInteger (4),_de .MakeInteger (2)));_dbcfa .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_fddbg );_dbcfa .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_de .MakeInteger (int64 (_deag +1)));_dbcfa .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_bdegb ._eeege );_dbcfa .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_bdegb ._defa );if _bdegb ._gabdg &&_bdegb ._fecb > 0{_dbcfa .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_de .MakeInteger (_bdegb ._fecb ));};if _bdegb ._dgebf !=nil {_dbcfa .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bdegb ._bgdee );_dbcfa .Set ("\u0049\u0044",_bdegb ._adfbf );_bc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bdegb ._adfbf );};_bdegb .writeObject (int (_dbcfa .ObjectNumber ),_dbcfa );}else {_bdegb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dddef :=0;_dddef <=_beadc ;{for ;_dddef <=_beadc ;_dddef ++{_bcabe ,_bcgef :=_bdegb ._egbb [_dddef ];if _bcgef &&(!_bdegb ._gabdg ||_bdegb ._gabdg &&(_bcabe .Type ==1&&_bcabe .Offset >=_bdegb ._ddbca ||_bcabe .Type ==0)){break ;};};var _dddda int ;for _dddda =_dddef +1;_dddda <=_beadc ;_dddda ++{_dgdcbf ,_dbgaf :=_bdegb ._egbb [_dddda ];if _dbgaf &&(!_bdegb ._gabdg ||_bdegb ._gabdg &&(_dgdcbf .Type ==1&&_dgdcbf .Offset > _bdegb ._ddbca )){continue ;};break ;};_aadfb :=_d .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dddef ,_dddda -_dddef );_bdegb .writeString (_aadfb );for _bcecg :=_dddef ;_bcecg < _dddda ;_bcecg ++{_fccac :=_bdegb ._egbb [_bcecg ];switch _fccac .Type {case 0:_aadfb =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_bdegb .writeString (_aadfb );case 1:_aadfb =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_fccac .Offset ,0);_bdegb .writeString (_aadfb );};};_dddef =_dddda +1;};_fbga :=_de .MakeDict ();_fbga .Set ("\u0049\u006e\u0066\u006f",_bdegb ._eeege );_fbga .Set ("\u0052\u006f\u006f\u0074",_bdegb ._defa );_fbga .Set ("\u0053\u0069\u007a\u0065",_de .MakeInteger (int64 (_beadc +1)));if _bdegb ._gabdg &&_bdegb ._fecb > 0{_fbga .Set ("\u0050\u0072\u0065\u0076",_de .MakeInteger (_bdegb ._fecb ));};if _bdegb ._dgebf !=nil {_fbga .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_bdegb ._bgdee );_fbga .Set ("\u0049\u0044",_bdegb ._adfbf );_bc .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_bdegb ._adfbf );};_bdegb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_bdegb .writeString (_fbga .WriteString ());_bdegb .writeString ("\u000a");};_deaf :=_d .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_eddfd );_bdegb .writeString (_deaf );_bdegb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _bdegb ._ddabg ==nil {_bdegb ._ddabg =_bdegb ._aagbea .Flush ();};return _bdegb ._ddabg ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_de .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_cfbc *PdfReader )newPdfAnnotationHighlightFromDict (_egdc *_de .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_gcge :=PdfAnnotationHighlight {};_dfad ,_eda :=_cfbc .newPdfAnnotationMarkupFromDict (_egdc );if _eda !=nil {return nil ,_eda ;};_gcge .PdfAnnotationMarkup =_dfad ;_gcge .QuadPoints =_egdc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gcge ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_agge ,_deaa :=NewStandard14Font (basefont );if _deaa !=nil {panic (_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _agge ;};func (_ccca *PdfReader )newPdfAnnotation3DFromDict (_ffea *_de .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_bdb :=PdfAnnotation3D {};_bdb .T3DD =_ffea .Get ("\u0033\u0044\u0044");_bdb .T3DV =_ffea .Get ("\u0033\u0044\u0056");_bdb .T3DA =_ffea .Get ("\u0033\u0044\u0041");_bdb .T3DI =_ffea .Get ("\u0033\u0044\u0049");_bdb .T3DB =_ffea .Get ("\u0033\u0044\u0042");return &_bdb ,nil ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_de .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_de .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_de .PdfObjectBool ;_fbbd PdfModel ;_daegc _de .PdfObject ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_da :=&PdfAction {};_da ._cg =_de .MakeIndirectObject (_de .MakeDict ());return _da ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_eecf OutlineDest )ToPdfObject ()_de .PdfObject {if (_eecf .PageObj ==nil &&_eecf .Page < 0)||_eecf .Mode ==""{return _de .MakeNull ();};_fecd :=_de .MakeArray ();if _eecf .PageObj !=nil {_fecd .Append (_eecf .PageObj );}else {_fecd .Append (_de .MakeInteger (_eecf .Page ));};_fecd .Append (_de .MakeName (_eecf .Mode ));switch _eecf .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_fecd .Append (_de .MakeFloat (_eecf .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_fecd .Append (_de .MakeFloat (_eecf .X ));case "\u0058\u0059\u005a":_fecd .Append (_de .MakeFloat (_eecf .X ));_fecd .Append (_de .MakeFloat (_eecf .Y ));_fecd .Append (_de .MakeFloat (_eecf .Zoom ));default:_fecd .Set (1,_de .MakeName ("\u0046\u0069\u0074"));};return _fecd ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_abee :=NewPdfAnnotation ();_bcec :=&PdfAnnotationStrikeOut {};_bcec .PdfAnnotation =_abee ;_bcec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abee .SetContext (_bcec );return _bcec ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ffca :=&PdfOutlineItem {_egdd :_de .MakeIndirectObject (_de .MakeDict ())};_ffca ._gccdf =_ffca ;return _ffca ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _de .PdfObject ;Movie _de .PdfObject ;A _de .PdfObject ;};func _bgcf (_ggba ,_febaa string )string {if _c .Contains (_ggba ,"\u002b"){_ddfcf :=_c .Split (_ggba ,"\u002b");if len (_ddfcf )==2{_ggba =_ddfcf [1];};};return _febaa +"\u002b"+_ggba ;};

// AddImageResource adds an image to the XObject resources.
func (_ggfb *PdfPage )AddImageResource (name _de .PdfObjectName ,ximg *XObjectImage )error {var _dcdc *_de .PdfObjectDictionary ;if _ggfb .Resources .XObject ==nil {_dcdc =_de .MakeDict ();_ggfb .Resources .XObject =_dcdc ;}else {var _dcgd bool ;_dcdc ,_dcgd =(_ggfb .Resources .XObject ).(*_de .PdfObjectDictionary );if !_dcgd {return _fe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dcdc .Set (name ,ximg .ToPdfObject ());return nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_babac *PdfPageResources )HasFontByName (keyName _de .PdfObjectName )bool {_ ,_dgdf :=_babac .GetFontByName (keyName );return _dgdf ;};

// SetName sets the `Name` field of the signature.
func (_aegg *PdfSignature )SetName (name string ){_aegg .Name =_de .MakeString (name )};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// ToPdfObject implements interface PdfModel.
func (_bfga *PdfAnnotationHighlight )ToPdfObject ()_de .PdfObject {_bfga .PdfAnnotation .ToPdfObject ();_gabb :=_bfga ._afa ;_cegg :=_gabb .PdfObject .(*_de .PdfObjectDictionary );_bfga .PdfAnnotationMarkup .appendToPdfDictionary (_cegg );_cegg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_cegg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfga .QuadPoints );return _gabb ;};func (_ccadg *fontFile )loadFromSegments (_gfga ,_gfae []byte )error {_bc .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gfga ),len (_gfae ));_bded :=_ccadg .parseASCIIPart (_gfga );if _bded !=nil {return _bded ;};_bc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ccadg );if len (_gfae )==0{return nil ;};_bc .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_ccadg );return nil ;};var (CourierName =_eg .CourierName ;CourierBoldName =_eg .CourierBoldName ;CourierObliqueName =_eg .CourierObliqueName ;CourierBoldObliqueName =_eg .CourierBoldObliqueName ;HelveticaName =_eg .HelveticaName ;HelveticaBoldName =_eg .HelveticaBoldName ;HelveticaObliqueName =_eg .HelveticaObliqueName ;HelveticaBoldObliqueName =_eg .HelveticaBoldObliqueName ;SymbolName =_eg .SymbolName ;ZapfDingbatsName =_eg .ZapfDingbatsName ;TimesRomanName =_eg .TimesRomanName ;TimesBoldName =_eg .TimesBoldName ;TimesItalicName =_eg .TimesItalicName ;TimesBoldItalicName =_eg .TimesBoldItalicName ;);func (_bbdf *PdfReader )newPdfAnnotationSoundFromDict (_egaee *_de .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_eaace :=PdfAnnotationSound {};_aaee ,_addf :=_bbdf .newPdfAnnotationMarkupFromDict (_egaee );if _addf !=nil {return nil ,_addf ;};_eaace .PdfAnnotationMarkup =_aaee ;_eaace .Name =_egaee .Get ("\u004e\u0061\u006d\u0065");_eaace .Sound =_egaee .Get ("\u0053\u006f\u0075n\u0064");return &_eaace ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_bgba *PdfFont )CharcodesToUnicode (charcodes []_gb .CharCode )[]rune {_deeadc ,_ ,_ :=_bgba .CharcodesToUnicodeWithStats (charcodes );return _deeadc ;};

// SetContext sets the sub action (context).
func (_ce *PdfAction )SetContext (ctx PdfModel ){_ce ._def =ctx };func (_bcece *Image )resampleLowBits (_abbef []uint32 ){_abegb :=_cbd .BytesPerLine (int (_bcece .Width ),int (_bcece .BitsPerComponent ),_bcece .ColorComponents );_fggeb :=make ([]byte ,_bcece .ColorComponents *_abegb *int (_bcece .Height ));_dbcb :=int (_bcece .BitsPerComponent )*_bcece .ColorComponents *int (_bcece .Width );_fdfc :=uint8 (8);var (_efffgb ,_febbf int ;_eecda uint32 ;);for _cbec :=0;_cbec < int (_bcece .Height );_cbec ++{_febbf =_cbec *_abegb ;for _eabac :=0;_eabac < _dbcb ;_eabac ++{_eecda =_abbef [_efffgb ];_fdfc -=uint8 (_bcece .BitsPerComponent );_fggeb [_febbf ]|=byte (_eecda )<<_fdfc ;if _fdfc ==0{_fdfc =8;_febbf ++;};_efffgb ++;};};_bcece .Data =_fggeb ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _ga .Time )(PdfDate ,error ){_eafb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fbea ,_ :=_ea .ParseInt (_eafb [1:3],10,32);_addaeb ,_ :=_ea .ParseInt (_eafb [4:6],10,32);return PdfDate {_fbbae :int64 (timeObj .Year ()),_ddfea :int64 (timeObj .Month ()),_eafcb :int64 (timeObj .Day ()),_gdgba :int64 (timeObj .Hour ()),_eegg :int64 (timeObj .Minute ()),_dagfd :int64 (timeObj .Second ()),_afcfc :_eafb [0],_efdc :_fbea ,_bgcag :_addaeb },nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_fabd *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_fabd .HiVal )};};func (_cgfc fontCommon )asPdfObjectDictionary (_gfed string )*_de .PdfObjectDictionary {if _gfed !=""&&_cgfc ._fagbeb !=""&&_gfed !=_cgfc ._fagbeb {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_gfed ,_cgfc );}else if _gfed ==""&&_cgfc ._fagbeb ==""{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cgfc );}else if _cgfc ._fagbeb ==""{_cgfc ._fagbeb =_gfed ;};_cbce :=_de .MakeDict ();_cbce .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0046\u006f\u006e\u0074"));_cbce .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_de .MakeName (_cgfc ._ccbbd ));_cbce .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName (_cgfc ._fagbeb ));if _cgfc ._aceg !=nil {_cbce .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_cgfc ._aceg .ToPdfObject ());};if _cgfc ._beccc !=nil {_cbce .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cgfc ._beccc );}else if _cgfc ._eegcf !=nil {_gaded ,_eddgag :=_cgfc ._eegcf .Stream ();if _eddgag !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_eddgag );}else {_cbce .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gaded );};};return _cbce ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gcedd *PdfPageResources )HasXObjectByName (keyName _de .PdfObjectName )bool {_befgd ,_ :=_gcedd .GetXObjectByName (keyName );return _befgd !=nil ;};

// ToGoTime returns the date in time.Time format.
func (_gaef PdfDate )ToGoTime ()_ga .Time {_gaadg :=int (_gaef ._efdc *60*60+_gaef ._bgcag *60);switch _gaef ._afcfc {case '-':_gaadg =-_gaadg ;case 'Z':_gaadg =0;};_agdfa :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_gaef ._afcfc ,_gaef ._efdc ,_gaef ._bgcag );_bdede :=_ga .FixedZone (_agdfa ,_gaadg );return _ga .Date (int (_gaef ._fbbae ),_ga .Month (_gaef ._ddfea ),int (_gaef ._eafcb ),int (_gaef ._gdgba ),int (_gaef ._eegg ),int (_gaef ._dagfd ),0,_bdede );};func (_bbad *PdfReader )loadStructure ()error {if _bbad ._fabda .GetCrypter ()!=nil &&!_bbad ._fabda .IsAuthenticated (){return _d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_cbbaf :=_bbad ._fabda .GetTrailer ();if _cbbaf ==nil {return _d .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_degfe ,_dfafd :=_cbbaf .Get ("\u0052\u006f\u006f\u0074").(*_de .PdfObjectReference );if !_dfafd {return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_cbbaf );};_facaa ,_ddcbb :=_bbad ._fabda .LookupByReference (*_degfe );if _ddcbb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ddcbb );return _ddcbb ;};_babf ,_dfafd :=_facaa .(*_de .PdfIndirectObject );if !_dfafd {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_facaa ,*_cbbaf );return _fe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dbdcc ,_dfafd :=(*_babf ).PdfObject .(*_de .PdfObjectDictionary );if !_dfafd {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_babf .PdfObject );return _fe .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bc .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dbdcc );_bbdfb ,_dfafd :=_dbdcc .Get ("\u0050\u0061\u0067e\u0073").(*_de .PdfObjectReference );if !_dfafd {return _fe .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cbegf ,_ddcbb :=_bbad ._fabda .LookupByReference (*_bbdfb );if _ddcbb !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _ddcbb ;};_ecdf ,_dfafd :=_cbegf .(*_de .PdfIndirectObject );if !_dfafd {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_bc .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ecdf );return _fe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_abcac ,_dfafd :=_ecdf .PdfObject .(*_de .PdfObjectDictionary );if !_dfafd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ecdf );return _fe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_adgbde ,_dfafd :=_de .GetInt (_abcac .Get ("\u0043\u006f\u0075n\u0074"));if !_dfafd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _fe .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dfafd =_de .GetName (_abcac .Get ("\u0054\u0079\u0070\u0065"));!_dfafd {_bc .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_abcac .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050\u0061\u0067e\u0073"));};_bbad ._beddd =_degfe ;_bbad ._effaa =_dbdcc ;_bbad ._fgcb =_abcac ;_bbad ._cgge =_ecdf ;_bbad ._acaga =int (*_adgbde );_bbad ._bagea =[]*_de .PdfIndirectObject {};_efee :=map[_de .PdfObject ]struct{}{};_ddcbb =_bbad .buildPageList (_ecdf ,nil ,_efee );if _ddcbb !=nil {return _ddcbb ;};_bc .Log .Trace ("\u002d\u002d\u002d");_bc .Log .Trace ("\u0054\u004f\u0043");_bc .Log .Trace ("\u0050\u0061\u0067e\u0073");_bc .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bbad ._bagea ),_bbad ._bagea );_bbad ._dfdd ,_ddcbb =_bbad .loadOutlines ();if _ddcbb !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_ddcbb );return _ddcbb ;};_bbad .AcroForm ,_ddcbb =_bbad .loadForms ();if _ddcbb !=nil {return _ddcbb ;};return nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fbff *PdfFieldButton )IsRadio ()bool {return _fbff .GetType ()==ButtonTypeRadio };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_adab *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bcfdg *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};func _deccb (_cdeb _de .PdfObject )(*PdfFontDescriptor ,error ){_fabbg :=&PdfFontDescriptor {};_cdeb =_de .ResolveReference (_cdeb );if _cfae ,_bgbga :=_cdeb .(*_de .PdfIndirectObject );_bgbga {_fabbg ._dffgfa =_cfae ;_cdeb =_cfae .PdfObject ;};_aeeb ,_ebfbc :=_de .GetDict (_cdeb );if !_ebfbc {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cdeb );return nil ,_de .ErrTypeError ;};if _afbg :=_aeeb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_afbg !=nil {_fabbg .FontName =_afbg ;}else {_bc .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_eccg ,_ :=_de .GetName (_fabbg .FontName );if _bdcfe :=_aeeb .Get ("\u0054\u0079\u0070\u0065");_bdcfe !=nil {_affc ,_dfffeb :=_bdcfe .(*_de .PdfObjectName );if !_dfffeb ||string (*_affc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bc .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bdcfe ,_eccg ,_fabbg .FontName );};}else {_bc .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eccg ,_fabbg .FontName );};_fabbg .FontFamily =_aeeb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fabbg .FontStretch =_aeeb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fabbg .FontWeight =_aeeb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_fabbg .Flags =_aeeb .Get ("\u0046\u006c\u0061g\u0073");_fabbg .FontBBox =_aeeb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fabbg .ItalicAngle =_aeeb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fabbg .Ascent =_aeeb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_fabbg .Descent =_aeeb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fabbg .Leading =_aeeb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fabbg .CapHeight =_aeeb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fabbg .XHeight =_aeeb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_fabbg .StemV =_aeeb .Get ("\u0053\u0074\u0065m\u0056");_fabbg .StemH =_aeeb .Get ("\u0053\u0074\u0065m\u0048");_fabbg .AvgWidth =_aeeb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fabbg .MaxWidth =_aeeb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_fabbg .MissingWidth =_aeeb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fabbg .FontFile =_aeeb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fabbg .FontFile2 =_aeeb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_fabbg .FontFile3 =_aeeb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fabbg .CharSet =_aeeb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fabbg .Style =_aeeb .Get ("\u0053\u0074\u0079l\u0065");_fabbg .Lang =_aeeb .Get ("\u004c\u0061\u006e\u0067");_fabbg .FD =_aeeb .Get ("\u0046\u0044");_fabbg .CIDSet =_aeeb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fabbg .Flags !=nil {if _cdbge ,_abfa :=_de .GetIntVal (_fabbg .Flags );_abfa {_fabbg ._dgeg =_cdbge ;};};if _fabbg .MissingWidth !=nil {if _bgbeg ,_dbaf :=_de .GetNumberAsFloat (_fabbg .MissingWidth );_dbaf ==nil {_fabbg ._fbeg =_bgbeg ;};};if _fabbg .FontFile !=nil {_bccfb ,_degbb :=_cfedea (_fabbg .FontFile );if _degbb !=nil {return _fabbg ,_degbb ;};_bc .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_bccfb );_fabbg .fontFile =_bccfb ;};if _fabbg .FontFile2 !=nil {_aaddd ,_deegg :=_eg .NewFontFile2FromPdfObject (_fabbg .FontFile2 );if _deegg !=nil {return _fabbg ,_deegg ;};_bc .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_aaddd .String ());_fabbg ._cdefg =&_aaddd ;};return _fabbg ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _de .PdfObject ;Name _de .PdfObject ;State _de .PdfObject ;StateModel _de .PdfObject ;};func (_bdfg *PdfReader )loadAction (_cba _de .PdfObject )(*PdfAction ,error ){if _cecg ,_ddff :=_de .GetIndirect (_cba );_ddff {_aea ,_adfe :=_bdfg .newPdfActionFromIndirectObject (_cecg );if _adfe !=nil {return nil ,_adfe ;};return _aea ,nil ;}else if !_de .IsNullObject (_cba ){return nil ,_fe .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fded *PdfPageResources )GetExtGState (keyName _de .PdfObjectName )(_de .PdfObject ,bool ){if _fded .ExtGState ==nil {return nil ,false ;};_eeeae ,_cfbd :=_de .TraceToDirectObject (_fded .ExtGState ).(*_de .PdfObjectDictionary );if !_cfbd {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fded .ExtGState );return nil ,false ;};if _fadga :=_eeeae .Get (keyName );_fadga !=nil {return _fadga ,true ;};return nil ,false ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cdfe *PdfPage )AppendContentStream (contentStr string )error {_ceeca ,_edffc :=_cdfe .GetContentStreams ();if _edffc !=nil {return _edffc ;};if len (_ceeca )==0{_ceeca =[]string {contentStr };return _cdfe .SetContentStreams (_ceeca ,_de .NewFlateEncoder ());};var _cbfgc _gd .Buffer ;_cbfgc .WriteString (_ceeca [len (_ceeca )-1]);_cbfgc .WriteString ("\u000a");_cbfgc .WriteString (contentStr );_ceeca [len (_ceeca )-1]=_cbfgc .String ();return _cdfe .SetContentStreams (_ceeca ,_de .NewFlateEncoder ());};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_fdfaa *PdfPageResources )GetXObjectImageByName (keyName _de .PdfObjectName )(*XObjectImage ,error ){_aaeeb ,_ffbaa :=_fdfaa .GetXObjectByName (keyName );if _aaeeb ==nil {return nil ,nil ;};if _ffbaa !=XObjectTypeImage {return nil ,_fe .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_gbad ,_gfaeg :=NewXObjectImageFromStream (_aaeeb );if _gfaeg !=nil {return nil ,_gfaeg ;};return _gbad ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_acfa *PdfPage )HasXObjectByName (name _de .PdfObjectName )bool {_geabe ,_facae :=_acfa .Resources .XObject .(*_de .PdfObjectDictionary );if !_facae {return false ;};if _dgaaa :=_geabe .Get (name );_dgaaa !=nil {return true ;};return false ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_de .PdfObjectString ;Q *_de .PdfObjectInteger ;DS *_de .PdfObjectString ;RV _de .PdfObject ;MaxLen *_de .PdfObjectInteger ;};var _cdgbf =_db .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_bdaaa =subject };

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_cgea *Image )AlphaMap (mapFunc AlphaMapFunc ){for _cacea ,_egfc :=range _cgea ._acfbc {_cgea ._acfbc [_cacea ]=mapFunc (_egfc );};};var (ErrRequiredAttributeMissing =_fe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_bcda =_fe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_fe .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fe .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_d .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0076\u0029",_de .ErrNotSupported );ErrType1CFontNotSupported =_d .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0076\u0029",_de .ErrNotSupported );ErrType3FontNotSupported =_d .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0076\u0029",_de .ErrNotSupported );ErrTTCmapNotSupported =_d .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0076\u0029",_de .ErrNotSupported ););

// HasExtGState checks if ExtGState name is available.
func (_edge *PdfPage )HasExtGState (name _de .PdfObjectName )bool {if _edge .Resources ==nil {return false ;};if _edge .Resources .ExtGState ==nil {return false ;};_ffeb ,_cfegf :=_de .TraceToDirectObject (_edge .Resources .ExtGState ).(*_de .PdfObjectDictionary );if !_cfegf {_bc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_de .TraceToDirectObject (_edge .Resources .ExtGState ));return false ;};_gagfc :=_ffeb .Get (name );_begcd :=_gagfc !=nil ;return _begcd ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetAction returns the PDF action for the annotation link.
func (_fbc *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fbc ._bdd !=nil {return _fbc ._bdd ,nil ;};if _fbc .A ==nil {return nil ,nil ;};if _fbc ._fabb ==nil {return nil ,nil ;};_age ,_beab :=_fbc ._fabb .loadAction (_fbc .A );if _beab !=nil {return nil ,_beab ;};_fbc ._bdd =_age ;return _fbc ._bdd ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _de .PdfObject ;H _de .PdfObject ;};func (_bdc *PdfReader )newPdfActionResetFormFromDict (_ebe *_de .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ebe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ebe .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// String returns a string representation of what flags are set.
func (_abef FieldFlag )String ()string {_fagg :="";if _abef ==FieldFlagClear {_fagg ="\u0043\u006c\u0065a\u0072";return _fagg ;};if _abef &FieldFlagReadOnly > 0{_fagg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _abef &FieldFlagRequired > 0{_fagg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _abef &FieldFlagNoExport > 0{_fagg +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _abef &FieldFlagNoToggleToOff > 0{_fagg +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _abef &FieldFlagRadio > 0{_fagg +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _abef &FieldFlagPushbutton > 0{_fagg +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _abef &FieldFlagRadiosInUnision > 0{_fagg +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _abef &FieldFlagMultiline > 0{_fagg +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _abef &FieldFlagPassword > 0{_fagg +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _abef &FieldFlagFileSelect > 0{_fagg +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _abef &FieldFlagDoNotScroll > 0{_fagg +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _abef &FieldFlagComb > 0{_fagg +="\u007c\u0043\u006fm\u0062";};if _abef &FieldFlagRichText > 0{_fagg +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _abef &FieldFlagDoNotSpellCheck > 0{_fagg +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _abef &FieldFlagCombo > 0{_fagg +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _abef &FieldFlagEdit > 0{_fagg +="\u007c\u0045\u0064i\u0074";};if _abef &FieldFlagSort > 0{_fagg +="\u007c\u0053\u006fr\u0074";};if _abef &FieldFlagMultiSelect > 0{_fagg +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _abef &FieldFlagCommitOnSelChange > 0{_fagg +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _c .Trim (_fagg ,"\u007c");};func _geda (_aaag *_de .PdfObjectDictionary ,_eaead *fontCommon )(*pdfCIDFontType2 ,error ){if _eaead ._fagbeb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bc .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_eaead );return nil ,_de .ErrRangeError ;};_feace :=_fcbb (_eaead );_ceeg ,_fada :=_de .GetDict (_aaag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fada {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eaead );return nil ,ErrRequiredAttributeMissing ;};_feace .CIDSystemInfo =_ceeg ;_feace .DW =_aaag .Get ("\u0044\u0057");_feace .W =_aaag .Get ("\u0057");_feace .DW2 =_aaag .Get ("\u0044\u0057\u0032");_feace .W2 =_aaag .Get ("\u0057\u0032");_feace .CIDToGIDMap =_aaag .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_feace ._bfccg =1000.0;if _bceg ,_ddefd :=_de .GetNumberAsFloat (_feace .DW );_ddefd ==nil {_feace ._bfccg =_bceg ;};_abfd ,_bddf :=_defde (_feace .W );if _bddf !=nil {return nil ,_bddf ;};if _abfd ==nil {_abfd =map[_gb .CharCode ]float64 {};};_feace ._gdgf =_abfd ;return _feace ,nil ;};func (_bbg *PdfReader )newPdfAnnotationInkFromDict (_cee *_de .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fbdf :=PdfAnnotationInk {};_daad ,_gbba :=_bbg .newPdfAnnotationMarkupFromDict (_cee );if _gbba !=nil {return nil ,_gbba ;};_fbdf .PdfAnnotationMarkup =_daad ;_fbdf .InkList =_cee .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fbdf .BS =_cee .Get ("\u0042\u0053");return &_fbdf ,nil ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_agecf *PdfReader )GetNamedDestinations ()(_de .PdfObject ,error ){_cgadb :=_de .ResolveReference (_agecf ._effaa .Get ("\u004e\u0061\u006de\u0073"));if _cgadb ==nil {return nil ,nil ;};if !_agecf ._daceb {_bgefc :=_agecf .traverseObjectData (_cgadb );if _bgefc !=nil {return nil ,_bgefc ;};};return _cgadb ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_de .PdfObjectInteger ;BitsPerComponent *_de .PdfObjectInteger ;BitsPerFlag *_de .PdfObjectInteger ;Decode *_de .PdfObjectArray ;Function []PdfFunction ;};func (_dagc *PdfWriter )copyObject (_ggebg _de .PdfObject ,_fgce map[_de .PdfObject ]_de .PdfObject ,_cccbd map[_de .PdfObject ]struct{},_gecbc bool )_de .PdfObject {if _cfdgg ,_accc :=_fgce [_ggebg ];_accc {return _cfdgg ;};_beeec :=_ggebg ;_afdea :=!_dagc ._gabdg &&_cccbd !=nil ;switch _ebdbcc :=_ggebg .(type ){case *_de .PdfObjectArray :_gcaac :=_de .MakeArray ();_beeec =_gcaac ;_fgce [_ggebg ]=_beeec ;for _ ,_gbbcf :=range _ebdbcc .Elements (){_gcaac .Append (_dagc .copyObject (_gbbcf ,_fgce ,_cccbd ,_gecbc ));};case *_de .PdfObjectStreams :_bbagb :=&_de .PdfObjectStreams {PdfObjectReference :_ebdbcc .PdfObjectReference };_beeec =_bbagb ;_fgce [_ggebg ]=_beeec ;for _ ,_fdfgd :=range _ebdbcc .Elements (){_bbagb .Append (_dagc .copyObject (_fdfgd ,_fgce ,_cccbd ,_gecbc ));};case *_de .PdfObjectStream :_ecgcb :=&_de .PdfObjectStream {Stream :_ebdbcc .Stream ,PdfObjectReference :_ebdbcc .PdfObjectReference };_beeec =_ecgcb ;_fgce [_ggebg ]=_beeec ;_ecgcb .PdfObjectDictionary =_dagc .copyObject (_ebdbcc .PdfObjectDictionary ,_fgce ,_cccbd ,_gecbc ).(*_de .PdfObjectDictionary );case *_de .PdfObjectDictionary :var _dgbce bool ;if _afdea &&!_gecbc {if _gegacg ,_ :=_de .GetNameVal (_ebdbcc .Get ("\u0054\u0079\u0070\u0065"));_gegacg =="\u0050\u0061\u0067\u0065"{_ ,_aeff :=_dagc ._baegd [_ebdbcc ];_gecbc =!_aeff ;_dgbce =_gecbc ;};};_bbaag :=_de .MakeDict ();_beeec =_bbaag ;_fgce [_ggebg ]=_beeec ;for _ ,_aedfa :=range _ebdbcc .Keys (){_bbaag .Set (_aedfa ,_dagc .copyObject (_ebdbcc .Get (_aedfa ),_fgce ,_cccbd ,_gecbc ));};if _dgbce {_beeec =_de .MakeNull ();_gecbc =false ;};case *_de .PdfIndirectObject :_daace :=&_de .PdfIndirectObject {PdfObjectReference :_ebdbcc .PdfObjectReference };_beeec =_daace ;_fgce [_ggebg ]=_beeec ;_daace .PdfObject =_dagc .copyObject (_ebdbcc .PdfObject ,_fgce ,_cccbd ,_gecbc );case *_de .PdfObjectString :_adcac :=*_ebdbcc ;_beeec =&_adcac ;_fgce [_ggebg ]=_beeec ;case *_de .PdfObjectName :_bgafad :=_de .PdfObjectName (*_ebdbcc );_beeec =&_bgafad ;_fgce [_ggebg ]=_beeec ;case *_de .PdfObjectNull :_beeec =_de .MakeNull ();_fgce [_ggebg ]=_beeec ;case *_de .PdfObjectInteger :_bbbb :=_de .PdfObjectInteger (*_ebdbcc );_beeec =&_bbbb ;_fgce [_ggebg ]=_beeec ;case *_de .PdfObjectReference :_fegae :=_de .PdfObjectReference (*_ebdbcc );_beeec =&_fegae ;_fgce [_ggebg ]=_beeec ;case *_de .PdfObjectFloat :_faeb :=_de .PdfObjectFloat (*_ebdbcc );_beeec =&_faeb ;_fgce [_ggebg ]=_beeec ;case *_de .PdfObjectBool :_adece :=_de .PdfObjectBool (*_ebdbcc );_beeec =&_adece ;_fgce [_ggebg ]=_beeec ;case *pdfSignDictionary :_beaae :=&pdfSignDictionary {PdfObjectDictionary :_de .MakeDict (),_ecdg :_ebdbcc ._ecdg ,_debac :_ebdbcc ._debac };_beeec =_beaae ;_fgce [_ggebg ]=_beeec ;for _ ,_egcd :=range _ebdbcc .Keys (){_beaae .Set (_egcd ,_dagc .copyObject (_ebdbcc .Get (_egcd ),_fgce ,_cccbd ,_gecbc ));};default:_bc .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ggebg );};if _afdea &&_gecbc {_cccbd [_ggebg ]=struct{}{};};return _beeec ;};

// HasFontByName checks if has font resource by name.
func (_aaecc *PdfPage )HasFontByName (name _de .PdfObjectName )bool {_dabgg ,_gdgd :=_aaecc .Resources .Font .(*_de .PdfObjectDictionary );if !_gdgd {return false ;};if _cfbcfe :=_dabgg .Get (name );_cfbcfe !=nil {return true ;};return false ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gddee :_de .MakeIndirectObject (_de .MakeDict ())}};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_fafaf *PdfReader )CheckAccessRights (password []byte )(bool ,_ab .Permissions ,error ){return _fafaf ._fabda .CheckAccessRights (password );};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_de .PdfObject ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_cgbf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_ggde :=0.3*_cgbf .R ()+0.59*_cgbf .G ()+0.11*_cgbf .B ();_ggde =_bgc .Min (_bgc .Max (_ggde ,0.0),1.0);return NewPdfColorDeviceGray (_ggde );};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_aeeg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// SetPatternByName sets a pattern resource specified by keyName.
func (_gccb *PdfPageResources )SetPatternByName (keyName _de .PdfObjectName ,pattern _de .PdfObject )error {if _gccb .Pattern ==nil {_gccb .Pattern =_de .MakeDict ();};_bedfg ,_fgacc :=_gccb .Pattern .(*_de .PdfObjectDictionary );if !_fgacc {return _de .ErrTypeError ;};_bedfg .Set (keyName ,pattern );return nil ;};

// Val returns the color value.
func (_bced *PdfColorDeviceGray )Val ()float64 {return float64 (*_bced )};func (_fddca SignatureValidationResult )String ()string {var _feada _gd .Buffer ;_feada .WriteString (_d .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_fddca .Name ));if _fddca .Date ._fbbae > 0{_feada .WriteString (_d .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_fddca .Date .ToGoTime ().String ()));}else {_feada .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_fddca .Reason )> 0{_feada .WriteString (_d .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fddca .Reason ));}else {_feada .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_fddca .Location )> 0{_feada .WriteString (_d .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fddca .Location ));}else {_feada .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_fddca .ContactInfo )> 0{_feada .WriteString (_d .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_fddca .ContactInfo ));}else {_feada .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_feada .WriteString (_d .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_fddca .Fields )));if _fddca .IsSigned {_feada .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_feada .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _fddca .IsVerified {_feada .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_feada .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _fddca .IsTrusted {_feada .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_feada .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_fddca .GeneralizedTime .IsZero (){_feada .WriteString (_d .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_fddca .GeneralizedTime .String ()));};return _feada .String ();};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _de .PdfObject ;NewWindow _de .PdfObject ;T _de .PdfObject ;};func (_dfdaa *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _eccdg []*PdfFieldSignature ;for _ ,_faba :=range _dfdaa .AllFields (){switch _gdafc :=_faba .GetContext ().(type ){case *PdfFieldSignature :_adfba :=_gdafc ;_eccdg =append (_eccdg ,_adfba );};};return _eccdg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eccec *PdfOutlineItem )ToPdfObject ()_de .PdfObject {_eabab :=_eccec ._egdd ;_fadd :=_eabab .PdfObject .(*_de .PdfObjectDictionary );_fadd .Set ("\u0054\u0069\u0074l\u0065",_eccec .Title );if _eccec .A !=nil {_fadd .Set ("\u0041",_eccec .A );};if _gbbdce :=_fadd .Get ("\u0053\u0045");_gbbdce !=nil {_fadd .Remove ("\u0053\u0045");};if _eccec .C !=nil {_fadd .Set ("\u0043",_eccec .C );};if _eccec .Dest !=nil {_fadd .Set ("\u0044\u0065\u0073\u0074",_eccec .Dest );};if _eccec .F !=nil {_fadd .Set ("\u0046",_eccec .F );};if _eccec .Count !=nil {_fadd .Set ("\u0043\u006f\u0075n\u0074",_de .MakeInteger (*_eccec .Count ));};if _eccec .Next !=nil {_fadd .Set ("\u004e\u0065\u0078\u0074",_eccec .Next .ToPdfObject ());};if _eccec .First !=nil {_fadd .Set ("\u0046\u0069\u0072s\u0074",_eccec .First .ToPdfObject ());};if _eccec .Prev !=nil {_fadd .Set ("\u0050\u0072\u0065\u0076",_eccec .Prev .GetContext ().GetContainingPdfObject ());};if _eccec .Last !=nil {_fadd .Set ("\u004c\u0061\u0073\u0074",_eccec .Last .GetContext ().GetContainingPdfObject ());};if _eccec .Parent !=nil {_fadd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eccec .Parent .GetContext ().GetContainingPdfObject ());};return _eabab ;};func _cfedea (_bbdcf _de .PdfObject )(*fontFile ,error ){_bc .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bbdcf );_aebcf :=&fontFile {};_bbdcf =_de .TraceToDirectObject (_bbdcf );_afbee ,_adgbc :=_bbdcf .(*_de .PdfObjectStream );if !_adgbc {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bbdcf );return nil ,_de .ErrTypeError ;};_bdefa :=_afbee .PdfObjectDictionary ;_bbccc ,_cgde :=_de .DecodeStream (_afbee );if _cgde !=nil {return nil ,_cgde ;};_ccad ,_adgbc :=_de .GetNameVal (_bdefa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_adgbc {_aebcf ._bebfc =_ccad ;if _ccad =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bc .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_fbcg ,_ :=_de .GetIntVal (_bdefa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bcfg ,_ :=_de .GetIntVal (_bdefa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _fbcg > len (_bbccc ){_fbcg =len (_bbccc );};if _fbcg +_bcfg > len (_bbccc ){_bcfg =len (_bbccc )-_fbcg ;};_dcgag :=_bbccc [:_fbcg ];var _cgbg []byte ;if _bcfg > 0{_cgbg =_bbccc [_fbcg :_fbcg +_bcfg ];};if _fbcg > 0&&_bcfg > 0{_bccd :=_aebcf .loadFromSegments (_dcgag ,_cgbg );if _bccd !=nil {return nil ,_bccd ;};};return _aebcf ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_bfdc *PdfFont )Subtype ()string {_cgdbg :=_bfdc .baseFields ()._fagbeb ;if _dfef ,_bage :=_bfdc ._adce .(*pdfFontType0 );_bage {_cgdbg =_cgdbg +"\u003a"+_dfef .DescendantFont .Subtype ();};return _cgdbg ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_egedc :=&PdfColorspaceDeviceN {};return _egedc ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_bageaa *PdfPageResources )GetXObjectFormByName (keyName _de .PdfObjectName )(*XObjectForm ,error ){_aaac ,_fagge :=_bageaa .GetXObjectByName (keyName );if _aaac ==nil {return nil ,nil ;};if _fagge !=XObjectTypeForm {return nil ,_fe .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_faddd ,_fgeeb :=NewXObjectFormFromStream (_aaac );if _fgeeb !=nil {return nil ,_fgeeb ;};return _faddd ,nil ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _de .PdfObjectName ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_de .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _de .PdfObject ;A _de .PdfObject ;SE _de .PdfObject ;C _de .PdfObject ;F _de .PdfObject ;_egdd *_de .PdfIndirectObject ;};func _gbcee (_ffgaa *_de .PdfObjectStream )(*PdfFunctionType0 ,error ){_agdff :=&PdfFunctionType0 {};_agdff ._fffeb =_ffgaa ;_afgfg :=_ffgaa .PdfObjectDictionary ;_acgaf ,_dggbg :=_de .TraceToDirectObject (_afgfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_dggbg {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _acgaf .Len ()< 0||_acgaf .Len ()%2!=0{_bc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_agdff .NumInputs =_acgaf .Len ()/2;_dbcd ,_dafae :=_acgaf .ToFloat64Array ();if _dafae !=nil {return nil ,_dafae ;};_agdff .Domain =_dbcd ;_acgaf ,_dggbg =_de .TraceToDirectObject (_afgfg .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if !_dggbg {_bc .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _acgaf .Len ()< 0||_acgaf .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_agdff .NumOutputs =_acgaf .Len ()/2;_aeda ,_dafae :=_acgaf .ToFloat64Array ();if _dafae !=nil {return nil ,_dafae ;};_agdff .Range =_aeda ;_acgaf ,_dggbg =_de .TraceToDirectObject (_afgfg .Get ("\u0053\u0069\u007a\u0065")).(*_de .PdfObjectArray );if !_dggbg {_bc .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gcbaa ,_dafae :=_acgaf .ToIntegerArray ();if _dafae !=nil {return nil ,_dafae ;};if len (_gcbaa )!=_agdff .NumInputs {_bc .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agdff .Size =_gcbaa ;_abgagg ,_dggbg :=_de .TraceToDirectObject (_afgfg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_de .PdfObjectInteger );if !_dggbg {_bc .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_abgagg !=1&&*_abgagg !=2&&*_abgagg !=4&&*_abgagg !=8&&*_abgagg !=12&&*_abgagg !=16&&*_abgagg !=24&&*_abgagg !=32{_bc .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_abgagg );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agdff .BitsPerSample =int (*_abgagg );_agdff .Order =1;_abbaaf ,_dggbg :=_de .TraceToDirectObject (_afgfg .Get ("\u004f\u0072\u0064e\u0072")).(*_de .PdfObjectInteger );if _dggbg {if *_abbaaf !=1&&*_abbaaf !=3{_bc .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_abbaaf );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agdff .Order =int (*_abbaaf );};_acgaf ,_dggbg =_de .TraceToDirectObject (_afgfg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_de .PdfObjectArray );if _dggbg {_feff ,_gfaa :=_acgaf .ToFloat64Array ();if _gfaa !=nil {return nil ,_gfaa ;};_agdff .Encode =_feff ;};_acgaf ,_dggbg =_de .TraceToDirectObject (_afgfg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_de .PdfObjectArray );if _dggbg {_cafga ,_bbbcd :=_acgaf .ToFloat64Array ();if _bbbcd !=nil {return nil ,_bbbcd ;};_agdff .Decode =_cafga ;};_dfcfd ,_dafae :=_de .DecodeStream (_ffgaa );if _dafae !=nil {return nil ,_dafae ;};_agdff ._ggeba =_dfcfd ;return _agdff ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gcba :=NewPdfAnnotation ();_dfb :=&PdfAnnotationRichMedia {};_dfb .PdfAnnotation =_gcba ;_gcba .SetContext (_dfb );return _dfb ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_egaeef *PdfFont )GetCharMetrics (code _gb .CharCode )(CharMetrics ,bool ){var _cadf _eg .CharMetrics ;switch _eage :=_egaeef ._adce .(type ){case *pdfFontSimple :if _ebdbe ,_bbeac :=_eage .GetCharMetrics (code );_bbeac {return _ebdbe ,_bbeac ;};case *pdfFontType0 :if _egee ,_egdgg :=_eage .GetCharMetrics (code );_egdgg {return _egee ,_egdgg ;};case *pdfCIDFontType0 :if _begf ,_afafa :=_eage .GetCharMetrics (code );_afafa {return _begf ,_afafa ;};case *pdfCIDFontType2 :if _egcc ,_cagee :=_eage .GetCharMetrics (code );_cagee {return _egcc ,_cagee ;};default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_egaeef ._adce );return _cadf ,false ;};if _ceddd ,_ccdc :=_egaeef .GetFontDescriptor ();_ccdc ==nil &&_ceddd !=nil {return _eg .CharMetrics {Wx :_ceddd ._fbeg },true ;};_bc .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_egaeef );return _cadf ,false ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cfeae *Image )ConvertToBinary ()error {if _cfeae .ColorComponents ==1&&_cfeae .BitsPerComponent ==1{return nil ;};_egbae ,_cggfe :=_cfeae .ToGoImage ();if _cggfe !=nil {return _cggfe ;};_edeca ,_cggfe :=_cbd .MonochromeConverter .Convert (_egbae );if _cggfe !=nil {return _cggfe ;};_cfeae .BitsPerComponent =1;_cfeae .ColorComponents =1;_cfeae .Data =_edeca .Base ().Data ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcee *PdfAnnotationRedact )ToPdfObject ()_de .PdfObject {_dcee .PdfAnnotation .ToPdfObject ();_eebe :=_dcee ._afa ;_aabc :=_eebe .PdfObject .(*_de .PdfObjectDictionary );_dcee .PdfAnnotationMarkup .appendToPdfDictionary (_aabc );_aabc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_aabc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcee .QuadPoints );_aabc .SetIfNotNil ("\u0049\u0043",_dcee .IC );_aabc .SetIfNotNil ("\u0052\u004f",_dcee .RO );_aabc .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dcee .OverlayText );_aabc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dcee .Repeat );_aabc .SetIfNotNil ("\u0044\u0041",_dcee .DA );_aabc .SetIfNotNil ("\u0051",_dcee .Q );return _eebe ;};type fontCommon struct{_ccbbd string ;_fagbeb string ;_bcbfc string ;_beccc _de .PdfObject ;_eegcf *_bd .CMap ;_aceg *PdfFontDescriptor ;_ecaf int64 ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_dfgcb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_agdfg :=RC4_128bit ;if options !=nil {_agdfg =options .Algorithm ;};_ccccge :=_ab .PermOwner ;if options !=nil {_ccccge =options .Permissions ;};var _ceccc _ag .Filter ;switch _agdfg {case RC4_128bit :_ceccc =_ag .NewFilterV2 (16);case AES_128bit :_ceccc =_ag .NewFilterAESV2 ();case AES_256bit :_ceccc =_ag .NewFilterAESV3 ();default:return _d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_bfcb ,_bebec ,_gdfgg :=_de .PdfCryptNewEncrypt (_ceccc ,userPass ,ownerPass ,_ccccge );if _gdfgg !=nil {return _gdfgg ;};_dfgcb ._dgebf =_bfcb ;if _bebec .Major !=0{_dfgcb .SetVersion (_bebec .Major ,_bebec .Minor );};_dfgcb ._acbdf =_bebec .Encrypt ;_dfgcb ._adfbf =_de .MakeArray (_de .MakeHexString (_bebec .ID0 ),_de .MakeHexString (_bebec .ID1 ));_adgaa :=_de .MakeIndirectObject (_bebec .Encrypt );_dfgcb ._bgdee =_adgaa ;_dfgcb .addObject (_adgaa );return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_egdab :=&PdfPageResourcesColorspaces {};_egdab .Names =[]string {};_egdab .Colorspaces =map[string ]PdfColorspace {};_egdab ._ebedca =&_de .PdfIndirectObject {};return _egdab ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cebgb *PdfField )SetContext (ctx PdfModel ){_cebgb ._addgf =ctx };

// Initialize initializes the PdfSignature.
func (_gfagf *PdfSignature )Initialize ()error {if _gfagf .Handler ==nil {return _fe .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _gfagf .Handler .InitSignature (_gfagf );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cafb pdfCIDFontType2 )GetRuneMetrics (r rune )(_eg .CharMetrics ,bool ){_ccfc ,_ffdad :=_cafb ._faefg [r ];if !_ffdad {_fbffd ,_fdaee :=_de .GetInt (_cafb .DW );if !_fdaee {return _eg .CharMetrics {},false ;};_ccfc =int (*_fbffd );};return _eg .CharMetrics {Wx :float64 (_ccfc )},true ;};func (_gfca *PdfAcroForm )fill (_edddf FieldValueProvider ,_eddde FieldAppearanceGenerator )error {if _gfca ==nil {return nil ;};_ffeaa ,_ddgcb :=_edddf .FieldValues ();if _ddgcb !=nil {return _ddgcb ;};for _ ,_ccce :=range _gfca .AllFields (){_ecafc :=_ccce .PartialName ();_gbfb ,_gadf :=_ffeaa [_ecafc ];if !_gadf {if _ddec ,_gaegf :=_ccce .FullName ();_gaegf ==nil {_gbfb ,_gadf =_ffeaa [_ddec ];};};if !_gadf {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_ecafc );continue ;};if _bggeb :=_acfef (_ccce ,_gbfb );_bggeb !=nil {return _bggeb ;};if _eddde ==nil {continue ;};for _ ,_dbeg :=range _ccce .Annotations {_bcba ,_edecd :=_eddde .GenerateAppearanceDict (_gfca ,_ccce ,_dbeg );if _edecd !=nil {return _edecd ;};_dbeg .AP =_bcba ;_dbeg .ToPdfObject ();};};return nil ;};const (_bdafe =0x00001;_cbbb =0x00002;_adca =0x00004;_bbfb =0x00008;_efge =0x00020;_caadb =0x00040;_dfdc =0x10000;_dgff =0x20000;_ebbb =0x40000;);

// GetContentStreams returns the content stream as an array of strings.
func (_babca *PdfPage )GetContentStreams ()([]string ,error ){if _babca .Contents ==nil {return nil ,nil ;};_baccg :=_de .TraceToDirectObject (_babca .Contents );var _dfgd []_de .PdfObject ;if _cdfa ,_adbfg :=_baccg .(*_de .PdfObjectArray );_adbfg {_dfgd =_cdfa .Elements ();}else {_dfgd =[]_de .PdfObject {_baccg };};var _bbgg []string ;for _ ,_gadg :=range _dfgd {_fdac ,_bbfee :=_bcgf (_gadg );if _bbfee !=nil {return nil ,_bbfee ;};_bbgg =append (_bbgg ,_fdac );};return _bbgg ,nil ;};

// Encoder returns the font's text encoder.
func (_bebd pdfCIDFontType2 )Encoder ()_gb .TextEncoder {return _bebd ._ffggf };

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _ga .Time ){_gaag =modifiedDate };

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_de .PdfObject ,error );};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gcag *PdfTilingPattern )ToPdfObject ()_de .PdfObject {_gcag .PdfPattern .ToPdfObject ();_ffbae :=_gcag .getDict ();if _gcag .PaintType !=nil {_ffbae .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gcag .PaintType );};if _gcag .TilingType !=nil {_ffbae .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gcag .TilingType );};if _gcag .BBox !=nil {_ffbae .Set ("\u0042\u0042\u006f\u0078",_gcag .BBox .ToPdfObject ());};if _gcag .XStep !=nil {_ffbae .Set ("\u0058\u0053\u0074e\u0070",_gcag .XStep );};if _gcag .YStep !=nil {_ffbae .Set ("\u0059\u0053\u0074e\u0070",_gcag .YStep );};if _gcag .Resources !=nil {_ffbae .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gcag .Resources .ToPdfObject ());};if _gcag .Matrix !=nil {_ffbae .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gcag .Matrix );};return _gcag ._addd ;};func (_fadb *PdfReader )newPdfAnnotationTrapNetFromDict (_bedf *_de .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bcdc :=PdfAnnotationTrapNet {};return &_bcdc ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fdgc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bdge :=_bga .NewReader (img .getBase ());_accb :=_cbd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._acfbc ,img ._affeg );_cgcc :=_bga .NewWriter (_accb );_cbff :=_bgc .Pow (2,float64 (img .BitsPerComponent ))-1;_cdda :=_fdgc .GetNumComponents ();_ecdb :=make ([]uint32 ,_cdda );_cdbab :=make ([]float64 ,_cdda );for {_cfeg :=_bdge .ReadSamples (_ecdb );if _cfeg ==_gad .EOF {break ;}else if _cfeg !=nil {return img ,_cfeg ;};for _ggdb :=0;_ggdb < _cdda ;_ggdb ++{_gcgac :=float64 (_ecdb [_ggdb ])/_cbff ;_cdbab [_ggdb ]=_gcgac ;};_eccf ,_cfeg :=_fdgc .TintTransform .Evaluate (_cdbab );if _cfeg !=nil {return img ,_cfeg ;};for _ ,_afff :=range _eccf {_afff =_bgc .Min (_bgc .Max (0,_afff ),1.0);if _cfeg =_cgcc .WriteSample (uint32 (_afff *_cbff ));_cfeg !=nil {return img ,_cfeg ;};};};return _fdgc .AlternateSpace .ImageToRGB (_aade (&_accb ));};func (_dbead *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ggbfc *pdfFontSimple )SetEncoder (encoder _gb .TextEncoder ){_ggbfc ._fafa =encoder };

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ceec *PdfFieldSignature )ToPdfObject ()_de .PdfObject {if _ceec .PdfAnnotationWidget !=nil {_ceec .PdfAnnotationWidget .ToPdfObject ();};_ceec .PdfField .ToPdfObject ();_egbea :=_ceec ._gddee ;_cdeg :=_egbea .PdfObject .(*_de .PdfObjectDictionary );_cdeg .SetIfNotNil ("\u0046\u0054",_de .MakeName ("\u0053\u0069\u0067"));_cdeg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ceec .Lock );_cdeg .SetIfNotNil ("\u0053\u0056",_ceec .SV );if _ceec .V !=nil {_cdeg .SetIfNotNil ("\u0056",_ceec .V .ToPdfObject ());};return _egbea ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _de .StreamEncoder ;FormType _de .PdfObject ;BBox _de .PdfObject ;Matrix _de .PdfObject ;Resources *PdfPageResources ;Group _de .PdfObject ;Ref _de .PdfObject ;MetaData _de .PdfObject ;PieceInfo _de .PdfObject ;LastModified _de .PdfObject ;StructParent _de .PdfObject ;StructParents _de .PdfObject ;OPI _de .PdfObject ;OC _de .PdfObject ;Name _de .PdfObject ;

// Stream data.
Stream []byte ;_fecdfb *_de .PdfObjectStream ;};func (_cega *PdfReader )newPdfAnnotationMarkupFromDict (_cgec *_de .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dcc :=&PdfAnnotationMarkup {};if _fdcd :=_cgec .Get ("\u0054");_fdcd !=nil {_dcc .T =_fdcd ;};if _dga :=_cgec .Get ("\u0050\u006f\u0070u\u0070");_dga !=nil {_dfff ,_gegg :=_dga .(*_de .PdfIndirectObject );if !_gegg {if _ ,_afdc :=_dga .(*_de .PdfObjectNull );!_afdc {return nil ,_fe .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_efb ,_dgc :=_cega .newPdfAnnotationFromIndirectObject (_dfff );if _dgc !=nil {return nil ,_dgc ;};if _efb !=nil {_bae ,_gae :=_efb ._fgd .(*PdfAnnotationPopup );if !_gae {return nil ,_fe .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_dcc .Popup =_bae ;};};};if _dbb :=_cgec .Get ("\u0043\u0041");_dbb !=nil {_dcc .CA =_dbb ;};if _fbda :=_cgec .Get ("\u0052\u0043");_fbda !=nil {_dcc .RC =_fbda ;};if _aede :=_cgec .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_aede !=nil {_dcc .CreationDate =_aede ;};if _beb :=_cgec .Get ("\u0049\u0052\u0054");_beb !=nil {_dcc .IRT =_beb ;};if _feb :=_cgec .Get ("\u0053\u0075\u0062\u006a");_feb !=nil {_dcc .Subj =_feb ;};if _bcb :=_cgec .Get ("\u0052\u0054");_bcb !=nil {_dcc .RT =_bcb ;};if _fcbf :=_cgec .Get ("\u0049\u0054");_fcbf !=nil {_dcc .IT =_fcbf ;};if _cebf :=_cgec .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cebf !=nil {_dcc .ExData =_cebf ;};return _dcc ,nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_abd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fdaeg :=_bga .NewReader (img .getBase ());_cafd :=_cbd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_abd .AlternateSpace .GetNumComponents (),nil ,img ._acfbc ,nil );_bddcf :=_bga .NewWriter (_cafd );_gadce :=_bgc .Pow (2,float64 (img .BitsPerComponent ))-1;_bc .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_bc .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_abd .TintTransform );_dfda :=_abd .AlternateSpace .DecodeArray ();var (_gbfa uint32 ;_dbedc error ;);for {_gbfa ,_dbedc =_fdaeg .ReadSample ();if _dbedc ==_gad .EOF {break ;};if _dbedc !=nil {return img ,_dbedc ;};_bdbag :=float64 (_gbfa )/_gadce ;_ddbde ,_degcc :=_abd .TintTransform .Evaluate ([]float64 {_bdbag });if _degcc !=nil {return img ,_degcc ;};for _egbed ,_ecgc :=range _ddbde {_ebgd :=_cbd .LinearInterpolate (_ecgc ,_dfda [_egbed *2],_dfda [_egbed *2+1],0,1);if _degcc =_bddcf .WriteSample (uint32 (_ebgd *_gadce ));_degcc !=nil {return img ,_degcc ;};};};return _abd .AlternateSpace .ImageToRGB (_aade (&_cafd ));};

// ToPdfObject returns a stream object.
func (_agefg *XObjectForm )ToPdfObject ()_de .PdfObject {_dbaeg :=_agefg ._fecdfb ;_bfcaf :=_dbaeg .PdfObjectDictionary ;if _agefg .Filter !=nil {_bfcaf =_agefg .Filter .MakeStreamDict ();_dbaeg .PdfObjectDictionary =_bfcaf ;};_bfcaf .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bfcaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0046\u006f\u0072\u006d"));_bfcaf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_agefg .FormType );_bfcaf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_agefg .BBox );_bfcaf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_agefg .Matrix );if _agefg .Resources !=nil {_bfcaf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_agefg .Resources .ToPdfObject ());};_bfcaf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_agefg .Group );_bfcaf .SetIfNotNil ("\u0052\u0065\u0066",_agefg .Ref );_bfcaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_agefg .MetaData );_bfcaf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_agefg .PieceInfo );_bfcaf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_agefg .LastModified );_bfcaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_agefg .StructParent );_bfcaf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_agefg .StructParents );_bfcaf .SetIfNotNil ("\u004f\u0050\u0049",_agefg .OPI );_bfcaf .SetIfNotNil ("\u004f\u0043",_agefg .OC );_bfcaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_agefg .Name );_bfcaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_agefg .Stream ))));_dbaeg .Stream =_agefg .Stream ;return _dbaeg ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_cedee *PdfPageResources )HasExtGState (keyName _de .PdfObjectName )bool {_ ,_deaef :=_cedee .GetFontByName (keyName );return _deaef ;};

// Add appends an outline item as a child of the current outline item.
func (_gada *OutlineItem )Add (item *OutlineItem ){_gada .Entries =append (_gada .Entries ,item )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_edaa *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_cfge :=&PdfColorspaceSpecialSeparation {};return _cfge ;};func (_bfgcea *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};type pdfFont interface{_eg .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_de .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetOutlineTree returns the outline tree.
func (_bgda *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bgda ._dfdd };

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfAnnotationProjection )ToPdfObject ()_de .PdfObject {_gdc .PdfAnnotation .ToPdfObject ();_bda :=_gdc ._afa ;_dbea :=_bda .PdfObject .(*_de .PdfObjectDictionary );_gdc .PdfAnnotationMarkup .appendToPdfDictionary (_dbea );return _bda ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gccdf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func _bdfge (_dfcgg *_de .PdfObjectDictionary )(*PdfShadingType3 ,error ){_feca :=PdfShadingType3 {};_cfegff :=_dfcgg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cfegff ==nil {_bc .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_degcf ,_aafeg :=_cfegff .(*_de .PdfObjectArray );if !_aafeg {_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfegff );return nil ,_de .ErrTypeError ;};if _degcf .Len ()!=6{_bc .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_degcf .Len ());return nil ,ErrInvalidAttribute ;};_feca .Coords =_degcf ;if _gffgd :=_dfcgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gffgd !=nil {_gffgd =_de .TraceToDirectObject (_gffgd );_adead ,_egbeae :=_gffgd .(*_de .PdfObjectArray );if !_egbeae {_bc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gffgd );return nil ,_de .ErrTypeError ;};_feca .Domain =_adead ;};_cfegff =_dfcgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cfegff ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_feca .Function =[]PdfFunction {};if _ffdadf ,_ffebd :=_cfegff .(*_de .PdfObjectArray );_ffebd {for _ ,_cgfbe :=range _ffdadf .Elements (){_eccc ,_aaede :=_gbag (_cgfbe );if _aaede !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aaede );return nil ,_aaede ;};_feca .Function =append (_feca .Function ,_eccc );};}else {_afgbg ,_ccaf :=_gbag (_cfegff );if _ccaf !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccaf );return nil ,_ccaf ;};_feca .Function =append (_feca .Function ,_afgbg );};if _dagec :=_dfcgg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_dagec !=nil {_dagec =_de .TraceToDirectObject (_dagec );_gbfge ,_gdfc :=_dagec .(*_de .PdfObjectArray );if !_gdfc {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dagec );return nil ,_de .ErrTypeError ;};if _gbfge .Len ()!=2{_bc .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gbfge .Len ());return nil ,ErrInvalidAttribute ;};_feca .Extend =_gbfge ;};return &_feca ,nil ;};func (_gdfbg fontCommon )fontFlags ()int {if _gdfbg ._aceg ==nil {return 0;};return _gdfbg ._aceg ._dgeg ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_efecf *PdfPage )AddExtGState (name _de .PdfObjectName ,egs *_de .PdfObjectDictionary )error {if _efecf .Resources ==nil {_efecf .Resources =NewPdfPageResources ();};if _efecf .Resources .ExtGState ==nil {_efecf .Resources .ExtGState =_de .MakeDict ();};_ebebd ,_egef :=_de .TraceToDirectObject (_efecf .Resources .ExtGState ).(*_de .PdfObjectDictionary );if !_egef {_bc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_de .TraceToDirectObject (_efecf .Resources .ExtGState ));return _fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ebebd .Set (name ,egs );return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_efbd *_de .PdfIndirectObject ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _de .PdfObjectArray )(*PdfRectangle ,error ){_decd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _fgged error ;_decd .Llx ,_fgged =_de .GetNumberAsFloat (arr .Get (0));if _fgged !=nil {return nil ,_fgged ;};_decd .Lly ,_fgged =_de .GetNumberAsFloat (arr .Get (1));if _fgged !=nil {return nil ,_fgged ;};_decd .Urx ,_fgged =_de .GetNumberAsFloat (arr .Get (2));if _fgged !=nil {return nil ,_fgged ;};_decd .Ury ,_fgged =_de .GetNumberAsFloat (arr .Get (3));if _fgged !=nil {return nil ,_fgged ;};return &_decd ,nil ;};func (_bbeb *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject implements interface PdfModel.
func (_cae *PdfActionSubmitForm )ToPdfObject ()_de .PdfObject {_cae .PdfAction .ToPdfObject ();_acg :=_cae ._cg ;_aebf :=_acg .PdfObject .(*_de .PdfObjectDictionary );_aebf .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeSubmitForm )));if _cae .F !=nil {_aebf .Set ("\u0046",_cae .F .ToPdfObject ());};_aebf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cae .Fields );_aebf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cae .Flags );return _acg ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_fdafg *Outline )ToPdfOutline ()*PdfOutline {_cdcbd :=NewPdfOutline ();var _aggc []*PdfOutlineItem ;var _edgca int64 ;var _bffdc *PdfOutlineItem ;for _ ,_baddb :=range _fdafg .Entries {_bada ,_bcace :=_baddb .ToPdfOutlineItem ();_bada .Parent =&_cdcbd .PdfOutlineTreeNode ;if _bffdc !=nil {_bffdc .Next =&_bada .PdfOutlineTreeNode ;_bada .Prev =&_bffdc .PdfOutlineTreeNode ;};_aggc =append (_aggc ,_bada );_edgca +=_bcace ;_bffdc =_bada ;};_dcgad :=int64 (len (_aggc ));_edgca +=int64 (_dcgad );if _dcgad > 0{_cdcbd .First =&_aggc [0].PdfOutlineTreeNode ;_cdcbd .Last =&_aggc [_dcgad -1].PdfOutlineTreeNode ;_cdcbd .Count =&_edgca ;};return _cdcbd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cdac pdfFontType0 )GetCharMetrics (code _gb .CharCode )(_eg .CharMetrics ,bool ){if _cdac .DescendantFont ==nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cdac );return _eg .CharMetrics {},false ;};return _cdac .DescendantFont .GetCharMetrics (code );};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_begdf *XObjectImage )SetFilter (encoder _de .StreamEncoder )error {_ebefc :=_begdf .Stream ;_edea ,_fggc :=_begdf .Filter .DecodeBytes (_ebefc );if _fggc !=nil {return _fggc ;};_begdf .Filter =encoder ;encoder .UpdateParams (_begdf .getParamsDict ());_ebefc ,_fggc =encoder .EncodeBytes (_edea );if _fggc !=nil {return _fggc ;};_begdf .Stream =_ebefc ;return nil ;};func (_abaac *PdfReader )newPdfOutlineItemFromIndirectObject (_gdcb *_de .PdfIndirectObject )(*PdfOutlineItem ,error ){_cgfef ,_bbffg :=_gdcb .PdfObject .(*_de .PdfObjectDictionary );if !_bbffg {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cgfd :=NewPdfOutlineItem ();_adad :=_cgfef .Get ("\u0054\u0069\u0074l\u0065");if _adad ==nil {return nil ,_d .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_dgffe ,_fagd :=_de .GetString (_adad );if !_fagd {return nil ,_d .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_adad );};_cgfd .Title =_dgffe ;if _febc :=_cgfef .Get ("\u0043\u006f\u0075n\u0074");_febc !=nil {_bgce ,_bfef :=_febc .(*_de .PdfObjectInteger );if !_bfef {return nil ,_d .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_febc );};_dcfef :=int64 (*_bgce );_cgfd .Count =&_dcfef ;};if _fdgbe :=_cgfef .Get ("\u0044\u0065\u0073\u0074");_fdgbe !=nil {_cgfd .Dest =_de .ResolveReference (_fdgbe );if !_abaac ._daceb {_afga :=_abaac .traverseObjectData (_cgfd .Dest );if _afga !=nil {return nil ,_afga ;};};};if _cgeg :=_cgfef .Get ("\u0041");_cgeg !=nil {_cgfd .A =_de .ResolveReference (_cgeg );if !_abaac ._daceb {_adfc :=_abaac .traverseObjectData (_cgfd .A );if _adfc !=nil {return nil ,_adfc ;};};};if _aega :=_cgfef .Get ("\u0053\u0045");_aega !=nil {_cgfd .SE =nil ;};if _febdc :=_cgfef .Get ("\u0043");_febdc !=nil {_cgfd .C =_de .ResolveReference (_febdc );};if _geeda :=_cgfef .Get ("\u0046");_geeda !=nil {_cgfd .F =_de .ResolveReference (_geeda );};return _cgfd ,nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_fedd *PdfReader )newPdfAnnotationTextFromDict (_dec *_de .PdfObjectDictionary )(*PdfAnnotationText ,error ){_ffgdg :=PdfAnnotationText {};_edga ,_fead :=_fedd .newPdfAnnotationMarkupFromDict (_dec );if _fead !=nil {return nil ,_fead ;};_ffgdg .PdfAnnotationMarkup =_edga ;_ffgdg .Open =_dec .Get ("\u004f\u0070\u0065\u006e");_ffgdg .Name =_dec .Get ("\u004e\u0061\u006d\u0065");_ffgdg .State =_dec .Get ("\u0053\u0074\u0061t\u0065");_ffgdg .StateModel =_dec .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_ffgdg ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_egdca *PdfReader )newPdfAnnotationSquigglyFromDict (_dbfc *_de .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gge :=PdfAnnotationSquiggly {};_ebdb ,_gcbb :=_egdca .newPdfAnnotationMarkupFromDict (_dbfc );if _gcbb !=nil {return nil ,_gcbb ;};_gge .PdfAnnotationMarkup =_ebdb ;_gge .QuadPoints =_dbfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gge ,nil ;};func (_faffca Image )getBase ()_cbd .ImageBase {return _cbd .NewImageBase (int (_faffca .Width ),int (_faffca .Height ),int (_faffca .BitsPerComponent ),_faffca .ColorComponents ,_faffca .Data ,_faffca ._acfbc ,_faffca ._affeg );};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_defa *_de .PdfIndirectObject ;_fcdab *_de .PdfIndirectObject ;_baegd map[_de .PdfObject ]struct{};_agfeb []_de .PdfObject ;_abdaa map[_de .PdfObject ]struct{};_aabb []*_de .PdfIndirectObject ;_adbec *PdfOutlineTreeNode ;_efdfc *_de .PdfObjectDictionary ;_acadb []_de .PdfObject ;_eeege *_de .PdfIndirectObject ;_aagbea *_g .Writer ;_fceed int64 ;_ddabg error ;_dgebf *_de .PdfCrypt ;_acbdf *_de .PdfObjectDictionary ;_bgdee *_de .PdfIndirectObject ;_adfbf *_de .PdfObjectArray ;_bfgga int ;_efagf int ;_ccbff *bool ;_ebafdb map[_de .PdfObject ][]*_de .PdfObjectDictionary ;_abecd *PdfAcroForm ;_dgdd Optimizer ;_egbb map[int ]crossReference ;_gcgb int64 ;ObjNumOffset int ;_gabdg bool ;_cedcg _de .XrefTable ;_fecb int64 ;_ddbca int64 ;_degdc map[_de .PdfObject ]int64 ;_bagggb map[_de .PdfObject ]struct{};};

// Evaluate runs the function on the passed in slice and returns the results.
func (_degcab *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gedac :=[]float64 {0.0};if _degcab .C0 !=nil {_gedac =_degcab .C0 ;};_eagf :=[]float64 {1.0};if _degcab .C1 !=nil {_eagf =_degcab .C1 ;};var _dbgc []float64 ;for _ffdg :=0;_ffdg < len (_gedac );_ffdg ++{_debga :=_gedac [_ffdg ]+_bgc .Pow (x [0],_degcab .N )*(_eagf [_ffdg ]-_gedac [_ffdg ]);_dbgc =append (_dbgc ,_debga );};return _dbgc ,nil ;};

// String returns a string that describes `font`.
func (_gfcg *PdfFont )String ()string {_abeff :="";if _gfcg ._adce .Encoder ()!=nil {_abeff =_gfcg ._adce .Encoder ().String ();};return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gfcg ._adce ,_gfcg .baseFields ().coreString (),_abeff );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bgcd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_de .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aaga []_de .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_afdg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_dbee *PdfAppender )addNewObject (_dfgac _de .PdfObject ){if _ ,_cbfc :=_dbee ._edec [_dfgac ];!_cbfc {_dbee ._gbda =append (_dbee ._gbda ,_dfgac );_dbee ._edec [_dfgac ]=struct{}{};};};

// ToPdfObject implements interface PdfModel.
func (_dce *PdfActionURI )ToPdfObject ()_de .PdfObject {_dce .PdfAction .ToPdfObject ();_aed :=_dce ._cg ;_fbf :=_aed .PdfObject .(*_de .PdfObjectDictionary );_fbf .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeURI )));_fbf .SetIfNotNil ("\u0055\u0052\u0049",_dce .URI );_fbf .SetIfNotNil ("\u0049\u0073\u004da\u0070",_dce .IsMap );return _aed ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gbaa *Image )GetParamsDict ()*_de .PdfObjectDictionary {_fdeed :=_de .MakeDict ();_fdeed .Set ("\u0057\u0069\u0064t\u0068",_de .MakeInteger (_gbaa .Width ));_fdeed .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_de .MakeInteger (_gbaa .Height ));_fdeed .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_de .MakeInteger (int64 (_gbaa .ColorComponents )));_fdeed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_de .MakeInteger (_gbaa .BitsPerComponent ));return _fdeed ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ecbdc *PdfPattern )IsShading ()bool {return _ecbdc .PatternType ==2};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;RD _de .PdfObject ;};func (_dfge *PdfReader )newPdfActionHideFromDict (_bcg *_de .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bcg .Get ("\u0054"),H :_bcg .Get ("\u0048")},nil ;};func (_dcbea fontCommon )isCIDFont ()bool {if _dcbea ._fagbeb ==""{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcbea );};_bgfgg :=false ;switch _dcbea ._fagbeb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bgfgg =true ;};_bc .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bgfgg ,_dcbea );return _bgfgg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_eece *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cddc :=vals [0];if _cddc < 0.0||_cddc > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agea :=vals [1];if _agea < 0.0||_agea > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egfb :=vals [2];if _egfb < 0.0||_egfb > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eedf :=NewPdfColorDeviceRGB (_cddc ,_agea ,_egfb );return _eedf ,nil ;};

// SetForms sets the Acroform for a PDF file.
func (_fcef *PdfWriter )SetForms (form *PdfAcroForm )error {_fcef ._abecd =form ;return nil };

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_ddcbd *_de .PdfIndirectObject ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dbaac *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dbaac ._acgdg .(*PdfShadingPattern );};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ffge *PdfColorLab )GetNumComponents ()int {return 3};func _faaf (_gaff *_de .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gedb :=&PdfShadingPattern {};_ddgg :=_gaff .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ddgg ==nil {_bc .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cebace ,_ecae :=_faead (_ddgg );if _ecae !=nil {_bc .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_ecae );return nil ,_ecae ;};_gedb .Shading =_cebace ;if _abddc :=_gaff .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_abddc !=nil {_ceefbe ,_fcaa :=_abddc .(*_de .PdfObjectArray );if !_fcaa {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abddc );return nil ,_de .ErrTypeError ;};_gedb .Matrix =_ceefbe ;};if _affcc :=_gaff .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_affcc !=nil {_gedb .ExtGState =_affcc ;};return _gedb ,nil ;};func _fab (_gddd _de .PdfObject )(*PdfFilespec ,error ){if _gddd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_gddd );};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_eecd *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cedd :=vals [0];if _cedd < 0.0||_cedd > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbgd :=vals [1];if _dbgd < 0.0||_dbgd > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cadg :=vals [2];if _cadg < 0.0||_cadg > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abae :=vals [3];if _abae < 0.0||_abae > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aff :=NewPdfColorDeviceCMYK (_cedd ,_dbgd ,_cadg ,_abae );return _aff ,nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ebedca *_de .PdfIndirectObject ;};

// C returns the value of the C component of the color.
func (_bdaf *PdfColorCalRGB )C ()float64 {return float64 (_bdaf [2])};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gfbg *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=_gfbg .GetNumComponents (){return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bebg ,_bcddf :=_de .GetNumbersAsFloat (objects );if _bcddf !=nil {return nil ,_bcddf ;};return _gfbg .ColorFromFloats (_bebg );};func (_gfd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetNumComponents returns the number of color components (3 for RGB).
func (_ebed *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func _cgeeg (_gbegc _eg .StdFont )pdfFontSimple {_fged :=_gbegc .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_fagbeb :"\u0054\u0079\u0070e\u0031",_ccbbd :_gbegc .Name ()},_dgae :_gbegc .GetMetricsTable (),_cacf :&PdfFontDescriptor {FontName :_de .MakeName (string (_fged .Name )),FontFamily :_de .MakeName (_fged .Family ),FontWeight :_de .MakeFloat (float64 (_fged .Weight )),Flags :_de .MakeInteger (int64 (_fged .Flags )),FontBBox :_de .MakeArrayFromFloats (_fged .BBox [:]),ItalicAngle :_de .MakeFloat (_fged .ItalicAngle ),Ascent :_de .MakeFloat (_fged .Ascent ),Descent :_de .MakeFloat (_fged .Descent ),CapHeight :_de .MakeFloat (_fged .CapHeight ),XHeight :_de .MakeFloat (_fged .XHeight ),StemV :_de .MakeFloat (_fged .StemV ),StemH :_de .MakeFloat (_fged .StemH )},_egfa :_gbegc .Encoder ()};};type pdfFontType0 struct{fontCommon ;_dbfba *_de .PdfIndirectObject ;_fcad _gb .TextEncoder ;Encoding _de .PdfObject ;DescendantFont *PdfFont ;_dbae *_bd .CMap ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_fcdad :=&PdfSignature {Type :_de .MakeName ("\u0053\u0069\u0067"),Handler :handler };_egbaa :=&pdfSignDictionary {PdfObjectDictionary :_de .MakeDict (),_ecdg :&handler ,_debac :_fcdad };_fcdad ._edgfg =_de .MakeIndirectObject (_egbaa );return _fcdad ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_abaf *PdfFieldText )ToPdfObject ()_de .PdfObject {_abaf .PdfField .ToPdfObject ();_faag :=_abaf ._gddee ;_ggbc :=_faag .PdfObject .(*_de .PdfObjectDictionary );_ggbc .Set ("\u0046\u0054",_de .MakeName ("\u0054\u0078"));if _abaf .DA !=nil {_ggbc .Set ("\u0044\u0041",_abaf .DA );};if _abaf .Q !=nil {_ggbc .Set ("\u0051",_abaf .Q );};if _abaf .DS !=nil {_ggbc .Set ("\u0044\u0053",_abaf .DS );};if _abaf .RV !=nil {_ggbc .Set ("\u0052\u0056",_abaf .RV );};if _abaf .MaxLen !=nil {_ggbc .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_abaf .MaxLen );};return _faag ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_agf :=&PdfAnnotation {};_agf ._afa =_de .MakeIndirectObject (_de .MakeDict ());return _agf ;};func (_cfcgd *PdfAcroForm )filteredFields (_dafd FieldFilterFunc ,_gbbc bool )[]*PdfField {if _cfcgd ==nil {return nil ;};return _gadea (_cfcgd .Fields ,_dafd ,_gbbc );};func (_cfede *PdfReader )newPdfFieldFromIndirectObject (_gdba *_de .PdfIndirectObject ,_ecfg *PdfField )(*PdfField ,error ){if _bgaf ,_egbec :=_cfede ._gafgf .GetModelFromPrimitive (_gdba ).(*PdfField );_egbec {return _bgaf ,nil ;};_cbeef ,_abda :=_de .GetDict (_gdba );if !_abda {return nil ,_d .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dadg :=NewPdfField ();_dadg ._gddee =_gdba ;_dadg ._gddee .PdfObject =_cbeef ;_dfffe :=false ;if _afffc ,_dcabb :=_de .GetName (_cbeef .Get ("\u0046\u0054"));_dcabb {_dadg .FT =_afffc ;_dfffe =true ;};_dadg ._eccfb =&_dfffe ;_dadg .T ,_ =_cbeef .Get ("\u0054").(*_de .PdfObjectString );_dadg .TU ,_ =_cbeef .Get ("\u0054\u0055").(*_de .PdfObjectString );_dadg .TM ,_ =_cbeef .Get ("\u0054\u004d").(*_de .PdfObjectString );_dadg .Ff ,_ =_cbeef .Get ("\u0046\u0066").(*_de .PdfObjectInteger );_dadg .V =_cbeef .Get ("\u0056");_dadg .DV =_cbeef .Get ("\u0044\u0056");_dadg .AA =_cbeef .Get ("\u0041\u0041");if _dadg .FT !=nil {switch *_dadg .FT {case "\u0054\u0078":_fdcf ,_ebdg :=_fbgf (_cbeef );if _ebdg !=nil {return nil ,_ebdg ;};_fdcf .PdfField =_dadg ;_dadg ._addgf =_fdcf ;case "\u0043\u0068":_dbef ,_cbag :=_abffb (_cbeef );if _cbag !=nil {return nil ,_cbag ;};_dbef .PdfField =_dadg ;_dadg ._addgf =_dbef ;case "\u0042\u0074\u006e":_bdca ,_gaegb :=_ccef (_cbeef );if _gaegb !=nil {return nil ,_gaegb ;};_bdca .PdfField =_dadg ;_dadg ._addgf =_bdca ;case "\u0053\u0069\u0067":_abbe ,_gcac :=_cfede .newPdfFieldSignatureFromDict (_cbeef );if _gcac !=nil {return nil ,_gcac ;};_abbe .PdfField =_dadg ;_dadg ._addgf =_abbe ;default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dadg .FT );return nil ,_fe .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _ecfg !=nil {_dadg .Parent =_ecfg ;};_dadg .Annotations =[]*PdfAnnotationWidget {};if _debg ,_bgggg :=_de .GetName (_cbeef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bgggg {if *_debg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bdgg ,_cefde :=_cfede .newPdfAnnotationFromIndirectObject (_gdba );if _cefde !=nil {return nil ,_cefde ;};_bcac ,_gddda :=_bdgg .GetContext ().(*PdfAnnotationWidget );if !_gddda {return nil ,_fe .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_bcac ._gabc =_dadg ;_bcac .Parent =_dadg ._gddee ;_dadg .Annotations =append (_dadg .Annotations ,_bcac );return _dadg ,nil ;};};if _dage ,_debd :=_de .GetArray (_cbeef .Get ("\u004b\u0069\u0064\u0073"));_debd {_dadg .Kids =[]*PdfField {};for _ ,_cdag :=range _dage .Elements (){_aafc ,_ddebd :=_de .GetIndirect (_cdag );if !_ddebd {_facgb ,_eadeb :=_de .GetStream (_cdag );if _eadeb &&_facgb .PdfObjectDictionary !=nil {_bccfd ,_gaaf :=_de .GetNameVal (_facgb .Get ("\u0054\u0079\u0070\u0065"));if _gaaf &&_bccfd =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bc .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_fe .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bdfcd ,_ccbb :=_de .GetDict (_aafc );if !_ccbb {return nil ,ErrTypeCheck ;};_ ,_bfgd :=_de .GetName (_bdfcd .Get ("\u0046\u0054"));if _fcg ,_geggg :=_de .GetName (_bdfcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_geggg &&!_bfgd &&*_fcg =="\u0057\u0069\u0064\u0067\u0065\u0074"{_egagg ,_ecce :=_cfede .newPdfAnnotationFromIndirectObject (_aafc );if _ecce !=nil {_bc .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_ecce );return nil ,_ecce ;};_fegdg ,_ddfcg :=_egagg ._fgd .(*PdfAnnotationWidget );if !_ddfcg {return nil ,ErrTypeCheck ;};_fegdg ._gabc =_dadg ;_dadg .Annotations =append (_dadg .Annotations ,_fegdg );}else {_aeeac ,_dgee :=_cfede .newPdfFieldFromIndirectObject (_aafc ,_dadg );if _dgee !=nil {_bc .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_dgee );return nil ,_dgee ;};_dadg .Kids =append (_dadg .Kids ,_aeeac );};};};return _dadg ,nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;IC _de .PdfObject ;RO _de .PdfObject ;OverlayText _de .PdfObject ;Repeat _de .PdfObject ;DA _de .PdfObject ;Q _de .PdfObject ;};

// Fill populates `form` with values provided by `provider`.
func (_adeg *PdfAcroForm )Fill (provider FieldValueProvider )error {return _adeg .fill (provider ,nil )};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_faagf *PdfShading )ToPdfObject ()_de .PdfObject {_adcgc :=_faagf ._daegc ;_eaada ,_agggb :=_faagf .getShadingDict ();if _agggb !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _faagf .ShadingType !=nil {_eaada .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_faagf .ShadingType );};if _faagf .ColorSpace !=nil {_eaada .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_faagf .ColorSpace .ToPdfObject ());};if _faagf .Background !=nil {_eaada .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_faagf .Background );};if _faagf .BBox !=nil {_eaada .Set ("\u0042\u0042\u006f\u0078",_faagf .BBox .ToPdfObject ());};if _faagf .AntiAlias !=nil {_eaada .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_faagf .AntiAlias );};return _adcgc ;};

// ToPdfObject implements interface PdfModel.
func (_fcaf *PdfAnnotationCircle )ToPdfObject ()_de .PdfObject {_fcaf .PdfAnnotation .ToPdfObject ();_aagc :=_fcaf ._afa ;_feaag :=_aagc .PdfObject .(*_de .PdfObjectDictionary );_fcaf .PdfAnnotationMarkup .appendToPdfDictionary (_feaag );_feaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_feaag .SetIfNotNil ("\u0042\u0053",_fcaf .BS );_feaag .SetIfNotNil ("\u0049\u0043",_fcaf .IC );_feaag .SetIfNotNil ("\u0042\u0045",_fcaf .BE );_feaag .SetIfNotNil ("\u0052\u0044",_fcaf .RD );return _aagc ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_gaadb *PdfPageResources )ToPdfObject ()_de .PdfObject {_faab :=_gaadb ._fccd ;_faab .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gaadb .ExtGState );if _gaadb ._abddd !=nil {_gaadb .ColorSpace =_gaadb ._abddd .ToPdfObject ();};_faab .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gaadb .ColorSpace );_faab .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_gaadb .Pattern );_faab .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gaadb .Shading );_faab .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_gaadb .XObject );_faab .SetIfNotNil ("\u0046\u006f\u006e\u0074",_gaadb .Font );_faab .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_gaadb .ProcSet );_faab .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_gaadb .Properties );return _faab ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fedab *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _gfface []*PdfOutlineTreeNode ;var _bfgdc []string ;var _aeab func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_aeab =func (_geeg *PdfOutlineTreeNode ,_eaaf *[]*PdfOutlineTreeNode ,_efffc *[]string ,_efgbb int ){if _geeg ==nil {return ;};if _geeg ._gccdf ==nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_geade ,_feffa :=_geeg ._gccdf .(*PdfOutlineItem );if _feffa {*_eaaf =append (*_eaaf ,&_geade .PdfOutlineTreeNode );_aagbe :=_c .Repeat ("\u0020",_efgbb *2)+_geade .Title .Decoded ();*_efffc =append (*_efffc ,_aagbe );};if _geeg .First !=nil {_gfcag :=_c .Repeat ("\u0020",_efgbb *2)+"\u002b";*_efffc =append (*_efffc ,_gfcag );_aeab (_geeg .First ,_eaaf ,_efffc ,_efgbb +1);};if _feffa &&_geade .Next !=nil {_aeab (_geade .Next ,_eaaf ,_efffc ,_efgbb );};};_aeab (_fedab ._dfdd ,&_gfface ,&_bfgdc ,0);return _gfface ,_bfgdc ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_adbd *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_gbe *PdfActionSetOCGState )ToPdfObject ()_de .PdfObject {_gbe .PdfAction .ToPdfObject ();_egb :=_gbe ._cg ;_ffg :=_egb .PdfObject .(*_de .PdfObjectDictionary );_ffg .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeSetOCGState )));_ffg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gbe .State );_ffg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_gbe .PreserveRB );return _egb ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_bgefbc *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _bgefbc ._acgdg .(*PdfTilingPattern );};

// ToPdfObject returns the PDF representation of the function.
func (_cffc *PdfFunctionType0 )ToPdfObject ()_de .PdfObject {if _cffc ._fffeb ==nil {_cffc ._fffeb =&_de .PdfObjectStream {};};_fbdc :=_de .MakeDict ();_fbdc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (0));_dcag :=&_de .PdfObjectArray {};for _ ,_gcea :=range _cffc .Domain {_dcag .Append (_de .MakeFloat (_gcea ));};_fbdc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcag );_abcd :=&_de .PdfObjectArray {};for _ ,_fgcf :=range _cffc .Range {_abcd .Append (_de .MakeFloat (_fgcf ));};_fbdc .Set ("\u0052\u0061\u006eg\u0065",_abcd );_acdcb :=&_de .PdfObjectArray {};for _ ,_eedbgc :=range _cffc .Size {_acdcb .Append (_de .MakeInteger (int64 (_eedbgc )));};_fbdc .Set ("\u0053\u0069\u007a\u0065",_acdcb );_fbdc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_de .MakeInteger (int64 (_cffc .BitsPerSample )));if _cffc .Order !=1{_fbdc .Set ("\u004f\u0072\u0064e\u0072",_de .MakeInteger (int64 (_cffc .Order )));};_fbdc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_cffc ._ggeba ))));_cffc ._fffeb .Stream =_cffc ._ggeba ;_cffc ._fffeb .PdfObjectDictionary =_fbdc ;return _cffc ._fffeb ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_ecdd *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bcdb []*PdfField ;_efcf :=map[*_de .PdfIndirectObject ]struct{}{};for _ ,_daabg :=range _ecdd .PageList {_daebb ,_fegcb :=_daabg .GetAnnotations ();if _fegcb !=nil {return _fegcb ;};for _ ,_dgecb :=range _daebb {var _aaea *PdfField ;switch _bggee :=_dgecb .GetContext ().(type ){case *PdfAnnotationWidget :if _bggee ._gabc !=nil {_aaea =_bggee ._gabc ;break ;};if _ffce ,_aeedg :=_de .GetIndirect (_bggee .Parent );_aeedg {_aaea ,_fegcb =_ecdd .newPdfFieldFromIndirectObject (_ffce ,nil );if _fegcb ==nil {break ;};_bc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ffce ,_fegcb );};if _bggee ._afa !=nil {_aaea ,_fegcb =_ecdd .newPdfFieldFromIndirectObject (_bggee ._afa ,nil );if _fegcb ==nil {break ;};_bc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bggee ._afa ,_fegcb );};};if _aaea ==nil {continue ;};if _ ,_bedea :=_efcf [_aaea ._gddee ];_bedea {continue ;};_efcf [_aaea ._gddee ]=struct{}{};_bcdb =append (_bcdb ,_aaea );};};if len (_bcdb )==0{return nil ;};if _ecdd .AcroForm ==nil {_ecdd .AcroForm =NewPdfAcroForm ();};_ecdd .AcroForm .Fields =&_bcdb ;return nil ;};

// Val returns the value of the color.
func (_fddg *PdfColorCalGray )Val ()float64 {return float64 (*_fddg )};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gdce *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eaeda ,_cdcf :=_de .GetNumbersAsFloat (objects );if _cdcf !=nil {return nil ,_cdcf ;};return _gdce .ColorFromFloats (_eaeda );};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bbc :=NewPdfAction ();_cdba :=&PdfActionRendition {};_cdba .PdfAction =_bbc ;_bbc .SetContext (_cdba );return _cdba ;};func _dcgac (_effe *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_effe }};

// GetNumPages returns the number of pages in the document.
func (_cdcbb *PdfReader )GetNumPages ()(int ,error ){if _cdcbb ._fabda .GetCrypter ()!=nil &&!_cdcbb ._fabda .IsAuthenticated (){return 0,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_cdcbb ._bagea ),nil ;};func _gdgdc ()string {_gcabg :=_dc .GetLicenseKey ();if len (_edebf )> 0&&(_gcabg .IsLicensed ()||_fggbe ){return _edebf ;};return _d .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cacgd (),_gcabg .TypeToString ());};

// ToPdfObject implements interface PdfModel.
func (_dcd *PdfActionGoTo3DView )ToPdfObject ()_de .PdfObject {_dcd .PdfAction .ToPdfObject ();_dgd :=_dcd ._cg ;_aaaf :=_dgd .PdfObject .(*_de .PdfObjectDictionary );_aaaf .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoTo3DView )));_aaaf .SetIfNotNil ("\u0054\u0041",_dcd .TA );_aaaf .SetIfNotNil ("\u0056",_dcd .V );return _dgd ;};

// ReplacePage replaces the original page to a new page.
func (_abbaa *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_aaed :=pageNum -1;for _ccgdb :=range _abbaa ._ddebe {if _ccgdb ==_aaed {_dab :=page .Duplicate ();_ggbag (_dab );_abbaa ._ddebe [_ccgdb ]=_dab ;};};};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gagff *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gagff .baseFields ()._aceg !=nil {return _gagff .baseFields ()._aceg ;};if _adec :=_gagff ._adce .getFontDescriptor ();_adec !=nil {return _adec ;};_bc .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gagff );return nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_fgbe *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ecac :=range pages {_ecac =_ecac .Duplicate ();_ggbag (_ecac );_fgbe ._ddebe =append (_fgbe ._ddebe ,_ecac );};return ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gbbfdd *pdfCIDFontType2 )ToPdfObject ()_de .PdfObject {if _gbbfdd ._gefgb ==nil {_gbbfdd ._gefgb =&_de .PdfIndirectObject {};};_efea :=_gbbfdd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_gbbfdd ._gefgb .PdfObject =_efea ;if _gbbfdd .CIDSystemInfo !=nil {_efea .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gbbfdd .CIDSystemInfo );};if _gbbfdd .DW !=nil {_efea .Set ("\u0044\u0057",_gbbfdd .DW );};if _gbbfdd .DW2 !=nil {_efea .Set ("\u0044\u0057\u0032",_gbbfdd .DW2 );};if _gbbfdd .W !=nil {_efea .Set ("\u0057",_gbbfdd .W );};if _gbbfdd .W2 !=nil {_efea .Set ("\u0057\u0032",_gbbfdd .W2 );};if _gbbfdd .CIDToGIDMap !=nil {_efea .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gbbfdd .CIDToGIDMap );};return _gbbfdd ._gefgb ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_accgc *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beddg ,_dcea :=_de .GetNumbersAsFloat (objects );if _dcea !=nil {return nil ,_dcea ;};return _accgc .ColorFromFloats (_beddg );};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _de .PdfObject ;MK _de .PdfObject ;A _de .PdfObject ;AA _de .PdfObject ;BS _de .PdfObject ;Parent _de .PdfObject ;_gabc *PdfField ;_bbda bool ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_bbfc *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fe .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_acb :=field .V ;if _acb ==nil {return _fe .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_abgf :=pageNum -1;if _abgf < 0||_abgf > len (_bbfc ._ddebe )-1{return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_bcgcff :=_bbfc .Reader .PageList [_abgf ];field .P =_bcgcff .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_de .MakeString (_d .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_bcgcff .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _bbfc ._gdaa ==_bbfc ._bge .AcroForm {_bbfc ._gdaa =_bbfc .Reader .AcroForm ;};_geggf :=_bbfc ._gdaa ;if _geggf ==nil {_geggf =NewPdfAcroForm ();};_geggf .SigFlags =_de .MakeInteger (3);_cebeg :=append (_geggf .AllFields (),field .PdfField );_geggf .Fields =&_cebeg ;_bbfc .ReplaceAcroForm (_geggf );_bbfc .UpdatePage (_bcgcff );_bbfc ._ddebe [_abgf ]=_bcgcff ;return nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_fdcdd *PdfReader )GetOutlines ()(*Outline ,error ){if _fdcdd ==nil {return nil ,_fe .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_beded :=_fdcdd .GetOutlineTree ();if _beded ==nil {return nil ,_fe .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _deadf func (_fcec *PdfOutlineTreeNode ,_fdef *[]*OutlineItem );_deadf =func (_adcb *PdfOutlineTreeNode ,_ffdf *[]*OutlineItem ){if _adcb ==nil {return ;};if _adcb ._gccdf ==nil {_bc .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _bgea *OutlineItem ;if _acgdb ,_fgdc :=_adcb ._gccdf .(*PdfOutlineItem );_fgdc {_deeggf :=_acgdb .Dest ;if (_deeggf ==nil ||_de .IsNullObject (_deeggf ))&&_acgdb .A !=nil {if _eggdb ,_bcceed :=_de .GetDict (_acgdb .A );_bcceed {_deeggf ,_ =_de .GetArray (_eggdb .Get ("\u0044"));};};var _afbf OutlineDest ;if _deeggf !=nil &&!_de .IsNullObject (_deeggf ){if _cgbea ,_cacbg :=_ebdae (_deeggf ,_fdcdd );_cacbg ==nil {_afbf =*_cgbea ;}else {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_deeggf ,_cacbg );};};_bgea =NewOutlineItem (_acgdb .Title .Decoded (),_afbf );*_ffdf =append (*_ffdf ,_bgea );if _acgdb .Next !=nil {_deadf (_acgdb .Next ,_ffdf );};};if _adcb .First !=nil {if _bgea !=nil {_ffdf =&_bgea .Entries ;};_deadf (_adcb .First ,_ffdf );};};_cafda :=NewOutline ();_deadf (_beded ,&_cafda .Entries );return _cafda ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_fbaed :=&XObjectForm {};_dfeg :=&_de .PdfObjectStream {};_dfeg .PdfObjectDictionary =_de .MakeDict ();_fbaed ._fecdfb =_dfeg ;return _fbaed ;};

// SetImage updates XObject Image with new image data.
func (_gafgg *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gafgg .Filter .UpdateParams (img .GetParamsDict ());_fecef ,_bdcb :=_gafgg .Filter .EncodeBytes (img .Data );if _bdcb !=nil {return _bdcb ;};_gafgg .Stream =_fecef ;_debb :=img .Width ;_gafgg .Width =&_debb ;_efegd :=img .Height ;_gafgg .Height =&_efegd ;_efaeg :=img .BitsPerComponent ;_gafgg .BitsPerComponent =&_efaeg ;if cs ==nil {if img .ColorComponents ==1{_gafgg .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gafgg .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gafgg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gafgg .ColorSpace =cs ;};return nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_bbaga *PdfRectangle )ToPdfObject ()_de .PdfObject {return _de .MakeArray (_de .MakeFloat (_bbaga .Llx ),_de .MakeFloat (_bbaga .Lly ),_de .MakeFloat (_bbaga .Urx ),_de .MakeFloat (_bbaga .Ury ));};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_bddcd *OutlineItem )Insert (index uint ,item *OutlineItem ){_cedddf :=uint (len (_bddcd .Entries ));if index > _cedddf {index =_cedddf ;};_bddcd .Entries =append (_bddcd .Entries [:index ],append ([]*OutlineItem {item },_bddcd .Entries [index :]...)...);};func _dgdae (_bcegg *PdfField ,_beccd _de .PdfObject ){for _ ,_egec :=range _bcegg .Annotations {_egec .AS =_beccd ;_egec .ToPdfObject ();};};func (_bcafd *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bcafd .fontCommon };

// Items returns all children outline items.
func (_edgc *Outline )Items ()[]*OutlineItem {return _edgc .Entries };

// Encoder returns the font's text encoder.
func (_badbc *PdfFont )Encoder ()_gb .TextEncoder {_baeg :=_badbc .actualFont ();if _baeg ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_badbc ._adce );return nil ;};return _baeg .Encoder ();};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_afgf *BorderStyle )GetPdfName ()string {switch *_afgf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};func _ecfe ()*modelManager {_cgcba :=modelManager {};_cgcba ._degf =map[PdfModel ]_de .PdfObject {};_cgcba ._gegd =map[_de .PdfObject ]PdfModel {};return &_cgcba ;};

// SetAnnotations sets the annotations list.
func (_eebfbe *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_eebfbe ._bbeg =annotations };

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_acff *PdfField )GetContext ()PdfModel {return _acff ._addgf };var _cfdag ="";

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_eb :=NewPdfAction ();_ed :=&PdfActionSound {};_ed .PdfAction =_eb ;_eb .SetContext (_ed );return _ed ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ddbac *PdfReader )GetPageLabels ()(_de .PdfObject ,error ){_afbga :=_de .ResolveReference (_ddbac ._effaa .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _afbga ==nil {return nil ,nil ;};if !_ddbac ._daceb {_gdbf :=_ddbac .traverseObjectData (_afbga );if _gdbf !=nil {return nil ,_gdbf ;};};return _afbga ,nil ;};func _dgfbb ()string {return _bdaaa };

// ToPdfObject implements interface PdfModel.
func (_ffc *PdfAnnotationScreen )ToPdfObject ()_de .PdfObject {_ffc .PdfAnnotation .ToPdfObject ();_defb :=_ffc ._afa ;_fabf :=_defb .PdfObject .(*_de .PdfObjectDictionary );_fabf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_fabf .SetIfNotNil ("\u0054",_ffc .T );_fabf .SetIfNotNil ("\u004d\u004b",_ffc .MK );_fabf .SetIfNotNil ("\u0041",_ffc .A );_fabf .SetIfNotNil ("\u0041\u0041",_ffc .AA );return _defb ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _de .StreamEncoder ;Intent _de .PdfObject ;ImageMask _de .PdfObject ;Mask _de .PdfObject ;Matte _de .PdfObject ;Decode _de .PdfObject ;Interpolate _de .PdfObject ;Alternatives _de .PdfObject ;SMask _de .PdfObject ;SMaskInData _de .PdfObject ;Name _de .PdfObject ;StructParent _de .PdfObject ;ID _de .PdfObject ;OPI _de .PdfObject ;Metadata _de .PdfObject ;OC _de .PdfObject ;Stream []byte ;_afed *_de .PdfObjectStream ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_fcbbd *PdfPage )Duplicate ()*PdfPage {var _adgfc PdfPage ;_adgfc =*_fcbbd ;_adgfc ._dgdcb =_de .MakeDict ();_adgfc ._eeea =_de .MakeIndirectObject (_adgfc ._dgdcb );return &_adgfc ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _de .PdfObject ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_aefg :=PdfColorCalRGB {a ,b ,c };return &_aefg ;};func (_bgbce *PdfReader )loadAnnotations (_bdcac _de .PdfObject )([]*PdfAnnotation ,error ){_cfgee ,_abdb :=_de .GetArray (_bdcac );if !_abdb {return nil ,_d .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dceab []*PdfAnnotation ;for _ ,_cdee :=range _cfgee .Elements (){_cdee =_de .ResolveReference (_cdee );if _ ,_eaaeb :=_cdee .(*_de .PdfObjectNull );_eaaeb {continue ;};_caeag ,_bbdcb :=_cdee .(*_de .PdfObjectDictionary );_acdbd ,_dgcbe :=_cdee .(*_de .PdfIndirectObject );if _bbdcb {_acdbd =&_de .PdfIndirectObject {};_acdbd .PdfObject =_caeag ;}else {if !_dgcbe {return nil ,_d .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_edce ,_caaba :=_bgbce .newPdfAnnotationFromIndirectObject (_acdbd );if _caaba !=nil {return nil ,_caaba ;};switch _efbgg :=_edce .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_gbgg :=range _bgbce .AcroForm .AllFields (){if _gbgg ._gddee ==_efbgg .Parent {_efbgg ._gabc =_gbgg ;break ;};};};if _edce !=nil {_dceab =append (_dceab ,_edce );};};return _dceab ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_fgdaa *PdfFont )ToPdfObject ()_de .PdfObject {if _fgdaa ._adce ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _de .MakeNull ();};return _fgdaa ._adce .ToPdfObject ();};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_baba *PdfAppender )Write (w _gad .Writer )error {if _baba ._agbb {return _fe .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_bcafb :=NewPdfWriter ();_eacf ,_dcf :=_de .GetDict (_bcafb ._fcdab );if !_dcf {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_bebe ,_dcf :=_eacf .Get ("\u004b\u0069\u0064\u0073").(*_de .PdfObjectArray );if !_dcf {return _fe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_badea ,_dcf :=_eacf .Get ("\u0043\u006f\u0075n\u0074").(*_de .PdfObjectInteger );if !_dcf {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_cdca :=_baba ._bge ._fabda ;_gbgd :=_cdca .GetTrailer ();if _gbgd ==nil {return _fe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_bdeb ,_dcf :=_de .GetIndirect (_gbgd .Get ("\u0052\u006f\u006f\u0074"));if !_dcf {return _fe .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_eaea ,_dcf :=_de .GetDict (_bdeb );if !_dcf {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bdeb ,*_gbgd );return _fe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_bfde :=range _eaea .Keys (){if _bcafb ._efdfc .Get (_bfde )==nil {_bcbf :=_eaea .Get (_bfde );_bcafb ._efdfc .Set (_bfde ,_bcbf );};};if _baba ._gdaa !=nil {_bcafb ._efdfc .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_baba ._gdaa .ToPdfObject ());_baba .updateObjectsDeep (_baba ._gdaa .ToPdfObject (),nil );};_baba .addNewObject (_bcafb ._eeege );_baba .addNewObject (_bcafb ._defa );_agfb :=false ;if len (_baba ._bge .PageList )!=len (_baba ._ddebe ){_agfb =true ;}else {for _dbcf :=range _baba ._bge .PageList {switch {case _baba ._ddebe [_dbcf ]==_baba ._bge .PageList [_dbcf ]:case _baba ._ddebe [_dbcf ]==_baba .Reader .PageList [_dbcf ]:default:_agfb =true ;};if _agfb {break ;};};};if _agfb {_baba .updateObjectsDeep (_bcafb ._fcdab ,nil );}else {_baba ._cgdb [_bcafb ._fcdab ]=struct{}{};};_bcafb ._fcdab .ObjectNumber =_baba .Reader ._cgge .ObjectNumber ;_baba ._gccf [_bcafb ._fcdab ]=_baba .Reader ._cgge .ObjectNumber ;_dea :=[]_de .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_agff :=range _baba ._ddebe {_ddfba :=_agff .ToPdfObject ();*_badea =*_badea +1;if _cffd ,_adag :=_ddfba .(*_de .PdfIndirectObject );_adag &&_cffd .GetParser ()==_baba ._bge ._fabda {_bebe .Append (&_cffd .PdfObjectReference );continue ;};if _gba ,_ggb :=_de .GetDict (_ddfba );_ggb {_ebcg ,_bacd :=_gba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_de .PdfIndirectObject );for _bacd {_bc .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebcg );_gfb ,_eagbb :=_ebcg .PdfObject .(*_de .PdfObjectDictionary );if !_eagbb {return _fe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_gff :=range _dea {_bc .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gff );if _gba .Get (_gff )!=nil {_bc .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _aacg :=_gfb .Get (_gff );_aacg !=nil {_bc .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_gff );_gba .Set (_gff ,_aacg );};};_ebcg ,_bacd =_gfb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_de .PdfIndirectObject );_bc .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gfb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_gba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bcafb ._fcdab );};_baba .updateObjectsDeep (_ddfba ,nil );_bebe .Append (_ddfba );};if _ ,_cbeb :=_baba ._dccb .Seek (0,_gad .SeekStart );_cbeb !=nil {return _cbeb ;};_cca :=make (map[SignatureHandler ]_gad .Writer );_dbfb :=_de .MakeArray ();for _ ,_ggcd :=range _baba ._gbda {if _aacgd ,_fgfb :=_de .GetIndirect (_ggcd );_fgfb {if _ededb ,_cfgc :=_aacgd .PdfObject .(*pdfSignDictionary );_cfgc {_ebfa :=*_ededb ._ecdg ;var _fgdab error ;_cca [_ebfa ],_fgdab =_ebfa .NewDigest (_ededb ._debac );if _fgdab !=nil {return _fgdab ;};_dbfb .Append (_de .MakeInteger (0xfffff),_de .MakeInteger (0xfffff));};};};if _dbfb .Len ()> 0{_dbfb .Append (_de .MakeInteger (0xfffff),_de .MakeInteger (0xfffff));};for _ ,_eee :=range _baba ._gbda {if _cdaa ,_cfbe :=_de .GetIndirect (_eee );_cfbe {if _ecbf ,_facg :=_cdaa .PdfObject .(*pdfSignDictionary );_facg {_ecbf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dbfb );};};};_beccb :=len (_cca )> 0;var _afce _gad .Reader =_baba ._dccb ;if _beccb {_fdde :=make ([]_gad .Writer ,0,len (_cca ));for _ ,_cfde :=range _cca {_fdde =append (_fdde ,_cfde );};_afce =_gad .TeeReader (_baba ._dccb ,_gad .MultiWriter (_fdde ...));};_fagbe ,_gbca :=_gad .Copy (w ,_afce );if _gbca !=nil {return _gbca ;};if len (_baba ._gbda )==0{return nil ;};_bcafb ._gcgb =_fagbe ;_bcafb .ObjNumOffset =_baba ._gcgg ;_bcafb ._gabdg =true ;_bcafb ._cedcg =_baba ._dcbdg ;_bcafb ._fecb =_baba ._cff ;_bcafb ._ddbca =_baba ._gac ;_bcafb ._efagf =_baba ._bge .PdfVersion ().Minor ;_bcafb ._degdc =_baba ._gccf ;_ecca :=_baba ._bdef .GetXrefType ();if _ecca !=nil {_aedg :=*_ecca ==_de .XrefTypeObjectStream ;_bcafb ._ccbff =&_aedg ;};_bcafb ._abdaa =map[_de .PdfObject ]struct{}{};_bcafb ._agfeb =[]_de .PdfObject {};for _ ,_bddce :=range _baba ._gbda {if _ ,_cgg :=_baba ._cgdb [_bddce ];_cgg {continue ;};_bcafb .addObject (_bddce );};_fbeb :=w ;if _beccb {_fbeb =_gd .NewBuffer (nil );};if _egff :=_bcafb .Write (_fbeb );_egff !=nil {return _egff ;};if _beccb {_badfe :=_fbeb .(*_gd .Buffer ).Bytes ();_bega :=_de .MakeArray ();var _ebab []*pdfSignDictionary ;var _dgbb int64 ;for _ ,_aafd :=range _bcafb ._agfeb {if _febf ,_gdb :=_de .GetIndirect (_aafd );_gdb {if _eagae ,_ffegd :=_febf .PdfObject .(*pdfSignDictionary );_ffegd {_ebab =append (_ebab ,_eagae );_ggfe :=_eagae ._afda +int64 (_eagae ._aaba );_bega .Append (_de .MakeInteger (_dgbb ),_de .MakeInteger (_ggfe -_dgbb ));_dgbb =_eagae ._afda +int64 (_eagae ._abdadd );};};};_bega .Append (_de .MakeInteger (_dgbb ),_de .MakeInteger (_fagbe +int64 (len (_badfe ))-_dgbb ));_dbdg :=[]byte (_bega .WriteString ());for _ ,_cgf :=range _ebab {_agefa :=int (_cgf ._afda -_fagbe );for _cgfa :=_cgf ._ebbaa ;_cgfa < _cgf ._gfeca ;_cgfa ++{_badfe [_agefa +_cgfa ]=' ';};_bdefd :=_badfe [_agefa +_cgf ._ebbaa :_agefa +_cgf ._gfeca ];copy (_bdefd ,_dbdg );};var _fefc int ;for _ ,_fgdf :=range _ebab {_egad :=int (_fgdf ._afda -_fagbe );_debcd :=_badfe [_fefc :_egad +_fgdf ._aaba ];_caeb :=*_fgdf ._ecdg ;_cca [_caeb ].Write (_debcd );_fefc =_egad +_fgdf ._abdadd ;};for _ ,_decg :=range _ebab {_dgg :=_badfe [_fefc :];_bcfb :=*_decg ._ecdg ;_cca [_bcfb ].Write (_dgg );};for _ ,_cfeb :=range _ebab {_dgdb :=int (_cfeb ._afda -_fagbe );_efed :=*_cfeb ._ecdg ;_eedd :=_cca [_efed ];if _dbaa :=_efed .Sign (_cfeb ._debac ,_eedd );_dbaa !=nil {return _dbaa ;};_cfeb ._debac .ByteRange =_bega ;_aeea :=[]byte (_cfeb ._debac .Contents .WriteString ());for _ebgf :=_cfeb ._ebbaa ;_ebgf < _cfeb ._gfeca ;_ebgf ++{_badfe [_dgdb +_ebgf ]=' ';};for _gbfg :=_cfeb ._aaba ;_gbfg < _cfeb ._abdadd ;_gbfg ++{_badfe [_dgdb +_gbfg ]=' ';};_cde :=_badfe [_dgdb +_cfeb ._ebbaa :_dgdb +_cfeb ._gfeca ];copy (_cde ,_dbdg );_cde =_badfe [_dgdb +_cfeb ._aaba :_dgdb +_cfeb ._abdadd ];copy (_cde ,_aeea );};_cgae :=_gd .NewBuffer (_badfe );_ ,_gbca =_gad .Copy (w ,_cgae );if _gbca !=nil {return _gbca ;};};_baba ._agbb =true ;return nil ;};func (_bbd *PdfReader )newPdfActionURIFromDict (_bfc *_de .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_bfc .Get ("\u0055\u0052\u0049"),IsMap :_bfc .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// C returns the value of the cyan component of the color.
func (_ebdf *PdfColorDeviceCMYK )C ()float64 {return float64 (_ebdf [0])};var _bfagc =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// AddAnnotation appends `annot` to the list of page annotations.
func (_dgadf *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _dgadf ._bbeg ==nil {_dgadf .GetAnnotations ();};_dgadf ._bbeg =append (_dgadf ._bbeg ,annot );};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _de .PdfObject ;Volume _de .PdfObject ;Synchronous _de .PdfObject ;Repeat _de .PdfObject ;Mix _de .PdfObject ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ffa :=NewPdfAction ();_gce :=&PdfActionSetOCGState {};_gce .PdfAction =_ffa ;_ffa .SetContext (_gce );return _gce ;};func _cddebf (_fcba _de .PdfObject )(*PdfColorspaceCalGray ,error ){_ffdd :=NewPdfColorspaceCalGray ();if _ccgee ,_fdff :=_fcba .(*_de .PdfIndirectObject );_fdff {_ffdd ._eefc =_ccgee ;};_fcba =_de .TraceToDirectObject (_fcba );_fdca ,_gefb :=_fcba .(*_de .PdfObjectArray );if !_gefb {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdca .Len ()!=2{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fcba =_de .TraceToDirectObject (_fdca .Get (0));_ebee ,_gefb :=_fcba .(*_de .PdfObjectName );if !_gefb {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ebee !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_d .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fcba =_de .TraceToDirectObject (_fdca .Get (1));_feafg ,_gefb :=_fcba .(*_de .PdfObjectDictionary );if !_gefb {return nil ,_d .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_fcba =_feafg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fcba =_de .TraceToDirectObject (_fcba );_aaab ,_gefb :=_fcba .(*_de .PdfObjectArray );if !_gefb {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _aaab .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_dedb ,_cbaa :=_aaab .GetAsFloat64Slice ();if _cbaa !=nil {return nil ,_cbaa ;};_ffdd .WhitePoint =_dedb ;_fcba =_feafg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fcba !=nil {_fcba =_de .TraceToDirectObject (_fcba );_cedc ,_fede :=_fcba .(*_de .PdfObjectArray );if !_fede {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cedc .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_decb ,_addb :=_cedc .GetAsFloat64Slice ();if _addb !=nil {return nil ,_addb ;};_ffdd .BlackPoint =_decb ;};_fcba =_feafg .Get ("\u0047\u0061\u006dm\u0061");if _fcba !=nil {_fcba =_de .TraceToDirectObject (_fcba );_cgcf ,_fcd :=_de .GetNumberAsFloat (_fcba );if _fcd !=nil {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ffdd .Gamma =_cgcf ;};return _ffdd ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_bgbe *PdfFieldButton )IsCheckbox ()bool {return _bgbe .GetType ()==ButtonTypeCheckbox };

// ToPdfObject implements interface PdfModel.
func (_febbc *PdfSignature )ToPdfObject ()_de .PdfObject {_fgddd :=_febbc ._edgfg ;var _dgegb *_de .PdfObjectDictionary ;if _baaga ,_dffaf :=_fgddd .PdfObject .(*pdfSignDictionary );_dffaf {_dgegb =_baaga .PdfObjectDictionary ;}else {_dgegb =_fgddd .PdfObject .(*_de .PdfObjectDictionary );};_dgegb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_febbc .Type );_dgegb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_febbc .Filter );_dgegb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_febbc .SubFilter );_dgegb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_febbc .ByteRange );_dgegb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_febbc .Contents );_dgegb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_febbc .Cert );_dgegb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_febbc .Name );_dgegb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_febbc .Reason );_dgegb .SetIfNotNil ("\u004d",_febbc .M );_dgegb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_febbc .Reference );_dgegb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_febbc .Changes );_dgegb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_febbc .ContactInfo );return _fgddd ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_afcc *PdfColorspaceSpecialIndexed )ToPdfObject ()_de .PdfObject {_faa :=_de .MakeArray (_de .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_faa .Append (_afcc .Base .ToPdfObject ());_faa .Append (_de .MakeInteger (int64 (_afcc .HiVal )));_faa .Append (_afcc .Lookup );if _afcc ._ffee !=nil {_afcc ._ffee .PdfObject =_faa ;return _afcc ._ffee ;};return _faa ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_ffcb DefaultImageHandler )Read (reader _gad .Reader )(*Image ,error ){_daae ,_ ,_afacg :=_a .Decode (reader );if _afacg !=nil {_bc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_afacg );return nil ,_afacg ;};return _ffcb .NewImageFromGoImage (_daae );};

// ToPdfObject implements interface PdfModel.
func (_fcf *PdfActionHide )ToPdfObject ()_de .PdfObject {_fcf .PdfAction .ToPdfObject ();_adf :=_fcf ._cg ;_bdf :=_adf .PdfObject .(*_de .PdfObjectDictionary );_bdf .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeHide )));_bdf .SetIfNotNil ("\u0054",_fcf .T );_bdf .SetIfNotNil ("\u0048",_fcf .H );return _adf ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _de .PdfObject )(PdfColorspace ,error ){var _cfga *_de .PdfIndirectObject ;var _eaed *_de .PdfObjectName ;var _dcbe *_de .PdfObjectArray ;if _ecbc ,_abbf :=obj .(*_de .PdfIndirectObject );_abbf {_cfga =_ecbc ;};obj =_de .TraceToDirectObject (obj );switch _feee :=obj .(type ){case *_de .PdfObjectArray :_dcbe =_feee ;case *_de .PdfObjectName :_eaed =_feee ;};if _eaed !=nil {switch *_eaed {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_bc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_eaed );return nil ,_bcda ;};};if _dcbe !=nil &&_dcbe .Len ()> 0{var _fagf _de .PdfObject =_cfga ;if _cfga ==nil {_fagf =_dcbe ;};if _acec ,_bfcdc :=_de .GetName (_dcbe .Get (0));_bfcdc {switch _acec .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dcbe .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dcbe .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dcbe .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _cddebf (_fagf );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _cefb (_fagf );case "\u004c\u0061\u0062":return _dcefe (_fagf );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cgbe (_fagf );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _fec (_fagf );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dgdag (_fagf );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _fffb (_fagf );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _geed (_fagf );default:_bc .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_acec );};};};_bc .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_dfae *PdfAppender )UpdateObject (obj _de .PdfObject ){_dfae .replaceObject (obj ,obj );if _ ,_bcfe :=_dfae ._edec [obj ];!_bcfe {_dfae ._gbda =append (_dfae ._gbda ,obj );_dfae ._edec [obj ]=struct{}{};};};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dafaf *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fcfcd :=NewPdfOutlineItem ();_fcfcd .Title =_de .MakeEncodedString (_dafaf .Title ,true );_fcfcd .Dest =_dafaf .Dest .ToPdfObject ();var _eaccc []*PdfOutlineItem ;var _fefcf int64 ;var _bccee *PdfOutlineItem ;for _ ,_aafb :=range _dafaf .Entries {_cgfbd ,_beffa :=_aafb .ToPdfOutlineItem ();_cgfbd .Parent =&_fcfcd .PdfOutlineTreeNode ;if _bccee !=nil {_bccee .Next =&_cgfbd .PdfOutlineTreeNode ;_cgfbd .Prev =&_bccee .PdfOutlineTreeNode ;};_eaccc =append (_eaccc ,_cgfbd );_fefcf +=_beffa ;_bccee =_cgfbd ;};_gbac :=len (_eaccc );_fefcf +=int64 (_gbac );if _gbac > 0{_fcfcd .First =&_eaccc [0].PdfOutlineTreeNode ;_fcfcd .Last =&_eaccc [_gbac -1].PdfOutlineTreeNode ;_fcfcd .Count =&_fefcf ;};return _fcfcd ,_fefcf ;};func _cefb (_ebfd _de .PdfObject )(*PdfColorspaceCalRGB ,error ){_edgb :=NewPdfColorspaceCalRGB ();if _agffd ,_gecg :=_ebfd .(*_de .PdfIndirectObject );_gecg {_edgb ._degbc =_agffd ;};_ebfd =_de .TraceToDirectObject (_ebfd );_effc ,_faff :=_ebfd .(*_de .PdfObjectArray );if !_faff {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _effc .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_ebfd =_de .TraceToDirectObject (_effc .Get (0));_adaf ,_faff :=_ebfd .(*_de .PdfObjectName );if !_faff {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_adaf !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_d .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_ebfd =_de .TraceToDirectObject (_effc .Get (1));_ebage ,_faff :=_ebfd .(*_de .PdfObjectDictionary );if !_faff {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_ebfd =_ebage .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ebfd =_de .TraceToDirectObject (_ebfd );_cegac ,_faff :=_ebfd .(*_de .PdfObjectArray );if !_faff {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _cegac .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ebba ,_dceff :=_cegac .GetAsFloat64Slice ();if _dceff !=nil {return nil ,_dceff ;};_edgb .WhitePoint =_ebba ;_ebfd =_ebage .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ebfd !=nil {_ebfd =_de .TraceToDirectObject (_ebfd );_bbae ,_bdcc :=_ebfd .(*_de .PdfObjectArray );if !_bdcc {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _bbae .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bbcc ,_bgaa :=_bbae .GetAsFloat64Slice ();if _bgaa !=nil {return nil ,_bgaa ;};_edgb .BlackPoint =_bbcc ;};_ebfd =_ebage .Get ("\u0047\u0061\u006dm\u0061");if _ebfd !=nil {_ebfd =_de .TraceToDirectObject (_ebfd );_daag ,_geba :=_ebfd .(*_de .PdfObjectArray );if !_geba {return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _daag .Len ()!=3{return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_fefe ,_afe :=_daag .GetAsFloat64Slice ();if _afe !=nil {return nil ,_afe ;};_edgb .Gamma =_fefe ;};_ebfd =_ebage .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _ebfd !=nil {_ebfd =_de .TraceToDirectObject (_ebfd );_cade ,_afdb :=_ebfd .(*_de .PdfObjectArray );if !_afdb {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cade .Len ()!=9{_bc .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cade .String ());return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_dece ,_dbadf :=_cade .GetAsFloat64Slice ();if _dbadf !=nil {return nil ,_dbadf ;};_edgb .Matrix =_dece ;};return _edgb ,nil ;};

// IsColored specifies if the pattern is colored.
func (_eedfd *PdfTilingPattern )IsColored ()bool {if _eedfd .PaintType !=nil &&*_eedfd .PaintType ==1{return true ;};return false ;};var _fggbe =false ;

// ToPdfObject implements interface PdfModel.
func (_ecg *PdfActionMovie )ToPdfObject ()_de .PdfObject {_ecg .PdfAction .ToPdfObject ();_cf :=_ecg ._cg ;_bcc :=_cf .PdfObject .(*_de .PdfObjectDictionary );_bcc .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeMovie )));_bcc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ecg .Annotation );_bcc .SetIfNotNil ("\u0054",_ecg .T );_bcc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ecg .Operation );return _cf ;};

// ToPdfObject implements interface PdfModel.
func (_fegd *PdfAnnotationWidget )ToPdfObject ()_de .PdfObject {_fegd .PdfAnnotation .ToPdfObject ();_bgfe :=_fegd ._afa ;_bdea :=_bgfe .PdfObject .(*_de .PdfObjectDictionary );if _fegd ._bbda {return _bgfe ;};_fegd ._bbda =true ;_bdea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_bdea .SetIfNotNil ("\u0048",_fegd .H );_bdea .SetIfNotNil ("\u004d\u004b",_fegd .MK );_bdea .SetIfNotNil ("\u0041",_fegd .A );_bdea .SetIfNotNil ("\u0041\u0041",_fegd .AA );_bdea .SetIfNotNil ("\u0042\u0053",_fegd .BS );_bfgb :=_fegd .Parent ;if _fegd ._gabc !=nil {if _fegd ._gabc ._gddee ==_fegd ._afa {_fegd ._gabc .ToPdfObject ();};_bfgb =_fegd ._gabc .GetContainingPdfObject ();};if _bfgb !=_bgfe {_bdea .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfgb );};_fegd ._bbda =false ;return _bgfe ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _de .PdfObject ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _de .PdfObject ;RichMediaContent _de .PdfObject ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ee :=NewPdfAction ();_abb :=&PdfActionThread {};_abb .PdfAction =_ee ;_ee .SetContext (_abb );return _abb ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_acgdg PdfModel ;_addd _de .PdfObject ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_gddf =title };func _gbdc (_cfac []byte )(_geefd ,_ebbce string ,_ffgee error ){_bc .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cfac ));_dfdb :=_ecgd .FindIndex (_cfac );if _dfdb ==nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_de .ErrTypeError ;};_ccgg :=_dfdb [1];_bdcfg :=_c .Index (string (_cfac [_ccgg :]),_cadd );if _bdcfg < 0{_geefd =string (_cfac [_ccgg :]);return _geefd ,"",nil ;};_dfba :=_ccgg +_bdcfg ;_geefd =string (_cfac [_ccgg :_dfba ]);_dabg :=_dfba ;_bdcfg =_c .Index (string (_cfac [_dabg :]),_abced );if _bdcfg < 0{_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffgee );return "","",_de .ErrTypeError ;};_acabc :=_dabg +_bdcfg ;_ebbce =string (_cfac [_dabg :_acabc ]);return _geefd ,_ebbce ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_face :=&PdfOutline {_ddcbd :_de .MakeIndirectObject (_de .MakeDict ())};_face ._gccdf =_face ;return _face ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ddef *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cace :=vals [0];if _cace < 0.0||_cace > 1.0{_bc .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _cace < 0.0{_cace =0.0;}else if _cace > 1.0{_cace =1.0;};return NewPdfColorDeviceGray (_cace ),nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_cebd *PdfFont )CharcodesToStrings (charcodes []_gb .CharCode )([]string ,int ,int ){_cbaaf :=_cebd .baseFields ();_bfgdf :=make ([]string ,0,len (charcodes ));_dfaf :=0;for _ ,_eaba :=range charcodes {if _cbaaf ._eegcf !=nil {if _acdc ,_cdgf :=_cbaaf ._eegcf .CharcodeToUnicode (_bd .CharCode (_eaba ));_cdgf {_bfgdf =append (_bfgdf ,_acdc );continue ;};};_fefeg :=_cebd .Encoder ();if _fefeg !=nil {if _fcdfc ,_ceag :=_fefeg .CharcodeToRune (_eaba );_ceag {_bfgdf =append (_bfgdf ,string (_fcdfc ));continue ;};};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_eaba ,charcodes ,_cbaaf .isCIDFont (),_cebd ,_fefeg );_dfaf ++;_bfgdf =append (_bfgdf ,_bd .MissingCodeString );};if _dfaf !=0{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_dfaf ,_cebd );};return _bfgdf ,len (_bfgdf ),_dfaf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_acda *PdfColorspaceDeviceRGB )ToPdfObject ()_de .PdfObject {return _de .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_fefb pdfFontSimple )GetCharMetrics (code _gb .CharCode )(_eg .CharMetrics ,bool ){if _fecgc ,_geab :=_fefb ._acbc [code ];_geab {return _eg .CharMetrics {Wx :_fecgc },true ;};if _eg .IsStdFont (_eg .StdFontName (_fefb ._ccbbd )){return _eg .CharMetrics {Wx :250},true ;};return _eg .CharMetrics {},false ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func (_ebcab *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gceaf :=_ebcab .Parent ;for _gceaf !=nil {_gfde ,_bcebe :=_de .GetDict (_gceaf );if !_bcebe {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _dbdbe :=_gfde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_dbdbe !=nil {_fgee ,_feda :=_de .GetDict (_dbdbe );if !_feda {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_ggbg ,_agfde :=NewPdfPageResourcesFromDict (_fgee );if _agfde !=nil {return nil ,_agfde ;};return _ggbg ,nil ;};_gceaf =_gfde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_de .PdfObjectName ;Colorants _de .PdfObject ;Process _de .PdfObject ;MixingHints _de .PdfObject ;_daec *_de .PdfIndirectObject ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ToInteger convert to an integer format.
func (_fgeb *PdfColorDeviceGray )ToInteger (bits int )uint32 {_cccb :=_bgc .Pow (2,float64 (bits ))-1;return uint32 (_cccb *_fgeb .Val ());};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_geee *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fe .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_bcbg ,_decf :=_cbd .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._acfbc ,img ._affeg );if _decf !=nil {return img ,_decf ;};_gefg ,_decf :=_cbd .NRGBAConverter .Convert (_bcbg );if _decf !=nil {return img ,_decf ;};_cccf :=_aade (_gefg .Base ());_bc .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bc .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_bc .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cccf .Data );_bc .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cccf );return _cccf ,nil ;};func (_bccb *PdfReader )newPdfAnnotationFromIndirectObject (_cdc *_de .PdfIndirectObject )(*PdfAnnotation ,error ){_agb ,_dge :=_cdc .PdfObject .(*_de .PdfObjectDictionary );if !_dge {return nil ,_d .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_bccb ._gafgf .GetModelFromPrimitive (_agb );model !=nil {_edd ,_aab :=model .(*PdfAnnotation );if !_aab {return nil ,_d .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _edd ,nil ;};_dfa :=&PdfAnnotation {};_dfa ._afa =_cdc ;_bccb ._gafgf .Register (_agb ,_dfa );if _bedd :=_agb .Get ("\u0054\u0079\u0070\u0065");_bedd !=nil {_dfga ,_gefa :=_bedd .(*_de .PdfObjectName );if !_gefa {_bc .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bedd );}else {if *_dfga !="\u0041\u006e\u006eo\u0074"{_bc .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dfga );};};};if _bcfd :=_agb .Get ("\u0052\u0065\u0063\u0074");_bcfd !=nil {_dfa .Rect =_bcfd ;};if _ddag :=_agb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_ddag !=nil {_dfa .Contents =_ddag ;};if _dba :=_agb .Get ("\u0050");_dba !=nil {_dfa .P =_dba ;};if _bfce :=_agb .Get ("\u004e\u004d");_bfce !=nil {_dfa .NM =_bfce ;};if _feaa :=_agb .Get ("\u004d");_feaa !=nil {_dfa .M =_feaa ;};if _bgfa :=_agb .Get ("\u0046");_bgfa !=nil {_dfa .F =_bgfa ;};if _beg :=_agb .Get ("\u0041\u0050");_beg !=nil {_dfa .AP =_beg ;};if _gbef :=_agb .Get ("\u0041\u0053");_gbef !=nil {_dfa .AS =_gbef ;};if _fgda :=_agb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_fgda !=nil {_dfa .Border =_fgda ;};if _dede :=_agb .Get ("\u0043");_dede !=nil {_dfa .C =_dede ;};if _dedec :=_agb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dedec !=nil {_dfa .StructParent =_dedec ;};if _edf :=_agb .Get ("\u004f\u0043");_edf !=nil {_dfa .OC =_edf ;};_fdec :=_agb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fdec ==nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_dfa ._fgd =nil ;return _dfa ,nil ;};_gbgab ,_ccc :=_fdec .(*_de .PdfObjectName );if !_ccc {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fdec );return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fdec );};switch *_gbgab {case "\u0054\u0065\u0078\u0074":_aebb ,_cfg :=_bccb .newPdfAnnotationTextFromDict (_agb );if _cfg !=nil {return nil ,_cfg ;};_aebb .PdfAnnotation =_dfa ;_dfa ._fgd =_aebb ;return _dfa ,nil ;case "\u004c\u0069\u006e\u006b":_edcb ,_bbe :=_bccb .newPdfAnnotationLinkFromDict (_agb );if _bbe !=nil {return nil ,_bbe ;};_edcb .PdfAnnotation =_dfa ;_dfa ._fgd =_edcb ;return _dfa ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fefg ,_gaac :=_bccb .newPdfAnnotationFreeTextFromDict (_agb );if _gaac !=nil {return nil ,_gaac ;};_fefg .PdfAnnotation =_dfa ;_dfa ._fgd =_fefg ;return _dfa ,nil ;case "\u004c\u0069\u006e\u0065":_eddf ,_dag :=_bccb .newPdfAnnotationLineFromDict (_agb );if _dag !=nil {return nil ,_dag ;};_eddf .PdfAnnotation =_dfa ;_dfa ._fgd =_eddf ;_bc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dfa ,_dfa );_bc .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_eddf ,_eddf );_bc .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_eddf .PdfAnnotationMarkup ,_eddf .PdfAnnotationMarkup );return _dfa ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_agfd ,_eaa :=_bccb .newPdfAnnotationSquareFromDict (_agb );if _eaa !=nil {return nil ,_eaa ;};_agfd .PdfAnnotation =_dfa ;_dfa ._fgd =_agfd ;return _dfa ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cge ,_eaac :=_bccb .newPdfAnnotationCircleFromDict (_agb );if _eaac !=nil {return nil ,_eaac ;};_cge .PdfAnnotation =_dfa ;_dfa ._fgd =_cge ;return _dfa ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_egae ,_dff :=_bccb .newPdfAnnotationPolygonFromDict (_agb );if _dff !=nil {return nil ,_dff ;};_egae .PdfAnnotation =_dfa ;_dfa ._fgd =_egae ;return _dfa ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_acgf ,_fbg :=_bccb .newPdfAnnotationPolyLineFromDict (_agb );if _fbg !=nil {return nil ,_fbg ;};_acgf .PdfAnnotation =_dfa ;_dfa ._fgd =_acgf ;return _dfa ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_fed ,_dca :=_bccb .newPdfAnnotationHighlightFromDict (_agb );if _dca !=nil {return nil ,_dca ;};_fed .PdfAnnotation =_dfa ;_dfa ._fgd =_fed ;return _dfa ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_aac ,_efc :=_bccb .newPdfAnnotationUnderlineFromDict (_agb );if _efc !=nil {return nil ,_efc ;};_aac .PdfAnnotation =_dfa ;_dfa ._fgd =_aac ;return _dfa ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bfgc ,_bfca :=_bccb .newPdfAnnotationSquigglyFromDict (_agb );if _bfca !=nil {return nil ,_bfca ;};_bfgc .PdfAnnotation =_dfa ;_dfa ._fgd =_bfgc ;return _dfa ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ecc ,_gdde :=_bccb .newPdfAnnotationStrikeOut (_agb );if _gdde !=nil {return nil ,_gdde ;};_ecc .PdfAnnotation =_dfa ;_dfa ._fgd =_ecc ;return _dfa ,nil ;case "\u0043\u0061\u0072e\u0074":_cbeg ,_edbe :=_bccb .newPdfAnnotationCaretFromDict (_agb );if _edbe !=nil {return nil ,_edbe ;};_cbeg .PdfAnnotation =_dfa ;_dfa ._fgd =_cbeg ;return _dfa ,nil ;case "\u0053\u0074\u0061m\u0070":_geaa ,_fgca :=_bccb .newPdfAnnotationStampFromDict (_agb );if _fgca !=nil {return nil ,_fgca ;};_geaa .PdfAnnotation =_dfa ;_dfa ._fgd =_geaa ;return _dfa ,nil ;case "\u0049\u006e\u006b":_gbeg ,_add :=_bccb .newPdfAnnotationInkFromDict (_agb );if _add !=nil {return nil ,_add ;};_gbeg .PdfAnnotation =_dfa ;_dfa ._fgd =_gbeg ;return _dfa ,nil ;case "\u0050\u006f\u0070u\u0070":_deb ,_eeg :=_bccb .newPdfAnnotationPopupFromDict (_agb );if _eeg !=nil {return nil ,_eeg ;};_deb .PdfAnnotation =_dfa ;_dfa ._fgd =_deb ;return _dfa ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ddbd ,_dfgee :=_bccb .newPdfAnnotationFileAttachmentFromDict (_agb );if _dfgee !=nil {return nil ,_dfgee ;};_ddbd .PdfAnnotation =_dfa ;_dfa ._fgd =_ddbd ;return _dfa ,nil ;case "\u0053\u006f\u0075n\u0064":_agdf ,_acf :=_bccb .newPdfAnnotationSoundFromDict (_agb );if _acf !=nil {return nil ,_acf ;};_agdf .PdfAnnotation =_dfa ;_dfa ._fgd =_agdf ;return _dfa ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bfgce ,_ggf :=_bccb .newPdfAnnotationRichMediaFromDict (_agb );if _ggf !=nil {return nil ,_ggf ;};_bfgce .PdfAnnotation =_dfa ;_dfa ._fgd =_bfgce ;return _dfa ,nil ;case "\u004d\u006f\u0076i\u0065":_gfe ,_cfe :=_bccb .newPdfAnnotationMovieFromDict (_agb );if _cfe !=nil {return nil ,_cfe ;};_gfe .PdfAnnotation =_dfa ;_dfa ._fgd =_gfe ;return _dfa ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bbff ,_dded :=_bccb .newPdfAnnotationScreenFromDict (_agb );if _dded !=nil {return nil ,_dded ;};_bbff .PdfAnnotation =_dfa ;_dfa ._fgd =_bbff ;return _dfa ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_afd ,_bcdg :=_bccb .newPdfAnnotationWidgetFromDict (_agb );if _bcdg !=nil {return nil ,_bcdg ;};_afd .PdfAnnotation =_dfa ;_dfa ._fgd =_afd ;return _dfa ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_ddeda ,_abg :=_bccb .newPdfAnnotationPrinterMarkFromDict (_agb );if _abg !=nil {return nil ,_abg ;};_ddeda .PdfAnnotation =_dfa ;_dfa ._fgd =_ddeda ;return _dfa ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_abf ,_faef :=_bccb .newPdfAnnotationTrapNetFromDict (_agb );if _faef !=nil {return nil ,_faef ;};_abf .PdfAnnotation =_dfa ;_dfa ._fgd =_abf ;return _dfa ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_bafe ,_fca :=_bccb .newPdfAnnotationWatermarkFromDict (_agb );if _fca !=nil {return nil ,_fca ;};_bafe .PdfAnnotation =_dfa ;_dfa ._fgd =_bafe ;return _dfa ,nil ;case "\u0033\u0044":_bddc ,_eac :=_bccb .newPdfAnnotation3DFromDict (_agb );if _eac !=nil {return nil ,_eac ;};_bddc .PdfAnnotation =_dfa ;_dfa ._fgd =_bddc ;return _dfa ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bcdd ,_cccc :=_bccb .newPdfAnnotationProjectionFromDict (_agb );if _cccc !=nil {return nil ,_cccc ;};_bcdd .PdfAnnotation =_dfa ;_dfa ._fgd =_bcdd ;return _dfa ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_egd ,_bceb :=_bccb .newPdfAnnotationRedactFromDict (_agb );if _bceb !=nil {return nil ,_bceb ;};_egd .PdfAnnotation =_dfa ;_dfa ._fgd =_egd ;return _dfa ,nil ;};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gbgab );return nil ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fcc *PdfAnnotation )GetContext ()PdfModel {if _fcc ==nil {return nil ;};return _fcc ._fgd ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fa *PdfActionRendition )ToPdfObject ()_de .PdfObject {_fa .PdfAction .ToPdfObject ();_aec :=_fa ._cg ;_fae :=_aec .PdfObject .(*_de .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeRendition )));_fae .SetIfNotNil ("\u0052",_fa .R );_fae .SetIfNotNil ("\u0041\u004e",_fa .AN );_fae .SetIfNotNil ("\u004f\u0050",_fa .OP );_fae .SetIfNotNil ("\u004a\u0053",_fa .JS );return _aec ;};func _aeebf (_gabg *XObjectImage )error {if _gabg .SMask ==nil {return nil ;};_gcfed ,_daadf :=_gabg .SMask .(*_de .PdfObjectStream );if !_daadf {_bc .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _de .ErrTypeError ;};_geaeg :=_gcfed .PdfObjectDictionary ;_fdgg :=_geaeg .Get ("\u004d\u0061\u0074t\u0065");if _fdgg ==nil {return nil ;};_ffcbg ,_cadga :=_ageff (_fdgg .(*_de .PdfObjectArray ));if _cadga !=nil {return _cadga ;};_egddbd :=_de .MakeArrayFromFloats ([]float64 {_ffcbg });_geaeg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_egddbd );return nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _ga .Time ;};

// ToPdfObject converts date to a PDF string object.
func (_aaedf *PdfDate )ToPdfObject ()_de .PdfObject {_cfedee :=_d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aaedf ._fbbae ,_aaedf ._ddfea ,_aaedf ._eafcb ,_aaedf ._gdgba ,_aaedf ._eegg ,_aaedf ._dagfd ,_aaedf ._afcfc ,_aaedf ._efdc ,_aaedf ._bgcag );return _de .MakeString (_cfedee );};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_adaga *PdfWriter )SetOptimizer (optimizer Optimizer ){_adaga ._dgdd =optimizer };

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_de .PdfObjectStream )(*XObjectForm ,error ){_begcg :=&XObjectForm {};_begcg ._fecdfb =stream ;_bfbg :=*(stream .PdfObjectDictionary );_cgfed ,_fccbe :=_de .NewEncoderFromStream (stream );if _fccbe !=nil {return nil ,_fccbe ;};_begcg .Filter =_cgfed ;if _cdggd :=_bfbg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cdggd !=nil {_fddcf ,_adcaca :=_cdggd .(*_de .PdfObjectName );if !_adcaca {return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_fddcf !="\u0046\u006f\u0072\u006d"{_bc .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _bgbgd :=_bfbg .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bgbgd !=nil {_begcg .FormType =_bgbgd ;};if _aabad :=_bfbg .Get ("\u0042\u0042\u006f\u0078");_aabad !=nil {_begcg .BBox =_aabad ;};if _fdffea :=_bfbg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fdffea !=nil {_begcg .Matrix =_fdffea ;};if _ecafcc :=_bfbg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ecafcc !=nil {_ecafcc =_de .TraceToDirectObject (_ecafcc );_dgfce ,_efgga :=_ecafcc .(*_de .PdfObjectDictionary );if !_efgga {_bc .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_de .ErrTypeError ;};_aafda ,_bdbeg :=NewPdfPageResourcesFromDict (_dgfce );if _bdbeg !=nil {_bc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_bdbeg ;};_begcg .Resources =_aafda ;_bc .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_begcg .Resources );};_begcg .Group =_bfbg .Get ("\u0047\u0072\u006fu\u0070");_begcg .Ref =_bfbg .Get ("\u0052\u0065\u0066");_begcg .MetaData =_bfbg .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_begcg .PieceInfo =_bfbg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_begcg .LastModified =_bfbg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_begcg .StructParent =_bfbg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_begcg .StructParents =_bfbg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_begcg .OPI =_bfbg .Get ("\u004f\u0050\u0049");_begcg .OC =_bfbg .Get ("\u004f\u0043");_begcg .Name =_bfbg .Get ("\u004e\u0061\u006d\u0065");_begcg .Stream =stream .Stream ;return _begcg ,nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gfdf *pdfCIDFontType0 )ToPdfObject ()_de .PdfObject {return _de .MakeNull ()};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_fabda *_de .PdfParser ;_beddd _de .PdfObject ;_cgge *_de .PdfIndirectObject ;_fgcb *_de .PdfObjectDictionary ;_bagea []*_de .PdfIndirectObject ;PageList []*PdfPage ;_acaga int ;_effaa *_de .PdfObjectDictionary ;_dfdd *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_gafgf *modelManager ;_daceb bool ;_dcgaff map[_de .PdfObject ]struct{};_dceac _gad .ReadSeeker ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _de .PdfObject ;B _de .PdfObject ;};func _fcbb (_ecba *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_ecba }};var _ pdfFont =(*pdfFontSimple )(nil );func (_aeeab *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func (_gbdd *PdfReader )newPdfAnnotationScreenFromDict (_deee *_de .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ffae :=PdfAnnotationScreen {};_ffae .T =_deee .Get ("\u0054");_ffae .MK =_deee .Get ("\u004d\u004b");_ffae .A =_deee .Get ("\u0041");_ffae .AA =_deee .Get ("\u0041\u0041");return &_ffae ,nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_def PdfModel ;Type _de .PdfObject ;S _de .PdfObject ;Next _de .PdfObject ;_cg *_de .PdfIndirectObject ;};func (_gdfa *PdfAppender )mergeResources (_aedc ,_gagc _de .PdfObject ,_gabd map[_de .PdfObjectName ]_de .PdfObjectName )_de .PdfObject {if _gagc ==nil &&_aedc ==nil {return nil ;};if _gagc ==nil {return _aedc ;};_caac ,_fbac :=_de .GetDict (_gagc );if !_fbac {return _aedc ;};if _aedc ==nil {_ebag :=_de .MakeDict ();_ebag .Merge (_caac );return _gagc ;};_eafa ,_fbac :=_de .GetDict (_aedc );if !_fbac {_bc .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_eafa =_de .MakeDict ();};for _ ,_fdcb :=range _caac .Keys (){if _bfd ,_eebb :=_gabd [_fdcb ];_eebb {_eafa .Set (_bfd ,_caac .Get (_fdcb ));}else {_eafa .Set (_fdcb ,_caac .Get (_fdcb ));};};return _eafa ;};

// GetBorderWidth returns the border style's width.
func (_cebcf *PdfBorderStyle )GetBorderWidth ()float64 {if _cebcf .W ==nil {return 1;};return *_cebcf .W ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// SetVersion sets the PDF version of the output file.
func (_cgbaf *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cgbaf ._bfgga =majorVersion ;_cgbaf ._efagf =minorVersion ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _de .PdfObject ;Sy _de .PdfObject ;};func _dgdag (_cgbae _de .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_cfee :=NewPdfColorspaceSpecialIndexed ();if _abfb ,_aece :=_cgbae .(*_de .PdfIndirectObject );_aece {_cfee ._ffee =_abfb ;};_cgbae =_de .TraceToDirectObject (_cgbae );_daga ,_cfdcg :=_cgbae .(*_de .PdfObjectArray );if !_cfdcg {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _daga .Len ()!=4{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_cgbae =_daga .Get (0);_eegee ,_cfdcg :=_cgbae .(*_de .PdfObjectName );if !_cfdcg {return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_eegee !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_cgbae =_daga .Get (1);_eeaeg ,_adfaf :=DetermineColorspaceNameFromPdfObject (_cgbae );if _eeaeg =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_eeaeg =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bc .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_eeaeg );return nil ,_bcda ;};_beed ,_adfaf :=NewPdfColorspaceFromPdfObject (_cgbae );if _adfaf !=nil {return nil ,_adfaf ;};_cfee .Base =_beed ;_cgbae =_daga .Get (2);_dfgaa ,_adfaf :=_de .GetNumberAsInt64 (_cgbae );if _adfaf !=nil {return nil ,_adfaf ;};if _dfgaa > 255{return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_cfee .HiVal =int (_dfgaa );_cgbae =_daga .Get (3);_cfee .Lookup =_cgbae ;_cgbae =_de .TraceToDirectObject (_cgbae );var _gffe []byte ;if _aeded ,_bbdag :=_cgbae .(*_de .PdfObjectString );_bbdag {_gffe =_aeded .Bytes ();_bc .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gffe );}else if _acdg ,_gacde :=_cgbae .(*_de .PdfObjectStream );_gacde {_bc .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cgbae .String ());_bc .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_acdg .Stream ),_acdg .Stream );_cefdc ,_cagb :=_de .DecodeStream (_acdg );if _cagb !=nil {return nil ,_cagb ;};_bc .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cefdc ),_cefdc );_gffe =_cefdc ;}else {_bc .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cgbae );return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gffe )< _cfee .Base .GetNumComponents ()*(_cfee .HiVal +1){_bc .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_bc .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gffe ),_cfee .Base .GetNumComponents (),_cfee .HiVal );}else {_gffe =_gffe [:_cfee .Base .GetNumComponents ()*(_cfee .HiVal +1)];};_cfee ._bccf =_gffe ;return _cfee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceca *PdfAnnotationTrapNet )ToPdfObject ()_de .PdfObject {_ceca .PdfAnnotation .ToPdfObject ();_dac :=_ceca ._afa ;_ccgd :=_dac .PdfObject .(*_de .PdfObjectDictionary );_ccgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _dac ;};func _bcgf (_agdea _de .PdfObject )(string ,error ){_agdea =_de .TraceToDirectObject (_agdea );switch _bgbf :=_agdea .(type ){case *_de .PdfObjectString :return _bgbf .Str (),nil ;case *_de .PdfObjectStream :_feeeb ,_fbdaf :=_de .DecodeStream (_bgbf );if _fbdaf !=nil {return "",_fbdaf ;};return string (_feeeb ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_agdea );};func (_ddba *PdfReader )newPdfActionTransFromDict (_bfg *_de .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_bfg .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_ebcc *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToPdfObject implements interface PdfModel.
func (_cbc *PdfAnnotationLine )ToPdfObject ()_de .PdfObject {_cbc .PdfAnnotation .ToPdfObject ();_eegc :=_cbc ._afa ;_gaf :=_eegc .PdfObject .(*_de .PdfObjectDictionary );_cbc .PdfAnnotationMarkup .appendToPdfDictionary (_gaf );_gaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u004c\u0069\u006e\u0065"));_gaf .SetIfNotNil ("\u004c",_cbc .L );_gaf .SetIfNotNil ("\u0042\u0053",_cbc .BS );_gaf .SetIfNotNil ("\u004c\u0045",_cbc .LE );_gaf .SetIfNotNil ("\u0049\u0043",_cbc .IC );_gaf .SetIfNotNil ("\u004c\u004c",_cbc .LL );_gaf .SetIfNotNil ("\u004c\u004c\u0045",_cbc .LLE );_gaf .SetIfNotNil ("\u0043\u0061\u0070",_cbc .Cap );_gaf .SetIfNotNil ("\u0049\u0054",_cbc .IT );_gaf .SetIfNotNil ("\u004c\u004c\u004f",_cbc .LLO );_gaf .SetIfNotNil ("\u0043\u0050",_cbc .CP );_gaf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbc .Measure );_gaf .SetIfNotNil ("\u0043\u004f",_cbc .CO );return _eegc ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fd :=NewPdfAction ();_dd :=&PdfActionGoTo {};_dd .PdfAction =_fd ;_fd .SetContext (_dd );return _dd ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_cbfa ,_aadd :=_feddb (basefont );if _aadd !=nil {return nil ,_aadd ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_cbfa ._fafa =_gb .NewWinAnsiEncoder ();};return &PdfFont {_adce :&_cbfa },nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_adbgc *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _adbgc ._efae ==nil {_adbgc ._efae =_cd .NewPSExecutor (_adbgc .Program );};var _gedace []_cd .PSObject ;for _ ,_bfaf :=range xVec {_gedace =append (_gedace ,_cd .MakeReal (_bfaf ));};_bede ,_gdadd :=_adbgc ._efae .Execute (_gedace );if _gdadd !=nil {return nil ,_gdadd ;};_fdad ,_gdadd :=_cd .PSObjectArrayToFloat64Array (_bede );if _gdadd !=nil {return nil ,_gdadd ;};return _fdad ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fgd PdfModel ;Rect _de .PdfObject ;Contents _de .PdfObject ;P _de .PdfObject ;NM _de .PdfObject ;M _de .PdfObject ;F _de .PdfObject ;AP _de .PdfObject ;AS _de .PdfObject ;Border _de .PdfObject ;C _de .PdfObject ;StructParent _de .PdfObject ;OC _de .PdfObject ;_afa *_de .PdfIndirectObject ;};func init (){_gafcc ()};func _cacgd ()string {return _bc .Version };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_deec *PdfFont )BytesToCharcodes (data []byte )[]_gb .CharCode {_bc .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _eaca ,_cggac :=_deec ._adce .(*pdfFontType0 );_cggac &&_eaca ._dbae !=nil {if _ceggd ,_baca :=_eaca .bytesToCharcodes (data );_baca {return _ceggd ;};};_abgef :=make ([]_gb .CharCode ,0,len (data )+len (data )%2);if _deec .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _gdffg :=0;_gdffg < len (data );_gdffg +=2{_fcfg :=uint16 (data [_gdffg ])<<8|uint16 (data [_gdffg +1]);_abgef =append (_abgef ,_gb .CharCode (_fcfg ));};}else {for _ ,_cbcd :=range data {_abgef =append (_abgef ,_gb .CharCode (_cbcd ));};};return _abgef ;};

// AddFont adds a font dictionary to the Font resources.
func (_beea *PdfPage )AddFont (name _de .PdfObjectName ,font _de .PdfObject )error {if _beea .Resources ==nil {_beea .Resources =NewPdfPageResources ();};if _beea .Resources .Font ==nil {_beea .Resources .Font =_de .MakeDict ();};_ddbded ,_fbfgf :=_de .TraceToDirectObject (_beea .Resources .Font ).(*_de .PdfObjectDictionary );if !_fbfgf {_bc .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_de .TraceToDirectObject (_beea .Resources .Font ));return _fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ddbded .Set (name ,font );return nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_ebeg *PdfShading )GetContext ()PdfModel {return _ebeg ._fbbd };func (_ebad *PdfReader )newPdfActionThreadFromDict (_fdge *_de .PdfObjectDictionary )(*PdfActionThread ,error ){_gab ,_bgf :=_fab (_fdge .Get ("\u0046"));if _bgf !=nil {return nil ,_bgf ;};return &PdfActionThread {D :_fdge .Get ("\u0044"),B :_fdge .Get ("\u0042"),F :_gab },nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _de .PdfObject ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_egaeea *PdfField )Flags ()FieldFlag {var _bbbd FieldFlag ;_efbgc ,_dbbf :=_egaeea .inherit (func (_bfcdd *PdfField )bool {if _bfcdd .Ff !=nil {_bbbd =FieldFlag (*_egaeea .Ff );return true ;};return false ;});if _dbbf !=nil {_bc .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dbbf );};if !_efbgc {_bc .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bbbd ;};func (_bdgd *PdfField )inherit (_gcaa func (*PdfField )bool )(bool ,error ){_gfdg :=map[*PdfField ]bool {};_gace :=false ;_bfgbd :=_bdgd ;for _bfgbd !=nil {if _ ,_bgaeg :=_gfdg [_bfgbd ];_bgaeg {return false ,_fe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_bcbd :=_gcaa (_bfgbd );if _bcbd {_gace =true ;break ;};_gfdg [_bfgbd ]=true ;_bfgbd =_bfgbd .Parent ;};return _gace ,nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func _acgfc (_afac _de .PdfObject )(*PdfFunctionType3 ,error ){_fgeca :=&PdfFunctionType3 {};var _abbgg *_de .PdfObjectDictionary ;if _bbab ,_efedf :=_afac .(*_de .PdfIndirectObject );_efedf {_afabb ,_agbc :=_bbab .PdfObject .(*_de .PdfObjectDictionary );if !_agbc {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fgeca ._bgcb =_bbab ;_abbgg =_afabb ;}else if _gefd ,_cdadf :=_afac .(*_de .PdfObjectDictionary );_cdadf {_abbgg =_gefd ;}else {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adebe ,_ggbcb :=_de .TraceToDirectObject (_abbgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_ggbcb {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _adebe .Len ()!=2{_bc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dddc ,_gegce :=_adebe .ToFloat64Array ();if _gegce !=nil {return nil ,_gegce ;};_fgeca .Domain =_dddc ;_adebe ,_ggbcb =_de .TraceToDirectObject (_abbgg .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if _ggbcb {if _adebe .Len ()< 0||_adebe .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_abgfc ,_edcbc :=_adebe .ToFloat64Array ();if _edcbc !=nil {return nil ,_edcbc ;};_fgeca .Range =_abgfc ;};_adebe ,_ggbcb =_de .TraceToDirectObject (_abbgg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_de .PdfObjectArray );if !_ggbcb {_bc .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fgeca .Functions =[]PdfFunction {};for _ ,_dgdaf :=range _adebe .Elements (){_geebf ,_fbdca :=_gbag (_dgdaf );if _fbdca !=nil {return nil ,_fbdca ;};_fgeca .Functions =append (_fgeca .Functions ,_geebf );};_adebe ,_ggbcb =_de .TraceToDirectObject (_abbgg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_de .PdfObjectArray );if !_ggbcb {_bc .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_afdbe ,_gegce :=_adebe .ToFloat64Array ();if _gegce !=nil {return nil ,_gegce ;};_fgeca .Bounds =_afdbe ;if len (_fgeca .Bounds )!=len (_fgeca .Functions )-1{_bc .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_fgeca .Bounds ),len (_fgeca .Functions ));return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adebe ,_ggbcb =_de .TraceToDirectObject (_abbgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_de .PdfObjectArray );if !_ggbcb {_bc .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bbba ,_gegce :=_adebe .ToFloat64Array ();if _gegce !=nil {return nil ,_gegce ;};_fgeca .Encode =_bbba ;if len (_fgeca .Encode )!=2*len (_fgeca .Functions ){_bc .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_fgeca .Encode ),len (_fgeca .Functions ));return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _fgeca ,nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_gfdc *PdfFont )BaseFont ()string {return _gfdc .baseFields ()._ccbbd };

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_de .PdfObjectStream )(*XObjectImage ,error ){_fgedd :=&XObjectImage {};_fgedd ._afed =stream ;_agba :=*(stream .PdfObjectDictionary );_fbbdb ,_cfefg :=_de .NewEncoderFromStream (stream );if _cfefg !=nil {return nil ,_cfefg ;};_fgedd .Filter =_fbbdb ;if _gegde :=_de .TraceToDirectObject (_agba .Get ("\u0057\u0069\u0064t\u0068"));_gegde !=nil {_ebbd ,_cebae :=_gegde .(*_de .PdfObjectInteger );if !_cebae {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_gfdeg :=int64 (*_ebbd );_fgedd .Width =&_gfdeg ;}else {return nil ,_fe .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _eabgg :=_de .TraceToDirectObject (_agba .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_eabgg !=nil {_fdfee ,_agbgc :=_eabgg .(*_de .PdfObjectInteger );if !_agbgc {return nil ,_fe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ffbaf :=int64 (*_fdfee );_fgedd .Height =&_ffbaf ;}else {return nil ,_fe .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _acceg :=_de .TraceToDirectObject (_agba .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_acceg !=nil {_badba ,_cefc :=NewPdfColorspaceFromPdfObject (_acceg );if _cefc !=nil {return nil ,_cefc ;};_fgedd .ColorSpace =_badba ;}else {_bc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_fgedd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fbcb :=_de .TraceToDirectObject (_agba .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fbcb !=nil {_ceade ,_caacc :=_fbcb .(*_de .PdfObjectInteger );if !_caacc {return nil ,_fe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gbcbc :=int64 (*_ceade );_fgedd .BitsPerComponent =&_gbcbc ;};_fgedd .Intent =_agba .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_fgedd .ImageMask =_agba .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fgedd .Mask =_agba .Get ("\u004d\u0061\u0073\u006b");_fgedd .Decode =_agba .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fgedd .Interpolate =_agba .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_fgedd .Alternatives =_agba .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fgedd .SMask =_agba .Get ("\u0053\u004d\u0061s\u006b");_fgedd .SMaskInData =_agba .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_fgedd .Matte =_agba .Get ("\u004d\u0061\u0074t\u0065");_fgedd .Name =_agba .Get ("\u004e\u0061\u006d\u0065");_fgedd .StructParent =_agba .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fgedd .ID =_agba .Get ("\u0049\u0044");_fgedd .OPI =_agba .Get ("\u004f\u0050\u0049");_fgedd .Metadata =_agba .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fgedd .OC =_agba .Get ("\u004f\u0043");_fgedd .Stream =stream .Stream ;return _fgedd ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_eaaab *PdfSignature )SetLocation (location string ){_eaaab .Location =_de .MakeString (location )};

// B returns the value of the blue component of the color.
func (_ggd *PdfColorDeviceRGB )B ()float64 {return float64 (_ggd [2])};

// Encoder returns the font's text encoder.
func (_bbfa pdfCIDFontType0 )Encoder ()_gb .TextEncoder {return _bbfa ._aadfd };

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_degce *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_degce .NumInputs {_bc .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_fe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _degce ._addae ==nil {_gebf :=_degce .processSamples ();if _gebf !=nil {return nil ,_gebf ;};};_dbcaa :=_degce .Encode ;if _dbcaa ==nil {_dbcaa =[]float64 {};for _caeaf :=0;_caeaf < len (_degce .Size );_caeaf ++{_dbcaa =append (_dbcaa ,0);_dbcaa =append (_dbcaa ,float64 (_degce .Size [_caeaf ]-1));};};_bdaac :=_degce .Decode ;if _bdaac ==nil {_bdaac =_degce .Range ;};_fdeb :=make ([]int ,len (x ));for _cgad :=0;_cgad < len (x );_cgad ++{_aabf :=x [_cgad ];_effgd :=_bgc .Min (_bgc .Max (_aabf ,_degce .Domain [2*_cgad ]),_degce .Domain [2*_cgad +1]);_bdgcd :=_cbd .LinearInterpolate (_effgd ,_degce .Domain [2*_cgad ],_degce .Domain [2*_cgad +1],_dbcaa [2*_cgad ],_dbcaa [2*_cgad +1]);_faffc :=_bgc .Min (_bgc .Max (_bdgcd ,0),float64 (_degce .Size [_cgad ]-1));_bagga :=int (_bgc .Floor (_faffc +0.5));if _bagga < 0{_bagga =0;}else if _bagga > _degce .Size [_cgad ]{_bagga =_degce .Size [_cgad ]-1;};_fdeb [_cgad ]=_bagga ;};_aefef :=_fdeb [0];for _ccag :=1;_ccag < _degce .NumInputs ;_ccag ++{_bcgg :=_fdeb [_ccag ];for _fbed :=0;_fbed < _ccag ;_fbed ++{_bcgg *=_degce .Size [_fbed ];};_aefef +=_bcgg ;};_aefef *=_degce .NumOutputs ;var _ddebc []float64 ;for _fbfgb :=0;_fbfgb < _degce .NumOutputs ;_fbfgb ++{_cgdc :=_aefef +_fbfgb ;if _cgdc >=len (_degce ._addae ){_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_cfdga :=_degce ._addae [_cgdc ];_aggg :=_cbd .LinearInterpolate (float64 (_cfdga ),0,_bgc .Pow (2,float64 (_degce .BitsPerSample )),_bdaac [2*_fbfgb ],_bdaac [2*_fbfgb +1]);_bfbae :=_bgc .Min (_bgc .Max (_aggg ,_degce .Range [2*_fbfgb ]),_degce .Range [2*_fbfgb +1]);_ddebc =append (_ddebc ,_bfbae );};return _ddebc ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bbed *Image )GetSamples ()[]uint32 {_befc :=_bga .ResampleBytes (_bbed .Data ,int (_bbed .BitsPerComponent ));if _bbed .BitsPerComponent < 8{_befc =_bbed .samplesTrimPadding (_befc );};_aebgc :=int (_bbed .Width )*int (_bbed .Height )*_bbed .ColorComponents ;if len (_befc )< _aebgc {_bc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_befc ),_aebgc );return _befc ;}else if len (_befc )> _aebgc {_bc .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_befc ),_aebgc );_befc =_befc [:_aebgc ];};return _befc ;};func _dgcf (_ebgcb *_de .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bbdga :=PdfShadingType1 {};if _bbdbc :=_ebgcb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bbdbc !=nil {_bbdbc =_de .TraceToDirectObject (_bbdbc );_cfebg ,_cgab :=_bbdbc .(*_de .PdfObjectArray );if !_cgab {_bc .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbdbc );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbdga .Domain =_cfebg ;};if _fbgc :=_ebgcb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fbgc !=nil {_fbgc =_de .TraceToDirectObject (_fbgc );_fefbe ,_abcae :=_fbgc .(*_de .PdfObjectArray );if !_abcae {_bc .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbgc );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbdga .Matrix =_fefbe ;};_fbfac :=_ebgcb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbfac ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_bbdga .Function =[]PdfFunction {};if _ffdea ,_gecfg :=_fbfac .(*_de .PdfObjectArray );_gecfg {for _ ,_bbacf :=range _ffdea .Elements (){_afbcb ,_gaecg :=_gbag (_bbacf );if _gaecg !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaecg );return nil ,_gaecg ;};_bbdga .Function =append (_bbdga .Function ,_afbcb );};}else {_fabca ,_abfc :=_gbag (_fbfac );if _abfc !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abfc );return nil ,_abfc ;};_bbdga .Function =append (_bbdga .Function ,_fabca );};return &_bbdga ,nil ;};func _bgcbb (_dedecd *_de .PdfObjectStream )(*PdfFunctionType4 ,error ){_adef :=&PdfFunctionType4 {};_adef ._fabab =_dedecd ;_gbbfg :=_dedecd .PdfObjectDictionary ;_gbfba ,_caef :=_de .TraceToDirectObject (_gbbfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_de .PdfObjectArray );if !_caef {_bc .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gbfba .Len ()%2!=0{_bc .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ffdaa ,_cfege :=_gbfba .ToFloat64Array ();if _cfege !=nil {return nil ,_cfege ;};_adef .Domain =_ffdaa ;_gbfba ,_caef =_de .TraceToDirectObject (_gbbfg .Get ("\u0052\u0061\u006eg\u0065")).(*_de .PdfObjectArray );if _caef {if _gbfba .Len ()< 0||_gbfba .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gdee ,_fege :=_gbfba .ToFloat64Array ();if _fege !=nil {return nil ,_fege ;};_adef .Range =_gdee ;};_dagfa ,_cfege :=_de .DecodeStream (_dedecd );if _cfege !=nil {return nil ,_cfege ;};_adef ._bggf =_dagfa ;_befee :=_cd .NewPSParser ([]byte (_dagfa ));_feadb ,_cfege :=_befee .Parse ();if _cfege !=nil {return nil ,_cfege ;};_adef .Program =_feadb ;return _adef ,nil ;};func (_cfd *PdfReader )newPdfActionNamedFromDict (_aeca *_de .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_aeca .Get ("\u004e")},nil ;};func _dcaf (_daaf *PdfPage )map[_de .PdfObjectName ]_de .PdfObject {_aead :=make (map[_de .PdfObjectName ]_de .PdfObject );if _daaf .Resources ==nil {return _aead ;};if _daaf .Resources .Font !=nil {if _caa ,_gaba :=_de .GetDict (_daaf .Resources .Font );_gaba {for _ ,_edcg :=range _caa .Keys (){_aead [_edcg ]=_caa .Get (_edcg );};};};if _daaf .Resources .ExtGState !=nil {if _bbde ,_bdcf :=_de .GetDict (_daaf .Resources .ExtGState );_bdcf {for _ ,_ddgc :=range _bbde .Keys (){_aead [_ddgc ]=_bbde .Get (_ddgc );};};};if _daaf .Resources .XObject !=nil {if _aeed ,_dffg :=_de .GetDict (_daaf .Resources .XObject );_dffg {for _ ,_bfab :=range _aeed .Keys (){_aead [_bfab ]=_aeed .Get (_bfab );};};};if _daaf .Resources .Pattern !=nil {if _adgb ,_dccd :=_de .GetDict (_daaf .Resources .Pattern );_dccd {for _ ,_ebcd :=range _adgb .Keys (){_aead [_ebcd ]=_adgb .Get (_ebcd );};};};if _daaf .Resources .Shading !=nil {if _fbdff ,_ceeb :=_de .GetDict (_daaf .Resources .Shading );_ceeb {for _ ,_agbg :=range _fbdff .Keys (){_aead [_agbg ]=_fbdff .Get (_agbg );};};};if _daaf .Resources .ProcSet !=nil {if _adge ,_ebb :=_de .GetDict (_daaf .Resources .ProcSet );_ebb {for _ ,_fbcc :=range _adge .Keys (){_aead [_fbcc ]=_adge .Get (_fbcc );};};};if _daaf .Resources .Properties !=nil {if _cegb ,_effd :=_de .GetDict (_daaf .Resources .Properties );_effd {for _ ,_eaf :=range _cegb .Keys (){_aead [_eaf ]=_cegb .Get (_eaf );};};};return _aead ;};func (_cgbc *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_efac *PdfPage )GetContainingPdfObject ()_de .PdfObject {return _efac ._eeea };

// GetSubFilter returns SubFilter value or empty string.
func (_ffdfb *pdfSignDictionary )GetSubFilter ()string {_baee :=_ffdfb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _baee ==nil {return "";};if _ebdcd ,_bdcag :=_de .GetNameVal (_baee );_bdcag {return _ebdcd ;};return "";};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_gbf :=NewPdfAnnotation ();_dbed :=&PdfAnnotationFreeText {};_dbed .PdfAnnotation =_gbf ;_dbed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbf .SetContext (_dbed );return _dbed ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _de .PdfObject ;FontFamily _de .PdfObject ;FontStretch _de .PdfObject ;FontWeight _de .PdfObject ;Flags _de .PdfObject ;FontBBox _de .PdfObject ;ItalicAngle _de .PdfObject ;Ascent _de .PdfObject ;Descent _de .PdfObject ;Leading _de .PdfObject ;CapHeight _de .PdfObject ;XHeight _de .PdfObject ;StemV _de .PdfObject ;StemH _de .PdfObject ;AvgWidth _de .PdfObject ;MaxWidth _de .PdfObject ;MissingWidth _de .PdfObject ;FontFile _de .PdfObject ;FontFile2 _de .PdfObject ;FontFile3 _de .PdfObject ;CharSet _de .PdfObject ;_dgeg int ;_fbeg float64 ;*fontFile ;_cdefg *_eg .TtfType ;

// Additional entries for CIDFonts
Style _de .PdfObject ;Lang _de .PdfObject ;FD _de .PdfObject ;CIDSet _de .PdfObject ;_dffgfa *_de .PdfIndirectObject ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bgbea *PdfPageResources )GetPatternByName (keyName _de .PdfObjectName )(*PdfPattern ,bool ){if _bgbea .Pattern ==nil {return nil ,false ;};_faeab ,_fffd :=_de .TraceToDirectObject (_bgbea .Pattern ).(*_de .PdfObjectDictionary );if !_fffd {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgbea .Pattern );return nil ,false ;};if _agdfc :=_faeab .Get (keyName );_agdfc !=nil {_cdcba ,_ccfeb :=_fbdfe (_agdfc );if _ccfeb !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_ccfeb );return nil ,false ;};return _cdcba ,true ;};return nil ,false ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _de .PdfObject )(_de .PdfObjectName ,error ){var _bgfdb *_de .PdfObjectName ;var _abga *_de .PdfObjectArray ;if _fgac ,_eddcd :=obj .(*_de .PdfIndirectObject );_eddcd {if _dae ,_ebeb :=_fgac .PdfObject .(*_de .PdfObjectArray );_ebeb {_abga =_dae ;}else if _eggf ,_aedee :=_fgac .PdfObject .(*_de .PdfObjectName );_aedee {_bgfdb =_eggf ;};}else if _ccge ,_dcce :=obj .(*_de .PdfObjectArray );_dcce {_abga =_ccge ;}else if _fcffe ,_becee :=obj .(*_de .PdfObjectName );_becee {_bgfdb =_fcffe ;};if _bgfdb !=nil {switch *_bgfdb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bgfdb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bgfdb ,nil ;};};if _abga !=nil &&_abga .Len ()> 0{if _cbace ,_feab :=_abga .Get (0).(*_de .PdfObjectName );_feab {switch *_cbace {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _abga .Len ()==1{return *_cbace ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cbace ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cbace ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cbace ,nil ;};};};return "",nil ;};

// IsCID returns true if the underlying font is CID.
func (_bfdb *PdfFont )IsCID ()bool {return _bfdb .baseFields ().isCIDFont ()};func (_fgcd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _de .PdfObject ;Open _de .PdfObject ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_abcc *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bfaa :=_bga .NewReader (img .getBase ());_ade :=_cbd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cdec :=_bga .NewWriter (_ade );_afgfd :=_bgc .Pow (2,float64 (img .BitsPerComponent ))-1;_ecgaa :=make ([]uint32 ,3);var (_afbbd error ;_eeafe ,_fccc ,_ebedc ,_effb ,_fbfeg ,_agad float64 ;);for {_afbbd =_bfaa .ReadSamples (_ecgaa );if _afbbd ==_gad .EOF {break ;}else if _afbbd !=nil {return img ,_afbbd ;};_eeafe =float64 (_ecgaa [0])/_afgfd ;_fccc =float64 (_ecgaa [1])/_afgfd ;_ebedc =float64 (_ecgaa [2])/_afgfd ;_effb =_abcc .Matrix [0]*_bgc .Pow (_eeafe ,_abcc .Gamma [0])+_abcc .Matrix [3]*_bgc .Pow (_fccc ,_abcc .Gamma [1])+_abcc .Matrix [6]*_bgc .Pow (_ebedc ,_abcc .Gamma [2]);_fbfeg =_abcc .Matrix [1]*_bgc .Pow (_eeafe ,_abcc .Gamma [0])+_abcc .Matrix [4]*_bgc .Pow (_fccc ,_abcc .Gamma [1])+_abcc .Matrix [7]*_bgc .Pow (_ebedc ,_abcc .Gamma [2]);_agad =_abcc .Matrix [2]*_bgc .Pow (_eeafe ,_abcc .Gamma [0])+_abcc .Matrix [5]*_bgc .Pow (_fccc ,_abcc .Gamma [1])+_abcc .Matrix [8]*_bgc .Pow (_ebedc ,_abcc .Gamma [2]);_eeafe =3.240479*_effb +-1.537150*_fbfeg +-0.498535*_agad ;_fccc =-0.969256*_effb +1.875992*_fbfeg +0.041556*_agad ;_ebedc =0.055648*_effb +-0.204043*_fbfeg +1.057311*_agad ;_eeafe =_bgc .Min (_bgc .Max (_eeafe ,0),1.0);_fccc =_bgc .Min (_bgc .Max (_fccc ,0),1.0);_ebedc =_bgc .Min (_bgc .Max (_ebedc ,0),1.0);_ecgaa [0]=uint32 (_eeafe *_afgfd );_ecgaa [1]=uint32 (_fccc *_afgfd );_ecgaa [2]=uint32 (_ebedc *_afgfd );if _afbbd =_cdec .WriteSamples (_ecgaa );_afbbd !=nil {return img ,_afbbd ;};};return _aade (&_ade ),nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_gbcc :=&PdfColorspaceLab {};_gbcc .BlackPoint =[]float64 {0.0,0.0,0.0};_gbcc .Range =[]float64 {-100,100,-100,100};return _gbcc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ccgb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_acdee *PdfWriter )updateObjectNumbers (){_bdce :=_acdee .ObjNumOffset ;_efcgd :=0;for _ ,_bfcfa :=range _acdee ._agfeb {_acaae :=int64 (_efcgd +1+_bdce );_agbe :=true ;if _acdee ._gabdg {if _feacfe ,_gcgd :=_acdee ._degdc [_bfcfa ];_gcgd {_acaae =_feacfe ;_agbe =false ;};};switch _cabaab :=_bfcfa .(type ){case *_de .PdfIndirectObject :_cabaab .ObjectNumber =_acaae ;_cabaab .GenerationNumber =0;case *_de .PdfObjectStream :_cabaab .ObjectNumber =_acaae ;_cabaab .GenerationNumber =0;case *_de .PdfObjectStreams :_cabaab .ObjectNumber =_acaae ;_cabaab .GenerationNumber =0;default:_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cabaab );continue ;};if _agbe {_efcgd ++;};};_gaada :=func (_gbaag _de .PdfObject )int64 {switch _ecgda :=_gbaag .(type ){case *_de .PdfIndirectObject :return _ecgda .ObjectNumber ;case *_de .PdfObjectStream :return _ecgda .ObjectNumber ;case *_de .PdfObjectStreams :return _ecgda .ObjectNumber ;};return 0;};_gef .SliceStable (_acdee ._agfeb ,func (_cggeg ,_dfggd int )bool {return _gaada (_acdee ._agfeb [_cggeg ])< _gaada (_acdee ._agfeb [_dfggd ])});};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_cgca *PdfAnnotationWidget )Field ()*PdfField {return _cgca ._gabc };func _dfab ()_ga .Time {return _gaag };

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fcfcf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fcfcf ._abddd !=nil {return _fcfcf ._abddd ,nil ;};if _fcfcf .ColorSpace ==nil {return nil ,nil ;};_badg ,_gfabe :=_eaage (_fcfcf .ColorSpace );if _gfabe !=nil {return nil ,_gfabe ;};_fcfcf ._abddd =_badg ;return _fcfcf ._abddd ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_acdfd *PdfSignature )bool ;Validate (_aabff *PdfSignature ,_ebbe Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gcfcg *PdfSignature )(Hasher ,error );Sign (_cbgee *PdfSignature ,_efagc Hasher )error ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gfdga *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gfdga .ToPdfOutline ().PdfOutlineTreeNode ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_de .PdfObjectArray ;Matrix *_de .PdfObjectArray ;Function []PdfFunction ;};

// ValidateSignatures validates digital signatures in the document.
func (_bgab *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _bgab .AcroForm ==nil {return nil ,nil ;};if _bgab .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_ddbae *PdfSignature ;_efgde *PdfField ;_baace SignatureHandler ;};var _beaag []*sigFieldPair ;for _ ,_dddfe :=range _bgab .AcroForm .AllFields (){if _dddfe .V ==nil {continue ;};if _cgacb ,_dade :=_de .GetDict (_dddfe .V );_dade {if _ffaga ,_eggc :=_de .GetNameVal (_cgacb .Get ("\u0054\u0079\u0070\u0065"));_eggc &&_ffaga =="\u0053\u0069\u0067"{_acgaa ,_ggfcb :=_de .GetIndirect (_dddfe .V );if !_ggfcb {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_ffad ,_cadeg :=_bgab .newPdfSignatureFromIndirect (_acgaa );if _cadeg !=nil {return nil ,_cadeg ;};var _dcead SignatureHandler ;for _ ,_bbdeg :=range handlers {if _bbdeg .IsApplicable (_ffad ){_dcead =_bbdeg ;break ;};};_beaag =append (_beaag ,&sigFieldPair {_ddbae :_ffad ,_efgde :_dddfe ,_baace :_dcead });};};};var _gbgf []SignatureValidationResult ;for _ ,_gdacb :=range _beaag {_gbcdb :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_gdacb ._efgde }};if _gdacb ._baace ==nil {_gbcdb .Errors =append (_gbcdb .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_gbgf =append (_gbgf ,_gbcdb );continue ;};_ggeec ,_cdefe :=_gdacb ._baace .NewDigest (_gdacb ._ddbae );if _cdefe !=nil {_gbcdb .Errors =append (_gbcdb .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_cdefe .Error ());_gbgf =append (_gbgf ,_gbcdb );continue ;};_acbd :=_gdacb ._ddbae .ByteRange ;if _acbd ==nil {_gbcdb .Errors =append (_gbcdb .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_gbgf =append (_gbgf ,_gbcdb );continue ;};for _dgfb :=0;_dgfb < _acbd .Len ();_dgfb =_dgfb +2{_ecagb ,_ :=_de .GetNumberAsInt64 (_acbd .Get (_dgfb ));_ecebb ,_ :=_de .GetIntVal (_acbd .Get (_dgfb +1));if _ ,_egbg :=_bgab ._dceac .Seek (_ecagb ,_gad .SeekStart );_egbg !=nil {return nil ,_egbg ;};_egdbg :=make ([]byte ,_ecebb );if _ ,_bdbbd :=_bgab ._dceac .Read (_egdbg );_bdbbd !=nil {return nil ,_bdbbd ;};_ggeec .Write (_egdbg );};_dgdga ,_cdefe :=_gdacb ._baace .Validate (_gdacb ._ddbae ,_ggeec );if _cdefe !=nil {return nil ,_cdefe ;};_dgdga .Name =_gdacb ._ddbae .Name .Decoded ();_dgdga .Reason =_gdacb ._ddbae .Reason .Decoded ();if _gdacb ._ddbae .M !=nil {_cdffg ,_eagdg :=NewPdfDate (_gdacb ._ddbae .M .String ());if _eagdg !=nil {_dgdga .Errors =append (_dgdga .Errors ,_eagdg .Error ());continue ;};_dgdga .Date =_cdffg ;};_dgdga .ContactInfo =_gdacb ._ddbae .ContactInfo .Decoded ();_dgdga .Location =_gdacb ._ddbae .Location .Decoded ();_dgdga .Fields =_gbcdb .Fields ;_gbgf =append (_gbgf ,_dgdga );};return _gbgf ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _de .PdfObject ;_bccf []byte ;_ffee *_de .PdfIndirectObject ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ebc :=NewPdfAnnotation ();_fadc :=&PdfAnnotationTrapNet {};_fadc .PdfAnnotation =_ebc ;_ebc .SetContext (_fadc );return _fadc ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cgba :=PdfColorLab {l ,a ,b };return &_cgba };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_eec :=NewPdfAnnotation ();_gde :=&PdfAnnotation3D {};_gde .PdfAnnotation =_eec ;_eec .SetContext (_gde );return _gde ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_dadf :=NewPdfAnnotation ();_gbc :=&PdfAnnotationPopup {};_gbc .PdfAnnotation =_dadf ;_dadf .SetContext (_gbc );return _gbc ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ab .Permissions ;Algorithm EncryptionAlgorithm ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_geg :=NewPdfAnnotation ();_ddd :=&PdfAnnotationWidget {};_ddd .PdfAnnotation =_geg ;_geg .SetContext (_ddd );return _ddd ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fgec *PdfColorspaceCalRGB )ToPdfObject ()_de .PdfObject {_cagc :=&_de .PdfObjectArray {};_cagc .Append (_de .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_adcf :=_de .MakeDict ();if _fgec .WhitePoint !=nil {_abac :=_de .MakeArray (_de .MakeFloat (_fgec .WhitePoint [0]),_de .MakeFloat (_fgec .WhitePoint [1]),_de .MakeFloat (_fgec .WhitePoint [2]));_adcf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_abac );}else {_bc .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _fgec .BlackPoint !=nil {_gfecf :=_de .MakeArray (_de .MakeFloat (_fgec .BlackPoint [0]),_de .MakeFloat (_fgec .BlackPoint [1]),_de .MakeFloat (_fgec .BlackPoint [2]));_adcf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gfecf );};if _fgec .Gamma !=nil {_bgcdb :=_de .MakeArray (_de .MakeFloat (_fgec .Gamma [0]),_de .MakeFloat (_fgec .Gamma [1]),_de .MakeFloat (_fgec .Gamma [2]));_adcf .Set ("\u0047\u0061\u006dm\u0061",_bgcdb );};if _fgec .Matrix !=nil {_ggbf :=_de .MakeArray (_de .MakeFloat (_fgec .Matrix [0]),_de .MakeFloat (_fgec .Matrix [1]),_de .MakeFloat (_fgec .Matrix [2]),_de .MakeFloat (_fgec .Matrix [3]),_de .MakeFloat (_fgec .Matrix [4]),_de .MakeFloat (_fgec .Matrix [5]),_de .MakeFloat (_fgec .Matrix [6]),_de .MakeFloat (_fgec .Matrix [7]),_de .MakeFloat (_fgec .Matrix [8]));_adcf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ggbf );};_cagc .Append (_adcf );if _fgec ._degbc !=nil {_fgec ._degbc .PdfObject =_cagc ;return _fgec ._degbc ;};return _cagc ;};

// ToPdfObject implements interface PdfModel.
func (_ddfb *PdfAnnotationFreeText )ToPdfObject ()_de .PdfObject {_ddfb .PdfAnnotation .ToPdfObject ();_ada :=_ddfb ._afa ;_eab :=_ada .PdfObject .(*_de .PdfObjectDictionary );_ddfb .PdfAnnotationMarkup .appendToPdfDictionary (_eab );_eab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_eab .SetIfNotNil ("\u0044\u0041",_ddfb .DA );_eab .SetIfNotNil ("\u0051",_ddfb .Q );_eab .SetIfNotNil ("\u0052\u0043",_ddfb .RC );_eab .SetIfNotNil ("\u0044\u0053",_ddfb .DS );_eab .SetIfNotNil ("\u0043\u004c",_ddfb .CL );_eab .SetIfNotNil ("\u0049\u0054",_ddfb .IT );_eab .SetIfNotNil ("\u0042\u0045",_ddfb .BE );_eab .SetIfNotNil ("\u0052\u0044",_ddfb .RD );_eab .SetIfNotNil ("\u0042\u0053",_ddfb .BS );_eab .SetIfNotNil ("\u004c\u0045",_ddfb .LE );return _ada ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dedbg *PdfShadingType1 )ToPdfObject ()_de .PdfObject {_dedbg .PdfShading .ToPdfObject ();_cdbfa ,_cdedc :=_dedbg .getShadingDict ();if _cdedc !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dedbg .Domain !=nil {_cdbfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dedbg .Domain );};if _dedbg .Matrix !=nil {_cdbfa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dedbg .Matrix );};if _dedbg .Function !=nil {if len (_dedbg .Function )==1{_cdbfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dedbg .Function [0].ToPdfObject ());}else {_gfgag :=_de .MakeArray ();for _ ,_edeef :=range _dedbg .Function {_gfgag .Append (_edeef .ToPdfObject ());};_cdbfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfgag );};};return _dedbg ._daegc ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ceg :=NewPdfAnnotation ();_bcd :=&PdfAnnotationWatermark {};_bcd .PdfAnnotation =_ceg ;_ceg .SetContext (_bcd );return _bcd ;};func (_afae *PdfReader )newPdfAnnotationWatermarkFromDict (_bgg *_de .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bgca :=PdfAnnotationWatermark {};_bgca .FixedPrint =_bgg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bgca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eagb *PdfAnnotationInk )ToPdfObject ()_de .PdfObject {_eagb .PdfAnnotation .ToPdfObject ();_fgdag :=_eagb ._afa ;_abba :=_fgdag .PdfObject .(*_de .PdfObjectDictionary );_eagb .PdfAnnotationMarkup .appendToPdfDictionary (_abba );_abba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0049\u006e\u006b"));_abba .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_eagb .InkList );_abba .SetIfNotNil ("\u0042\u0053",_eagb .BS );return _fgdag ;};

// SetReason sets the `Reason` field of the signature.
func (_gfgb *PdfSignature )SetReason (reason string ){_gfgb .Reason =_de .MakeString (reason )};

// SetContentStream sets the pattern cell's content stream.
func (_gdgc *PdfTilingPattern )SetContentStream (content []byte ,encoder _de .StreamEncoder )error {_acece ,_gffg :=_gdgc ._addd .(*_de .PdfObjectStream );if !_gffg {_bc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdgc ._addd );return _de .ErrTypeError ;};if encoder ==nil {encoder =_de .NewRawEncoder ();};_fdccg :=_acece .PdfObjectDictionary ;_fecda :=encoder .MakeStreamDict ();_fdccg .Merge (_fecda );_adbef ,_deded :=encoder .EncodeBytes (content );if _deded !=nil {return _deded ;};_fdccg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_adbef ))));_acece .Stream =[]byte (_adbef );return nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_eegccg *XObjectForm )GetContainingPdfObject ()_de .PdfObject {return _eegccg ._fecdfb };

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_afdgb *PdfReader )PageFromIndirectObject (ind *_de .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_afdgb .PageList )!=len (_afdgb ._bagea ){return nil ,0,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _efage ,_beag :=range _afdgb ._bagea {if _beag ==ind {return _afdgb .PageList [_efage ],_efage +1,nil ;};};return nil ,0,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetContainingPdfObject implements interface PdfModel.
func (_gc *PdfAction )GetContainingPdfObject ()_de .PdfObject {return _gc ._cg };

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fbbae int64 ;_ddfea int64 ;_eafcb int64 ;_gdgba int64 ;_eegg int64 ;_dagfd int64 ;_afcfc byte ;_efdc int64 ;_bgcag int64 ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_bbga *PdfReader )GetOCProperties ()(_de .PdfObject ,error ){_febag :=_bbga ._effaa ;_bdec :=_febag .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bdec =_de .ResolveReference (_bdec );if !_bbga ._daceb {_aacf :=_bbga .traverseObjectData (_bdec );if _aacf !=nil {return nil ,_aacf ;};};return _bdec ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_agcc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eecb :=vals [0];_eccb :=[]float64 {_eecb };_acfgdb ,_cfcc :=_agcc .TintTransform .Evaluate (_eccb );if _cfcc !=nil {_bc .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cfcc );_bc .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_agcc .TintTransform );return nil ,_cfcc ;};_bc .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_acfgdb ,_agcc .AlternateSpace );_aeaa ,_cfcc :=_agcc .AlternateSpace .ColorFromFloats (_acfgdb );if _cfcc !=nil {_bc .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cfcc );return nil ,_cfcc ;};return _aeaa ,nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_beead *PdfPageResources )AddExtGState (gsName _de .PdfObjectName ,gsDict _de .PdfObject )error {if _beead .ExtGState ==nil {_beead .ExtGState =_de .MakeDict ();};_gefe :=_beead .ExtGState ;_fdgdc ,_bfcea :=_de .TraceToDirectObject (_gefe ).(*_de .PdfObjectDictionary );if !_bfcea {_bc .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_gefe ,_de .TraceToDirectObject (_gefe ));return _de .ErrTypeError ;};_fdgdc .Set (gsName ,gsDict );return nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_eacdg *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _de .PdfObject ;AN _de .PdfObject ;OP _de .PdfObject ;JS _de .PdfObject ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_geadd :=&XObjectImage {};_fcfgg :=&_de .PdfObjectStream {};_fcfgg .PdfObjectDictionary =_de .MakeDict ();_geadd ._afed =_fcfgg ;return _geadd ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _de .PdfObject ;NewWindow _de .PdfObject ;};func _afgfdd (_acgad *_de .PdfIndirectObject )(*PdfOutline ,error ){_daeb ,_aacda :=_acgad .PdfObject .(*_de .PdfObjectDictionary );if !_aacda {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ccfd :=NewPdfOutline ();if _dddd :=_daeb .Get ("\u0054\u0079\u0070\u0065");_dddd !=nil {_gagca ,_eegf :=_dddd .(*_de .PdfObjectName );if _eegf {if *_gagca !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gagca );};};};if _dffff :=_daeb .Get ("\u0043\u006f\u0075n\u0074");_dffff !=nil {_cgag ,_gbgaf :=_de .GetNumberAsInt64 (_dffff );if _gbgaf !=nil {return nil ,_gbgaf ;};_ccfd .Count =&_cgag ;};return _ccfd ,nil ;};func (_gdge *PdfReader )newPdfAnnotationPolyLineFromDict (_dgcg *_de .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_edbee :=PdfAnnotationPolyLine {};_aadb ,_agde :=_gdge .newPdfAnnotationMarkupFromDict (_dgcg );if _agde !=nil {return nil ,_agde ;};_edbee .PdfAnnotationMarkup =_aadb ;_edbee .Vertices =_dgcg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_edbee .LE =_dgcg .Get ("\u004c\u0045");_edbee .BS =_dgcg .Get ("\u0042\u0053");_edbee .IC =_dgcg .Get ("\u0049\u0043");_edbee .BE =_dgcg .Get ("\u0042\u0045");_edbee .IT =_dgcg .Get ("\u0049\u0054");_edbee .Measure =_dgcg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_edbee ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bgeff *PdfShading )GetContainingPdfObject ()_de .PdfObject {return _bgeff ._daegc };

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cfdag =keywords };

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _de .PdfObject ;ColorSpace _de .PdfObject ;Pattern _de .PdfObject ;Shading _de .PdfObject ;XObject _de .PdfObject ;Font _de .PdfObject ;ProcSet _de .PdfObject ;Properties _de .PdfObject ;_fccd *_de .PdfObjectDictionary ;_abddd *PdfPageResourcesColorspaces ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bcfed *PdfReader )IsEncrypted ()(bool ,error ){return _bcfed ._fabda .IsEncrypted ()};func (_cfgf *PdfReader )newPdfAnnotationWidgetFromDict (_aabg *_de .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dcda :=PdfAnnotationWidget {};_dcda .H =_aabg .Get ("\u0048");_dcda .MK =_aabg .Get ("\u004d\u004b");_dcda .A =_aabg .Get ("\u0041");_dcda .AA =_aabg .Get ("\u0041\u0041");_dcda .BS =_aabg .Get ("\u0042\u0053");_dcda .Parent =_aabg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dcda ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_gegff *PdfReader )Inspect ()(map[string ]int ,error ){return _gegff ._fabda .Inspect ()};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _de .PdfObject ;LE _de .PdfObject ;BS _de .PdfObject ;IC _de .PdfObject ;BE _de .PdfObject ;IT _de .PdfObject ;Measure _de .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ddf *PdfActionGoToR )ToPdfObject ()_de .PdfObject {_ddf .PdfAction .ToPdfObject ();_ca :=_ddf ._cg ;_dad :=_ca .PdfObject .(*_de .PdfObjectDictionary );_dad .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoToR )));if _ddf .F !=nil {_dad .Set ("\u0046",_ddf .F .ToPdfObject ());};_dad .SetIfNotNil ("\u0044",_ddf .D );_dad .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ddf .NewWindow );return _ca ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fgfbg *PdfShadingType4 )ToPdfObject ()_de .PdfObject {_fgfbg .PdfShading .ToPdfObject ();_bacdd ,_fgegd :=_fgfbg .getShadingDict ();if _fgegd !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fgfbg .BitsPerCoordinate !=nil {_bacdd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fgfbg .BitsPerCoordinate );};if _fgfbg .BitsPerComponent !=nil {_bacdd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fgfbg .BitsPerComponent );};if _fgfbg .BitsPerFlag !=nil {_bacdd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fgfbg .BitsPerFlag );};if _fgfbg .Decode !=nil {_bacdd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fgfbg .Decode );};if _fgfbg .Function !=nil {if len (_fgfbg .Function )==1{_bacdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fgfbg .Function [0].ToPdfObject ());}else {_dcgg :=_de .MakeArray ();for _ ,_fggg :=range _fgfbg .Function {_dcgg .Append (_fggg .ToPdfObject ());};_bacdd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcgg );};};return _fgfbg ._daegc ;};func _fbdfe (_ccab _de .PdfObject )(*PdfPattern ,error ){_abdd :=&PdfPattern {};var _aeag *_de .PdfObjectDictionary ;if _gdeda ,_cdfg :=_de .GetIndirect (_ccab );_cdfg {_abdd ._addd =_gdeda ;_bdeg ,_ggdg :=_gdeda .PdfObject .(*_de .PdfObjectDictionary );if !_ggdg {_bc .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_gdeda .PdfObject );return nil ,_de .ErrTypeError ;};_aeag =_bdeg ;}else if _dbceb ,_agbba :=_de .GetStream (_ccab );_agbba {_abdd ._addd =_dbceb ;_aeag =_dbceb .PdfObjectDictionary ;}else {_bc .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ccab );return nil ,_de .ErrTypeError ;};_gcfe :=_aeag .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _gcfe ==nil {_bc .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_bcff ,_badc :=_gcfe .(*_de .PdfObjectInteger );if !_badc {_bc .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gcfe );return nil ,_de .ErrTypeError ;};if *_bcff !=1&&*_bcff !=2{_bc .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_bcff );return nil ,_de .ErrRangeError ;};_abdd .PatternType =int64 (*_bcff );switch *_bcff {case 1:_bbddg ,_ecbde :=_cdcg (_aeag );if _ecbde !=nil {return nil ,_ecbde ;};_bbddg .PdfPattern =_abdd ;_abdd ._acgdg =_bbddg ;return _abdd ,nil ;case 2:_baece ,_babgbd :=_faaf (_aeag );if _babgbd !=nil {return nil ,_babgbd ;};_baece .PdfPattern =_abdd ;_abdd ._acgdg =_baece ;return _abdd ,nil ;};return nil ,_fe .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ToPdfObject implements interface PdfModel.
func (_caec *PdfActionTrans )ToPdfObject ()_de .PdfObject {_caec .PdfAction .ToPdfObject ();_egg :=_caec ._cg ;_cgc :=_egg .PdfObject .(*_de .PdfObjectDictionary );_cgc .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeTrans )));_cgc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_caec .Trans );return _egg ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cdbg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cdbg .AlternateSpace ==nil {return nil ,_fe .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _cdbg .AlternateSpace .ColorToRGB (color );};func (_gfgc *PdfReader )resolveReference (_aeac *_de .PdfObjectReference )(_de .PdfObject ,bool ,error ){_bdbb ,_ebaddc :=_gfgc ._fabda .ObjCache [int (_aeac .ObjectNumber )];if !_ebaddc {_bc .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_aeac );_eedae ,_eaaad :=_gfgc ._fabda .LookupByReference (*_aeac );if _eaaad !=nil {return nil ,false ,_eaaad ;};_gfgc ._fabda .ObjCache [int (_aeac .ObjectNumber )]=_eedae ;return _eedae ,false ,nil ;};return _bdbb ,true ,nil ;};func _fec (_dcgc _de .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bc .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dcgc .String (),_dcgc );_dcaa :=NewPdfColorspaceSpecialPattern ();if _gdbb ,_efdg :=_dcgc .(*_de .PdfIndirectObject );_efdg {_dcaa ._efbd =_gdbb ;};_dcgc =_de .TraceToDirectObject (_dcgc );if _eedbd ,_fcdf :=_dcgc .(*_de .PdfObjectName );_fcdf {if *_eedbd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _dcaa ,nil ;};_eebfb ,_bgcdc :=_dcgc .(*_de .PdfObjectArray );if !_bgcdc {_bc .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dcgc );return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _eebfb .Len ()!=1&&_eebfb .Len ()!=2{_bc .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_eebfb );return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dcgc =_eebfb .Get (0);if _efbe ,_dggb :=_dcgc .(*_de .PdfObjectName );_dggb {if *_efbe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bc .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_efbe );return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _eebfb .Len ()> 1{_dcgc =_eebfb .Get (1);_dcgc =_de .TraceToDirectObject (_dcgc );_babgb ,_bgef :=NewPdfColorspaceFromPdfObject (_dcgc );if _bgef !=nil {return nil ,_bgef ;};_dcaa .UnderlyingCS =_babgb ;};_bc .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dcaa .UnderlyingCS );return _dcaa ,nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_gabf :=PdfColorDeviceRGB {r ,g ,b };return &_gabf ;};

// ToPdfObject implements interface PdfModel.
func (_dbd *PdfActionResetForm )ToPdfObject ()_de .PdfObject {_dbd .PdfAction .ToPdfObject ();_aae :=_dbd ._cg ;_abc :=_aae .PdfObject .(*_de .PdfObjectDictionary );_abc .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeResetForm )));_abc .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dbd .Fields );_abc .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dbd .Flags );return _aae ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_aceb *XObjectImage )GetContainingPdfObject ()_de .PdfObject {return _aceb ._afed };func _dcefe (_bbfca _de .PdfObject )(*PdfColorspaceLab ,error ){_ebadd :=NewPdfColorspaceLab ();if _fcfdfa ,_ggbe :=_bbfca .(*_de .PdfIndirectObject );_ggbe {_ebadd ._dgba =_fcfdfa ;};_bbfca =_de .TraceToDirectObject (_bbfca );_fcca ,_ecbg :=_bbfca .(*_de .PdfObjectArray );if !_ecbg {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fcca .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_bbfca =_de .TraceToDirectObject (_fcca .Get (0));_ffbfb ,_ecbg :=_bbfca .(*_de .PdfObjectName );if !_ecbg {return nil ,_d .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_ffbfb !="\u004c\u0061\u0062"{return nil ,_d .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bbfca =_de .TraceToDirectObject (_fcca .Get (1));_ddeg ,_ecbg :=_bbfca .(*_de .PdfObjectDictionary );if !_ecbg {return nil ,_d .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_bbfca =_ddeg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bbfca =_de .TraceToDirectObject (_bbfca );_bgfge ,_ecbg :=_bbfca .(*_de .PdfObjectArray );if !_ecbg {return nil ,_d .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _bgfge .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gdaf ,_bfad :=_bgfge .GetAsFloat64Slice ();if _bfad !=nil {return nil ,_bfad ;};_ebadd .WhitePoint =_gdaf ;_bbfca =_ddeg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bbfca !=nil {_bbfca =_de .TraceToDirectObject (_bbfca );_dega ,_ccgbb :=_bbfca .(*_de .PdfObjectArray );if !_ccgbb {return nil ,_d .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dega .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gcfc ,_deed :=_dega .GetAsFloat64Slice ();if _deed !=nil {return nil ,_deed ;};_ebadd .BlackPoint =_gcfc ;};_bbfca =_ddeg .Get ("\u0052\u0061\u006eg\u0065");if _bbfca !=nil {_bbfca =_de .TraceToDirectObject (_bbfca );_dggf ,_ddgb :=_bbfca .(*_de .PdfObjectArray );if !_ddgb {_bc .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dggf .Len ()!=4{_bc .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ggab ,_bdbd :=_dggf .GetAsFloat64Slice ();if _bdbd !=nil {return nil ,_bdbd ;};_ebadd .Range =_ggab ;};return _ebadd ,nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_bbgc *Image )Resample (targetBitsPerComponent int64 ){if _bbgc .BitsPerComponent ==targetBitsPerComponent {return ;};_fbdcg :=_bbgc .GetSamples ();if targetBitsPerComponent < _bbgc .BitsPerComponent {_dfgead :=_bbgc .BitsPerComponent -targetBitsPerComponent ;for _abeg :=range _fbdcg {_fbdcg [_abeg ]>>=uint (_dfgead );};}else if targetBitsPerComponent > _bbgc .BitsPerComponent {_bdfd :=targetBitsPerComponent -_bbgc .BitsPerComponent ;for _eagc :=range _fbdcg {_fbdcg [_eagc ]<<=uint (_bdfd );};};_bbgc .BitsPerComponent =targetBitsPerComponent ;if _bbgc .BitsPerComponent < 8{_bbgc .resampleLowBits (_fbdcg );return ;};_gdbe :=_cbd .BytesPerLine (int (_bbgc .Width ),int (_bbgc .BitsPerComponent ),_bbgc .ColorComponents );_gcace :=make ([]byte ,_gdbe *int (_bbgc .Height ));var (_ccbdf ,_ebagf ,_abbb ,_ccaae int ;_fbecbg uint32 ;);for _abbb =0;_abbb < int (_bbgc .Height );_abbb ++{_ccbdf =_abbb *_gdbe ;_ebagf =(_abbb +1)*_gdbe -1;_bcecf :=_bga .ResampleUint32 (_fbdcg [_ccbdf :_ebagf ],int (targetBitsPerComponent ),8);for _ccaae ,_fbecbg =range _bcecf {_gcace [_ccaae +_ccbdf ]=byte (_fbecbg );};};_bbgc .Data =_gcace ;};func _cgebc (_begcb *PdfField )[]*PdfField {_agfg :=[]*PdfField {_begcb };for _ ,_gdebg :=range _begcb .Kids {_agfg =append (_agfg ,_cgebc (_gdebg )...);};return _agfg ;};func (_dgbab *pdfFontType0 )bytesToCharcodes (_adgbd []byte )([]_gb .CharCode ,bool ){if _dgbab ._dbae ==nil {return nil ,false ;};_bdab ,_bcbdb :=_dgbab ._dbae .BytesToCharcodes (_adgbd );if !_bcbdb {return nil ,false ;};_cebag :=make ([]_gb .CharCode ,len (_bdab ));for _bebbg ,_eadb :=range _bdab {_cebag [_bebbg ]=_gb .CharCode (_eadb );};return _cebag ,true ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject returns the PDF representation of the outline tree node.
func (_aaaa *PdfOutlineTreeNode )ToPdfObject ()_de .PdfObject {return _aaaa .GetContext ().ToPdfObject ()};func _efad (_ceedc []byte )bool {if len (_ceedc )< 4{return true ;};for _fagc :=range _ceedc [:4]{_eggfe :=rune (_fagc );if !_fg .Is (_fg .ASCII_Hex_Digit ,_eggfe )&&!_fg .IsSpace (_eggfe ){return true ;};};return false ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_dfcgf *PdfPageResources )GetXObjectByName (keyName _de .PdfObjectName )(*_de .PdfObjectStream ,XObjectType ){if _dfcgf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bdgca ,_dbdbf :=_de .TraceToDirectObject (_dfcgf .XObject ).(*_de .PdfObjectDictionary );if !_dbdbf {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_de .TraceToDirectObject (_dfcgf .XObject ));return nil ,XObjectTypeUndefined ;};if _eegeea :=_bdgca .Get (keyName );_eegeea !=nil {_caeab ,_aaded :=_de .GetStream (_eegeea );if !_aaded {_bc .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_eegeea );return nil ,XObjectTypeUndefined ;};_fefgf :=_caeab .PdfObjectDictionary ;_dafgf ,_aaded :=_de .TraceToDirectObject (_fefgf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_de .PdfObjectName );if !_aaded {_bc .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fefgf .String ());return nil ,XObjectTypeUndefined ;};if *_dafgf =="\u0049\u006d\u0061g\u0065"{return _caeab ,XObjectTypeImage ;}else if *_dafgf =="\u0046\u006f\u0072\u006d"{return _caeab ,XObjectTypeForm ;}else if *_dafgf =="\u0050\u0053"{return _caeab ,XObjectTypePS ;}else {_bc .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dafgf );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_dccef :=PdfPage {};_dccef ._dgdcb =_de .MakeDict ();_dccef .Resources =NewPdfPageResources ();_aeaf :=_de .PdfIndirectObject {};_aeaf .PdfObject =_dccef ._dgdcb ;_dccef ._eeea =&_aeaf ;return &_dccef ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gafg *PdfPage )ToPdfObject ()_de .PdfObject {_gbeeg :=_gafg ._eeea ;_gafg .GetPageDict ();return _gbeeg ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_acgc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_defe *PdfAction )GetContext ()PdfModel {if _defe ==nil {return nil ;};return _defe ._def ;};func (_aegd *PdfFilespec )getDict ()*_de .PdfObjectDictionary {if _dadgd ,_aadf :=_aegd ._eddg .(*_de .PdfIndirectObject );_aadf {_dcca ,_ffbc :=_dadgd .PdfObject .(*_de .PdfObjectDictionary );if !_ffbc {return nil ;};return _dcca ;}else if _ccbf ,_cbagc :=_aegd ._eddg .(*_de .PdfObjectDictionary );_cbagc {return _ccbf ;}else {_bc .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_aegd ._eddg );return nil ;};};func (_dbba *fontFile )parseASCIIPart (_bgefd []byte )error {if len (_bgefd )< 2||string (_bgefd [:2])!="\u0025\u0021"{return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_fdcbf ,_fbaef ,_dbgdd :=_gbdc (_bgefd );if _dbgdd !=nil {return _dbgdd ;};_edfa :=_gfedf (_fdcbf );_dbba ._geecf =_edfa ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dbba ._geecf ==""{_bc .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _fbaef !=""{_dbefc ,_afab :=_cgeb (_fbaef );if _afab !=nil {return _afab ;};_gdeg ,_afab :=_gb .NewCustomSimpleTextEncoder (_dbefc ,nil );if _afab !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_afab );return nil ;};_dbba ._cfaaa =_gdeg ;};return nil ;};func _gbag (_cafgc _de .PdfObject )(PdfFunction ,error ){_cafgc =_de .ResolveReference (_cafgc );if _edgd ,_gccc :=_cafgc .(*_de .PdfObjectStream );_gccc {_ddegf :=_edgd .PdfObjectDictionary ;_dcbb ,_bcbab :=_ddegf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_de .PdfObjectInteger );if !_bcbab {_bc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dcbb ==0{return _gbcee (_edgd );}else if *_dcbb ==4{return _bgcbb (_edgd );}else {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _edgg ,_dgad :=_cafgc .(*_de .PdfIndirectObject );_dgad {_dfbaa ,_gcgfa :=_edgg .PdfObject .(*_de .PdfObjectDictionary );if !_gcgfa {_bc .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_aadbf ,_gcgfa :=_dfbaa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_de .PdfObjectInteger );if !_gcgfa {_bc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_aadbf ==2{return _edaf (_edgg );}else if *_aadbf ==3{return _acgfc (_edgg );}else {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _abeed ,_faggfe :=_cafgc .(*_de .PdfObjectDictionary );_faggfe {_dgbfd ,_bdac :=_abeed .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_de .PdfObjectInteger );if !_bdac {_bc .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dgbfd ==2{return _edaf (_abeed );}else if *_dgbfd ==3{return _acgfc (_abeed );}else {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bc .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_cafgc );return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func (_bgfb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bgfb .fontCommon };var _ pdfFont =(*pdfFontType0 )(nil );

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_gagf *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if _gagf .Alternate ==nil {if _gagf .N ==1{_gabe :=NewPdfColorspaceDeviceGray ();return _gabe .ColorFromPdfObjects (objects );}else if _gagf .N ==3{_dacb :=NewPdfColorspaceDeviceRGB ();return _dacb .ColorFromPdfObjects (objects );}else if _gagf .N ==4{_gagce :=NewPdfColorspaceDeviceCMYK ();return _gagce .ColorFromPdfObjects (objects );}else {return nil ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gagf .Alternate .ColorFromPdfObjects (objects );};func (_agcgd *PdfWriter )writeString (_efcd string ){if _agcgd ._ddabg !=nil {return ;};_cccbee ,_fgaccf :=_agcgd ._aagbea .WriteString (_efcd );_agcgd ._fceed +=int64 (_cccbee );_agcgd ._ddabg =_fgaccf ;};func _gdcaa (_fdbg _de .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_edda :=&PdfColorspaceDeviceNAttributes {};var _dbge *_de .PdfObjectDictionary ;if _ccaa ,_ffaea :=_fdbg .(*_de .PdfIndirectObject );_ffaea {_edda ._daec =_ccaa ;var _daac bool ;_dbge ,_daac =_ccaa .PdfObject .(*_de .PdfObjectDictionary );if !_daac {_bc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _adea ,_becb :=_fdbg .(*_de .PdfObjectDictionary );_becb {_dbge =_adea ;}else {_bc .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgea :=_dbge .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dgea !=nil {_dcfc ,_defeac :=_de .TraceToDirectObject (_dgea ).(*_de .PdfObjectName );if !_defeac {_bc .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_edda .Subtype =_dcfc ;};if _deba :=_dbge .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_deba !=nil {_edda .Colorants =_deba ;};if _ffcf :=_dbge .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_ffcf !=nil {_edda .Process =_ffcf ;};if _cfbg :=_dbge .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_cfbg !=nil {_edda .MixingHints =_cfbg ;};return _edda ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_dgbc byte )byte ;func (_fbaf *PdfReader )newPdfAnnotationPopupFromDict (_accg *_de .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_ddfc :=PdfAnnotationPopup {};_ddfc .Parent =_accg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_ddfc .Open =_accg .Get ("\u004f\u0070\u0065\u006e");return &_ddfc ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ggeg *PdfColorspaceLab )GetNumComponents ()int {return 3};var _bdaaa ="";

// A returns the value of the A component of the color.
func (_aebc *PdfColorLab )A ()float64 {return float64 (_aebc [1])};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_accd DefaultImageHandler )NewGrayImageFromGoImage (goimg _a .Image )(*Image ,error ){_baffa :=goimg .Bounds ();_gfcbe :=&Image {Width :int64 (_baffa .Dx ()),Height :int64 (_baffa .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ffed :=goimg .(type ){case *_a .Gray :if len (_ffed .Pix )!=_baffa .Dx ()*_baffa .Dy (){_acgd ,_bccec :=_cbd .GrayConverter .Convert (goimg );if _bccec !=nil {return nil ,_bccec ;};_gfcbe .Data =_acgd .Pix ();}else {_gfcbe .Data =_ffed .Pix ;};case *_a .Gray16 :_gfcbe .BitsPerComponent =16;if len (_ffed .Pix )!=_baffa .Dx ()*_baffa .Dy ()*2{_bdde ,_cafbb :=_cbd .Gray16Converter .Convert (goimg );if _cafbb !=nil {return nil ,_cafbb ;};_gfcbe .Data =_bdde .Pix ();}else {_gfcbe .Data =_ffed .Pix ;};default:_dfbgd ,_gfega :=_cbd .GrayConverter .Convert (goimg );if _gfega !=nil {return nil ,_gfega ;};_gfcbe .Data =_dfbgd .Pix ();};return _gfcbe ,nil ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ecgb *PdfAcroForm )ToPdfObject ()_de .PdfObject {_gdac :=_ecgb ._efgef ;_ffeab :=_gdac .PdfObject .(*_de .PdfObjectDictionary );if _ecgb .Fields !=nil {_cfded :=_de .PdfObjectArray {};for _ ,_fdbf :=range *_ecgb .Fields {_ffgac :=_fdbf .GetContext ();if _ffgac !=nil {_cfded .Append (_ffgac .ToPdfObject ());}else {_cfded .Append (_fdbf .ToPdfObject ());};};_ffeab .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_cfded );};if _ecgb .NeedAppearances !=nil {_ffeab .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ecgb .NeedAppearances );};if _ecgb .SigFlags !=nil {_ffeab .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ecgb .SigFlags );};if _ecgb .CO !=nil {_ffeab .Set ("\u0043\u004f",_ecgb .CO );};if _ecgb .DR !=nil {_ffeab .Set ("\u0044\u0052",_ecgb .DR .ToPdfObject ());};if _ecgb .DA !=nil {_ffeab .Set ("\u0044\u0041",_ecgb .DA );};if _ecgb .Q !=nil {_ffeab .Set ("\u0051",_ecgb .Q );};if _ecgb .XFA !=nil {_ffeab .Set ("\u0058\u0046\u0041",_ecgb .XFA );};return _gdac ;};func (_dbdfg *pdfFontSimple )addEncoding ()error {var (_cdeda string ;_cfaad map[_gb .CharCode ]_gb .GlyphName ;_egfee _gb .SimpleEncoder ;);if _dbdfg .Encoder ()!=nil {_eegeb ,_fcdc :=_dbdfg .Encoder ().(_gb .SimpleEncoder );if _fcdc &&_eegeb !=nil {_cdeda =_eegeb .BaseName ();};};if _dbdfg .Encoding !=nil {_dbdd ,_eddge ,_dddgb :=_dbdfg .getFontEncoding ();if _dddgb !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbdfg ._ccbbd ,_dbdfg ._fagbeb ,_dbdfg .Encoding ,_dbdfg .Encoding ,_dddgb );return _dddgb ;};if _dbdd !=""{_cdeda =_dbdd ;};_egfee ,_dddgb =_gb .NewSimpleTextEncoder (_cdeda ,_eddge );if _dddgb !=nil {return _dddgb ;};};if _egfee ==nil {_fdgb :=_dbdfg ._aceg ;if _fdgb !=nil {switch _dbdfg ._fagbeb {case "\u0054\u0079\u0070e\u0031":if _fdgb .fontFile !=nil &&_fdgb .fontFile ._cfaaa !=nil {_bc .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_egfee =_fdgb .fontFile ._cfaaa ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fdgb ._cdefg !=nil {_bc .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ccfg ,_gffac :=_fdgb ._cdefg .MakeEncoder ();if _gffac ==nil {_egfee =_ccfg ;};};};};};if _egfee !=nil {if _cfaad !=nil {_bc .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cfaad ,_dbdfg .baseFields ());_egfee =_gb .ApplyDifferences (_egfee ,_cfaad );};_dbdfg .SetEncoder (_egfee );};return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_geadg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfcd ,_ebfb :=_de .GetNumbersAsFloat (objects );if _ebfb !=nil {return nil ,_ebfb ;};return _geadg .ColorFromFloats (_gfcd );};

// SetDate sets the `M` field of the signature.
func (_gbeec *PdfSignature )SetDate (date _ga .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gbeec .M =_de .MakeString (date .Format (format ));};func (_bcf *PdfReader )newPdfActionLaunchFromDict (_fag *_de .PdfObjectDictionary )(*PdfActionLaunch ,error ){_feaf ,_baa :=_fab (_fag .Get ("\u0046"));if _baa !=nil {return nil ,_baa ;};return &PdfActionLaunch {Win :_fag .Get ("\u0057\u0069\u006e"),Mac :_fag .Get ("\u004d\u0061\u0063"),Unix :_fag .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fag .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_feaf },nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bgbc *PdfAnnotation )ToPdfObject ()_de .PdfObject {_beace :=_bgbc ._afa ;_bccg :=_beace .PdfObject .(*_de .PdfObjectDictionary );_bccg .Clear ();_bccg .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0041\u006e\u006eo\u0074"));_bccg .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bgbc .Rect );_bccg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bgbc .Contents );_bccg .SetIfNotNil ("\u0050",_bgbc .P );_bccg .SetIfNotNil ("\u004e\u004d",_bgbc .NM );_bccg .SetIfNotNil ("\u004d",_bgbc .M );_bccg .SetIfNotNil ("\u0046",_bgbc .F );_bccg .SetIfNotNil ("\u0041\u0050",_bgbc .AP );_bccg .SetIfNotNil ("\u0041\u0053",_bgbc .AS );_bccg .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bgbc .Border );_bccg .SetIfNotNil ("\u0043",_bgbc .C );_bccg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bgbc .StructParent );_bccg .SetIfNotNil ("\u004f\u0043",_bgbc .OC );return _beace ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dfed *PdfField )FullName ()(string ,error ){var _dcdee _gd .Buffer ;if _dfed .T ==nil {return _dcdee .String (),_fe .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ccfea :=[]string {_dfed .T .Decoded ()};_dcec :=map[*PdfField ]bool {};_dcec [_dfed ]=true ;_bgaae :=_dfed .Parent ;for _bgaae !=nil {if _ ,_ceaf :=_dcec [_bgaae ];_ceaf {return _dcdee .String (),_fe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bgaae .T ==nil {return _dcdee .String (),_fe .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ccfea =append (_ccfea ,_bgaae .T .Decoded ());_dcec [_bgaae ]=true ;_bgaae =_bgaae .Parent ;};for _adaba :=len (_ccfea )-1;_adaba >=0;_adaba --{_dcdee .WriteString (_ccfea [_adaba ]);if _adaba > 0{_dcdee .WriteString ("\u002e");};};return _dcdee .String (),nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _de .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_de .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_feadc ,_dcgge :=encoder .EncodeBytes (img .Data );if _dcgge !=nil {_bc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dcgge );return nil ,_dcgge ;};_cecd :=NewXObjectImage ();_bedec :=img .Width ;_adebg :=img .Height ;_cecd .Width =&_bedec ;_cecd .Height =&_adebg ;_bgabc :=img .BitsPerComponent ;_cecd .BitsPerComponent =&_bgabc ;_cecd .Filter =encoder ;_cecd .Stream =_feadc ;if cs ==nil {if img .ColorComponents ==1{_cecd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cecd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cecd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cecd .ColorSpace =cs ;};if img ._eedff {_fafb :=NewXObjectImage ();_fafb .Filter =encoder ;_dafgd ,_beabgc :=encoder .EncodeBytes (img ._acfbc );if _beabgc !=nil {_bc .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_beabgc );return nil ,_beabgc ;};_fafb .Stream =_dafgd ;_fafb .BitsPerComponent =_cecd .BitsPerComponent ;_fafb .Width =&img .Width ;_fafb .Height =&img .Height ;_fafb .ColorSpace =NewPdfColorspaceDeviceGray ();_cecd .SMask =_fafb .ToPdfObject ();}else {_cecd .SMask =xobjIn .SMask ;_cecd .ImageMask =xobjIn .ImageMask ;if _cecd .ColorSpace .GetNumComponents ()==1{_aeebf (_cecd );};};return _cecd ,nil ;};func _bdbgfc (_bgdef *_de .PdfObjectDictionary ,_fccb *fontCommon )(*pdfFontType0 ,error ){_bedfe ,_caece :=_de .GetArray (_bgdef .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_caece {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fccb );return nil ,_de .ErrRangeError ;};if _bedfe .Len ()!=1{_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_bedfe .Len ());return nil ,_de .ErrRangeError ;};_fdfe ,_fggb :=_eagdb (_bedfe .Get (0),false );if _fggb !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_fggb ,_fccb );return nil ,_fggb ;};_bcdce :=_dcgac (_fccb );_bcdce .DescendantFont =_fdfe ;_cceff ,_caece :=_de .GetNameVal (_bgdef .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _caece {if _cceff =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cceff =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bcdce ._fcad =_gb .NewIdentityTextEncoder (_cceff );}else if _bd .IsPredefinedCMap (_cceff ){_bcdce ._dbae ,_fggb =_bd .LoadPredefinedCMap (_cceff );if _fggb !=nil {_bc .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cceff ,_fggb );};}else {_bc .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cceff );};};if _geeb :=_fdfe .baseFields ()._eegcf ;_geeb !=nil {if _cbad :=_geeb .Name ();_cbad =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cbad =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cbad =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cbad =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bcdce ._fcad =_gb .NewCMapEncoder (_cceff ,_bcdce ._dbae ,_geeb );};};return _bcdce ,nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_de .PdfObject ;GetContainingPdfObject ()_de .PdfObject ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_gcaf :=&PdfPageResources {};_gcaf ._fccd =_de .MakeDict ();return _gcaf ;};func _faggb (_abggb *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_abggb }};

// ColorToRGB converts a CalGray color to an RGB color.
func (_abcbb *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgdf ,_aced :=color .(*PdfColorCalGray );if !_aced {_bc .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cgdf .Val ();X :=_abcbb .WhitePoint [0]*_bgc .Pow (ANorm ,_abcbb .Gamma );Y :=_abcbb .WhitePoint [1]*_bgc .Pow (ANorm ,_abcbb .Gamma );Z :=_abcbb .WhitePoint [2]*_bgc .Pow (ANorm ,_abcbb .Gamma );_dfcf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fadbd :=-0.969256*X +1.875992*Y +0.041556*Z ;_fcda :=0.055648*X +-0.204043*Y +1.057311*Z ;_dfcf =_bgc .Min (_bgc .Max (_dfcf ,0),1.0);_fadbd =_bgc .Min (_bgc .Max (_fadbd ,0),1.0);_fcda =_bgc .Min (_bgc .Max (_fcda ,0),1.0);return NewPdfColorDeviceRGB (_dfcf ,_fadbd ,_fcda ),nil ;};

// R returns the value of the red component of the color.
func (_faea *PdfColorDeviceRGB )R ()float64 {return float64 (_faea [0])};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_afcg *PdfAppender )UpdatePage (page *PdfPage ){_afcg .updateObjectsDeep (page .ToPdfObject (),nil )};func (_bbfe *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_bffg *PdfWriter )hasObject (_fgcfc _de .PdfObject )bool {_ ,_abfcc :=_bffg ._abdaa [_fgcfc ];return _abfcc ;};

// ToPdfObject implements interface PdfModel.
func (_fb *PdfAction )ToPdfObject ()_de .PdfObject {_bf :=_fb ._cg ;_abe :=_bf .PdfObject .(*_de .PdfObjectDictionary );_abe .Clear ();_abe .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_abe .SetIfNotNil ("\u0053",_fb .S );_abe .SetIfNotNil ("\u004e\u0065\u0078\u0074",_fb .Next );return _bf ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cgaf *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_fbfe :=_bga .NewReader (img .getBase ());_cfc :=_cbd .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_febb :=_bga .NewWriter (_cfc );_afcec :=_bgc .Pow (2,float64 (img .BitsPerComponent ))-1;_fbee :=make ([]uint32 ,3);var (_ddc uint32 ;ANorm ,X ,Y ,Z ,_fbad ,_eafc ,_acfc float64 ;_aafe error ;);for {_ddc ,_aafe =_fbfe .ReadSample ();if _aafe ==_gad .EOF {break ;}else if _aafe !=nil {return img ,_aafe ;};ANorm =float64 (_ddc )/_afcec ;X =_cgaf .WhitePoint [0]*_bgc .Pow (ANorm ,_cgaf .Gamma );Y =_cgaf .WhitePoint [1]*_bgc .Pow (ANorm ,_cgaf .Gamma );Z =_cgaf .WhitePoint [2]*_bgc .Pow (ANorm ,_cgaf .Gamma );_fbad =3.240479*X +-1.537150*Y +-0.498535*Z ;_eafc =-0.969256*X +1.875992*Y +0.041556*Z ;_acfc =0.055648*X +-0.204043*Y +1.057311*Z ;_fbad =_bgc .Min (_bgc .Max (_fbad ,0),1.0);_eafc =_bgc .Min (_bgc .Max (_eafc ,0),1.0);_acfc =_bgc .Min (_bgc .Max (_acfc ,0),1.0);_fbee [0]=uint32 (_fbad *_afcec );_fbee [1]=uint32 (_eafc *_afcec );_fbee [2]=uint32 (_acfc *_afcec );if _aafe =_febb .WriteSamples (_fbee );_aafe !=nil {return img ,_aafe ;};};return _aade (&_cfc ),nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ecdbc *PdfPage )AddContentStreamByString (contentStr string )error {_aedf ,_baccc :=_de .MakeStream ([]byte (contentStr ),_de .NewFlateEncoder ());if _baccc !=nil {return _baccc ;};if _ecdbc .Contents ==nil {_ecdbc .Contents =_aedf ;}else if _gadcb ,_bgggbc :=_de .GetArray (_ecdbc .Contents );_bgggbc {_gadcb .Append (_aedf );}else {_geebg :=_de .MakeArray (_ecdbc .Contents ,_aedf );_ecdbc .Contents =_geebg ;};return nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_bcgga *PdfOutlineTreeNode )GetContext ()PdfModel {if _ffgf ,_bgga :=_bcgga ._gccdf .(*PdfOutline );_bgga {return _ffgf ;};if _cdbef ,_edbeg :=_bcgga ._gccdf .(*PdfOutlineItem );_edbeg {return _cdbef ;};_bc .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};func (_ggc *PdfReader )newPdfActionSetOCGStateFromDict (_fff *_de .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fff .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fff .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_fdcee *PdfPattern )ToPdfObject ()_de .PdfObject {_afbca :=_fdcee .getDict ();_afbca .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_afbca .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (_fdcee .PatternType ));return _fdcee ._addd ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fage *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gad .ReadSeeker )(*PdfFont ,error ){const _fcgc =_gb .CharCode (32);const _dbfe =_gb .CharCode (255);_gdfbb ,_ecbb :=_ge .ReadAll (r );if _ecbb !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ecbb );return nil ,_ecbb ;};_eabcc ,_ecbb :=_eg .TtfParse (_gd .NewReader (_gdfbb ));if _ecbb !=nil {_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ecbb );return nil ,_ecbb ;};_cffe :=&pdfFontSimple {_acbc :make (map[_gb .CharCode ]float64 ),fontCommon :fontCommon {_fagbeb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_cffe ._fafa =_gb .NewWinAnsiEncoder ();_cffe ._ccbbd =_eabcc .PostScriptName ;_cffe .FirstChar =_de .MakeInteger (int64 (_fcgc ));_cffe .LastChar =_de .MakeInteger (int64 (_dbfe ));_fefaa :=1000.0/float64 (_eabcc .UnitsPerEm );if len (_eabcc .Widths )<=0{return nil ,_fe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_agfcc :=_fefaa *float64 (_eabcc .Widths [0]);_fdeccd :=make ([]float64 ,0,_dbfe -_fcgc +1);for _eeaegc :=_fcgc ;_eeaegc <=_dbfe ;_eeaegc ++{_bcab ,_agdef :=_cffe .Encoder ().CharcodeToRune (_eeaegc );if !_agdef {_bc .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_eeaegc );_fdeccd =append (_fdeccd ,_agfcc );continue ;};_ccgf ,_gbde :=_eabcc .Chars [_bcab ];if !_gbde {_bc .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_fdeccd =append (_fdeccd ,_agfcc );continue ;};_cafg :=_fefaa *float64 (_eabcc .Widths [_ccgf ]);_fdeccd =append (_fdeccd ,_cafg );};_cffe .Widths =_de .MakeIndirectObject (_de .MakeArrayFromFloats (_fdeccd ));if len (_fdeccd )< int (_dbfe -_fcgc +1){_bc .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_fdeccd ),255-32+1);return nil ,_de .ErrRangeError ;};for _efabd :=_gb .CharCode (_fcgc );_efabd <=_dbfe ;_efabd ++{_cffe ._acbc [_efabd ]=_fdeccd [_efabd -_fcgc ];};_cffe .Encoding =_de .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fegc :=&PdfFontDescriptor {};_fegc .FontName =_de .MakeName (_eabcc .PostScriptName );_fegc .Ascent =_de .MakeFloat (_fefaa *float64 (_eabcc .TypoAscender ));_fegc .Descent =_de .MakeFloat (_fefaa *float64 (_eabcc .TypoDescender ));_fegc .CapHeight =_de .MakeFloat (_fefaa *float64 (_eabcc .CapHeight ));_fegc .FontBBox =_de .MakeArrayFromFloats ([]float64 {_fefaa *float64 (_eabcc .Xmin ),_fefaa *float64 (_eabcc .Ymin ),_fefaa *float64 (_eabcc .Xmax ),_fefaa *float64 (_eabcc .Ymax )});_fegc .ItalicAngle =_de .MakeFloat (float64 (_eabcc .ItalicAngle ));_fegc .MissingWidth =_de .MakeFloat (_fefaa *float64 (_eabcc .Widths [0]));_aeegd ,_ecbb :=_de .MakeStream (_gdfbb ,_de .NewFlateEncoder ());if _ecbb !=nil {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ecbb );return nil ,_ecbb ;};_aeegd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_de .MakeInteger (int64 (len (_gdfbb ))));_fegc .FontFile2 =_aeegd ;if _eabcc .Bold {_fegc .StemV =_de .MakeInteger (120);}else {_fegc .StemV =_de .MakeInteger (70);};_dgbf :=_efge ;if _eabcc .IsFixedPitch {_dgbf |=_bdafe ;};if _eabcc .ItalicAngle !=0{_dgbf |=_caadb ;};_fegc .Flags =_de .MakeInteger (int64 (_dgbf ));_cffe ._aceg =_fegc ;_ebdc :=&PdfFont {_adce :_cffe };return _ebdc ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_eaggc *PdfAppender )WriteToFile (outputPath string )error {_gbaf ,_edfe :=_cb .Create (outputPath );if _edfe !=nil {return _edfe ;};defer _gbaf .Close ();return _eaggc .Write (_gbaf );};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_aadbc :=PdfWriter {};_aadbc ._abdaa =map[_de .PdfObject ]struct{}{};_aadbc ._agfeb =[]_de .PdfObject {};_aadbc ._ebafdb =map[_de .PdfObject ][]*_de .PdfObjectDictionary {};_aadbc ._bagggb =map[_de .PdfObject ]struct{}{};_aadbc ._bfgga =1;_aadbc ._efagf =3;_fggbb :=_de .MakeDict ();_bfefe :=[]struct{_efdea _de .PdfObjectName ;_cfgef string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_gdgdc ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_deffg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bgcfa ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_dgfbb ()},{"\u0054\u0069\u0074l\u0065",_fadge ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eace ()}};for _ ,_eegcc :=range _bfefe {if _eegcc ._cfgef !=""{_fggbb .Set (_eegcc ._efdea ,_de .MakeString (_eegcc ._cfgef ));};};if _ggegd :=_dfab ();!_ggegd .IsZero (){if _gdgeg ,_afgbgc :=NewPdfDateFromTime (_ggegd );_afgbgc ==nil {_fggbb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gdgeg .ToPdfObject ());};};if _fegeb :=_eeddc ();!_fegeb .IsZero (){if _ffece ,_aeegb :=NewPdfDateFromTime (_fegeb );_aeegb ==nil {_fggbb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ffece .ToPdfObject ());};};_dabc :=_de .PdfIndirectObject {};_dabc .PdfObject =_fggbb ;_aadbc ._eeege =&_dabc ;_aadbc .addObject (&_dabc );_gcfb :=_de .PdfIndirectObject {};_cgdd :=_de .MakeDict ();_cgdd .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_gcfb .PdfObject =_cgdd ;_aadbc ._defa =&_gcfb ;_aadbc .addObject (_aadbc ._defa );_fbedd :=_de .PdfIndirectObject {};_gfedg :=_de .MakeDict ();_gfedg .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0050\u0061\u0067e\u0073"));_cbbd :=_de .PdfObjectArray {};_gfedg .Set ("\u004b\u0069\u0064\u0073",&_cbbd );_gfedg .Set ("\u0043\u006f\u0075n\u0074",_de .MakeInteger (0));_fbedd .PdfObject =_gfedg ;_aadbc ._fcdab =&_fbedd ;_aadbc ._baegd =map[_de .PdfObject ]struct{}{};_aadbc .addObject (_aadbc ._fcdab );_cgdd .Set ("\u0050\u0061\u0067e\u0073",&_fbedd );_aadbc ._efdfc =_cgdd ;_bc .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_gcfb );return _aadbc ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_gecb *PdfOutlineTreeNode )GetContainingPdfObject ()_de .PdfObject {return _gecb .GetContext ().GetContainingPdfObject ();};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_beac :=NewPdfAnnotation ();_ffecc :=&PdfAnnotationHighlight {};_ffecc .PdfAnnotation =_beac ;_ffecc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beac .SetContext (_ffecc );return _ffecc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_cbea *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdbd ,_gca :=_de .GetNumbersAsFloat (objects );if _gca !=nil {return nil ,_gca ;};return _cbea .ColorFromFloats (_fdbd );};type pdfSignDictionary struct{*_de .PdfObjectDictionary ;_ecdg *SignatureHandler ;_debac *PdfSignature ;_afda int64 ;_aaba int ;_abdadd int ;_ebbaa int ;_gfeca int ;};func (_fefee fontCommon )coreString ()string {_cafee :="";if _fefee ._aceg !=nil {_cafee =_fefee ._aceg .String ();};return _d .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fefee ._fagbeb ,_fefee ._ccbbd ,_fefee ._bcbfc ,_fefee ._ecaf ,_fefee ._beccc !=nil ,_fefee .fontFlags (),_cafee );};func _ccef (_fgcg *_de .PdfObjectDictionary )(*PdfFieldButton ,error ){_fcgb :=&PdfFieldButton {};_fcgb .Opt ,_ =_de .GetArray (_fgcg .Get ("\u004f\u0070\u0074"));return _fcgb ,nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// GetAscent returns the Ascent of the font `descriptor`.
func (_abgb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _de .GetNumberAsFloat (_abgb .Ascent );};func (_afebe *PdfWriter )seekByName (_gebd _de .PdfObject ,_gdgac []string ,_bafaa string )([]_de .PdfObject ,error ){_bc .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_gebd );var _gcdaa []_de .PdfObject ;if _fgced ,_eccfd :=_gebd .(*_de .PdfIndirectObject );_eccfd {return _afebe .seekByName (_fgced .PdfObject ,_gdgac ,_bafaa );};if _adgdg ,_bgcagc :=_gebd .(*_de .PdfObjectStream );_bgcagc {return _afebe .seekByName (_adgdg .PdfObjectDictionary ,_gdgac ,_bafaa );};if _affba ,_cafbf :=_gebd .(*_de .PdfObjectDictionary );_cafbf {_bc .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_abgbb :=range _affba .Keys (){_aaedfd :=_affba .Get (_abgbb );if string (_abgbb )==_bafaa {_gcdaa =append (_gcdaa ,_aaedfd );};for _ ,_agggf :=range _gdgac {if string (_abgbb )==_agggf {_bc .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_agggf );_baef ,_gaga :=_afebe .seekByName (_aaedfd ,_gdgac ,_bafaa );if _gaga !=nil {return _gcdaa ,_gaga ;};for _ ,_gdcag :=range _baef {_gcdaa =append (_gcdaa ,_gdcag );};break ;};};};return _gcdaa ,nil ;};return _gcdaa ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_egce *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _de .GetNumberAsFloat (_egce .CapHeight );};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dcde _de .PdfObject ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_gegad *PdfPageResources )HasColorspaceByName (keyName _de .PdfObjectName )bool {_adcbe ,_baced :=_gegad .GetColorspaces ();if _baced !=nil {_bc .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_baced );return false ;};if _adcbe ==nil {return false ;};_ ,_ggfg :=_adcbe .Colorspaces [string (keyName )];return _ggfg ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_cebfc :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_cebfc ;};

// ToInteger convert to an integer format.
func (_edgfc *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_feafb :=_bgc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_feafb *_edgfc .R ()),uint32 (_feafb *_edgfc .G ()),uint32 (_feafb *_edgfc .B ())};};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_de .PdfObjectArray ;};func _gfedf (_cfgdf string )map[string ]string {_cbaef :=_cdgbf .Split (_cfgdf ,-1);_eacc :=map[string ]string {};for _ ,_accba :=range _cbaef {_bbaf :=_dbbbc .FindStringSubmatch (_accba );if _bbaf ==nil {continue ;};_ggabd ,_dcgeb :=_bbaf [1],_bbaf [2];_eacc [_ggabd ]=_dcgeb ;};return _eacc ;};func (_fbe *PdfReader )newPdfAnnotationLineFromDict (_ebca *_de .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_aba :=PdfAnnotationLine {};_acfg ,_efgd :=_fbe .newPdfAnnotationMarkupFromDict (_ebca );if _efgd !=nil {return nil ,_efgd ;};_aba .PdfAnnotationMarkup =_acfg ;_aba .L =_ebca .Get ("\u004c");_aba .BS =_ebca .Get ("\u0042\u0053");_aba .LE =_ebca .Get ("\u004c\u0045");_aba .IC =_ebca .Get ("\u0049\u0043");_aba .LL =_ebca .Get ("\u004c\u004c");_aba .LLE =_ebca .Get ("\u004c\u004c\u0045");_aba .Cap =_ebca .Get ("\u0043\u0061\u0070");_aba .IT =_ebca .Get ("\u0049\u0054");_aba .LLO =_ebca .Get ("\u004c\u004c\u004f");_aba .CP =_ebca .Get ("\u0043\u0050");_aba .Measure =_ebca .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_aba .CO =_ebca .Get ("\u0043\u004f");return &_aba ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_aedad *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _aedad .MediaBox !=nil {return _aedad .MediaBox ,nil ;};_baceb :=_aedad .Parent ;for _baceb !=nil {_fagbb ,_cfdgc :=_de .GetDict (_baceb );if !_cfdgc {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _afgbb :=_fagbb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_afgbb !=nil {_adeaf ,_edef :=_de .GetArray (_afgbb );if !_edef {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_ccda ,_babc :=NewPdfRectangle (*_adeaf );if _babc !=nil {return nil ,_babc ;};return _ccda ,nil ;};_baceb =_fagbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fe .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_geggbg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_de .StreamEncoder ,error ){_fbfgbe ,_cfdac :=_geggbg ._addd .(*_de .PdfObjectStream );if !_cfdac {_bc .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geggbg ._addd );return nil ,nil ,_de .ErrTypeError ;};_dbdc ,_agfa :=_de .DecodeStream (_fbfgbe );if _agfa !=nil {_bc .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_agfa );return nil ,nil ,_agfa ;};_agca ,_agfa :=_de .NewEncoderFromStream (_fbfgbe );if _agfa !=nil {_bc .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_agfa );return nil ,nil ,_agfa ;};return _dbdc ,_agca ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dbbg *PdfColorspaceDeviceGray )ToPdfObject ()_de .PdfObject {return _de .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_abcbd *PdfReader )newPdfPageFromDict (_dccae *_de .PdfObjectDictionary )(*PdfPage ,error ){_eefef :=NewPdfPage ();_eefef ._dgdcb =_dccae ;_fbba :=*_dccae ;_gdfbf ,_eaaced :=_fbba .Get ("\u0054\u0079\u0070\u0065").(*_de .PdfObjectName );if !_eaaced {return nil ,_fe .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_gdfbf !="\u0050\u0061\u0067\u0065"{return nil ,_fe .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dbgcg :=_fbba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dbgcg !=nil {_eefef .Parent =_dbgcg ;};if _gcbe :=_fbba .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gcbe !=nil {_ecda ,_dcfac :=_de .GetString (_gcbe );if !_dcfac {return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_fccag ,_dfbed :=NewPdfDate (_ecda .Str ());if _dfbed !=nil {return nil ,_dfbed ;};_eefef .LastModified =&_fccag ;};if _ffddf :=_fbba .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ffddf !=nil &&!_de .IsNullObject (_ffddf ){_daeg ,_acdb :=_de .GetDict (_ffddf );if !_acdb {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ffddf );};var _dbeea error ;_eefef .Resources ,_dbeea =NewPdfPageResourcesFromDict (_daeg );if _dbeea !=nil {return nil ,_dbeea ;};}else {_fabaa ,_dcceb :=_eefef .getParentResources ();if _dcceb !=nil {return nil ,_dcceb ;};if _fabaa ==nil {_fabaa =NewPdfPageResources ();};_eefef .Resources =_fabaa ;};if _cebega :=_fbba .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cebega !=nil {_gedc ,_cffaa :=_de .GetArray (_cebega );if !_cffaa {return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _acegd error ;_eefef .MediaBox ,_acegd =NewPdfRectangle (*_gedc );if _acegd !=nil {return nil ,_acegd ;};};if _bagb :=_fbba .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bagb !=nil {_eggd ,_fagcc :=_de .GetArray (_bagb );if !_fagcc {return nil ,_fe .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _beba error ;_eefef .CropBox ,_beba =NewPdfRectangle (*_eggd );if _beba !=nil {return nil ,_beba ;};};if _daadg :=_fbba .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_daadg !=nil {_ddae ,_agac :=_de .GetArray (_daadg );if !_agac {return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dcegb error ;_eefef .BleedBox ,_dcegb =NewPdfRectangle (*_ddae );if _dcegb !=nil {return nil ,_dcegb ;};};if _fgdd :=_fbba .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fgdd !=nil {_cacg ,_agdag :=_de .GetArray (_fgdd );if !_agdag {return nil ,_fe .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gcfde error ;_eefef .TrimBox ,_gcfde =NewPdfRectangle (*_cacg );if _gcfde !=nil {return nil ,_gcfde ;};};if _dcdg :=_fbba .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dcdg !=nil {_baggg ,_ddadg :=_de .GetArray (_dcdg );if !_ddadg {return nil ,_fe .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _acbb error ;_eefef .ArtBox ,_acbb =NewPdfRectangle (*_baggg );if _acbb !=nil {return nil ,_acbb ;};};if _fbgb :=_fbba .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fbgb !=nil {_eefef .BoxColorInfo =_fbgb ;};if _bead :=_fbba .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bead !=nil {_eefef .Contents =_bead ;};if _fefbc :=_fbba .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fefbc !=nil {_aabfd ,_accgcb :=_de .GetInt (_fefbc );if !_accgcb {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_dddec :=int64 (*_aabfd );_eefef .Rotate =&_dddec ;};if _gcbagf :=_fbba .Get ("\u0047\u0072\u006fu\u0070");_gcbagf !=nil {_eefef .Group =_gcbagf ;};if _cbage :=_fbba .Get ("\u0054\u0068\u0075m\u0062");_cbage !=nil {_eefef .Thumb =_cbage ;};if _fgcff :=_fbba .Get ("\u0042");_fgcff !=nil {_eefef .B =_fgcff ;};if _fcffef :=_fbba .Get ("\u0044\u0075\u0072");_fcffef !=nil {_eefef .Dur =_fcffef ;};if _gdab :=_fbba .Get ("\u0054\u0072\u0061n\u0073");_gdab !=nil {_eefef .Trans =_gdab ;};if _geebd :=_fbba .Get ("\u0041\u0041");_geebd !=nil {_eefef .AA =_geebd ;};if _addga :=_fbba .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_addga !=nil {_eefef .Metadata =_addga ;};if _aefdc :=_fbba .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_aefdc !=nil {_eefef .PieceInfo =_aefdc ;};if _cege :=_fbba .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cege !=nil {_eefef .StructParents =_cege ;};if _fdfb :=_fbba .Get ("\u0049\u0044");_fdfb !=nil {_eefef .ID =_fdfb ;};if _agdeg :=_fbba .Get ("\u0050\u005a");_agdeg !=nil {_eefef .PZ =_agdeg ;};if _dbdgcb :=_fbba .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_dbdgcb !=nil {_eefef .SeparationInfo =_dbdgcb ;};if _fgef :=_fbba .Get ("\u0054\u0061\u0062\u0073");_fgef !=nil {_eefef .Tabs =_fgef ;};if _bbdd :=_fbba .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_bbdd !=nil {_eefef .TemplateInstantiated =_bbdd ;};if _cfbcf :=_fbba .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_cfbcf !=nil {_eefef .PresSteps =_cfbcf ;};if _ffdaag :=_fbba .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ffdaag !=nil {_eefef .UserUnit =_ffdaag ;};if _efbfe :=_fbba .Get ("\u0056\u0050");_efbfe !=nil {_eefef .VP =_efbfe ;};if _cdaf :=_fbba .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_cdaf !=nil {_eefef .Annots =_cdaf ;};_eefef ._bbbgag =_abcbd ;return _eefef ,nil ;};

// B returns the value of the B component of the color.
func (_cdbac *PdfColorLab )B ()float64 {return float64 (_cdbac [2])};

// ToPdfObject returns the PDF representation of the function.
func (_ccgdbc *PdfFunctionType3 )ToPdfObject ()_de .PdfObject {_cfdeb :=_de .MakeDict ();_cfdeb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (3));_dgfc :=&_de .PdfObjectArray {};for _ ,_fbde :=range _ccgdbc .Domain {_dgfc .Append (_de .MakeFloat (_fbde ));};_cfdeb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dgfc );if _ccgdbc .Range !=nil {_gceg :=&_de .PdfObjectArray {};for _ ,_cgcaa :=range _ccgdbc .Range {_gceg .Append (_de .MakeFloat (_cgcaa ));};_cfdeb .Set ("\u0052\u0061\u006eg\u0065",_gceg );};if _ccgdbc .Functions !=nil {_aagb :=&_de .PdfObjectArray {};for _ ,_gcad :=range _ccgdbc .Functions {_aagb .Append (_gcad .ToPdfObject ());};_cfdeb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_aagb );};if _ccgdbc .Bounds !=nil {_adcd :=&_de .PdfObjectArray {};for _ ,_abfba :=range _ccgdbc .Bounds {_adcd .Append (_de .MakeFloat (_abfba ));};_cfdeb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_adcd );};if _ccgdbc .Encode !=nil {_geag :=&_de .PdfObjectArray {};for _ ,_dedbb :=range _ccgdbc .Encode {_geag .Append (_de .MakeFloat (_dedbb ));};_cfdeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_geag );};if _ccgdbc ._bgcb !=nil {_ccgdbc ._bgcb .PdfObject =_cfdeb ;return _ccgdbc ._bgcb ;};return _cfdeb ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_bddab =author };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_fgfa *PdfOutline )GetContainingPdfObject ()_de .PdfObject {return _fgfa ._ddcbd };

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_edebf =producer };

// SetContext sets the sub annotation (context).
func (_feac *PdfAnnotation )SetContext (ctx PdfModel ){_feac ._fgd =ctx };func (_beff *PdfReader )newPdfAnnotationProjectionFromDict (_bccbc *_de .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_eadf :=&PdfAnnotationProjection {};_gecc ,_cddeb :=_beff .newPdfAnnotationMarkupFromDict (_bccbc );if _cddeb !=nil {return nil ,_cddeb ;};_eadf .PdfAnnotationMarkup =_gecc ;return _eadf ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_abaa PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _abaa ._adce .getFontDescriptor (),nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_dffb *pdfFontType0 )ToPdfObject ()_de .PdfObject {if _dffb ._dbfba ==nil {_dffb ._dbfba =&_de .PdfIndirectObject {};};_bdgc :=_dffb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_dffb ._dbfba .PdfObject =_bdgc ;if _dffb .Encoding !=nil {_bdgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dffb .Encoding );}else if _dffb ._fcad !=nil {_bdgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dffb ._fcad .ToPdfObject ());};if _dffb .DescendantFont !=nil {_bdgc .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_de .MakeArray (_dffb .DescendantFont .ToPdfObject ()));};return _dffb ._dbfba ;};var _fdfgc ="";

// ToPdfObject implements interface PdfModel.
func (_ebce *PdfAnnotationPolyLine )ToPdfObject ()_de .PdfObject {_ebce .PdfAnnotation .ToPdfObject ();_afc :=_ebce ._afa ;_bfa :=_afc .PdfObject .(*_de .PdfObjectDictionary );_ebce .PdfAnnotationMarkup .appendToPdfDictionary (_bfa );_bfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_bfa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ebce .Vertices );_bfa .SetIfNotNil ("\u004c\u0045",_ebce .LE );_bfa .SetIfNotNil ("\u0042\u0053",_ebce .BS );_bfa .SetIfNotNil ("\u0049\u0043",_ebce .IC );_bfa .SetIfNotNil ("\u0042\u0045",_ebce .BE );_bfa .SetIfNotNil ("\u0049\u0054",_ebce .IT );_bfa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ebce .Measure );return _afc ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gf :=NewPdfAnnotation ();_gcc :=&PdfAnnotationText {};_gcc .PdfAnnotation =_gf ;_gcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gf .SetContext (_gcc );return _gcc ;};

// SetContext set the sub annotation (context).
func (_cdcgc *PdfShading )SetContext (ctx PdfModel ){_cdcgc ._fbbd =ctx };

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_bbdgb *PdfPageResourcesColorspaces )Set (key _de .PdfObjectName ,val PdfColorspace ){if _ ,_ccfeea :=_bbdgb .Colorspaces [string (key )];!_ccfeea {_bbdgb .Names =append (_bbdgb .Names ,string (key ));};_bbdgb .Colorspaces [string (key )]=val ;};func _fbgf (_ebdgf *_de .PdfObjectDictionary )(*PdfFieldText ,error ){_cacb :=&PdfFieldText {};_cacb .DA ,_ =_de .GetString (_ebdgf .Get ("\u0044\u0041"));_cacb .Q ,_ =_de .GetInt (_ebdgf .Get ("\u0051"));_cacb .DS ,_ =_de .GetString (_ebdgf .Get ("\u0044\u0053"));_cacb .RV =_ebdgf .Get ("\u0052\u0056");_cacb .MaxLen ,_ =_de .GetInt (_ebdgf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _cacb ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ebfc *Image )ColorAt (x ,y int )(_ec .Color ,error ){_edgga :=_cbd .BytesPerLine (int (_ebfc .Width ),int (_ebfc .BitsPerComponent ),_ebfc .ColorComponents );switch _ebfc .ColorComponents {case 1:return _cbd .ColorAtGrayscale (x ,y ,int (_ebfc .BitsPerComponent ),_edgga ,_ebfc .Data ,_ebfc ._affeg );case 3:return _cbd .ColorAtNRGBA (x ,y ,int (_ebfc .Width ),_edgga ,int (_ebfc .BitsPerComponent ),_ebfc .Data ,_ebfc ._acfbc ,_ebfc ._affeg );case 4:return _cbd .ColorAtCMYK (x ,y ,int (_ebfc .Width ),_ebfc .Data ,_ebfc ._affeg );};_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ebfc .ColorComponents ,_ebfc .BitsPerComponent );return nil ,_fe .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fdgec *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bc .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_fe .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_adce pdfFont };

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _de .PdfObject ;Q _de .PdfObject ;RC _de .PdfObject ;DS _de .PdfObject ;CL _de .PdfObject ;IT _de .PdfObject ;BE _de .PdfObject ;RD _de .PdfObject ;BS _de .PdfObject ;LE _de .PdfObject ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _de .PdfObject ;T3DV _de .PdfObject ;T3DA _de .PdfObject ;T3DI _de .PdfObject ;T3DB _de .PdfObject ;};func (_agg *PdfReader )newPdfActionSubmitFormFromDict (_eeb *_de .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_cfa ,_aad :=_fab (_eeb .Get ("\u0046"));if _aad !=nil {return nil ,_aad ;};return &PdfActionSubmitForm {F :_cfa ,Fields :_eeb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eeb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fgfd *PdfColorspaceSpecialSeparation )ToPdfObject ()_de .PdfObject {_efbfd :=_de .MakeArray (_de .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_efbfd .Append (_fgfd .ColorantName );_efbfd .Append (_fgfd .AlternateSpace .ToPdfObject ());_efbfd .Append (_fgfd .TintTransform .ToPdfObject ());if _fgfd ._egeae !=nil {_fgfd ._egeae .PdfObject =_efbfd ;return _fgfd ._egeae ;};return _efbfd ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fbegc *Outline )Insert (index uint ,item *OutlineItem ){_aabcb :=uint (len (_fbegc .Entries ));if index > _aabcb {index =_aabcb ;};_fbegc .Entries =append (_fbegc .Entries [:index ],append ([]*OutlineItem {item },_fbegc .Entries [index :]...)...);};

// PartialName returns the partial name of the field.
func (_cfed *PdfField )PartialName ()string {_abbfc :="";if _cfed .T !=nil {_abbfc =_cfed .T .Decoded ();}else {_bc .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _abbfc ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cec :=NewPdfAnnotation ();_bgb :=&PdfAnnotationRedact {};_bgb .PdfAnnotation =_cec ;_bgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cec .SetContext (_bgb );return _bgb ;};func (_badbcc *PdfWriter )addObjects (_gacfd _de .PdfObject )error {_bc .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _abdaf ,_bdebe :=_gacfd .(*_de .PdfIndirectObject );_bdebe {_bc .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bc .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_gacfd ,_abdaf );_bc .Log .Trace ("\u002d\u0020\u0025\u0073",_abdaf .PdfObject );if _badbcc .addObject (_abdaf ){_fbdfff :=_badbcc .addObjects (_abdaf .PdfObject );if _fbdfff !=nil {return _fbdfff ;};};return nil ;};if _edgce ,_fdfeb :=_gacfd .(*_de .PdfObjectStream );_fdfeb {_bc .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_bc .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_gacfd ,_gacfd );if _badbcc .addObject (_edgce ){_gdag :=_badbcc .addObjects (_edgce .PdfObjectDictionary );if _gdag !=nil {return _gdag ;};};return nil ;};if _bcfdc ,_bedfed :=_gacfd .(*_de .PdfObjectDictionary );_bedfed {_bc .Log .Trace ("\u0044\u0069\u0063\u0074");_bc .Log .Trace ("\u002d\u0020\u0025\u0073",_gacfd );for _ ,_eddad :=range _bcfdc .Keys (){_cfdcf :=_de .ResolveReference (_bcfdc .Get (_eddad ));if _eddad !="\u0050\u0061\u0072\u0065\u006e\u0074"{_dfcag :=_badbcc .addObjects (_cfdcf );if _dfcag !=nil {return _dfcag ;};}else {if _ ,_dgaf :=_bcfdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_de .PdfObjectNull );_dgaf {continue ;};if _ffedd :=_badbcc .hasObject (_cfdcf );!_ffedd {_bc .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cfdcf ,_cfdcf ,_cfdcf );_badbcc ._ebafdb [_cfdcf ]=append (_badbcc ._ebafdb [_cfdcf ],_bcfdc );};if _bcefg ,_ddcba :=_bcfdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_de .PdfObjectReference );_ddcba {_bc .Log .Debug ("\u0045R\u0052\u004f\u0052:\u0020\u0050\u0061r\u0065nt\u0020\u0069\u0073\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d\u0020\u0043\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0069n \u0077r\u0069\u0074\u0065\u0072\u0020\u0028n\u0065\u0065\u0064\u0073\u0020t\u006f\u0020\u0062\u0065\u0020\u0072\u0065\u0073\u006f\u006c\u0076e\u0064\u0029");return _d .Errorf ("\u0070\u0061re\u006e\u0074\u0020\u0069\u0073\u0020\u0061\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020-\u0020\u0043\u0061\u006eno\u0074\u0020b\u0065 \u0069\u006e\u0020\u0077\u0072\u0069t\u0065\u0072\u0020(\u006e\u0065e\u0064\u0073\u0020\u0074\u006f\u0020\u0062\u0065\u0020\u0072\u0065\u0073\u006f\u006cv\u0065\u0064\u0029\u0020\u002d\u0020\u0025\u0073",_bcefg );};};};return nil ;};if _bgcg ,_ccec :=_gacfd .(*_de .PdfObjectArray );_ccec {_bc .Log .Trace ("\u0041\u0072\u0072a\u0079");_bc .Log .Trace ("\u002d\u0020\u0025\u0073",_gacfd );if _bgcg ==nil {return _fe .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _ ,_acdd :=range _bgcg .Elements (){_cfgda :=_badbcc .addObjects (_de .ResolveReference (_acdd ));if _cfgda !=nil {return _cfgda ;};};return nil ;};if _ ,_fced :=_gacfd .(*_de .PdfObjectReference );_fced {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_gacfd );return _fe .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_bcfbf *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bcfbf ._fabda .GetCrypter ()!=nil &&!_bcfbf ._fabda .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_bcfbf ._bagea )< pageNumber {return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_ffeedb :=pageNumber -1;if _ffeedb < 0{return nil ,_d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_edgec :=_bcfbf .PageList [_ffeedb ];return _edgec ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bbgb *PdfReader )Decrypt (password []byte )(bool ,error ){_debgg ,_acadg :=_bbgb ._fabda .Decrypt (password );if _acadg !=nil {return false ,_acadg ;};if !_debgg {return false ,nil ;};_acadg =_bbgb .loadStructure ();if _acadg !=nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_acadg );return false ,_acadg ;};return true ,nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ac :=NewPdfAction ();_bbf :=&PdfActionResetForm {};_bbf .PdfAction =_ac ;_ac .SetContext (_bbf );return _bbf ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_eae :=NewPdfAnnotation ();_bgd :=&PdfAnnotationUnderline {};_bgd .PdfAnnotation =_eae ;_bgd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eae .SetContext (_bgd );return _bgd ;};

// ToPdfObject implements interface PdfModel.
func (_fgbc *PdfAnnotationText )ToPdfObject ()_de .PdfObject {_fgbc .PdfAnnotation .ToPdfObject ();_dgaa :=_fgbc ._afa ;_ddg :=_dgaa .PdfObject .(*_de .PdfObjectDictionary );if _fgbc .PdfAnnotationMarkup !=nil {_fgbc .PdfAnnotationMarkup .appendToPdfDictionary (_ddg );};_ddg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0054\u0065\u0078\u0074"));_ddg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fgbc .Open );_ddg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fgbc .Name );_ddg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fgbc .State );_ddg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fgbc .StateModel );return _dgaa ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_eefd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _eefd .RunesToCharcodeBytes ([]rune (str ));};var _ebcee _ga .Time ;

// AddWatermarkImage adds a watermark to the page.
func (_cfag *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_efgdd ,_dcfb :=_cfag .GetMediaBox ();if _dcfb !=nil {return _dcfb ;};_gadd :=_efgdd .Urx -_efgdd .Llx ;_ggbb :=_efgdd .Ury -_efgdd .Lly ;_accf :=float64 (*ximg .Width );_efbc :=(float64 (_gadd )-float64 (_accf ))/2;if opt .FitToWidth {_accf =_gadd ;_efbc =0;};_degd :=_ggbb ;_dgaba :=float64 (0);if opt .PreserveAspectRatio {_degd =_accf *float64 (*ximg .Height )/float64 (*ximg .Width );_dgaba =(_ggbb -_degd )/2;};if _cfag .Resources ==nil {_cfag .Resources =NewPdfPageResources ();};_edcaf :=0;_cbge :=_de .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_edcaf ));for _cfag .Resources .HasXObjectByName (_cbge ){_edcaf ++;_cbge =_de .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_edcaf ));};_dcfb =_cfag .AddImageResource (_cbge ,ximg );if _dcfb !=nil {return _dcfb ;};_edcaf =0;_ecbd :=_de .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_edcaf ));for _cfag .HasExtGState (_ecbd ){_edcaf ++;_ecbd =_de .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_edcaf ));};_gdgffg :=_de .MakeDict ();_gdgffg .Set ("\u0042\u004d",_de .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gdgffg .Set ("\u0043\u0041",_de .MakeFloat (opt .Alpha ));_gdgffg .Set ("\u0063\u0061",_de .MakeFloat (opt .Alpha ));_dcfb =_cfag .AddExtGState (_ecbd ,_gdgffg );if _dcfb !=nil {return _dcfb ;};_cegde :=_d .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ecbd ,_accf ,_degd ,_efbc ,_dgaba ,_cbge );_cfag .AddContentStreamByString (_cegde );return nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_eged *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_begd :=pageNum -1;var _abea *PdfPage ;for _bgfg ,_cegaa :=range _eged ._ddebe {if _bgfg ==_begd {_abea =_cegaa ;};};if _abea ==nil {return _d .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _abea ._eeea !=nil &&_abea ._eeea .GetParser ()==_eged ._bge ._fabda {_abea =_abea .Duplicate ();_eged ._ddebe [_begd ]=_abea ;};page =page .Duplicate ();_ggbag (page );_fdaa :=_dcaf (_abea );_ebdd :=_dcaf (page );_becf :=make (map[_de .PdfObjectName ]_de .PdfObjectName );for _efbf :=range _ebdd {if _ ,_eca :=_fdaa [_efbf ];_eca {for _dgaaf :=1;true ;_dgaaf ++{_afaf :=_de .PdfObjectName (string (_efbf )+_ea .Itoa (_dgaaf ));if _ ,_bafa :=_fdaa [_afaf ];!_bafa {_becf [_efbf ]=_afaf ;break ;};};};};_bade ,_fdb :=page .GetContentStreams ();if _fdb !=nil {return _fdb ;};_bbb ,_fdb :=_abea .GetContentStreams ();if _fdb !=nil {return _fdb ;};for _caba ,_efaa :=range _bade {for _eabg ,_ddfff :=range _becf {_efaa =_c .Replace (_efaa ,"\u002f"+string (_eabg ),"\u002f"+string (_ddfff ),-1);};_bade [_caba ]=_efaa ;};_bbb =append (_bbb ,_bade ...);if _dffd :=_abea .SetContentStreams (_bbb ,_de .NewFlateEncoder ());_dffd !=nil {return _dffd ;};for _ ,_effdd :=range page ._bbeg {_abea ._bbeg =append (_abea ._bbeg ,_effdd );};if _abea .Resources ==nil {_abea .Resources =NewPdfPageResources ();};if page .Resources !=nil {_abea .Resources .Font =_eged .mergeResources (_abea .Resources .Font ,page .Resources .Font ,_becf );_abea .Resources .XObject =_eged .mergeResources (_abea .Resources .XObject ,page .Resources .XObject ,_becf );_abea .Resources .Properties =_eged .mergeResources (_abea .Resources .Properties ,page .Resources .Properties ,_becf );if _abea .Resources .ProcSet ==nil {_abea .Resources .ProcSet =page .Resources .ProcSet ;};_abea .Resources .Shading =_eged .mergeResources (_abea .Resources .Shading ,page .Resources .Shading ,_becf );_abea .Resources .ExtGState =_eged .mergeResources (_abea .Resources .ExtGState ,page .Resources .ExtGState ,_becf );};_ffbe ,_fdb :=_abea .GetMediaBox ();if _fdb !=nil {return _fdb ;};_dgbd ,_fdb :=page .GetMediaBox ();if _fdb !=nil {return _fdb ;};var _agef bool ;if _ffbe .Llx > _dgbd .Llx {_ffbe .Llx =_dgbd .Llx ;_agef =true ;};if _ffbe .Lly > _dgbd .Lly {_ffbe .Lly =_dgbd .Lly ;_agef =true ;};if _ffbe .Urx < _dgbd .Urx {_ffbe .Urx =_dgbd .Urx ;_agef =true ;};if _ffbe .Ury < _dgbd .Ury {_ffbe .Ury =_dgbd .Ury ;_agef =true ;};if _agef {_abea .MediaBox =_ffbe ;};return nil ;};func (_dddg *PdfReader )newPdfAnnotationUnderlineFromDict (_geaea *_de .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_cfdb :=PdfAnnotationUnderline {};_fgb ,_ebef :=_dddg .newPdfAnnotationMarkupFromDict (_geaea );if _ebef !=nil {return nil ,_ebef ;};_cfdb .PdfAnnotationMarkup =_fgb ;_cfdb .QuadPoints =_geaea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cfdb ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _de .PdfObject ;MK _de .PdfObject ;A _de .PdfObject ;AA _de .PdfObject ;};func _faead (_aefbb _de .PdfObject )(*PdfShading ,error ){_dcbf :=&PdfShading {};var _agbca *_de .PdfObjectDictionary ;if _dcff ,_agecfe :=_de .GetIndirect (_aefbb );_agecfe {_dcbf ._daegc =_dcff ;_aacgc ,_affg :=_dcff .PdfObject .(*_de .PdfObjectDictionary );if !_affg {_bc .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_de .ErrTypeError ;};_agbca =_aacgc ;}else if _ddfe ,_cbbag :=_de .GetStream (_aefbb );_cbbag {_dcbf ._daegc =_ddfe ;_agbca =_ddfe .PdfObjectDictionary ;}else if _ceab ,_dgeca :=_de .GetDict (_aefbb );_dgeca {_dcbf ._daegc =_ceab ;_agbca =_ceab ;}else {_bc .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_aefbb );return nil ,_de .ErrTypeError ;};if _agbca ==nil {_bc .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aefbb =_agbca .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _aefbb ==nil {_bc .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aefbb =_de .TraceToDirectObject (_aefbb );_gcca ,_cefdec :=_aefbb .(*_de .PdfObjectInteger );if !_cefdec {_bc .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aefbb );return nil ,_de .ErrTypeError ;};if *_gcca < 1||*_gcca > 7{_bc .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_gcca );return nil ,_de .ErrTypeError ;};_dcbf .ShadingType =_gcca ;_aefbb =_agbca .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _aefbb ==nil {_bc .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fffg ,_edbc :=NewPdfColorspaceFromPdfObject (_aefbb );if _edbc !=nil {_bc .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_edbc );return nil ,_edbc ;};_dcbf .ColorSpace =_fffg ;_aefbb =_agbca .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _aefbb !=nil {_aefbb =_de .TraceToDirectObject (_aefbb );_adfbe ,_cagfc :=_aefbb .(*_de .PdfObjectArray );if !_cagfc {_bc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aefbb );return nil ,_de .ErrTypeError ;};_dcbf .Background =_adfbe ;};_aefbb =_agbca .Get ("\u0042\u0042\u006f\u0078");if _aefbb !=nil {_aefbb =_de .TraceToDirectObject (_aefbb );_aadgb ,_ddbc :=_aefbb .(*_de .PdfObjectArray );if !_ddbc {_bc .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aefbb );return nil ,_de .ErrTypeError ;};_gfff ,_cbcade :=NewPdfRectangle (*_aadgb );if _cbcade !=nil {_bc .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cbcade );return nil ,_cbcade ;};_dcbf .BBox =_gfff ;};_aefbb =_agbca .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _aefbb !=nil {_aefbb =_de .TraceToDirectObject (_aefbb );_gbgbae ,_feeb :=_aefbb .(*_de .PdfObjectBool );if !_feeb {_bc .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aefbb );return nil ,_de .ErrTypeError ;};_dcbf .AntiAlias =_gbgbae ;};switch *_gcca {case 1:_egac ,_fcdce :=_dgcf (_agbca );if _fcdce !=nil {return nil ,_fcdce ;};_egac .PdfShading =_dcbf ;_dcbf ._fbbd =_egac ;return _dcbf ,nil ;case 2:_eegcd ,_ffddb :=_gebe (_agbca );if _ffddb !=nil {return nil ,_ffddb ;};_eegcd .PdfShading =_dcbf ;_dcbf ._fbbd =_eegcd ;return _dcbf ,nil ;case 3:_gbge ,_eeac :=_bdfge (_agbca );if _eeac !=nil {return nil ,_eeac ;};_gbge .PdfShading =_dcbf ;_dcbf ._fbbd =_gbge ;return _dcbf ,nil ;case 4:_fcab ,_deccg :=_abeea (_agbca );if _deccg !=nil {return nil ,_deccg ;};_fcab .PdfShading =_dcbf ;_dcbf ._fbbd =_fcab ;return _dcbf ,nil ;case 5:_fefda ,_gcff :=_bbgbf (_agbca );if _gcff !=nil {return nil ,_gcff ;};_fefda .PdfShading =_dcbf ;_dcbf ._fbbd =_fefda ;return _dcbf ,nil ;case 6:_fgcae ,_acffec :=_gafa (_agbca );if _acffec !=nil {return nil ,_acffec ;};_fgcae .PdfShading =_dcbf ;_dcbf ._fbbd =_fgcae ;return _dcbf ,nil ;case 7:_gegac ,_deff :=_febe (_agbca );if _deff !=nil {return nil ,_deff ;};_gegac .PdfShading =_dcbf ;_dcbf ._fbbd =_gegac ;return _dcbf ,nil ;};return nil ,_fe .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ColorToRGB converts gray -> rgb for a single color component.
func (_dcga *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dcab ,_fdfd :=color .(*PdfColorDeviceGray );if !_fdfd {_bc .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_dcab ),float64 (*_dcab ),float64 (*_dcab )),nil ;};func (_bagbb *PdfWriter )copyObjects (){_bbbfc :=make (map[_de .PdfObject ]_de .PdfObject );_abdc :=make ([]_de .PdfObject ,0,len (_bagbb ._agfeb ));_gdgdd :=make (map[_de .PdfObject ]struct{},len (_bagbb ._agfeb ));_badfa :=make (map[_de .PdfObject ]struct{});for _ ,_bdedd :=range _bagbb ._agfeb {_cbgc :=_bagbb .copyObject (_bdedd ,_bbbfc ,_badfa ,false );if _ ,_baaaa :=_badfa [_bdedd ];_baaaa {continue ;};_abdc =append (_abdc ,_cbgc );_gdgdd [_cbgc ]=struct{}{};};_bagbb ._agfeb =_abdc ;_bagbb ._abdaa =_gdgdd ;_bagbb ._eeege =_bagbb .copyObject (_bagbb ._eeege ,_bbbfc ,nil ,false ).(*_de .PdfIndirectObject );_bagbb ._defa =_bagbb .copyObject (_bagbb ._defa ,_bbbfc ,nil ,false ).(*_de .PdfIndirectObject );if _bagbb ._bgdee !=nil {_bagbb ._bgdee =_bagbb .copyObject (_bagbb ._bgdee ,_bbbfc ,nil ,false ).(*_de .PdfIndirectObject );};if _bagbb ._gabdg {_bbaed :=make (map[_de .PdfObject ]int64 );for _aecdc ,_ccgff :=range _bagbb ._degdc {if _acfbd ,_gdeee :=_bbbfc [_aecdc ];_gdeee {_bbaed [_acfbd ]=_ccgff ;}else {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_bagbb ._degdc =_bbaed ;};};func (_eeebd *PdfFont )baseFields ()*fontCommon {if _eeebd ._adce ==nil {_bc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _eeebd ._adce .baseFields ();};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_degc *PdfColorspaceCalGray )ToPdfObject ()_de .PdfObject {_fdecc :=&_de .PdfObjectArray {};_fdecc .Append (_de .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_eaee :=_de .MakeDict ();if _degc .WhitePoint !=nil {_eaee .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_de .MakeArray (_de .MakeFloat (_degc .WhitePoint [0]),_de .MakeFloat (_degc .WhitePoint [1]),_de .MakeFloat (_degc .WhitePoint [2])));}else {_bc .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _degc .BlackPoint !=nil {_eaee .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_de .MakeArray (_de .MakeFloat (_degc .BlackPoint [0]),_de .MakeFloat (_degc .BlackPoint [1]),_de .MakeFloat (_degc .BlackPoint [2])));};_eaee .Set ("\u0047\u0061\u006dm\u0061",_de .MakeFloat (_degc .Gamma ));_fdecc .Append (_eaee );if _degc ._eefc !=nil {_degc ._eefc .PdfObject =_fdecc ;return _degc ._eefc ;};return _fdecc ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gbegd :=PdfColorDeviceGray (grayVal );return &_gbegd ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bcde :=NewPdfAnnotation ();_acaa :=&PdfAnnotationPrinterMark {};_acaa .PdfAnnotation =_bcde ;_bcde .SetContext (_acaa );return _acaa ;};

// ToPdfObject returns the PDF representation of the function.
func (_aebfb *PdfFunctionType2 )ToPdfObject ()_de .PdfObject {_fbfa :=_de .MakeDict ();_fbfa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_de .MakeInteger (2));_adagg :=&_de .PdfObjectArray {};for _ ,_aceda :=range _aebfb .Domain {_adagg .Append (_de .MakeFloat (_aceda ));};_fbfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adagg );if _aebfb .Range !=nil {_eagea :=&_de .PdfObjectArray {};for _ ,_agdgb :=range _aebfb .Range {_eagea .Append (_de .MakeFloat (_agdgb ));};_fbfa .Set ("\u0052\u0061\u006eg\u0065",_eagea );};if _aebfb .C0 !=nil {_gabdf :=&_de .PdfObjectArray {};for _ ,_fadcg :=range _aebfb .C0 {_gabdf .Append (_de .MakeFloat (_fadcg ));};_fbfa .Set ("\u0043\u0030",_gabdf );};if _aebfb .C1 !=nil {_dbcaae :=&_de .PdfObjectArray {};for _ ,_egeg :=range _aebfb .C1 {_dbcaae .Append (_de .MakeFloat (_egeg ));};_fbfa .Set ("\u0043\u0031",_dbcaae );};_fbfa .Set ("\u004e",_de .MakeFloat (_aebfb .N ));if _aebfb ._fefd !=nil {_aebfb ._fefd .PdfObject =_fbfa ;return _aebfb ._fefd ;};return _fbfa ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_acfgf *PdfFieldButton )GetType ()ButtonType {_fccg :=ButtonTypeCheckbox ;if _acfgf .Ff !=nil {if (uint32 (*_acfgf .Ff )&FieldFlagPushbutton .Mask ())> 0{_fccg =ButtonTypePush ;}else if (uint32 (*_acfgf .Ff )&FieldFlagRadio .Mask ())> 0{_fccg =ButtonTypeRadio ;};};return _fccg ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ffebf []byte )(_bgbec int ,_gaeeb error );};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_aeae *PdfPageResources )GenerateXObjectName ()_de .PdfObjectName {_cbfcc :=1;for {_fdeeb :=_de .MakeName (_d .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_cbfcc ));if !_aeae .HasXObjectByName (*_fdeeb ){return *_fdeeb ;};_cbfcc ++;};};

// Height returns the height of `rect`.
func (_feecf *PdfRectangle )Height ()float64 {return _bgc .Abs (_feecf .Ury -_feecf .Lly )};

// GetNumComponents returns the number of color components (1 for Separation).
func (_gccg *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_bfb *PdfReader )newPdfAnnotationMovieFromDict (_aefc *_de .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_afde :=PdfAnnotationMovie {};_afde .T =_aefc .Get ("\u0054");_afde .Movie =_aefc .Get ("\u004d\u006f\u0076i\u0065");_afde .A =_aefc .Get ("\u0041");return &_afde ,nil ;};func (_bgdb *pdfFontSimple )getFontEncoding ()(_gegf string ,_dgaef map[_gb .CharCode ]_gb .GlyphName ,_fcffd error ){_gegf ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _deeb ,_gagcc :=_bfagc [_bgdb ._ccbbd ];_gagcc {_gegf =_deeb ;}else if _bgdb .fontFlags ()&_adca !=0{for _fdffe ,_cfef :=range _bfagc {if _c .Contains (_bgdb ._ccbbd ,_fdffe ){_gegf =_cfef ;break ;};};};if _bgdb .Encoding ==nil {return _gegf ,nil ,nil ;};switch _eccbb :=_bgdb .Encoding .(type ){case *_de .PdfObjectName :return string (*_eccbb ),nil ,nil ;case *_de .PdfObjectDictionary :_caeca ,_cfda :=_de .GetName (_eccbb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cfda {_gegf =_caeca .String ();};if _fcdea :=_eccbb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fcdea !=nil {_bgge ,_ceff :=_de .GetArray (_fcdea );if !_ceff {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_eccbb ,_eccbb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_de .ErrTypeError ;};_dgaef ,_fcffd =_gb .FromFontDifferences (_bgge );};return _gegf ,_dgaef ,_fcffd ;default:_bc .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bgdb .Encoding ,_bgdb .Encoding );return "",nil ,_de .ErrTypeError ;};};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_bec :=NewPdfAnnotation ();_ggag :=&PdfAnnotationFileAttachment {};_ggag .PdfAnnotation =_bec ;_ggag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bec .SetContext (_ggag );return _ggag ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cagf :=PdfColorCalGray (grayVal );return &_cagf ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_cd .PSProgram ;_efae *_cd .PSExecutor ;_bggf []byte ;_fabab *_de .PdfObjectStream ;};var _fdaegg =_db .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// ToPdfObject returns a stream object.
func (_egaba *XObjectImage )ToPdfObject ()_de .PdfObject {_bfdcf :=_egaba ._afed ;_egbdf :=_bfdcf .PdfObjectDictionary ;if _egaba .Filter !=nil {_egbdf =_egaba .Filter .MakeStreamDict ();_bfdcf .PdfObjectDictionary =_egbdf ;};_egbdf .Set ("\u0054\u0079\u0070\u0065",_de .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_egbdf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0049\u006d\u0061g\u0065"));_egbdf .Set ("\u0057\u0069\u0064t\u0068",_de .MakeInteger (*(_egaba .Width )));_egbdf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_de .MakeInteger (*(_egaba .Height )));if _egaba .BitsPerComponent !=nil {_egbdf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_de .MakeInteger (*(_egaba .BitsPerComponent )));};if _egaba .ColorSpace !=nil {_egbdf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_egaba .ColorSpace .ToPdfObject ());};_egbdf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_egaba .Intent );_egbdf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_egaba .ImageMask );_egbdf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_egaba .Mask );_egbdf .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_egaba .Decode );_egbdf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_egaba .Interpolate );_egbdf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_egaba .Alternatives );_egbdf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_egaba .SMask );_egbdf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_egaba .SMaskInData );_egbdf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_egaba .Matte );_egbdf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_egaba .Name );_egbdf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_egaba .StructParent );_egbdf .SetIfNotNil ("\u0049\u0044",_egaba .ID );_egbdf .SetIfNotNil ("\u004f\u0050\u0049",_egaba .OPI );_egbdf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_egaba .Metadata );_egbdf .SetIfNotNil ("\u004f\u0043",_egaba .OC );_egbdf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_de .MakeInteger (int64 (len (_egaba .Stream ))));_bfdcf .Stream =_egaba .Stream ;return _bfdcf ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_eaeef :=NewPdfOutline ();_eaeef ._gccdf =&_eaeef ;return _eaeef ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_acga *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfceg ,_gfeg :=color .(*PdfColorPattern );if !_gfeg {_bc .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _bfceg .Color ==nil {return color ,nil ;};if _acga .UnderlyingCS ==nil {return nil ,_fe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _acga .UnderlyingCS .ColorToRGB (_bfceg .Color );};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_adfg *PdfFont )ToUnicode ()string {if _adfg .baseFields ()._eegcf ==nil {return "";};return _adfg .baseFields ()._eegcf .Name ();};

// String implements interface PdfObject.
func (_ega *PdfAction )String ()string {_cdb ,_gbg :=_ega .ToPdfObject ().(*_de .PdfIndirectObject );if _gbg {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ega ._def ,_cdb .PdfObject .String ());};return "";};func (_baeb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_caca *_de .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_abcg :=PdfAnnotationPrinterMark {};_abcg .MN =_caca .Get ("\u004d\u004e");return &_abcg ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_ffbf *_de .PdfObjectDictionary ;_degbc *_de .PdfIndirectObject ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gffb *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gffb .Alternate ==nil {_bc .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _gffb .N ==1{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_gdad :=NewPdfColorspaceDeviceGray ();return _gdad .ColorToRGB (color );}else if _gffb .N ==3{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _gffb .N ==4{_bc .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_ebfda :=NewPdfColorspaceDeviceCMYK ();return _ebfda .ColorToRGB (color );}else {return nil ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_bc .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gffb );return _gffb .Alternate .ColorToRGB (color );};

// GetNumComponents returns the number of color components.
func (_ebadf *PdfColorspaceICCBased )GetNumComponents ()int {return _ebadf .N };func (_cfaa *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _cfaa ._aceg };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_acfbc []byte ;_eedff bool ;_affeg []float64 ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ccbd :=&PdfFieldSignature {};_ccbd .PdfField =NewPdfField ();_ccbd .PdfField .SetContext (_ccbd );_ccbd .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ccbd .PdfAnnotationWidget .SetContext (_ccbd );_ccbd .PdfAnnotationWidget ._afa =_ccbd .PdfField ._gddee ;_ccbd .T =_de .MakeString ("");_ccbd .F =_de .MakeInteger (132);_ccbd .V =signature ;return _ccbd ;};type pdfFontSimple struct{fontCommon ;_dada *_de .PdfIndirectObject ;_acbc map[_gb .CharCode ]float64 ;_fafa _gb .TextEncoder ;_egfa _gb .TextEncoder ;_cacf *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _de .PdfObject ;LastChar _de .PdfObject ;Widths _de .PdfObject ;Encoding _de .PdfObject ;_dgae map[rune ]_eg .CharMetrics ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_beecf *PdfShadingType6 )ToPdfObject ()_de .PdfObject {_beecf .PdfShading .ToPdfObject ();_dcba ,_ccga :=_beecf .getShadingDict ();if _ccga !=nil {_bc .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _beecf .BitsPerCoordinate !=nil {_dcba .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_beecf .BitsPerCoordinate );};if _beecf .BitsPerComponent !=nil {_dcba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_beecf .BitsPerComponent );};if _beecf .BitsPerFlag !=nil {_dcba .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_beecf .BitsPerFlag );};if _beecf .Decode !=nil {_dcba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_beecf .Decode );};if _beecf .Function !=nil {if len (_beecf .Function )==1{_dcba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beecf .Function [0].ToPdfObject ());}else {_cbgg :=_de .MakeArray ();for _ ,_abbab :=range _beecf .Function {_cbgg .Append (_abbab .ToPdfObject ());};_dcba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbgg );};};return _beecf ._daegc ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eagaab *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_de .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faeaf ,_cgfb :=_de .GetNumbersAsFloat (objects );if _cgfb !=nil {return nil ,_cgfb ;};return _eagaab .ColorFromFloats (_faeaf );};func (_fdfg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// Encoder returns the font's text encoder.
func (_gdfaa pdfFontType0 )Encoder ()_gb .TextEncoder {return _gdfaa ._fcad };func (_bed *PdfReader )newPdfActionImportDataFromDict (_ceb *_de .PdfObjectDictionary )(*PdfActionImportData ,error ){_ebd ,_ffec :=_fab (_ceb .Get ("\u0046"));if _ffec !=nil {return nil ,_ffec ;};return &PdfActionImportData {F :_ebd },nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_edaaa *PdfPageResources )GetContainingPdfObject ()_de .PdfObject {return _edaaa ._fccd };

// ToPdfObject implements interface PdfModel.
func (_gbga *PdfActionGoTo )ToPdfObject ()_de .PdfObject {_gbga .PdfAction .ToPdfObject ();_aaa :=_gbga ._cg ;_edg :=_aaa .PdfObject .(*_de .PdfObjectDictionary );_edg .SetIfNotNil ("\u0053",_de .MakeName (string (ActionTypeGoTo )));_edg .SetIfNotNil ("\u0044",_gbga .D );return _aaa ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// GetXObjectByName gets XObject by name.
func (_bdbda *PdfPage )GetXObjectByName (name _de .PdfObjectName )(_de .PdfObject ,bool ){_adged ,_gaced :=_bdbda .Resources .XObject .(*_de .PdfObjectDictionary );if !_gaced {return nil ,false ;};if _ceee :=_adged .Get (name );_ceee !=nil {return _ceee ,true ;};return nil ,false ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fceb DefaultImageHandler )NewImageFromGoImage (goimg _a .Image )(*Image ,error ){_bgefb ,_eagfb :=_cbd .FromGoImage (goimg );if _eagfb !=nil {return nil ,_eagfb ;};_eceg :=_aade (_bgefb .Base ());return &_eceg ,nil ;};func _ageff (_ffdcg *_de .PdfObjectArray )(float64 ,error ){_fcgbd ,_cbdg :=_ffdcg .ToFloat64Array ();if _cbdg !=nil {_bc .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffdcg ,_cbdg );};switch len (_fcgbd ){case 1:return _fcgbd [0],nil ;case 3:_deeae :=PdfColorspaceDeviceRGB {};_ffbg ,_geff :=_deeae .ColorFromFloats (_fcgbd );if _geff !=nil {return 0.0,_geff ;};return _ffbg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_baaaaa :=PdfColorspaceDeviceCMYK {};_bdfb ,_adfca :=_baaaaa .ColorFromFloats (_fcgbd );if _adfca !=nil {return 0.0,_adfca ;};_ffedg ,_adfca :=_baaaaa .ColorToRGB (_bdfb .(*PdfColorDeviceCMYK ));if _adfca !=nil {return 0.0,_adfca ;};return _ffedg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cbdg =_fe .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_bc .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ffdcg ,_cbdg );return 0.0,_cbdg ;};func (_ddfcb *PdfReader )newPdfSignatureFromIndirect (_gdbeb *_de .PdfIndirectObject )(*PdfSignature ,error ){_fdced ,_beegb :=_gdbeb .PdfObject .(*_de .PdfObjectDictionary );if !_beegb {_bc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _aaae ,_acgdgc :=_ddfcb ._gafgf .GetModelFromPrimitive (_gdbeb ).(*PdfSignature );_acgdgc {return _aaae ,nil ;};_fdccbd :=&PdfSignature {};_fdccbd ._edgfg =_gdbeb ;_fdccbd .Type ,_ =_de .GetName (_fdced .Get ("\u0054\u0079\u0070\u0065"));_fdccbd .Filter ,_beegb =_de .GetName (_fdced .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_beegb {_bc .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_fdccbd .SubFilter ,_ =_de .GetName (_fdced .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_fdccbd .Contents ,_beegb =_de .GetString (_fdced .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_beegb {_bc .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_fdccbd .Cert =_fdced .Get ("\u0043\u0065\u0072\u0074");_fdccbd .ByteRange ,_ =_de .GetArray (_fdced .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_fdccbd .Reference ,_ =_de .GetArray (_fdced .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_fdccbd .Changes ,_ =_de .GetArray (_fdced .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_fdccbd .Name ,_ =_de .GetString (_fdced .Get ("\u004e\u0061\u006d\u0065"));_fdccbd .M ,_ =_de .GetString (_fdced .Get ("\u004d"));_fdccbd .Location ,_ =_de .GetString (_fdced .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_fdccbd .Reason ,_ =_de .GetString (_fdced .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_fdccbd .ContactInfo ,_ =_de .GetString (_fdced .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_fdccbd .R ,_ =_de .GetInt (_fdced .Get ("\u0052"));_fdccbd .V ,_ =_de .GetInt (_fdced .Get ("\u0056"));_fdccbd .PropBuild ,_ =_de .GetDict (_fdced .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_fdccbd .PropAuthTime ,_ =_de .GetInt (_fdced .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_fdccbd .PropAuthType ,_ =_de .GetName (_fdced .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _fdccbd ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_bcege *XObjectForm )SetContentStream (content []byte ,encoder _de .StreamEncoder )error {_fdada :=content ;if encoder ==nil {if _bcege .Filter !=nil {encoder =_bcege .Filter ;}else {encoder =_de .NewRawEncoder ();};};_fdgbc ,_acecg :=encoder .EncodeBytes (_fdada );if _acecg !=nil {return _acecg ;};_fdada =_fdgbc ;_bcege .Stream =_fdada ;_bcege .Filter =encoder ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_aeg *PdfAnnotationSquiggly )ToPdfObject ()_de .PdfObject {_aeg .PdfAnnotation .ToPdfObject ();_gbbf :=_aeg ._afa ;_dcbd :=_gbbf .PdfObject .(*_de .PdfObjectDictionary );_aeg .PdfAnnotationMarkup .appendToPdfDictionary (_dcbd );_dcbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_de .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_dcbd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aeg .QuadPoints );return _gbbf ;};

// SetOCProperties sets the optional content properties.
func (_ebbfg *PdfWriter )SetOCProperties (ocProperties _de .PdfObject )error {_agcb :=_ebbfg ._efdfc ;if ocProperties !=nil {_bc .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_agcb .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _ebbfg .addObjects (ocProperties );};return nil ;};