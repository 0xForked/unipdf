//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_gfd "bytes";_ed "encoding/binary";_cca "errors";_e "fmt";_ggf "github.com/unidoc/unipdf/v3/common";_cef "github.com/unidoc/unipdf/v3/common/license";_bb "github.com/unidoc/unipdf/v3/core";_ad "github.com/unidoc/unipdf/v3/core/security";_ff "github.com/unidoc/unipdf/v3/core/security/crypt";_ac "github.com/unidoc/unipdf/v3/internal/cmap";_fe "github.com/unidoc/unipdf/v3/internal/imageutil";_cg "github.com/unidoc/unipdf/v3/internal/sampling";_cefb "github.com/unidoc/unipdf/v3/internal/textencoding";_ca "github.com/unidoc/unipdf/v3/model/internal/fonts";_bef "github.com/unidoc/unipdf/v3/ps";_d "github.com/unidoc/unitype";_cea "golang.org/x/xerrors";_ce "image";_cb "image/color";_ "image/gif";_ "image/png";_ec "io";_ab "io/ioutil";_cc "math";_g "math/rand";_be "os";_a "regexp";_gg "sort";_ag "strconv";_gf "strings";_cd "time";_edf "unicode";_gd "unicode/utf8";);

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _gdagg (_afedd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_afedd }};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_cfad *PdfPageResources )AddExtGState (gsName _bb .PdfObjectName ,gsDict _bb .PdfObject )error {if _cfad .ExtGState ==nil {_cfad .ExtGState =_bb .MakeDict ();};_aceab :=_cfad .ExtGState ;_ffeaf ,_eafdf :=_bb .TraceToDirectObject (_aceab ).(*_bb .PdfObjectDictionary );if !_eafdf {_ggf .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_aceab ,_bb .TraceToDirectObject (_aceab ));return _bb .ErrTypeError ;};_ffeaf .Set (gsName ,gsDict );return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gbcb *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gbcb .MediaBox !=nil {return _gbcb .MediaBox ,nil ;};_ddfa :=_gbcb .Parent ;for _ddfa !=nil {_eaeg ,_beged :=_bb .GetDict (_ddfa );if !_beged {return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _cbfaf :=_eaeg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_cbfaf !=nil {_fbfea ,_gagg :=_bb .GetArray (_cbfaf );if !_gagg {return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_caebg ,_egaec :=NewPdfRectangle (*_fbfea );if _egaec !=nil {return nil ,_egaec ;};return _caebg ,nil ;};_ddfa =_eaeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_cca .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};func (_efege *pdfFontSimple )getFontEncoding ()(_fcdd string ,_abgde map[_cefb .CharCode ]_cefb .GlyphName ,_cfgd error ){_fcdd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _dbeba ,_gfgdg :=_fbagc [_efege ._babf ];_gfgdg {_fcdd =_dbeba ;}else if _efege .fontFlags ()&_gbcf !=0{for _fbeff ,_efdbe :=range _fbagc {if _gf .Contains (_efege ._babf ,_fbeff ){_fcdd =_efdbe ;break ;};};};if _efege .Encoding ==nil {return _fcdd ,nil ,nil ;};switch _fabga :=_efege .Encoding .(type ){case *_bb .PdfObjectName :return string (*_fabga ),nil ,nil ;case *_bb .PdfObjectDictionary :_efdg ,_aeabf :=_bb .GetName (_fabga .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _aeabf {_fcdd =_efdg .String ();};if _ceeeb :=_fabga .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ceeeb !=nil {_afdae ,_fade :=_bb .GetArray (_ceeeb );if !_fade {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fabga ,_fabga .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_bb .ErrTypeError ;};_abgde ,_cfgd =_cefb .FromFontDifferences (_afdae );};return _fcdd ,_abgde ,_cfgd ;default:_ggf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_efege .Encoding ,_efege .Encoding );return "",nil ,_bb .ErrTypeError ;};};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fdab :_bb .MakeIndirectObject (_bb .MakeDict ())}};

// ToInteger convert to an integer format.
func (_dcfg *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bgfa :=_cc .Pow (2,float64 (bits ))-1;return uint32 (_bgfa *_dcfg .Val ());};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fae *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbff :=vals [0];if _cbff < 0.0||_cbff > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdefc :=vals [1];if _cdefc < 0.0||_cdefc > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adad :=vals [2];if _adad < 0.0||_adad > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daebf :=NewPdfColorCalRGB (_cbff ,_cdefc ,_adad );return _daebf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_baa *PdfActionLaunch )ToPdfObject ()_bb .PdfObject {_baa .PdfAction .ToPdfObject ();_abcc :=_baa ._bd ;_fga :=_abcc .PdfObject .(*_bb .PdfObjectDictionary );_fga .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeLaunch )));if _baa .F !=nil {_fga .Set ("\u0046",_baa .F .ToPdfObject ());};_fga .SetIfNotNil ("\u0057\u0069\u006e",_baa .Win );_fga .SetIfNotNil ("\u004d\u0061\u0063",_baa .Mac );_fga .SetIfNotNil ("\u0055\u006e\u0069\u0078",_baa .Unix );_fga .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_baa .NewWindow );return _abcc ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};type pdfCIDFontType0 struct{fontCommon ;_efcgb *_bb .PdfIndirectObject ;_feebf _cefb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bb .PdfObject ;W _bb .PdfObject ;DW2 _bb .PdfObject ;W2 _bb .PdfObject ;_ebebf map[_cefb .CharCode ]float64 ;_gaae float64 ;};func (_cgaaag *pdfCIDFontType0 )baseFields ()*fontCommon {return &_cgaaag .fontCommon };

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bb .PdfObjectName ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_dga :=NewPdfAnnotation ();_ecbf :=&PdfAnnotationHighlight {};_ecbf .PdfAnnotation =_dga ;_ecbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dga .SetContext (_ecbf );return _ecbf ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_fgcbg *pdfFontSimple )ToPdfObject ()_bb .PdfObject {if _fgcbg ._bbec ==nil {_fgcbg ._bbec =&_bb .PdfIndirectObject {};};_bgcb :=_fgcbg .baseFields ().asPdfObjectDictionary ("");_fgcbg ._bbec .PdfObject =_bgcb ;if _fgcbg .FirstChar !=nil {_bgcb .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fgcbg .FirstChar );};if _fgcbg .LastChar !=nil {_bgcb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fgcbg .LastChar );};if _fgcbg .Widths !=nil {_bgcb .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fgcbg .Widths );};if _fgcbg .Encoding !=nil {_bgcb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgcbg .Encoding );}else if _fgcbg ._ggff !=nil {_afffg :=_fgcbg ._ggff .ToPdfObject ();if _afffg !=nil {_bgcb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_afffg );};};return _fgcbg ._bbec ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bb .PdfObject ;NewWindow _bb .PdfObject ;};func _agg (_bgef *_bb .PdfObjectDictionary )(*PdfFieldText ,error ){_gacc :=&PdfFieldText {};_gacc .DA ,_ =_bb .GetString (_bgef .Get ("\u0044\u0041"));_gacc .Q ,_ =_bb .GetInt (_bgef .Get ("\u0051"));_gacc .DS ,_ =_bb .GetString (_bgef .Get ("\u0044\u0053"));_gacc .RV =_bgef .Get ("\u0052\u0056");_gacc .MaxLen ,_ =_bb .GetInt (_bgef .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gacc ,nil ;};func (_afcc *PdfReader )newPdfAnnotationCaretFromDict (_fgea *_bb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dcge :=PdfAnnotationCaret {};_geg ,_agbf :=_afcc .newPdfAnnotationMarkupFromDict (_fgea );if _agbf !=nil {return nil ,_agbf ;};_dcge .PdfAnnotationMarkup =_geg ;_dcge .RD =_fgea .Get ("\u0052\u0044");_dcge .Sy =_fgea .Get ("\u0053\u0079");return &_dcge ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_ffcfc *PdfPattern )SetContext (ctx PdfModel ){_ffcfc ._abfca =ctx };

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bb .PdfObject ;BS _bb .PdfObject ;LE _bb .PdfObject ;IC _bb .PdfObject ;LL _bb .PdfObject ;LLE _bb .PdfObject ;Cap _bb .PdfObject ;IT _bb .PdfObject ;LLO _bb .PdfObject ;CP _bb .PdfObject ;Measure _bb .PdfObject ;CO _bb .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fbgc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fbgc .flattenFieldsWithOpts (false ,appgen ,opts );};func (_egfeg *PdfReader )newPdfSignatureFromIndirect (_cebea *_bb .PdfIndirectObject )(*PdfSignature ,error ){_ebaae ,_abdeb :=_cebea .PdfObject .(*_bb .PdfObjectDictionary );if !_abdeb {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _bebg ,_bdeefd :=_egfeg ._aadc .GetModelFromPrimitive (_cebea ).(*PdfSignature );_bdeefd {return _bebg ,nil ;};_aaeg :=&PdfSignature {};_aaeg ._fbgfae =_cebea ;_aaeg .Type ,_ =_bb .GetName (_ebaae .Get ("\u0054\u0079\u0070\u0065"));_aaeg .Filter ,_abdeb =_bb .GetName (_ebaae .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_abdeb {_ggf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_aaeg .SubFilter ,_ =_bb .GetName (_ebaae .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_aaeg .Contents ,_abdeb =_bb .GetString (_ebaae .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_abdeb {_ggf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_aaeg .Cert =_ebaae .Get ("\u0043\u0065\u0072\u0074");_aaeg .ByteRange ,_ =_bb .GetArray (_ebaae .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_aaeg .Reference ,_ =_bb .GetArray (_ebaae .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_aaeg .Changes ,_ =_bb .GetArray (_ebaae .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_aaeg .Name ,_ =_bb .GetString (_ebaae .Get ("\u004e\u0061\u006d\u0065"));_aaeg .M ,_ =_bb .GetString (_ebaae .Get ("\u004d"));_aaeg .Location ,_ =_bb .GetString (_ebaae .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_aaeg .Reason ,_ =_bb .GetString (_ebaae .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_aaeg .ContactInfo ,_ =_bb .GetString (_ebaae .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_aaeg .R ,_ =_bb .GetInt (_ebaae .Get ("\u0052"));_aaeg .V ,_ =_bb .GetInt (_ebaae .Get ("\u0056"));_aaeg .PropBuild ,_ =_bb .GetDict (_ebaae .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_aaeg .PropAuthTime ,_ =_bb .GetInt (_ebaae .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_aaeg .PropAuthType ,_ =_bb .GetName (_ebaae .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _aaeg ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_efae *PdfAppender )UpdateObject (obj _bb .PdfObject ){_efae .replaceObject (obj ,obj );if _ ,_eag :=_efae ._gcdg [obj ];!_eag {_efae ._bbeb =append (_efae ._bbeb ,obj );_efae ._gcdg [obj ]=struct{}{};};};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_bfdfc *PdfFont )CharcodesToUnicode (charcodes []_cefb .CharCode )[]rune {_gcac ,_ ,_ :=_bfdfc .CharcodesToUnicodeWithStats (charcodes );return _gcac ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;RD _bb .PdfObject ;};func (_fbad *PdfReader )newPdfAnnotationFileAttachmentFromDict (_dfdbc *_bb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dacg :=PdfAnnotationFileAttachment {};_bbgfb ,_gdbfd :=_fbad .newPdfAnnotationMarkupFromDict (_dfdbc );if _gdbfd !=nil {return nil ,_gdbfd ;};_dacg .PdfAnnotationMarkup =_bbgfb ;_dacg .FS =_dfdbc .Get ("\u0046\u0053");_dacg .Name =_dfdbc .Get ("\u004e\u0061\u006d\u0065");return &_dacg ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_da :=NewPdfAction ();_abc :=&PdfActionGoTo3DView {};_abc .PdfAction =_da ;_da .SetContext (_abc );return _abc ;};

// GetXObjectByName gets XObject by name.
func (_afbg *PdfPage )GetXObjectByName (name _bb .PdfObjectName )(_bb .PdfObject ,bool ){_dbagg ,_gdge :=_afbg .Resources .XObject .(*_bb .PdfObjectDictionary );if !_gdge {return nil ,false ;};if _fcage :=_dbagg .Get (name );_fcage !=nil {return _fcage ,true ;};return nil ,false ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_egfa *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if _egfa .Alternate ==nil {if _egfa .N ==1{_aaggc :=NewPdfColorspaceDeviceGray ();return _aaggc .ColorFromPdfObjects (objects );}else if _egfa .N ==3{_bege :=NewPdfColorspaceDeviceRGB ();return _bege .ColorFromPdfObjects (objects );}else if _egfa .N ==4{_bdfc :=NewPdfColorspaceDeviceCMYK ();return _bdfc .ColorFromPdfObjects (objects );}else {return nil ,_cca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _egfa .Alternate .ColorFromPdfObjects (objects );};

// ToPdfObject implements interface PdfModel.
func (_aafcc *PdfAnnotationTrapNet )ToPdfObject ()_bb .PdfObject {_aafcc .PdfAnnotation .ToPdfObject ();_gfea :=_aafcc ._afg ;_aadg :=_gfea .PdfObject .(*_bb .PdfObjectDictionary );_aadg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _gfea ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_eead *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_efac :=func (_agbdd float64 )float64 {if _agbdd >=6.0/29{return _agbdd *_agbdd *_agbdd ;};return 108.0/841*(_agbdd -4/29);};_ecaa ,_eee :=color .(*PdfColorLab );if !_eee {_ggf .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_ecaa .L ();AStar :=_ecaa .A ();BStar :=_ecaa .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_eead .WhitePoint [0]*_efac (L );Y :=_eead .WhitePoint [1]*_efac (M );Z :=_eead .WhitePoint [2]*_efac (N );_fged :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fbffb :=-0.969256*X +1.875992*Y +0.041556*Z ;_fbccg :=0.055648*X +-0.204043*Y +1.057311*Z ;_fged =_cc .Min (_cc .Max (_fged ,0),1.0);_fbffb =_cc .Min (_cc .Max (_fbffb ,0),1.0);_fbccg =_cc .Min (_cc .Max (_fbccg ,0),1.0);return NewPdfColorDeviceRGB (_fged ,_fbffb ,_fbccg ),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eecf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecdc :=vals [0];if _ecdc < 0.0||_ecdc > 1.0{_ggf .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _ecdc < 0.0{_ecdc =0.0;}else if _ecdc > 1.0{_ecdc =1.0;};return NewPdfColorDeviceGray (_ecdc ),nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_adfa *modelManager )GetPrimitiveFromModel (model PdfModel )_bb .PdfObject {_gffa ,_fdcbg :=_adfa ._bgbgcg [model ];if !_fdcbg {return nil ;};return _gffa ;};func (_fggag *PdfAnnotationMarkup )appendToPdfDictionary (_ffg *_bb .PdfObjectDictionary ){_ffg .SetIfNotNil ("\u0054",_fggag .T );if _fggag .Popup !=nil {_ffg .Set ("\u0050\u006f\u0070u\u0070",_fggag .Popup .ToPdfObject ());};_ffg .SetIfNotNil ("\u0043\u0041",_fggag .CA );_ffg .SetIfNotNil ("\u0052\u0043",_fggag .RC );_ffg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fggag .CreationDate );_ffg .SetIfNotNil ("\u0049\u0052\u0054",_fggag .IRT );_ffg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_fggag .Subj );_ffg .SetIfNotNil ("\u0052\u0054",_fggag .RT );_ffg .SetIfNotNil ("\u0049\u0054",_fggag .IT );_ffg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_fggag .ExData );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_fcaad *PdfFieldSignature )ToPdfObject ()_bb .PdfObject {if _fcaad .PdfAnnotationWidget !=nil {_fcaad .PdfAnnotationWidget .ToPdfObject ();};_fcaad .PdfField .ToPdfObject ();_ffac :=_fcaad ._fdab ;_gbef :=_ffac .PdfObject .(*_bb .PdfObjectDictionary );_gbef .SetIfNotNil ("\u0046\u0054",_bb .MakeName ("\u0053\u0069\u0067"));_gbef .SetIfNotNil ("\u004c\u006f\u0063\u006b",_fcaad .Lock );_gbef .SetIfNotNil ("\u0053\u0056",_fcaad .SV );if _fcaad .V !=nil {_gbef .SetIfNotNil ("\u0056",_fcaad .V .ToPdfObject ());};return _ffac ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_eagb *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func _fdeace (_gfggd []byte )(_efbce ,_bdfdc string ,_gbbfg error ){_ggf .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gfggd ));_begg :=_gdcg .FindIndex (_gfggd );if _begg ==nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_bb .ErrTypeError ;};_bdbdd :=_begg [1];_ffabf :=_gf .Index (string (_gfggd [_bdbdd :]),_bbbe );if _ffabf < 0{_efbce =string (_gfggd [_bdbdd :]);return _efbce ,"",nil ;};_geeg :=_bdbdd +_ffabf ;_efbce =string (_gfggd [_bdbdd :_geeg ]);_ffcfa :=_geeg ;_ffabf =_gf .Index (string (_gfggd [_ffcfa :]),_bgcbd );if _ffabf < 0{_ggf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gbbfg );return "","",_bb .ErrTypeError ;};_egbedg :=_ffcfa +_ffabf ;_bdfdc =string (_gfggd [_ffcfa :_egbedg ]);return _efbce ,_bdfdc ,nil ;};var _begac ="";

// ToPdfObject implements interface PdfModel.
func (_fcc *PdfActionRendition )ToPdfObject ()_bb .PdfObject {_fcc .PdfAction .ToPdfObject ();_ebc :=_fcc ._bd ;_bc :=_ebc .PdfObject .(*_bb .PdfObjectDictionary );_bc .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeRendition )));_bc .SetIfNotNil ("\u0052",_fcc .R );_bc .SetIfNotNil ("\u0041\u004e",_fcc .AN );_bc .SetIfNotNil ("\u004f\u0050",_fcc .OP );_bc .SetIfNotNil ("\u004a\u0053",_fcc .JS );return _ebc ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bb .PdfObjectInteger ;TilingType *_bb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bb .PdfObjectFloat ;YStep *_bb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bb .PdfObjectArray ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dad :=NewPdfAnnotation ();_eacc :=&PdfAnnotationPolygon {};_eacc .PdfAnnotation =_dad ;_eacc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dad .SetContext (_eacc );return _eacc ;};

// ToInteger convert to an integer format.
func (_egbed *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_fdb :=_cc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_fdb *_egbed .C ()),uint32 (_fdb *_egbed .M ()),uint32 (_fdb *_egbed .Y ()),uint32 (_fdb *_egbed .K ())};};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cebca *PdfReader )PageFromIndirectObject (ind *_bb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cebca .PageList )!=len (_cebca ._aaea ){return nil ,0,_cca .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _fagg ,_effg :=range _cebca ._aaea {if _effg ==ind {return _cebca .PageList [_fagg ],_fagg +1,nil ;};};return nil ,0,_cca .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_geca *PdfReader )newPdfAnnotationWidgetFromDict (_bdd *_bb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_dcad :=PdfAnnotationWidget {};_dcad .H =_bdd .Get ("\u0048");_dcad .MK =_bdd .Get ("\u004d\u004b");_dcad .A =_bdd .Get ("\u0041");_dcad .AA =_bdd .Get ("\u0041\u0041");_dcad .BS =_bdd .Get ("\u0042\u0053");_dcad .Parent =_bdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_dcad ,nil ;};func (_ggee *PdfReader )newPdfAnnotationHighlightFromDict (_ccfe *_bb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_caaa :=PdfAnnotationHighlight {};_ced ,_ggba :=_ggee .newPdfAnnotationMarkupFromDict (_ccfe );if _ggba !=nil {return nil ,_ggba ;};_caaa .PdfAnnotationMarkup =_ced ;_caaa .QuadPoints =_ccfe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_caaa ,nil ;};func (_baeg *PdfReader )newPdfAnnotationInkFromDict (_afbda *_bb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ffdd :=PdfAnnotationInk {};_ddc ,_bce :=_baeg .newPdfAnnotationMarkupFromDict (_afbda );if _bce !=nil {return nil ,_bce ;};_ffdd .PdfAnnotationMarkup =_ddc ;_ffdd .InkList =_afbda .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ffdd .BS =_afbda .Get ("\u0042\u0053");return &_ffdd ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bb .PdfObject ;Open _bb .PdfObject ;};func (_dee *PdfReader )newPdfActionHideFromDict (_fgd *_bb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_fgd .Get ("\u0054"),H :_fgd .Get ("\u0048")},nil ;};var _feecge _cd .Time ;

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_afdab *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _afdab .Alternate ==nil {_ggf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _afdab .N ==1{_ggf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_bgag :=NewPdfColorspaceDeviceGray ();return _bgag .ImageToRGB (img );}else if _afdab .N ==3{_ggf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _afdab .N ==4{_ggf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_edgae :=NewPdfColorspaceDeviceCMYK ();return _edgae .ImageToRGB (img );}else {return img ,_cca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ggf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_afdab );_edae ,_agfc :=_afdab .Alternate .ImageToRGB (img );_ggf .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ggf .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_edae );return _edae ,_agfc ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_fabg *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccfg ,_dfbeg :=color .(*PdfColorDeviceCMYK );if !_dfbeg {_ggf .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bge :=_ccfg .C ();_adae :=_ccfg .M ();_aacd :=_ccfg .Y ();_cbee :=_ccfg .K ();_bge =_bge *(1-_cbee )+_cbee ;_adae =_adae *(1-_cbee )+_cbee ;_aacd =_aacd *(1-_cbee )+_cbee ;_cdedb :=1-_bge ;_facd :=1-_adae ;_dacdd :=1-_aacd ;return NewPdfColorDeviceRGB (_cdedb ,_facd ,_dacdd ),nil ;};func (_bdaac *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bb .PdfObject ;GetContainingPdfObject ()_bb .PdfObject ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bb .PdfObject )(*PdfFilespec ,error ){_dgfbb :=&PdfFilespec {};var _fdge *_bb .PdfObjectDictionary ;if _bagdc ,_dbeb :=_bb .GetIndirect (obj );_dbeb {_dgfbb ._dgdeg =_bagdc ;_dffg ,_edggf :=_bb .GetDict (_bagdc .PdfObject );if !_edggf {_ggf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bb .ErrTypeError ;};_fdge =_dffg ;}else if _ddfe ,_fdad :=_bb .GetDict (obj );_fdad {_dgfbb ._dgdeg =_ddfe ;_fdge =_ddfe ;}else {_ggf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bb .ErrTypeError ;};if _fdge ==nil {_ggf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cca .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ebae :=_fdge .Get ("\u0054\u0079\u0070\u0065");_ebae !=nil {_adbeb ,_efcgcd :=_ebae .(*_bb .PdfObjectName );if !_efcgcd {_ggf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ebae );}else {if *_adbeb !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ggf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_adbeb );};};};if _aebgb :=_fdge .Get ("\u0046\u0053");_aebgb !=nil {_dgfbb .FS =_aebgb ;};if _cagea :=_fdge .Get ("\u0046");_cagea !=nil {_dgfbb .F =_cagea ;};if _bcce :=_fdge .Get ("\u0055\u0046");_bcce !=nil {_dgfbb .UF =_bcce ;};if _caad :=_fdge .Get ("\u0044\u004f\u0053");_caad !=nil {_dgfbb .DOS =_caad ;};if _bebe :=_fdge .Get ("\u004d\u0061\u0063");_bebe !=nil {_dgfbb .Mac =_bebe ;};if _eefeg :=_fdge .Get ("\u0055\u006e\u0069\u0078");_eefeg !=nil {_dgfbb .Unix =_eefeg ;};if _dfbg :=_fdge .Get ("\u0049\u0044");_dfbg !=nil {_dgfbb .ID =_dfbg ;};if _cecafa :=_fdge .Get ("\u0056");_cecafa !=nil {_dgfbb .V =_cecafa ;};if _eagd :=_fdge .Get ("\u0045\u0046");_eagd !=nil {_dgfbb .EF =_eagd ;};if _cddd :=_fdge .Get ("\u0052\u0046");_cddd !=nil {_dgfbb .RF =_cddd ;};if _gfgffg :=_fdge .Get ("\u0044\u0065\u0073\u0063");_gfgffg !=nil {_dgfbb .Desc =_gfgffg ;};if _ffeg :=_fdge .Get ("\u0043\u0049");_ffeg !=nil {_dgfbb .CI =_ffeg ;};return _dgfbb ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_cddb *PdfFunctionType4 )ToPdfObject ()_bb .PdfObject {_cgbf :=_cddb ._ccafg ;if _cgbf ==nil {_cddb ._ccafg =&_bb .PdfObjectStream {};_cgbf =_cddb ._ccafg ;};_efea :=_bb .MakeDict ();_efea .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (4));_egef :=&_bb .PdfObjectArray {};for _ ,_efgaf :=range _cddb .Domain {_egef .Append (_bb .MakeFloat (_efgaf ));};_efea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egef );_adcbgd :=&_bb .PdfObjectArray {};for _ ,_gdec :=range _cddb .Range {_adcbgd .Append (_bb .MakeFloat (_gdec ));};_efea .Set ("\u0052\u0061\u006eg\u0065",_adcbgd );if _cddb ._cebfb ==nil &&_cddb .Program !=nil {_cddb ._cebfb =[]byte (_cddb .Program .String ());};_efea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_cddb ._cebfb ))));_cgbf .Stream =_cddb ._cebfb ;_cgbf .PdfObjectDictionary =_efea ;return _cgbf ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_eaec *PdfColorspaceDeviceN )ToPdfObject ()_bb .PdfObject {_ebac :=_bb .MakeArray (_bb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_ebac .Append (_eaec .ColorantNames );_ebac .Append (_eaec .AlternateSpace .ToPdfObject ());_ebac .Append (_eaec .TintTransform .ToPdfObject ());if _eaec .Attributes !=nil {_ebac .Append (_eaec .Attributes .ToPdfObject ());};if _eaec ._gdcac !=nil {_eaec ._gdcac .PdfObject =_ebac ;return _eaec ._gdcac ;};return _ebac ;};

// ToPdfObject implements interface PdfModel.
func (_gea *PdfActionGoToR )ToPdfObject ()_bb .PdfObject {_gea .PdfAction .ToPdfObject ();_cgba :=_gea ._bd ;_dd :=_cgba .PdfObject .(*_bb .PdfObjectDictionary );_dd .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoToR )));if _gea .F !=nil {_dd .Set ("\u0046",_gea .F .ToPdfObject ());};_dd .SetIfNotNil ("\u0044",_gea .D );_dd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gea .NewWindow );return _cgba ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bb .PdfObjectStream )(*XObjectForm ,error ){_gcbbe :=&XObjectForm {};_gcbbe ._cfdbb =stream ;_ccggc :=*(stream .PdfObjectDictionary );_caeca ,_ddcef :=_bb .NewEncoderFromStream (stream );if _ddcef !=nil {return nil ,_ddcef ;};_gcbbe .Filter =_caeca ;if _ebfee :=_ccggc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_ebfee !=nil {_cdadf ,_fbfcc :=_ebfee .(*_bb .PdfObjectName );if !_fbfcc {return nil ,_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_cdadf !="\u0046\u006f\u0072\u006d"{_ggf .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_cca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _dcabc :=_ccggc .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_dcabc !=nil {_gcbbe .FormType =_dcabc ;};if _bcba :=_ccggc .Get ("\u0042\u0042\u006f\u0078");_bcba !=nil {_gcbbe .BBox =_bcba ;};if _ccfec :=_ccggc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ccfec !=nil {_gcbbe .Matrix =_ccfec ;};if _egbgf :=_ccggc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_egbgf !=nil {_egbgf =_bb .TraceToDirectObject (_egbgf );_aebaf ,_ebbg :=_egbgf .(*_bb .PdfObjectDictionary );if !_ebbg {_ggf .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_bb .ErrTypeError ;};_gcgf ,_gcgdc :=NewPdfPageResourcesFromDict (_aebaf );if _gcgdc !=nil {_ggf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_gcgdc ;};_gcbbe .Resources =_gcgf ;_ggf .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_gcbbe .Resources );};_gcbbe .Group =_ccggc .Get ("\u0047\u0072\u006fu\u0070");_gcbbe .Ref =_ccggc .Get ("\u0052\u0065\u0066");_gcbbe .MetaData =_ccggc .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_gcbbe .PieceInfo =_ccggc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gcbbe .LastModified =_ccggc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_gcbbe .StructParent =_ccggc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gcbbe .StructParents =_ccggc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gcbbe .OPI =_ccggc .Get ("\u004f\u0050\u0049");_gcbbe .OC =_ccggc .Get ("\u004f\u0043");_gcbbe .Name =_ccggc .Get ("\u004e\u0061\u006d\u0065");_gcbbe .Stream =stream .Stream ;return _gcbbe ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_cggdd *PdfPage )error ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_dffgg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_ebfef *PdfReader )newPdfPageFromDict (_agbc *_bb .PdfObjectDictionary )(*PdfPage ,error ){_afbde :=NewPdfPage ();_afbde ._bfeaf =_agbc ;_aabfa :=*_agbc ;_fbdab ,_gdgc :=_aabfa .Get ("\u0054\u0079\u0070\u0065").(*_bb .PdfObjectName );if !_gdgc {return nil ,_cca .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_fbdab !="\u0050\u0061\u0067\u0065"{return nil ,_cca .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fgfg :=_aabfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fgfg !=nil {_afbde .Parent =_fgfg ;};if _eebcc :=_aabfa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eebcc !=nil {_dbfgg ,_ffag :=_bb .GetString (_eebcc );if !_ffag {return nil ,_cca .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_egaef ,_cdaag :=NewPdfDate (_dbfgg .Str ());if _cdaag !=nil {return nil ,_cdaag ;};_afbde .LastModified =&_egaef ;};if _addaf :=_aabfa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_addaf !=nil &&!_bb .IsNullObject (_addaf ){_dggcc ,_ecbe :=_bb .GetDict (_addaf );if !_ecbe {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_addaf );};var _efddf error ;_afbde .Resources ,_efddf =NewPdfPageResourcesFromDict (_dggcc );if _efddf !=nil {return nil ,_efddf ;};}else {_efgaff ,_gbbgd :=_afbde .getParentResources ();if _gbbgd !=nil {return nil ,_gbbgd ;};if _efgaff ==nil {_efgaff =NewPdfPageResources ();};_afbde .Resources =_efgaff ;};if _fcfcf :=_aabfa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_fcfcf !=nil {_eafd ,_cgefb :=_bb .GetArray (_fcfcf );if !_cgefb {return nil ,_cca .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _afgbfc error ;_afbde .MediaBox ,_afgbfc =NewPdfRectangle (*_eafd );if _afgbfc !=nil {return nil ,_afgbfc ;};};if _ggdfg :=_aabfa .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ggdfg !=nil {_gcecc ,_eaccg :=_bb .GetArray (_ggdfg );if !_eaccg {return nil ,_cca .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _fdgde error ;_afbde .CropBox ,_fdgde =NewPdfRectangle (*_gcecc );if _fdgde !=nil {return nil ,_fdgde ;};};if _fgaaa :=_aabfa .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_fgaaa !=nil {_efdfd ,_feef :=_bb .GetArray (_fgaaa );if !_feef {return nil ,_cca .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fcbb error ;_afbde .BleedBox ,_fcbb =NewPdfRectangle (*_efdfd );if _fcbb !=nil {return nil ,_fcbb ;};};if _bfabf :=_aabfa .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_bfabf !=nil {_bafaf ,_gcbaa :=_bb .GetArray (_bfabf );if !_gcbaa {return nil ,_cca .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _egfb error ;_afbde .TrimBox ,_egfb =NewPdfRectangle (*_bafaf );if _egfb !=nil {return nil ,_egfb ;};};if _dcbaa :=_aabfa .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dcbaa !=nil {_eeaef ,_egefc :=_bb .GetArray (_dcbaa );if !_egefc {return nil ,_cca .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _faaab error ;_afbde .ArtBox ,_faaab =NewPdfRectangle (*_eeaef );if _faaab !=nil {return nil ,_faaab ;};};if _acde :=_aabfa .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_acde !=nil {_afbde .BoxColorInfo =_acde ;};if _dbgg :=_aabfa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dbgg !=nil {_afbde .Contents =_dbgg ;};if _abagf :=_aabfa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_abagf !=nil {_cgacb ,_bdcdb :=_bb .GetInt (_abagf );if !_bdcdb {return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_efbaf :=int64 (*_cgacb );_afbde .Rotate =&_efbaf ;};if _gagdd :=_aabfa .Get ("\u0047\u0072\u006fu\u0070");_gagdd !=nil {_afbde .Group =_gagdd ;};if _cgbbg :=_aabfa .Get ("\u0054\u0068\u0075m\u0062");_cgbbg !=nil {_afbde .Thumb =_cgbbg ;};if _fffbc :=_aabfa .Get ("\u0042");_fffbc !=nil {_afbde .B =_fffbc ;};if _daded :=_aabfa .Get ("\u0044\u0075\u0072");_daded !=nil {_afbde .Dur =_daded ;};if _gbbbg :=_aabfa .Get ("\u0054\u0072\u0061n\u0073");_gbbbg !=nil {_afbde .Trans =_gbbbg ;};if _aaef :=_aabfa .Get ("\u0041\u0041");_aaef !=nil {_afbde .AA =_aaef ;};if _eaaf :=_aabfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eaaf !=nil {_afbde .Metadata =_eaaf ;};if _bdadbb :=_aabfa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bdadbb !=nil {_afbde .PieceInfo =_bdadbb ;};if _eacce :=_aabfa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_eacce !=nil {_afbde .StructParents =_eacce ;};if _gdfaa :=_aabfa .Get ("\u0049\u0044");_gdfaa !=nil {_afbde .ID =_gdfaa ;};if _ggab :=_aabfa .Get ("\u0050\u005a");_ggab !=nil {_afbde .PZ =_ggab ;};if _aabc :=_aabfa .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_aabc !=nil {_afbde .SeparationInfo =_aabc ;};if _abaf :=_aabfa .Get ("\u0054\u0061\u0062\u0073");_abaf !=nil {_afbde .Tabs =_abaf ;};if _gbaf :=_aabfa .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_gbaf !=nil {_afbde .TemplateInstantiated =_gbaf ;};if _edbfe :=_aabfa .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_edbfe !=nil {_afbde .PresSteps =_edbfe ;};if _eeeg :=_aabfa .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_eeeg !=nil {_afbde .UserUnit =_eeeg ;};if _fffgg :=_aabfa .Get ("\u0056\u0050");_fffgg !=nil {_afbde .VP =_fffgg ;};if _bcacg :=_aabfa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_bcacg !=nil {_afbde .Annots =_bcacg ;};_afbde ._debb =_ebfef ;return _afbde ,nil ;};

// Y returns the value of the yellow component of the color.
func (_aded *PdfColorDeviceCMYK )Y ()float64 {return float64 (_aded [2])};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fadc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=_fadc .GetNumComponents (){return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adff ,_eddd :=_bb .GetNumbersAsFloat (objects );if _eddd !=nil {return nil ,_eddd ;};return _fadc .ColorFromFloats (_adff );};

// AddAnnotation appends `annot` to the list of page annotations.
func (_aagga *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _aagga ._bgaf ==nil {_aagga .GetAnnotations ();};_aagga ._bgaf =append (_aagga ._bgaf ,annot );};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_dg :=&PdfAction {};_dg ._bd =_bb .MakeIndirectObject (_bb .MakeDict ());return _dg ;};func (_decaca *pdfFontSimple )addEncoding ()error {var (_febg string ;_ddeg map[_cefb .CharCode ]_cefb .GlyphName ;_efbg _cefb .SimpleEncoder ;);if _decaca .Encoder ()!=nil {_fcca ,_adgc :=_decaca .Encoder ().(_cefb .SimpleEncoder );if _adgc &&_fcca !=nil {_febg =_fcca .BaseName ();};};if _decaca .Encoding !=nil {_gbdb ,_dbbbc ,_abfd :=_decaca .getFontEncoding ();if _abfd !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_decaca ._babf ,_decaca ._cddcc ,_decaca .Encoding ,_decaca .Encoding ,_abfd );return _abfd ;};if _gbdb !=""{_febg =_gbdb ;};_efbg ,_abfd =_cefb .NewSimpleTextEncoder (_febg ,_dbbbc );if _abfd !=nil {return _abfd ;};};if _efbg ==nil {_fece :=_decaca ._ceee ;if _fece !=nil {switch _decaca ._cddcc {case "\u0054\u0079\u0070e\u0031":if _fece .fontFile !=nil &&_fece .fontFile ._afge !=nil {_ggf .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_efbg =_fece .fontFile ._afge ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _fece ._efaga !=nil {_ggf .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_bedgfa ,_acgeg :=_fece ._efaga .MakeEncoder ();if _acgeg ==nil {_efbg =_bedgfa ;};};};};};if _efbg !=nil {if _ddeg !=nil {_ggf .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ddeg ,_decaca .baseFields ());_efbg =_cefb .ApplyDifferences (_efbg ,_ddeg );};_decaca .SetEncoder (_efbg );};return nil ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gfcf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gfcf .ToPdfOutline ().PdfOutlineTreeNode ;};

// Width returns the width of `rect`.
func (_bfafg *PdfRectangle )Width ()float64 {return _cc .Abs (_bfafg .Urx -_bfafg .Llx )};var ImageHandling ImageHandler =DefaultImageHandler {};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// Fill populates `form` with values provided by `provider`.
func (_efbga *PdfAcroForm )Fill (provider FieldValueProvider )error {return _efbga .fill (provider ,nil )};func (_adcg *fontFile )loadFromSegments (_gggac ,_dgcag []byte )error {_ggf .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gggac ),len (_dgcag ));_edbcf :=_adcg .parseASCIIPart (_gggac );if _edbcf !=nil {return _edbcf ;};_ggf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_adcg );if len (_dgcag )==0{return nil ;};_ggf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_adcg );return nil ;};func _faed (_fcag _bb .PdfObject )(*PdfColorspaceDeviceN ,error ){_bgddd :=NewPdfColorspaceDeviceN ();if _dbdcd ,_gfgff :=_fcag .(*_bb .PdfIndirectObject );_gfgff {_bgddd ._gdcac =_dbdcd ;};_fcag =_bb .TraceToDirectObject (_fcag );_ccgda ,_gceb :=_fcag .(*_bb .PdfObjectArray );if !_gceb {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ccgda .Len ()!=4&&_ccgda .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fcag =_ccgda .Get (0);_cgfg ,_gceb :=_fcag .(*_bb .PdfObjectName );if !_gceb {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_cgfg !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_fcag =_ccgda .Get (1);_fcag =_bb .TraceToDirectObject (_fcag );_acfd ,_gceb :=_fcag .(*_bb .PdfObjectArray );if !_gceb {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_bgddd .ColorantNames =_acfd ;_fcag =_ccgda .Get (2);_ecbb ,_fgeda :=NewPdfColorspaceFromPdfObject (_fcag );if _fgeda !=nil {return nil ,_fgeda ;};_bgddd .AlternateSpace =_ecbb ;_bdadb ,_fgeda :=_cdgbg (_ccgda .Get (3));if _fgeda !=nil {return nil ,_fgeda ;};_bgddd .TintTransform =_bdadb ;if _ccgda .Len ()==5{_cgaf ,_fdcg :=_adcbg (_ccgda .Get (4));if _fdcg !=nil {return nil ,_fdcg ;};_bgddd .Attributes =_cgaf ;};return _bgddd ,nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_begac =author };func (_egbe *PdfReader )newPdfActionURIFromDict (_dgf *_bb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_dgf .Get ("\u0055\u0052\u0049"),IsMap :_dgf .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// RemovePage removes a page by number.
func (_fabb *PdfAppender )RemovePage (pageNum int ){_cfaa :=pageNum -1;_fabb ._fabc =append (_fabb ._fabc [0:_cfaa ],_fabb ._fabc [pageNum :]...);};func (_gbgf *PdfReader )newPdfAnnotationLinkFromDict (_fgc *_bb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_daf :=PdfAnnotationLink {};_daf .A =_fgc .Get ("\u0041");_daf .Dest =_fgc .Get ("\u0044\u0065\u0073\u0074");_daf .H =_fgc .Get ("\u0048");_daf .PA =_fgc .Get ("\u0050\u0041");_daf .QuadPoints =_fgc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_daf .BS =_fgc .Get ("\u0042\u0053");return &_daf ,nil ;};func (_dbagd *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_gddaa *Image )resampleLowBits (_ccgdg []uint32 ){_dgaef :=_fe .BytesPerLine (int (_gddaa .Width ),int (_gddaa .BitsPerComponent ),_gddaa .ColorComponents );_ggad :=make ([]byte ,_gddaa .ColorComponents *_dgaef *int (_gddaa .Height ));_ebegd :=int (_gddaa .BitsPerComponent )*_gddaa .ColorComponents *int (_gddaa .Width );_ffedb :=uint8 (8);var (_feggd ,_gcag int ;_gebbc uint32 ;);for _eggdb :=0;_eggdb < int (_gddaa .Height );_eggdb ++{_gcag =_eggdb *_dgaef ;for _gfba :=0;_gfba < _ebegd ;_gfba ++{_gebbc =_ccgdg [_feggd ];_ffedb -=uint8 (_gddaa .BitsPerComponent );_ggad [_gcag ]|=byte (_gebbc )<<_ffedb ;if _ffedb ==0{_ffedb =8;_gcag ++;};_feggd ++;};};_gddaa .Data =_ggad ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bb .PdfObject ;LE _bb .PdfObject ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;IT _bb .PdfObject ;Measure _bb .PdfObject ;};func (_dcaad *PdfAcroForm )fill (_fbaeg FieldValueProvider ,_aadab FieldAppearanceGenerator )error {if _dcaad ==nil {return nil ;};_bdeab ,_ebaa :=_fbaeg .FieldValues ();if _ebaa !=nil {return _ebaa ;};for _ ,_fdfg :=range _dcaad .AllFields (){_dfcc :=_fdfg .PartialName ();_efacd ,_dcdba :=_bdeab [_dfcc ];if !_dcdba {if _edef ,_effc :=_fdfg .FullName ();_effc ==nil {_efacd ,_dcdba =_bdeab [_edef ];};};if !_dcdba {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_dfcc );continue ;};if _ebbec :=_cfef (_fdfg ,_efacd );_ebbec !=nil {return _ebbec ;};if _aadab ==nil {continue ;};for _ ,_deec :=range _fdfg .Annotations {_bddfg ,_gebaa :=_aadab .GenerateAppearanceDict (_dcaad ,_fdfg ,_deec );if _gebaa !=nil {return _gebaa ;};_deec .AP =_bddfg ;_deec .ToPdfObject ();};};return nil ;};

// Add appends an outline item as a child of the current outline item.
func (_beda *OutlineItem )Add (item *OutlineItem ){_beda .Entries =append (_beda .Entries ,item )};

// SetContext sets the sub action (context).
func (_bg *PdfAction )SetContext (ctx PdfModel ){_bg ._fd =ctx };

// SetAction sets the PDF action for the annotation link.
func (_feb *PdfAnnotationLink )SetAction (action *PdfAction ){_feb ._dfe =action ;if action ==nil {_feb .A =nil ;};};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ccfb *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _aacg []*PdfOutlineTreeNode ;var _gfeef []string ;var _cafca func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_cafca =func (_addc *PdfOutlineTreeNode ,_bdbee *[]*PdfOutlineTreeNode ,_edad *[]string ,_cfbf int ){if _addc ==nil {return ;};if _addc ._acgdb ==nil {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_baggb ,_cdagf :=_addc ._acgdb .(*PdfOutlineItem );if _cdagf {*_bdbee =append (*_bdbee ,&_baggb .PdfOutlineTreeNode );_ebfad :=_gf .Repeat ("\u0020",_cfbf *2)+_baggb .Title .Decoded ();*_edad =append (*_edad ,_ebfad );};if _addc .First !=nil {_fbdf :=_gf .Repeat ("\u0020",_cfbf *2)+"\u002b";*_edad =append (*_edad ,_fbdf );_cafca (_addc .First ,_bdbee ,_edad ,_cfbf +1);};if _cdagf &&_baggb .Next !=nil {_cafca (_baggb .Next ,_bdbee ,_edad ,_cfbf );};};_cafca (_ccfb ._bgaeg ,&_aacg ,&_gfeef ,0);return _aacg ,_gfeef ,nil ;};func (_dce *PdfReader )newPdfActionMovieFromDict (_ffa *_bb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ffa .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ffa .Get ("\u0054"),Operation :_ffa .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};func (_ddff *PdfReader )newPdfActionSubmitFormFromDict (_gce *_bb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_fef ,_fge :=_edfed (_gce .Get ("\u0046"));if _fge !=nil {return nil ,_fge ;};return &PdfActionSubmitForm {F :_fef ,Fields :_gce .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gce .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dfa :=NewPdfAnnotation ();_dfd :=&PdfAnnotationPolyLine {};_dfd .PdfAnnotation =_dfa ;_dfd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfa .SetContext (_dfd );return _dfd ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_adbec *PdfPage )GetContainingPdfObject ()_bb .PdfObject {return _adbec ._bbacd };func (_bcgd *PdfReader )newPdfAnnotationLineFromDict (_cgd *_bb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_becf :=PdfAnnotationLine {};_beed ,_aafg :=_bcgd .newPdfAnnotationMarkupFromDict (_cgd );if _aafg !=nil {return nil ,_aafg ;};_becf .PdfAnnotationMarkup =_beed ;_becf .L =_cgd .Get ("\u004c");_becf .BS =_cgd .Get ("\u0042\u0053");_becf .LE =_cgd .Get ("\u004c\u0045");_becf .IC =_cgd .Get ("\u0049\u0043");_becf .LL =_cgd .Get ("\u004c\u004c");_becf .LLE =_cgd .Get ("\u004c\u004c\u0045");_becf .Cap =_cgd .Get ("\u0043\u0061\u0070");_becf .IT =_cgd .Get ("\u0049\u0054");_becf .LLO =_cgd .Get ("\u004c\u004c\u004f");_becf .CP =_cgd .Get ("\u0043\u0050");_becf .Measure =_cgd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_becf .CO =_cgd .Get ("\u0043\u004f");return &_becf ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_aab :=NewPdfAnnotation ();_caa :=&PdfAnnotationUnderline {};_caa .PdfAnnotation =_aab ;_caa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aab .SetContext (_caa );return _caa ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_bdbdf *PdfPageResources )SetFontByName (keyName _bb .PdfObjectName ,obj _bb .PdfObject )error {if _bdbdf .Font ==nil {_bdbdf .Font =_bb .MakeDict ();};_dfgd ,_dgad :=_bb .TraceToDirectObject (_bdbdf .Font ).(*_bb .PdfObjectDictionary );if !_dgad {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bb .TraceToDirectObject (_bdbdf .Font ));return _bb .ErrTypeError ;};_dfgd .Set (keyName ,obj );return nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_cdbdd *PdfReader )GetObjectNums ()[]int {return _cdbdd ._eagc .GetObjectNums ()};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gdca *PdfAnnotation )GetContext ()PdfModel {if _gdca ==nil {return nil ;};return _gdca ._bafb ;};

// Encoder returns the font's text encoder.
func (_ddabc pdfCIDFontType2 )Encoder ()_cefb .TextEncoder {return _ddabc ._egfac };

// ToPdfObject implements interface PdfModel.
func (_cgca *PdfAnnotationWidget )ToPdfObject ()_bb .PdfObject {_cgca .PdfAnnotation .ToPdfObject ();_fedd :=_cgca ._afg ;_efaf :=_fedd .PdfObject .(*_bb .PdfObjectDictionary );if _cgca ._cgbaf {return _fedd ;};_cgca ._cgbaf =true ;_efaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_efaf .SetIfNotNil ("\u0048",_cgca .H );_efaf .SetIfNotNil ("\u004d\u004b",_cgca .MK );_efaf .SetIfNotNil ("\u0041",_cgca .A );_efaf .SetIfNotNil ("\u0041\u0041",_cgca .AA );_efaf .SetIfNotNil ("\u0042\u0053",_cgca .BS );_cdd :=_cgca .Parent ;if _cgca ._eafa !=nil {if _cgca ._eafa ._fdab ==_cgca ._afg {_cgca ._eafa .ToPdfObject ();};_cdd =_cgca ._eafa .GetContainingPdfObject ();};if _cdd !=_fedd {_efaf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cdd );};_cgca ._cgbaf =false ;return _fedd ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_eefc :=PdfColorLab {l ,a ,b };return &_eefc };func _cbdcd ()string {return _ggf .Version };

// ToPdfObject converts the font to a PDF representation.
func (_bfcb *pdfFontType0 )ToPdfObject ()_bb .PdfObject {if _bfcb ._dcgc ==nil {_bfcb ._dcgc =&_bb .PdfIndirectObject {};};_dfec :=_bfcb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bfcb ._dcgc .PdfObject =_dfec ;if _bfcb .Encoding !=nil {_dfec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfcb .Encoding );}else if _bfcb ._gddcd !=nil {_dfec .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfcb ._gddcd .ToPdfObject ());};if _bfcb .DescendantFont !=nil {_dfec .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bb .MakeArray (_bfcb .DescendantFont .ToPdfObject ()));};return _bfcb ._dcgc ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_aebf []byte )(_dccc int ,_egaeg error );};

// ToPdfObject returns the PDF representation of the function.
func (_gabad *PdfFunctionType0 )ToPdfObject ()_bb .PdfObject {if _gabad ._ebccb ==nil {_gabad ._ebccb =&_bb .PdfObjectStream {};};_decg :=_bb .MakeDict ();_decg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (0));_gedd :=&_bb .PdfObjectArray {};for _ ,_efdgg :=range _gabad .Domain {_gedd .Append (_bb .MakeFloat (_efdgg ));};_decg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gedd );_dbdba :=&_bb .PdfObjectArray {};for _ ,_begfa :=range _gabad .Range {_dbdba .Append (_bb .MakeFloat (_begfa ));};_decg .Set ("\u0052\u0061\u006eg\u0065",_dbdba );_ebed :=&_bb .PdfObjectArray {};for _ ,_gcgecf :=range _gabad .Size {_ebed .Append (_bb .MakeInteger (int64 (_gcgecf )));};_decg .Set ("\u0053\u0069\u007a\u0065",_ebed );_decg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bb .MakeInteger (int64 (_gabad .BitsPerSample )));if _gabad .Order !=1{_decg .Set ("\u004f\u0072\u0064e\u0072",_bb .MakeInteger (int64 (_gabad .Order )));};_decg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_gabad ._ffeb ))));_gabad ._ebccb .Stream =_gabad ._ffeb ;_gabad ._ebccb .PdfObjectDictionary =_decg ;return _gabad ._ebccb ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ebgc :=NewPdfAnnotation ();_gaac :=&PdfAnnotationWidget {};_gaac .PdfAnnotation =_ebgc ;_ebgc .SetContext (_gaac );return _gaac ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_fea :=NewPdfAnnotation ();_fgb :=&PdfAnnotationSquiggly {};_fgb .PdfAnnotation =_fea ;_fgb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fea .SetContext (_fgb );return _fgb ;};

// AddImageResource adds an image to the XObject resources.
func (_abbd *PdfPage )AddImageResource (name _bb .PdfObjectName ,ximg *XObjectImage )error {var _fccfg *_bb .PdfObjectDictionary ;if _abbd .Resources .XObject ==nil {_fccfg =_bb .MakeDict ();_abbd .Resources .XObject =_fccfg ;}else {var _bdadg bool ;_fccfg ,_bdadg =(_abbd .Resources .XObject ).(*_bb .PdfObjectDictionary );if !_bdadg {return _cca .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_fccfg .Set (name ,ximg .ToPdfObject ());return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_gbbg *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_fedc *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _fedc ._bgaf !=nil {return _fedc ._bgaf ,nil ;};if _fedc .Annots ==nil {_fedc ._bgaf =[]*PdfAnnotation {};return nil ,nil ;};if _fedc ._debb ==nil {_fedc ._bgaf =[]*PdfAnnotation {};return nil ,nil ;};_fbagca ,_gbdea :=_fedc ._debb .loadAnnotations (_fedc .Annots );if _gbdea !=nil {return nil ,_gbdea ;};if _fbagca ==nil {_fedc ._bgaf =[]*PdfAnnotation {};};_fedc ._bgaf =_fbagca ;return _fedc ._bgaf ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_adgfbe pdfFontType0 )GetCharMetrics (code _cefb .CharCode )(_ca .CharMetrics ,bool ){if _adgfbe .DescendantFont ==nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_adgfbe );return _ca .CharMetrics {},false ;};return _adgfbe .DescendantFont .GetCharMetrics (code );};

// String returns a string representation of what flags are set.
func (_aeg FieldFlag )String ()string {_bcee :="";if _aeg ==FieldFlagClear {_bcee ="\u0043\u006c\u0065a\u0072";return _bcee ;};if _aeg &FieldFlagReadOnly > 0{_bcee +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _aeg &FieldFlagRequired > 0{_bcee +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _aeg &FieldFlagNoExport > 0{_bcee +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _aeg &FieldFlagNoToggleToOff > 0{_bcee +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _aeg &FieldFlagRadio > 0{_bcee +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _aeg &FieldFlagPushbutton > 0{_bcee +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _aeg &FieldFlagRadiosInUnision > 0{_bcee +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _aeg &FieldFlagMultiline > 0{_bcee +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _aeg &FieldFlagPassword > 0{_bcee +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _aeg &FieldFlagFileSelect > 0{_bcee +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _aeg &FieldFlagDoNotScroll > 0{_bcee +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _aeg &FieldFlagComb > 0{_bcee +="\u007c\u0043\u006fm\u0062";};if _aeg &FieldFlagRichText > 0{_bcee +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _aeg &FieldFlagDoNotSpellCheck > 0{_bcee +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _aeg &FieldFlagCombo > 0{_bcee +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _aeg &FieldFlagEdit > 0{_bcee +="\u007c\u0045\u0064i\u0074";};if _aeg &FieldFlagSort > 0{_bcee +="\u007c\u0053\u006fr\u0074";};if _aeg &FieldFlagMultiSelect > 0{_bcee +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _aeg &FieldFlagCommitOnSelChange > 0{_bcee +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _gf .Trim (_bcee ,"\u007c");};func _gbgea (_cacc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_aabec ,_eaad :=_bb .GetDict (_cacc .AP );if !_eaad {return nil ,nil ,_cca .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _aabec ==nil {return nil ,nil ,nil ;};_eccb ,_eaad :=_bb .GetArray (_cacc .Rect );if !_eaad ||_eccb .Len ()!=4{return nil ,nil ,_cca .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ffcce ,_bbca :=NewPdfRectangle (*_eccb );if _bbca !=nil {return nil ,nil ,_bbca ;};_bfdd :=_bb .TraceToDirectObject (_aabec .Get ("\u004e"));switch _deea :=_bfdd .(type ){case *_bb .PdfObjectStream :_gadec :=_deea ;_bcace ,_eggc :=NewXObjectFormFromStream (_gadec );return _bcace ,_ffcce ,_eggc ;case *_bb .PdfObjectDictionary :_dafc :=_deea ;_ebfa ,_edge :=_bb .GetName (_cacc .AS );if !_edge {return nil ,nil ,nil ;};if _dafc .Get (*_ebfa )==nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_afce ,_edge :=_bb .GetStream (_dafc .Get (*_ebfa ));if !_edge {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ebfa );return nil ,nil ,_cca .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dadag ,_afed :=NewXObjectFormFromStream (_afce );return _dadag ,_ffcce ,_afed ;};_ggf .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bfdd );return nil ,nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bb .PdfObject ;IsMap _bb .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bb .PdfObject ;Flags _bb .PdfObject ;};func (_gcbg *PdfAppender )updateObjectsDeep (_gebb _bb .PdfObject ,_gadge map[_bb .PdfObject ]struct{}){if _gadge ==nil {_gadge =map[_bb .PdfObject ]struct{}{};};if _ ,_bdab :=_gadge [_gebb ];_bdab ||_gebb ==nil {return ;};_gadge [_gebb ]=struct{}{};_deed :=_bb .ResolveReferencesDeep (_gebb ,_gcbg ._ebcc );if _deed !=nil {_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_deed );};switch _bcde :=_gebb .(type ){case *_bb .PdfIndirectObject :switch {case _bcde .GetParser ()==_gcbg ._cdfd ._eagc :return ;case _bcde .GetParser ()==_gcbg .Reader ._eagc :_gfgd ,_ :=_gcbg ._cdfd .GetIndirectObjectByNumber (int (_bcde .ObjectNumber ));_aef ,_bea :=_gfgd .(*_bb .PdfIndirectObject );if _bea &&_aef !=nil {if _aef .PdfObject !=_bcde .PdfObject &&_aef .PdfObject .WriteString ()!=_bcde .PdfObject .WriteString (){_gcbg .addNewObject (_gebb );_gcbg ._bbed [_gebb ]=_bcde .ObjectNumber ;};};default:_gcbg .addNewObject (_gebb );};_gcbg .updateObjectsDeep (_bcde .PdfObject ,_gadge );case *_bb .PdfObjectArray :for _ ,_cdfdf :=range _bcde .Elements (){_gcbg .updateObjectsDeep (_cdfdf ,_gadge );};case *_bb .PdfObjectDictionary :for _ ,_beeac :=range _bcde .Keys (){_gcbg .updateObjectsDeep (_bcde .Get (_beeac ),_gadge );};case *_bb .PdfObjectStreams :if _bcde .GetParser ()!=_gcbg ._cdfd ._eagc {for _ ,_efcgc :=range _bcde .Elements (){_gcbg .updateObjectsDeep (_efcgc ,_gadge );};};case *_bb .PdfObjectStream :switch {case _bcde .GetParser ()==_gcbg ._cdfd ._eagc :return ;case _bcde .GetParser ()==_gcbg .Reader ._eagc :if _fddc ,_edgc :=_gcbg ._cdfd ._eagc .LookupByReference (_bcde .PdfObjectReference );_edgc ==nil {var _dfbd bool ;if _gabb ,_fecc :=_bb .GetStream (_fddc );_fecc &&_gfd .Equal (_gabb .Stream ,_bcde .Stream ){_dfbd =true ;};if _dgg ,_eacec :=_bb .GetDict (_fddc );_dfbd &&_eacec {_dfbd =_dgg .WriteString ()==_bcde .PdfObjectDictionary .WriteString ();};if _dfbd {return ;};};if _bcde .ObjectNumber !=0{_gcbg ._bbed [_gebb ]=_bcde .ObjectNumber ;};default:if _ ,_daed :=_gcbg ._gcdg [_gebb ];!_daed {_gcbg .addNewObject (_gebb );};};_gcbg .updateObjectsDeep (_bcde .PdfObjectDictionary ,_gadge );};};

// GetContainingPdfObject implements interface PdfModel.
func (_fbfeb *PdfSignature )GetContainingPdfObject ()_bb .PdfObject {return _fbfeb ._fbgfae };

// ColorToRGB converts a CalRGB color to an RGB color.
func (_gfee *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgbbb ,_acgd :=color .(*PdfColorCalRGB );if !_acgd {_ggf .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ccbad :=_dgbbb .A ();_bcddb :=_dgbbb .B ();_efadb :=_dgbbb .C ();X :=_gfee .Matrix [0]*_cc .Pow (_ccbad ,_gfee .Gamma [0])+_gfee .Matrix [3]*_cc .Pow (_bcddb ,_gfee .Gamma [1])+_gfee .Matrix [6]*_cc .Pow (_efadb ,_gfee .Gamma [2]);Y :=_gfee .Matrix [1]*_cc .Pow (_ccbad ,_gfee .Gamma [0])+_gfee .Matrix [4]*_cc .Pow (_bcddb ,_gfee .Gamma [1])+_gfee .Matrix [7]*_cc .Pow (_efadb ,_gfee .Gamma [2]);Z :=_gfee .Matrix [2]*_cc .Pow (_ccbad ,_gfee .Gamma [0])+_gfee .Matrix [5]*_cc .Pow (_bcddb ,_gfee .Gamma [1])+_gfee .Matrix [8]*_cc .Pow (_efadb ,_gfee .Gamma [2]);_bafe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_babda :=-0.969256*X +1.875992*Y +0.041556*Z ;_gbbeg :=0.055648*X +-0.204043*Y +1.057311*Z ;_bafe =_cc .Min (_cc .Max (_bafe ,0),1.0);_babda =_cc .Min (_cc .Max (_babda ,0),1.0);_gbbeg =_cc .Min (_cc .Max (_gbbeg ,0),1.0);return NewPdfColorDeviceRGB (_bafe ,_babda ,_gbbeg ),nil ;};func _dcee (_cfe *PdfPage )map[_bb .PdfObjectName ]_bb .PdfObject {_bgf :=make (map[_bb .PdfObjectName ]_bb .PdfObject );if _cfe .Resources ==nil {return _bgf ;};if _cfe .Resources .Font !=nil {if _daee ,_ddbe :=_bb .GetDict (_cfe .Resources .Font );_ddbe {for _ ,_deb :=range _daee .Keys (){_bgf [_deb ]=_daee .Get (_deb );};};};if _cfe .Resources .ExtGState !=nil {if _ddgf ,_aae :=_bb .GetDict (_cfe .Resources .ExtGState );_aae {for _ ,_cdec :=range _ddgf .Keys (){_bgf [_cdec ]=_ddgf .Get (_cdec );};};};if _cfe .Resources .XObject !=nil {if _gaab ,_babe :=_bb .GetDict (_cfe .Resources .XObject );_babe {for _ ,_gdaa :=range _gaab .Keys (){_bgf [_gdaa ]=_gaab .Get (_gdaa );};};};if _cfe .Resources .Pattern !=nil {if _fdeb ,_agef :=_bb .GetDict (_cfe .Resources .Pattern );_agef {for _ ,_geecf :=range _fdeb .Keys (){_bgf [_geecf ]=_fdeb .Get (_geecf );};};};if _cfe .Resources .Shading !=nil {if _cfg ,_aabe :=_bb .GetDict (_cfe .Resources .Shading );_aabe {for _ ,_bdfa :=range _cfg .Keys (){_bgf [_bdfa ]=_cfg .Get (_bdfa );};};};if _cfe .Resources .ProcSet !=nil {if _fcce ,_dbfe :=_bb .GetDict (_cfe .Resources .ProcSet );_dbfe {for _ ,_fcec :=range _fcce .Keys (){_bgf [_fcec ]=_fcce .Get (_fcec );};};};if _cfe .Resources .Properties !=nil {if _gdd ,_fecf :=_bb .GetDict (_cfe .Resources .Properties );_fecf {for _ ,_gbad :=range _gdd .Keys (){_bgf [_gbad ]=_gdd .Get (_gbad );};};};return _bgf ;};func _gagab (_dccd _bb .PdfObject )(map[_cefb .CharCode ]float64 ,error ){if _dccd ==nil {return nil ,nil ;};_ddgcc ,_agfd :=_bb .GetArray (_dccd );if !_agfd {return nil ,nil ;};_ggbga :=map[_cefb .CharCode ]float64 {};_bfdfcb :=_ddgcc .Len ();for _efcfc :=0;_efcfc < _bfdfcb -1;_efcfc ++{_fgefa :=_bb .TraceToDirectObject (_ddgcc .Get (_efcfc ));_beeag ,_gfbde :=_bb .GetIntVal (_fgefa );if !_gfbde {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_efcfc ,_fgefa );};_efcfc ++;if _efcfc > _bfdfcb -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ddgcc );};_cdecg :=_bb .TraceToDirectObject (_ddgcc .Get (_efcfc ));switch _cdecg .(type ){case *_bb .PdfObjectArray :_afcge ,_ :=_bb .GetArray (_cdecg );if _abgda ,_eegdc :=_afcge .ToFloat64Array ();_eegdc ==nil {for _afgfe :=0;_afgfe < len (_abgda );_afgfe ++{_ggbga [_cefb .CharCode (_beeag +_afgfe )]=_abgda [_afgfe ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_efcfc ,_cdecg );};case *_bb .PdfObjectInteger :_gcabc ,_edggc :=_bb .GetIntVal (_cdecg );if !_edggc {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_efcfc ,_cdecg );};_efcfc ++;if _efcfc > _bfdfcb -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ddgcc );};_defff :=_ddgcc .Get (_efcfc );_eeaf ,_fgaa :=_bb .GetNumberAsFloat (_defff );if _fgaa !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_efcfc ,_defff );};for _gadac :=_beeag ;_gadac <=_gcabc ;_gadac ++{_ggbga [_cefb .CharCode (_gadac )]=_eeaf ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_efcfc ,_cdecg );};};return _ggbga ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bb .PdfObject ;Name _bb .PdfObject ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_dggc *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_dbeaa :=_cg .NewReader (img .getBase ());_ddba :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_dggc .AlternateSpace .GetNumComponents (),nil ,img ._afaa ,nil );_aagbb :=_cg .NewWriter (_ddba );_gbfe :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_ggf .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_ggf .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_dggc .TintTransform );_agdb :=_dggc .AlternateSpace .DecodeArray ();var (_bggb uint32 ;_bcec error ;);for {_bggb ,_bcec =_dbeaa .ReadSample ();if _bcec ==_ec .EOF {break ;};if _bcec !=nil {return img ,_bcec ;};_ddee :=float64 (_bggb )/_gbfe ;_cdebd ,_baeca :=_dggc .TintTransform .Evaluate ([]float64 {_ddee });if _baeca !=nil {return img ,_baeca ;};for _fafa ,_cbea :=range _cdebd {_ddag :=_fe .LinearInterpolate (_cbea ,_agdb [_fafa *2],_agdb [_fafa *2+1],0,1);if _baeca =_aagbb .WriteSample (uint32 (_ddag *_gbfe ));_baeca !=nil {return img ,_baeca ;};};};return _dggc .AlternateSpace .ImageToRGB (_bagfd (&_ddba ));};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bb .PdfObject ;AN _bb .PdfObject ;OP _bb .PdfObject ;JS _bb .PdfObject ;};func (_ebbb *PdfReader )newPdfAnnotationSoundFromDict (_egdg *_bb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_dgb :=PdfAnnotationSound {};_cee ,_eceb :=_ebbb .newPdfAnnotationMarkupFromDict (_egdg );if _eceb !=nil {return nil ,_eceb ;};_dgb .PdfAnnotationMarkup =_cee ;_dgb .Name =_egdg .Get ("\u004e\u0061\u006d\u0065");_dgb .Sound =_egdg .Get ("\u0053\u006f\u0075n\u0064");return &_dgb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egab *PdfAnnotationPrinterMark )ToPdfObject ()_bb .PdfObject {_egab .PdfAnnotation .ToPdfObject ();_dacf :=_egab ._afg ;_fgee :=_dacf .PdfObject .(*_bb .PdfObjectDictionary );_fgee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_fgee .SetIfNotNil ("\u004d\u004e",_egab .MN );return _dacf ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_eceba *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_cca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_eacd :=&PdfColorPattern {};_gfdbcd ,_abcg :=objects [len (objects )-1].(*_bb .PdfObjectName );if !_abcg {_ggf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_eacd .PatternName =*_gfdbcd ;if len (objects )> 1{_gcbd :=objects [0:len (objects )-1];if _eceba .UnderlyingCS ==nil {_ggf .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_cca .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_edgdb ,_cdfa :=_eceba .UnderlyingCS .ColorFromPdfObjects (_gcbd );if _cdfa !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cdfa );return nil ,_cdfa ;};_eacd .Color =_edgdb ;};return _eacd ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gbfc *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _gbfc .fill (provider ,appGen );};func (_cdbg *PdfReader )flattenFieldsWithOpts (_deaec bool ,_ccae FieldAppearanceGenerator ,_efgef *FieldFlattenOpts )error {if _efgef ==nil {_efgef =&FieldFlattenOpts {};};var _gbbb bool ;_cecb :=map[*PdfAnnotation ]bool {};{var _ffdg []*PdfField ;_efegd :=_cdbg .AcroForm ;if _efegd !=nil {if _efgef .FilterFunc !=nil {_ffdg =_efegd .filteredFields (_efgef .FilterFunc ,true );_gbbb =_efegd .Fields !=nil &&len (*_efegd .Fields )> 0;}else {_ffdg =_efegd .AllFields ();};};for _ ,_efcf :=range _ffdg {for _ ,_cfed :=range _efcf .Annotations {_cecb [_cfed .PdfAnnotation ]=_efcf .V !=nil ;if _ccae !=nil {_eebc ,_geedd :=_ccae .GenerateAppearanceDict (_efegd ,_efcf ,_cfed );if _geedd !=nil {return _geedd ;};_cfed .AP =_eebc ;};};};};if _deaec {for _ ,_debee :=range _cdbg .PageList {_abcge ,_deeg :=_debee .GetAnnotations ();if _deeg !=nil {return _deeg ;};for _ ,_bbffc :=range _abcge {_cecb [_bbffc ]=true ;};};};for _ ,_eabef :=range _cdbg .PageList {var _aadgg []*PdfAnnotation ;if _ccae !=nil {if _gddd :=_ccae .WrapContentStream (_eabef );_gddd !=nil {return _gddd ;};};_bdaf ,_cfggb :=_eabef .GetAnnotations ();if _cfggb !=nil {return _cfggb ;};for _ ,_fdgc :=range _bdaf {_ccbe ,_bbgge :=_cecb [_fdgc ];if !_bbgge {_aadgg =append (_aadgg ,_fdgc );continue ;};switch _fdgc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_ffcc ,_gagfc ,_daeg :=_gbgea (_fdgc );if _daeg !=nil {if !_ccbe {_ggf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_daeg );continue ;};if _ffcc ==nil {continue ;};_cdag :=_eabef .Resources .GenerateXObjectName ();_eabef .Resources .SetXObjectFormByName (_cdag ,_ffcc );_cfga :=_cc .Min (_gagfc .Llx ,_gagfc .Urx );_cffc :=_cc .Min (_gagfc .Lly ,_gagfc .Ury );var _ecag []string ;_ecag =append (_ecag ,"\u0071");_ecag =append (_ecag ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_cfga ,_cffc ));_ecag =append (_ecag ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cdag .String ()));_ecag =append (_ecag ,"\u0051");_bfcc :=_gf .Join (_ecag ,"\u000a");_daeg =_eabef .AppendContentStream (_bfcc );if _daeg !=nil {return _daeg ;};if _ffcc .Resources !=nil {_aaggf ,_ffda :=_bb .GetDict (_ffcc .Resources .Font );if _ffda {for _ ,_ceec :=range _aaggf .Keys (){if !_eabef .Resources .HasFontByName (_ceec ){_eabef .Resources .SetFontByName (_ceec ,_aaggf .Get (_ceec ));};};};};};if len (_aadgg )> 0{_eabef ._bgaf =_aadgg ;}else {_eabef ._bgaf =[]*PdfAnnotation {};};};if !_gbbb {_cdbg .AcroForm =nil ;};return nil ;};func (_ecfc *PdfReader )newPdfFieldFromIndirectObject (_dcab *_bb .PdfIndirectObject ,_egfab *PdfField )(*PdfField ,error ){if _cddfb ,_aaccb :=_ecfc ._aadc .GetModelFromPrimitive (_dcab ).(*PdfField );_aaccb {return _cddfb ,nil ;};_cdcd ,_fcfgf :=_bb .GetDict (_dcab );if !_fcfgf {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gabba :=NewPdfField ();_gabba ._fdab =_dcab ;_gabba ._fdab .PdfObject =_cdcd ;if _bffb ,_eacecc :=_bb .GetName (_cdcd .Get ("\u0046\u0054"));_eacecc {_gabba .FT =_bffb ;};if _egfab !=nil {_gabba .Parent =_egfab ;};_gabba .T ,_ =_cdcd .Get ("\u0054").(*_bb .PdfObjectString );_gabba .TU ,_ =_cdcd .Get ("\u0054\u0055").(*_bb .PdfObjectString );_gabba .TM ,_ =_cdcd .Get ("\u0054\u004d").(*_bb .PdfObjectString );_gabba .Ff ,_ =_cdcd .Get ("\u0046\u0066").(*_bb .PdfObjectInteger );_gabba .V =_cdcd .Get ("\u0056");_gabba .DV =_cdcd .Get ("\u0044\u0056");_gabba .AA =_cdcd .Get ("\u0041\u0041");_debf :=_gabba .FT ;if _debf ==nil &&_egfab !=nil {_debf =_egfab .FT ;};if _debf !=nil {switch *_debf {case "\u0054\u0078":_gdgf ,_bdae :=_agg (_cdcd );if _bdae !=nil {return nil ,_bdae ;};_gdgf .PdfField =_gabba ;_gabba ._bdce =_gdgf ;case "\u0043\u0068":_gggc ,_dgbbc :=_cabb (_cdcd );if _dgbbc !=nil {return nil ,_dgbbc ;};_gggc .PdfField =_gabba ;_gabba ._bdce =_gggc ;case "\u0042\u0074\u006e":_cbead ,_debe :=_befb (_cdcd );if _debe !=nil {return nil ,_debe ;};_cbead .PdfField =_gabba ;_gabba ._bdce =_cbead ;case "\u0053\u0069\u0067":_decac ,_bfbaa :=_ecfc .newPdfFieldSignatureFromDict (_cdcd );if _bfbaa !=nil {return nil ,_bfbaa ;};_decac .PdfField =_gabba ;_gabba ._bdce =_decac ;default:_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_gabba .FT );return nil ,_cca .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _efcd ,_ddabb :=_bb .GetName (_cdcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_ddabb {if *_efcd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dgbcf ,_fdebf :=_ecfc .newPdfAnnotationFromIndirectObject (_dcab );if _fdebf !=nil {return nil ,_fdebf ;};_gafg ,_fgdde :=_dgbcf .GetContext ().(*PdfAnnotationWidget );if !_fgdde {return nil ,_cca .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_gafg ._eafa =_gabba ;_gafg .Parent =_gabba ._fdab ;_gabba .Annotations =append (_gabba .Annotations ,_gafg );return _gabba ,nil ;};};_ddeec :=true ;if _gdde ,_aefg :=_bb .GetArray (_cdcd .Get ("\u004b\u0069\u0064\u0073"));_aefg {_ffggg :=make ([]*_bb .PdfIndirectObject ,0,_gdde .Len ());for _ ,_geaaa :=range _gdde .Elements (){_dfbee ,_fgdb :=_bb .GetIndirect (_geaaa );if !_fgdb {_bcdg ,_abcf :=_bb .GetStream (_geaaa );if _abcf &&_bcdg .PdfObjectDictionary !=nil {_bdgfa ,_fadd :=_bb .GetNameVal (_bcdg .Get ("\u0054\u0079\u0070\u0065"));if _fadd &&_bdgfa =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ggf .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_cca .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_dcfd ,_fgcbe :=_bb .GetDict (_dfbee );if !_fgcbe {return nil ,ErrTypeCheck ;};if _ddeec {_ddeec =!_fffb (_dcfd );};_ffggg =append (_ffggg ,_dfbee );};for _ ,_fcgcd :=range _ffggg {if _ddeec {_acffa ,_aeab :=_ecfc .newPdfAnnotationFromIndirectObject (_fcgcd );if _aeab !=nil {_ggf .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_aeab );return nil ,_aeab ;};_bfeg ,_ecbde :=_acffa ._bafb .(*PdfAnnotationWidget );if !_ecbde {return nil ,ErrTypeCheck ;};_bfeg ._eafa =_gabba ;_gabba .Annotations =append (_gabba .Annotations ,_bfeg );}else {_defb ,_ggacf :=_ecfc .newPdfFieldFromIndirectObject (_fcgcd ,_gabba );if _ggacf !=nil {_ggf .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_ggacf );return nil ,_ggacf ;};_gabba .Kids =append (_gabba .Kids ,_defb );};};};return _gabba ,nil ;};func (_bcgddc *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject converts date to a PDF string object.
func (_eacfe *PdfDate )ToPdfObject ()_bb .PdfObject {_bdbbf :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eacfe ._cfdag ,_eacfe ._dbebd ,_eacfe ._bdda ,_eacfe ._gaacb ,_eacfe ._bgfdfd ,_eacfe ._adab ,_eacfe ._ebag ,_eacfe ._dfecd ,_eacfe ._faeda );return _bb .MakeString (_bdbbf );};func _aadgd (_facb *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_facb }};func (_cgga *PdfReader )newPdfAnnotationTrapNetFromDict (_ffde *_bb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_fbde :=PdfAnnotationTrapNet {};return &_fbde ,nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_fbea :=&PdfSignature {Type :_bb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_deeaa :=&pdfSignDictionary {PdfObjectDictionary :_bb .MakeDict (),_daef :&handler ,_afdb :_fbea };_fbea ._fbgfae =_bb .MakeIndirectObject (_deeaa );return _fbea ;};func _becd ()string {return _ddgag };

// AddPages adds pages to be appended to the end of the source PDF.
func (_bfdf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_egbg :=range pages {_egbg =_egbg .Duplicate ();_adffe (_egbg );_bfdf ._fabc =append (_bfdf ._fabc ,_egbg );};return ;};

// ToPdfObject implements interface PdfModel.
func (_eafaa *PdfAnnotationScreen )ToPdfObject ()_bb .PdfObject {_eafaa .PdfAnnotation .ToPdfObject ();_ebcbe :=_eafaa ._afg ;_cbaa :=_ebcbe .PdfObject .(*_bb .PdfObjectDictionary );_cbaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_cbaa .SetIfNotNil ("\u0054",_eafaa .T );_cbaa .SetIfNotNil ("\u004d\u004b",_eafaa .MK );_cbaa .SetIfNotNil ("\u0041",_eafaa .A );_cbaa .SetIfNotNil ("\u0041\u0041",_eafaa .AA );return _ebcbe ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_cdcc :=NewPdfAction ();_acb :=&PdfActionGoToR {};_acb .PdfAction =_cdcc ;_cdcc .SetContext (_acb );return _acb ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_egbf *PdfAcroForm ,_agcg *PdfField ,_dege *PdfAnnotationWidget )(*_bb .PdfObjectDictionary ,error );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_cgaaa *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_daeb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ggf .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ggf .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_ggf .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ggf .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_fbacb ,_beeaa :=_fe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afaa ,img ._afae );if _beeaa !=nil {return Image {},_beeaa ;};_cgcd ,_beeaa :=_fe .NRGBAConverter .Convert (_fbacb );if _beeaa !=nil {return Image {},_beeaa ;};return _bagfd (_cgcd .Base ()),nil ;};func (_dbaa *PdfReader )newPdfAnnotationSquareFromDict (_cdee *_bb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_aecd :=PdfAnnotationSquare {};_dagd ,_bafa :=_dbaa .newPdfAnnotationMarkupFromDict (_cdee );if _bafa !=nil {return nil ,_bafa ;};_aecd .PdfAnnotationMarkup =_dagd ;_aecd .BS =_cdee .Get ("\u0042\u0053");_aecd .IC =_cdee .Get ("\u0049\u0043");_aecd .BE =_cdee .Get ("\u0042\u0045");_aecd .RD =_cdee .Get ("\u0052\u0044");return &_aecd ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_abgef *_bb .PdfIndirectObject ;};func (_cafea *PdfWriter )copyObject (_ccbcb _bb .PdfObject ,_ffdga map[_bb .PdfObject ]_bb .PdfObject ,_gggab map[_bb .PdfObject ]struct{},_aedbe bool )_bb .PdfObject {_ddgad :=!_cafea ._baae &&_gggab !=nil ;if _gafgf ,_eedbb :=_ffdga [_ccbcb ];_eedbb {if _ddgad &&!_aedbe {delete (_gggab ,_ccbcb );};return _gafgf ;};_baege :=_ccbcb ;switch _edag :=_ccbcb .(type ){case *_bb .PdfObjectArray :_efgeb :=_bb .MakeArray ();_baege =_efgeb ;_ffdga [_ccbcb ]=_baege ;for _ ,_gbcfe :=range _edag .Elements (){_efgeb .Append (_cafea .copyObject (_gbcfe ,_ffdga ,_gggab ,_aedbe ));};case *_bb .PdfObjectStreams :_gbdff :=&_bb .PdfObjectStreams {PdfObjectReference :_edag .PdfObjectReference };_baege =_gbdff ;_ffdga [_ccbcb ]=_baege ;for _ ,_fbgdb :=range _edag .Elements (){_gbdff .Append (_cafea .copyObject (_fbgdb ,_ffdga ,_gggab ,_aedbe ));};case *_bb .PdfObjectStream :_ffgfg :=&_bb .PdfObjectStream {Stream :_edag .Stream ,PdfObjectReference :_edag .PdfObjectReference };_baege =_ffgfg ;_ffdga [_ccbcb ]=_baege ;_ffgfg .PdfObjectDictionary =_cafea .copyObject (_edag .PdfObjectDictionary ,_ffdga ,_gggab ,_aedbe ).(*_bb .PdfObjectDictionary );case *_bb .PdfObjectDictionary :var _bdbfe bool ;if _ddgad &&!_aedbe {if _fbdff ,_ :=_bb .GetNameVal (_edag .Get ("\u0054\u0079\u0070\u0065"));_fbdff =="\u0050\u0061\u0067\u0065"{_ ,_dgccd :=_cafea ._aaeac [_edag ];_aedbe =!_dgccd ;_bdbfe =_aedbe ;};};_efbebf :=_bb .MakeDict ();_baege =_efbebf ;_ffdga [_ccbcb ]=_baege ;for _ ,_bcgbb :=range _edag .Keys (){_efbebf .Set (_bcgbb ,_cafea .copyObject (_edag .Get (_bcgbb ),_ffdga ,_gggab ,_aedbe ));};if _bdbfe {_baege =_bb .MakeNull ();_aedbe =false ;};case *_bb .PdfIndirectObject :_fbagb :=&_bb .PdfIndirectObject {PdfObjectReference :_edag .PdfObjectReference };_baege =_fbagb ;_ffdga [_ccbcb ]=_baege ;_fbagb .PdfObject =_cafea .copyObject (_edag .PdfObject ,_ffdga ,_gggab ,_aedbe );case *_bb .PdfObjectString :_cecca :=*_edag ;_baege =&_cecca ;_ffdga [_ccbcb ]=_baege ;case *_bb .PdfObjectName :_abca :=_bb .PdfObjectName (*_edag );_baege =&_abca ;_ffdga [_ccbcb ]=_baege ;case *_bb .PdfObjectNull :_baege =_bb .MakeNull ();_ffdga [_ccbcb ]=_baege ;case *_bb .PdfObjectInteger :_gggb :=_bb .PdfObjectInteger (*_edag );_baege =&_gggb ;_ffdga [_ccbcb ]=_baege ;case *_bb .PdfObjectReference :_bcgg :=_bb .PdfObjectReference (*_edag );_baege =&_bcgg ;_ffdga [_ccbcb ]=_baege ;case *_bb .PdfObjectFloat :_bfafa :=_bb .PdfObjectFloat (*_edag );_baege =&_bfafa ;_ffdga [_ccbcb ]=_baege ;case *_bb .PdfObjectBool :_fgafb :=_bb .PdfObjectBool (*_edag );_baege =&_fgafb ;_ffdga [_ccbcb ]=_baege ;case *pdfSignDictionary :_fcbc :=&pdfSignDictionary {PdfObjectDictionary :_bb .MakeDict (),_daef :_edag ._daef ,_afdb :_edag ._afdb };_baege =_fcbc ;_ffdga [_ccbcb ]=_baege ;for _ ,_eceda :=range _edag .Keys (){_fcbc .Set (_eceda ,_cafea .copyObject (_edag .Get (_eceda ),_ffdga ,_gggab ,_aedbe ));};default:_ggf .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ccbcb );};if _ddgad &&_aedbe {_gggab [_ccbcb ]=struct{}{};};return _baege ;};func _bdgg (_cabc *PdfField )[]*PdfField {_gdbc :=[]*PdfField {_cabc };for _ ,_dfca :=range _cabc .Kids {_gdbc =append (_gdbc ,_bdgg (_dfca )...);};return _gdbc ;};

// Register registers (caches) a model to primitive object relationship.
func (_aeae *modelManager )Register (primitive _bb .PdfObject ,model PdfModel ){_aeae ._bgbgcg [model ]=primitive ;_aeae ._cgcg [primitive ]=model ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_cbdc *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _cca .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_fgda :=field .V ;if _fgda ==nil {return _cca .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bfbf :=pageNum -1;if _bfbf < 0||_bfbf > len (_cbdc ._fabc )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_ccgd :=_cbdc .Reader .PageList [_bfbf ];field .P =_ccgd .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bb .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_ccgd .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _cbdc ._afcfa ==_cbdc ._cdfd .AcroForm {_cbdc ._afcfa =_cbdc .Reader .AcroForm ;};_dgbg :=_cbdc ._afcfa ;if _dgbg ==nil {_dgbg =NewPdfAcroForm ();};_dgbg .SigFlags =_bb .MakeInteger (3);_geed :=append (_dgbg .AllFields (),field .PdfField );_dgbg .Fields =&_geed ;_cbdc .ReplaceAcroForm (_dgbg );_cbdc .UpdatePage (_ccgd );_cbdc ._fabc [_bfbf ]=_ccgd ;return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_dbdaf :=&PdfPageResourcesColorspaces {};_dbdaf .Names =[]string {};_dbdaf .Colorspaces =map[string ]PdfColorspace {};_dbdaf ._beddf =&_bb .PdfIndirectObject {};return _dbdaf ;};

// ToPdfObject implements interface PdfModel.
func (_ded *PdfAnnotationMovie )ToPdfObject ()_bb .PdfObject {_ded .PdfAnnotation .ToPdfObject ();_beba :=_ded ._afg ;_cfc :=_beba .PdfObject .(*_bb .PdfObjectDictionary );_cfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u004d\u006f\u0076i\u0065"));_cfc .SetIfNotNil ("\u0054",_ded .T );_cfc .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ded .Movie );_cfc .SetIfNotNil ("\u0041",_ded .A );return _beba ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gffff pdfCIDFontType2 )GetCharMetrics (code _cefb .CharCode )(_ca .CharMetrics ,bool ){if _ceeg ,_fcac :=_gffff ._cbbfd [code ];_fcac {return _ca .CharMetrics {Wx :float64 (_ceeg )},true ;};_ccge :=rune (code );_cdedaf ,_faad :=_gffff ._abcfd [_ccge ];if !_faad {_cdedaf =int (_gffff ._ead );};return _ca .CharMetrics {Wx :float64 (_cdedaf )},true ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cdg *PdfAction )GetContainingPdfObject ()_bb .PdfObject {return _cdg ._bd };func (_adaaa *pdfFontType0 )subsetRegistered ()error {_eagdc ,_ccbed :=_adaaa .DescendantFont ._decag .(*pdfCIDFontType2 );if !_ccbed {_ggf .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_adaaa .DescendantFont );return nil ;};if _eagdc ==nil {return nil ;};if _eagdc ._ceee ==nil {_ggf .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _adaaa ._gddcd ==nil {_ggf .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_fafb ,_ccbed :=_bb .GetStream (_eagdc ._ceee .FontFile2 );if !_ccbed {_ggf .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _cca .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_acbbb ,_edca :=_bb .DecodeStream (_fafb );if _edca !=nil {_ggf .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_edca );return _edca ;};_dbcf ,_edca :=_d .Parse (_gfd .NewReader (_acbbb ));if _edca !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_fafb .Stream ));return _edca ;};var _bfcga []rune ;var _acbce *_d .Font ;switch _bcgca :=_adaaa ._gddcd .(type ){case *_cefb .TrueTypeFontEncoder :_bfcga =_bcgca .RegisteredRunes ();_acbce ,_edca =_dbcf .SubsetKeepRunes (_bfcga );if _edca !=nil {_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edca );return _edca ;};_bcgca .SubsetRegistered ();case *_cefb .IdentityEncoder :_bfcga =_bcgca .RegisteredRunes ();_dfgf :=make ([]_d .GlyphIndex ,len (_bfcga ));for _gbgb ,_cbcfe :=range _bfcga {_dfgf [_gbgb ]=_d .GlyphIndex (_cbcfe );};_acbce ,_edca =_dbcf .SubsetKeepIndices (_dfgf );if _edca !=nil {_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edca );return _edca ;};case _cefb .SimpleEncoder :_cefcb :=_bcgca .Charcodes ();for _ ,_fdgae :=range _cefcb {_bgeb ,_fbfbe :=_bcgca .CharcodeToRune (_fdgae );if !_fbfbe {_ggf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_fdgae );continue ;};_bfcga =append (_bfcga ,_bgeb );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_adaaa ._gddcd );};var _efaa _gfd .Buffer ;_edca =_acbce .Write (&_efaa );if _edca !=nil {_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edca );return _edca ;};if _adaaa ._adcd !=nil {_bbbc :=make (map[_ac .CharCode ]rune ,len (_bfcga ));for _ ,_fcge :=range _bfcga {_fcaab ,_badd :=_adaaa ._gddcd .RuneToCharcode (_fcge );if !_badd {continue ;};_bbbc [_ac .CharCode (_fcaab )]=_fcge ;};_adaaa ._adcd =_ac .NewToUnicodeCMap (_bbbc );};_fafb ,_edca =_bb .MakeStream (_efaa .Bytes (),_bb .NewFlateEncoder ());if _edca !=nil {_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_edca );return _edca ;};_fafb .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bb .MakeInteger (int64 (_efaa .Len ())));if _efaag ,_ddecg :=_bb .GetStream (_eagdc ._ceee .FontFile2 );_ddecg {*_efaag =*_fafb ;}else {_eagdc ._ceee .FontFile2 =_fafb ;};_egdb :=_fface ();if len (_adaaa ._babf )> 0{_adaaa ._babf =_agcd (_adaaa ._babf ,_egdb );};if len (_eagdc ._babf )> 0{_eagdc ._babf =_agcd (_eagdc ._babf ,_egdb );};if len (_adaaa ._ebad )> 0{_adaaa ._ebad =_agcd (_adaaa ._ebad ,_egdb );};if _eagdc ._ceee !=nil {_gddb ,_efgb :=_bb .GetName (_eagdc ._ceee .FontName );if _efgb &&len (_gddb .String ())> 0{_ggce :=_agcd (_gddb .String (),_egdb );_eagdc ._ceee .FontName =_bb .MakeName (_ggce );};};return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ccag *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_bede :=_cg .NewReader (img .getBase ());_bacb :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_eddc :=_cg .NewWriter (_bacb );_bfacd :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_ggbc :=make ([]uint32 ,3);var (_bacdf error ;_gggda ,_cade ,_bgfd ,_gdfcc ,_gfab ,_cgaag float64 ;);for {_bacdf =_bede .ReadSamples (_ggbc );if _bacdf ==_ec .EOF {break ;}else if _bacdf !=nil {return img ,_bacdf ;};_gggda =float64 (_ggbc [0])/_bfacd ;_cade =float64 (_ggbc [1])/_bfacd ;_bgfd =float64 (_ggbc [2])/_bfacd ;_gdfcc =_ccag .Matrix [0]*_cc .Pow (_gggda ,_ccag .Gamma [0])+_ccag .Matrix [3]*_cc .Pow (_cade ,_ccag .Gamma [1])+_ccag .Matrix [6]*_cc .Pow (_bgfd ,_ccag .Gamma [2]);_gfab =_ccag .Matrix [1]*_cc .Pow (_gggda ,_ccag .Gamma [0])+_ccag .Matrix [4]*_cc .Pow (_cade ,_ccag .Gamma [1])+_ccag .Matrix [7]*_cc .Pow (_bgfd ,_ccag .Gamma [2]);_cgaag =_ccag .Matrix [2]*_cc .Pow (_gggda ,_ccag .Gamma [0])+_ccag .Matrix [5]*_cc .Pow (_cade ,_ccag .Gamma [1])+_ccag .Matrix [8]*_cc .Pow (_bgfd ,_ccag .Gamma [2]);_gggda =3.240479*_gdfcc +-1.537150*_gfab +-0.498535*_cgaag ;_cade =-0.969256*_gdfcc +1.875992*_gfab +0.041556*_cgaag ;_bgfd =0.055648*_gdfcc +-0.204043*_gfab +1.057311*_cgaag ;_gggda =_cc .Min (_cc .Max (_gggda ,0),1.0);_cade =_cc .Min (_cc .Max (_cade ,0),1.0);_bgfd =_cc .Min (_cc .Max (_bgfd ,0),1.0);_ggbc [0]=uint32 (_gggda *_bfacd );_ggbc [1]=uint32 (_cade *_bfacd );_ggbc [2]=uint32 (_bgfd *_bfacd );if _bacdf =_eddc .WriteSamples (_ggbc );_bacdf !=nil {return img ,_bacdf ;};};return _bagfd (&_bacb ),nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_ffc :=NewPdfAnnotation ();_dagg :=&PdfAnnotationWatermark {};_dagg .PdfAnnotation =_ffc ;_ffc .SetContext (_dagg );return _dagg ;};func (_aegfa *PdfWriter )writeObject (_facg int ,_aeeaa _bb .PdfObject ){_ggf .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_facg );if _ffdbg ,_abefc :=_aeeaa .(*_bb .PdfIndirectObject );_abefc {_aegfa ._bbcg [_facg ]=crossReference {Type :1,Offset :_aegfa ._dgbge ,Generation :_ffdbg .GenerationNumber };_cbedb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_facg );if _ddfad ,_gffd :=_ffdbg .PdfObject .(*pdfSignDictionary );_gffd {_ddfad ._cccge =_aegfa ._dgbge +int64 (len (_cbedb ));};if _ffdbg .PdfObject ==nil {_ggf .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_ffdbg .PdfObject =_bb .MakeNull ();};_cbedb +=_ffdbg .PdfObject .WriteString ();_cbedb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_aegfa .writeString (_cbedb );return ;};if _caagf ,_gbea :=_aeeaa .(*_bb .PdfObjectStream );_gbea {_aegfa ._bbcg [_facg ]=crossReference {Type :1,Offset :_aegfa ._dgbge ,Generation :_caagf .GenerationNumber };_fcdc :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_facg );_fcdc +=_caagf .PdfObjectDictionary .WriteString ();_fcdc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_aegfa .writeString (_fcdc );_aegfa .writeBytes (_caagf .Stream );_aegfa .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _dggge ,_fbcfd :=_aeeaa .(*_bb .PdfObjectStreams );_fbcfd {_aegfa ._bbcg [_facg ]=crossReference {Type :1,Offset :_aegfa ._dgbge ,Generation :_dggge .GenerationNumber };_cabf :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_facg );var _cccgb []string ;var _babdb string ;var _dacff int64 ;for _aadd ,_ccegg :=range _dggge .Elements (){_cadec ,_ecbec :=_ccegg .(*_bb .PdfIndirectObject );if !_ecbec {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_facg ,_ccegg );continue ;};_fcfcec :=_cadec .PdfObject .WriteString ()+"\u0020";_babdb =_babdb +_fcfcec ;_cccgb =append (_cccgb ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_cadec .ObjectNumber ,_dacff ));_aegfa ._bbcg [int (_cadec .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_facg ,Index :_aadd };_dacff =_dacff +int64 (len ([]byte (_fcfcec )));};_ecced :=_gf .Join (_cccgb ,"\u0020")+"\u0020";_ddaba :=_bb .NewFlateEncoder ();_gfcb :=_ddaba .MakeStreamDict ();_gfcb .Set (_bb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_fcdegd :=int64 (_dggge .Len ());_gfcb .Set (_bb .PdfObjectName ("\u004e"),_bb .MakeInteger (_fcdegd ));_acdb :=int64 (len (_ecced ));_gfcb .Set (_bb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bb .MakeInteger (_acdb ));_ggcea ,_ :=_ddaba .EncodeBytes ([]byte (_ecced +_babdb ));_dabdb :=int64 (len (_ggcea ));_gfcb .Set (_bb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bb .MakeInteger (_dabdb ));_cabf +=_gfcb .WriteString ();_cabf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_aegfa .writeString (_cabf );_aegfa .writeBytes (_ggcea );_aegfa .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_aegfa .writeString (_aeeaa .WriteString ());};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ecbc ,_befac :=NewStandard14Font (basefont );if _befac !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _ecbc ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bb .PdfObject ;Volume _bb .PdfObject ;Synchronous _bb .PdfObject ;Repeat _bb .PdfObject ;Mix _bb .PdfObject ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ebgcg DefaultImageHandler )NewGrayImageFromGoImage (goimg _ce .Image )(*Image ,error ){_dcag :=goimg .Bounds ();_cgge :=&Image {Width :int64 (_dcag .Dx ()),Height :int64 (_dcag .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _acaa :=goimg .(type ){case *_ce .Gray :if len (_acaa .Pix )!=_dcag .Dx ()*_dcag .Dy (){_dgbca ,_fffg :=_fe .GrayConverter .Convert (goimg );if _fffg !=nil {return nil ,_fffg ;};_cgge .Data =_dgbca .Pix ();}else {_cgge .Data =_acaa .Pix ;};case *_ce .Gray16 :_cgge .BitsPerComponent =16;if len (_acaa .Pix )!=_dcag .Dx ()*_dcag .Dy ()*2{_bcbd ,_gcdcc :=_fe .Gray16Converter .Convert (goimg );if _gcdcc !=nil {return nil ,_gcdcc ;};_cgge .Data =_bcbd .Pix ();}else {_cgge .Data =_acaa .Pix ;};default:_bgbgc ,_dccda :=_fe .GrayConverter .Convert (goimg );if _dccda !=nil {return nil ,_dccda ;};_cgge .Data =_bgbgc .Pix ();};return _cgge ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bafc *PdfAnnotationRichMedia )ToPdfObject ()_bb .PdfObject {_bafc .PdfAnnotation .ToPdfObject ();_dacd :=_bafc ._afg ;_gbge :=_dacd .PdfObject .(*_bb .PdfObjectDictionary );_gbge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_gbge .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bafc .RichMediaSettings );_gbge .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bafc .RichMediaContent );return _dacd ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bb .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_cab *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func _cdaba (_bdgee _bb .PdfObject ){_ggf .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bdgee ,_bdgee .String ());if _ffcac ,_badcc :=_bdgee .(*_bb .PdfObjectStream );_badcc {_egdaf ,_aefe :=_bb .DecodeStream (_ffcac );if _aefe !=nil {_ggf .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_aefe );return ;};_ggf .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_egdaf );}else if _efca ,_bgcgfc :=_bdgee .(*_bb .PdfIndirectObject );_bgcgfc {_ggf .Log .Debug ("\u0025\u0054\u0020%\u0076",_efca .PdfObject ,_efca .PdfObject );_ggf .Log .Debug ("\u0025\u0073",_efca .PdfObject .String ());};};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_beddf *_bb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ebafe *PdfAnnotationFileAttachment )ToPdfObject ()_bb .PdfObject {_ebafe .PdfAnnotation .ToPdfObject ();_cbe :=_ebafe ._afg ;_cdebb :=_cbe .PdfObject .(*_bb .PdfObjectDictionary );_ebafe .PdfAnnotationMarkup .appendToPdfDictionary (_cdebb );_cdebb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_cdebb .SetIfNotNil ("\u0046\u0053",_ebafe .FS );_cdebb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebafe .Name );return _cbe ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_agfb *_bb .PdfIndirectObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_ccfee *PdfReader )GetTrailer ()(*_bb .PdfObjectDictionary ,error ){_cgcgc :=_ccfee ._eagc .GetTrailer ();if _cgcgc ==nil {return nil ,_cca .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cgcgc ,nil ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_egcba *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _gbgfc []_cefb .TextEncoder ;if _fecfb :=_egcba .baseFields ()._adcd ;_fecfb !=nil {_gbgfc =append (_gbgfc ,_cefb .NewCMapEncoder ("",nil ,_fecfb ));};if _bgba :=_egcba .Encoder ();_bgba !=nil {_gbgfc =append (_gbgfc ,_bgba );};var _bdcc _gfd .Buffer ;var _faagb int ;for _ ,_bgede :=range data {var _cadee bool ;for _ ,_ccfge :=range _gbgfc {if _dcbae :=_ccfge .Encode (string (_bgede ));len (_dcbae )> 0{_bdcc .Write (_dcbae );_cadee =true ;break ;};};if !_cadee {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bgede );_faagb ++;};};if _faagb !=0{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_faagb ,_egcba ,_gbgfc );};return _bdcc .Bytes (),_faagb ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ddbfe *PdfReader )GetPageLabels ()(_bb .PdfObject ,error ){_fcdbd :=_bb .ResolveReference (_ddbfe ._gdddd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fcdbd ==nil {return nil ,nil ;};if !_ddbfe ._fadcg {_efabe :=_ddbfe .traverseObjectData (_fcdbd );if _efabe !=nil {return nil ,_efabe ;};};return _fcdbd ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_daabb *PdfFieldButton )IsRadio ()bool {return _daabb .GetType ()==ButtonTypeRadio };func _befb (_acdf *_bb .PdfObjectDictionary )(*PdfFieldButton ,error ){_efbd :=&PdfFieldButton {};_efbd .Opt ,_ =_bb .GetArray (_acdf .Get ("\u004f\u0070\u0074"));return _efbd ,nil ;};

// PartialName returns the partial name of the field.
func (_dbbac *PdfField )PartialName ()string {_cbbc :="";if _dbbac .T !=nil {_cbbc =_dbbac .T .Decoded ();}else {_ggf .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _cbbc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebdad *PdfPageResourcesColorspaces )ToPdfObject ()_bb .PdfObject {_cabea :=_bb .MakeDict ();for _ ,_ebde :=range _ebdad .Names {_cabea .Set (_bb .PdfObjectName (_ebde ),_ebdad .Colorspaces [_ebde ].ToPdfObject ());};if _ebdad ._beddf !=nil {_ebdad ._beddf .PdfObject =_cabea ;return _ebdad ._beddf ;};return _cabea ;};

// AllFields returns a flattened list of all fields in the form.
func (_gacge *PdfAcroForm )AllFields ()[]*PdfField {if _gacge ==nil {return nil ;};var _bebfe []*PdfField ;if _gacge .Fields !=nil {for _ ,_ffaa :=range *_gacge .Fields {_bebfe =append (_bebfe ,_bdgg (_ffaa )...);};};return _bebfe ;};

// ToPdfObject implements interface PdfModel.
func (_bdff *PdfAnnotation3D )ToPdfObject ()_bb .PdfObject {_bdff .PdfAnnotation .ToPdfObject ();_abba :=_bdff ._afg ;_fbce :=_abba .PdfObject .(*_bb .PdfObjectDictionary );_fbce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0033\u0044"));_fbce .SetIfNotNil ("\u0033\u0044\u0044",_bdff .T3DD );_fbce .SetIfNotNil ("\u0033\u0044\u0056",_bdff .T3DV );_fbce .SetIfNotNil ("\u0033\u0044\u0041",_bdff .T3DA );_fbce .SetIfNotNil ("\u0033\u0044\u0049",_bdff .T3DI );_fbce .SetIfNotNil ("\u0033\u0044\u0042",_bdff .T3DB );return _abba ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ceega *PdfPage )AppendContentStream (contentStr string )error {_debac ,_abbdf :=_ceega .GetContentStreams ();if _abbdf !=nil {return _abbdf ;};if len (_debac )==0{_debac =[]string {contentStr };return _ceega .SetContentStreams (_debac ,_bb .NewFlateEncoder ());};var _feggc _gfd .Buffer ;_feggc .WriteString (_debac [len (_debac )-1]);_feggc .WriteString ("\u000a");_feggc .WriteString (contentStr );_debac [len (_debac )-1]=_feggc .String ();return _ceega .SetContentStreams (_debac ,_bb .NewFlateEncoder ());};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_gcbc *PdfColorspaceLab )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbdf ,_deac :=_bb .GetNumbersAsFloat (objects );if _deac !=nil {return nil ,_deac ;};return _gcbc .ColorFromFloats (_bbdf );};func _egbgb (_fcaf *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_fcaf }};

// GetDescent returns the Descent of the font `descriptor`.
func (_ffgfe *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bb .GetNumberAsFloat (_ffgfe .Descent );};

// ToPdfObject implements interface PdfModel.
func (_cfaf *PdfAnnotationRedact )ToPdfObject ()_bb .PdfObject {_cfaf .PdfAnnotation .ToPdfObject ();_bcbf :=_cfaf ._afg ;_ebcg :=_bcbf .PdfObject .(*_bb .PdfObjectDictionary );_cfaf .PdfAnnotationMarkup .appendToPdfDictionary (_ebcg );_ebcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_ebcg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cfaf .QuadPoints );_ebcg .SetIfNotNil ("\u0049\u0043",_cfaf .IC );_ebcg .SetIfNotNil ("\u0052\u004f",_cfaf .RO );_ebcg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_cfaf .OverlayText );_ebcg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_cfaf .Repeat );_ebcg .SetIfNotNil ("\u0044\u0041",_cfaf .DA );_ebcg .SetIfNotNil ("\u0051",_cfaf .Q );return _bcbf ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_bdebb *PdfRectangle )Normalize (){if _bdebb .Llx > _bdebb .Urx {_bdebb .Llx ,_bdebb .Urx =_bdebb .Urx ,_bdebb .Llx ;};if _bdebb .Lly > _bdebb .Ury {_bdebb .Lly ,_bdebb .Ury =_bdebb .Ury ,_bdebb .Lly ;};};func (_acede *PdfReader )buildOutlineTree (_facddb _bb .PdfObject ,_dgffd *PdfOutlineTreeNode ,_gdbe *PdfOutlineTreeNode ,_ccbagf map[_bb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ccbagf ==nil {_ccbagf =map[_bb .PdfObject ]struct{}{};};_ccbagf [_facddb ]=struct{}{};_afedc ,_aedcd :=_facddb .(*_bb .PdfIndirectObject );if !_aedcd {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_facddb );};_fabf ,_faedfg :=_afedc .PdfObject .(*_bb .PdfObjectDictionary );if !_faedfg {return nil ,nil ,_cca .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ggf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fabf ,_afedc ,_afedc );if _cebb :=_fabf .Get ("\u0054\u0069\u0074l\u0065");_cebb !=nil {_aebgc ,_egbbd :=_acede .newPdfOutlineItemFromIndirectObject (_afedc );if _egbbd !=nil {return nil ,nil ,_egbbd ;};_aebgc .Parent =_dgffd ;_aebgc .Prev =_gdbe ;_ddaec :=_bb .ResolveReference (_fabf .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_ebba :=_ccbagf [_ddaec ];_ddaec !=nil &&_ddaec !=_afedc &&!_ebba {if !_bb .IsNullObject (_ddaec ){_dcagf ,_eeafbc ,_ecfa :=_acede .buildOutlineTree (_ddaec ,&_aebgc .PdfOutlineTreeNode ,nil ,_ccbagf );if _ecfa !=nil {_ggf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ecfa );}else {_aebgc .First =_dcagf ;_aebgc .Last =_eeafbc ;};};};_efecg :=_bb .ResolveReference (_fabf .Get ("\u004e\u0065\u0078\u0074"));if _ ,_faff :=_ccbagf [_efecg ];_efecg !=nil &&_efecg !=_afedc &&!_faff {if !_bb .IsNullObject (_efecg ){_eddg ,_dbaf ,_aeeege :=_acede .buildOutlineTree (_efecg ,_dgffd ,&_aebgc .PdfOutlineTreeNode ,_ccbagf );if _aeeege !=nil {_ggf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_aeeege );}else {_aebgc .Next =_eddg ;return &_aebgc .PdfOutlineTreeNode ,_dbaf ,nil ;};};};return &_aebgc .PdfOutlineTreeNode ,&_aebgc .PdfOutlineTreeNode ,nil ;};_edda ,_daacf :=_facdg (_afedc );if _daacf !=nil {return nil ,nil ,_daacf ;};_edda .Parent =_dgffd ;if _cfagf :=_fabf .Get ("\u0046\u0069\u0072s\u0074");_cfagf !=nil {_cfagf =_bb .ResolveReference (_cfagf );_eaadb :=_bb .TraceToDirectObject (_cfagf );if _ ,_cgff :=_eaadb .(*_bb .PdfObjectNull );!_cgff &&_eaadb !=nil {_deebg ,_edfd ,_cagb :=_acede .buildOutlineTree (_cfagf ,&_edda .PdfOutlineTreeNode ,nil ,_ccbagf );if _cagb !=nil {_ggf .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_cagb );}else {_edda .First =_deebg ;_edda .Last =_edfd ;};};};return &_edda .PdfOutlineTreeNode ,&_edda .PdfOutlineTreeNode ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_eadf *modelManager )GetModelFromPrimitive (primitive _bb .PdfObject )PdfModel {model ,_eecfc :=_eadf ._cgcg [primitive ];if !_eecfc {return nil ;};return model ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_addbg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ffaeb []*PdfField ;_cefbg :=map[*_bb .PdfIndirectObject ]struct{}{};for _ ,_fedeg :=range _addbg .PageList {_ddfec ,_fgaae :=_fedeg .GetAnnotations ();if _fgaae !=nil {return _fgaae ;};for _ ,_cgefbc :=range _ddfec {var _dbfcfa *PdfField ;switch _fcggg :=_cgefbc .GetContext ().(type ){case *PdfAnnotationWidget :if _fcggg ._eafa !=nil {_dbfcfa =_fcggg ._eafa ;break ;};if _geaag ,_egadg :=_bb .GetIndirect (_fcggg .Parent );_egadg {_dbfcfa ,_fgaae =_addbg .newPdfFieldFromIndirectObject (_geaag ,nil );if _fgaae ==nil {break ;};_ggf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_geaag ,_fgaae );};if _fcggg ._afg !=nil {_dbfcfa ,_fgaae =_addbg .newPdfFieldFromIndirectObject (_fcggg ._afg ,nil );if _fgaae ==nil {break ;};_ggf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_fcggg ._afg ,_fgaae );};};if _dbfcfa ==nil {continue ;};if _ ,_ggdc :=_cefbg [_dbfcfa ._fdab ];_ggdc {continue ;};_cefbg [_dbfcfa ._fdab ]=struct{}{};_ffaeb =append (_ffaeb ,_dbfcfa );};};if len (_ffaeb )==0{return nil ;};if _addbg .AcroForm ==nil {_addbg .AcroForm =NewPdfAcroForm ();};_addbg .AcroForm .Fields =&_ffaeb ;return nil ;};

// String implements interface PdfObject.
func (_bbb *PdfAction )String ()string {_cdc ,_dc :=_bbb .ToPdfObject ().(*_bb .PdfIndirectObject );if _dc {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bbb ._fd ,_cdc .PdfObject .String ());};return "";};

// ToPdfObject implements interface PdfModel.
func (_gag *PdfActionResetForm )ToPdfObject ()_bb .PdfObject {_gag .PdfAction .ToPdfObject ();_df :=_gag ._bd ;_dec :=_df .PdfObject .(*_bb .PdfObjectDictionary );_dec .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeResetForm )));_dec .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gag .Fields );_dec .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gag .Flags );return _df ;};func (_bgfe *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_dagc :=map[rune ]int {};for _ ,_eagg :=range text {_dagc [_eagg ]++;};return _dagc ;};func _dedg (_afgb _bb .PdfObject )(*PdfColorspaceICCBased ,error ){_ffgbc :=&PdfColorspaceICCBased {};if _fccd ,_egcb :=_afgb .(*_bb .PdfIndirectObject );_egcb {_ffgbc ._acgc =_fccd ;};_afgb =_bb .TraceToDirectObject (_afgb );_gcge ,_eccf :=_afgb .(*_bb .PdfObjectArray );if !_eccf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcge .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_afgb =_bb .TraceToDirectObject (_gcge .Get (0));_affb ,_eccf :=_afgb .(*_bb .PdfObjectName );if !_eccf {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_affb !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_afgb =_gcge .Get (1);_efce ,_eccf :=_bb .GetStream (_afgb );if !_eccf {_ggf .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_afgb );return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_fgeab :=_efce .PdfObjectDictionary ;_cbdca ,_eccf :=_fgeab .Get ("\u004e").(*_bb .PdfObjectInteger );if !_eccf {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_cbdca !=1&&*_cbdca !=3&&*_cbdca !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_ffgbc .N =int (*_cbdca );if _gcec :=_fgeab .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_gcec !=nil {_ccdf ,_gfbb :=NewPdfColorspaceFromPdfObject (_gcec );if _gfbb !=nil {return nil ,_gfbb ;};_ffgbc .Alternate =_ccdf ;};if _dggb :=_fgeab .Get ("\u0052\u0061\u006eg\u0065");_dggb !=nil {_dggb =_bb .TraceToDirectObject (_dggb );_bddf ,_feac :=_dggb .(*_bb .PdfObjectArray );if !_feac {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _bddf .Len ()!=2*_ffgbc .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_dbdd ,_cddf :=_bddf .GetAsFloat64Slice ();if _cddf !=nil {return nil ,_cddf ;};_ffgbc .Range =_dbdd ;}else {_ffgbc .Range =make ([]float64 ,2*_ffgbc .N );for _fcaa :=0;_fcaa < _ffgbc .N ;_fcaa ++{_ffgbc .Range [2*_fcaa ]=0.0;_ffgbc .Range [2*_fcaa +1]=1.0;};};if _dggg :=_fgeab .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dggg !=nil {_accf ,_ddca :=_dggg .(*_bb .PdfObjectStream );if !_ddca {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_ffgbc .Metadata =_accf ;};_cbaf ,_caaag :=_bb .DecodeStream (_efce );if _caaag !=nil {return nil ,_caaag ;};_ffgbc .Data =_cbaf ;_ffgbc ._fgcb =_efce ;return _ffgbc ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ecb :=NewPdfAnnotation ();_ccbc :=&PdfAnnotationLine {};_ccbc .PdfAnnotation =_ecb ;_ccbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecb .SetContext (_ccbc );return _ccbc ;};func _fbdca (_cddeg *_bb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bdfae :=&PdfShadingPattern {};_ccbf :=_cddeg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ccbf ==nil {_ggf .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eafc ,_cddab :=_ecbg (_ccbf );if _cddab !=nil {_ggf .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_cddab );return nil ,_cddab ;};_bdfae .Shading =_eafc ;if _ccgc :=_cddeg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ccgc !=nil {_addb ,_fabcb :=_ccgc .(*_bb .PdfObjectArray );if !_fabcb {_ggf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccgc );return nil ,_bb .ErrTypeError ;};_bdfae .Matrix =_addb ;};if _cebc :=_cddeg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cebc !=nil {_bdfae .ExtGState =_cebc ;};return _bdfae ,nil ;};func (_fgg *PdfReader )newPdfActionLaunchFromDict (_cage *_bb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fce ,_edd :=_edfed (_cage .Get ("\u0046"));if _edd !=nil {return nil ,_edd ;};return &PdfActionLaunch {Win :_cage .Get ("\u0057\u0069\u006e"),Mac :_cage .Get ("\u004d\u0061\u0063"),Unix :_cage .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cage .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fce },nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bb .PdfObjectString ;Q *_bb .PdfObjectInteger ;DS *_bb .PdfObjectString ;RV _bb .PdfObject ;MaxLen *_bb .PdfObjectInteger ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bb .PdfObject ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bb .PdfObject ;T3DV _bb .PdfObject ;T3DA _bb .PdfObject ;T3DI _bb .PdfObject ;T3DB _bb .PdfObject ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fdbe *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fdbe ._aegg !=nil {return _fdbe ._aegg ,nil ;};if _fdbe .ColorSpace ==nil {return nil ,nil ;};_adba ,_degc :=_ebegde (_fdbe .ColorSpace );if _degc !=nil {return nil ,_degc ;};_fdbe ._aegg =_adba ;return _fdbe ._aegg ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ebfc OutlineDest )ToPdfObject ()_bb .PdfObject {if (_ebfc .PageObj ==nil &&_ebfc .Page < 0)||_ebfc .Mode ==""{return _bb .MakeNull ();};_aecf :=_bb .MakeArray ();if _ebfc .PageObj !=nil {_aecf .Append (_ebfc .PageObj );}else {_aecf .Append (_bb .MakeInteger (_ebfc .Page ));};_aecf .Append (_bb .MakeName (_ebfc .Mode ));switch _ebfc .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_aecf .Append (_bb .MakeFloat (_ebfc .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_aecf .Append (_bb .MakeFloat (_ebfc .X ));case "\u0058\u0059\u005a":_aecf .Append (_bb .MakeFloat (_ebfc .X ));_aecf .Append (_bb .MakeFloat (_ebfc .Y ));_aecf .Append (_bb .MakeFloat (_ebfc .Zoom ));default:_aecf .Set (1,_bb .MakeName ("\u0046\u0069\u0074"));};return _aecf ;};

// R returns the value of the red component of the color.
func (_gacef *PdfColorDeviceRGB )R ()float64 {return float64 (_gacef [0])};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_ffgef *XObjectImage )SetFilter (encoder _bb .StreamEncoder )error {_gbbbd :=_ffgef .Stream ;_ffffe ,_eage :=_ffgef .Filter .DecodeBytes (_gbbbd );if _eage !=nil {return _eage ;};_ffgef .Filter =encoder ;encoder .UpdateParams (_ffgef .getParamsDict ());_gbbbd ,_eage =encoder .EncodeBytes (_ffffe );if _eage !=nil {return _eage ;};_ffgef .Stream =_gbbbd ;return nil ;};

// IsColored specifies if the pattern is colored.
func (_dfeca *PdfTilingPattern )IsColored ()bool {if _dfeca .PaintType !=nil &&*_dfeca .PaintType ==1{return true ;};return false ;};func _fbdee (_afffa _bb .PdfObject ,_gfgde bool )(*PdfFont ,error ){_faag ,_gdfce ,_gabg :=_cfbd (_afffa );if _gabg !=nil {if _gabg ==ErrType3FontNotSupported ||_gabg ==ErrType1CFontNotSupported {_gcdd ,_ccea :=_acea (_faag ,_gdfce ,nil );if _ccea !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gdfce ,_ccea );return nil ,_gabg ;};return &PdfFont {_decag :_gcdd },_gabg ;};return nil ,_gabg ;};_dgfaf :=&PdfFont {};switch _gdfce ._cddcc {case "\u0054\u0079\u0070e\u0030":if !_gfgde {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdfce );return nil ,_cca .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_afbb ,_eedc :=_cbgb (_faag ,_gdfce );if _eedc !=nil {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdfce ,_eedc );return nil ,_eedc ;};_dgfaf ._decag =_afbb ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bggaa *pdfFontSimple ;_dcfgb ,_dcba :=_ca .NewStdFontByName (_ca .StdFontName (_gdfce ._babf ));if _dcba {_fgbc :=_adda (_dcfgb );_dgfaf ._decag =&_fgbc ;_afbeg :=_bb .TraceToDirectObject (_fgbc .ToPdfObject ());_bfdc ,_bggac ,_cdbba :=_cfbd (_afbeg );if _cdbba !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gdfce ,_fgbc );return nil ,_cdbba ;};for _ ,_fgdea :=range _faag .Keys (){_bfdc .Set (_fgdea ,_faag .Get (_fgdea ));};_bggaa ,_cdbba =_acea (_bfdc ,_bggac ,_fgbc ._fgec );if _cdbba !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gdfce ,_fgbc );return nil ,_cdbba ;};_bggaa ._cbccg =_fgbc ._cbccg ;_bggaa ._dgaac =_fgbc ._dgaac ;}else {_bggaa ,_gabg =_acea (_faag ,_gdfce ,nil );if _gabg !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gdfce ,_gabg );return nil ,_gabg ;};};_gabg =_bggaa .addEncoding ();if _gabg !=nil {return nil ,_gabg ;};if _dcba {_bggaa .updateStandard14Font ();};if _dcba &&_bggaa ._ggff ==nil &&_bggaa ._fgec ==nil {_ggf .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bggaa );_ggf .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dcfgb );};if len (_bggaa ._cbccg )==0{_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bggaa );};_dgfaf ._decag =_bggaa ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_bgeff ,_egec :=_dfbb (_faag ,_gdfce );if _egec !=nil {_ggf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_egec );return nil ,_egec ;};_dgfaf ._decag =_bgeff ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bdcd ,_cfgb :=_cgeg (_faag ,_gdfce );if _cfgb !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdfce ,_cfgb );return nil ,_cfgb ;};_dgfaf ._decag =_bdcd ;default:_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_gdfce );return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdfce );};return _dgfaf ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bebf *_bb .PdfObjectDictionary ;_bgbd *_bb .PdfIndirectObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fgbfd *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fgbfd .NumInputs {_ggf .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_cca .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fgbfd ._abdf ==nil {_feaa :=_fgbfd .processSamples ();if _feaa !=nil {return nil ,_feaa ;};};_dbec :=_fgbfd .Encode ;if _dbec ==nil {_dbec =[]float64 {};for _dgba :=0;_dgba < len (_fgbfd .Size );_dgba ++{_dbec =append (_dbec ,0);_dbec =append (_dbec ,float64 (_fgbfd .Size [_dgba ]-1));};};_dccf :=_fgbfd .Decode ;if _dccf ==nil {_dccf =_fgbfd .Range ;};_bccfb :=make ([]int ,len (x ));for _edbfd :=0;_edbfd < len (x );_edbfd ++{_cfab :=x [_edbfd ];_baecf :=_cc .Min (_cc .Max (_cfab ,_fgbfd .Domain [2*_edbfd ]),_fgbfd .Domain [2*_edbfd +1]);_aeegc :=_fe .LinearInterpolate (_baecf ,_fgbfd .Domain [2*_edbfd ],_fgbfd .Domain [2*_edbfd +1],_dbec [2*_edbfd ],_dbec [2*_edbfd +1]);_eegbb :=_cc .Min (_cc .Max (_aeegc ,0),float64 (_fgbfd .Size [_edbfd ]-1));_afbfg :=int (_cc .Floor (_eegbb +0.5));if _afbfg < 0{_afbfg =0;}else if _afbfg > _fgbfd .Size [_edbfd ]{_afbfg =_fgbfd .Size [_edbfd ]-1;};_bccfb [_edbfd ]=_afbfg ;};_edcd :=_bccfb [0];for _efcga :=1;_efcga < _fgbfd .NumInputs ;_efcga ++{_bbfb :=_bccfb [_efcga ];for _fgeb :=0;_fgeb < _efcga ;_fgeb ++{_bbfb *=_fgbfd .Size [_fgeb ];};_edcd +=_bbfb ;};_edcd *=_fgbfd .NumOutputs ;var _fcfed []float64 ;for _fgad :=0;_fgad < _fgbfd .NumOutputs ;_fgad ++{_fbee :=_edcd +_fgad ;if _fbee >=len (_fgbfd ._abdf ){_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_befdg :=_fgbfd ._abdf [_fbee ];_gfeba :=_fe .LinearInterpolate (float64 (_befdg ),0,_cc .Pow (2,float64 (_fgbfd .BitsPerSample )),_dccf [2*_fgad ],_dccf [2*_fgad +1]);_faga :=_cc .Min (_cc .Max (_gfeba ,_fgbfd .Range [2*_fgad ]),_fgbfd .Range [2*_fgad +1]);_fcfed =append (_fcfed ,_faga );};return _fcfed ,nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dgbbe *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// Items returns all children outline items.
func (_gdgfb *Outline )Items ()[]*OutlineItem {return _gdgfb .Entries };var _ddgag ="";

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fde :=NewPdfAction ();_cda :=&PdfActionJavaScript {};_cda .PdfAction =_fde ;_fde .SetContext (_cda );return _cda ;};func _babgef (_cdbbce string )map[string ]string {_ebbbe :=_ceac .Split (_cdbbce ,-1);_addeg :=map[string ]string {};for _ ,_bggea :=range _ebbbe {_bbggf :=_dacb .FindStringSubmatch (_bggea );if _bbggf ==nil {continue ;};_efga ,_affc :=_bbggf [1],_bbggf [2];_addeg [_efga ]=_affc ;};return _addeg ;};func (_fdgd *PdfReader )newPdfAnnotationFromIndirectObject (_aafc *_bb .PdfIndirectObject )(*PdfAnnotation ,error ){_afdf ,_abf :=_aafc .PdfObject .(*_bb .PdfObjectDictionary );if !_abf {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_fdgd ._aadc .GetModelFromPrimitive (_afdf );model !=nil {_agd ,_cce :=model .(*PdfAnnotation );if !_cce {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _agd ,nil ;};_cafb :=&PdfAnnotation {};_cafb ._afg =_aafc ;_fdgd ._aadc .Register (_afdf ,_cafb );if _gfcc :=_afdf .Get ("\u0054\u0079\u0070\u0065");_gfcc !=nil {_fgf ,_dfef :=_gfcc .(*_bb .PdfObjectName );if !_dfef {_ggf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfcc );}else {if *_fgf !="\u0041\u006e\u006eo\u0074"{_ggf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_fgf );};};};if _cafc :=_afdf .Get ("\u0052\u0065\u0063\u0074");_cafc !=nil {_cafb .Rect =_cafc ;};if _abb :=_afdf .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_abb !=nil {_cafb .Contents =_abb ;};if _bda :=_afdf .Get ("\u0050");_bda !=nil {_cafb .P =_bda ;};if _gabc :=_afdf .Get ("\u004e\u004d");_gabc !=nil {_cafb .NM =_gabc ;};if _dbf :=_afdf .Get ("\u004d");_dbf !=nil {_cafb .M =_dbf ;};if _bec :=_afdf .Get ("\u0046");_bec !=nil {_cafb .F =_bec ;};if _fegb :=_afdf .Get ("\u0041\u0050");_fegb !=nil {_cafb .AP =_fegb ;};if _ffcb :=_afdf .Get ("\u0041\u0053");_ffcb !=nil {_cafb .AS =_ffcb ;};if _cbf :=_afdf .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_cbf !=nil {_cafb .Border =_cbf ;};if _agbd :=_afdf .Get ("\u0043");_agbd !=nil {_cafb .C =_agbd ;};if _fba :=_afdf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fba !=nil {_cafb .StructParent =_fba ;};if _bde :=_afdf .Get ("\u004f\u0043");_bde !=nil {_cafb .OC =_bde ;};_aeaa :=_afdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _aeaa ==nil {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_cafb ._bafb =nil ;return _cafb ,nil ;};_aad ,_cf :=_aeaa .(*_bb .PdfObjectName );if !_cf {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_aeaa );return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_aeaa );};switch *_aad {case "\u0054\u0065\u0078\u0074":_gbgc ,_cgg :=_fdgd .newPdfAnnotationTextFromDict (_afdf );if _cgg !=nil {return nil ,_cgg ;};_gbgc .PdfAnnotation =_cafb ;_cafb ._bafb =_gbgc ;return _cafb ,nil ;case "\u004c\u0069\u006e\u006b":_cbd ,_geec :=_fdgd .newPdfAnnotationLinkFromDict (_afdf );if _geec !=nil {return nil ,_geec ;};_cbd .PdfAnnotation =_cafb ;_cafb ._bafb =_cbd ;return _cafb ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_eccg ,_ccg :=_fdgd .newPdfAnnotationFreeTextFromDict (_afdf );if _ccg !=nil {return nil ,_ccg ;};_eccg .PdfAnnotation =_cafb ;_cafb ._bafb =_eccg ;return _cafb ,nil ;case "\u004c\u0069\u006e\u0065":_fcg ,_efeg :=_fdgd .newPdfAnnotationLineFromDict (_afdf );if _efeg !=nil {return nil ,_efeg ;};_fcg .PdfAnnotation =_cafb ;_cafb ._bafb =_fcg ;_ggf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cafb ,_cafb );_ggf .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_fcg ,_fcg );_ggf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_fcg .PdfAnnotationMarkup ,_fcg .PdfAnnotationMarkup );return _cafb ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_gbb ,_bfef :=_fdgd .newPdfAnnotationSquareFromDict (_afdf );if _bfef !=nil {return nil ,_bfef ;};_gbb .PdfAnnotation =_cafb ;_cafb ._bafb =_gbb ;return _cafb ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cfb ,_ddb :=_fdgd .newPdfAnnotationCircleFromDict (_afdf );if _ddb !=nil {return nil ,_ddb ;};_cfb .PdfAnnotation =_cafb ;_cafb ._bafb =_cfb ;return _cafb ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_dfgc ,_bccf :=_fdgd .newPdfAnnotationPolygonFromDict (_afdf );if _bccf !=nil {return nil ,_bccf ;};_dfgc .PdfAnnotation =_cafb ;_cafb ._bafb =_dfgc ;return _cafb ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_ade ,_aabg :=_fdgd .newPdfAnnotationPolyLineFromDict (_afdf );if _aabg !=nil {return nil ,_aabg ;};_ade .PdfAnnotation =_cafb ;_cafb ._bafb =_ade ;return _cafb ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bfg ,_dfdb :=_fdgd .newPdfAnnotationHighlightFromDict (_afdf );if _dfdb !=nil {return nil ,_dfdb ;};_bfg .PdfAnnotation =_cafb ;_cafb ._bafb =_bfg ;return _cafb ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_dbbb ,_bfea :=_fdgd .newPdfAnnotationUnderlineFromDict (_afdf );if _bfea !=nil {return nil ,_bfea ;};_dbbb .PdfAnnotation =_cafb ;_cafb ._bafb =_dbbb ;return _cafb ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cced ,_fbc :=_fdgd .newPdfAnnotationSquigglyFromDict (_afdf );if _fbc !=nil {return nil ,_fbc ;};_cced .PdfAnnotation =_cafb ;_cafb ._bafb =_cced ;return _cafb ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bcd ,_ggbgf :=_fdgd .newPdfAnnotationStrikeOut (_afdf );if _ggbgf !=nil {return nil ,_ggbgf ;};_bcd .PdfAnnotation =_cafb ;_cafb ._bafb =_bcd ;return _cafb ,nil ;case "\u0043\u0061\u0072e\u0074":_cbcf ,_abgd :=_fdgd .newPdfAnnotationCaretFromDict (_afdf );if _abgd !=nil {return nil ,_abgd ;};_cbcf .PdfAnnotation =_cafb ;_cafb ._bafb =_cbcf ;return _cafb ,nil ;case "\u0053\u0074\u0061m\u0070":_fbb ,_fbeb :=_fdgd .newPdfAnnotationStampFromDict (_afdf );if _fbeb !=nil {return nil ,_fbeb ;};_fbb .PdfAnnotation =_cafb ;_cafb ._bafb =_fbb ;return _cafb ,nil ;case "\u0049\u006e\u006b":_bbg ,_gcfd :=_fdgd .newPdfAnnotationInkFromDict (_afdf );if _gcfd !=nil {return nil ,_gcfd ;};_bbg .PdfAnnotation =_cafb ;_cafb ._bafb =_bbg ;return _cafb ,nil ;case "\u0050\u006f\u0070u\u0070":_fdea ,_gfgg :=_fdgd .newPdfAnnotationPopupFromDict (_afdf );if _gfgg !=nil {return nil ,_gfgg ;};_fdea .PdfAnnotation =_cafb ;_cafb ._bafb =_fdea ;return _cafb ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_dcgb ,_adf :=_fdgd .newPdfAnnotationFileAttachmentFromDict (_afdf );if _adf !=nil {return nil ,_adf ;};_dcgb .PdfAnnotation =_cafb ;_cafb ._bafb =_dcgb ;return _cafb ,nil ;case "\u0053\u006f\u0075n\u0064":_gcg ,_gfdbc :=_fdgd .newPdfAnnotationSoundFromDict (_afdf );if _gfdbc !=nil {return nil ,_gfdbc ;};_gcg .PdfAnnotation =_cafb ;_cafb ._bafb =_gcg ;return _cafb ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_aade ,_ebfb :=_fdgd .newPdfAnnotationRichMediaFromDict (_afdf );if _ebfb !=nil {return nil ,_ebfb ;};_aade .PdfAnnotation =_cafb ;_cafb ._bafb =_aade ;return _cafb ,nil ;case "\u004d\u006f\u0076i\u0065":_ceg ,_cecd :=_fdgd .newPdfAnnotationMovieFromDict (_afdf );if _cecd !=nil {return nil ,_cecd ;};_ceg .PdfAnnotation =_cafb ;_cafb ._bafb =_ceg ;return _cafb ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bbgf ,_bgd :=_fdgd .newPdfAnnotationScreenFromDict (_afdf );if _bgd !=nil {return nil ,_bgd ;};_bbgf .PdfAnnotation =_cafb ;_cafb ._bafb =_bbgf ;return _cafb ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fbcf ,_ecca :=_fdgd .newPdfAnnotationWidgetFromDict (_afdf );if _ecca !=nil {return nil ,_ecca ;};_fbcf .PdfAnnotation =_cafb ;_cafb ._bafb =_fbcf ;return _cafb ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_cdeg ,_egc :=_fdgd .newPdfAnnotationPrinterMarkFromDict (_afdf );if _egc !=nil {return nil ,_egc ;};_cdeg .PdfAnnotation =_cafb ;_cafb ._bafb =_cdeg ;return _cafb ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bbbd ,_gccge :=_fdgd .newPdfAnnotationTrapNetFromDict (_afdf );if _gccge !=nil {return nil ,_gccge ;};_bbbd .PdfAnnotation =_cafb ;_cafb ._bafb =_bbbd ;return _cafb ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ccba ,_gdbf :=_fdgd .newPdfAnnotationWatermarkFromDict (_afdf );if _gdbf !=nil {return nil ,_gdbf ;};_ccba .PdfAnnotation =_cafb ;_cafb ._bafb =_ccba ;return _cafb ,nil ;case "\u0033\u0044":_bacd ,_bgdb :=_fdgd .newPdfAnnotation3DFromDict (_afdf );if _bgdb !=nil {return nil ,_bgdb ;};_bacd .PdfAnnotation =_cafb ;_cafb ._bafb =_bacd ;return _cafb ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_adg ,_afbd :=_fdgd .newPdfAnnotationProjectionFromDict (_afdf );if _afbd !=nil {return nil ,_afbd ;};_adg .PdfAnnotation =_cafb ;_cafb ._bafb =_adg ;return _cafb ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_deca ,_edfedf :=_fdgd .newPdfAnnotationRedactFromDict (_afdf );if _edfedf !=nil {return nil ,_edfedf ;};_deca .PdfAnnotation =_cafb ;_cafb ._bafb =_deca ;return _cafb ,nil ;};_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_aad );return nil ,nil ;};func (_bdcde *PdfReader )traverseObjectData (_ffba _bb .PdfObject )error {return _bb .ResolveReferencesDeep (_ffba ,_bdcde ._ecba );};

// String returns a string that describes `base`.
func (_bfge fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bfge .coreString ());};func (_fadf *PdfAppender )mergeResources (_gdda ,_cfgg _bb .PdfObject ,_ccff map[_bb .PdfObjectName ]_bb .PdfObjectName )_bb .PdfObject {if _cfgg ==nil &&_gdda ==nil {return nil ;};if _cfgg ==nil {return _gdda ;};_acbc ,_bcdd :=_bb .GetDict (_cfgg );if !_bcdd {return _gdda ;};if _gdda ==nil {_cgbb :=_bb .MakeDict ();_cgbb .Merge (_acbc );return _cfgg ;};_gcad ,_bcdd :=_bb .GetDict (_gdda );if !_bcdd {_ggf .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_gcad =_bb .MakeDict ();};for _ ,_bbgfc :=range _acbc .Keys (){if _ddgg ,_cggc :=_ccff [_bbgfc ];_cggc {_gcad .Set (_ddgg ,_acbc .Get (_bbgfc ));}else {_gcad .Set (_bbgfc ,_acbc .Get (_bbgfc ));};};return _gcad ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fegdd :=&PdfFieldSignature {};_fegdd .PdfField =NewPdfField ();_fegdd .PdfField .SetContext (_fegdd );_fegdd .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fegdd .PdfAnnotationWidget .SetContext (_fegdd );_fegdd .PdfAnnotationWidget ._afg =_fegdd .PdfField ._fdab ;_fegdd .T =_bb .MakeString ("");_fegdd .F =_bb .MakeInteger (132);_fegdd .V =signature ;return _fegdd ;};var _ggdf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};func _ebegde (_fbfgf _bb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gfga :=&PdfPageResourcesColorspaces {};if _gfgdb ,_aefaec :=_fbfgf .(*_bb .PdfIndirectObject );_aefaec {_gfga ._beddf =_gfgdb ;_fbfgf =_gfgdb .PdfObject ;};_agced ,_gcgb :=_bb .GetDict (_fbfgf );if !_gcgb {return nil ,_cca .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gfga .Names =[]string {};_gfga .Colorspaces =map[string ]PdfColorspace {};for _ ,_fgebc :=range _agced .Keys (){_gbaa :=_agced .Get (_fgebc );_gfga .Names =append (_gfga .Names ,string (_fgebc ));_ddedf ,_egaae :=NewPdfColorspaceFromPdfObject (_gbaa );if _egaae !=nil {return nil ,_egaae ;};_gfga .Colorspaces [string (_fgebc )]=_ddedf ;};return _gfga ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bb .PdfObject ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dfde *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dfde ._abfca .(*PdfTilingPattern );};

// ToPdfObject implements interface PdfModel.
func (_cec *PdfActionSubmitForm )ToPdfObject ()_bb .PdfObject {_cec .PdfAction .ToPdfObject ();_def :=_cec ._bd ;_bgg :=_def .PdfObject .(*_bb .PdfObjectDictionary );_bgg .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeSubmitForm )));if _cec .F !=nil {_bgg .Set ("\u0046",_cec .F .ToPdfObject ());};_bgg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cec .Fields );_bgg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cec .Flags );return _def ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func (_bdgeg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// SetFlag sets the flag for the field.
func (_bbcf *PdfField )SetFlag (flag FieldFlag ){_bbcf .Ff =_bb .MakeInteger (int64 (flag ))};

// SetShadingByName sets a shading resource specified by keyName.
func (_dfbbb *PdfPageResources )SetShadingByName (keyName _bb .PdfObjectName ,shadingObj _bb .PdfObject )error {if _dfbbb .Shading ==nil {_dfbbb .Shading =_bb .MakeDict ();};_cbdbc ,_bggbf :=_dfbbb .Shading .(*_bb .PdfObjectDictionary );if !_bggbf {return _bb .ErrTypeError ;};_cbdbc .Set (keyName ,shadingObj );return nil ;};

// SetDecode sets the decode image float slice.
func (_gbbd *Image )SetDecode (decode []float64 ){_gbbd ._afae =decode };

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_bcc :=NewPdfAnnotation ();_feg :=&PdfAnnotationFileAttachment {};_feg .PdfAnnotation =_bcc ;_feg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcc .SetContext (_feg );return _feg ;};func (_beea *PdfReader )newPdfAnnotationSquigglyFromDict (_edde *_bb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cadbgg :=PdfAnnotationSquiggly {};_fbfc ,_afff :=_beea .newPdfAnnotationMarkupFromDict (_edde );if _afff !=nil {return nil ,_afff ;};_cadbgg .PdfAnnotationMarkup =_fbfc ;_cadbgg .QuadPoints =_edde .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cadbgg ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bb .PdfObject )(PdfColorspace ,error ){var _bfac *_bb .PdfIndirectObject ;var _ecda *_bb .PdfObjectName ;var _dgcc *_bb .PdfObjectArray ;if _eaaa ,_fabe :=obj .(*_bb .PdfIndirectObject );_fabe {_bfac =_eaaa ;};obj =_bb .TraceToDirectObject (obj );switch _aaeb :=obj .(type ){case *_bb .PdfObjectArray :_dgcc =_aaeb ;case *_bb .PdfObjectName :_ecda =_aaeb ;};if _ecda !=nil {switch *_ecda {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_ggf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_ecda );return nil ,_cfda ;};};if _dgcc !=nil &&_dgcc .Len ()> 0{var _cceg _bb .PdfObject =_bfac ;if _bfac ==nil {_cceg =_dgcc ;};if _ggcf ,_caff :=_bb .GetName (_dgcc .Get (0));_caff {switch _ggcf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dgcc .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dgcc .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dgcc .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _dbdbc (_cceg );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _cdba (_cceg );case "\u004c\u0061\u0062":return _defd (_cceg );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dedg (_cceg );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _gaacd (_cceg );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _ceba (_cceg );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _gecfe (_cceg );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _faed (_cceg );default:_ggf .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_ggcf );};};};_ggf .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// ToPdfObject implements interface PdfModel.
func (_dfee *PdfAnnotationSound )ToPdfObject ()_bb .PdfObject {_dfee .PdfAnnotation .ToPdfObject ();_accee :=_dfee ._afg ;_gadc :=_accee .PdfObject .(*_bb .PdfObjectDictionary );_dfee .PdfAnnotationMarkup .appendToPdfDictionary (_gadc );_gadc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u006f\u0075n\u0064"));_gadc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dfee .Sound );_gadc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfee .Name );return _accee ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cgcdc *PdfFieldText )ToPdfObject ()_bb .PdfObject {_cgcdc .PdfField .ToPdfObject ();_fabec :=_cgcdc ._fdab ;_cefg :=_fabec .PdfObject .(*_bb .PdfObjectDictionary );_cefg .Set ("\u0046\u0054",_bb .MakeName ("\u0054\u0078"));if _cgcdc .DA !=nil {_cefg .Set ("\u0044\u0041",_cgcdc .DA );};if _cgcdc .Q !=nil {_cefg .Set ("\u0051",_cgcdc .Q );};if _cgcdc .DS !=nil {_cefg .Set ("\u0044\u0053",_cgcdc .DS );};if _cgcdc .RV !=nil {_cefg .Set ("\u0052\u0056",_cgcdc .RV );};if _cgcdc .MaxLen !=nil {_cefg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cgcdc .MaxLen );};return _fabec ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_cdgc :=&PdfBorderStyle {};return _cdgc };func (_dcfe *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gacec *PdfShadingType1 )ToPdfObject ()_bb .PdfObject {_gacec .PdfShading .ToPdfObject ();_dgbda ,_ggfb :=_gacec .getShadingDict ();if _ggfb !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gacec .Domain !=nil {_dgbda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gacec .Domain );};if _gacec .Matrix !=nil {_dgbda .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gacec .Matrix );};if _gacec .Function !=nil {if len (_gacec .Function )==1{_dgbda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gacec .Function [0].ToPdfObject ());}else {_dcec :=_bb .MakeArray ();for _ ,_ggbaa :=range _gacec .Function {_dcec .Append (_ggbaa .ToPdfObject ());};_dgbda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcec );};};return _gacec ._cggec ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fcfc :=NewPdfAnnotation ();_dcfc :=&PdfAnnotation3D {};_dcfc .PdfAnnotation =_fcfc ;_fcfc .SetContext (_dcfc );return _dcfc ;};

// Add appends a top level outline item to the outline.
func (_dgdad *Outline )Add (item *OutlineItem ){_dgdad .Entries =append (_dgdad .Entries ,item )};func (_fcccb *PdfAppender )addNewObject (_abde _bb .PdfObject ){if _ ,_dada :=_fcccb ._gcdg [_abde ];!_dada {_fcccb ._bbeb =append (_fcccb ._bbeb ,_abde );_fcccb ._gcdg [_abde ]=struct{}{};};};

// A returns the value of the A component of the color.
func (_geafgg *PdfColorCalRGB )A ()float64 {return float64 (_geafgg [0])};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bb .PdfObject ;Dest _bb .PdfObject ;H _bb .PdfObject ;PA _bb .PdfObject ;QuadPoints _bb .PdfObject ;BS _bb .PdfObject ;_dfe *PdfAction ;_gccg *PdfReader ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_acbdb *OutlineItem )ToPdfObject ()_bb .PdfObject {_egegg ,_ :=_acbdb .ToPdfOutlineItem ();return _egegg .ToPdfObject ();};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_bfbgf *PdfPageResources )GetFontByName (keyName _bb .PdfObjectName )(_bb .PdfObject ,bool ){if _bfbgf .Font ==nil {return nil ,false ;};_dgcb ,_ebeec :=_bb .TraceToDirectObject (_bfbgf .Font ).(*_bb .PdfObjectDictionary );if !_ebeec {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bb .TraceToDirectObject (_bfbgf .Font ));return nil ,false ;};if _feec :=_dgcb .Get (keyName );_feec !=nil {return _feec ,true ;};return nil ,false ;};func _ceba (_afdg _bb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_abgf :=NewPdfColorspaceSpecialIndexed ();if _bfead ,_gcgc :=_afdg .(*_bb .PdfIndirectObject );_gcgc {_abgf ._ffea =_bfead ;};_afdg =_bb .TraceToDirectObject (_afdg );_ddea ,_ddad :=_afdg .(*_bb .PdfObjectArray );if !_ddad {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddea .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_afdg =_ddea .Get (0);_dbfc ,_ddad :=_afdg .(*_bb .PdfObjectName );if !_ddad {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_dbfc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_afdg =_ddea .Get (1);_fceg ,_fdcf :=DetermineColorspaceNameFromPdfObject (_afdg );if _fceg =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fceg =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ggf .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fceg );return nil ,_cfda ;};_egaf ,_fdcf :=NewPdfColorspaceFromPdfObject (_afdg );if _fdcf !=nil {return nil ,_fdcf ;};_abgf .Base =_egaf ;_afdg =_ddea .Get (2);_ecgb ,_fdcf :=_bb .GetNumberAsInt64 (_afdg );if _fdcf !=nil {return nil ,_fdcf ;};if _ecgb > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_abgf .HiVal =int (_ecgb );_afdg =_ddea .Get (3);_abgf .Lookup =_afdg ;_afdg =_bb .TraceToDirectObject (_afdg );var _gbag []byte ;if _accg ,_fgeae :=_afdg .(*_bb .PdfObjectString );_fgeae {_gbag =_accg .Bytes ();_ggf .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gbag );}else if _gecf ,_deba :=_afdg .(*_bb .PdfObjectStream );_deba {_ggf .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_afdg .String ());_ggf .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gecf .Stream ),_gecf .Stream );_eagba ,_bbff :=_bb .DecodeStream (_gecf );if _bbff !=nil {return nil ,_bbff ;};_ggf .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_eagba ),_eagba );_gbag =_eagba ;}else {_ggf .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_afdg );return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gbag )< _abgf .Base .GetNumComponents ()*(_abgf .HiVal +1){_ggf .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_ggf .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gbag ),_abgf .Base .GetNumComponents (),_abgf .HiVal );}else {_gbag =_gbag [:_abgf .Base .GetNumComponents ()*(_abgf .HiVal +1)];};_abgf ._bbcd =_gbag ;return _abgf ,nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bb .PdfObject ;RichMediaContent _bb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cdae *PdfActionImportData )ToPdfObject ()_bb .PdfObject {_cdae .PdfAction .ToPdfObject ();_abg :=_cdae ._bd ;_dca :=_abg .PdfObject .(*_bb .PdfObjectDictionary );_dca .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeImportData )));if _cdae .F !=nil {_dca .Set ("\u0046",_cdae .F .ToPdfObject ());};return _abg ;};func (_fbfb *PdfReader )newPdfFieldSignatureFromDict (_ggecg *_bb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_bggdf :=&PdfFieldSignature {};_abeb ,_faabf :=_bb .GetIndirect (_ggecg .Get ("\u0056"));if _faabf {var _ggfd error ;_bggdf .V ,_ggfd =_fbfb .newPdfSignatureFromIndirect (_abeb );if _ggfd !=nil {return nil ,_ggfd ;};};_bggdf .Lock ,_ =_bb .GetIndirect (_ggecg .Get ("\u004c\u006f\u0063\u006b"));_bggdf .SV ,_ =_bb .GetIndirect (_ggecg .Get ("\u0053\u0056"));return _bggdf ,nil ;};func _defd (_edgd _bb .PdfObject )(*PdfColorspaceLab ,error ){_fggd :=NewPdfColorspaceLab ();if _bag ,_eea :=_edgd .(*_bb .PdfIndirectObject );_eea {_fggd ._cecg =_bag ;};_edgd =_bb .TraceToDirectObject (_edgd );_geebd ,_bbda :=_edgd .(*_bb .PdfObjectArray );if !_bbda {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _geebd .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_edgd =_bb .TraceToDirectObject (_geebd .Get (0));_dgda ,_bbda :=_edgd .(*_bb .PdfObjectName );if !_bbda {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_dgda !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_edgd =_bb .TraceToDirectObject (_geebd .Get (1));_gaga ,_bbda :=_edgd .(*_bb .PdfObjectDictionary );if !_bbda {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_edgd =_gaga .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_edgd =_bb .TraceToDirectObject (_edgd );_bgge ,_bbda :=_edgd .(*_bb .PdfObjectArray );if !_bbda {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _bgge .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gdgg ,_bgfb :=_bgge .GetAsFloat64Slice ();if _bgfb !=nil {return nil ,_bgfb ;};_fggd .WhitePoint =_gdgg ;_edgd =_gaga .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _edgd !=nil {_edgd =_bb .TraceToDirectObject (_edgd );_bbbb ,_aceg :=_edgd .(*_bb .PdfObjectArray );if !_aceg {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _bbbb .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_feeb ,_aceb :=_bbbb .GetAsFloat64Slice ();if _aceb !=nil {return nil ,_aceb ;};_fggd .BlackPoint =_feeb ;};_edgd =_gaga .Get ("\u0052\u0061\u006eg\u0065");if _edgd !=nil {_edgd =_bb .TraceToDirectObject (_edgd );_bbac ,_bfgg :=_edgd .(*_bb .PdfObjectArray );if !_bfgg {_ggf .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbac .Len ()!=4{_ggf .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dcdc ,_ceea :=_bbac .GetAsFloat64Slice ();if _ceea !=nil {return nil ,_ceea ;};_fggd .Range =_dcdc ;};return _fggd ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_ccde *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _ccde .UnderlyingCS .GetNumComponents ();};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_begc :=PdfColorCalGray (grayVal );return &_begc ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bee :=NewPdfAction ();_fg :=&PdfActionHide {};_fg .PdfAction =_bee ;_bee .SetContext (_fg );return _fg ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_eaff :=NewPdfAnnotation ();_bae :=&PdfAnnotationStamp {};_bae .PdfAnnotation =_eaff ;_bae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaff .SetContext (_bae );return _bae ;};func _dcbc (_fddag *_bb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dcfee :=PdfShadingType2 {};_ecdfe :=_fddag .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ecdfe ==nil {_ggf .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_begda ,_agbdc :=_ecdfe .(*_bb .PdfObjectArray );if !_agbdc {_ggf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecdfe );return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _begda .Len ()!=4{_ggf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_begda .Len ());return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_dcfee .Coords =_begda ;if _efgbg :=_fddag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_efgbg !=nil {_efgbg =_bb .TraceToDirectObject (_efgbg );_feedb ,_gdgbb :=_efgbg .(*_bb .PdfObjectArray );if !_gdgbb {_ggf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efgbg );return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcfee .Domain =_feedb ;};_ecdfe =_fddag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ecdfe ==nil {_ggf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_dcfee .Function =[]PdfFunction {};if _ffcfd ,_afdeg :=_ecdfe .(*_bb .PdfObjectArray );_afdeg {for _ ,_cdacd :=range _ffcfd .Elements (){_eebg ,_aeagd :=_cdgbg (_cdacd );if _aeagd !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeagd );return nil ,_aeagd ;};_dcfee .Function =append (_dcfee .Function ,_eebg );};}else {_gdee ,_fegcb :=_cdgbg (_ecdfe );if _fegcb !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fegcb );return nil ,_fegcb ;};_dcfee .Function =append (_dcfee .Function ,_gdee );};if _gadecf :=_fddag .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gadecf !=nil {_gadecf =_bb .TraceToDirectObject (_gadecf );_acga ,_ffcga :=_gadecf .(*_bb .PdfObjectArray );if !_ffcga {_ggf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gadecf );return nil ,_bb .ErrTypeError ;};if _acga .Len ()!=2{_ggf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_acga .Len ());return nil ,ErrInvalidAttribute ;};_dcfee .Extend =_acga ;};return &_dcfee ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_gdaae *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edgge ,_dbea :=_bb .GetNumbersAsFloat (objects );if _dbea !=nil {return nil ,_dbea ;};return _gdaae .ColorFromFloats (_edgge );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_deff *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func _dgae (_aeff _bb .PdfObject ,_bbebf *fontCommon )(*_ac .CMap ,error ){_efged ,_aeee :=_bb .GetStream (_aeff );if !_aeee {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_aeff );return nil ,_bb .ErrTypeError ;};_ebfbdd ,_ddbf :=_bb .DecodeStream (_efged );if _ddbf !=nil {return nil ,_ddbf ;};_begf ,_ddbf :=_ac .LoadCmapFromData (_ebfbdd ,!_bbebf .isCIDFont ());if _ddbf !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_efged .ObjectNumber ,_ddbf );};return _begf ,_ddbf ;};func (_ffdf *PdfReader )newPdfAcroFormFromDict (_cbad *_bb .PdfIndirectObject ,_ccab *_bb .PdfObjectDictionary )(*PdfAcroForm ,error ){_cagfc :=NewPdfAcroForm ();if _cbad !=nil {_cagfc ._cdfcga =_cbad ;_cbad .PdfObject =_bb .MakeDict ();};if _cdaed :=_ccab .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cdaed !=nil {_fcacd ,_dgdcd :=_bb .GetArray (_cdaed );if !_dgdcd {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cdaed );};var _ecff []*PdfField ;for _ ,_gadaa :=range _fcacd .Elements (){_ccfd ,_eccab :=_bb .GetIndirect (_gadaa );if !_eccab {if _ ,_cebff :=_gadaa .(*_bb .PdfObjectNull );_cebff {_ggf .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_ggf .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gadaa );return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_abcfg ,_caec :=_ffdf .newPdfFieldFromIndirectObject (_ccfd ,nil );if _caec !=nil {return nil ,_caec ;};_ggf .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_abcfg );_ecff =append (_ecff ,_abcfg );};_cagfc .Fields =&_ecff ;};if _ddgccb :=_ccab .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_ddgccb !=nil {_ccffcd ,_fegc :=_bb .GetBool (_ddgccb );if _fegc {_cagfc .NeedAppearances =_ccffcd ;}else {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ddgccb );};};if _fcabd :=_ccab .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_fcabd !=nil {_baca ,_gdeg :=_bb .GetInt (_fcabd );if _gdeg {_cagfc .SigFlags =_baca ;}else {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcabd );};};if _eedcf :=_ccab .Get ("\u0043\u004f");_eedcf !=nil {_aeec ,_ebcd :=_bb .GetArray (_eedcf );if _ebcd {_cagfc .CO =_aeec ;}else {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eedcf );};};if _eebae :=_ccab .Get ("\u0044\u0052");_eebae !=nil {if _fegad ,_egbc :=_bb .GetDict (_eebae );_egbc {_dgfgg ,_ccdfg :=NewPdfPageResourcesFromDict (_fegad );if _ccdfg !=nil {_ggf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ccdfg );return nil ,_ccdfg ;};_cagfc .DR =_dgfgg ;}else {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eebae );};};if _cfdac :=_ccab .Get ("\u0044\u0041");_cfdac !=nil {_efef ,_cafe :=_bb .GetString (_cfdac );if _cafe {_cagfc .DA =_efef ;}else {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cfdac );};};if _dfge :=_ccab .Get ("\u0051");_dfge !=nil {_dgag ,_aeecg :=_bb .GetInt (_dfge );if _aeecg {_cagfc .Q =_dgag ;}else {_ggf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dfge );};};if _fbfg :=_ccab .Get ("\u0058\u0046\u0041");_fbfg !=nil {_cagfc .XFA =_fbfg ;};return _cagfc ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_cff *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cgefg =keywords };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_eefd :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_eefd ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bb .PdfObject ;Name _bb .PdfObject ;State _bb .PdfObject ;StateModel _bb .PdfObject ;};

// ValidateSignatures validates digital signatures in the document.
func (_gfdd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _gfdd .AcroForm ==nil {return nil ,nil ;};if _gfdd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_fbbdc *PdfSignature ;_beggc *PdfField ;_becg SignatureHandler ;};var _ecedf []*sigFieldPair ;for _ ,_cggaa :=range _gfdd .AcroForm .AllFields (){if _cggaa .V ==nil {continue ;};if _bdbbg ,_agceee :=_bb .GetDict (_cggaa .V );_agceee {if _agggg ,_cccfg :=_bb .GetNameVal (_bdbbg .Get ("\u0054\u0079\u0070\u0065"));_cccfg &&_agggg =="\u0053\u0069\u0067"{_gfddc ,_cfggbd :=_bb .GetIndirect (_cggaa .V );if !_cfggbd {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_bcfdg ,_agbcb :=_gfdd .newPdfSignatureFromIndirect (_gfddc );if _agbcb !=nil {return nil ,_agbcb ;};var _egaca SignatureHandler ;for _ ,_cbbg :=range handlers {if _cbbg .IsApplicable (_bcfdg ){_egaca =_cbbg ;break ;};};_ecedf =append (_ecedf ,&sigFieldPair {_fbbdc :_bcfdg ,_beggc :_cggaa ,_becg :_egaca });};};};var _bfcca []SignatureValidationResult ;for _ ,_ggbeg :=range _ecedf {_eeefc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ggbeg ._beggc }};if _ggbeg ._becg ==nil {_eeefc .Errors =append (_eeefc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_bfcca =append (_bfcca ,_eeefc );continue ;};_bgefe ,_ccca :=_ggbeg ._becg .NewDigest (_ggbeg ._fbbdc );if _ccca !=nil {_eeefc .Errors =append (_eeefc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_ccca .Error ());_bfcca =append (_bfcca ,_eeefc );continue ;};_fcfce :=_ggbeg ._fbbdc .ByteRange ;if _fcfce ==nil {_eeefc .Errors =append (_eeefc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_bfcca =append (_bfcca ,_eeefc );continue ;};for _debfb :=0;_debfb < _fcfce .Len ();_debfb =_debfb +2{_ffaee ,_ :=_bb .GetNumberAsInt64 (_fcfce .Get (_debfb ));_ddgaf ,_ :=_bb .GetIntVal (_fcfce .Get (_debfb +1));if _ ,_cdgcc :=_gfdd ._fgeaf .Seek (_ffaee ,_ec .SeekStart );_cdgcc !=nil {return nil ,_cdgcc ;};_dbebg :=make ([]byte ,_ddgaf );if _ ,_cafeb :=_gfdd ._fgeaf .Read (_dbebg );_cafeb !=nil {return nil ,_cafeb ;};_bgefe .Write (_dbebg );};_bgagb ,_ccca :=_ggbeg ._becg .Validate (_ggbeg ._fbbdc ,_bgefe );if _ccca !=nil {return nil ,_ccca ;};_bgagb .Name =_ggbeg ._fbbdc .Name .Decoded ();_bgagb .Reason =_ggbeg ._fbbdc .Reason .Decoded ();if _ggbeg ._fbbdc .M !=nil {_dgcfg ,_faddd :=NewPdfDate (_ggbeg ._fbbdc .M .String ());if _faddd !=nil {_bgagb .Errors =append (_bgagb .Errors ,_faddd .Error ());continue ;};_bgagb .Date =_dgcfg ;};_bgagb .ContactInfo =_ggbeg ._fbbdc .ContactInfo .Decoded ();_bgagb .Location =_ggbeg ._fbbdc .Location .Decoded ();_bgagb .Fields =_eeefc .Fields ;_bfcca =append (_bfcca ,_bgagb );};return _bfcca ,nil ;};func (_cdcdb *PdfWriter )writeString (_eegce string ){if _cdcdb ._debd !=nil {return ;};_bcef ,_fdecd :=_cdcdb ._bggcc .WriteString (_eegce );_cdcdb ._dgbge +=int64 (_bcef );_cdcdb ._debd =_fdecd ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_gbda FieldFlag )Mask ()uint32 {return uint32 (_gbda )};

// IsCID returns true if the underlying font is CID.
func (_gbdec *PdfFont )IsCID ()bool {return _gbdec .baseFields ().isCIDFont ()};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bafb PdfModel ;Rect _bb .PdfObject ;Contents _bb .PdfObject ;P _bb .PdfObject ;NM _bb .PdfObject ;M _bb .PdfObject ;F _bb .PdfObject ;AP _bb .PdfObject ;AS _bb .PdfObject ;Border _bb .PdfObject ;C _bb .PdfObject ;StructParent _bb .PdfObject ;OC _bb .PdfObject ;_afg *_bb .PdfIndirectObject ;};

// K returns the value of the key component of the color.
func (_dbcgc *PdfColorDeviceCMYK )K ()float64 {return float64 (_dbcgc [3])};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bb .PdfObject ;LE _bb .PdfObject ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;IT _bb .PdfObject ;Measure _bb .PdfObject ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_abce *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _abce .Alternate ==nil {_ggf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _abce .N ==1{_ggf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_cbgf :=NewPdfColorspaceDeviceGray ();return _cbgf .ColorToRGB (color );}else if _abce .N ==3{_ggf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _abce .N ==4{_ggf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_degb :=NewPdfColorspaceDeviceCMYK ();return _degb .ColorToRGB (color );}else {return nil ,_cca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_ggf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_abce );return _abce .Alternate .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_bfa *PdfActionHide )ToPdfObject ()_bb .PdfObject {_bfa .PdfAction .ToPdfObject ();_eac :=_bfa ._bd ;_bba :=_eac .PdfObject .(*_bb .PdfObjectDictionary );_bba .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeHide )));_bba .SetIfNotNil ("\u0054",_bfa .T );_bba .SetIfNotNil ("\u0048",_bfa .H );return _eac ;};func (_dcage *Image )samplesAddPadding (_cceefb []uint32 )[]uint32 {_efgaef :=_fe .BytesPerLine (int (_dcage .Width ),int (_dcage .BitsPerComponent ),_dcage .ColorComponents )*(8/int (_dcage .BitsPerComponent ));_cggeb :=_efgaef *int (_dcage .Height );if len (_cceefb )==_cggeb {return _cceefb ;};_ebdba :=make ([]uint32 ,_cggeb );_efaea :=int (_dcage .Width )*_dcage .ColorComponents ;for _ffbee :=0;_ffbee < int (_dcage .Height );_ffbee ++{_egae :=_ffbee *int (_dcage .Width );_fegfg :=_ffbee *_efgaef ;for _bfcgf :=0;_bfcgf < _efaea ;_bfcgf ++{_ebdba [_fegfg +_bfcgf ]=_cceefb [_egae +_bfcgf ];};};return _ebdba ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_efec *PdfColorspaceSpecialIndexed )ToPdfObject ()_bb .PdfObject {_aadef :=_bb .MakeArray (_bb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_aadef .Append (_efec .Base .ToPdfObject ());_aadef .Append (_bb .MakeInteger (int64 (_efec .HiVal )));_aadef .Append (_efec .Lookup );if _efec ._ffea !=nil {_efec ._ffea .PdfObject =_aadef ;return _efec ._ffea ;};return _aadef ;};type pdfFontSimple struct{fontCommon ;_bbec *_bb .PdfIndirectObject ;_cbccg map[_cefb .CharCode ]float64 ;_ggff _cefb .TextEncoder ;_fgec _cefb .TextEncoder ;_eeeb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bb .PdfObject ;LastChar _bb .PdfObject ;Widths _bb .PdfObject ;Encoding _bb .PdfObject ;_dgaac map[rune ]_ca .CharMetrics ;};

// WriteString outputs the object as it is to be written to file.
func (_fefad *pdfSignDictionary )WriteString ()string {_fefad ._bbceb =0;_fefad ._badda =0;_fefad ._ebgab =0;_fefad ._cggbb =0;_feefb :=_gfd .NewBuffer (nil );_feefb .WriteString ("\u003c\u003c");for _ ,_eeff :=range _fefad .Keys (){_eddgc :=_fefad .Get (_eeff );switch _eeff {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_feefb .WriteString (_eeff .WriteString ());_feefb .WriteString ("\u0020");_fefad ._ebgab =_feefb .Len ();_feefb .WriteString (_eddgc .WriteString ());_feefb .WriteString ("\u0020");_fefad ._cggbb =_feefb .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_feefb .WriteString (_eeff .WriteString ());_feefb .WriteString ("\u0020");_fefad ._bbceb =_feefb .Len ();_feefb .WriteString (_eddgc .WriteString ());_feefb .WriteString ("\u0020");_fefad ._badda =_feefb .Len ()-1;default:_feefb .WriteString (_eeff .WriteString ());_feefb .WriteString ("\u0020");_feefb .WriteString (_eddgc .WriteString ());};};_feefb .WriteString ("\u003e\u003e");return _feefb .String ();};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gabe *PdfTilingPattern )ToPdfObject ()_bb .PdfObject {_gabe .PdfPattern .ToPdfObject ();_deedg :=_gabe .getDict ();if _gabe .PaintType !=nil {_deedg .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gabe .PaintType );};if _gabe .TilingType !=nil {_deedg .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gabe .TilingType );};if _gabe .BBox !=nil {_deedg .Set ("\u0042\u0042\u006f\u0078",_gabe .BBox .ToPdfObject ());};if _gabe .XStep !=nil {_deedg .Set ("\u0058\u0053\u0074e\u0070",_gabe .XStep );};if _gabe .YStep !=nil {_deedg .Set ("\u0059\u0053\u0074e\u0070",_gabe .YStep );};if _gabe .Resources !=nil {_deedg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gabe .Resources .ToPdfObject ());};if _gabe .Matrix !=nil {_deedg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gabe .Matrix );};return _gabe ._egbda ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cdgaa pdfCIDFontType0 )GetRuneMetrics (r rune )(_ca .CharMetrics ,bool ){return _ca .CharMetrics {Wx :_cdgaa ._gaae },true ;};

// GetOptimizer returns current PDF optimizer.
func (_edceaa *PdfWriter )GetOptimizer ()Optimizer {return _edceaa ._gfade };

// ToPdfObject returns a stream object.
func (_gaaaf *XObjectImage )ToPdfObject ()_bb .PdfObject {_ebffb :=_gaaaf ._dddb ;_fefc :=_ebffb .PdfObjectDictionary ;if _gaaaf .Filter !=nil {_fefc =_gaaaf .Filter .MakeStreamDict ();_ebffb .PdfObjectDictionary =_fefc ;};_fefc .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_fefc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0049\u006d\u0061g\u0065"));_fefc .Set ("\u0057\u0069\u0064t\u0068",_bb .MakeInteger (*(_gaaaf .Width )));_fefc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bb .MakeInteger (*(_gaaaf .Height )));if _gaaaf .BitsPerComponent !=nil {_fefc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bb .MakeInteger (*(_gaaaf .BitsPerComponent )));};if _gaaaf .ColorSpace !=nil {_fefc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gaaaf .ColorSpace .ToPdfObject ());};_fefc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gaaaf .Intent );_fefc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gaaaf .ImageMask );_fefc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gaaaf .Mask );_fefc .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_gaaaf .Decode );_fefc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gaaaf .Interpolate );_fefc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gaaaf .Alternatives );_fefc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gaaaf .SMask );_fefc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gaaaf .SMaskInData );_fefc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gaaaf .Matte );_fefc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gaaaf .Name );_fefc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gaaaf .StructParent );_fefc .SetIfNotNil ("\u0049\u0044",_gaaaf .ID );_fefc .SetIfNotNil ("\u004f\u0050\u0049",_gaaaf .OPI );_fefc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gaaaf .Metadata );_fefc .SetIfNotNil ("\u004f\u0043",_gaaaf .OC );_fefc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_gaaaf .Stream ))));_ebffb .Stream =_gaaaf .Stream ;return _ebffb ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ceaca *PdfPageResources )GetShadingByName (keyName _bb .PdfObjectName )(*PdfShading ,bool ){if _ceaca .Shading ==nil {return nil ,false ;};_bbdda ,_egcfe :=_bb .TraceToDirectObject (_ceaca .Shading ).(*_bb .PdfObjectDictionary );if !_egcfe {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ceaca .Shading );return nil ,false ;};if _cefbd :=_bbdda .Get (keyName );_cefbd !=nil {_ceag ,_fegfc :=_ecbg (_cefbd );if _fegfc !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fegfc );return nil ,false ;};return _ceag ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbeg *PdfColorspaceSpecialSeparation )ToPdfObject ()_bb .PdfObject {_aafa :=_bb .MakeArray (_bb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_aafa .Append (_bbeg .ColorantName );_aafa .Append (_bbeg .AlternateSpace .ToPdfObject ());_aafa .Append (_bbeg .TintTransform .ToPdfObject ());if _bbeg ._gafc !=nil {_bbeg ._gafc .PdfObject =_aafa ;return _bbeg ._gafc ;};return _aafa ;};

// Write writes out the PDF.
func (_gdbb *PdfWriter )Write (writer _ec .Writer )error {_ggf .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_gdfge :=_cef .GetLicenseKey ();if (_gdfge ==nil ||!_gdfge .IsLicensed ())&&!_acdcd {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _cca .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _gdbb ._fefadf !=nil {_ggf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gdbb ._fefadf );_ceebgc :=_gdbb ._fefadf .ToPdfObject ();_ggf .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ceebgc ,_ceebgc ,_ceebgc );_gdbb ._bdaad .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ceebgc );_acbf :=_gdbb .addObjects (_ceebgc );if _acbf !=nil {return _acbf ;};};if _gdbb ._cgaca !=nil {_ggf .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_dafbg :=_gdbb ._cgaca .ToPdfObject ();_ggf .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dafbg );_gdbb ._bdaad .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dafbg );_daccd :=_gdbb .addObjects (_dafbg );if _daccd !=nil {return _daccd ;};};for _ccfcf ,_caffc :=range _gdbb ._cdbef {if !_gdbb .hasObject (_ccfcf ){_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_ccfcf ,_ccfcf ,_ccfcf );for _ ,_cccad :=range _caffc {for _ ,_edbeg :=range _cccad .Keys (){_acceb :=_cccad .Get (_edbeg );if _acceb ==_ccfcf {_ggf .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_cccad .Set (_edbeg ,_bb .MakeNull ());break ;};};};};};_gdbb ._bdaad .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bb .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_gdbb ._eeafa ,_gdbb ._faba )));_gdbb .copyObjects ();if _gdbb ._gfade !=nil {var _gbgba error ;_gdbb ._degca ,_gbgba =_gdbb ._gfade .Optimize (_gdbb ._degca );if _gbgba !=nil {return _gbgba ;};_agbgc :=make (map[_bb .PdfObject ]struct{},len (_gdbb ._degca ));for _ ,_becfab :=range _gdbb ._degca {_agbgc [_becfab ]=struct{}{};};_gdbb ._bfbgfd =_agbgc ;};_gdbb ._dgbge =_gdbb ._bgdge ;_gdbb ._bggcc =_c .NewWriter (writer );_defe :=_gdbb ._eeafa > 1||(_gdbb ._eeafa ==1&&_gdbb ._faba > 4);if _gdbb ._eecff !=nil {_defe =*_gdbb ._eecff ;};_bcacbe :=make (map[_bb .PdfObject ]bool );for _ ,_fgaacd :=range _gdbb ._degca {if _abgec ,_cfagd :=_fgaacd .(*_bb .PdfObjectStreams );_cfagd {_defe =true ;for _ ,_ffabb :=range _abgec .Elements (){_bcacbe [_ffabb ]=true ;if _ccdfa ,_gbfeg :=_ffabb .(*_bb .PdfIndirectObject );_gbfeg {_bcacbe [_ccdfa .PdfObject ]=true ;};};};};if _defe &&_gdbb ._eeafa ==1&&_gdbb ._faba < 5{_gdbb ._faba =5;};if _gdbb ._baae {_gdbb .writeString ("\u000a");}else {_gdbb .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gdbb ._eeafa ,_gdbb ._faba ));_gdbb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_gdbb .updateObjectNumbers ();_ggf .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gdbb ._degca ));_gdbb ._bbcg =make (map[int ]crossReference );_gdbb ._bbcg [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gdbb ._bccfc .ObjectMap !=nil {for _ggegb ,_fcfb :=range _gdbb ._bccfc .ObjectMap {if _ggegb ==0{continue ;};if _fcfb .XType ==_bb .XrefTypeObjectStream {_dadee :=crossReference {Type :2,ObjectNumber :_fcfb .OsObjNumber ,Index :_fcfb .OsObjIndex };_gdbb ._bbcg [_ggegb ]=_dadee ;};if _fcfb .XType ==_bb .XrefTypeTableEntry {_eedca :=crossReference {Type :1,ObjectNumber :_fcfb .ObjectNumber ,Offset :_fcfb .Offset };_gdbb ._bbcg [_ggegb ]=_eedca ;};};};for _ ,_faggd :=range _gdbb ._degca {if _eaccb :=_bcacbe [_faggd ];_eaccb {continue ;};_fdcfe :=int64 (0);switch _cffcc :=_faggd .(type ){case *_bb .PdfIndirectObject :_fdcfe =_cffcc .ObjectNumber ;case *_bb .PdfObjectStream :_fdcfe =_cffcc .ObjectNumber ;case *_bb .PdfObjectStreams :_fdcfe =_cffcc .ObjectNumber ;default:_ggf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_faggd );return ErrTypeCheck ;};if _gdbb ._afdbc !=nil &&_faggd !=_gdbb ._aecfg {_bbafc :=_gdbb ._afdbc .Encrypt (_faggd ,int64 (_fdcfe ),0);if _bbafc !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bbafc );return _bbafc ;};};_gdbb .writeObject (int (_fdcfe ),_faggd );};_bcada :=_gdbb ._dgbge ;var _egddc int ;for _cada :=range _gdbb ._bbcg {if _cada > _egddc {_egddc =_cada ;};};if _defe {_dcddb :=_egddc +1;_gdbb ._bbcg [_dcddb ]=crossReference {Type :1,ObjectNumber :_dcddb ,Offset :_bcada };_gcfdg :=_gfd .NewBuffer (nil );_dceddc :=_bb .MakeArray ();for _eabd :=0;_eabd <=_egddc ;{for ;_eabd <=_egddc ;_eabd ++{_caaga ,_cabdg :=_gdbb ._bbcg [_eabd ];if _cabdg &&(!_gdbb ._baae ||_gdbb ._baae &&(_caaga .Type ==1&&_caaga .Offset >=_gdbb ._cggg ||_caaga .Type ==0)){break ;};};var _effge int ;for _effge =_eabd +1;_effge <=_egddc ;_effge ++{_dgfbd ,_dgccdg :=_gdbb ._bbcg [_effge ];if _dgccdg &&(!_gdbb ._baae ||_gdbb ._baae &&(_dgfbd .Type ==1&&_dgfbd .Offset > _gdbb ._cggg )){continue ;};break ;};_dceddc .Append (_bb .MakeInteger (int64 (_eabd )),_bb .MakeInteger (int64 (_effge -_eabd )));for _bbgfg :=_eabd ;_bbgfg < _effge ;_bbgfg ++{_fabdce :=_gdbb ._bbcg [_bbgfg ];switch _fabdce .Type {case 0:_ed .Write (_gcfdg ,_ed .BigEndian ,byte (0));_ed .Write (_gcfdg ,_ed .BigEndian ,uint32 (0));_ed .Write (_gcfdg ,_ed .BigEndian ,uint16 (0xFFFF));case 1:_ed .Write (_gcfdg ,_ed .BigEndian ,byte (1));_ed .Write (_gcfdg ,_ed .BigEndian ,uint32 (_fabdce .Offset ));_ed .Write (_gcfdg ,_ed .BigEndian ,uint16 (_fabdce .Generation ));case 2:_ed .Write (_gcfdg ,_ed .BigEndian ,byte (2));_ed .Write (_gcfdg ,_ed .BigEndian ,uint32 (_fabdce .ObjectNumber ));_ed .Write (_gcfdg ,_ed .BigEndian ,uint16 (_fabdce .Index ));};};_eabd =_effge +1;};_adbee ,_cecbb :=_bb .MakeStream (_gcfdg .Bytes (),_bb .NewFlateEncoder ());if _cecbb !=nil {return _cecbb ;};_adbee .ObjectNumber =int64 (_dcddb );_adbee .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0058\u0052\u0065\u0066"));_adbee .PdfObjectDictionary .Set ("\u0057",_bb .MakeArray (_bb .MakeInteger (1),_bb .MakeInteger (4),_bb .MakeInteger (2)));_adbee .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dceddc );_adbee .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bb .MakeInteger (int64 (_dcddb +1)));_adbee .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gdbb ._bfefc );_adbee .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gdbb ._effe );if _gdbb ._baae &&_gdbb ._fbgag > 0{_adbee .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bb .MakeInteger (_gdbb ._fbgag ));};if _gdbb ._afdbc !=nil {_adbee .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gdbb ._aecfg );_adbee .Set ("\u0049\u0044",_gdbb ._gaaa );_ggf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gdbb ._gaaa );};_gdbb .writeObject (int (_adbee .ObjectNumber ),_adbee );}else {_gdbb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dbece :=0;_dbece <=_egddc ;{for ;_dbece <=_egddc ;_dbece ++{_caba ,_abdfda :=_gdbb ._bbcg [_dbece ];if _abdfda &&(!_gdbb ._baae ||_gdbb ._baae &&(_caba .Type ==1&&_caba .Offset >=_gdbb ._cggg ||_caba .Type ==0)){break ;};};var _dabga int ;for _dabga =_dbece +1;_dabga <=_egddc ;_dabga ++{_aadgb ,_becc :=_gdbb ._bbcg [_dabga ];if _becc &&(!_gdbb ._baae ||_gdbb ._baae &&(_aadgb .Type ==1&&_aadgb .Offset > _gdbb ._cggg )){continue ;};break ;};_ecageb :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dbece ,_dabga -_dbece );_gdbb .writeString (_ecageb );for _bcbc :=_dbece ;_bcbc < _dabga ;_bcbc ++{_babeg :=_gdbb ._bbcg [_bcbc ];switch _babeg .Type {case 0:_ecageb =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_gdbb .writeString (_ecageb );case 1:_ecageb =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_babeg .Offset ,0);_gdbb .writeString (_ecageb );};};_dbece =_dabga +1;};_acada :=_bb .MakeDict ();_acada .Set ("\u0049\u006e\u0066\u006f",_gdbb ._bfefc );_acada .Set ("\u0052\u006f\u006f\u0074",_gdbb ._effe );_acada .Set ("\u0053\u0069\u007a\u0065",_bb .MakeInteger (int64 (_egddc +1)));if _gdbb ._baae &&_gdbb ._fbgag > 0{_acada .Set ("\u0050\u0072\u0065\u0076",_bb .MakeInteger (_gdbb ._fbgag ));};if _gdbb ._afdbc !=nil {_acada .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gdbb ._aecfg );_acada .Set ("\u0049\u0044",_gdbb ._gaaa );_ggf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gdbb ._gaaa );};_gdbb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gdbb .writeString (_acada .WriteString ());_gdbb .writeString ("\u000a");};_bcfbc :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_bcada );_gdbb .writeString (_bcfbc );_gdbb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _gdbb ._debd ==nil {_gdbb ._debd =_gdbb ._bggcc .Flush ();};return _gdbb ._debd ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_cgde *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _cgde .RunesToCharcodeBytes ([]rune (str ));};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fdaf ,_ebec :=_be .Open (filePath );if _ebec !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebec );return nil ,_ebec ;};defer _fdaf .Close ();return NewPdfFontFromTTF (_fdaf );};

// ToPdfObject implements interface PdfModel.
func (_baea *PdfAnnotationStrikeOut )ToPdfObject ()_bb .PdfObject {_baea .PdfAnnotation .ToPdfObject ();_gdaf :=_baea ._afg ;_gaed :=_gdaf .PdfObject .(*_bb .PdfObjectDictionary );_baea .PdfAnnotationMarkup .appendToPdfDictionary (_gaed );_gaed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_gaed .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_baea .QuadPoints );return _gdaf ;};var _dadd =_a .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");func (_gdff *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _fgeac :=_gdff ._ceee ;_fgeac !=nil {return _fgeac ;};return _gdff ._eeeb ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bb .PdfObjectArray ;Domain *_bb .PdfObjectArray ;Function []PdfFunction ;Extend *_bb .PdfObjectArray ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bb .PdfObjectDictionary )(*PdfPageResources ,error ){_abea :=NewPdfPageResources ();if _gcace :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gcace !=nil {_abea .ExtGState =_gcace ;};if _bbbbg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bbbbg !=nil &&!_bb .IsNullObject (_bbbbg ){_abea .ColorSpace =_bbbbg ;};if _ggedf :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_ggedf !=nil {_abea .Pattern =_ggedf ;};if _face :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_face !=nil {_abea .Shading =_face ;};if _adbfb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_adbfb !=nil {_abea .XObject =_adbfb ;};if _bffba :=_bb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bffba !=nil {_abea .Font =_bffba ;};if _fcbad :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_fcbad !=nil {_abea .ProcSet =_fcbad ;};if _gbcda :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_gbcda !=nil {_abea .Properties =_gbcda ;};return _abea ,nil ;};

// GetNumComponents returns the number of color components.
func (_ddfd *PdfColorspaceICCBased )GetNumComponents ()int {return _ddfd .N };

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_adeg []_bb .PdfObject )([]_bb .PdfObject ,error );};func _dafa ()_cd .Time {return _ffgggc };

// B returns the value of the blue component of the color.
func (_fbgf *PdfColorDeviceRGB )B ()float64 {return float64 (_fbgf [2])};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gfgae *PdfReader )GetNamedDestinations ()(_bb .PdfObject ,error ){_fgdag :=_bb .ResolveReference (_gfgae ._gdddd .Get ("\u004e\u0061\u006de\u0073"));if _fgdag ==nil {return nil ,nil ;};if !_gfgae ._fadcg {_adbb :=_gfgae .traverseObjectData (_fgdag );if _adbb !=nil {return nil ,_adbb ;};};return _fgdag ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_gba :=NewPdfAction ();_gfa :=&PdfActionURI {};_gfa .PdfAction =_gba ;_gba .SetContext (_gfa );return _gfa ;};func _agcd (_fbege ,_ffca string )string {if _gf .Contains (_fbege ,"\u002b"){_bceec :=_gf .Split (_fbege ,"\u002b");if len (_bceec )==2{_fbege =_bceec [1];};};return _ffca +"\u002b"+_fbege ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ebef *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ebef .UnderlyingCS ==nil {return nil ,_cca .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _ebef .UnderlyingCS .ColorFromFloats (vals );};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_cccfa *PdfOutlineItem )GetContainingPdfObject ()_bb .PdfObject {return _cccfa ._becb };func (_babd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_aeaab *PdfColorspaceCalRGB )ToPdfObject ()_bb .PdfObject {_edcg :=&_bb .PdfObjectArray {};_edcg .Append (_bb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fgdd :=_bb .MakeDict ();if _aeaab .WhitePoint !=nil {_egbd :=_bb .MakeArray (_bb .MakeFloat (_aeaab .WhitePoint [0]),_bb .MakeFloat (_aeaab .WhitePoint [1]),_bb .MakeFloat (_aeaab .WhitePoint [2]));_fgdd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_egbd );}else {_ggf .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _aeaab .BlackPoint !=nil {_dbbbd :=_bb .MakeArray (_bb .MakeFloat (_aeaab .BlackPoint [0]),_bb .MakeFloat (_aeaab .BlackPoint [1]),_bb .MakeFloat (_aeaab .BlackPoint [2]));_fgdd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dbbbd );};if _aeaab .Gamma !=nil {_bbaf :=_bb .MakeArray (_bb .MakeFloat (_aeaab .Gamma [0]),_bb .MakeFloat (_aeaab .Gamma [1]),_bb .MakeFloat (_aeaab .Gamma [2]));_fgdd .Set ("\u0047\u0061\u006dm\u0061",_bbaf );};if _aeaab .Matrix !=nil {_bfeb :=_bb .MakeArray (_bb .MakeFloat (_aeaab .Matrix [0]),_bb .MakeFloat (_aeaab .Matrix [1]),_bb .MakeFloat (_aeaab .Matrix [2]),_bb .MakeFloat (_aeaab .Matrix [3]),_bb .MakeFloat (_aeaab .Matrix [4]),_bb .MakeFloat (_aeaab .Matrix [5]),_bb .MakeFloat (_aeaab .Matrix [6]),_bb .MakeFloat (_aeaab .Matrix [7]),_bb .MakeFloat (_aeaab .Matrix [8]));_fgdd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bfeb );};_edcg .Append (_fgdd );if _aeaab ._bgbd !=nil {_aeaab ._bgbd .PdfObject =_edcg ;return _aeaab ._bgbd ;};return _edcg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_egg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agee ,_dfdbd :=_bb .GetNumbersAsFloat (objects );if _dfdbd !=nil {return nil ,_dfdbd ;};return _egg .ColorFromFloats (_agee );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bb .PdfObject ;NewWindow _bb .PdfObject ;T _bb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbac *PdfBorderStyle )ToPdfObject ()_bb .PdfObject {_cecaf :=_bb .MakeDict ();if _fbac ._afda !=nil {if _ageg ,_bdba :=_fbac ._afda .(*_bb .PdfIndirectObject );_bdba {_ageg .PdfObject =_cecaf ;};};_cecaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _fbac .W !=nil {_cecaf .Set ("\u0057",_bb .MakeFloat (*_fbac .W ));};if _fbac .S !=nil {_cecaf .Set ("\u0053",_bb .MakeName (_fbac .S .GetPdfName ()));};if _fbac .D !=nil {_cecaf .Set ("\u0044",_bb .MakeArrayFromIntegers (*_fbac .D ));};if _fbac ._afda !=nil {return _fbac ._afda ;};return _cecaf ;};var _ _bb .PdfObject =&pdfSignDictionary {};func _facdg (_bfacb *_bb .PdfIndirectObject )(*PdfOutline ,error ){_adfea ,_aceaf :=_bfacb .PdfObject .(*_bb .PdfObjectDictionary );if !_aceaf {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bgdg :=NewPdfOutline ();if _bebfcf :=_adfea .Get ("\u0054\u0079\u0070\u0065");_bebfcf !=nil {_agcee ,_ddgfd :=_bebfcf .(*_bb .PdfObjectName );if _ddgfd {if *_agcee !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_agcee );};};};if _dgfeb :=_adfea .Get ("\u0043\u006f\u0075n\u0074");_dgfeb !=nil {_baab ,_ffdgf :=_bb .GetNumberAsInt64 (_dgfeb );if _ffdgf !=nil {return nil ,_ffdgf ;};_bgdg .Count =&_baab ;};return _bgdg ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_eegbf *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_eegbf ._aegg =colorspace ;};

// GetAction returns the PDF action for the annotation link.
func (_cdcg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _cdcg ._dfe !=nil {return _cdcg ._dfe ,nil ;};if _cdcg .A ==nil {return nil ,nil ;};if _cdcg ._gccg ==nil {return nil ,nil ;};_gfdb ,_acf :=_cdcg ._gccg .loadAction (_cdcg .A );if _acf !=nil {return nil ,_acf ;};_cdcg ._dfe =_gfdb ;return _cdcg ._dfe ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_abab *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_abab .GetNumComponents (){return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbgdg ,_ebeg :=_abab .TintTransform .Evaluate (vals );if _ebeg !=nil {return nil ,_ebeg ;};_fbdb ,_ebeg :=_abab .AlternateSpace .ColorFromFloats (_gbgdg );if _ebeg !=nil {return nil ,_ebeg ;};return _fbdb ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_fedec *PdfPageResources )SetColorspaceByName (keyName _bb .PdfObjectName ,cs PdfColorspace )error {_bfgd ,_abadf :=_fedec .GetColorspaces ();if _abadf !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_abadf );return _abadf ;};if _bfgd ==nil {_bfgd =NewPdfPageResourcesColorspaces ();_fedec .SetColorSpace (_bfgd );};_bfgd .Set (keyName ,cs );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gadd *PdfAnnotationPolygon )ToPdfObject ()_bb .PdfObject {_gadd .PdfAnnotation .ToPdfObject ();_dadb :=_gadd ._afg ;_efa :=_dadb .PdfObject .(*_bb .PdfObjectDictionary );_gadd .PdfAnnotationMarkup .appendToPdfDictionary (_efa );_efa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_efa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gadd .Vertices );_efa .SetIfNotNil ("\u004c\u0045",_gadd .LE );_efa .SetIfNotNil ("\u0042\u0053",_gadd .BS );_efa .SetIfNotNil ("\u0049\u0043",_gadd .IC );_efa .SetIfNotNil ("\u0042\u0045",_gadd .BE );_efa .SetIfNotNil ("\u0049\u0054",_gadd .IT );_efa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gadd .Measure );return _dadb ;};type pdfFont interface{_ca .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_bcgc *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbga ,_eeca :=_bb .GetNumbersAsFloat (objects );if _eeca !=nil {return nil ,_eeca ;};return _bcgc .ColorFromFloats (_gdbga );};func _fcfd ()string {_gdfcf :=_cef .GetLicenseKey ();if len (_afdbb )> 0&&(_gdfcf .IsLicensed ()||_acdcd ){return _afdbb ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_cbdcd (),_gdfcf .TypeToString ());};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_bbcbb *PdfPageResources )HasExtGState (keyName _bb .PdfObjectName )bool {_ ,_baag :=_bbcbb .GetFontByName (keyName );return _baag ;};func _acea (_eede *_bb .PdfObjectDictionary ,_cgfc *fontCommon ,_ebefc _cefb .TextEncoder )(*pdfFontSimple ,error ){_cbegc :=_fdee (_cgfc );_cbegc ._fgec =_ebefc ;if _ebefc ==nil {_gcgd :=_eede .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _gcgd ==nil {_gcgd =_bb .MakeInteger (0);};_cbegc .FirstChar =_gcgd ;_faagc ,_acfa :=_bb .GetIntVal (_gcgd );if !_acfa {_ggf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gcgd );return nil ,_bb .ErrTypeError ;};_gbdg :=_cefb .CharCode (_faagc );_gcgd =_eede .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _gcgd ==nil {_gcgd =_bb .MakeInteger (255);};_cbegc .LastChar =_gcgd ;_faagc ,_acfa =_bb .GetIntVal (_gcgd );if !_acfa {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_gcgd );return nil ,_bb .ErrTypeError ;};_ccaed :=_cefb .CharCode (_faagc );_cbegc ._cbccg =make (map[_cefb .CharCode ]float64 );_gcgd =_eede .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _gcgd !=nil {_cbegc .Widths =_gcgd ;_babge ,_aedf :=_bb .GetArray (_gcgd );if !_aedf {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_gcgd );return nil ,_bb .ErrTypeError ;};_bgac ,_cbdeg :=_babge .ToFloat64Array ();if _cbdeg !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_cbdeg ;};if len (_bgac )!=int (_ccaed -_gbdg +1){_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ccaed -_gbdg +1,len (_bgac ));return nil ,_bb .ErrRangeError ;};for _fgeabf ,_cfgbc :=range _bgac {_cbegc ._cbccg [_gbdg +_cefb .CharCode (_fgeabf )]=_cfgbc ;};};};_cbegc .Encoding =_bb .TraceToDirectObject (_eede .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cbegc ,nil ;};func _aadb (_bgab []byte )bool {if len (_bgab )< 4{return true ;};for _fedde :=range _bgab [:4]{_fffd :=rune (_fedde );if !_edf .Is (_edf .ASCII_Hex_Digit ,_fffd )&&!_edf .IsSpace (_fffd ){return true ;};};return false ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_bfcf =title };

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _cd .Time ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_afcfae *PdfOutlineTreeNode )GetContainingPdfObject ()_bb .PdfObject {return _afcfae .GetContext ().GetContainingPdfObject ();};

// AddFont adds a font dictionary to the Font resources.
func (_bbbfd *PdfPage )AddFont (name _bb .PdfObjectName ,font _bb .PdfObject )error {if _bbbfd .Resources ==nil {_bbbfd .Resources =NewPdfPageResources ();};if _bbbfd .Resources .Font ==nil {_bbbfd .Resources .Font =_bb .MakeDict ();};_befff ,_abdge :=_bb .TraceToDirectObject (_bbbfd .Resources .Font ).(*_bb .PdfObjectDictionary );if !_abdge {_ggf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bb .TraceToDirectObject (_bbbfd .Resources .Font ));return _cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_befff .Set (name ,font );return nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_dceb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _egbdf []float64 ;for _afdc :=0;_afdc < _dceb .GetNumComponents ();_afdc ++{_egbdf =append (_egbdf ,0.0,1.0);};return _egbdf ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dagf :=PdfDate {};_dfabe :=_dadd .FindAllStringSubmatch (dateStr ,1);if len (_dfabe )< 1{return _dagf ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_dfabe [0])!=10{return _dagf ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_dagf ._cfdag ,_ =_ag .ParseInt (_dfabe [0][1],10,32);_dagf ._dbebd ,_ =_ag .ParseInt (_dfabe [0][2],10,32);_dagf ._bdda ,_ =_ag .ParseInt (_dfabe [0][3],10,32);_dagf ._gaacb ,_ =_ag .ParseInt (_dfabe [0][4],10,32);_dagf ._bgfdfd ,_ =_ag .ParseInt (_dfabe [0][5],10,32);_dagf ._adab ,_ =_ag .ParseInt (_dfabe [0][6],10,32);if len (_dfabe [0][7])> 0{_dagf ._ebag =_dfabe [0][7][0];}else {_dagf ._ebag ='+';};if len (_dfabe [0][8])> 0{_dagf ._dfecd ,_ =_ag .ParseInt (_dfabe [0][8],10,32);}else {_dagf ._dfecd =0;};if len (_dfabe [0][9])> 0{_dagf ._faeda ,_ =_ag .ParseInt (_dfabe [0][9],10,32);}else {_dagf ._faeda =0;};return _dagf ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bb .PdfObject ;V _bb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eefb *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fagc :=vals [0];_cebe :=[]float64 {_fagc };_eeee ,_aace :=_eefb .TintTransform .Evaluate (_cebe );if _aace !=nil {_ggf .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_aace );_ggf .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eefb .TintTransform );return nil ,_aace ;};_ggf .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_eeee ,_eefb .AlternateSpace );_cddfe ,_aace :=_eefb .AlternateSpace .ColorFromFloats (_eeee );if _aace !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_aace );return nil ,_aace ;};return _cddfe ,nil ;};func (_fadb *PdfAnnotation )String ()string {_gdcb :="";_fbe ,_dbdb :=_fadb .ToPdfObject ().(*_bb .PdfIndirectObject );if _dbdb {_gdcb =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fadb ._bafb ,_fbe .PdfObject .String ());};return _gdcb ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_effe *_bb .PdfIndirectObject ;_ggda *_bb .PdfIndirectObject ;_aaeac map[_bb .PdfObject ]struct{};_degca []_bb .PdfObject ;_bfbgfd map[_bb .PdfObject ]struct{};_fead []*_bb .PdfIndirectObject ;_fefadf *PdfOutlineTreeNode ;_bdaad *_bb .PdfObjectDictionary ;_begdf []_bb .PdfObject ;_bfefc *_bb .PdfIndirectObject ;_bggcc *_c .Writer ;_dgbge int64 ;_debd error ;_afdbc *_bb .PdfCrypt ;_eefegg *_bb .PdfObjectDictionary ;_aecfg *_bb .PdfIndirectObject ;_gaaa *_bb .PdfObjectArray ;_eeafa int ;_faba int ;_eecff *bool ;_cdbef map[_bb .PdfObject ][]*_bb .PdfObjectDictionary ;_cgaca *PdfAcroForm ;_gfade Optimizer ;_bbcg map[int ]crossReference ;_bgdge int64 ;ObjNumOffset int ;_baae bool ;_bccfc _bb .XrefTable ;_fbgag int64 ;_cggg int64 ;_bgacg map[_bb .PdfObject ]int64 ;_dcadg map[_bb .PdfObject ]struct{};};

// SetContentStream sets the pattern cell's content stream.
func (_gdfbg *PdfTilingPattern )SetContentStream (content []byte ,encoder _bb .StreamEncoder )error {_adaea ,_babc :=_gdfbg ._egbda .(*_bb .PdfObjectStream );if !_babc {_ggf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdfbg ._egbda );return _bb .ErrTypeError ;};if encoder ==nil {encoder =_bb .NewRawEncoder ();};_ceafc :=_adaea .PdfObjectDictionary ;_gffe :=encoder .MakeStreamDict ();_ceafc .Merge (_gffe );_bcdae ,_deeaf :=encoder .EncodeBytes (content );if _deeaf !=nil {return _deeaf ;};_ceafc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_bcdae ))));_adaea .Stream =[]byte (_bcdae );return nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_edggfb ,_beebb :=_ca .NewStdFontByName (HelveticaName );if !_beebb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_cafga :=_adda (_edggfb );return &PdfFont {_decag :&_cafga };};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_fedgc *PdfShading )GetContainingPdfObject ()_bb .PdfObject {return _fedgc ._cggec };

// ToPdfObject returns the PDF representation of the colorspace.
func (_bacgc *PdfColorspaceDeviceRGB )ToPdfObject ()_bb .PdfObject {return _bb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_cbce *PdfReader )newPdfActionImportDataFromDict (_dae *_bb .PdfObjectDictionary )(*PdfActionImportData ,error ){_cgc ,_cacf :=_edfed (_dae .Get ("\u0046"));if _cacf !=nil {return nil ,_cacf ;};return &PdfActionImportData {F :_cgc },nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_dbcg :=NewPdfAnnotation ();_fff :=&PdfAnnotationInk {};_fff .PdfAnnotation =_dbcg ;_fff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbcg .SetContext (_fff );return _fff ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _ec .ReadSeeker )(*PdfFont ,error ){_aacbf ,_agce :=_ab .ReadAll (r );if _agce !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_agce );return nil ,_agce ;};_gcga ,_agce :=_ca .TtfParse (_gfd .NewReader (_aacbf ));if _agce !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_agce );return nil ,_agce ;};_cgab :=&pdfCIDFontType2 {fontCommon :fontCommon {_cddcc :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_cbfe :=make ([]rune ,0,len (_gcga .Chars ));for _ddfcc :=range _gcga .Chars {_cbfe =append (_cbfe ,rune (_ddfcc ));};_gg .Slice (_cbfe ,func (_gfeb ,_abge int )bool {return _cbfe [_gfeb ]< _cbfe [_abge ]});_bcfa :=1000.0/float64 (_gcga .UnitsPerEm );if len (_gcga .Widths )<=0{return nil ,_cca .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_fabd :=_bcfa *float64 (_gcga .Widths [0]);_gfdfe :=make (map[rune ]int );for _ ,_bagg :=range _cbfe {_beag :=_gcga .Chars [_bagg ];_gfac :=_bcfa *float64 (_gcga .Widths [_beag ]);_gfdfe [_bagg ]=int (_gfac );};_cgab ._abcfd =_gfdfe ;_cgab .DW =_bb .MakeInteger (int64 (_fabd ));_gde :=_abad (_cbfe ,_gfdfe ,_gcga .Chars );_cgab .W =_bb .MakeIndirectObject (_gde );_gbgfa :=_bb .MakeDict ();_gbgfa .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_gbgfa .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bb .MakeString ("\u0041\u0064\u006fb\u0065"));_gbgfa .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bb .MakeInteger (0));_cgab .CIDSystemInfo =_gbgfa ;_bcfbb :=&PdfFontDescriptor {FontName :_bb .MakeName (_gcga .PostScriptName ),Ascent :_bb .MakeFloat (_bcfa *float64 (_gcga .TypoAscender )),Descent :_bb .MakeFloat (_bcfa *float64 (_gcga .TypoDescender )),CapHeight :_bb .MakeFloat (_bcfa *float64 (_gcga .CapHeight )),FontBBox :_bb .MakeArrayFromFloats ([]float64 {_bcfa *float64 (_gcga .Xmin ),_bcfa *float64 (_gcga .Ymin ),_bcfa *float64 (_gcga .Xmax ),_bcfa *float64 (_gcga .Ymax )}),ItalicAngle :_bb .MakeFloat (float64 (_gcga .ItalicAngle )),MissingWidth :_bb .MakeFloat (_bcfa *float64 (_gcga .Widths [0]))};_facaf ,_agce :=_bb .MakeStream (_aacbf ,_bb .NewFlateEncoder ());if _agce !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_agce );return nil ,_agce ;};_facaf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bb .MakeInteger (int64 (len (_aacbf ))));_bcfbb .FontFile2 =_facaf ;if _gcga .Bold {_bcfbb .StemV =_bb .MakeInteger (120);}else {_bcfbb .StemV =_bb .MakeInteger (70);};_bgbb :=_gbcf ;if _gcga .IsFixedPitch {_bgbb |=_dcdd ;};if _gcga .ItalicAngle !=0{_bgbb |=_cbed ;};_bcfbb .Flags =_bb .MakeInteger (int64 (_bgbb ));_cgab ._babf =_gcga .PostScriptName ;_cgab ._ceee =_bcfbb ;_ffee :=pdfFontType0 {fontCommon :fontCommon {_cddcc :"\u0054\u0079\u0070e\u0030",_babf :_gcga .PostScriptName },DescendantFont :&PdfFont {_decag :_cgab },Encoding :_bb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_gddcd :_gcga .NewEncoder ()};if len (_gcga .Chars )> 0{_eccad :=make (map[_ac .CharCode ]rune ,len (_gcga .Chars ));for _fcaed ,_bagf :=range _gcga .Chars {_ccfc :=_ac .CharCode (_bagf );if _afbbb ,_eefdc :=_eccad [_ccfc ];!_eefdc ||(_eefdc &&_afbbb > _fcaed ){_eccad [_ccfc ]=_fcaed ;};};_ffee ._adcd =_ac .NewToUnicodeCMap (_eccad );};_afaf :=PdfFont {_decag :&_ffee };return &_afaf ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ToPdfObject returns a PDF object representation of the outline.
func (_bebfc *Outline )ToPdfObject ()_bb .PdfObject {return _bebfc .ToPdfOutline ().ToPdfObject ()};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cdeeb *PdfFieldButton )IsCheckbox ()bool {return _cdeeb .GetType ()==ButtonTypeCheckbox };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_bcacb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _ccac []*PdfField ;if _bcacb .AcroForm !=nil {_ccac =_bcacb .AcroForm .AllFields ();};_gcecf :=make (map[*PdfField ]struct{},len (_ccac ));for _ ,_faddc :=range _ccac {_gcecf [_faddc ]=struct{}{};};for _ ,_gcfgb :=range _bcacb .PageList {_acagd ,_cccec :=_gcfgb .GetAnnotations ();if _cccec !=nil {return false ,_cccec ;};for _ ,_aggc :=range _acagd {_dbbba ,_eefbb :=_aggc .GetContext ().(*PdfAnnotationWidget );if !_eefbb {continue ;};_fbeda :=_dbbba .Field ();if _fbeda ==nil {return true ,nil ;};if _ ,_bddg :=_gcecf [_fbeda ];!_bddg {return true ,nil ;};};};return false ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func _adbed (_beca *_bb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_gccga :=PdfShadingType5 {};_egaecf :=_beca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _egaecf ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cfbg ,_abbec :=_egaecf .(*_bb .PdfObjectInteger );if !_abbec {_ggf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egaecf );return nil ,_bb .ErrTypeError ;};_gccga .BitsPerCoordinate =_cfbg ;_egaecf =_beca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _egaecf ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cfbg ,_abbec =_egaecf .(*_bb .PdfObjectInteger );if !_abbec {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_egaecf );return nil ,_bb .ErrTypeError ;};_gccga .BitsPerComponent =_cfbg ;_egaecf =_beca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _egaecf ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_cfbg ,_abbec =_egaecf .(*_bb .PdfObjectInteger );if !_abbec {_ggf .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_egaecf );return nil ,_bb .ErrTypeError ;};_gccga .VerticesPerRow =_cfbg ;_egaecf =_beca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _egaecf ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_beaa ,_abbec :=_egaecf .(*_bb .PdfObjectArray );if !_abbec {_ggf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egaecf );return nil ,_bb .ErrTypeError ;};_gccga .Decode =_beaa ;if _ebcdd :=_beca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebcdd !=nil {_gccga .Function =[]PdfFunction {};if _bgbf ,_ccfbc :=_ebcdd .(*_bb .PdfObjectArray );_ccfbc {for _ ,_fcaaf :=range _bgbf .Elements (){_effa ,_cgda :=_cdgbg (_fcaaf );if _cgda !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgda );return nil ,_cgda ;};_gccga .Function =append (_gccga .Function ,_effa );};}else {_affa ,_adbfff :=_cdgbg (_ebcdd );if _adbfff !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adbfff );return nil ,_adbfff ;};_gccga .Function =append (_gccga .Function ,_affa );};};return &_gccga ,nil ;};func (_ggdb *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_dbgd *PdfFont )GetCharMetrics (code _cefb .CharCode )(CharMetrics ,bool ){var _accge _ca .CharMetrics ;switch _cdeae :=_dbgd ._decag .(type ){case *pdfFontSimple :if _abbf ,_edcea :=_cdeae .GetCharMetrics (code );_edcea {return _abbf ,_edcea ;};case *pdfFontType0 :if _bacf ,_eacddc :=_cdeae .GetCharMetrics (code );_eacddc {return _bacf ,_eacddc ;};case *pdfCIDFontType0 :if _adfba ,_abdga :=_cdeae .GetCharMetrics (code );_abdga {return _adfba ,_abdga ;};case *pdfCIDFontType2 :if _gbcd ,_fafd :=_cdeae .GetCharMetrics (code );_fafd {return _gbcd ,_fafd ;};default:_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_dbgd ._decag );return _accge ,false ;};if _dgaf ,_bdbb :=_dbgd .GetFontDescriptor ();_bdbb ==nil &&_dgaf !=nil {return _ca .CharMetrics {Wx :_dgaf ._dgaa },true ;};_ggf .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_dbgd );return _accge ,false ;};func _fffb (_afacf *_bb .PdfObjectDictionary )bool {for _ ,_gfbd :=range _afacf .Keys (){if _ ,_cecge :=_ggdf [_gfbd .String ()];_cecge {return true ;};};return false ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bb .PdfObject ;MK _bb .PdfObject ;A _bb .PdfObject ;AA _bb .PdfObject ;};func _gggec ()_cd .Time {return _feecge };

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ecaf *Outline )ToPdfOutline ()*PdfOutline {_eggcf :=NewPdfOutline ();var _dgbd []*PdfOutlineItem ;var _dbfg int64 ;var _bdgba *PdfOutlineItem ;for _ ,_deeb :=range _ecaf .Entries {_dcdf ,_fbeba :=_deeb .ToPdfOutlineItem ();_dcdf .Parent =&_eggcf .PdfOutlineTreeNode ;if _bdgba !=nil {_bdgba .Next =&_dcdf .PdfOutlineTreeNode ;_dcdf .Prev =&_bdgba .PdfOutlineTreeNode ;};_dgbd =append (_dgbd ,_dcdf );_dbfg +=_fbeba ;_bdgba =_dcdf ;};_aeda :=int64 (len (_dgbd ));_dbfg +=int64 (_aeda );if _aeda > 0{_eggcf .First =&_dgbd [0].PdfOutlineTreeNode ;_eggcf .Last =&_dgbd [_aeda -1].PdfOutlineTreeNode ;_eggcf .Count =&_dbfg ;};return _eggcf ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ggagd *PdfWriter )SetNamedDestinations (names _bb .PdfObject )error {if names ==nil {return nil ;};_ggf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_ggagd ._bdaad .Set ("\u004e\u0061\u006de\u0073",names );return _ggagd .addObjects (names );};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_gfff *PdfColorspaceICCBased )ToPdfObject ()_bb .PdfObject {_fcdg :=&_bb .PdfObjectArray {};_fcdg .Append (_bb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _dbg *_bb .PdfObjectStream ;if _gfff ._fgcb !=nil {_dbg =_gfff ._fgcb ;}else {_dbg =&_bb .PdfObjectStream {};};_dfda :=_bb .MakeDict ();_dfda .Set ("\u004e",_bb .MakeInteger (int64 (_gfff .N )));if _gfff .Alternate !=nil {_dfda .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_gfff .Alternate .ToPdfObject ());};if _gfff .Metadata !=nil {_dfda .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gfff .Metadata );};if _gfff .Range !=nil {var _ecde []_bb .PdfObject ;for _ ,_ggac :=range _gfff .Range {_ecde =append (_ecde ,_bb .MakeFloat (_ggac ));};_dfda .Set ("\u0052\u0061\u006eg\u0065",_bb .MakeArray (_ecde ...));};_dfda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_gfff .Data ))));_dbg .Stream =_gfff .Data ;_dbg .PdfObjectDictionary =_dfda ;_fcdg .Append (_dbg );if _gfff ._acgc !=nil {_gfff ._acgc .PdfObject =_fcdg ;return _gfff ._acgc ;};return _fcdg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbeed *PdfShadingType3 )ToPdfObject ()_bb .PdfObject {_cbeed .PdfShading .ToPdfObject ();_bbcc ,_daegb :=_cbeed .getShadingDict ();if _daegb !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cbeed .Coords !=nil {_bbcc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cbeed .Coords );};if _cbeed .Domain !=nil {_bbcc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cbeed .Domain );};if _cbeed .Function !=nil {if len (_cbeed .Function )==1{_bbcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbeed .Function [0].ToPdfObject ());}else {_bcadd :=_bb .MakeArray ();for _ ,_dgcec :=range _cbeed .Function {_bcadd .Append (_dgcec .ToPdfObject ());};_bbcc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bcadd );};};if _cbeed .Extend !=nil {_bbcc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cbeed .Extend );};return _cbeed ._cggec ;};func _cabb (_abaa *_bb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_ccdac :=&PdfFieldChoice {};_ccdac .Opt ,_ =_bb .GetArray (_abaa .Get ("\u004f\u0070\u0074"));_ccdac .TI ,_ =_bb .GetInt (_abaa .Get ("\u0054\u0049"));_ccdac .I ,_ =_bb .GetArray (_abaa .Get ("\u0049"));return _ccdac ,nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bfcg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bfcg .AlternateSpace ==nil {return nil ,_cca .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _bfcg .AlternateSpace .ColorToRGB (color );};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ggfg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fcba ,_agbda :=color .(*PdfColorDeviceGray );if !_agbda {_ggf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_fcba ),float64 (*_fcba ),float64 (*_fcba )),nil ;};var (ErrRequiredAttributeMissing =_cca .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_cfda =_cca .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_cca .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_cca .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_cea .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bb .ErrNotSupported );ErrType1CFontNotSupported =_cea .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bb .ErrNotSupported );ErrType3FontNotSupported =_cea .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bb .ErrNotSupported );ErrTTCmapNotSupported =_cea .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bb .ErrNotSupported );ErrSignNotEnoughSpace =_cea .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073"););

// AddWatermarkImage adds a watermark to the page.
func (_cbeda *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_dgfgc ,_abfda :=_cbeda .GetMediaBox ();if _abfda !=nil {return _abfda ;};_dccdg :=_dgfgc .Urx -_dgfgc .Llx ;_gcabb :=_dgfgc .Ury -_dgfgc .Lly ;_fcfac :=float64 (*ximg .Width );_ecccac :=(float64 (_dccdg )-float64 (_fcfac ))/2;if opt .FitToWidth {_fcfac =_dccdg ;_ecccac =0;};_dbee :=_gcabb ;_cafd :=float64 (0);if opt .PreserveAspectRatio {_dbee =_fcfac *float64 (*ximg .Height )/float64 (*ximg .Width );_cafd =(_gcabb -_dbee )/2;};if _cbeda .Resources ==nil {_cbeda .Resources =NewPdfPageResources ();};_ecdeg :=0;_gadb :=_bb .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ecdeg ));for _cbeda .Resources .HasXObjectByName (_gadb ){_ecdeg ++;_gadb =_bb .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ecdeg ));};_abfda =_cbeda .AddImageResource (_gadb ,ximg );if _abfda !=nil {return _abfda ;};_ecdeg =0;_agac :=_bb .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ecdeg ));for _cbeda .HasExtGState (_agac ){_ecdeg ++;_agac =_bb .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ecdeg ));};_cgbe :=_bb .MakeDict ();_cgbe .Set ("\u0042\u004d",_bb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_cgbe .Set ("\u0043\u0041",_bb .MakeFloat (opt .Alpha ));_cgbe .Set ("\u0063\u0061",_bb .MakeFloat (opt .Alpha ));_abfda =_cbeda .AddExtGState (_agac ,_cgbe );if _abfda !=nil {return _abfda ;};_fbaca :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_agac ,_fcfac ,_dbee ,_ecccac ,_cafd ,_gadb );_cbeda .AddContentStreamByString (_fbaca );return nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_aafbc :=NewPdfOutline ();_aafbc ._acgdb =&_aafbc ;return _aafbc ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aefa FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aefa .Mask ()&^fl .Mask ())};

// SetReason sets the `Reason` field of the signature.
func (_dfgde *PdfSignature )SetReason (reason string ){_dfgde .Reason =_bb .MakeString (reason )};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bb .PdfObject ;};func _ffdea (_egdd StdFontName )(pdfFontSimple ,error ){_aage ,_aebgg :=_ca .NewStdFontByName (_egdd );if !_aebgg {return pdfFontSimple {},ErrFontNotSupported ;};_degd :=_adda (_aage );return _degd ,nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// GetNumPages returns the number of pages in the document.
func (_bggca *PdfReader )GetNumPages ()(int ,error ){if _bggca ._eagc .GetCrypter ()!=nil &&!_bggca ._eagc .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_bggca ._aaea ),nil ;};

// Encoder returns the font's text encoder.
func (_abgdaf *pdfFontSimple )Encoder ()_cefb .TextEncoder {if _abgdaf ._ggff !=nil {return _abgdaf ._ggff ;};if _abgdaf ._fgec !=nil {return _abgdaf ._fgec ;};_ceeb ,_ :=_cefb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _ceeb ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_aabcg *PdfPageResources )GetExtGState (keyName _bb .PdfObjectName )(_bb .PdfObject ,bool ){if _aabcg .ExtGState ==nil {return nil ,false ;};_bbea ,_bggbg :=_bb .TraceToDirectObject (_aabcg .ExtGState ).(*_bb .PdfObjectDictionary );if !_bggbg {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aabcg .ExtGState );return nil ,false ;};if _eeag :=_bbea .Get (keyName );_eeag !=nil {return _eeag ,true ;};return nil ,false ;};

// StdFontName represents name of a standard font.
type StdFontName =_ca .StdFontName ;

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ccd :=NewPdfAction ();_bf :=&PdfActionResetForm {};_bf .PdfAction =_ccd ;_ccd .SetContext (_bf );return _bf ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;BitsPerFlag *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_eefaa *PdfPageResources )GenerateXObjectName ()_bb .PdfObjectName {_becfa :=1;for {_ecagb :=_bb .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_becfa ));if !_eefaa .HasXObjectByName (*_ecagb ){return *_ecagb ;};_becfa ++;};};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bfff *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_cca .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_bfca ,_ddcg :=_fe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afaa ,img ._afae );if _ddcg !=nil {return img ,_ddcg ;};_acgf ,_ddcg :=_fe .GrayConverter .Convert (_bfca );if _ddcg !=nil {return img ,_ddcg ;};return _bagfd (_acgf .Base ()),nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func _ebee (_bgfec _bb .PdfObject )(*fontFile ,error ){_ggf .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bgfec );_fagd :=&fontFile {};_bgfec =_bb .TraceToDirectObject (_bgfec );_dcda ,_agbdag :=_bgfec .(*_bb .PdfObjectStream );if !_agbdag {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bgfec );return nil ,_bb .ErrTypeError ;};_geff :=_dcda .PdfObjectDictionary ;_fecg ,_bcgda :=_bb .DecodeStream (_dcda );if _bcgda !=nil {return nil ,_bcgda ;};_bdgb ,_agbdag :=_bb .GetNameVal (_geff .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_agbdag {_fagd ._cecf =_bdgb ;if _bdgb =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ggf .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_dcbd ,_ :=_bb .GetIntVal (_geff .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_eedf ,_ :=_bb .GetIntVal (_geff .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _dcbd > len (_fecg ){_dcbd =len (_fecg );};if _dcbd +_eedf > len (_fecg ){_eedf =len (_fecg )-_dcbd ;};_ccbag :=_fecg [:_dcbd ];var _faeg []byte ;if _eedf > 0{_faeg =_fecg [_dcbd :_dcbd +_eedf ];};if _dcbd > 0&&_eedf > 0{_deaea :=_fagd .loadFromSegments (_ccbag ,_faeg );if _deaea !=nil {return nil ,_deaea ;};};return _fagd ,nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fdadd *PdfReader )GetIndirectObjectByNumber (number int )(_bb .PdfObject ,error ){_afbae ,_efcff :=_fdadd ._eagc .LookupByNumber (number );return _afbae ,_efcff ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_abdb :=&PdfColorspaceCalRGB {};_abdb .BlackPoint =[]float64 {0.0,0.0,0.0};_abdb .Gamma =[]float64 {1.0,1.0,1.0};_abdb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _abdb ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fgdbc *XObjectForm )SetContentStream (content []byte ,encoder _bb .StreamEncoder )error {_aeegac :=content ;if encoder ==nil {if _fgdbc .Filter !=nil {encoder =_fgdbc .Filter ;}else {encoder =_bb .NewRawEncoder ();};};_bfgeg ,_abcca :=encoder .EncodeBytes (_aeegac );if _abcca !=nil {return _abcca ;};_aeegac =_bfgeg ;_fgdbc .Stream =_aeegac ;_fgdbc .Filter =encoder ;return nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_ceebg :=PdfWriter {};_ceebg ._bfbgfd =map[_bb .PdfObject ]struct{}{};_ceebg ._degca =[]_bb .PdfObject {};_ceebg ._cdbef =map[_bb .PdfObject ][]*_bb .PdfObjectDictionary {};_ceebg ._dcadg =map[_bb .PdfObject ]struct{}{};_ceebg ._eeafa =1;_ceebg ._faba =3;_eedcc :=_bb .MakeDict ();_ccaec :=[]struct{_afaaf _bb .PdfObjectName ;_gcfdc string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcfd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_gdgga ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_daedd ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_becd ()},{"\u0054\u0069\u0074l\u0065",_dfdea ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gaaeb ()}};for _ ,_ggeec :=range _ccaec {if _ggeec ._gcfdc !=""{_eedcc .Set (_ggeec ._afaaf ,_bb .MakeString (_ggeec ._gcfdc ));};};if _gebe :=_dafa ();!_gebe .IsZero (){if _afbfb ,_abbba :=NewPdfDateFromTime (_gebe );_abbba ==nil {_eedcc .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_afbfb .ToPdfObject ());};};if _fdfee :=_gggec ();!_fdfee .IsZero (){if _gecece ,_cedd :=NewPdfDateFromTime (_fdfee );_cedd ==nil {_eedcc .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gecece .ToPdfObject ());};};_ecage :=_bb .PdfIndirectObject {};_ecage .PdfObject =_eedcc ;_ceebg ._bfefc =&_ecage ;_ceebg .addObject (&_ecage );_edbdd :=_bb .PdfIndirectObject {};_bbee :=_bb .MakeDict ();_bbee .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_edbdd .PdfObject =_bbee ;_ceebg ._effe =&_edbdd ;_ceebg .addObject (_ceebg ._effe );_gcbga :=_bb .PdfIndirectObject {};_gcfe :=_bb .MakeDict ();_gcfe .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050\u0061\u0067e\u0073"));_fgdace :=_bb .PdfObjectArray {};_gcfe .Set ("\u004b\u0069\u0064\u0073",&_fgdace );_gcfe .Set ("\u0043\u006f\u0075n\u0074",_bb .MakeInteger (0));_gcbga .PdfObject =_gcfe ;_ceebg ._ggda =&_gcbga ;_ceebg ._aaeac =map[_bb .PdfObject ]struct{}{};_ceebg .addObject (_ceebg ._ggda );_bbee .Set ("\u0050\u0061\u0067e\u0073",&_gcbga );_ceebg ._bdaad =_bbee ;_ggf .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_edbdd );return _ceebg ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bb .PdfObject ;B _bb .PdfObject ;};func _cdgbg (_fedg _bb .PdfObject )(PdfFunction ,error ){_fedg =_bb .ResolveReference (_fedg );if _ccgf ,_fecb :=_fedg .(*_bb .PdfObjectStream );_fecb {_ebbde :=_ccgf .PdfObjectDictionary ;_dbddf ,_fdbd :=_ebbde .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bb .PdfObjectInteger );if !_fdbd {_ggf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dbddf ==0{return _fdbge (_ccgf );}else if *_dbddf ==4{return _bgcgfg (_ccgf );}else {return nil ,_cca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ebab ,_adca :=_fedg .(*_bb .PdfIndirectObject );_adca {_afbf ,_beebfa :=_ebab .PdfObject .(*_bb .PdfObjectDictionary );if !_beebfa {_ggf .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_cca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_efdc ,_beebfa :=_afbf .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bb .PdfObjectInteger );if !_beebfa {_ggf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_efdc ==2{return _acbd (_ebab );}else if *_efdc ==3{return _cgef (_ebab );}else {return nil ,_cca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gceg ,_efgae :=_fedg .(*_bb .PdfObjectDictionary );_efgae {_cdcf ,_ffege :=_gceg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bb .PdfObjectInteger );if !_ffege {_ggf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_cca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cdcf ==2{return _acbd (_gceg );}else if *_cdcf ==3{return _cgef (_gceg );}else {return nil ,_cca .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ggf .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_fedg );return nil ,_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};type pdfCIDFontType2 struct{fontCommon ;_ccga *_bb .PdfIndirectObject ;_egfac _cefb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bb .PdfObject ;W _bb .PdfObject ;DW2 _bb .PdfObject ;W2 _bb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bb .PdfObject ;_cbbfd map[_cefb .CharCode ]float64 ;_ead float64 ;_abcfd map[rune ]int ;};

// SetName sets the `Name` field of the signature.
func (_fggb *PdfSignature )SetName (name string ){_fggb .Name =_bb .MakeString (name )};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_aafeb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _aafeb .Base ==nil {return nil ,_cca .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _aafeb .Base .ColorToRGB (color );};type fontFile struct{_ffdag string ;_cecf string ;_afge _cefb .SimpleEncoder ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_bbc *PdfAction )GetContext ()PdfModel {if _bbc ==nil {return nil ;};return _bbc ._fd ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_ddfee PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _ddfee ._decag .getFontDescriptor (),nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_fdfe *PdfField )SetContext (ctx PdfModel ){_fdfe ._bdce =ctx };

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_efgd *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cefb .CharCode )(_bdfec []rune ,_beae ,_aaebg int ){_eeae ,_beae ,_aaebg :=_efgd .CharcodesToStrings (charcodes );return []rune (_gf .Join (_eeae ,"")),_beae ,_aaebg ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_bafac *PdfFieldButton )SetType (btype ButtonType ){_dafd :=uint32 (0);if _bafac .Ff !=nil {_dafd =uint32 (*_bafac .Ff );};switch btype {case ButtonTypePush :_dafd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dafd |=FieldFlagRadio .Mask ();};_bafac .Ff =_bb .MakeInteger (int64 (_dafd ));};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_edbc *PdfFieldButton )IsPush ()bool {return _edbc .GetType ()==ButtonTypePush };

// GetContentStreams returns the content stream as an array of strings.
func (_acae *PdfPage )GetContentStreams ()([]string ,error ){if _acae .Contents ==nil {return nil ,nil ;};_fffa :=_bb .TraceToDirectObject (_acae .Contents );var _febed []_bb .PdfObject ;if _dgegg ,_fgac :=_fffa .(*_bb .PdfObjectArray );_fgac {_febed =_dgegg .Elements ();}else {_febed =[]_bb .PdfObject {_fffa };};var _egfd []string ;for _ ,_addf :=range _febed {_acfc ,_agbbb :=_cdad (_addf );if _agbbb !=nil {return nil ,_agbbb ;};_egfd =append (_egfd ,_acfc );};return _egfd ,nil ;};func (_cfafa Image )getBase ()_fe .ImageBase {return _fe .NewImageBase (int (_cfafa .Width ),int (_cfafa .Height ),int (_cfafa .BitsPerComponent ),_cfafa .ColorComponents ,_cfafa .Data ,_cfafa ._afaa ,_cfafa ._afae );};

// ToPdfObject implements interface PdfModel.
func (_ebbe *PdfAnnotationCaret )ToPdfObject ()_bb .PdfObject {_ebbe .PdfAnnotation .ToPdfObject ();_gagbf :=_ebbe ._afg ;_ccce :=_gagbf .PdfObject .(*_bb .PdfObjectDictionary );_ebbe .PdfAnnotationMarkup .appendToPdfDictionary (_ccce );_ccce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0043\u0061\u0072e\u0074"));_ccce .SetIfNotNil ("\u0052\u0044",_ebbe .RD );_ccce .SetIfNotNil ("\u0053\u0079",_ebbe .Sy );return _gagbf ;};func (_fbffbc *PdfWriter )writeBytes (_bgbce []byte ){if _fbffbc ._debd !=nil {return ;};_acgg ,_dffgd :=_fbffbc ._bggcc .Write (_bgbce );_fbffbc ._dgbge +=int64 (_acgg );_fbffbc ._debd =_dffgd ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ecdd *Outline )Insert (index uint ,item *OutlineItem ){_gfad :=uint (len (_ecdd .Entries ));if index > _gfad {index =_gfad ;};_ecdd .Entries =append (_ecdd .Entries [:index ],append ([]*OutlineItem {item },_ecdd .Entries [index :]...)...);};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ecba :map[_bb .PdfObject ]struct{}{},_aadc :_bgffe (),_eagc :_bb .NewParserFromString (txt )};};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_dade *Image )ColorAt (x ,y int )(_cb .Color ,error ){_agdbc :=_fe .BytesPerLine (int (_dade .Width ),int (_dade .BitsPerComponent ),_dade .ColorComponents );switch _dade .ColorComponents {case 1:return _fe .ColorAtGrayscale (x ,y ,int (_dade .BitsPerComponent ),_agdbc ,_dade .Data ,_dade ._afae );case 3:return _fe .ColorAtNRGBA (x ,y ,int (_dade .Width ),_agdbc ,int (_dade .BitsPerComponent ),_dade .Data ,_dade ._afaa ,_dade ._afae );case 4:return _fe .ColorAtCMYK (x ,y ,int (_dade .Width ),_dade .Data ,_dade ._afae );};_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dade .ColorComponents ,_dade .BitsPerComponent );return nil ,_cca .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_ecf *PdfReader )newPdfAnnotationCircleFromDict (_eaa *_bb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fbeg :=PdfAnnotationCircle {};_fbf ,_eec :=_ecf .newPdfAnnotationMarkupFromDict (_eaa );if _eec !=nil {return nil ,_eec ;};_fbeg .PdfAnnotationMarkup =_fbf ;_fbeg .BS =_eaa .Get ("\u0042\u0053");_fbeg .IC =_eaa .Get ("\u0049\u0043");_fbeg .BE =_eaa .Get ("\u0042\u0045");_fbeg .RD =_eaa .Get ("\u0052\u0044");return &_fbeg ,nil ;};func (_aafebf *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cceef []*PdfFieldSignature ;for _ ,_cgfe :=range _aafebf .AllFields (){switch _cdda :=_cgfe .GetContext ().(type ){case *PdfFieldSignature :_efddc :=_cdda ;_cceef =append (_cceef ,_efddc );};};return _cceef ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bb .PdfObject ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_ecdfg *PdfPageResources )GetPatternByName (keyName _bb .PdfObjectName )(*PdfPattern ,bool ){if _ecdfg .Pattern ==nil {return nil ,false ;};_fgaab ,_efafd :=_bb .TraceToDirectObject (_ecdfg .Pattern ).(*_bb .PdfObjectDictionary );if !_efafd {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ecdfg .Pattern );return nil ,false ;};if _cccgc :=_fgaab .Get (keyName );_cccgc !=nil {_dbdeb ,_dfadc :=_cabd (_cccgc );if _dfadc !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dfadc );return nil ,false ;};return _dbdeb ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_caeb *PdfAnnotationInk )ToPdfObject ()_bb .PdfObject {_caeb .PdfAnnotation .ToPdfObject ();_dbbf :=_caeb ._afg ;_eced :=_dbbf .PdfObject .(*_bb .PdfObjectDictionary );_caeb .PdfAnnotationMarkup .appendToPdfDictionary (_eced );_eced .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0049\u006e\u006b"));_eced .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_caeb .InkList );_eced .SetIfNotNil ("\u0042\u0053",_caeb .BS );return _dbbf ;};func (_efdcf *PdfPattern )getDict ()*_bb .PdfObjectDictionary {if _eacde ,_dfefac :=_efdcf ._egbda .(*_bb .PdfIndirectObject );_dfefac {_dgdaa ,_deecg :=_eacde .PdfObject .(*_bb .PdfObjectDictionary );if !_deecg {return nil ;};return _dgdaa ;}else if _fcagg ,_ddcf :=_efdcf ._egbda .(*_bb .PdfObjectStream );_ddcf {return _fcagg .PdfObjectDictionary ;}else {_ggf .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_efdcf ._egbda );return nil ;};};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_cgbd *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_aeega DefaultImageHandler )Read (reader _ec .Reader )(*Image ,error ){_fccf ,_ ,_defg :=_ce .Decode (reader );if _defg !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_defg );return nil ,_defg ;};return _aeega .NewImageFromGoImage (_fccf );};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_debfe *Image )SetSamples (samples []uint32 ){if _debfe .BitsPerComponent < 8{samples =_debfe .samplesAddPadding (samples );};_cedf :=_cg .ResampleUint32 (samples ,int (_debfe .BitsPerComponent ),8);_dbfcf :=make ([]byte ,len (_cedf ));for _cddbe ,_dfba :=range _cedf {_dbfcf [_cddbe ]=byte (_dfba );};_debfe .Data =_dbfcf ;};func (_aadgea *pdfFontSimple )baseFields ()*fontCommon {return &_aadgea .fontCommon };

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_eagc *_bb .PdfParser ;_dfdd _bb .PdfObject ;_egdge *_bb .PdfIndirectObject ;_debbd *_bb .PdfObjectDictionary ;_aaea []*_bb .PdfIndirectObject ;PageList []*PdfPage ;_dbgf int ;_gdddd *_bb .PdfObjectDictionary ;_bgaeg *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;_aadc *modelManager ;_fadcg bool ;_ecba map[_bb .PdfObject ]struct{};_fgeaf _ec .ReadSeeker ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_geafg *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gacbb ,_ggca :=color .(*PdfColorCalGray );if !_ggca {_ggf .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_gacbb .Val ();X :=_geafg .WhitePoint [0]*_cc .Pow (ANorm ,_geafg .Gamma );Y :=_geafg .WhitePoint [1]*_cc .Pow (ANorm ,_geafg .Gamma );Z :=_geafg .WhitePoint [2]*_cc .Pow (ANorm ,_geafg .Gamma );_efad :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bfdg :=-0.969256*X +1.875992*Y +0.041556*Z ;_eacb :=0.055648*X +-0.204043*Y +1.057311*Z ;_efad =_cc .Min (_cc .Max (_efad ,0),1.0);_bfdg =_cc .Min (_cc .Max (_bfdg ,0),1.0);_eacb =_cc .Min (_cc .Max (_eacb ,0),1.0);return NewPdfColorDeviceRGB (_efad ,_bfdg ,_eacb ),nil ;};func (_ege *PdfReader )newPdfActionFromIndirectObject (_cac *_bb .PdfIndirectObject )(*PdfAction ,error ){_bfb ,_cgf :=_cac .PdfObject .(*_bb .PdfObjectDictionary );if !_cgf {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_ege ._aadc .GetModelFromPrimitive (_bfb );model !=nil {_dgd ,_dbe :=model .(*PdfAction );if !_dbe {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _dgd ,nil ;};_eeg :=&PdfAction {};_eeg ._bd =_cac ;_ege ._aadc .Register (_bfb ,_eeg );if _eaba :=_bfb .Get ("\u0054\u0079\u0070\u0065");_eaba !=nil {_afc ,_ebd :=_eaba .(*_bb .PdfObjectName );if !_ebd {_ggf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eaba );}else {if *_afc !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ggf .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_afc );};_eeg .Type =_afc ;};};if _fec :=_bfb .Get ("\u004e\u0065\u0078\u0074");_fec !=nil {_eeg .Next =_fec ;};if _eaf :=_bfb .Get ("\u0053");_eaf !=nil {_eeg .S =_eaf ;};_dbb ,_caf :=_eeg .S .(*_bb .PdfObjectName );if !_caf {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eeg .S );return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eeg .S );};_fbd :=PdfActionType (_dbb .String ());switch _fbd {case ActionTypeGoTo :_ecc ,_ebg :=_ege .newPdfActionGotoFromDict (_bfb );if _ebg !=nil {return nil ,_ebg ;};_ecc .PdfAction =_eeg ;_eeg ._fd =_ecc ;return _eeg ,nil ;case ActionTypeGoToR :_gbdd ,_dba :=_ege .newPdfActionGotoRFromDict (_bfb );if _dba !=nil {return nil ,_dba ;};_gbdd .PdfAction =_eeg ;_eeg ._fd =_gbdd ;return _eeg ,nil ;case ActionTypeGoToE :_aba ,_bbbf :=_ege .newPdfActionGotoEFromDict (_bfb );if _bbbf !=nil {return nil ,_bbbf ;};_aba .PdfAction =_eeg ;_eeg ._fd =_aba ;return _eeg ,nil ;case ActionTypeLaunch :_eeb ,_cag :=_ege .newPdfActionLaunchFromDict (_bfb );if _cag !=nil {return nil ,_cag ;};_eeb .PdfAction =_eeg ;_eeg ._fd =_eeb ;return _eeg ,nil ;case ActionTypeThread :_bcg ,_gac :=_ege .newPdfActionThreadFromDict (_bfb );if _gac !=nil {return nil ,_gac ;};_bcg .PdfAction =_eeg ;_eeg ._fd =_bcg ;return _eeg ,nil ;case ActionTypeURI :_gdb ,_edfa :=_ege .newPdfActionURIFromDict (_bfb );if _edfa !=nil {return nil ,_edfa ;};_gdb .PdfAction =_eeg ;_eeg ._fd =_gdb ;return _eeg ,nil ;case ActionTypeSound :_dgc ,_ddg :=_ege .newPdfActionSoundFromDict (_bfb );if _ddg !=nil {return nil ,_ddg ;};_dgc .PdfAction =_eeg ;_eeg ._fd =_dgc ;return _eeg ,nil ;case ActionTypeMovie :_baf ,_ceae :=_ege .newPdfActionMovieFromDict (_bfb );if _ceae !=nil {return nil ,_ceae ;};_baf .PdfAction =_eeg ;_eeg ._fd =_baf ;return _eeg ,nil ;case ActionTypeHide :_ccb ,_acg :=_ege .newPdfActionHideFromDict (_bfb );if _acg !=nil {return nil ,_acg ;};_ccb .PdfAction =_eeg ;_eeg ._fd =_ccb ;return _eeg ,nil ;case ActionTypeNamed :_cadb ,_ffd :=_ege .newPdfActionNamedFromDict (_bfb );if _ffd !=nil {return nil ,_ffd ;};_cadb .PdfAction =_eeg ;_eeg ._fd =_cadb ;return _eeg ,nil ;case ActionTypeSubmitForm :_aac ,_gcf :=_ege .newPdfActionSubmitFormFromDict (_bfb );if _gcf !=nil {return nil ,_gcf ;};_aac .PdfAction =_eeg ;_eeg ._fd =_aac ;return _eeg ,nil ;case ActionTypeResetForm :_dbdc ,_fcf :=_ege .newPdfActionResetFormFromDict (_bfb );if _fcf !=nil {return nil ,_fcf ;};_dbdc .PdfAction =_eeg ;_eeg ._fd =_dbdc ;return _eeg ,nil ;case ActionTypeImportData :_acge ,_dbba :=_ege .newPdfActionImportDataFromDict (_bfb );if _dbba !=nil {return nil ,_dbba ;};_acge .PdfAction =_eeg ;_eeg ._fd =_acge ;return _eeg ,nil ;case ActionTypeSetOCGState :_gcc ,_aga :=_ege .newPdfActionSetOCGStateFromDict (_bfb );if _aga !=nil {return nil ,_aga ;};_gcc .PdfAction =_eeg ;_eeg ._fd =_gcc ;return _eeg ,nil ;case ActionTypeRendition :_aff ,_ddf :=_ege .newPdfActionRenditionFromDict (_bfb );if _ddf !=nil {return nil ,_ddf ;};_aff .PdfAction =_eeg ;_eeg ._fd =_aff ;return _eeg ,nil ;case ActionTypeTrans :_fdgbg ,_ccc :=_ege .newPdfActionTransFromDict (_bfb );if _ccc !=nil {return nil ,_ccc ;};_fdgbg .PdfAction =_eeg ;_eeg ._fd =_fdgbg ;return _eeg ,nil ;case ActionTypeGoTo3DView :_abdg ,_cadbg :=_ege .newPdfActionGoTo3DViewFromDict (_bfb );if _cadbg !=nil {return nil ,_cadbg ;};_abdg .PdfAction =_eeg ;_eeg ._fd =_abdg ;return _eeg ,nil ;case ActionTypeJavaScript :_edfe ,_ebga :=_ege .newPdfActionJavaScriptFromDict (_bfb );if _ebga !=nil {return nil ,_ebga ;};_edfe .PdfAction =_eeg ;_eeg ._fd =_edfe ;return _eeg ,nil ;};_ggf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fbd );return nil ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ecfb *PdfAnnotation )GetContainingPdfObject ()_bb .PdfObject {return _ecfb ._afg };

// HasXObjectByName checks if has XObject resource by name.
func (_bafbe *PdfPage )HasXObjectByName (name _bb .PdfObjectName )bool {_gbacf ,_afbdga :=_bafbe .Resources .XObject .(*_bb .PdfObjectDictionary );if !_afbdga {return false ;};if _gfed :=_gbacf .Get (name );_gfed !=nil {return true ;};return false ;};func _bebaf (_efgdg *XObjectImage )error {if _efgdg .SMask ==nil {return nil ;};_bgecc ,_gecad :=_efgdg .SMask .(*_bb .PdfObjectStream );if !_gecad {_ggf .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _bb .ErrTypeError ;};_fdcgc :=_bgecc .PdfObjectDictionary ;_aaeaf :=_fdcgc .Get ("\u004d\u0061\u0074t\u0065");if _aaeaf ==nil {return nil ;};_dbcfb ,_dbac :=_dfabg (_aaeaf .(*_bb .PdfObjectArray ));if _dbac !=nil {return _dbac ;};_cfefd :=_bb .MakeArrayFromFloats ([]float64 {_dbcfb });_fdcgc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cfefd );return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_ebeb *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbgfa ,_agaa :=color .(*PdfColorPattern );if !_agaa {_ggf .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _fbgfa .Color ==nil {return color ,nil ;};if _ebeb .UnderlyingCS ==nil {return nil ,_cca .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _ebeb .UnderlyingCS .ColorToRGB (_fbgfa .Color );};func (_gda *PdfReader )newPdfAnnotationUnderlineFromDict (_bggc *_bb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_geecc :=PdfAnnotationUnderline {};_ccfa ,_cge :=_gda .newPdfAnnotationMarkupFromDict (_bggc );if _cge !=nil {return nil ,_cge ;};_geecc .PdfAnnotationMarkup =_ccfa ;_geecc .QuadPoints =_bggc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_geecc ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_abee *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdcgb :=vals [0];if _cdcgb < 0.0||_cdcgb > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffab :=NewPdfColorCalGray (_cdcgb );return _ffab ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bb .StreamEncoder )(*XObjectImage ,error ){_eedcd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_eedcd ,img ,cs ,encoder );};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ddab *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gdcbb :=PdfColorDeviceGray (grayVal );return &_gdcbb ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_ddgag =subject };

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cdab *PdfFieldChoice )ToPdfObject ()_bb .PdfObject {_cdab .PdfField .ToPdfObject ();_eeba :=_cdab ._fdab ;_gbcc :=_eeba .PdfObject .(*_bb .PdfObjectDictionary );_gbcc .Set ("\u0046\u0054",_bb .MakeName ("\u0043\u0068"));if _cdab .Opt !=nil {_gbcc .Set ("\u004f\u0070\u0074",_cdab .Opt );};if _cdab .TI !=nil {_gbcc .Set ("\u0054\u0049",_cdab .TI );};if _cdab .I !=nil {_gbcc .Set ("\u0049",_cdab .I );};return _eeba ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_dfdc *PdfColorspaceDeviceN )GetNumComponents ()int {return _dfdc .ColorantNames .Len ()};func _bgcgfg (_aeedb *_bb .PdfObjectStream )(*PdfFunctionType4 ,error ){_bebfa :=&PdfFunctionType4 {};_bebfa ._ccafg =_aeedb ;_deagb :=_aeedb .PdfObjectDictionary ;_fccag ,_facdd :=_bb .TraceToDirectObject (_deagb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );if !_facdd {_ggf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fccag .Len ()%2!=0{_ggf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gcbe ,_ggced :=_fccag .ToFloat64Array ();if _ggced !=nil {return nil ,_ggced ;};_bebfa .Domain =_gcbe ;_fccag ,_facdd =_bb .TraceToDirectObject (_deagb .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if _facdd {if _fccag .Len ()< 0||_fccag .Len ()%2!=0{return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ffff ,_aaff :=_fccag .ToFloat64Array ();if _aaff !=nil {return nil ,_aaff ;};_bebfa .Range =_ffff ;};_abac ,_ggced :=_bb .DecodeStream (_aeedb );if _ggced !=nil {return nil ,_ggced ;};_bebfa ._cebfb =_abac ;_ffdfc :=_bef .NewPSParser ([]byte (_abac ));_efagc ,_ggced :=_ffdfc .Parse ();if _ggced !=nil {return nil ,_ggced ;};_bebfa .Program =_efagc ;return _bebfa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ace *PdfAnnotationUnderline )ToPdfObject ()_bb .PdfObject {_ace .PdfAnnotation .ToPdfObject ();_ggeea :=_ace ._afg ;_gbbe :=_ggeea .PdfObject .(*_bb .PdfObjectDictionary );_ace .PdfAnnotationMarkup .appendToPdfDictionary (_gbbe );_gbbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_gbbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ace .QuadPoints );return _ggeea ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bdgd *PdfAnnotation )ToPdfObject ()_bb .PdfObject {_gagb :=_bdgd ._afg ;_geecd :=_gagb .PdfObject .(*_bb .PdfObjectDictionary );_geecd .Clear ();_geecd .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0041\u006e\u006eo\u0074"));_geecd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bdgd .Rect );_geecd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bdgd .Contents );_geecd .SetIfNotNil ("\u0050",_bdgd .P );_geecd .SetIfNotNil ("\u004e\u004d",_bdgd .NM );_geecd .SetIfNotNil ("\u004d",_bdgd .M );_geecd .SetIfNotNil ("\u0046",_bdgd .F );_geecd .SetIfNotNil ("\u0041\u0050",_bdgd .AP );_geecd .SetIfNotNil ("\u0041\u0053",_bdgd .AS );_geecd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bdgd .Border );_geecd .SetIfNotNil ("\u0043",_bdgd .C );_geecd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bdgd .StructParent );_geecd .SetIfNotNil ("\u004f\u0043",_bdgd .OC );return _gagb ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gacf *PdfOutline )GetContainingPdfObject ()_bb .PdfObject {return _gacf ._agfdb };

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fccc :=NewPdfAnnotation ();_dcg :=&PdfAnnotationFreeText {};_dcg .PdfAnnotation =_fccc ;_dcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fccc .SetContext (_dcg );return _dcg ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bb .PdfObject ;};func (_adeee *PdfPage )setContainer (_fbggf *_bb .PdfIndirectObject ){_fbggf .PdfObject =_adeee ._bfeaf ;_adeee ._bbacd =_fbggf ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bb .PdfObjectBool ;_egfdb PdfModel ;_cggec _bb .PdfObject ;};var _ pdfFont =(*pdfFontType0 )(nil );

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _ec .ReadSeeker )(*PdfReader ,error ){_baabc :=&PdfReader {_fgeaf :rs ,_ecba :map[_bb .PdfObject ]struct{}{},_aadc :_bgffe (),_fadcg :true };_ggffd ,_fdbag :=_bb .NewParser (rs );if _fdbag !=nil {return nil ,_fdbag ;};_baabc ._eagc =_ggffd ;_dbab ,_fdbag :=_baabc .IsEncrypted ();if _fdbag !=nil {return nil ,_fdbag ;};if !_dbab {_fdbag =_baabc .loadStructure ();if _fdbag !=nil {return nil ,_fdbag ;};};return _baabc ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_ccgag *Image )GetSamples ()[]uint32 {_dcgeg :=_cg .ResampleBytes (_ccgag .Data ,int (_ccgag .BitsPerComponent ));if _ccgag .BitsPerComponent < 8{_dcgeg =_ccgag .samplesTrimPadding (_dcgeg );};_feebg :=int (_ccgag .Width )*int (_ccgag .Height )*_ccgag .ColorComponents ;if len (_dcgeg )< _feebg {_ggf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dcgeg ),_feebg );return _dcgeg ;}else if len (_dcgeg )> _feebg {_ggf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dcgeg ),_feebg );_dcgeg =_dcgeg [:_feebg ];};return _dcgeg ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_bfbg :=NewPdfAnnotation ();_gfc :=&PdfAnnotationSquare {};_gfc .PdfAnnotation =_bfbg ;_gfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfbg .SetContext (_gfc );return _gfc ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bb .PdfObject ;Mac _bb .PdfObject ;Unix _bb .PdfObject ;NewWindow _bb .PdfObject ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_ggeeaf *PdfPageResources )GetXObjectImageByName (keyName _bb .PdfObjectName )(*XObjectImage ,error ){_caadg ,_abdfd :=_ggeeaf .GetXObjectByName (keyName );if _caadg ==nil {return nil ,nil ;};if _abdfd !=XObjectTypeImage {return nil ,_cca .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_agdbg ,_bbfc :=NewXObjectImageFromStream (_caadg );if _bbfc !=nil {return nil ,_bbfc ;};return _agdbg ,nil ;};func _dfabg (_eddff *_bb .PdfObjectArray )(float64 ,error ){_bdgfae ,_bgacb :=_eddff .ToFloat64Array ();if _bgacb !=nil {_ggf .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eddff ,_bgacb );};switch len (_bdgfae ){case 1:return _bdgfae [0],nil ;case 3:_dccgg :=PdfColorspaceDeviceRGB {};_gfcfb ,_dccdgd :=_dccgg .ColorFromFloats (_bdgfae );if _dccdgd !=nil {return 0.0,_dccdgd ;};return _gfcfb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_cedaf :=PdfColorspaceDeviceCMYK {};_gbbcd ,_abafe :=_cedaf .ColorFromFloats (_bdgfae );if _abafe !=nil {return 0.0,_abafe ;};_afcadc ,_abafe :=_cedaf .ColorToRGB (_gbbcd .(*PdfColorDeviceCMYK ));if _abafe !=nil {return 0.0,_abafe ;};return _afcadc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_bgacb =_cca .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ggf .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eddff ,_bgacb );return 0.0,_bgacb ;};func (_debeg *PdfReader )loadStructure ()error {if _debeg ._eagc .GetCrypter ()!=nil &&!_debeg ._eagc .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_fgddb :=_debeg ._eagc .GetTrailer ();if _fgddb ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cbeaf ,_dgdcdb :=_fgddb .Get ("\u0052\u006f\u006f\u0074").(*_bb .PdfObjectReference );if !_dgdcdb {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_fgddb );};_eagde ,_efbb :=_debeg ._eagc .LookupByReference (*_cbeaf );if _efbb !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_efbb );return _efbb ;};_gegge ,_dgdcdb :=_eagde .(*_bb .PdfIndirectObject );if !_dgdcdb {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_eagde ,*_fgddb );return _cca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cgfgf ,_dgdcdb :=(*_gegge ).PdfObject .(*_bb .PdfObjectDictionary );if !_dgdcdb {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_gegge .PdfObject );return _cca .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ggf .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cgfgf );_gaeef ,_dgdcdb :=_cgfgf .Get ("\u0050\u0061\u0067e\u0073").(*_bb .PdfObjectReference );if !_dgdcdb {return _cca .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_aecgc ,_efbb :=_debeg ._eagc .LookupByReference (*_gaeef );if _efbb !=nil {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _efbb ;};_deagc ,_dgdcdb :=_aecgc .(*_bb .PdfIndirectObject );if !_dgdcdb {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_ggf .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_deagc );return _cca .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fcbba ,_dgdcdb :=_deagc .PdfObject .(*_bb .PdfObjectDictionary );if !_dgdcdb {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_deagc );return _cca .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cceb ,_dgdcdb :=_bb .GetInt (_fcbba .Get ("\u0043\u006f\u0075n\u0074"));if !_dgdcdb {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _cca .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dgdcdb =_bb .GetName (_fcbba .Get ("\u0054\u0079\u0070\u0065"));!_dgdcdb {_ggf .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_fcbba .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050\u0061\u0067e\u0073"));};_debeg ._dfdd =_cbeaf ;_debeg ._gdddd =_cgfgf ;_debeg ._debbd =_fcbba ;_debeg ._egdge =_deagc ;_debeg ._dbgf =int (*_cceb );_debeg ._aaea =[]*_bb .PdfIndirectObject {};_gacde :=map[_bb .PdfObject ]struct{}{};_efbb =_debeg .buildPageList (_deagc ,nil ,_gacde );if _efbb !=nil {return _efbb ;};_ggf .Log .Trace ("\u002d\u002d\u002d");_ggf .Log .Trace ("\u0054\u004f\u0043");_ggf .Log .Trace ("\u0050\u0061\u0067e\u0073");_ggf .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_debeg ._aaea ),_debeg ._aaea );_debeg ._bgaeg ,_efbb =_debeg .loadOutlines ();if _efbb !=nil {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_efbb );return _efbb ;};_debeg .AcroForm ,_efbb =_debeg .loadForms ();if _efbb !=nil {return _efbb ;};return nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;BitsPerFlag *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_faedf *PdfFont )ToUnicode ()string {if _faedf .baseFields ()._adcd ==nil {return "";};return _faedf .baseFields ()._adcd .Name ();};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dgdc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acbe :=vals [0];if _acbe < 0.0||_acbe > 100.0{_ggf .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_acbe );return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgefc :=vals [1];_bece :=float64 (-100);_bgdd :=float64 (100);if len (_dgdc .Range )> 1{_bece =_dgdc .Range [0];_bgdd =_dgdc .Range [1];};if _fgefc < _bece ||_fgefc > _bgdd {_ggf .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fgefc ,_bece ,_bgdd );return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbcee :=vals [2];_cdbc :=float64 (-100);_dfedd :=float64 (100);if len (_dgdc .Range )> 3{_cdbc =_dgdc .Range [2];_dfedd =_dgdc .Range [3];};if _fbcee < _cdbc ||_fbcee > _dfedd {_ggf .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fbcee ,_cdbc ,_dfedd );return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adaa :=NewPdfColorLab (_acbe ,_fgefc ,_fbcee );return _adaa ,nil ;};func (_dfbe *PdfAppender )replaceObject (_bfae ,_aefb _bb .PdfObject ){switch _dbbad :=_bfae .(type ){case *_bb .PdfIndirectObject :_dfbe ._bbed [_aefb ]=_dbbad .ObjectNumber ;case *_bb .PdfObjectStream :_dfbe ._bbed [_aefb ]=_dbbad .ObjectNumber ;};};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ababg :=&PdfFilespec {};_ababg ._dgdeg =_bb .MakeIndirectObject (_bb .MakeDict ());return _ababg ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_afb :=&PdfAnnotation {};_afb ._afg =_bb .MakeIndirectObject (_bb .MakeDict ());return _afb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bccd *PdfShadingType5 )ToPdfObject ()_bb .PdfObject {_bccd .PdfShading .ToPdfObject ();_fbefe ,_afgfd :=_bccd .getShadingDict ();if _afgfd !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bccd .BitsPerCoordinate !=nil {_fbefe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bccd .BitsPerCoordinate );};if _bccd .BitsPerComponent !=nil {_fbefe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bccd .BitsPerComponent );};if _bccd .VerticesPerRow !=nil {_fbefe .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_bccd .VerticesPerRow );};if _bccd .Decode !=nil {_fbefe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bccd .Decode );};if _bccd .Function !=nil {if len (_bccd .Function )==1{_fbefe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bccd .Function [0].ToPdfObject ());}else {_cadeg :=_bb .MakeArray ();for _ ,_gddce :=range _bccd .Function {_cadeg .Append (_gddce .ToPdfObject ());};_fbefe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadeg );};};return _bccd ._cggec ;};

// ToPdfObject implements interface PdfModel.
func (_bcdb *PdfAnnotationHighlight )ToPdfObject ()_bb .PdfObject {_bcdb .PdfAnnotation .ToPdfObject ();_baff :=_bcdb ._afg ;_cded :=_baff .PdfObject .(*_bb .PdfObjectDictionary );_bcdb .PdfAnnotationMarkup .appendToPdfDictionary (_cded );_cded .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_cded .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bcdb .QuadPoints );return _baff ;};

// ToPdfObject implements interface PdfModel.
func (_fcfg *PdfAnnotationText )ToPdfObject ()_bb .PdfObject {_fcfg .PdfAnnotation .ToPdfObject ();_dgce :=_fcfg ._afg ;_gadg :=_dgce .PdfObject .(*_bb .PdfObjectDictionary );if _fcfg .PdfAnnotationMarkup !=nil {_fcfg .PdfAnnotationMarkup .appendToPdfDictionary (_gadg );};_gadg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0054\u0065\u0078\u0074"));_gadg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fcfg .Open );_gadg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcfg .Name );_gadg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fcfg .State );_gadg .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fcfg .StateModel );return _dgce ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_cfbc *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_beedcc :=RC4_128bit ;if options !=nil {_beedcc =options .Algorithm ;};_egaaf :=_ad .PermOwner ;if options !=nil {_egaaf =options .Permissions ;};var _fcbca _ff .Filter ;switch _beedcc {case RC4_128bit :_fcbca =_ff .NewFilterV2 (16);case AES_128bit :_fcbca =_ff .NewFilterAESV2 ();case AES_256bit :_fcbca =_ff .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_gbgead ,_agbe ,_dfeddb :=_bb .PdfCryptNewEncrypt (_fcbca ,userPass ,ownerPass ,_egaaf );if _dfeddb !=nil {return _dfeddb ;};_cfbc ._afdbc =_gbgead ;if _agbe .Major !=0{_cfbc .SetVersion (_agbe .Major ,_agbe .Minor );};_cfbc ._eefegg =_agbe .Encrypt ;_cfbc ._gaaa =_bb .MakeArray (_bb .MakeHexString (_agbe .ID0 ),_bb .MakeHexString (_agbe .ID1 ));_edadc :=_bb .MakeIndirectObject (_agbe .Encrypt );_cfbc ._aecfg =_edadc ;_cfbc .addObject (_edadc );return nil ;};func _bagfd (_agefe *_fe .ImageBase )(_dffd Image ){_dffd .Width =int64 (_agefe .Width );_dffd .Height =int64 (_agefe .Height );_dffd .BitsPerComponent =int64 (_agefe .BitsPerComponent );_dffd .ColorComponents =_agefe .ColorComponents ;_dffd .Data =_agefe .Data ;_dffd ._afae =_agefe .Decode ;_dffd ._afaa =_agefe .Alpha ;return _dffd ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;var _ pdfFont =(*pdfCIDFontType2 )(nil );

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fgff *PdfField )Flags ()FieldFlag {var _dfeee FieldFlag ;_fdcb ,_afde :=_fgff .inherit (func (_bedc *PdfField )bool {if _bedc .Ff !=nil {_dfeee =FieldFlag (*_fgff .Ff );return true ;};return false ;});if _afde !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_afde );};if !_fdcb {_ggf .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _dfeee ;};func (_fefdg fontCommon )fontFlags ()int {if _fefdg ._ceee ==nil {return 0;};return _fefdg ._ceee ._dafb ;};

// ToPdfObject implements interface PdfModel.
func (_efe *PdfActionGoTo )ToPdfObject ()_bb .PdfObject {_efe .PdfAction .ToPdfObject ();_fdgb :=_efe ._bd ;_eg :=_fdgb .PdfObject .(*_bb .PdfObjectDictionary );_eg .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoTo )));_eg .SetIfNotNil ("\u0044",_efe .D );return _fdgb ;};func _faafc (_fgae []byte )[]byte {const _ccega =52845;const _adbf =22719;_gcaag :=55665;for _ ,_cfceb :=range _fgae [:4]{_gcaag =(int (_cfceb )+_gcaag )*_ccega +_adbf ;};_efbe :=make ([]byte ,len (_fgae )-4);for _ebdbf ,_gccgb :=range _fgae [4:]{_efbe [_ebdbf ]=byte (int (_gccgb )^_gcaag >>8);_gcaag =(int (_gccgb )+_gcaag )*_ccega +_adbf ;};return _efbe ;};func (_dadf *PdfReader )newPdfAnnotationMovieFromDict (_gdag *_bb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_gdbfc :=PdfAnnotationMovie {};_gdbfc .T =_gdag .Get ("\u0054");_gdbfc .Movie =_gdag .Get ("\u004d\u006f\u0076i\u0065");_gdbfc .A =_gdag .Get ("\u0041");return &_gdbfc ,nil ;};func _aaeaa (_cagbg *_bb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_adfaf :=PdfShadingType4 {};_egeb :=_cagbg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _egeb ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cdbcf ,_eged :=_egeb .(*_bb .PdfObjectInteger );if !_eged {_ggf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egeb );return nil ,_bb .ErrTypeError ;};_adfaf .BitsPerCoordinate =_cdbcf ;_egeb =_cagbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _egeb ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cdbcf ,_eged =_egeb .(*_bb .PdfObjectInteger );if !_eged {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_egeb );return nil ,_bb .ErrTypeError ;};_adfaf .BitsPerComponent =_cdbcf ;_egeb =_cagbg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _egeb ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdbcf ,_eged =_egeb .(*_bb .PdfObjectInteger );if !_eged {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_egeb );return nil ,_bb .ErrTypeError ;};_adfaf .BitsPerComponent =_cdbcf ;_egeb =_cagbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _egeb ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cebbg ,_eged :=_egeb .(*_bb .PdfObjectArray );if !_eged {_ggf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egeb );return nil ,_bb .ErrTypeError ;};_adfaf .Decode =_cebbg ;_egeb =_cagbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _egeb ==nil {_ggf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_adfaf .Function =[]PdfFunction {};if _fcdegf ,_ffgbg :=_egeb .(*_bb .PdfObjectArray );_ffgbg {for _ ,_caded :=range _fcdegf .Elements (){_cfadg ,_bead :=_cdgbg (_caded );if _bead !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bead );return nil ,_bead ;};_adfaf .Function =append (_adfaf .Function ,_cfadg );};}else {_egde ,_agcge :=_cdgbg (_egeb );if _agcge !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agcge );return nil ,_agcge ;};_adfaf .Function =append (_adfaf .Function ,_egde );};return &_adfaf ,nil ;};func _cgeg (_bedcd *_bb .PdfObjectDictionary ,_gcbf *fontCommon )(*pdfCIDFontType2 ,error ){if _gcbf ._cddcc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ggf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gcbf );return nil ,_bb .ErrRangeError ;};_baebb :=_gdagg (_gcbf );_fadcd ,_bgff :=_bb .GetDict (_bedcd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bgff {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcbf );return nil ,ErrRequiredAttributeMissing ;};_baebb .CIDSystemInfo =_fadcd ;_baebb .DW =_bedcd .Get ("\u0044\u0057");_baebb .W =_bedcd .Get ("\u0057");_baebb .DW2 =_bedcd .Get ("\u0044\u0057\u0032");_baebb .W2 =_bedcd .Get ("\u0057\u0032");_baebb .CIDToGIDMap =_bedcd .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_baebb ._ead =1000.0;if _ddd ,_fgfa :=_bb .GetNumberAsFloat (_baebb .DW );_fgfa ==nil {_baebb ._ead =_ddd ;};_bgaa ,_bedgf :=_gagab (_baebb .W );if _bedgf !=nil {return nil ,_bedgf ;};if _bgaa ==nil {_bgaa =map[_cefb .CharCode ]float64 {};};_baebb ._cbbfd =_bgaa ;return _baebb ,nil ;};

// Initialize initializes the PdfSignature.
func (_ceafd *PdfSignature )Initialize ()error {if _ceafd .Handler ==nil {return _cca .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _ceafd .Handler .InitSignature (_ceafd );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gdbee *PdfPageResources )SetXObjectImageByName (keyName _bb .PdfObjectName ,ximg *XObjectImage )error {_daec :=ximg .ToPdfObject ().(*_bb .PdfObjectStream );_feecg :=_gdbee .SetXObjectByName (keyName ,_daec );return _feecg ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_adec *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _adec ._cagc ==nil {_adec ._cagc =_bef .NewPSExecutor (_adec .Program );};var _geddf []_bef .PSObject ;for _ ,_cgfge :=range xVec {_geddf =append (_geddf ,_bef .MakeReal (_cgfge ));};_ceed ,_ddfgc :=_adec ._cagc .Execute (_geddf );if _ddfgc !=nil {return nil ,_ddfgc ;};_bfag ,_ddfgc :=_bef .PSObjectArrayToFloat64Array (_ceed );if _ddfgc !=nil {return nil ,_ddfgc ;};return _bfag ,nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_cdce *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_dabe :=&PdfPageResources {};_dabe ._deffg =_bb .MakeDict ();return _dabe ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bb .PdfObjectName ;Colorants _bb .PdfObject ;Process _bb .PdfObject ;MixingHints _bb .PdfObject ;_ffbb *_bb .PdfIndirectObject ;};func (_caeg *PdfWriter )updateObjectNumbers (){_fceb :=_caeg .ObjNumOffset ;_gcagg :=0;for _ ,_becda :=range _caeg ._degca {_cccfc :=int64 (_gcagg +1+_fceb );_ggead :=true ;if _caeg ._baae {if _bcbfc ,_gfbe :=_caeg ._bgacg [_becda ];_gfbe {_cccfc =_bcbfc ;_ggead =false ;};};switch _effec :=_becda .(type ){case *_bb .PdfIndirectObject :_effec .ObjectNumber =_cccfc ;_effec .GenerationNumber =0;case *_bb .PdfObjectStream :_effec .ObjectNumber =_cccfc ;_effec .GenerationNumber =0;case *_bb .PdfObjectStreams :_effec .ObjectNumber =_cccfc ;_effec .GenerationNumber =0;default:_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_effec );continue ;};if _ggead {_gcagg ++;};};_cega :=func (_cebde _bb .PdfObject )int64 {switch _ggegc :=_cebde .(type ){case *_bb .PdfIndirectObject :return _ggegc .ObjectNumber ;case *_bb .PdfObjectStream :return _ggegc .ObjectNumber ;case *_bb .PdfObjectStreams :return _ggegc .ObjectNumber ;};return 0;};_gg .SliceStable (_caeg ._degca ,func (_ddda ,_eegad int )bool {return _cega (_caeg ._degca [_ddda ])< _cega (_caeg ._degca [_eegad ])});};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cfdb *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_decf ,_cfdd :=_bb .GetNumbersAsFloat (objects );if _cfdd !=nil {return nil ,_cfdd ;};return _cfdb .ColorFromFloats (_decf );};

// ToPdfObject returns the PDF representation of the pattern.
func (_bcgf *PdfPattern )ToPdfObject ()_bb .PdfObject {_fdgf :=_bcgf .getDict ();_fdgf .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fdgf .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (_bcgf .PatternType ));return _bcgf ._egbda ;};

// BaseFont returns the font's "BaseFont" field.
func (_ddaff *PdfFont )BaseFont ()string {return _ddaff .baseFields ()._babf };var _fbagc =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gbd :=NewPdfAction ();_fdg :=&PdfActionSetOCGState {};_fdg .PdfAction =_gbd ;_gbd .SetContext (_fdg );return _fdg ;};func _daedd ()string {return _begac };func _abad (_dbgdc []rune ,_bdeef map[rune ]int ,_bcae map[rune ]_ca .GID )*_bb .PdfObjectArray {_bfbd :=&_bb .PdfObjectArray {};for _dccdd :=0;_dccdd < len (_dbgdc );{_fbed :=_bdeef [_dbgdc [_dccdd ]];_gcfgf :=_dccdd ;for _gcdc :=_dccdd +1;_gcdc < len (_dbgdc );_gcdc ++{_cdbe :=_bdeef [_dbgdc [_gcdc ]];if _fbed ==_cdbe {_gcfgf =_gcdc ;}else {break ;};};_cgac :=_bcae [_dbgdc [_dccdd ]];_debg :=_bcae [_dbgdc [_gcfgf ]];_bfbd .Append (_bb .MakeInteger (int64 (_cgac )));_bfbd .Append (_bb .MakeInteger (int64 (_debg )));_bfbd .Append (_bb .MakeInteger (int64 (_fbed )));_dccdd =_gcfgf +1;};return _bfbd ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_egeg *BorderStyle )GetPdfName ()string {switch *_egeg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};func (_cbdf *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_acc :=NewPdfAction ();_gc :=&PdfActionRendition {};_gc .PdfAction =_acc ;_acc .SetContext (_gc );return _gc ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_ggbcd *PdfPageResources )SetXObjectByName (keyName _bb .PdfObjectName ,stream *_bb .PdfObjectStream )error {if _ggbcd .XObject ==nil {_ggbcd .XObject =_bb .MakeDict ();};_feefd :=_bb .TraceToDirectObject (_ggbcd .XObject );_bdeee ,_daaf :=_feefd .(*_bb .PdfObjectDictionary );if !_daaf {_ggf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_ggbcd .XObject ,_feefd );return _cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdeee .Set (keyName ,stream );return nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject returns the PDF representation of the function.
func (_efbeb *PdfFunctionType3 )ToPdfObject ()_bb .PdfObject {_dgffc :=_bb .MakeDict ();_dgffc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (3));_bgegg :=&_bb .PdfObjectArray {};for _ ,_aabed :=range _efbeb .Domain {_bgegg .Append (_bb .MakeFloat (_aabed ));};_dgffc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgegg );if _efbeb .Range !=nil {_fafaf :=&_bb .PdfObjectArray {};for _ ,_abcb :=range _efbeb .Range {_fafaf .Append (_bb .MakeFloat (_abcb ));};_dgffc .Set ("\u0052\u0061\u006eg\u0065",_fafaf );};if _efbeb .Functions !=nil {_ecbda :=&_bb .PdfObjectArray {};for _ ,_caag :=range _efbeb .Functions {_ecbda .Append (_caag .ToPdfObject ());};_dgffc .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_ecbda );};if _efbeb .Bounds !=nil {_daae :=&_bb .PdfObjectArray {};for _ ,_agge :=range _efbeb .Bounds {_daae .Append (_bb .MakeFloat (_agge ));};_dgffc .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_daae );};if _efbeb .Encode !=nil {_bgdcb :=&_bb .PdfObjectArray {};for _ ,_gdbab :=range _efbeb .Encode {_bgdcb .Append (_bb .MakeFloat (_gdbab ));};_dgffc .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bgdcb );};if _efbeb ._abgef !=nil {_efbeb ._abgef .PdfObject =_dgffc ;return _efbeb ._abgef ;};return _dgffc ;};func (_gagcg *PdfShading )getShadingDict ()(*_bb .PdfObjectDictionary ,error ){_dbad :=_gagcg ._cggec ;if _abgg ,_cfec :=_dbad .(*_bb .PdfIndirectObject );_cfec {_aeeb ,_cdbddc :=_abgg .PdfObject .(*_bb .PdfObjectDictionary );if !_cdbddc {return nil ,_bb .ErrTypeError ;};return _aeeb ,nil ;}else if _egece ,_gbdf :=_dbad .(*_bb .PdfObjectStream );_gbdf {return _egece .PdfObjectDictionary ,nil ;}else if _fccdf ,_efcb :=_dbad .(*_bb .PdfObjectDictionary );_efcb {return _fccdf ,nil ;}else {_ggf .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bb .ErrTypeError ;};};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fefdd *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddge ,_bgbc :=color .(*PdfColorDeviceRGB );if !_bgbc {_ggf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ddge ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_dgfb :=&PdfColorspaceSpecialSeparation {};return _dgfb ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_db :=NewPdfAction ();_ee :=&PdfActionNamed {};_ee .PdfAction =_db ;_db .SetContext (_ee );return _ee ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gebc *pdfCIDFontType0 )ToPdfObject ()_bb .PdfObject {return _bb .MakeNull ()};

// String returns a string describing the font descriptor.
func (_efgg *PdfFontDescriptor )String ()string {var _eedd []string ;if _efgg .FontName !=nil {_eedd =append (_eedd ,_efgg .FontName .String ());};if _efgg .FontFamily !=nil {_eedd =append (_eedd ,_efgg .FontFamily .String ());};if _efgg .fontFile !=nil {_eedd =append (_eedd ,_efgg .fontFile .String ());};if _efgg ._efaga !=nil {_eedd =append (_eedd ,_efgg ._efaga .String ());};_eedd =append (_eedd ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_efgg .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_gf .Join (_eedd ,"\u002c\u0020"));};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bb .PdfObject ;ColorSpace _bb .PdfObject ;Pattern _bb .PdfObject ;Shading _bb .PdfObject ;XObject _bb .PdfObject ;Font _bb .PdfObject ;ProcSet _bb .PdfObject ;Properties _bb .PdfObject ;_deffg *_bb .PdfObjectDictionary ;_aegg *PdfPageResourcesColorspaces ;};func _bgffe ()*modelManager {_gfbga :=modelManager {};_gfbga ._bgbgcg =map[PdfModel ]_bb .PdfObject {};_gfbga ._cgcg =map[_bb .PdfObject ]PdfModel {};return &_gfbga ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_ggea *PdfField )IsTerminal ()bool {return len (_ggea .Kids )==0};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_agcf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_agcf .N =N ;return _agcf ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_fedb *PdfTilingPattern )GetContentStream ()([]byte ,error ){_aecae ,_ ,_gfegf :=_fedb .GetContentStreamWithEncoder ();return _aecae ,_gfegf ;};

// ImageToRGB convert an indexed image to RGB.
func (_cgdg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_cgdg .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_efag :=_fe .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._afaa ,img ._afae );_fdff :=_cg .NewReader (img .getBase ());_agad :=_cg .NewWriter (_efag );var (_dceed uint32 ;_cdebe int ;_dfeec error ;);for {_dceed ,_dfeec =_fdff .ReadSample ();if _dfeec ==_ec .EOF {break ;}else if _dfeec !=nil {return img ,_dfeec ;};_cdebe =int (_dceed );_ggf .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_cdebe ,N ,len (_cgdg ._bbcd ));if (_cdebe +1)*N > len (_cgdg ._bbcd ){_cdebe =len (_cgdg ._bbcd )/N -1;_ggf .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_cdebe );if _cdebe < 0{_ggf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _bedg :=_cdebe *N ;_bedg < (_cdebe +1)*N ;_bedg ++{if _dfeec =_agad .WriteSample (uint32 (_cgdg ._bbcd [_bedg ]));_dfeec !=nil {return img ,_dfeec ;};};};return _cgdg .Base .ImageToRGB (_bagfd (&_efag ));};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// Encoder returns the font's text encoder.
func (_ddged *PdfFont )Encoder ()_cefb .TextEncoder {_gefa :=_ddged .actualFont ();if _gefa ==nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ddged ._decag );return nil ;};return _gefa .Encoder ();};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_aecgf *PdfAcroForm )GetContainingPdfObject ()_bb .PdfObject {return _aecgf ._cdfcga };

// Encoder returns the font's text encoder.
func (_fbgfg pdfCIDFontType0 )Encoder ()_cefb .TextEncoder {return _fbgfg ._feebf };

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bdce PdfModel ;_fdab *_bb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bb .PdfObjectName ;T *_bb .PdfObjectString ;TU *_bb .PdfObjectString ;TM *_bb .PdfObjectString ;Ff *_bb .PdfObjectInteger ;V _bb .PdfObject ;DV _bb .PdfObject ;AA _bb .PdfObject ;};func (_gaa *PdfReader )newPdfActionSetOCGStateFromDict (_ceca *_bb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_ceca .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_ceca .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// M returns the value of the magenta component of the color.
func (_eabed *PdfColorDeviceCMYK )M ()float64 {return float64 (_eabed [1])};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fgdc *XObjectForm )GetContainingPdfObject ()_bb .PdfObject {return _fgdc ._cfdbb };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_abccb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ada :=vals [0];if _ada < 0.0||_ada > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cadc :=vals [1];if _cadc < 0.0||_cadc > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgfa :=vals [2];if _dgfa < 0.0||_dgfa > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgdf :=NewPdfColorDeviceRGB (_ada ,_cadc ,_dgfa );return _bgdf ,nil ;};func (_gedbc *pdfFontType0 )bytesToCharcodes (_gcgcb []byte )([]_cefb .CharCode ,bool ){if _gedbc ._eceae ==nil {return nil ,false ;};_cefgd ,_eccfa :=_gedbc ._eceae .BytesToCharcodes (_gcgcb );if !_eccfa {return nil ,false ;};_dfcf :=make ([]_cefb .CharCode ,len (_cefgd ));for _dcgd ,_fcabf :=range _cefgd {_dfcf [_dcgd ]=_cefb .CharCode (_fcabf );};return _dfcf ,true ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bb .PdfObject ;T _bb .PdfObject ;Operation _bb .PdfObject ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_bad *PdfAnnotationWidget )Field ()*PdfField {return _bad ._eafa };

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bb .PdfObject ;Name _bb .PdfObject ;};func (_egaab *PdfAcroForm )filteredFields (_ffbbc FieldFilterFunc ,_aecg bool )[]*PdfField {if _egaab ==nil {return nil ;};return _bfeae (_egaab .Fields ,_ffbbc ,_aecg );};

// SetDate sets the `M` field of the signature.
func (_cecdf *PdfSignature )SetDate (date _cd .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_cecdf .M =_bb .MakeString (date .Format (format ));};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gbgeb *PdfField )GetContainingPdfObject ()_bb .PdfObject {return _gbgeb ._fdab };func (_dggga *fontFile )parseASCIIPart (_ccad []byte )error {if len (_ccad )< 2||string (_ccad [:2])!="\u0025\u0021"{return _cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_edfg ,_ecdb ,_deacd :=_fdeace (_ccad );if _deacd !=nil {return _deacd ;};_ebea :=_babgef (_edfg );_dggga ._ffdag =_ebea ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _dggga ._ffdag ==""{_ggf .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _ecdb !=""{_faec ,_baffa :=_ecebg (_ecdb );if _baffa !=nil {return _baffa ;};_ebfe ,_baffa :=_cefb .NewCustomSimpleTextEncoder (_faec ,nil );if _baffa !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_baffa );return nil ;};_dggga ._afge =_ebfe ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcac *PdfAnnotationLink )ToPdfObject ()_bb .PdfObject {_dcac .PdfAnnotation .ToPdfObject ();_feff :=_dcac ._afg ;_gbf :=_feff .PdfObject .(*_bb .PdfObjectDictionary );_gbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u004c\u0069\u006e\u006b"));if _dcac ._dfe !=nil &&_dcac ._dfe ._fd !=nil {_gbf .Set ("\u0041",_dcac ._dfe ._fd .ToPdfObject ());}else if _dcac .A !=nil {_gbf .Set ("\u0041",_dcac .A );};_gbf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_dcac .Dest );_gbf .SetIfNotNil ("\u0048",_dcac .H );_gbf .SetIfNotNil ("\u0050\u0041",_dcac .PA );_gbf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcac .QuadPoints );_gbf .SetIfNotNil ("\u0042\u0053",_dcac .BS );return _feff ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_befd *_bb .PdfIndirectObject ;};func (_cacb *PdfReader )newPdfAnnotationMarkupFromDict (_adb *_bb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_afa :=&PdfAnnotationMarkup {};if _efg :=_adb .Get ("\u0054");_efg !=nil {_afa .T =_efg ;};if _edgb :=_adb .Get ("\u0050\u006f\u0070u\u0070");_edgb !=nil {_aec ,_aafe :=_edgb .(*_bb .PdfIndirectObject );if !_aafe {if _ ,_aee :=_edgb .(*_bb .PdfObjectNull );!_aee {return nil ,_cca .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_aecb ,_age :=_cacb .newPdfAnnotationFromIndirectObject (_aec );if _age !=nil {return nil ,_age ;};if _aecb !=nil {_cccc ,_dgdf :=_aecb ._bafb .(*PdfAnnotationPopup );if !_dgdf {return nil ,_cca .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_afa .Popup =_cccc ;};};};if _cbg :=_adb .Get ("\u0043\u0041");_cbg !=nil {_afa .CA =_cbg ;};if _ceb :=_adb .Get ("\u0052\u0043");_ceb !=nil {_afa .RC =_ceb ;};if _aaa :=_adb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_aaa !=nil {_afa .CreationDate =_aaa ;};if _egd :=_adb .Get ("\u0049\u0052\u0054");_egd !=nil {_afa .IRT =_egd ;};if _bdb :=_adb .Get ("\u0053\u0075\u0062\u006a");_bdb !=nil {_afa .Subj =_bdb ;};if _bcf :=_adb .Get ("\u0052\u0054");_bcf !=nil {_afa .RT =_bcf ;};if _fbcc :=_adb .Get ("\u0049\u0054");_fbcc !=nil {_afa .IT =_fbcc ;};if _cae :=_adb .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cae !=nil {_afa .ExData =_cae ;};return _afa ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gedbg *PdfFunctionType2 )ToPdfObject ()_bb .PdfObject {_fcabe :=_bb .MakeDict ();_fcabe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bb .MakeInteger (2));_fbdgg :=&_bb .PdfObjectArray {};for _ ,_efdgb :=range _gedbg .Domain {_fbdgg .Append (_bb .MakeFloat (_efdgb ));};_fcabe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbdgg );if _gedbg .Range !=nil {_bdbg :=&_bb .PdfObjectArray {};for _ ,_ebced :=range _gedbg .Range {_bdbg .Append (_bb .MakeFloat (_ebced ));};_fcabe .Set ("\u0052\u0061\u006eg\u0065",_bdbg );};if _gedbg .C0 !=nil {_aeca :=&_bb .PdfObjectArray {};for _ ,_dfefa :=range _gedbg .C0 {_aeca .Append (_bb .MakeFloat (_dfefa ));};_fcabe .Set ("\u0043\u0030",_aeca );};if _gedbg .C1 !=nil {_bagfe :=&_bb .PdfObjectArray {};for _ ,_bcda :=range _gedbg .C1 {_bagfe .Append (_bb .MakeFloat (_bcda ));};_fcabe .Set ("\u0043\u0031",_bagfe );};_fcabe .Set ("\u004e",_bb .MakeFloat (_gedbg .N ));if _gedbg ._baeac !=nil {_gedbg ._baeac .PdfObject =_fcabe ;return _gedbg ._baeac ;};return _fcabe ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_ffdb *PdfReader )CheckAccessRights (password []byte )(bool ,_ad .Permissions ,error ){return _ffdb ._eagc .CheckAccessRights (password );};func (_dddee *PdfWriter )addObject (_dcgdg _bb .PdfObject )bool {_gffg :=_dddee .hasObject (_dcgdg );if !_gffg {_eedg :=_bb .ResolveReferencesDeep (_dcgdg ,_dddee ._dcadg );if _eedg !=nil {_ggf .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_eedg );};_dddee ._degca =append (_dddee ._degca ,_dcgdg );_dddee ._bfbgfd [_dcgdg ]=struct{}{};return true ;};return false ;};

// AddOutlineTree adds outlines to a PDF file.
func (_gdeb *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gdeb ._fefadf =outlineTree };func _cfef (_decae *PdfField ,_geef _bb .PdfObject )error {switch _decae .GetContext ().(type ){case *PdfFieldText :switch _gebcg :=_geef .(type ){case *_bb .PdfObjectName :_edccf :=_gebcg ;_ggf .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_edccf .String ());_decae .V =_bb .MakeEncodedString (_gebcg .String (),true );case *_bb .PdfObjectString :_decae .V =_bb .MakeEncodedString (_gebcg .String (),true );default:_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_gebcg ,_gebcg );};case *PdfFieldButton :switch _geef .(type ){case *_bb .PdfObjectName :if len (_geef .String ())> 0{_decae .V =_geef ;_ccgg (_decae ,_geef );};case *_bb .PdfObjectString :if len (_geef .String ())> 0{_decae .V =_bb .MakeName (_geef .String ());_ccgg (_decae ,_decae .V );};default:_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_decae .PartialName (),_geef );_decae .V =_geef ;};case *PdfFieldChoice :switch _geef .(type ){case *_bb .PdfObjectName :if len (_geef .String ())> 0{_decae .V =_bb .MakeString (_geef .String ());_ccgg (_decae ,_geef );};case *_bb .PdfObjectString :if len (_geef .String ())> 0{_decae .V =_geef ;_ccgg (_decae ,_bb .MakeName (_geef .String ()));};default:_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_decae .PartialName (),_geef );_decae .V =_geef ;};case *PdfFieldSignature :_ggf .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_decae .PartialName (),_geef );};return nil ;};func (_gcce *PdfField )inherit (_bdbd func (*PdfField )bool )(bool ,error ){_ccffc :=map[*PdfField ]bool {};_caae :=false ;_ecfe :=_gcce ;for _ecfe !=nil {if _ ,_eeed :=_ccffc [_ecfe ];_eeed {return false ,_cca .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cdbbc :=_bdbd (_ecfe );if _cdbbc {_caae =true ;break ;};_ccffc [_ecfe ]=true ;_ecfe =_ecfe .Parent ;};return _caae ,nil ;};func (_cgfb *PdfReader )newPdfActionGotoEFromDict (_aag *_bb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dcf ,_afcf :=_edfed (_aag .Get ("\u0046"));if _afcf !=nil {return nil ,_afcf ;};return &PdfActionGoToE {D :_aag .Get ("\u0044"),NewWindow :_aag .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_aag .Get ("\u0054"),F :_dcf },nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ffeb []byte ;_abdf []uint32 ;_ebccb *_bb .PdfObjectStream ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eadb *PdfShadingType2 )ToPdfObject ()_bb .PdfObject {_eadb .PdfShading .ToPdfObject ();_egga ,_eefda :=_eadb .getShadingDict ();if _eefda !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _egga ==nil {_ggf .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eadb .Coords !=nil {_egga .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eadb .Coords );};if _eadb .Domain !=nil {_egga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eadb .Domain );};if _eadb .Function !=nil {if len (_eadb .Function )==1{_egga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eadb .Function [0].ToPdfObject ());}else {_gdcdg :=_bb .MakeArray ();for _ ,_dfbf :=range _eadb .Function {_gdcdg .Append (_dfbf .ToPdfObject ());};_egga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdcdg );};};if _eadb .Extend !=nil {_egga .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eadb .Extend );};return _eadb ._cggec ;};func (_gca *PdfReader )newPdfAnnotation3DFromDict (_cebf *_bb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_afac :=PdfAnnotation3D {};_afac .T3DD =_cebf .Get ("\u0033\u0044\u0044");_afac .T3DV =_cebf .Get ("\u0033\u0044\u0056");_afac .T3DA =_cebf .Get ("\u0033\u0044\u0041");_afac .T3DI =_cebf .Get ("\u0033\u0044\u0049");_afac .T3DB =_cebf .Get ("\u0033\u0044\u0042");return &_afac ,nil ;};

// Val returns the value of the color.
func (_cbb *PdfColorCalGray )Val ()float64 {return float64 (*_cbb )};func (_acd *PdfReader )newPdfActionGotoFromDict (_bfe *_bb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bfe .Get ("\u0044")},nil ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_bafbd *PdfPageResources )SetPatternByName (keyName _bb .PdfObjectName ,pattern _bb .PdfObject )error {if _bafbd .Pattern ==nil {_bafbd .Pattern =_bb .MakeDict ();};_fdbf ,_cadfe :=_bafbd .Pattern .(*_bb .PdfObjectDictionary );if !_cadfe {return _bb .ErrTypeError ;};_fdbf .Set (keyName ,pattern );return nil ;};func _ccgg (_gdcec *PdfField ,_egda _bb .PdfObject ){for _ ,_dabde :=range _gdcec .Annotations {_dabde .AS =_egda ;_dabde .ToPdfObject ();};};func _gagga (_accfg *_bb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bdag :=PdfShadingType7 {};_eafgd :=_accfg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eafgd ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_aaefb ,_cagda :=_eafgd .(*_bb .PdfObjectInteger );if !_cagda {_ggf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eafgd );return nil ,_bb .ErrTypeError ;};_bdag .BitsPerCoordinate =_aaefb ;_eafgd =_accfg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eafgd ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_aaefb ,_cagda =_eafgd .(*_bb .PdfObjectInteger );if !_cagda {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eafgd );return nil ,_bb .ErrTypeError ;};_bdag .BitsPerComponent =_aaefb ;_eafgd =_accfg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eafgd ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_aaefb ,_cagda =_eafgd .(*_bb .PdfObjectInteger );if !_cagda {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eafgd );return nil ,_bb .ErrTypeError ;};_bdag .BitsPerComponent =_aaefb ;_eafgd =_accfg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eafgd ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_fbfee ,_cagda :=_eafgd .(*_bb .PdfObjectArray );if !_cagda {_ggf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eafgd );return nil ,_bb .ErrTypeError ;};_bdag .Decode =_fbfee ;if _aeadd :=_accfg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_aeadd !=nil {_bdag .Function =[]PdfFunction {};if _ddfdb ,_afdfc :=_aeadd .(*_bb .PdfObjectArray );_afdfc {for _ ,_bfdaa :=range _ddfdb .Elements (){_bbcfc ,_feecgc :=_cdgbg (_bfdaa );if _feecgc !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_feecgc );return nil ,_feecgc ;};_bdag .Function =append (_bdag .Function ,_bbcfc );};}else {_dfeeg ,_ggcdg :=_cdgbg (_aeadd );if _ggcdg !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggcdg );return nil ,_ggcdg ;};_bdag .Function =append (_bdag .Function ,_dfeeg );};};return &_bdag ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_geecb *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baeef ,_eabeb :=_bb .GetNumbersAsFloat (objects );if _eabeb !=nil {return nil ,_eabeb ;};return _geecb .ColorFromFloats (_baeef );};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cbcc pdfFontType0 )GetRuneMetrics (r rune )(_ca .CharMetrics ,bool ){if _cbcc .DescendantFont ==nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cbcc );return _ca .CharMetrics {},false ;};return _cbcc .DescendantFont .GetRuneMetrics (r );};

// ToPdfObject implements interface PdfModel.
func (_ebabe *PdfSignature )ToPdfObject ()_bb .PdfObject {_fddgc :=_ebabe ._fbgfae ;var _egege *_bb .PdfObjectDictionary ;if _cadgbfg ,_gabcc :=_fddgc .PdfObject .(*pdfSignDictionary );_gabcc {_egege =_cadgbfg .PdfObjectDictionary ;}else {_egege =_fddgc .PdfObject .(*_bb .PdfObjectDictionary );};_egege .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ebabe .Type );_egege .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ebabe .Filter );_egege .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ebabe .SubFilter );_egege .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ebabe .ByteRange );_egege .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ebabe .Contents );_egege .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ebabe .Cert );_egege .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebabe .Name );_egege .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ebabe .Reason );_egege .SetIfNotNil ("\u004d",_ebabe .M );_egege .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ebabe .Reference );_egege .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ebabe .Changes );_egege .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ebabe .ContactInfo );return _fddgc ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_fab *PdfAnnotationLine )ToPdfObject ()_bb .PdfObject {_fab .PdfAnnotation .ToPdfObject ();_adc :=_fab ._afg ;_gga :=_adc .PdfObject .(*_bb .PdfObjectDictionary );_fab .PdfAnnotationMarkup .appendToPdfDictionary (_gga );_gga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u004c\u0069\u006e\u0065"));_gga .SetIfNotNil ("\u004c",_fab .L );_gga .SetIfNotNil ("\u0042\u0053",_fab .BS );_gga .SetIfNotNil ("\u004c\u0045",_fab .LE );_gga .SetIfNotNil ("\u0049\u0043",_fab .IC );_gga .SetIfNotNil ("\u004c\u004c",_fab .LL );_gga .SetIfNotNil ("\u004c\u004c\u0045",_fab .LLE );_gga .SetIfNotNil ("\u0043\u0061\u0070",_fab .Cap );_gga .SetIfNotNil ("\u0049\u0054",_fab .IT );_gga .SetIfNotNil ("\u004c\u004c\u004f",_fab .LLO );_gga .SetIfNotNil ("\u0043\u0050",_fab .CP );_gga .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fab .Measure );_gga .SetIfNotNil ("\u0043\u004f",_fab .CO );return _adc ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _cd .Time )(PdfDate ,error ){_fbga :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ggfe ,_ :=_ag .ParseInt (_fbga [1:3],10,32);_bdgde ,_ :=_ag .ParseInt (_fbga [4:6],10,32);return PdfDate {_cfdag :int64 (timeObj .Year ()),_dbebd :int64 (timeObj .Month ()),_bdda :int64 (timeObj .Day ()),_gaacb :int64 (timeObj .Hour ()),_bgfdfd :int64 (timeObj .Minute ()),_adab :int64 (timeObj .Second ()),_ebag :_fbga [0],_dfecd :_ggfe ,_faeda :_bdgde },nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_accfd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _accfd .Alternate ==nil {if _accfd .N ==1{_gged :=NewPdfColorspaceDeviceGray ();return _gged .ColorFromFloats (vals );}else if _accfd .N ==3{_bddb :=NewPdfColorspaceDeviceRGB ();return _bddb .ColorFromFloats (vals );}else if _accfd .N ==4{_cadgb :=NewPdfColorspaceDeviceCMYK ();return _cadgb .ColorFromFloats (vals );}else {return nil ,_cca .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _accfd .Alternate .ColorFromFloats (vals );};var _cgefg ="";

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_cdeb :=NewPdfAnnotation ();_bgbe :=&PdfAnnotationText {};_bgbe .PdfAnnotation =_cdeb ;_bgbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdeb .SetContext (_bgbe );return _bgbe ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_feeg *OutlineItem )Insert (index uint ,item *OutlineItem ){_edcdg :=uint (len (_feeg .Entries ));if index > _edcdg {index =_edcdg ;};_feeg .Entries =append (_feeg .Entries [:index ],append ([]*OutlineItem {item },_feeg .Entries [index :]...)...);};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dbabaa *PdfPageResources )HasFontByName (keyName _bb .PdfObjectName )bool {_ ,_ecaea :=_dbabaa .GetFontByName (keyName );return _ecaea ;};func _gaacd (_gfefe _bb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ggf .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gfefe .String (),_gfefe );_edfb :=NewPdfColorspaceSpecialPattern ();if _ddac ,_ffgg :=_gfefe .(*_bb .PdfIndirectObject );_ffgg {_edfb ._befd =_ddac ;};_gfefe =_bb .TraceToDirectObject (_gfefe );if _fbdcf ,_cfcc :=_gfefe .(*_bb .PdfObjectName );_cfcc {if *_fbdcf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _edfb ,nil ;};_dced ,_fcae :=_gfefe .(*_bb .PdfObjectArray );if !_fcae {_ggf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gfefe );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dced .Len ()!=1&&_dced .Len ()!=2{_ggf .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dced );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gfefe =_dced .Get (0);if _efdd ,_befa :=_gfefe .(*_bb .PdfObjectName );_befa {if *_efdd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ggf .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_efdd );return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dced .Len ()> 1{_gfefe =_dced .Get (1);_gfefe =_bb .TraceToDirectObject (_gfefe );_cabe ,_afccd :=NewPdfColorspaceFromPdfObject (_gfefe );if _afccd !=nil {return nil ,_afccd ;};_edfb .UnderlyingCS =_cabe ;};_ggf .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_edfb .UnderlyingCS );return _edfb ,nil ;};func _ecebg (_bcagc string )(map[_cefb .CharCode ]_cefb .GlyphName ,error ){_bdea :=_gf .Split (_bcagc ,"\u000a");_beaf :=make (map[_cefb .CharCode ]_cefb .GlyphName );for _ ,_cdfad :=range _bdea {_abagb :=_cbafb .FindStringSubmatch (_cdfad );if _abagb ==nil {continue ;};_eccca ,_gfebd :=_abagb [1],_abagb [2];_febgd ,_gebg :=_ag .Atoi (_eccca );if _gebg !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_cdfad );return nil ,_bb .ErrTypeError ;};_beaf [_cefb .CharCode (_febgd )]=_cefb .GlyphName (_gfebd );};_ggf .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_beaf );return _beaf ,nil ;};func (_aede *PdfWriter )hasObject (_bdeba _bb .PdfObject )bool {_ ,_cebdb :=_aede ._bfbgfd [_bdeba ];return _cebdb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_fbgg *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_fbbcd *PdfFontDescriptor )ToPdfObject ()_bb .PdfObject {_aegc :=_bb .MakeDict ();if _fbbcd ._cace ==nil {_fbbcd ._cace =&_bb .PdfIndirectObject {};};_fbbcd ._cace .PdfObject =_aegc ;_aegc .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _fbbcd .FontName !=nil {_aegc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fbbcd .FontName );};if _fbbcd .FontFamily !=nil {_aegc .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_fbbcd .FontFamily );};if _fbbcd .FontStretch !=nil {_aegc .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_fbbcd .FontStretch );};if _fbbcd .FontWeight !=nil {_aegc .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_fbbcd .FontWeight );};if _fbbcd .Flags !=nil {_aegc .Set ("\u0046\u006c\u0061g\u0073",_fbbcd .Flags );};if _fbbcd .FontBBox !=nil {_aegc .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fbbcd .FontBBox );};if _fbbcd .ItalicAngle !=nil {_aegc .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_fbbcd .ItalicAngle );};if _fbbcd .Ascent !=nil {_aegc .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_fbbcd .Ascent );};if _fbbcd .Descent !=nil {_aegc .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_fbbcd .Descent );};if _fbbcd .Leading !=nil {_aegc .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_fbbcd .Leading );};if _fbbcd .CapHeight !=nil {_aegc .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_fbbcd .CapHeight );};if _fbbcd .XHeight !=nil {_aegc .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_fbbcd .XHeight );};if _fbbcd .StemV !=nil {_aegc .Set ("\u0053\u0074\u0065m\u0056",_fbbcd .StemV );};if _fbbcd .StemH !=nil {_aegc .Set ("\u0053\u0074\u0065m\u0048",_fbbcd .StemH );};if _fbbcd .AvgWidth !=nil {_aegc .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_fbbcd .AvgWidth );};if _fbbcd .MaxWidth !=nil {_aegc .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_fbbcd .MaxWidth );};if _fbbcd .MissingWidth !=nil {_aegc .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_fbbcd .MissingWidth );};if _fbbcd .FontFile !=nil {_aegc .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_fbbcd .FontFile );};if _fbbcd .FontFile2 !=nil {_aegc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_fbbcd .FontFile2 );};if _fbbcd .FontFile3 !=nil {_aegc .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_fbbcd .FontFile3 );};if _fbbcd .CharSet !=nil {_aegc .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_fbbcd .CharSet );};if _fbbcd .Style !=nil {_aegc .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_fbbcd .FontName );};if _fbbcd .Lang !=nil {_aegc .Set ("\u004c\u0061\u006e\u0067",_fbbcd .Lang );};if _fbbcd .FD !=nil {_aegc .Set ("\u0046\u0044",_fbbcd .FD );};if _fbbcd .CIDSet !=nil {_aegc .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_fbbcd .CIDSet );};return _fbbcd ._cace ;};

// ToPdfObject implements interface PdfModel.
func (_ceaf *PdfActionSound )ToPdfObject ()_bb .PdfObject {_ceaf .PdfAction .ToPdfObject ();_eba :=_ceaf ._bd ;_eff :=_eba .PdfObject .(*_bb .PdfObjectDictionary );_eff .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeSound )));_eff .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ceaf .Sound );_eff .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ceaf .Volume );_eff .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ceaf .Synchronous );_eff .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ceaf .Repeat );_eff .SetIfNotNil ("\u004d\u0069\u0078",_ceaf .Mix );return _eba ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cddfd *PdfFieldButton )ToPdfObject ()_bb .PdfObject {_cddfd .PdfField .ToPdfObject ();_fcgd :=_cddfd ._fdab ;_badc :=_fcgd .PdfObject .(*_bb .PdfObjectDictionary );_badc .Set ("\u0046\u0054",_bb .MakeName ("\u0042\u0074\u006e"));if _cddfd .Opt !=nil {_badc .Set ("\u004f\u0070\u0074",_cddfd .Opt );};return _fcgd ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bb .PdfObject ;IC _bb .PdfObject ;BE _bb .PdfObject ;RD _bb .PdfObject ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gfg :=NewPdfAction ();_fdf :=&PdfActionSound {};_fdf .PdfAction =_gfg ;_gfg .SetContext (_fdf );return _fdf ;};

// GetSubFilter returns SubFilter value or empty string.
func (_gbcfd *pdfSignDictionary )GetSubFilter ()string {_begaa :=_gbcfd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _begaa ==nil {return "";};if _faecf ,_fbfeg :=_bb .GetNameVal (_begaa );_fbfeg {return _faecf ;};return "";};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bb .PdfObjectArray )(*PdfRectangle ,error ){_gfega :=PdfRectangle {};if arr .Len ()!=4{return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _eagbf error ;_gfega .Llx ,_eagbf =_bb .GetNumberAsFloat (arr .Get (0));if _eagbf !=nil {return nil ,_eagbf ;};_gfega .Lly ,_eagbf =_bb .GetNumberAsFloat (arr .Get (1));if _eagbf !=nil {return nil ,_eagbf ;};_gfega .Urx ,_eagbf =_bb .GetNumberAsFloat (arr .Get (2));if _eagbf !=nil {return nil ,_eagbf ;};_gfega .Ury ,_eagbf =_bb .GetNumberAsFloat (arr .Get (3));if _eagbf !=nil {return nil ,_eagbf ;};return &_gfega ,nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_dfed :=&PdfColorspaceLab {};_dfed .BlackPoint =[]float64 {0.0,0.0,0.0};_dfed .Range =[]float64 {-100,100,-100,100};return _dfed ;};func (_faagg *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _faagg ._ceee ==nil &&_faagg .DescendantFont !=nil {return _faagg .DescendantFont .FontDescriptor ();};return _faagg ._ceee ;};func (_ggeee *PdfFont )baseFields ()*fontCommon {if _ggeee ._decag ==nil {_ggf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _ggeee ._decag .baseFields ();};

// G returns the value of the green component of the color.
func (_fddg *PdfColorDeviceRGB )G ()float64 {return float64 (_fddg [1])};func (_gfda *PdfReader )newPdfAnnotationPrinterMarkFromDict (_aaad *_bb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_bbd :=PdfAnnotationPrinterMark {};_bbd .MN =_aaad .Get ("\u004d\u004e");return &_bbd ,nil ;};func _gaaeb ()string {return _cgefg };

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_gbbed :=&PdfOutline {_agfdb :_bb .MakeIndirectObject (_bb .MakeDict ())};_gbbed ._acgdb =_gbbed ;return _gbbed ;};func (_cgged *XObjectImage )getParamsDict ()*_bb .PdfObjectDictionary {_dbbacb :=_bb .MakeDict ();_dbbacb .Set ("\u0057\u0069\u0064t\u0068",_bb .MakeInteger (*_cgged .Width ));_dbbacb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bb .MakeInteger (*_cgged .Height ));_dbbacb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bb .MakeInteger (int64 (_cgged .ColorSpace .GetNumComponents ())));_dbbacb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bb .MakeInteger (*_cgged .BitsPerComponent ));return _dbbacb ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_cbgc *PdfReader )newPdfAnnotationRichMediaFromDict (_dcb *_bb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_cacd :=&PdfAnnotationRichMedia {};_cacd .RichMediaSettings =_dcb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_cacd .RichMediaContent =_dcb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _cacd ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ebda pdfCIDFontType0 )GetCharMetrics (code _cefb .CharCode )(_ca .CharMetrics ,bool ){_abfg :=_ebda ._gaae ;if _acagb ,_efgbb :=_ebda ._ebebf [code ];_efgbb {_abfg =_acagb ;};return _ca .CharMetrics {Wx :_abfg },true ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_eaae *PdfShadingPattern )ToPdfObject ()_bb .PdfObject {_eaae .PdfPattern .ToPdfObject ();_bdfcc :=_eaae .getDict ();if _eaae .Shading !=nil {_bdfcc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_eaae .Shading .ToPdfObject ());};if _eaae .Matrix !=nil {_bdfcc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eaae .Matrix );};if _eaae .ExtGState !=nil {_bdfcc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_eaae .ExtGState );};return _eaae ._egbda ;};func (_cbfc *PdfReader )loadAction (_aeeg _bb .PdfObject )(*PdfAction ,error ){if _gfe ,_fcb :=_bb .GetIndirect (_aeeg );_fcb {_fca ,_bbaa :=_cbfc .newPdfActionFromIndirectObject (_gfe );if _bbaa !=nil {return nil ,_bbaa ;};return _fca ,nil ;}else if !_bb .IsNullObject (_aeeg ){return nil ,_cca .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bceba *PdfColorLab )GetNumComponents ()int {return 3};func (_adcc *PdfFilespec )getDict ()*_bb .PdfObjectDictionary {if _bgad ,_bbcdd :=_adcc ._dgdeg .(*_bb .PdfIndirectObject );_bbcdd {_egdgb ,_agag :=_bgad .PdfObject .(*_bb .PdfObjectDictionary );if !_agag {return nil ;};return _egdgb ;}else if _aecc ,_ffgbcb :=_adcc ._dgdeg .(*_bb .PdfObjectDictionary );_ffgbcb {return _aecc ;}else {_ggf .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_adcc ._dgdeg );return nil ;};};func (_fgca *PdfReader )resolveReference (_gagbg *_bb .PdfObjectReference )(_bb .PdfObject ,bool ,error ){_caca ,_fgedb :=_fgca ._eagc .ObjCache [int (_gagbg .ObjectNumber )];if !_fgedb {_ggf .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_gagbg );_gdbaf ,_fbfec :=_fgca ._eagc .LookupByReference (*_gagbg );if _fbfec !=nil {return nil ,false ,_fbfec ;};_fgca ._eagc .ObjCache [int (_gagbg .ObjectNumber )]=_gdbaf ;return _gdbaf ,false ,nil ;};return _caca ,true ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bb .PdfObject ;BS _bb .PdfObject ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_daea byte )byte ;func _cdad (_affg _bb .PdfObject )(string ,error ){_affg =_bb .TraceToDirectObject (_affg );switch _ffedg :=_affg .(type ){case *_bb .PdfObjectString :return _ffedg .Str (),nil ;case *_bb .PdfObjectStream :_cgcbf ,_gdfae :=_bb .DecodeStream (_ffedg );if _gdfae !=nil {return "",_gdfae ;};return string (_cgcbf ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_affg );};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_edba *PdfOutlineTreeNode )ToPdfObject ()_bb .PdfObject {return _edba .GetContext ().ToPdfObject ()};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_begd FieldFlag )Has (fl FieldFlag )bool {return (_begd .Mask ()&fl .Mask ())> 0};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cgfa *PdfColorspaceDeviceCMYK )ToPdfObject ()_bb .PdfObject {return _bb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_eefcc *PdfPageResources )HasXObjectByName (keyName _bb .PdfObjectName )bool {_ebfba ,_ :=_eefcc .GetXObjectByName (keyName );return _ebfba !=nil ;};func _gdgga ()string {if len (_bbecd )> 0{return _bbecd ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func (_gcab *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gcab ._ceee };

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bb .PdfObjectArray ;ExtGState _bb .PdfObject ;};

// L returns the value of the L component of the color.
func (_ebdb *PdfColorLab )L ()float64 {return float64 (_ebdb [0])};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gbfed *PdfFont )BytesToCharcodes (data []byte )[]_cefb .CharCode {_ggf .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _edce ,_bfga :=_gbfed ._decag .(*pdfFontType0 );_bfga &&_edce ._eceae !=nil {if _feddc ,_bffc :=_edce .bytesToCharcodes (data );_bffc {return _feddc ;};};_dacc :=make ([]_cefb .CharCode ,0,len (data )+len (data )%2);if _gbfed .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _aadge :=0;_aadge < len (data );_aadge +=2{_aada :=uint16 (data [_aadge ])<<8|uint16 (data [_aadge +1]);_dacc =append (_dacc ,_cefb .CharCode (_aada ));};}else {for _ ,_fffbf :=range data {_dacc =append (_dacc ,_cefb .CharCode (_fffbf ));};};return _dacc ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ggbd *PdfPattern )IsShading ()bool {return _ggbd .PatternType ==2};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_bfab :=NewPdfAnnotation ();_cefd :=&PdfAnnotationTrapNet {};_cefd .PdfAnnotation =_bfab ;_bfab .SetContext (_cefd );return _cefd ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ggbfe *PdfReader )GetOCProperties ()(_bb .PdfObject ,error ){_egccd :=_ggbfe ._gdddd ;_afab :=_egccd .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_afab =_bb .ResolveReference (_afab );if !_ggbfe ._fadcg {_cffda :=_ggbfe .traverseObjectData (_afab );if _cffda !=nil {return nil ,_cffda ;};};return _afab ,nil ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_dfgcf *Image )GetParamsDict ()*_bb .PdfObjectDictionary {_baad :=_bb .MakeDict ();_baad .Set ("\u0057\u0069\u0064t\u0068",_bb .MakeInteger (_dfgcf .Width ));_baad .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bb .MakeInteger (_dfgcf .Height ));_baad .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bb .MakeInteger (int64 (_dfgcf .ColorComponents )));_baad .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bb .MakeInteger (_dfgcf .BitsPerComponent ));return _baad ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_deacf *PdfPage )GetAllContentStreams ()(string ,error ){_dccfg ,_cceea :=_deacf .GetContentStreams ();if _cceea !=nil {return "",_cceea ;};return _gf .Join (_dccfg ,"\u0020"),nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bb .PdfObjectArray ;Domain *_bb .PdfObjectArray ;Function []PdfFunction ;Extend *_bb .PdfObjectArray ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_egeca *PdfOutline )ToPdfObject ()_bb .PdfObject {_gfagc :=_egeca ._agfdb ;_gafa :=_gfagc .PdfObject .(*_bb .PdfObjectDictionary );_gafa .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _egeca .First !=nil {_gafa .Set ("\u0046\u0069\u0072s\u0074",_egeca .First .ToPdfObject ());};if _egeca .Last !=nil {_gafa .Set ("\u004c\u0061\u0073\u0074",_egeca .Last .GetContext ().GetContainingPdfObject ());};if _egeca .Parent !=nil {_gafa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_egeca .Parent .GetContext ().GetContainingPdfObject ());};if _egeca .Count !=nil {_gafa .Set ("\u0043\u006f\u0075n\u0074",_bb .MakeInteger (*_egeca .Count ));};return _gfagc ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// IsTiling specifies if the pattern is a tiling pattern.
func (_cbga *PdfPattern )IsTiling ()bool {return _cbga .PatternType ==1};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_abfca PdfModel ;_egbda _bb .PdfObject ;};func (_abebf fontCommon )isCIDFont ()bool {if _abebf ._cddcc ==""{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abebf );};_gfca :=false ;switch _abebf ._cddcc {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gfca =true ;};_ggf .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_gfca ,_abebf );return _gfca ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cdfcga :_bb .MakeIndirectObject (_bb .MakeDict ())};};type fontCommon struct{_babf string ;_cddcc string ;_ebad string ;_cgcae _bb .PdfObject ;_adcd *_ac .CMap ;_ceee *PdfFontDescriptor ;_aacf int64 ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gggf *PdfAnnotationCircle )ToPdfObject ()_bb .PdfObject {_gggf .PdfAnnotation .ToPdfObject ();_abag :=_gggf ._afg ;_gbba :=_abag .PdfObject .(*_bb .PdfObjectDictionary );_gggf .PdfAnnotationMarkup .appendToPdfDictionary (_gbba );_gbba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_gbba .SetIfNotNil ("\u0042\u0053",_gggf .BS );_gbba .SetIfNotNil ("\u0049\u0043",_gggf .IC );_gbba .SetIfNotNil ("\u0042\u0045",_gggf .BE );_gbba .SetIfNotNil ("\u0052\u0044",_gggf .RD );return _abag ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bccdcb *PdfWriter )SetPageLabels (pageLabels _bb .PdfObject )error {if pageLabels ==nil {return nil ;};_ggf .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_bccdcb ._bdaad .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bccdcb .addObjects (pageLabels );};

// String returns a string that describes `font`.
func (_egdga *PdfFont )String ()string {_bagdb :="";if _egdga ._decag .Encoder ()!=nil {_bagdb =_egdga ._decag .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_egdga ._decag ,_egdga .baseFields ().coreString (),_bagdb );};

// SetVersion sets the PDF version of the output file.
func (_ebbda *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ebbda ._eeafa =majorVersion ;_ebbda ._faba =minorVersion ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_cbab :=&PdfColorspaceDeviceN {};return _cbab };

// ToPdfObject returns the PDF representation of the colorspace.
func (_fggf *PdfColorspaceSpecialPattern )ToPdfObject ()_bb .PdfObject {if _fggf .UnderlyingCS ==nil {return _bb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_ebbd :=_bb .MakeArray (_bb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ebbd .Append (_fggf .UnderlyingCS .ToPdfObject ());if _fggf ._befd !=nil {_fggf ._befd .PdfObject =_ebbd ;return _fggf ._befd ;};return _ebbd ;};func (_dcae *PdfReader )newPdfAnnotationTextFromDict (_ggbgc *_bb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gge :=PdfAnnotationText {};_bgc ,_gccd :=_dcae .newPdfAnnotationMarkupFromDict (_ggbgc );if _gccd !=nil {return nil ,_gccd ;};_gge .PdfAnnotationMarkup =_bgc ;_gge .Open =_ggbgc .Get ("\u004f\u0070\u0065\u006e");_gge .Name =_ggbgc .Get ("\u004e\u0061\u006d\u0065");_gge .State =_ggbgc .Get ("\u0053\u0074\u0061t\u0065");_gge .StateModel =_ggbgc .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gge ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_eegc *PdfRectangle )ToPdfObject ()_bb .PdfObject {return _bb .MakeArray (_bb .MakeFloat (_eegc .Llx ),_bb .MakeFloat (_eegc .Lly ),_bb .MakeFloat (_eegc .Urx ),_bb .MakeFloat (_eegc .Ury ));};type modelManager struct{_bgbgcg map[PdfModel ]_bb .PdfObject ;_cgcg map[_bb .PdfObject ]PdfModel ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cba :=NewPdfAnnotation ();_egff :=&PdfAnnotationProjection {};_egff .PdfAnnotation =_cba ;_egff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cba .SetContext (_egff );return _egff ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cbc :=NewPdfAction ();_bdg :=&PdfActionTrans {};_bdg .PdfAction =_cbc ;_cbc .SetContext (_bdg );return _bdg ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_becga *XObjectImage )GetContainingPdfObject ()_bb .PdfObject {return _becga ._dddb };

// MergePageWith appends page content to source Pdf file page content.
func (_gaf *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fbff :=pageNum -1;var _gaeb *PdfPage ;for _edff ,_agae :=range _gaf ._fabc {if _edff ==_fbff {_gaeb =_agae ;};};if _gaeb ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _gaeb ._bbacd !=nil &&_gaeb ._bbacd .GetParser ()==_gaf ._cdfd ._eagc {_gaeb =_gaeb .Duplicate ();_gaf ._fabc [_fbff ]=_gaeb ;};page =page .Duplicate ();_adffe (page );_fgaf :=_dcee (_gaeb );_deaa :=_dcee (page );_geaf :=make (map[_bb .PdfObjectName ]_bb .PdfObjectName );for _agf :=range _deaa {if _ ,_cbae :=_fgaf [_agf ];_cbae {for _ecgd :=1;true ;_ecgd ++{_bbcee :=_bb .PdfObjectName (string (_agf )+_ag .Itoa (_ecgd ));if _ ,_cdfc :=_fgaf [_bbcee ];!_cdfc {_geaf [_agf ]=_bbcee ;break ;};};};};_gbbf ,_dcgg :=page .GetContentStreams ();if _dcgg !=nil {return _dcgg ;};_faa ,_dcgg :=_gaeb .GetContentStreams ();if _dcgg !=nil {return _dcgg ;};for _deee ,_bdbae :=range _gbbf {for _aaba ,_ccef :=range _geaf {_bdbae =_gf .Replace (_bdbae ,"\u002f"+string (_aaba ),"\u002f"+string (_ccef ),-1);};_gbbf [_deee ]=_bdbae ;};_faa =append (_faa ,_gbbf ...);if _gfdf :=_gaeb .SetContentStreams (_faa ,_bb .NewFlateEncoder ());_gfdf !=nil {return _gfdf ;};for _ ,_ffdec :=range page ._bgaf {_gaeb ._bgaf =append (_gaeb ._bgaf ,_ffdec );};if _gaeb .Resources ==nil {_gaeb .Resources =NewPdfPageResources ();};if page .Resources !=nil {_gaeb .Resources .Font =_gaf .mergeResources (_gaeb .Resources .Font ,page .Resources .Font ,_geaf );_gaeb .Resources .XObject =_gaf .mergeResources (_gaeb .Resources .XObject ,page .Resources .XObject ,_geaf );_gaeb .Resources .Properties =_gaf .mergeResources (_gaeb .Resources .Properties ,page .Resources .Properties ,_geaf );if _gaeb .Resources .ProcSet ==nil {_gaeb .Resources .ProcSet =page .Resources .ProcSet ;};_gaeb .Resources .Shading =_gaf .mergeResources (_gaeb .Resources .Shading ,page .Resources .Shading ,_geaf );_gaeb .Resources .ExtGState =_gaf .mergeResources (_gaeb .Resources .ExtGState ,page .Resources .ExtGState ,_geaf );};_fbffa ,_dcgg :=_gaeb .GetMediaBox ();if _dcgg !=nil {return _dcgg ;};_bgdc ,_dcgg :=page .GetMediaBox ();if _dcgg !=nil {return _dcgg ;};var _fgge bool ;if _fbffa .Llx > _bgdc .Llx {_fbffa .Llx =_bgdc .Llx ;_fgge =true ;};if _fbffa .Lly > _bgdc .Lly {_fbffa .Lly =_bgdc .Lly ;_fgge =true ;};if _fbffa .Urx < _bgdc .Urx {_fbffa .Urx =_bgdc .Urx ;_fgge =true ;};if _fbffa .Ury < _bgdc .Ury {_fbffa .Ury =_bgdc .Ury ;_fgge =true ;};if _fgge {_gaeb .MediaBox =_fbffa ;};return nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bb .PdfObject ;FontFamily _bb .PdfObject ;FontStretch _bb .PdfObject ;FontWeight _bb .PdfObject ;Flags _bb .PdfObject ;FontBBox _bb .PdfObject ;ItalicAngle _bb .PdfObject ;Ascent _bb .PdfObject ;Descent _bb .PdfObject ;Leading _bb .PdfObject ;CapHeight _bb .PdfObject ;XHeight _bb .PdfObject ;StemV _bb .PdfObject ;StemH _bb .PdfObject ;AvgWidth _bb .PdfObject ;MaxWidth _bb .PdfObject ;MissingWidth _bb .PdfObject ;FontFile _bb .PdfObject ;FontFile2 _bb .PdfObject ;FontFile3 _bb .PdfObject ;CharSet _bb .PdfObject ;_dafb int ;_dgaa float64 ;*fontFile ;_efaga *_ca .TtfType ;

// Additional entries for CIDFonts
Style _bb .PdfObject ;Lang _bb .PdfObject ;FD _bb .PdfObject ;CIDSet _bb .PdfObject ;_cace *_bb .PdfIndirectObject ;};func (_adbd *PdfReader )loadAnnotations (_dbca _bb .PdfObject )([]*PdfAnnotation ,error ){_cccg ,_cbfd :=_bb .GetArray (_dbca );if !_cbfd {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _dabg []*PdfAnnotation ;for _ ,_eafg :=range _cccg .Elements (){_eafg =_bb .ResolveReference (_eafg );if _ ,_bedgd :=_eafg .(*_bb .PdfObjectNull );_bedgd {continue ;};_fgeba ,_cdff :=_eafg .(*_bb .PdfObjectDictionary );_fbaa ,_gadggc :=_eafg .(*_bb .PdfIndirectObject );if _cdff {_fbaa =&_bb .PdfIndirectObject {};_fbaa .PdfObject =_fgeba ;}else {if !_gadggc {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_gdfg ,_baga :=_adbd .newPdfAnnotationFromIndirectObject (_fbaa );if _baga !=nil {return nil ,_baga ;};switch _aecda :=_gdfg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_afgec :=range _adbd .AcroForm .AllFields (){if _afgec ._fdab ==_aecda .Parent {_aecda ._eafa =_afgec ;break ;};};};if _gdfg !=nil {_dabg =append (_dabg ,_gdfg );};};return _dabg ,nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject implements interface PdfModel.
func (_bceb *PdfAnnotationStamp )ToPdfObject ()_bb .PdfObject {_bceb .PdfAnnotation .ToPdfObject ();_gff :=_bceb ._afg ;_beb :=_gff .PdfObject .(*_bb .PdfObjectDictionary );_bceb .PdfAnnotationMarkup .appendToPdfDictionary (_beb );_beb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0074\u0061m\u0070"));_beb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bceb .Name );return _gff ;};func (_bcfb *PdfReader )newPdfAnnotationRedactFromDict (_acbbg *_bb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_dcbe :=PdfAnnotationRedact {};_fbaf ,_gdfc :=_bcfb .newPdfAnnotationMarkupFromDict (_acbbg );if _gdfc !=nil {return nil ,_gdfc ;};_dcbe .PdfAnnotationMarkup =_fbaf ;_dcbe .QuadPoints =_acbbg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_dcbe .IC =_acbbg .Get ("\u0049\u0043");_dcbe .RO =_acbbg .Get ("\u0052\u004f");_dcbe .OverlayText =_acbbg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_dcbe .Repeat =_acbbg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_dcbe .DA =_acbbg .Get ("\u0044\u0041");_dcbe .Q =_acbbg .Get ("\u0051");return &_dcbe ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cfdag int64 ;_dbebd int64 ;_bdda int64 ;_gaacb int64 ;_bgfdfd int64 ;_adab int64 ;_ebag byte ;_dfecd int64 ;_faeda int64 ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dgfda *PdfColorspaceCalGray )ToPdfObject ()_bb .PdfObject {_gfgc :=&_bb .PdfObjectArray {};_gfgc .Append (_bb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_ddfg :=_bb .MakeDict ();if _dgfda .WhitePoint !=nil {_ddfg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bb .MakeArray (_bb .MakeFloat (_dgfda .WhitePoint [0]),_bb .MakeFloat (_dgfda .WhitePoint [1]),_bb .MakeFloat (_dgfda .WhitePoint [2])));}else {_ggf .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dgfda .BlackPoint !=nil {_ddfg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bb .MakeArray (_bb .MakeFloat (_dgfda .BlackPoint [0]),_bb .MakeFloat (_dgfda .BlackPoint [1]),_bb .MakeFloat (_dgfda .BlackPoint [2])));};_ddfg .Set ("\u0047\u0061\u006dm\u0061",_bb .MakeFloat (_dgfda .Gamma ));_gfgc .Append (_ddfg );if _dgfda ._agfb !=nil {_dgfda ._agfb .PdfObject =_gfgc ;return _dgfda ._agfb ;};return _gfgc ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_dcaba *Image )ConvertToBinary ()error {if _dcaba .ColorComponents ==1&&_dcaba .BitsPerComponent ==1{return nil ;};_bgfeb ,_cgaee :=_dcaba .ToGoImage ();if _cgaee !=nil {return _cgaee ;};_fdfca ,_cgaee :=_fe .MonochromeConverter .Convert (_bgfeb );if _cgaee !=nil {return _cgaee ;};_dcaba .BitsPerComponent =1;_dcaba .ColorComponents =1;_dcaba .Data =_fdfca .Base ().Data ;return nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cbeb _ec .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_gbgcg _ce .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_daba _ce .Image )(*Image ,error );

// Compress an image.
Compress (_geebb *Image ,_cbdcf int64 )(*Image ,error );};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_fcda *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fcda .AlternateSpace ==nil {return nil ,_cca .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _fcda .AlternateSpace .ColorToRGB (color );};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_edcc :=NewPdfAnnotation ();_gbac :=&PdfAnnotationScreen {};_gbac .PdfAnnotation =_edcc ;_edcc .SetContext (_gbac );return _gbac ;};func _gdbg (_ddfc _bb .PdfObject )(*PdfBorderStyle ,error ){_gbc :=&PdfBorderStyle {};_gbc ._afda =_ddfc ;var _agbg *_bb .PdfObjectDictionary ;_ddfc =_bb .TraceToDirectObject (_ddfc );_agbg ,_feda :=_ddfc .(*_bb .PdfObjectDictionary );if !_feda {return nil ,_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _agc :=_agbg .Get ("\u0054\u0079\u0070\u0065");_agc !=nil {_bdge ,_gace :=_agc .(*_bb .PdfObjectName );if !_gace {_ggf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_agc );}else {if *_bdge !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ggf .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bdge );};};};if _aagd :=_agbg .Get ("\u0057");_aagd !=nil {_gcb ,_cdef :=_bb .GetNumberAsFloat (_aagd );if _cdef !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cdef );return nil ,_cdef ;};_gbc .W =&_gcb ;};if _dge :=_agbg .Get ("\u0053");_dge !=nil {_gbde ,_aead :=_dge .(*_bb .PdfObjectName );if !_aead {return nil ,_cca .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _dab BorderStyle ;switch *_gbde {case "\u0053":_dab =BorderStyleSolid ;case "\u0044":_dab =BorderStyleDashed ;case "\u0042":_dab =BorderStyleBeveled ;case "\u0049":_dab =BorderStyleInset ;case "\u0055":_dab =BorderStyleUnderline ;default:_ggf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gbde );return nil ,_cca .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_gbc .S =&_dab ;};if _efdf :=_agbg .Get ("\u0044");_efdf !=nil {_cdea ,_ddfb :=_efdf .(*_bb .PdfObjectArray );if !_ddfb {_ggf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_efdf );return nil ,_cca .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_fegd ,_fgcd :=_cdea .ToIntegerArray ();if _fgcd !=nil {_ggf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_fgcd );return nil ,_fgcd ;};_gbc .D =&_fegd ;};return _gbc ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_gfbg pdfFontSimple )GetCharMetrics (code _cefb .CharCode )(_ca .CharMetrics ,bool ){if _aaae ,_gffc :=_gfbg ._cbccg [code ];_gffc {return _ca .CharMetrics {Wx :_aaae },true ;};if _ca .IsStdFont (_ca .StdFontName (_gfbg ._babf )){return _ca .CharMetrics {Wx :250},true ;};return _ca .CharMetrics {},false ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_ffcgd FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_ffcgd .Mask ()|fl .Mask ())};

// ToPdfObject implements interface PdfModel.
func (_gee *PdfActionJavaScript )ToPdfObject ()_bb .PdfObject {_gee .PdfAction .ToPdfObject ();_af :=_gee ._bd ;_cadg :=_af .PdfObject .(*_bb .PdfObjectDictionary );_cadg .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeJavaScript )));_cadg .SetIfNotNil ("\u004a\u0053",_gee .JS );return _af ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebfbd *PdfColorspaceDeviceGray )ToPdfObject ()_bb .PdfObject {return _bb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fdac *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_bcb *PdfReader )newPdfActionRenditionFromDict (_aea *_bb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_aea .Get ("\u0052"),AN :_aea .Get ("\u0041\u004e"),OP :_aea .Get ("\u004f\u0050"),JS :_aea .Get ("\u004a\u0053")},nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_gaec *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bb .PdfObject ;PreserveRB _bb .PdfObject ;};var _acdcd =false ;

// ToPdfObject implements interface PdfModel.
func (_decb *PdfAnnotationPopup )ToPdfObject ()_bb .PdfObject {_decb .PdfAnnotation .ToPdfObject ();_fgde :=_decb ._afg ;_ebbeb :=_fgde .PdfObject .(*_bb .PdfObjectDictionary );_ebbeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0050\u006f\u0070u\u0070"));_ebbeb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_decb .Parent );_ebbeb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_decb .Open );return _fgde ;};var _bfcf ="";

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cgabf *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bb .StreamEncoder ,error ){_egaac ,_ffbd :=_cgabf ._egbda .(*_bb .PdfObjectStream );if !_ffbd {_ggf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgabf ._egbda );return nil ,nil ,_bb .ErrTypeError ;};_adegf ,_facbe :=_bb .DecodeStream (_egaac );if _facbe !=nil {_ggf .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_facbe );return nil ,nil ,_facbe ;};_efde ,_facbe :=_bb .NewEncoderFromStream (_egaac );if _facbe !=nil {_ggf .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_facbe );return nil ,nil ,_facbe ;};return _adegf ,_efde ,nil ;};

// ToInteger convert to an integer format.
func (_adbca *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_deag :=_cc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_deag *_adbca .A ()),uint32 (_deag *_adbca .B ()),uint32 (_deag *_adbca .C ())};};func (_caea *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _caea ._eagc .GetCrypter ()!=nil &&!_caea ._eagc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_cfcb :=_caea ._gdddd ;_eecgf :=_cfcb .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _eecgf ==nil {return nil ,nil ;};_ggf .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_gece :=_bb .ResolveReference (_eecgf );_ggf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_gece );if _eacfag :=_bb .IsNullObject (_gece );_eacfag {_ggf .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_gfaa ,_agga :=_gece .(*_bb .PdfIndirectObject );if !_agga {if _ ,_dcefd :=_bb .GetDict (_gece );!_dcefd {_ggf .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_ggf .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_gfaa =_bb .MakeIndirectObject (_gece );};_acgca ,_agga :=_gfaa .PdfObject .(*_bb .PdfObjectDictionary );if !_agga {return nil ,_cca .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_ggf .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_acgca );_fccdc ,_ ,_bcad :=_caea .buildOutlineTree (_gfaa ,nil ,nil ,nil );if _bcad !=nil {return nil ,_bcad ;};_ggf .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fccdc );return _fccdc ,nil ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_cdbeg *PdfPageResources )ToPdfObject ()_bb .PdfObject {_dfdec :=_cdbeg ._deffg ;_dfdec .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cdbeg .ExtGState );if _cdbeg ._aegg !=nil {_cdbeg .ColorSpace =_cdbeg ._aegg .ToPdfObject ();};_dfdec .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cdbeg .ColorSpace );_dfdec .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_cdbeg .Pattern );_dfdec .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cdbeg .Shading );_dfdec .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_cdbeg .XObject );_dfdec .SetIfNotNil ("\u0046\u006f\u006e\u0074",_cdbeg .Font );_dfdec .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_cdbeg .ProcSet );_dfdec .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_cdbeg .Properties );return _dfdec ;};

// SetBorderWidth sets the style's border width.
func (_aafgg *PdfBorderStyle )SetBorderWidth (width float64 ){_aafgg .W =&width };

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bggf *PdfPage )SetContentStreams (cStreams []string ,encoder _bb .StreamEncoder )error {if len (cStreams )==0{_bggf .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bb .NewRawEncoder ();};var _ebgea []*_bb .PdfObjectStream ;for _ ,_gedab :=range cStreams {_facac :=&_bb .PdfObjectStream {};_acfae :=encoder .MakeStreamDict ();_dccb ,_aafaf :=encoder .EncodeBytes ([]byte (_gedab ));if _aafaf !=nil {return _aafaf ;};_acfae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_dccb ))));_facac .PdfObjectDictionary =_acfae ;_facac .Stream =[]byte (_dccb );_ebgea =append (_ebgea ,_facac );};if len (_ebgea )==1{_bggf .Contents =_ebgea [0];}else {_eceeg :=_bb .MakeArray ();for _ ,_ggdgb :=range _ebgea {_eceeg .Append (_ggdgb );};_bggf .Contents =_eceeg ;};return nil ;};var (_gdcg =_a .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_dacb =_a .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_cbafb =_a .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_bbbe ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_bgcbd ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_febf ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gcff *PdfOutlineTreeNode )GetContext ()PdfModel {if _egdc ,_eeef :=_gcff ._acgdb .(*PdfOutline );_eeef {return _egdc ;};if _ddgca ,_aeeab :=_gcff ._acgdb .(*PdfOutlineItem );_aeeab {return _ddgca ;};_ggf .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_afdbb =producer };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dbbff *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_addca *PdfWriter )SetOptimizer (optimizer Optimizer ){_addca ._gfade =optimizer };

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_gggg *PdfFieldButton )GetType ()ButtonType {_adac :=ButtonTypeCheckbox ;if _gggg .Ff !=nil {if (uint32 (*_gggg .Ff )&FieldFlagPushbutton .Mask ())> 0{_adac =ButtonTypePush ;}else if (uint32 (*_gggg .Ff )&FieldFlagRadio .Mask ())> 0{_adac =ButtonTypeRadio ;};};return _adac ;};func (_gcecg *PdfWriter )copyObjects (){_fdaca :=make (map[_bb .PdfObject ]_bb .PdfObject );_debaa :=make ([]_bb .PdfObject ,0,len (_gcecg ._degca ));_gdcag :=make (map[_bb .PdfObject ]struct{},len (_gcecg ._degca ));_gdbcg :=make (map[_bb .PdfObject ]struct{});for _ ,_fcfeg :=range _gcecg ._degca {_dcedd :=_gcecg .copyObject (_fcfeg ,_fdaca ,_gdbcg ,false );if _ ,_ceccd :=_gdbcg [_fcfeg ];_ceccd {continue ;};_debaa =append (_debaa ,_dcedd );_gdcag [_dcedd ]=struct{}{};};_gcecg ._degca =_debaa ;_gcecg ._bfbgfd =_gdcag ;_gcecg ._bfefc =_gcecg .copyObject (_gcecg ._bfefc ,_fdaca ,nil ,false ).(*_bb .PdfIndirectObject );_gcecg ._effe =_gcecg .copyObject (_gcecg ._effe ,_fdaca ,nil ,false ).(*_bb .PdfIndirectObject );if _gcecg ._aecfg !=nil {_gcecg ._aecfg =_gcecg .copyObject (_gcecg ._aecfg ,_fdaca ,nil ,false ).(*_bb .PdfIndirectObject );};if _gcecg ._baae {_bgddb :=make (map[_bb .PdfObject ]int64 );for _cedaa ,_ggdbd :=range _gcecg ._bgacg {if _degff ,_cfcee :=_fdaca [_cedaa ];_cfcee {_bgddb [_degff ]=_ggdbd ;}else {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_gcecg ._bgacg =_bgddb ;};};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dgfg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dgfg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_deacac *PdfPage )AddContentStreamByString (contentStr string )error {_ceaeb ,_aafd :=_bb .MakeStream ([]byte (contentStr ),_bb .NewFlateEncoder ());if _aafd !=nil {return _aafd ;};if _deacac .Contents ==nil {_deacac .Contents =_ceaeb ;}else {_eeac :=_bb .TraceToDirectObject (_deacac .Contents );_dffc ,_eagf :=_eeac .(*_bb .PdfObjectArray );if !_eagf {_dffc =_bb .MakeArray (_eeac );};_dffc .Append (_ceaeb );_deacac .Contents =_dffc ;};return nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_aggd *PdfPageResources )GetXObjectFormByName (keyName _bb .PdfObjectName )(*XObjectForm ,error ){_fagdf ,_ageaa :=_aggd .GetXObjectByName (keyName );if _fagdf ==nil {return nil ,nil ;};if _ageaa !=XObjectTypeForm {return nil ,_cca .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_aafcd ,_bdeg :=NewXObjectFormFromStream (_fagdf );if _bdeg !=nil {return nil ,_bdeg ;};return _aafcd ,nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cefb .SimpleEncoder ,error ){_cccf ,_gdcd :=_ffdea (basefont );if _gdcd !=nil {return nil ,nil ,_gdcd ;};_gcaa ,_bfce :=_cccf .Encoder ().(_cefb .SimpleEncoder );if !_bfce {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cccf .Encoder ());};_dcga :=make (map[rune ]_cefb .GlyphName );for _cgae :=range alphabet {if _ ,_facc :=_gcaa .RuneToCharcode (_cgae );!_facc {_ ,_ede :=_cccf ._dgaac [_cgae ];if !_ede {_ggf .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_cgae ,_cgae );continue ;};_ggeb ,_ede :=_cefb .RuneToGlyph (_cgae );if !_ede {_ggf .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_cgae ,_cgae );continue ;};if len (_dcga )>=255{return nil ,nil ,_cca .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_dcga [_cgae ]=_ggeb ;};};var (_gcgec []_cefb .CharCode ;_accd []_cefb .CharCode ;);for _ecef :=_cefb .CharCode (1);_ecef <=0xff;_ecef ++{_fgcg ,_eacfa :=_gcaa .CharcodeToRune (_ecef );if !_eacfa {_gcgec =append (_gcgec ,_ecef );continue ;};if _ ,_eacfa =alphabet [_fgcg ];!_eacfa {_accd =append (_accd ,_ecef );};};_beab :=append (_gcgec ,_accd ...);if len (_beab )< len (_dcga ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dcga ),len (_beab ));};_fegdc :=make ([]rune ,0,len (_dcga ));for _bbfge :=range _dcga {_fegdc =append (_fegdc ,_bbfge );};_gg .Slice (_fegdc ,func (_ebdf ,_bgcgf int )bool {return _fegdc [_ebdf ]< _fegdc [_bgcgf ]});_ecdcd :=make (map[_cefb .CharCode ]_cefb .GlyphName ,len (_fegdc ));for _ ,_gfggf :=range _fegdc {_fadg :=_beab [0];_beab =_beab [1:];_ecdcd [_fadg ]=_dcga [_gfggf ];};_gcaa =_cefb .ApplyDifferences (_gcaa ,_ecdcd );_cccf .SetEncoder (_gcaa );return &PdfFont {_decag :&_cccf },_gcaa ,nil ;};func _ecbg (_acdfc _bb .PdfObject )(*PdfShading ,error ){_dddde :=&PdfShading {};var _eeea *_bb .PdfObjectDictionary ;if _gbbbf ,_acba :=_bb .GetIndirect (_acdfc );_acba {_dddde ._cggec =_gbbbf ;_cacfb ,_bdecg :=_gbbbf .PdfObject .(*_bb .PdfObjectDictionary );if !_bdecg {_ggf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bb .ErrTypeError ;};_eeea =_cacfb ;}else if _dacddg ,_ccbef :=_bb .GetStream (_acdfc );_ccbef {_dddde ._cggec =_dacddg ;_eeea =_dacddg .PdfObjectDictionary ;}else if _aeedc ,_cfcab :=_bb .GetDict (_acdfc );_cfcab {_dddde ._cggec =_aeedc ;_eeea =_aeedc ;}else {_ggf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_acdfc );return nil ,_bb .ErrTypeError ;};if _eeea ==nil {_ggf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_cca .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_acdfc =_eeea .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _acdfc ==nil {_ggf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_acdfc =_bb .TraceToDirectObject (_acdfc );_cdge ,_gaegg :=_acdfc .(*_bb .PdfObjectInteger );if !_gaegg {_ggf .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_acdfc );return nil ,_bb .ErrTypeError ;};if *_cdge < 1||*_cdge > 7{_ggf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_cdge );return nil ,_bb .ErrTypeError ;};_dddde .ShadingType =_cdge ;_acdfc =_eeea .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _acdfc ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ddgdd ,_ceaee :=NewPdfColorspaceFromPdfObject (_acdfc );if _ceaee !=nil {_ggf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ceaee );return nil ,_ceaee ;};_dddde .ColorSpace =_ddgdd ;_acdfc =_eeea .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _acdfc !=nil {_acdfc =_bb .TraceToDirectObject (_acdfc );_gfdc ,_fcdbe :=_acdfc .(*_bb .PdfObjectArray );if !_fcdbe {_ggf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_acdfc );return nil ,_bb .ErrTypeError ;};_dddde .Background =_gfdc ;};_acdfc =_eeea .Get ("\u0042\u0042\u006f\u0078");if _acdfc !=nil {_acdfc =_bb .TraceToDirectObject (_acdfc );_caccd ,_ffage :=_acdfc .(*_bb .PdfObjectArray );if !_ffage {_ggf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_acdfc );return nil ,_bb .ErrTypeError ;};_geegg ,_begb :=NewPdfRectangle (*_caccd );if _begb !=nil {_ggf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_begb );return nil ,_begb ;};_dddde .BBox =_geegg ;};_acdfc =_eeea .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _acdfc !=nil {_acdfc =_bb .TraceToDirectObject (_acdfc );_afbgb ,_ggffb :=_acdfc .(*_bb .PdfObjectBool );if !_ggffb {_ggf .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acdfc );return nil ,_bb .ErrTypeError ;};_dddde .AntiAlias =_afbgb ;};switch *_cdge {case 1:_acdea ,_fdffc :=_edfga (_eeea );if _fdffc !=nil {return nil ,_fdffc ;};_acdea .PdfShading =_dddde ;_dddde ._egfdb =_acdea ;return _dddde ,nil ;case 2:_ccgdd ,_fddcf :=_dcbc (_eeea );if _fddcf !=nil {return nil ,_fddcf ;};_ccgdd .PdfShading =_dddde ;_dddde ._egfdb =_ccgdd ;return _dddde ,nil ;case 3:_gage ,_fccaf :=_dgffde (_eeea );if _fccaf !=nil {return nil ,_fccaf ;};_gage .PdfShading =_dddde ;_dddde ._egfdb =_gage ;return _dddde ,nil ;case 4:_gebga ,_dfae :=_aaeaa (_eeea );if _dfae !=nil {return nil ,_dfae ;};_gebga .PdfShading =_dddde ;_dddde ._egfdb =_gebga ;return _dddde ,nil ;case 5:_cacg ,_bega :=_adbed (_eeea );if _bega !=nil {return nil ,_bega ;};_cacg .PdfShading =_dddde ;_dddde ._egfdb =_cacg ;return _dddde ,nil ;case 6:_ffedba ,_fbaee :=_acbg (_eeea );if _fbaee !=nil {return nil ,_fbaee ;};_ffedba .PdfShading =_dddde ;_dddde ._egfdb =_ffedba ;return _dddde ,nil ;case 7:_fbdgb ,_bgcbc :=_gagga (_eeea );if _bgcbc !=nil {return nil ,_bgcbc ;};_fbdgb .PdfShading =_dddde ;_dddde ._egfdb =_fbdgb ;return _dddde ,nil ;};return nil ,_cca .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bb .PdfObject ;A _bb .PdfObject ;SE _bb .PdfObject ;C _bb .PdfObject ;F _bb .PdfObject ;_becb *_bb .PdfIndirectObject ;};func (_gbff *pdfFontType0 )baseFields ()*fontCommon {return &_gbff .fontCommon };

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ecab *PdfAcroForm )ToPdfObject ()_bb .PdfObject {_fgdac :=_ecab ._cdfcga ;_gbcce :=_fgdac .PdfObject .(*_bb .PdfObjectDictionary );if _ecab .Fields !=nil {_gadf :=_bb .PdfObjectArray {};for _ ,_eacfae :=range *_ecab .Fields {_bgfad :=_eacfae .GetContext ();if _bgfad !=nil {_gadf .Append (_bgfad .ToPdfObject ());}else {_gadf .Append (_eacfae .ToPdfObject ());};};_gbcce .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_gadf );};if _ecab .NeedAppearances !=nil {_gbcce .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ecab .NeedAppearances );};if _ecab .SigFlags !=nil {_gbcce .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ecab .SigFlags );};if _ecab .CO !=nil {_gbcce .Set ("\u0043\u004f",_ecab .CO );};if _ecab .DR !=nil {_gbcce .Set ("\u0044\u0052",_ecab .DR .ToPdfObject ());};if _ecab .DA !=nil {_gbcce .Set ("\u0044\u0041",_ecab .DA );};if _ecab .Q !=nil {_gbcce .Set ("\u0051",_ecab .Q );};if _ecab .XFA !=nil {_gbcce .Set ("\u0058\u0046\u0041",_ecab .XFA );};return _fgdac ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_acag *PdfField )ToPdfObject ()_bb .PdfObject {_degf :=_acag ._fdab ;_ebbf :=_degf .PdfObject .(*_bb .PdfObjectDictionary );_bgga :=_bb .MakeArray ();for _ ,_gdbd :=range _acag .Kids {_bgga .Append (_gdbd .ToPdfObject ());};for _ ,_bbga :=range _acag .Annotations {if _bbga ._afg !=_acag ._fdab {_bgga .Append (_bbga .GetContext ().ToPdfObject ());};};if _acag .Parent !=nil {_ebbf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_acag .Parent .GetContainingPdfObject ());};if _bgga .Len ()> 0{_ebbf .Set ("\u004b\u0069\u0064\u0073",_bgga );};_ebbf .SetIfNotNil ("\u0046\u0054",_acag .FT );_ebbf .SetIfNotNil ("\u0054",_acag .T );_ebbf .SetIfNotNil ("\u0054\u0055",_acag .TU );_ebbf .SetIfNotNil ("\u0054\u004d",_acag .TM );_ebbf .SetIfNotNil ("\u0046\u0066",_acag .Ff );_ebbf .SetIfNotNil ("\u0056",_acag .V );_ebbf .SetIfNotNil ("\u0044\u0056",_acag .DV );_ebbf .SetIfNotNil ("\u0041\u0041",_acag .AA );return _degf ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_aagg :=NewPdfAnnotation ();_fbef :=&PdfAnnotationRedact {};_fbef .PdfAnnotation =_aagg ;_fbef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aagg .SetContext (_fbef );return _fbef ;};func _adffe (_bafd *PdfPage ){_agdcg :=_cef .GetLicenseKey ();if _agdcg !=nil &&_agdcg .IsLicensed (){return ;};_geebf :=_bb .PdfObjectName ("\u0055\u0046\u0031");if !_bafd .Resources .HasFontByName (_geebf ){_bafd .Resources .SetFontByName (_geebf ,DefaultFont ().ToPdfObject ());};var _dbgefg []string ;_dbgefg =append (_dbgefg ,"\u0071");_dbgefg =append (_dbgefg ,"\u0042\u0054");_dbgefg =append (_dbgefg ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_geebf .String ()));_dbgefg =append (_dbgefg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dbgefg =append (_dbgefg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_cbfb :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_dbgefg =append (_dbgefg ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_cbfb ));_dbgefg =append (_dbgefg ,"\u0045\u0054");_dbgefg =append (_dbgefg ,"\u0051");_ffbbg :=_gf .Join (_dbgefg ,"\u000a");_bafd .AddContentStreamByString (_ffbbg );_bafd .ToPdfObject ();};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_fegae *PdfPageResources )GetColorspaceByName (keyName _bb .PdfObjectName )(PdfColorspace ,bool ){_ffcdf ,_egag :=_fegae .GetColorspaces ();if _egag !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_egag );return nil ,false ;};if _ffcdf ==nil {return nil ,false ;};_dagedb ,_dbfeg :=_ffcdf .Colorspaces [string (keyName )];if !_dbfeg {return nil ,false ;};return _dagedb ,true ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eegf *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_eegf .Base .GetNumComponents ();_aadga :=int (vals [0])*N ;if _aadga < 0||(_aadga +N -1)>=len (_eegf ._bbcd ){return nil ,_cca .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_ccbg :=_eegf ._bbcd [_aadga :_aadga +N ];var _cfgc []float64 ;for _ ,_ccdbe :=range _ccbg {_cfgc =append (_cfgc ,float64 (_ccdbe )/255.0);};_gffb ,_eccc :=_eegf .Base .ColorFromFloats (_cfgc );if _eccc !=nil {return nil ,_eccc ;};return _gffb ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_ecfge PdfDate )ToGoTime ()_cd .Time {_gfgdd :=int (_ecfge ._dfecd *60*60+_ecfge ._faeda *60);switch _ecfge ._ebag {case '-':_gfgdd =-_gfgdd ;case 'Z':_gfgdd =0;};_gbbbgg :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ecfge ._ebag ,_ecfge ._dfecd ,_ecfge ._faeda );_ebffe :=_cd .FixedZone (_gbbbgg ,_gfgdd );return _cd .Date (int (_ecfge ._cfdag ),_cd .Month (_ecfge ._dbebd ),int (_ecfge ._bdda ),int (_ecfge ._gaacb ),int (_ecfge ._bgfdfd ),int (_ecfge ._adab ),0,_ebffe );};

// C returns the value of the C component of the color.
func (_egffe *PdfColorCalRGB )C ()float64 {return float64 (_egffe [2])};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bb .PdfObject ;H _bb .PdfObject ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ebefa ,_eedb :=_be .Open (filePath );if _eedb !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_eedb );return nil ,_eedb ;};defer _ebefa .Close ();return NewCompositePdfFontFromTTF (_ebefa );};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;IC _bb .PdfObject ;RO _bb .PdfObject ;OverlayText _bb .PdfObject ;Repeat _bb .PdfObject ;DA _bb .PdfObject ;Q _bb .PdfObject ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ad .Permissions ;Algorithm EncryptionAlgorithm ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cfag *PdfReader )IsEncrypted ()(bool ,error ){return _cfag ._eagc .IsEncrypted ()};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ecdcc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func (_aafb *pdfCIDFontType2 )baseFields ()*fontCommon {return &_aafb .fontCommon };

// Items returns all children outline items.
func (_gecc *OutlineItem )Items ()[]*OutlineItem {return _gecc .Entries };const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func _gecfe (_ccbab _bb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_afef :=NewPdfColorspaceSpecialSeparation ();if _cfce ,_dgca :=_ccbab .(*_bb .PdfIndirectObject );_dgca {_afef ._gafc =_cfce ;};_ccbab =_bb .TraceToDirectObject (_ccbab );_cdga ,_fbbf :=_ccbab .(*_bb .PdfObjectArray );if !_fbbf {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _cdga .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_ccbab =_cdga .Get (0);_efff ,_fbbf :=_ccbab .(*_bb .PdfObjectName );if !_fbbf {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_efff !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_ccbab =_cdga .Get (1);_efff ,_fbbf =_ccbab .(*_bb .PdfObjectName );if !_fbbf {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_afef .ColorantName =_efff ;_ccbab =_cdga .Get (2);_ggec ,_geba :=NewPdfColorspaceFromPdfObject (_ccbab );if _geba !=nil {return nil ,_geba ;};_afef .AlternateSpace =_ggec ;_aeba ,_geba :=_cdgbg (_cdga .Get (3));if _geba !=nil {return nil ,_geba ;};_afef .TintTransform =_aeba ;return _afef ,nil ;};func (_dbde *PdfReader )newPdfAnnotationProjectionFromDict (_geb *_bb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fee :=&PdfAnnotationProjection {};_acfb ,_fgce :=_dbde .newPdfAnnotationMarkupFromDict (_geb );if _fgce !=nil {return nil ,_fgce ;};_fee .PdfAnnotationMarkup =_acfb ;return _fee ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bb .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_efd *PdfAnnotationProjection )ToPdfObject ()_bb .PdfObject {_efd .PdfAnnotation .ToPdfObject ();_ffgb :=_efd ._afg ;_bafcf :=_ffgb .PdfObject .(*_bb .PdfObjectDictionary );_efd .PdfAnnotationMarkup .appendToPdfDictionary (_bafcf );return _ffgb ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_agfdb *_bb .PdfIndirectObject ;};func (_bfba *PdfReader )newPdfActionSoundFromDict (_abe *_bb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_abe .Get ("\u0053\u006f\u0075n\u0064"),Volume :_abe .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_abe .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_abe .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_abe .Get ("\u004d\u0069\u0078")},nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_aacc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_gcd *PdfReader )newPdfAnnotationScreenFromDict (_cfd *_bb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_gad :=PdfAnnotationScreen {};_gad .T =_cfd .Get ("\u0054");_gad .MK =_cfd .Get ("\u004d\u004b");_gad .A =_cfd .Get ("\u0041");_gad .AA =_cfd .Get ("\u0041\u0041");return &_gad ,nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_agb :=NewPdfAction ();_ggbg :=&PdfActionThread {};_ggbg .PdfAction =_agb ;_agb .SetContext (_ggbg );return _ggbg ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_bdcb *PdfPage )ToPdfObject ()_bb .PdfObject {_fbaed :=_bdcb ._bbacd ;_bdcb .GetPageDict ();return _fbaed ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_fd PdfModel ;Type _bb .PdfObject ;S _bb .PdfObject ;Next _bb .PdfObject ;_bd *_bb .PdfIndirectObject ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// ToPdfObject implements interface PdfModel.
func (_fb *PdfActionURI )ToPdfObject ()_bb .PdfObject {_fb .PdfAction .ToPdfObject ();_fa :=_fb ._bd ;_fdd :=_fa .PdfObject .(*_bb .PdfObjectDictionary );_fdd .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeURI )));_fdd .SetIfNotNil ("\u0055\u0052\u0049",_fb .URI );_fdd .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fb .IsMap );return _fa ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_caabd :=&XObjectForm {};_aggb :=&_bb .PdfObjectStream {};_aggb .PdfObjectDictionary =_bb .MakeDict ();_caabd ._cfdbb =_aggb ;return _caabd ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gfdbe *PdfPattern )GetContext ()PdfModel {return _gfdbe ._abfca };

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_bef .PSProgram ;_cagc *_bef .PSExecutor ;_cebfb []byte ;_ccafg *_bb .PdfObjectStream ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_efeb :=&PdfAppender {_eegd :reader ._fgeaf ,Reader :reader ,_acfe :reader ._eagc ,_ebcc :reader ._ecba };_gacb ,_fdga :=_efeb ._eegd .Seek (0,_ec .SeekEnd );if _fdga !=nil {return nil ,_fdga ;};_efeb ._aagc =_gacb ;if _ ,_fdga =_efeb ._eegd .Seek (0,_ec .SeekStart );_fdga !=nil {return nil ,_fdga ;};_efeb ._cdfd ,_fdga =NewPdfReader (_efeb ._eegd );if _fdga !=nil {return nil ,_fdga ;};for _ ,_ggaf :=range _efeb .Reader .GetObjectNums (){if _efeb ._bgae < _ggaf {_efeb ._bgae =_ggaf ;};};_efeb ._dgff =_efeb ._acfe .GetXrefTable ();_efeb ._egdf =_efeb ._acfe .GetXrefOffset ();_efeb ._gcdg =make (map[_bb .PdfObject ]struct{});for _ ,_gdg :=range _efeb ._cdfd .PageList {_efeb ._fabc =append (_efeb ._fabc ,_gdg );};_efeb ._bbed =make (map[_bb .PdfObject ]int64 );_efeb ._bccff =make (map[_bb .PdfObject ]struct{});_efeb ._afcfa =_efeb ._cdfd .AcroForm ;return _efeb ,nil ;};func _acbd (_babb _bb .PdfObject )(*PdfFunctionType2 ,error ){_fcad :=&PdfFunctionType2 {};var _bffd *_bb .PdfObjectDictionary ;if _bfged ,_cgfcc :=_babb .(*_bb .PdfIndirectObject );_cgfcc {_cbfcd ,_bgbg :=_bfged .PdfObject .(*_bb .PdfObjectDictionary );if !_bgbg {return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcad ._baeac =_bfged ;_bffd =_cbfcd ;}else if _fddaf ,_aeeae :=_babb .(*_bb .PdfObjectDictionary );_aeeae {_bffd =_fddaf ;}else {return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggf .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_bffd .String ());_fgbdd ,_edfbg :=_bb .TraceToDirectObject (_bffd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );if !_edfbg {_ggf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fgbdd .Len ()< 0||_fgbdd .Len ()%2!=0{_ggf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_cca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_afccc ,_bgefff :=_fgbdd .ToFloat64Array ();if _bgefff !=nil {return nil ,_bgefff ;};_fcad .Domain =_afccc ;_fgbdd ,_edfbg =_bb .TraceToDirectObject (_bffd .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if _edfbg {if _fgbdd .Len ()< 0||_fgbdd .Len ()%2!=0{return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebccbf ,_gdbae :=_fgbdd .ToFloat64Array ();if _gdbae !=nil {return nil ,_gdbae ;};_fcad .Range =_ebccbf ;};_fgbdd ,_edfbg =_bb .TraceToDirectObject (_bffd .Get ("\u0043\u0030")).(*_bb .PdfObjectArray );if _edfbg {_ebbfc ,_aeeeg :=_fgbdd .ToFloat64Array ();if _aeeeg !=nil {return nil ,_aeeeg ;};_fcad .C0 =_ebbfc ;};_fgbdd ,_edfbg =_bb .TraceToDirectObject (_bffd .Get ("\u0043\u0031")).(*_bb .PdfObjectArray );if _edfbg {_fddga ,_gebd :=_fgbdd .ToFloat64Array ();if _gebd !=nil {return nil ,_gebd ;};_fcad .C1 =_fddga ;};if len (_fcad .C0 )!=len (_fcad .C1 ){_ggf .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_bb .ErrRangeError ;};N ,_bgefff :=_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_bffd .Get ("\u004e")));if _bgefff !=nil {_ggf .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_bffd .String ());return nil ,_bgefff ;};_fcad .N =N ;return _fcad ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dcedf *PdfFilespec )GetContainingPdfObject ()_bb .PdfObject {return _dcedf ._dgdeg };func (_aedce *Image )samplesTrimPadding (_ddga []uint32 )[]uint32 {_acee :=_aedce .ColorComponents *int (_aedce .Width )*int (_aedce .Height );if len (_ddga )==_acee {return _ddga ;};_cged :=make ([]uint32 ,_acee );_bcfc :=int (_aedce .Width )*_aedce .ColorComponents ;var _edgcf ,_gdfe ,_gbab ,_bdecb int ;_gagd :=_fe .BytesPerLine (int (_aedce .Width ),int (_aedce .BitsPerComponent ),_aedce .ColorComponents );for _edgcf =0;_edgcf < int (_aedce .Height );_edgcf ++{_gdfe =_edgcf *int (_aedce .Width );_gbab =_edgcf *_gagd ;for _bdecb =0;_bdecb < _bcfc ;_bdecb ++{_cged [_gdfe +_bdecb ]=_ddga [_gbab +_bdecb ];};};return _cged ;};

// HasExtGState checks if ExtGState name is available.
func (_bafg *PdfPage )HasExtGState (name _bb .PdfObjectName )bool {if _bafg .Resources ==nil {return false ;};if _bafg .Resources .ExtGState ==nil {return false ;};_dfad ,_dbbc :=_bb .TraceToDirectObject (_bafg .Resources .ExtGState ).(*_bb .PdfObjectDictionary );if !_dbbc {_ggf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bb .TraceToDirectObject (_bafg .Resources .ExtGState ));return false ;};_dbaec :=_dfad .Get (name );_gaacc :=_dbaec !=nil ;return _gaacc ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_baec :=PdfColorCalRGB {a ,b ,c };return &_baec ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bb .PdfObject ;Contents _bb .PdfObject ;Rotate *int64 ;Group _bb .PdfObject ;Thumb _bb .PdfObject ;B _bb .PdfObject ;Dur _bb .PdfObject ;Trans _bb .PdfObject ;AA _bb .PdfObject ;Metadata _bb .PdfObject ;PieceInfo _bb .PdfObject ;StructParents _bb .PdfObject ;ID _bb .PdfObject ;PZ _bb .PdfObject ;SeparationInfo _bb .PdfObject ;Tabs _bb .PdfObject ;TemplateInstantiated _bb .PdfObject ;PresSteps _bb .PdfObject ;UserUnit _bb .PdfObject ;VP _bb .PdfObject ;Annots _bb .PdfObject ;_bgaf []*PdfAnnotation ;_bfeaf *_bb .PdfObjectDictionary ;_bbacd *_bb .PdfIndirectObject ;_debb *PdfReader ;};func (_cagf *PdfReader )newPdfAnnotationStrikeOut (_efegf *_bb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_efge :=PdfAnnotationStrikeOut {};_afcfc ,_ega :=_cagf .newPdfAnnotationMarkupFromDict (_efegf );if _ega !=nil {return nil ,_ega ;};_efge .PdfAnnotationMarkup =_afcfc ;_efge .QuadPoints =_efegf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_efge ,nil ;};func _bfeae (_agba *[]*PdfField ,_cbdg FieldFilterFunc ,_bcdga bool )[]*PdfField {if _agba ==nil {return nil ;};_fdfb :=*_agba ;if len (*_agba )==0{return nil ;};_cdbag :=_fdfb [:0];if _cbdg ==nil {_cbdg =func (*PdfField )bool {return true };};var _cedb []*PdfField ;for _ ,_fegf :=range _fdfb {_bbcb :=_cbdg (_fegf );if _bbcb {_cedb =append (_cedb ,_fegf );if len (_fegf .Kids )> 0{_cedb =append (_cedb ,_bfeae (&_fegf .Kids ,_cbdg ,_bcdga )...);};};if !_bcdga ||!_bbcb ||len (_fegf .Kids )> 0{_cdbag =append (_cdbag ,_fegf );};};*_agba =_cdbag ;return _cedb ;};func _dbdbc (_ggdg _bb .PdfObject )(*PdfColorspaceCalGray ,error ){_fgbg :=NewPdfColorspaceCalGray ();if _bdaa ,_fcfe :=_ggdg .(*_bb .PdfIndirectObject );_fcfe {_fgbg ._agfb =_bdaa ;};_ggdg =_bb .TraceToDirectObject (_ggdg );_faf ,_faca :=_ggdg .(*_bb .PdfObjectArray );if !_faca {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _faf .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ggdg =_bb .TraceToDirectObject (_faf .Get (0));_bfcaa ,_faca :=_ggdg .(*_bb .PdfObjectName );if !_faca {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bfcaa !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_ggdg =_bb .TraceToDirectObject (_faf .Get (1));_ddgc ,_faca :=_ggdg .(*_bb .PdfObjectDictionary );if !_faca {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_ggdg =_ddgc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ggdg =_bb .TraceToDirectObject (_ggdg );_adgb ,_faca :=_ggdg .(*_bb .PdfObjectArray );if !_faca {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _adgb .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ebce ,_gfgf :=_adgb .GetAsFloat64Slice ();if _gfgf !=nil {return nil ,_gfgf ;};_fgbg .WhitePoint =_ebce ;_ggdg =_ddgc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ggdg !=nil {_ggdg =_bb .TraceToDirectObject (_ggdg );_bebdf ,_ffeff :=_ggdg .(*_bb .PdfObjectArray );if !_ffeff {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _bebdf .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_bedb ,_daab :=_bebdf .GetAsFloat64Slice ();if _daab !=nil {return nil ,_daab ;};_fgbg .BlackPoint =_bedb ;};_ggdg =_ddgc .Get ("\u0047\u0061\u006dm\u0061");if _ggdg !=nil {_ggdg =_bb .TraceToDirectObject (_ggdg );_ccgb ,_dcgge :=_bb .GetNumberAsFloat (_ggdg );if _dcgge !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fgbg .Gamma =_ccgb ;};return _fgbg ,nil ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_edg *PdfActionGoToE )ToPdfObject ()_bb .PdfObject {_edg .PdfAction .ToPdfObject ();_gdc :=_edg ._bd ;_gae :=_gdc .PdfObject .(*_bb .PdfObjectDictionary );_gae .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoToE )));if _edg .F !=nil {_gae .Set ("\u0046",_edg .F .ToPdfObject ());};_gae .SetIfNotNil ("\u0044",_edg .D );_gae .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_edg .NewWindow );_gae .SetIfNotNil ("\u0054",_edg .T );return _gdc ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cad :=NewPdfAction ();_aa :=&PdfActionMovie {};_aa .PdfAction =_cad ;_cad .SetContext (_aa );return _aa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_adbc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adde ,_abeg :=_bb .GetNumbersAsFloat (objects );if _abeg !=nil {return nil ,_abeg ;};return _adbc .ColorFromFloats (_adde );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bb .PdfObjectStream )(*XObjectImage ,error ){_bggge :=&XObjectImage {};_bggge ._dddb =stream ;_deaee :=*(stream .PdfObjectDictionary );_fafff ,_bggccb :=_bb .NewEncoderFromStream (stream );if _bggccb !=nil {return nil ,_bggccb ;};_bggge .Filter =_fafff ;if _gdac :=_bb .TraceToDirectObject (_deaee .Get ("\u0057\u0069\u0064t\u0068"));_gdac !=nil {_bedef ,_agcb :=_gdac .(*_bb .PdfObjectInteger );if !_agcb {return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_caafb :=int64 (*_bedef );_bggge .Width =&_caafb ;}else {return nil ,_cca .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gggcb :=_bb .TraceToDirectObject (_deaee .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_gggcb !=nil {_aafebc ,_gedda :=_gggcb .(*_bb .PdfObjectInteger );if !_gedda {return nil ,_cca .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dcebd :=int64 (*_aafebc );_bggge .Height =&_dcebd ;}else {return nil ,_cca .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _cccade :=_bb .TraceToDirectObject (_deaee .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_cccade !=nil {_cadgc ,_dbfec :=NewPdfColorspaceFromPdfObject (_cccade );if _dbfec !=nil {return nil ,_dbfec ;};_bggge .ColorSpace =_cadgc ;}else {_ggf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_bggge .ColorSpace =NewPdfColorspaceDeviceGray ();};if _efgaeb :=_bb .TraceToDirectObject (_deaee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_efgaeb !=nil {_agda ,_gcaca :=_efgaeb .(*_bb .PdfObjectInteger );if !_gcaca {return nil ,_cca .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_accdd :=int64 (*_agda );_bggge .BitsPerComponent =&_accdd ;};_bggge .Intent =_deaee .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_bggge .ImageMask =_deaee .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_bggge .Mask =_deaee .Get ("\u004d\u0061\u0073\u006b");_bggge .Decode =_deaee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_bggge .Interpolate =_deaee .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_bggge .Alternatives =_deaee .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_bggge .SMask =_deaee .Get ("\u0053\u004d\u0061s\u006b");_bggge .SMaskInData =_deaee .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_bggge .Matte =_deaee .Get ("\u004d\u0061\u0074t\u0065");_bggge .Name =_deaee .Get ("\u004e\u0061\u006d\u0065");_bggge .StructParent =_deaee .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bggge .ID =_deaee .Get ("\u0049\u0044");_bggge .OPI =_deaee .Get ("\u004f\u0050\u0049");_bggge .Metadata =_deaee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bggge .OC =_deaee .Get ("\u004f\u0043");_bggge .Stream =stream .Stream ;return _bggge ,nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_fccg *PdfPageResources )GetContainingPdfObject ()_bb .PdfObject {return _fccg ._deffg };

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bb .PdfObject ;_bbcd []byte ;_ffea *_bb .PdfIndirectObject ;};

// ReplacePage replaces the original page to a new page.
func (_ecfd *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_bfabc :=pageNum -1;for _adgf :=range _ecfd ._fabc {if _adgf ==_bfabc {_ddce :=page .Duplicate ();_adffe (_ddce );_ecfd ._fabc [_adgf ]=_ddce ;};};};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_afbdg *PdfAppender )UpdatePage (page *PdfPage ){_afbdg .updateObjectsDeep (page .ToPdfObject (),nil );};func (_bac *PdfReader )newPdfActionThreadFromDict (_agbb *_bb .PdfObjectDictionary )(*PdfActionThread ,error ){_ebf ,_fad :=_edfed (_agbb .Get ("\u0046"));if _fad !=nil {return nil ,_fad ;};return &PdfActionThread {D :_agbb .Get ("\u0044"),B :_agbb .Get ("\u0042"),F :_ebf },nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cecg *_bb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbe *PdfAnnotationSquare )ToPdfObject ()_bb .PdfObject {_bbe .PdfAnnotation .ToPdfObject ();_gecb :=_bbe ._afg ;_cdf :=_gecb .PdfObject .(*_bb .PdfObjectDictionary );if _bbe .PdfAnnotationMarkup !=nil {_bbe .PdfAnnotationMarkup .appendToPdfDictionary (_cdf );};_cdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_cdf .SetIfNotNil ("\u0042\u0053",_bbe .BS );_cdf .SetIfNotNil ("\u0049\u0043",_bbe .IC );_cdf .SetIfNotNil ("\u0042\u0045",_bbe .BE );_cdf .SetIfNotNil ("\u0052\u0044",_bbe .RD );return _gecb ;};

// ToInteger convert to an integer format.
func (_gacg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_deg :=_cc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_deg *_gacg .R ()),uint32 (_deg *_gacg .G ()),uint32 (_deg *_gacg .B ())};};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bb .StreamEncoder ;Intent _bb .PdfObject ;ImageMask _bb .PdfObject ;Mask _bb .PdfObject ;Matte _bb .PdfObject ;Decode _bb .PdfObject ;Interpolate _bb .PdfObject ;Alternatives _bb .PdfObject ;SMask _bb .PdfObject ;SMaskInData _bb .PdfObject ;Name _bb .PdfObject ;StructParent _bb .PdfObject ;ID _bb .PdfObject ;OPI _bb .PdfObject ;Metadata _bb .PdfObject ;OC _bb .PdfObject ;Stream []byte ;_dddb *_bb .PdfObjectStream ;};func (_ggga *PdfReader )newPdfAnnotationPolygonFromDict (_add *_bb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_gfde :=PdfAnnotationPolygon {};_ffb ,_gbgd :=_ggga .newPdfAnnotationMarkupFromDict (_add );if _gbgd !=nil {return nil ,_gbgd ;};_gfde .PdfAnnotationMarkup =_ffb ;_gfde .Vertices =_add .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gfde .LE =_add .Get ("\u004c\u0045");_gfde .BS =_add .Get ("\u0042\u0053");_gfde .IC =_add .Get ("\u0049\u0043");_gfde .BE =_add .Get ("\u0042\u0045");_gfde .IT =_add .Get ("\u0049\u0054");_gfde .Measure =_add .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gfde ,nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gagfg *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gagfg ._abfca .(*PdfShadingPattern );};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_dcbcb *PdfWriter )AddPage (page *PdfPage )error {_adffe (page );_dbebac :=page .ToPdfObject ();_ggf .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_ggf .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_dbebac );_fggeg ,_cfde :=_bb .GetIndirect (_dbebac );if !_cfde {return _cca .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_ggf .Log .Trace ("\u0025\u0073",_fggeg );_ggf .Log .Trace ("\u0025\u0073",_fggeg .PdfObject );_cggaf ,_cfde :=_bb .GetDict (_fggeg .PdfObject );if !_cfde {return _cca .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_deedc ,_cfde :=_bb .GetName (_cggaf .Get ("\u0054\u0079\u0070\u0065"));if !_cfde {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cggaf .Get ("\u0054\u0079\u0070\u0065"));};if _deedc .String ()!="\u0050\u0061\u0067\u0065"{return _cca .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_aecdd :=[]_bb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_ccege ,_gbcab :=_bb .GetIndirect (_cggaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ggf .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cggaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_gbcab );for _gbcab {_ggf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccege );_degg ,_fgba :=_bb .GetDict (_ccege .PdfObject );if !_fgba {return _cca .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_aggab :=range _aecdd {_ggf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_aggab );if _cggaf .Get (_aggab )!=nil {_ggf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _fedda :=_degg .Get (_aggab );_fedda !=nil {_ggf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_aggab );_cggaf .Set (_aggab ,_fedda );};};_ccege ,_gbcab =_bb .GetIndirect (_degg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ggf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_degg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ggf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_cggaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcbcb ._ggda );_fggeg .PdfObject =_cggaf ;_cddfbd ,_cfde :=_bb .GetDict (_dcbcb ._ggda .PdfObject );if !_cfde {return _cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_begag ,_cfde :=_bb .GetArray (_cddfbd .Get ("\u004b\u0069\u0064\u0073"));if !_cfde {return _cca .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_begag .Append (_fggeg );_dcbcb ._aaeac [_cggaf ]=struct{}{};_eggae ,_cfde :=_bb .GetInt (_cddfbd .Get ("\u0043\u006f\u0075n\u0074"));if !_cfde {return _cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_eggae =*_eggae +1;_dcbcb .addObject (_fggeg );_cafbc :=_dcbcb .addObjects (_cggaf );if _cafbc !=nil {return _cafbc ;};return nil ;};

// SetImage updates XObject Image with new image data.
func (_dedb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_dedb .Filter .UpdateParams (img .GetParamsDict ());_aeac ,_debge :=_dedb .Filter .EncodeBytes (img .Data );if _debge !=nil {return _debge ;};_dedb .Stream =_aeac ;_ggfa :=img .Width ;_dedb .Width =&_ggfa ;_bgecce :=img .Height ;_dedb .Height =&_bgecce ;_eeebf :=img .BitsPerComponent ;_dedb .BitsPerComponent =&_eeebf ;if cs ==nil {if img .ColorComponents ==1{_dedb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dedb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dedb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _cca .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dedb .ColorSpace =cs ;};return nil ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_faaf :=&PdfColorspaceCalGray {};_faaf .BlackPoint =[]float64 {0.0,0.0,0.0};_faaf .Gamma =1;return _faaf ;};

// WriteToFile writes the Appender output to file specified by path.
func (_gada *PdfAppender )WriteToFile (outputPath string )error {_fbcb ,_bed :=_be .Create (outputPath );if _bed !=nil {return _bed ;};defer _fbcb .Close ();return _gada .Write (_fbcb );};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gded *PdfShading )GetContext ()PdfModel {return _gded ._egfdb };func _edfga (_bcbg *_bb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_ggeda :=PdfShadingType1 {};if _ggbac :=_bcbg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggbac !=nil {_ggbac =_bb .TraceToDirectObject (_ggbac );_fegfb ,_bfcdg :=_ggbac .(*_bb .PdfObjectArray );if !_bfcdg {_ggf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggbac );return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggeda .Domain =_fegfb ;};if _fabgg :=_bcbg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fabgg !=nil {_fabgg =_bb .TraceToDirectObject (_fabgg );_bdbf ,_geeeb :=_fabgg .(*_bb .PdfObjectArray );if !_geeeb {_ggf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fabgg );return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggeda .Matrix =_bdbf ;};_ccegad :=_bcbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ccegad ==nil {_ggf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ggeda .Function =[]PdfFunction {};if _bfaed ,_dbgc :=_ccegad .(*_bb .PdfObjectArray );_dbgc {for _ ,_bdcef :=range _bfaed .Elements (){_dcgef ,_cbfag :=_cdgbg (_bdcef );if _cbfag !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbfag );return nil ,_cbfag ;};_ggeda .Function =append (_ggeda .Function ,_dcgef );};}else {_afbaf ,_gbbcgc :=_cdgbg (_ccegad );if _gbbcgc !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbbcgc );return nil ,_gbbcgc ;};_ggeda .Function =append (_ggeda .Function ,_afbaf );};return &_ggeda ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bb .PdfObject ,error );};

// ToPdfObject implements interface PdfModel.
func (_bdf *PdfAnnotationPolyLine )ToPdfObject ()_bb .PdfObject {_bdf .PdfAnnotation .ToPdfObject ();_bab :=_bdf ._afg ;_fag :=_bab .PdfObject .(*_bb .PdfObjectDictionary );_bdf .PdfAnnotationMarkup .appendToPdfDictionary (_fag );_fag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_fag .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bdf .Vertices );_fag .SetIfNotNil ("\u004c\u0045",_bdf .LE );_fag .SetIfNotNil ("\u0042\u0053",_bdf .BS );_fag .SetIfNotNil ("\u0049\u0043",_bdf .IC );_fag .SetIfNotNil ("\u0042\u0045",_bdf .BE );_fag .SetIfNotNil ("\u0049\u0054",_bdf .IT );_fag .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bdf .Measure );return _bab ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_bgfdf *pdfCIDFontType2 )ToPdfObject ()_bb .PdfObject {if _bgfdf ._ccga ==nil {_bgfdf ._ccga =&_bb .PdfIndirectObject {};};_cdfcg :=_bgfdf .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_bgfdf ._ccga .PdfObject =_cdfcg ;if _bgfdf .CIDSystemInfo !=nil {_cdfcg .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_bgfdf .CIDSystemInfo );};if _bgfdf .DW !=nil {_cdfcg .Set ("\u0044\u0057",_bgfdf .DW );};if _bgfdf .DW2 !=nil {_cdfcg .Set ("\u0044\u0057\u0032",_bgfdf .DW2 );};if _bgfdf .W !=nil {_cdfcg .Set ("\u0057",_bgfdf .W );};if _bgfdf .W2 !=nil {_cdfcg .Set ("\u0057\u0032",_bgfdf .W2 );};if _bgfdf .CIDToGIDMap !=nil {_cdfcg .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_bgfdf .CIDToGIDMap );};return _bgfdf ._ccga ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_fede *pdfFontSimple )SetEncoder (encoder _cefb .TextEncoder ){_fede ._ggff =encoder };

// ToInteger convert to an integer format.
func (_ffcf *PdfColorLab )ToInteger (bits int )[3]uint32 {_gbgg :=_cc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gbgg *_ffcf .L ()),uint32 (_gbgg *_ffcf .A ()),uint32 (_gbgg *_ffcf .B ())};};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_daa *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebcbf :=vals [0];if _ebcbf < 0.0||_ebcbf > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dded :=vals [1];if _dded < 0.0||_dded > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccda :=vals [2];if _ccda < 0.0||_ccda > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acff :=vals [3];if _acff < 0.0||_acff > 1.0{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bggd :=NewPdfColorDeviceCMYK (_ebcbf ,_dded ,_ccda ,_acff );return _bggd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_cbfca *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fcdeg *Image )Resample (targetBitsPerComponent int64 ){if _fcdeg .BitsPerComponent ==targetBitsPerComponent {return ;};_caaf :=_fcdeg .GetSamples ();if targetBitsPerComponent < _fcdeg .BitsPerComponent {_fgcge :=_fcdeg .BitsPerComponent -targetBitsPerComponent ;for _cebg :=range _caaf {_caaf [_cebg ]>>=uint (_fgcge );};}else if targetBitsPerComponent > _fcdeg .BitsPerComponent {_aeag :=targetBitsPerComponent -_fcdeg .BitsPerComponent ;for _ffffc :=range _caaf {_caaf [_ffffc ]<<=uint (_aeag );};};_fcdeg .BitsPerComponent =targetBitsPerComponent ;if _fcdeg .BitsPerComponent < 8{_fcdeg .resampleLowBits (_caaf );return ;};_bgce :=_fe .BytesPerLine (int (_fcdeg .Width ),int (_fcdeg .BitsPerComponent ),_fcdeg .ColorComponents );_efed :=make ([]byte ,_bgce *int (_fcdeg .Height ));var (_bgffb ,_ecgdd ,_edaf ,_cbcd int ;_fbdbgf uint32 ;);for _edaf =0;_edaf < int (_fcdeg .Height );_edaf ++{_bgffb =_edaf *_bgce ;_ecgdd =(_edaf +1)*_bgce -1;_degad :=_cg .ResampleUint32 (_caaf [_bgffb :_ecgdd ],int (targetBitsPerComponent ),8);for _cbcd ,_fbdbgf =range _degad {_efed [_cbcd +_bgffb ]=byte (_fbdbgf );};};_fcdeg .Data =_efed ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_acbb :=NewPdfAction ();_ggb :=&PdfActionLaunch {};_ggb .PdfAction =_acbb ;_acbb .SetContext (_ggb );return _ggb ;};func (_ebb *PdfReader )newPdfAnnotationFreeTextFromDict (_ecbd *_bb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_beebe :=PdfAnnotationFreeText {};_dde ,_afe :=_ebb .newPdfAnnotationMarkupFromDict (_ecbd );if _afe !=nil {return nil ,_afe ;};_beebe .PdfAnnotationMarkup =_dde ;_beebe .DA =_ecbd .Get ("\u0044\u0041");_beebe .Q =_ecbd .Get ("\u0051");_beebe .RC =_ecbd .Get ("\u0052\u0043");_beebe .DS =_ecbd .Get ("\u0044\u0053");_beebe .CL =_ecbd .Get ("\u0043\u004c");_beebe .IT =_ecbd .Get ("\u0049\u0054");_beebe .BE =_ecbd .Get ("\u0042\u0045");_beebe .RD =_ecbd .Get ("\u0052\u0044");_beebe .BS =_ecbd .Get ("\u0042\u0053");_beebe .LE =_ecbd .Get ("\u004c\u0045");return &_beebe ,nil ;};var _ceac =_a .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abbbd *PdfShading )ToPdfObject ()_bb .PdfObject {_abfaaf :=_abbbd ._cggec ;_abbae ,_accaf :=_abbbd .getShadingDict ();if _accaf !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _abbbd .ShadingType !=nil {_abbae .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_abbbd .ShadingType );};if _abbbd .ColorSpace !=nil {_abbae .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_abbbd .ColorSpace .ToPdfObject ());};if _abbbd .Background !=nil {_abbae .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_abbbd .Background );};if _abbbd .BBox !=nil {_abbae .Set ("\u0042\u0042\u006f\u0078",_abbbd .BBox .ToPdfObject ());};if _abbbd .AntiAlias !=nil {_abbae .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_abbbd .AntiAlias );};return _abfaaf ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bdfd *PdfColorspaceLab )ToPdfObject ()_bb .PdfObject {_dgea :=_bb .MakeArray ();_dgea .Append (_bb .MakeName ("\u004c\u0061\u0062"));_acadd :=_bb .MakeDict ();if _bdfd .WhitePoint !=nil {_bbfg :=_bb .MakeArray (_bb .MakeFloat (_bdfd .WhitePoint [0]),_bb .MakeFloat (_bdfd .WhitePoint [1]),_bb .MakeFloat (_bdfd .WhitePoint [2]));_acadd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bbfg );}else {_ggf .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _bdfd .BlackPoint !=nil {_fecd :=_bb .MakeArray (_bb .MakeFloat (_bdfd .BlackPoint [0]),_bb .MakeFloat (_bdfd .BlackPoint [1]),_bb .MakeFloat (_bdfd .BlackPoint [2]));_acadd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fecd );};if _bdfd .Range !=nil {_gcbb :=_bb .MakeArray (_bb .MakeFloat (_bdfd .Range [0]),_bb .MakeFloat (_bdfd .Range [1]),_bb .MakeFloat (_bdfd .Range [2]),_bb .MakeFloat (_bdfd .Range [3]));_acadd .Set ("\u0052\u0061\u006eg\u0065",_gcbb );};_dgea .Append (_acadd );if _bdfd ._cecg !=nil {_bdfd ._cecg .PdfObject =_dgea ;return _bdfd ._cecg ;};return _dgea ;};func (_bfd *PdfReader )newPdfAnnotationPopupFromDict (_cfa *_bb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bbf :=PdfAnnotationPopup {};_bbf .Parent =_cfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bbf .Open =_cfa .Get ("\u004f\u0070\u0065\u006e");return &_bbf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddgbe *PdfFilespec )ToPdfObject ()_bb .PdfObject {_dgcab :=_ddgbe .getDict ();_dgcab .Clear ();_dgcab .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_dgcab .SetIfNotNil ("\u0046\u0053",_ddgbe .FS );_dgcab .SetIfNotNil ("\u0046",_ddgbe .F );_dgcab .SetIfNotNil ("\u0055\u0046",_ddgbe .UF );_dgcab .SetIfNotNil ("\u0044\u004f\u0053",_ddgbe .DOS );_dgcab .SetIfNotNil ("\u004d\u0061\u0063",_ddgbe .Mac );_dgcab .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ddgbe .Unix );_dgcab .SetIfNotNil ("\u0049\u0044",_ddgbe .ID );_dgcab .SetIfNotNil ("\u0056",_ddgbe .V );_dgcab .SetIfNotNil ("\u0045\u0046",_ddgbe .EF );_dgcab .SetIfNotNil ("\u0052\u0046",_ddgbe .RF );_dgcab .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ddgbe .Desc );_dgcab .SetIfNotNil ("\u0043\u0049",_ddgbe .CI );return _ddgbe ._dgdeg ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bbecd =creator };

// B returns the value of the B component of the color.
func (_fadfa *PdfColorCalRGB )B ()float64 {return float64 (_fadfa [1])};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_gab :=NewPdfAction ();_ef :=&PdfActionSubmitForm {};_ef .PdfAction =_gab ;_gab .SetContext (_ef );return _ef ;};func (_eafb PdfFont )actualFont ()pdfFont {if _eafb ._decag ==nil {_ggf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eafb );};return _eafb ._decag ;};func _bacdg (_ffecg *_bb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_gbbec :=&PdfTilingPattern {};_gfge :=_ffecg .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _gfge ==nil {_ggf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aecgd ,_cddg :=_gfge .(*_bb .PdfObjectInteger );if !_cddg {_ggf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gfge );return nil ,_bb .ErrTypeError ;};_gbbec .PaintType =_aecgd ;_gfge =_ffecg .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gfge ==nil {_ggf .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cccd ,_cddg :=_gfge .(*_bb .PdfObjectInteger );if !_cddg {_ggf .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfge );return nil ,_bb .ErrTypeError ;};_gbbec .TilingType =_cccd ;_gfge =_ffecg .Get ("\u0042\u0042\u006f\u0078");if _gfge ==nil {_ggf .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gfge =_bb .TraceToDirectObject (_gfge );_dbfca ,_cddg :=_gfge .(*_bb .PdfObjectArray );if !_cddg {_ggf .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfge );return nil ,_bb .ErrTypeError ;};_gbgff ,_ecce :=NewPdfRectangle (*_dbfca );if _ecce !=nil {_ggf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ecce );return nil ,_ecce ;};_gbbec .BBox =_gbgff ;_gfge =_ffecg .Get ("\u0058\u0053\u0074e\u0070");if _gfge ==nil {_ggf .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ddfbc ,_ecce :=_bb .GetNumberAsFloat (_gfge );if _ecce !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ddfbc );return nil ,_ecce ;};_gbbec .XStep =_bb .MakeFloat (_ddfbc );_gfge =_ffecg .Get ("\u0059\u0053\u0074e\u0070");if _gfge ==nil {_ggf .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aaag ,_ecce :=_bb .GetNumberAsFloat (_gfge );if _ecce !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_aaag );return nil ,_ecce ;};_gbbec .YStep =_bb .MakeFloat (_aaag );_gfge =_ffecg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _gfge ==nil {_ggf .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ffecg ,_cddg =_bb .TraceToDirectObject (_gfge ).(*_bb .PdfObjectDictionary );if !_cddg {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfge );};_fgdab ,_ecce :=NewPdfPageResourcesFromDict (_ffecg );if _ecce !=nil {return nil ,_ecce ;};_gbbec .Resources =_fgdab ;if _cdfab :=_ffecg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_cdfab !=nil {_ddggg ,_ffebb :=_cdfab .(*_bb .PdfObjectArray );if !_ffebb {_ggf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdfab );return nil ,_bb .ErrTypeError ;};_gbbec .Matrix =_ddggg ;};return _gbbec ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_afgf *PdfFont )Subtype ()string {_bgeg :=_afgf .baseFields ()._cddcc ;if _dbcb ,_edbcg :=_afgf ._decag .(*pdfFontType0 );_edbcg {_bgeg =_bgeg +"\u003a"+_dbcb .DescendantFont .Subtype ();};return _bgeg ;};var (CourierName =_ca .CourierName ;CourierBoldName =_ca .CourierBoldName ;CourierObliqueName =_ca .CourierObliqueName ;CourierBoldObliqueName =_ca .CourierBoldObliqueName ;HelveticaName =_ca .HelveticaName ;HelveticaBoldName =_ca .HelveticaBoldName ;HelveticaObliqueName =_ca .HelveticaObliqueName ;HelveticaBoldObliqueName =_ca .HelveticaBoldObliqueName ;SymbolName =_ca .SymbolName ;ZapfDingbatsName =_ca .ZapfDingbatsName ;TimesRomanName =_ca .TimesRomanName ;TimesBoldName =_ca .TimesBoldName ;TimesItalicName =_ca .TimesItalicName ;TimesBoldItalicName =_ca .TimesBoldItalicName ;);

// GetPage returns the PdfPage model for the specified page number.
func (_cdabb *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cdabb ._eagc .GetCrypter ()!=nil &&!_cdabb ._eagc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_cdabb ._aaea )< pageNumber {return nil ,_cca .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_gcbad :=pageNumber -1;if _gcbad < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_bdaeg :=_cdabb .PageList [_gcbad ];return _bdaeg ,nil ;};func (_eace *PdfReader )newPdfAnnotationPolyLineFromDict (_fed *_bb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gfdeg :=PdfAnnotationPolyLine {};_gdf ,_fgga :=_eace .newPdfAnnotationMarkupFromDict (_fed );if _fgga !=nil {return nil ,_fgga ;};_gfdeg .PdfAnnotationMarkup =_gdf ;_gfdeg .Vertices =_fed .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gfdeg .LE =_fed .Get ("\u004c\u0045");_gfdeg .BS =_fed .Get ("\u0042\u0053");_gfdeg .IC =_fed .Get ("\u0049\u0043");_gfdeg .BE =_fed .Get ("\u0042\u0045");_gfdeg .IT =_fed .Get ("\u0049\u0054");_gfdeg .Measure =_fed .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gfdeg ,nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bb .PdfObjectBool ;SigFlags *_bb .PdfObjectInteger ;CO *_bb .PdfObjectArray ;DR *PdfPageResources ;DA *_bb .PdfObjectString ;Q *_bb .PdfObjectInteger ;XFA _bb .PdfObject ;_cdfcga *_bb .PdfIndirectObject ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bb .PdfIndirectObject )*PdfOutlineItem {_ddde :=PdfOutlineItem {};_ddde ._acgdb =&_ddde ;_ddde .Title =_bb .MakeString (title );_geeed :=_bb .MakeArray ();_geeed .Append (page );_geeed .Append (_bb .MakeName ("\u0046\u0069\u0074"));_ddde .Dest =_geeed ;return &_ddde ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bb .PdfObject ;Q _bb .PdfObject ;RC _bb .PdfObject ;DS _bb .PdfObject ;CL _bb .PdfObject ;IT _bb .PdfObject ;BE _bb .PdfObject ;RD _bb .PdfObject ;BS _bb .PdfObject ;LE _bb .PdfObject ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gfag :=NewPdfAnnotation ();_dac :=&PdfAnnotationMovie {};_dac .PdfAnnotation =_gfag ;_gfag .SetContext (_dac );return _dac ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fgfd *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ggf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_cca .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// SetAnnotations sets the annotations list.
func (_daggf *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_daggf ._bgaf =annotations };

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_edc :=NewPdfAnnotation ();_bca :=&PdfAnnotationCircle {};_bca .PdfAnnotation =_edc ;_bca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edc .SetContext (_bca );return _bca ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func (_bfacba *PdfWriter )addObjects (_aceaa _bb .PdfObject )error {_ggf .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _eggaa ,_ddeca :=_aceaa .(*_bb .PdfIndirectObject );_ddeca {_ggf .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ggf .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_aceaa ,_eggaa );_ggf .Log .Trace ("\u002d\u0020\u0025\u0073",_eggaa .PdfObject );if _bfacba .addObject (_eggaa ){_ffaf :=_bfacba .addObjects (_eggaa .PdfObject );if _ffaf !=nil {return _ffaf ;};};return nil ;};if _eggb ,_cdfg :=_aceaa .(*_bb .PdfObjectStream );_cdfg {_ggf .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ggf .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_aceaa ,_aceaa );if _bfacba .addObject (_eggb ){_cccda :=_bfacba .addObjects (_eggb .PdfObjectDictionary );if _cccda !=nil {return _cccda ;};};return nil ;};if _efegb ,_caacd :=_aceaa .(*_bb .PdfObjectDictionary );_caacd {_ggf .Log .Trace ("\u0044\u0069\u0063\u0074");_ggf .Log .Trace ("\u002d\u0020\u0025\u0073",_aceaa );for _ ,_gecg :=range _efegb .Keys (){_ffefd :=_efegb .Get (_gecg );if _adggg ,_fggba :=_ffefd .(*_bb .PdfObjectReference );_fggba {_ffefd =_adggg .Resolve ();_efegb .Set (_gecg ,_ffefd );};if _gecg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _agdc :=_bfacba .addObjects (_ffefd );_agdc !=nil {return _agdc ;};}else {if _ ,_bgcc :=_ffefd .(*_bb .PdfObjectNull );_bgcc {continue ;};if _gbadgg :=_bfacba .hasObject (_ffefd );!_gbadgg {_ggf .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ffefd ,_ffefd ,_ffefd );_bfacba ._cdbef [_ffefd ]=append (_bfacba ._cdbef [_ffefd ],_efegb );};};};return nil ;};if _egcfed ,_acfbba :=_aceaa .(*_bb .PdfObjectArray );_acfbba {_ggf .Log .Trace ("\u0041\u0072\u0072a\u0079");_ggf .Log .Trace ("\u002d\u0020\u0025\u0073",_aceaa );if _egcfed ==nil {return _cca .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _dcbcd ,_bebc :=range _egcfed .Elements (){if _bbedc ,_bgggc :=_bebc .(*_bb .PdfObjectReference );_bgggc {_bebc =_bbedc .Resolve ();_egcfed .Set (_dcbcd ,_bebc );};if _ebage :=_bfacba .addObjects (_bebc );_ebage !=nil {return _ebage ;};};return nil ;};if _ ,_bagga :=_aceaa .(*_bb .PdfObjectReference );_bagga {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_aceaa );return _cca .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _adda (_gbada _ca .StdFont )pdfFontSimple {_acfba :=_gbada .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_cddcc :"\u0054\u0079\u0070e\u0031",_babf :_gbada .Name ()},_dgaac :_gbada .GetMetricsTable (),_eeeb :&PdfFontDescriptor {FontName :_bb .MakeName (string (_acfba .Name )),FontFamily :_bb .MakeName (_acfba .Family ),FontWeight :_bb .MakeFloat (float64 (_acfba .Weight )),Flags :_bb .MakeInteger (int64 (_acfba .Flags )),FontBBox :_bb .MakeArrayFromFloats (_acfba .BBox [:]),ItalicAngle :_bb .MakeFloat (_acfba .ItalicAngle ),Ascent :_bb .MakeFloat (_acfba .Ascent ),Descent :_bb .MakeFloat (_acfba .Descent ),CapHeight :_bb .MakeFloat (_acfba .CapHeight ),XHeight :_bb .MakeFloat (_acfba .XHeight ),StemV :_bb .MakeFloat (_acfba .StemV ),StemH :_bb .MakeFloat (_acfba .StemH )},_fgec :_gbada .Encoder ()};};

// SetLocation sets the `Location` field of the signature.
func (_beadgd *PdfSignature )SetLocation (location string ){_beadgd .Location =_bb .MakeString (location );};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_gec :=NewPdfAnnotation ();_egfe :=&PdfAnnotationRichMedia {};_egfe .PdfAnnotation =_gec ;_gec .SetContext (_egfe );return _egfe ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_affgc *PdfPageResources )HasColorspaceByName (keyName _bb .PdfObjectName )bool {_cgacd ,_cbfdg :=_affgc .GetColorspaces ();if _cbfdg !=nil {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cbfdg );return false ;};if _cgacd ==nil {return false ;};_ ,_bdacd :=_cgacd .Colorspaces [string (keyName )];return _bdacd ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};var _ pdfFont =(*pdfFontSimple )(nil );

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fbae *PdfColorCalGray )GetNumComponents ()int {return 1};func _fface ()string {_dcfa :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _cfba _gfd .Buffer ;for _fffc :=0;_fffc < 6;_fffc ++{_cfba .WriteRune (rune (_dcfa [_g .Intn (len (_dcfa ))]));};return _cfba .String ();};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_cdebg PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fefe []_bb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_egcc []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cdgca *PdfPageResourcesColorspaces )Set (key _bb .PdfObjectName ,val PdfColorspace ){if _ ,_efee :=_cdgca .Colorspaces [string (key )];!_efee {_cdgca .Names =append (_cdgca .Names ,string (key ));};_cdgca .Colorspaces [string (key )]=val ;};func _cabd (_agfbe _bb .PdfObject )(*PdfPattern ,error ){_cbeea :=&PdfPattern {};var _ffecc *_bb .PdfObjectDictionary ;if _agea ,_acgff :=_bb .GetIndirect (_agfbe );_acgff {_cbeea ._egbda =_agea ;_dgdffe ,_cegc :=_agea .PdfObject .(*_bb .PdfObjectDictionary );if !_cegc {_ggf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_agea .PdfObject );return nil ,_bb .ErrTypeError ;};_ffecc =_dgdffe ;}else if _cdbcd ,_gecbd :=_bb .GetStream (_agfbe );_gecbd {_cbeea ._egbda =_cdbcd ;_ffecc =_cdbcd .PdfObjectDictionary ;}else {_ggf .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_agfbe );return nil ,_bb .ErrTypeError ;};_acdc :=_ffecc .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _acdc ==nil {_ggf .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_aaceb ,_egce :=_acdc .(*_bb .PdfObjectInteger );if !_egce {_ggf .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_acdc );return nil ,_bb .ErrTypeError ;};if *_aaceb !=1&&*_aaceb !=2{_ggf .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_aaceb );return nil ,_bb .ErrRangeError ;};_cbeea .PatternType =int64 (*_aaceb );switch *_aaceb {case 1:_cdbd ,_dggf :=_bacdg (_ffecc );if _dggf !=nil {return nil ,_dggf ;};_cdbd .PdfPattern =_cbeea ;_cbeea ._abfca =_cdbd ;return _cbeea ,nil ;case 2:_gbfa ,_ecaaf :=_fbdca (_ffecc );if _ecaaf !=nil {return nil ,_ecaaf ;};_gbfa .PdfPattern =_cbeea ;_cbeea ._abfca =_gbfa ;return _cbeea ,nil ;};return nil ,_cca .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};func (_gebbd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gebbd ._eagc .GetCrypter ()!=nil &&!_gebbd ._eagc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_feded :=_gebbd ._gdddd ;_afagf :=_feded .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _afagf ==nil {return nil ,nil ;};_eefg ,_ :=_bb .GetIndirect (_afagf );_afagf =_bb .TraceToDirectObject (_afagf );if _bb .IsNullObject (_afagf ){_ggf .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_dbaba ,_caee :=_bb .GetDict (_afagf );if !_caee {_ggf .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_afagf );_ggf .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_afagf );};_ggf .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_ggf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gebbd ._fadcg {_afccf :=_gebbd .traverseObjectData (_dbaba );if _afccf !=nil {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_afccf );return nil ,_afccf ;};};_gcee ,_eeab :=_gebbd .newPdfAcroFormFromDict (_eefg ,_dbaba );if _eeab !=nil {return nil ,_eeab ;};return _gcee ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_aeegb *Image )ToJBIG2Image ()(*_bb .JBIG2Image ,error ){_dfeed ,_ggafc :=_aeegb .ToGoImage ();if _ggafc !=nil {return nil ,_ggafc ;};return _bb .GoImageToJBIG2 (_dfeed ,_bb .JB2ImageAutoThreshold );};func _cedfe (_abaac _bb .PdfObject ,_beebec *PdfReader )(*OutlineDest ,error ){_feae ,_bgcea :=_bb .GetArray (_abaac );if !_bgcea {return nil ,_cca .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_bcgcf :=_feae .Len ();if _bcgcf < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_bcgcf );};_fbab :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_dfaa :=_feae .Get (0);if _fgbgd ,_fafag :=_bb .GetIndirect (_dfaa );_fafag {if _ ,_gfdege ,_gfccc :=_beebec .PageFromIndirectObject (_fgbgd );_gfccc ==nil {_fbab .Page =int64 (_gfdege -1);}else {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_fgbgd );};_fbab .PageObj =_fgbgd ;}else if _fbdga ,_ccdad :=_bb .GetIntVal (_dfaa );_ccdad {if _fbdga >=0&&_fbdga < len (_beebec .PageList ){_fbab .PageObj =_beebec .PageList [_fbdga ].GetPageAsIndirectObject ();}else {_ggf .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fbdga );};_fbab .Page =int64 (_fbdga );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_dfaa );};_cebd ,_bgcea :=_bb .GetNameVal (_feae .Get (1));if !_bgcea {_ggf .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_feae .Get (1));return _fbab ,nil ;};switch _cebd {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _bcgcf > 2{_fbab .Y ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_feae .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _bcgcf > 2{_fbab .X ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_feae .Get (2)));};case "\u0058\u0059\u005a":if _bcgcf > 4{_fbab .X ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_feae .Get (2)));_fbab .Y ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_feae .Get (3)));_fbab .Zoom ,_ =_bb .GetNumberAsFloat (_bb .TraceToDirectObject (_feae .Get (4)));};default:_cebd ="\u0046\u0069\u0074";};_fbab .Mode =_cebd ;return _fbab ,nil ;};func (_fedfa *PdfPage )getParentResources ()(*PdfPageResources ,error ){_fcggf :=_fedfa .Parent ;for _fcggf !=nil {_egbde ,_gadaca :=_bb .GetDict (_fcggf );if !_gadaca {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_cca .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ggeag :=_egbde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggeag !=nil {_dggbb ,_fbedf :=_bb .GetDict (_ggeag );if !_fbedf {return nil ,_cca .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_cfff ,_gacac :=NewPdfPageResourcesFromDict (_dggbb );if _gacac !=nil {return nil ,_gacac ;};return _cfff ,nil ;};_fcggf =_egbde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efcg *PdfAnnotationWatermark )ToPdfObject ()_bb .PdfObject {_efcg .PdfAnnotation .ToPdfObject ();_bded :=_efcg ._afg ;_bfefa :=_bded .PdfObject .(*_bb .PdfObjectDictionary );_bfefa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_bfefa .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_efcg .FixedPrint );return _bded ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fdae *PdfField )GetContext ()PdfModel {return _fdae ._bdce };

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bb .PdfIndirectObject ;SV *_bb .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bged *PdfColorspaceLab )DecodeArray ()[]float64 {_bcgb :=[]float64 {0,100};if _bged .Range !=nil &&len (_bged .Range )==4{_bcgb =append (_bcgb ,_bged .Range ...);}else {_bcgb =append (_bcgb ,-100,100,-100,100);};return _bcgb ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cccb *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_cca .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_dgeba ,_ecgf :=_fe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._afaa ,img ._afae );if _ecgf !=nil {return img ,_ecgf ;};_cdgg ,_ecgf :=_fe .NRGBAConverter .Convert (_dgeba );if _ecgf !=nil {return img ,_ecgf ;};_agfa :=_bagfd (_cdgg .Base ());_ggf .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ggf .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ggf .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_agfa .Data );_ggf .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_agfa );return _agfa ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_eefe *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_eaacf *pdfFontSimple )updateStandard14Font (){_dega ,_aedc :=_eaacf .Encoder ().(_cefb .SimpleEncoder );if !_aedc {_ggf .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eaacf .Encoder (),_eaacf );return ;};_gbbcg :=_dega .Charcodes ();_eaacf ._cbccg =make (map[_cefb .CharCode ]float64 ,len (_gbbcg ));for _ ,_beee :=range _gbbcg {_acef ,_ :=_dega .CharcodeToRune (_beee );_eaacf ._cbccg [_beee ]=_eaacf ._dgaac [_acef ].Wx ;};};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bb .PdfObject ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bb .PdfObject ;Flags _bb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_eda *PdfActionTrans )ToPdfObject ()_bb .PdfObject {_eda .PdfAction .ToPdfObject ();_egf :=_eda ._bd ;_ggg :=_egf .PdfObject .(*_bb .PdfObjectDictionary );_ggg .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeTrans )));_ggg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_eda .Trans );return _egf ;};func (_dfgba *PdfReader )buildPageList (_fcea *_bb .PdfIndirectObject ,_cbac *_bb .PdfIndirectObject ,_eaed map[_bb .PdfObject ]struct{})error {if _fcea ==nil {return nil ;};if _ ,_afeff :=_eaed [_fcea ];_afeff {_ggf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fcea .ObjectNumber );return nil ;};_eaed [_fcea ]=struct{}{};_bacfd ,_gecec :=_fcea .PdfObject .(*_bb .PdfObjectDictionary );if !_gecec {return _cca .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bafae ,_gecec :=(*_bacfd ).Get ("\u0054\u0079\u0070\u0065").(*_bb .PdfObjectName );if !_gecec {if _bacfd .Get ("\u004b\u0069\u0064\u0073")==nil {return _cca .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ggf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_bafae =_bb .MakeName ("\u0050\u0061\u0067e\u0073");_bacfd .Set ("\u0054\u0079\u0070\u0065",_bafae );};_ggf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bafae ,_fcea );if *_bafae =="\u0050\u0061\u0067\u0065"{_abaaca ,_ebdc :=_dfgba .newPdfPageFromDict (_bacfd );if _ebdc !=nil {return _ebdc ;};_abaaca .setContainer (_fcea );if _cbac !=nil {_bacfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbac );};_dfgba ._aaea =append (_dfgba ._aaea ,_fcea );_dfgba .PageList =append (_dfgba .PageList ,_abaaca );return nil ;};if *_bafae !="\u0050\u0061\u0067e\u0073"{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bafae );return _cca .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _cbac !=nil {_bacfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbac );};if !_dfgba ._fadcg {_gdfaee :=_dfgba .traverseObjectData (_fcea );if _gdfaee !=nil {return _gdfaee ;};};_dcgcd ,_fbbce :=_dfgba ._eagc .Resolve (_bacfd .Get ("\u004b\u0069\u0064\u0073"));if _fbbce !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fbbce ;};var _bedge *_bb .PdfObjectArray ;_bedge ,_gecec =_dcgcd .(*_bb .PdfObjectArray );if !_gecec {_dgbf ,_gbfb :=_dcgcd .(*_bb .PdfIndirectObject );if !_gbfb {return _cca .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bedge ,_gecec =_dgbf .PdfObject .(*_bb .PdfObjectArray );if !_gecec {return _cca .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ggf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bedge );for _dgaag ,_fagf :=range _bedge .Elements (){_aaefe ,_cbfae :=_bb .GetIndirect (_fagf );if !_cbfae {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_aaefe );return _cca .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bedge .Set (_dgaag ,_aaefe );_fbbce =_dfgba .buildPageList (_aaefe ,_fcea ,_eaed );if _fbbce !=nil {return _fbbce ;};};return nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;VerticesPerRow *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};

// SetForms sets the Acroform for a PDF file.
func (_defgc *PdfWriter )SetForms (form *PdfAcroForm )error {_defgc ._cgaca =form ;return nil };

// ToPdfObject implements interface PdfModel.
func (_dbc *PdfActionNamed )ToPdfObject ()_bb .PdfObject {_dbc .PdfAction .ToPdfObject ();_dea :=_dbc ._bd ;_ggbe :=_dea .PdfObject .(*_bb .PdfObjectDictionary );_ggbe .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeNamed )));_ggbe .SetIfNotNil ("\u004e",_dbc .N );return _dea ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_dgdg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bb .GetNumberAsFloat (_dgdg .CapHeight );};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ebafec :=&PdfOutlineItem {_becb :_bb .MakeIndirectObject (_bb .MakeDict ())};_ebafec ._acgdb =_ebafec ;return _ebafec ;};

// C returns the value of the cyan component of the color.
func (_acadf *PdfColorDeviceCMYK )C ()float64 {return float64 (_acadf [0])};

// GetBorderWidth returns the border style's width.
func (_dfb *PdfBorderStyle )GetBorderWidth ()float64 {if _dfb .W ==nil {return 1;};return *_dfb .W ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_afba :=NewPdfAnnotation ();_fdc :=&PdfAnnotationPopup {};_fdc .PdfAnnotation =_afba ;_afba .SetContext (_fdc );return _fdc ;};func (_ebdd *PdfReader )newPdfActionGoTo3DViewFromDict (_dfg *_bb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_dfg .Get ("\u0054\u0041"),V :_dfg .Get ("\u0056")},nil ;};var _bbecd ="";

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_gbg :=NewPdfAnnotation ();_dcc :=&PdfAnnotationCaret {};_dcc .PdfAnnotation =_gbg ;_dcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbg .SetContext (_dcc );return _dcc ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cdced :=PdfPage {};_cdced ._bfeaf =_bb .MakeDict ();_cdced .Resources =NewPdfPageResources ();_cbgfb :=_bb .PdfIndirectObject {};_cbgfb .PdfObject =_cdced ._bfeaf ;_cdced ._bbacd =&_cbgfb ;return &_cdced ;};func (_geaa *PdfReader )newPdfAnnotationStampFromDict (_bfbc *_bb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_eabe :=PdfAnnotationStamp {};_bbag ,_ggd :=_geaa .newPdfAnnotationMarkupFromDict (_bfbc );if _ggd !=nil {return nil ,_ggd ;};_eabe .PdfAnnotationMarkup =_bbag ;_eabe .Name =_bfbc .Get ("\u004e\u0061\u006d\u0065");return &_eabe ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_efab pdfCIDFontType2 )GetRuneMetrics (r rune )(_ca .CharMetrics ,bool ){_aagbc ,_cgcc :=_efab ._abcfd [r ];if !_cgcc {_cagfe ,_dfgcc :=_bb .GetInt (_efab .DW );if !_dfgcc {return _ca .CharMetrics {},false ;};_aagbc =int (*_cagfe );};return _ca .CharMetrics {Wx :float64 (_aagbc )},true ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_adbbb *PdfReader )Inspect ()(map[string ]int ,error ){return _adbbb ._eagc .Inspect ()};func _fdee (_dbge *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_dbge }};

// A returns the value of the A component of the color.
func (_fbcca *PdfColorLab )A ()float64 {return float64 (_fbcca [1])};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfActionThread )ToPdfObject ()_bb .PdfObject {_ea .PdfAction .ToPdfObject ();_efc :=_ea ._bd ;_cefc :=_efc .PdfObject .(*_bb .PdfObjectDictionary );_cefc .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeThread )));if _ea .F !=nil {_cefc .Set ("\u0046",_ea .F .ToPdfObject ());};_cefc .SetIfNotNil ("\u0044",_ea .D );_cefc .SetIfNotNil ("\u0042",_ea .B );return _efc ;};func (_gaca *PdfReader )newPdfActionTransFromDict (_dgfe *_bb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_dgfe .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bb .PdfObject ;Popup *PdfAnnotationPopup ;CA _bb .PdfObject ;RC _bb .PdfObject ;CreationDate _bb .PdfObject ;IRT _bb .PdfObject ;Subj _bb .PdfObject ;RT _bb .PdfObject ;IT _bb .PdfObject ;ExData _bb .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bb .PdfObject ;Sy _bb .PdfObject ;};func _cbgb (_cfegc *_bb .PdfObjectDictionary ,_bbafg *fontCommon )(*pdfFontType0 ,error ){_egaa ,_bdbe :=_bb .GetArray (_cfegc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_bdbe {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_bbafg );return nil ,_bb .ErrRangeError ;};if _egaa .Len ()!=1{_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_egaa .Len ());return nil ,_bb .ErrRangeError ;};_bfbb ,_bcgbc :=_fbdee (_egaa .Get (0),false );if _bcgbc !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bcgbc ,_bbafg );return nil ,_bcgbc ;};_dccgf :=_aadgd (_bbafg );_dccgf .DescendantFont =_bfbb ;_aaaa ,_bdbe :=_bb .GetNameVal (_cfegc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bdbe {if _aaaa =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_aaaa =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_dccgf ._gddcd =_cefb .NewIdentityTextEncoder (_aaaa );}else if _ac .IsPredefinedCMap (_aaaa ){_dccgf ._eceae ,_bcgbc =_ac .LoadPredefinedCMap (_aaaa );if _bcgbc !=nil {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_aaaa ,_bcgbc );};}else {_ggf .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_aaaa );};};if _befba :=_bfbb .baseFields ()._adcd ;_befba !=nil {if _afffb :=_befba .Name ();_afffb =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_afffb =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_afffb =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_afffb =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_dccgf ._gddcd =_cefb .NewCMapEncoder (_aaaa ,_dccgf ._eceae ,_befba );};};return _dccgf ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_egca *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gfdaa ,_dfdg :=range _egca ._afaa {_egca ._afaa [_gfdaa ]=mapFunc (_dfdg );};};

// AddExtGState adds a graphics state to the XObject resources.
func (_fcga *PdfPage )AddExtGState (name _bb .PdfObjectName ,egs *_bb .PdfObjectDictionary )error {if _fcga .Resources ==nil {_fcga .Resources =NewPdfPageResources ();};if _fcga .Resources .ExtGState ==nil {_fcga .Resources .ExtGState =_bb .MakeDict ();};_cgefe ,_acaaa :=_bb .TraceToDirectObject (_fcga .Resources .ExtGState ).(*_bb .PdfObjectDictionary );if !_acaaa {_ggf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bb .TraceToDirectObject (_fcga .Resources .ExtGState ));return _cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cgefe .Set (name ,egs );return nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bb .StreamEncoder ;FormType _bb .PdfObject ;BBox _bb .PdfObject ;Matrix _bb .PdfObject ;Resources *PdfPageResources ;Group _bb .PdfObject ;Ref _bb .PdfObject ;MetaData _bb .PdfObject ;PieceInfo _bb .PdfObject ;LastModified _bb .PdfObject ;StructParent _bb .PdfObject ;StructParents _bb .PdfObject ;OPI _bb .PdfObject ;OC _bb .PdfObject ;Name _bb .PdfObject ;

// Stream data.
Stream []byte ;_cfdbb *_bb .PdfObjectStream ;};func (_dbae *PdfReader )newPdfActionGotoRFromDict (_aaf *_bb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bgb ,_egb :=_edfed (_aaf .Get ("\u0046"));if _egb !=nil {return nil ,_egb ;};return &PdfActionGoToR {D :_aaf .Get ("\u0044"),NewWindow :_aaf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bgb },nil ;};

// Height returns the height of `rect`.
func (_ggeed *PdfRectangle )Height ()float64 {return _cc .Abs (_ggeed .Ury -_ggeed .Lly )};

// ToPdfObject implements interface PdfModel.
func (_de *PdfActionMovie )ToPdfObject ()_bb .PdfObject {_de .PdfAction .ToPdfObject ();_eab :=_de ._bd ;_dbd :=_eab .PdfObject .(*_bb .PdfObjectDictionary );_dbd .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeMovie )));_dbd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_de .Annotation );_dbd .SetIfNotNil ("\u0054",_de .T );_dbd .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_de .Operation );return _eab ;};

// ToPdfObject implements interface PdfModel.
func (_ecg *PdfAction )ToPdfObject ()_bb .PdfObject {_gb :=_ecg ._bd ;_ae :=_gb .PdfObject .(*_bb .PdfObjectDictionary );_ae .Clear ();_ae .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ae .SetIfNotNil ("\u0053",_ecg .S );_ae .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ecg .Next );return _gb ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gefb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gefb .baseFields ()._ceee !=nil {return _gefb .baseFields ()._ceee ;};if _fced :=_gefb ._decag .getFontDescriptor ();_fced !=nil {return _fced ;};_ggf .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gefb );return nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_decag pdfFont };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fbcba *PdfReader )GetEncryptionMethod ()string {_gafgd :=_fbcba ._eagc .GetCrypter ();return _gafgd .String ();};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bb .PdfObjectStream ;Data []byte ;_acgc *_bb .PdfIndirectObject ;_fgcb *_bb .PdfObjectStream ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fdda *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fcgc :=_cg .NewReader (img .getBase ());_fgdf :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._afaa ,img ._afae );_ebff :=_cg .NewWriter (_fgdf );_fbbc :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_bfad :=_fdda .GetNumComponents ();_ddeaa :=make ([]uint32 ,_bfad );_gbdc :=make ([]float64 ,_bfad );for {_edbe :=_fcgc .ReadSamples (_ddeaa );if _edbe ==_ec .EOF {break ;}else if _edbe !=nil {return img ,_edbe ;};for _bbaaf :=0;_bbaaf < _bfad ;_bbaaf ++{_gbcg :=float64 (_ddeaa [_bbaaf ])/_fbbc ;_gbdc [_bbaaf ]=_gbcg ;};_dgcca ,_edbe :=_fdda .TintTransform .Evaluate (_gbdc );if _edbe !=nil {return img ,_edbe ;};for _ ,_ggge :=range _dgcca {_ggge =_cc .Min (_cc .Max (0,_ggge ),1.0);if _edbe =_ebff .WriteSample (uint32 (_ggge *_fbbc ));_edbe !=nil {return img ,_edbe ;};};};return _fdda .AlternateSpace .ImageToRGB (_bagfd (&_fgdf ));};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dffb *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbbb ,_cddc :=_bb .GetNumbersAsFloat (objects );if _cddc !=nil {return nil ,_cddc ;};return _dffb .ColorFromFloats (_cbbb );};

// ToPdfObject implements interface PdfModel.
func (_fbda *PdfAnnotationFreeText )ToPdfObject ()_bb .PdfObject {_fbda .PdfAnnotation .ToPdfObject ();_bfec :=_fbda ._afg ;_dda :=_bfec .PdfObject .(*_bb .PdfObjectDictionary );_fbda .PdfAnnotationMarkup .appendToPdfDictionary (_dda );_dda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_dda .SetIfNotNil ("\u0044\u0041",_fbda .DA );_dda .SetIfNotNil ("\u0051",_fbda .Q );_dda .SetIfNotNil ("\u0052\u0043",_fbda .RC );_dda .SetIfNotNil ("\u0044\u0053",_fbda .DS );_dda .SetIfNotNil ("\u0043\u004c",_fbda .CL );_dda .SetIfNotNil ("\u0049\u0054",_fbda .IT );_dda .SetIfNotNil ("\u0042\u0045",_fbda .BE );_dda .SetIfNotNil ("\u0052\u0044",_fbda .RD );_dda .SetIfNotNil ("\u0042\u0053",_fbda .BS );_dda .SetIfNotNil ("\u004c\u0045",_fbda .LE );return _bfec ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_fbedd *Image )ToGoImage ()(_ce .Image ,error ){_ggf .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gedaa ,_cbfg :=_fe .NewImage (int (_fbedd .Width ),int (_fbedd .Height ),int (_fbedd .BitsPerComponent ),_fbedd .ColorComponents ,_fbedd .Data ,_fbedd ._afaa ,_fbedd ._afae );if _cbfg !=nil {return nil ,_cbfg ;};return _gedaa ,nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_gedb *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _gedb .Range };

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_cgb :=NewPdfAction ();_fc :=&PdfActionImportData {};_fc .PdfAction =_cgb ;_cgb .SetContext (_fc );return _fc ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_cbgff *PdfSignature )bool ;Validate (_gbdda *PdfSignature ,_abdc Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_fffgd *PdfSignature )(Hasher ,error );Sign (_ddaa *PdfSignature ,_gafgb Hasher )error ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_baeac *_bb .PdfIndirectObject ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _cd .Time ){_ffgggc =modifiedDate };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_adaag *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_cgfd :=func (_dabd float64 )float64 {if _dabd >=6.0/29{return _dabd *_dabd *_dabd ;};return 108.0/841*(_dabd -4/29);};_egegf :=img ._afae ;if len (_egegf )!=6{_ggf .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_egegf =_adaag .DecodeArray ();};_dabf :=_cg .NewReader (img .getBase ());_gbbc :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._afaa ,img ._afae );_adgfb :=_cg .NewWriter (_gbbc );_edgde :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_bfaba :=make ([]uint32 ,3);var (_gdba error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ebcf ,_abbb ,_gadgg float64 ;);for {_gdba =_dabf .ReadSamples (_bfaba );if _gdba ==_ec .EOF {break ;}else if _gdba !=nil {return img ,_gdba ;};Ls =float64 (_bfaba [0])/_edgde ;As =float64 (_bfaba [1])/_edgde ;Bs =float64 (_bfaba [2])/_edgde ;Ls =_fe .LinearInterpolate (Ls ,0.0,1.0,_egegf [0],_egegf [1]);As =_fe .LinearInterpolate (As ,0.0,1.0,_egegf [2],_egegf [3]);Bs =_fe .LinearInterpolate (Bs ,0.0,1.0,_egegf [4],_egegf [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_adaag .WhitePoint [0]*_cgfd (L );Y =_adaag .WhitePoint [1]*_cgfd (M );Z =_adaag .WhitePoint [2]*_cgfd (N );_ebcf =3.240479*X +-1.537150*Y +-0.498535*Z ;_abbb =-0.969256*X +1.875992*Y +0.041556*Z ;_gadgg =0.055648*X +-0.204043*Y +1.057311*Z ;_ebcf =_cc .Min (_cc .Max (_ebcf ,0),1.0);_abbb =_cc .Min (_cc .Max (_abbb ,0),1.0);_gadgg =_cc .Min (_cc .Max (_gadgg ,0),1.0);_bfaba [0]=uint32 (_ebcf *_edgde );_bfaba [1]=uint32 (_abbb *_edgde );_bfaba [2]=uint32 (_gadgg *_edgde );if _gdba =_adgfb .WriteSamples (_bfaba );_gdba !=nil {return img ,_gdba ;};};return _bagfd (&_gbbc ),nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bb .PdfObjectArray ;TI *_bb .PdfObjectInteger ;I *_bb .PdfObjectArray ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _cd .Time ){_ffgggc =creationDate };

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_fbdbg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bb .PdfObject {_bdeb :=_bb .MakeDict ();if _fbdbg .Subtype !=nil {_bdeb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fbdbg .Subtype );};_bdeb .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_fbdbg .Colorants );_bdeb .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_fbdbg .Process );_bdeb .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_fbdbg .MixingHints );if _fbdbg ._ffbb !=nil {_fbdbg ._ffbb .PdfObject =_bdeb ;return _fbdbg ._ffbb ;};return _bdeb ;};func _fdbge (_cdde *_bb .PdfObjectStream )(*PdfFunctionType0 ,error ){_edfbe :=&PdfFunctionType0 {};_edfbe ._ebccb =_cdde ;_bcdcb :=_cdde .PdfObjectDictionary ;_aeffe ,_afcgc :=_bb .TraceToDirectObject (_bcdcb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );if !_afcgc {_ggf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aeffe .Len ()< 0||_aeffe .Len ()%2!=0{_ggf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_edfbe .NumInputs =_aeffe .Len ()/2;_ddeda ,_cfedb :=_aeffe .ToFloat64Array ();if _cfedb !=nil {return nil ,_cfedb ;};_edfbe .Domain =_ddeda ;_aeffe ,_afcgc =_bb .TraceToDirectObject (_bcdcb .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if !_afcgc {_ggf .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aeffe .Len ()< 0||_aeffe .Len ()%2!=0{return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_edfbe .NumOutputs =_aeffe .Len ()/2;_cfcaca ,_cfedb :=_aeffe .ToFloat64Array ();if _cfedb !=nil {return nil ,_cfedb ;};_edfbe .Range =_cfcaca ;_aeffe ,_afcgc =_bb .TraceToDirectObject (_bcdcb .Get ("\u0053\u0069\u007a\u0065")).(*_bb .PdfObjectArray );if !_afcgc {_ggf .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aeecb ,_cfedb :=_aeffe .ToIntegerArray ();if _cfedb !=nil {return nil ,_cfedb ;};if len (_aeecb )!=_edfbe .NumInputs {_ggf .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfbe .Size =_aeecb ;_adgbd ,_afcgc :=_bb .TraceToDirectObject (_bcdcb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bb .PdfObjectInteger );if !_afcgc {_ggf .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_adgbd !=1&&*_adgbd !=2&&*_adgbd !=4&&*_adgbd !=8&&*_adgbd !=12&&*_adgbd !=16&&*_adgbd !=24&&*_adgbd !=32{_ggf .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_adgbd );return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfbe .BitsPerSample =int (*_adgbd );_edfbe .Order =1;_dcgf ,_afcgc :=_bb .TraceToDirectObject (_bcdcb .Get ("\u004f\u0072\u0064e\u0072")).(*_bb .PdfObjectInteger );if _afcgc {if *_dcgf !=1&&*_dcgf !=3{_ggf .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dcgf );return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edfbe .Order =int (*_dcgf );};_aeffe ,_afcgc =_bb .TraceToDirectObject (_bcdcb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bb .PdfObjectArray );if _afcgc {_dece ,_acfbb :=_aeffe .ToFloat64Array ();if _acfbb !=nil {return nil ,_acfbb ;};_edfbe .Encode =_dece ;};_aeffe ,_afcgc =_bb .TraceToDirectObject (_bcdcb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bb .PdfObjectArray );if _afcgc {_acfea ,_fagcfa :=_aeffe .ToFloat64Array ();if _fagcfa !=nil {return nil ,_fagcfa ;};_edfbe .Decode =_acfea ;};_ecabf ,_cfedb :=_bb .DecodeStream (_cdde );if _cfedb !=nil {return nil ,_cfedb ;};_edfbe ._ffeb =_ecabf ;return _edfbe ,nil ;};func _dfbb (_caab *_bb .PdfObjectDictionary ,_efba *fontCommon )(*pdfCIDFontType0 ,error ){if _efba ._cddcc !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ggf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_efba );return nil ,_bb .ErrRangeError ;};_babfg :=_egbgb (_efba );_gdbaa ,_dgcf :=_bb .GetDict (_caab .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dgcf {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_efba );return nil ,ErrRequiredAttributeMissing ;};_babfg .CIDSystemInfo =_gdbaa ;_babfg .DW =_caab .Get ("\u0044\u0057");_babfg .W =_caab .Get ("\u0057");_babfg .DW2 =_caab .Get ("\u0044\u0057\u0032");_babfg .W2 =_caab .Get ("\u0057\u0032");_babfg ._gaae =1000.0;if _dfcg ,_egcd :=_bb .GetNumberAsFloat (_babfg .DW );_egcd ==nil {_babfg ._gaae =_dfcg ;};_eecg ,_eebcb :=_gagab (_babfg .W );if _eebcb !=nil {return nil ,_eebcb ;};if _eecg ==nil {_eecg =map[_cefb .CharCode ]float64 {};};_babfg ._ebebf =_eecg ;return _babfg ,nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_afaa []byte ;_afae []float64 ;};

// SetOCProperties sets the optional content properties.
func (_bced *PdfWriter )SetOCProperties (ocProperties _bb .PdfObject )error {_bbgc :=_bced ._bdaad ;if ocProperties !=nil {_ggf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_bbgc .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _bced .addObjects (ocProperties );};return nil ;};func (_ddcgd *PdfWriter )seekByName (_ggecf _bb .PdfObject ,_fadffa []string ,_ddedd string )([]_bb .PdfObject ,error ){_ggf .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_ggecf );var _cedc []_bb .PdfObject ;if _gbbfa ,_abgfe :=_ggecf .(*_bb .PdfIndirectObject );_abgfe {return _ddcgd .seekByName (_gbbfa .PdfObject ,_fadffa ,_ddedd );};if _ffebe ,_egbdc :=_ggecf .(*_bb .PdfObjectStream );_egbdc {return _ddcgd .seekByName (_ffebe .PdfObjectDictionary ,_fadffa ,_ddedd );};if _cegfg ,_ceggb :=_ggecf .(*_bb .PdfObjectDictionary );_ceggb {_ggf .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fbdcd :=range _cegfg .Keys (){_bgebd :=_cegfg .Get (_fbdcd );if string (_fbdcd )==_ddedd {_cedc =append (_cedc ,_bgebd );};for _ ,_gddec :=range _fadffa {if string (_fbdcd )==_gddec {_ggf .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gddec );_fdbagc ,_ebaag :=_ddcgd .seekByName (_bgebd ,_fadffa ,_ddedd );if _ebaag !=nil {return _cedc ,_ebaag ;};for _ ,_ecdcf :=range _fdbagc {_cedc =append (_cedc ,_ecdcf );};break ;};};};return _cedc ,nil ;};return _cedc ,nil ;};func _dgffde (_dbgef *_bb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_fabgb :=PdfShadingType3 {};_gcbcc :=_dbgef .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _gcbcc ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_abfaa ,_abdda :=_gcbcc .(*_bb .PdfObjectArray );if !_abdda {_ggf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcbcc );return nil ,_bb .ErrTypeError ;};if _abfaa .Len ()!=6{_ggf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_abfaa .Len ());return nil ,ErrInvalidAttribute ;};_fabgb .Coords =_abfaa ;if _cedfa :=_dbgef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cedfa !=nil {_cedfa =_bb .TraceToDirectObject (_cedfa );_gbcfg ,_gbfd :=_cedfa .(*_bb .PdfObjectArray );if !_gbfd {_ggf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cedfa );return nil ,_bb .ErrTypeError ;};_fabgb .Domain =_gbcfg ;};_gcbcc =_dbgef .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gcbcc ==nil {_ggf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_fabgb .Function =[]PdfFunction {};if _ceagf ,_fefa :=_gcbcc .(*_bb .PdfObjectArray );_fefa {for _ ,_cbdge :=range _ceagf .Elements (){_dbdge ,_edaeg :=_cdgbg (_cbdge );if _edaeg !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edaeg );return nil ,_edaeg ;};_fabgb .Function =append (_fabgb .Function ,_dbdge );};}else {_gedae ,_gcea :=_cdgbg (_gcbcc );if _gcea !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcea );return nil ,_gcea ;};_fabgb .Function =append (_fabgb .Function ,_gedae );};if _accea :=_dbgef .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_accea !=nil {_accea =_bb .TraceToDirectObject (_accea );_ggag ,_fagce :=_accea .(*_bb .PdfObjectArray );if !_fagce {_ggf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_accea );return nil ,_bb .ErrTypeError ;};if _ggag .Len ()!=2{_ggf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ggag .Len ());return nil ,ErrInvalidAttribute ;};_fabgb .Extend =_ggag ;};return &_fabgb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ceggf *PdfShadingType6 )ToPdfObject ()_bb .PdfObject {_ceggf .PdfShading .ToPdfObject ();_cbfaa ,_fdfd :=_ceggf .getShadingDict ();if _fdfd !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ceggf .BitsPerCoordinate !=nil {_cbfaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ceggf .BitsPerCoordinate );};if _ceggf .BitsPerComponent !=nil {_cbfaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ceggf .BitsPerComponent );};if _ceggf .BitsPerFlag !=nil {_cbfaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ceggf .BitsPerFlag );};if _ceggf .Decode !=nil {_cbfaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ceggf .Decode );};if _ceggf .Function !=nil {if len (_ceggf .Function )==1{_cbfaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ceggf .Function [0].ToPdfObject ());}else {_gcca :=_bb .MakeArray ();for _ ,_fdgba :=range _ceggf .Function {_gcca .Append (_fdgba .ToPdfObject ());};_cbfaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcca );};};return _ceggf ._cggec ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bb .PdfObjectArray ;Matrix *_bb .PdfObjectArray ;Function []PdfFunction ;};var _afdbb ="";

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_fefg *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_aagf :=_fefg .actualFont ();if _aagf ==nil {_ggf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_fefg ._decag );return _ca .CharMetrics {},false ;};if _ffdeb ,_dafcd :=_aagf .GetRuneMetrics (r );_dafcd {return _ffdeb ,true ;};if _deaca ,_fcgf :=_fefg .GetFontDescriptor ();_fcgf ==nil &&_deaca !=nil {return _ca .CharMetrics {Wx :_deaca ._dgaa },true ;};_ggf .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fefg );return _ca .CharMetrics {},false ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gcde *PdfFont )CharcodesToStrings (charcodes []_cefb .CharCode )([]string ,int ,int ){_dcef :=_gcde .baseFields ();_bcfd :=make ([]string ,0,len (charcodes ));_ddgd :=0;for _ ,_ebbdb :=range charcodes {if _dcef ._adcd !=nil {if _cefa ,_eaga :=_dcef ._adcd .CharcodeToUnicode (_ac .CharCode (_ebbdb ));_eaga {_bcfd =append (_bcfd ,_cefa );continue ;};};_eefa :=_gcde .Encoder ();if _eefa !=nil {if _fcff ,_ebge :=_eefa .CharcodeToRune (_ebbdb );_ebge {_bcfd =append (_bcfd ,string (_fcff ));continue ;};};_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ebbdb ,charcodes ,_dcef .isCIDFont (),_gcde ,_eefa );_ddgd ++;_bcfd =append (_bcfd ,_ac .MissingCodeString );};if _ddgd !=0{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_ddgd ,_gcde );};return _bcfd ,len (_bcfd ),_ddgd ;};func (_ddec *PdfReader )newPdfAnnotationWatermarkFromDict (_aca *_bb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_gagc :=PdfAnnotationWatermark {};_gagc .FixedPrint =_aca .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_gagc ,nil ;};

// String returns the name of the colorspace (DeviceN).
func (_cdca *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ge :=NewPdfAction ();_ccf :=&PdfActionGoToE {};_ccf .PdfAction =_ge ;_ge .SetContext (_ccf );return _ccf ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ga :=NewPdfAction ();_ba :=&PdfActionGoTo {};_ba .PdfAction =_ga ;_ga .SetContext (_ba );return _ba ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_acafd *PdfPage )GetPageAsIndirectObject ()*_bb .PdfIndirectObject {return _acafd ._bbacd };func _cfbd (_bbceg _bb .PdfObject )(*_bb .PdfObjectDictionary ,*fontCommon ,error ){_bagdbg :=&fontCommon {};if _efcdg ,_deddc :=_bbceg .(*_bb .PdfIndirectObject );_deddc {_bagdbg ._aacf =_efcdg .ObjectNumber ;};_gfgce ,_fegbe :=_bb .GetDict (_bbceg );if !_fegbe {_ggf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bbceg );return nil ,nil ,ErrFontNotSupported ;};_ggggg ,_fegbe :=_bb .GetNameVal (_gfgce .Get ("\u0054\u0079\u0070\u0065"));if !_fegbe {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _ggggg !="\u0046\u006f\u006e\u0074"{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_ggggg ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_bb .ErrTypeError ;};_gcaf ,_fegbe :=_bb .GetNameVal (_gfgce .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fegbe {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_bagdbg ._cddcc =_gcaf ;_dceg ,_fegbe :=_bb .GetNameVal (_gfgce .Get ("\u004e\u0061\u006d\u0065"));if _fegbe {_bagdbg ._ebad =_dceg ;};if _gcaf =="\u0054\u0079\u0070e\u0033"{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_gfgce );return _gfgce ,_bagdbg ,ErrType3FontNotSupported ;};_fcgg ,_fegbe :=_bb .GetNameVal (_gfgce .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fegbe {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _gfgce ,_bagdbg ,ErrRequiredAttributeMissing ;};_bagdbg ._babf =_fcgg ;_bedgc :=_gfgce .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bedgc !=nil {_ecga ,_eaef :=_fgbd (_bedgc );if _eaef !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eaef );return _gfgce ,_bagdbg ,_eaef ;};_bagdbg ._ceee =_ecga ;};_ebbca :=_gfgce .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ebbca !=nil {_bagdbg ._cgcae =_bb .TraceToDirectObject (_ebbca );_fbgd ,_cdgb :=_dgae (_bagdbg ._cgcae ,_bagdbg );if _cdgb !=nil {return _gfgce ,_bagdbg ,_cdgb ;};_bagdbg ._adcd =_fbgd ;}else if _gcaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gcaf =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_cacdf ,_gcgee :=_ac .NewCIDSystemInfo (_gfgce .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _gcgee !=nil {return _gfgce ,_bagdbg ,_gcgee ;};_dfaf :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_cacdf .Registry ,_cacdf .Ordering );if _ac .IsPredefinedCMap (_dfaf ){_bagdbg ._adcd ,_gcgee =_ac .LoadPredefinedCMap (_dfaf );if _gcgee !=nil {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dfaf ,_gcgee );};};};return _gfgce ,_bagdbg ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_bff :=NewPdfAnnotation ();_beeb :=&PdfAnnotationPrinterMark {};_beeb .PdfAnnotation =_bff ;_bff .SetContext (_beeb );return _beeb ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overriden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_dgdcdg ,_egcef :=encoder .EncodeBytes (img .Data );if _egcef !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_egcef );return nil ,_egcef ;};_fegbb :=NewXObjectImage ();_fgfga :=img .Width ;_fdce :=img .Height ;_fegbb .Width =&_fgfga ;_fegbb .Height =&_fdce ;_ccffb :=img .BitsPerComponent ;_fegbb .BitsPerComponent =&_ccffb ;_fegbb .Filter =encoder ;_fegbb .Stream =_dgdcdg ;if cs ==nil {if img .ColorComponents ==1{_fegbb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fegbb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_fegbb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_cca .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fegbb .ColorSpace =cs ;};if len (img ._afaa )!=0{_ccdbb :=NewXObjectImage ();_ccdbb .Filter =encoder ;_dfbdg ,_bgbdb :=encoder .EncodeBytes (img ._afaa );if _bgbdb !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bgbdb );return nil ,_bgbdb ;};_ccdbb .Stream =_dfbdg ;_ccdbb .BitsPerComponent =_fegbb .BitsPerComponent ;_ccdbb .Width =&img .Width ;_ccdbb .Height =&img .Height ;_ccdbb .ColorSpace =NewPdfColorspaceDeviceGray ();_fegbb .SMask =_ccdbb .ToPdfObject ();}else {_fegbb .SMask =xobjIn .SMask ;_fegbb .ImageMask =xobjIn .ImageMask ;if _fegbb .ColorSpace .GetNumComponents ()==1{_bebaf (_fegbb );};};return _fegbb ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_edcf *PdfPage )GetPageDict ()*_bb .PdfObjectDictionary {_cfegcc :=_edcf ._bfeaf ;_cfegcc .Clear ();_cfegcc .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0050\u0061\u0067\u0065"));_cfegcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edcf .Parent );if _edcf .LastModified !=nil {_cfegcc .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_edcf .LastModified .ToPdfObject ());};if _edcf .Resources !=nil {_cfegcc .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_edcf .Resources .ToPdfObject ());};if _edcf .CropBox !=nil {_cfegcc .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_edcf .CropBox .ToPdfObject ());};if _edcf .MediaBox !=nil {_cfegcc .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_edcf .MediaBox .ToPdfObject ());};if _edcf .BleedBox !=nil {_cfegcc .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_edcf .BleedBox .ToPdfObject ());};if _edcf .TrimBox !=nil {_cfegcc .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_edcf .TrimBox .ToPdfObject ());};if _edcf .ArtBox !=nil {_cfegcc .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_edcf .ArtBox .ToPdfObject ());};_cfegcc .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_edcf .BoxColorInfo );_cfegcc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_edcf .Contents );if _edcf .Rotate !=nil {_cfegcc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bb .MakeInteger (*_edcf .Rotate ));};_cfegcc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_edcf .Group );_cfegcc .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_edcf .Thumb );_cfegcc .SetIfNotNil ("\u0042",_edcf .B );_cfegcc .SetIfNotNil ("\u0044\u0075\u0072",_edcf .Dur );_cfegcc .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_edcf .Trans );_cfegcc .SetIfNotNil ("\u0041\u0041",_edcf .AA );_cfegcc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_edcf .Metadata );_cfegcc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_edcf .PieceInfo );_cfegcc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_edcf .StructParents );_cfegcc .SetIfNotNil ("\u0049\u0044",_edcf .ID );_cfegcc .SetIfNotNil ("\u0050\u005a",_edcf .PZ );_cfegcc .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_edcf .SeparationInfo );_cfegcc .SetIfNotNil ("\u0054\u0061\u0062\u0073",_edcf .Tabs );_cfegcc .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_edcf .TemplateInstantiated );_cfegcc .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_edcf .PresSteps );_cfegcc .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_edcf .UserUnit );_cfegcc .SetIfNotNil ("\u0056\u0050",_edcf .VP );if _edcf ._bgaf !=nil {_dfdga :=_bb .MakeArray ();for _ ,_ccfeb :=range _edcf ._bgaf {if _deace :=_ccfeb .GetContext ();_deace !=nil {_dfdga .Append (_deace .ToPdfObject ());}else {_dfdga .Append (_ccfeb .ToPdfObject ());};};if _dfdga .Len ()> 0{_cfegcc .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_dfdga );};}else if _edcf .Annots !=nil {_cfegcc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_edcf .Annots );};return _cfegcc ;};func (_cdcee *PdfFunctionType0 )processSamples ()error {_eaffb :=_cg .ResampleBytes (_cdcee ._ffeb ,_cdcee .BitsPerSample );_cdcee ._abdf =_eaffb ;return nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bbcfe *PdfReader )GetOutlines ()(*Outline ,error ){if _bbcfe ==nil {return nil ,_cca .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_dfbc :=_bbcfe .GetOutlineTree ();if _dfbc ==nil {return nil ,_cca .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _efgf func (_egcdf *PdfOutlineTreeNode ,_bgafa *[]*OutlineItem );_efgf =func (_ccfcg *PdfOutlineTreeNode ,_geccf *[]*OutlineItem ){if _ccfcg ==nil {return ;};if _ccfcg ._acgdb ==nil {_ggf .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _bcagb *OutlineItem ;if _eceab ,_ffad :=_ccfcg ._acgdb .(*PdfOutlineItem );_ffad {_bdef :=_eceab .Dest ;if (_bdef ==nil ||_bb .IsNullObject (_bdef ))&&_eceab .A !=nil {if _cdac ,_fabdc :=_bb .GetDict (_eceab .A );_fabdc {_bdef ,_ =_bb .GetArray (_cdac .Get ("\u0044"));};};var _dfga OutlineDest ;if _bdef !=nil &&!_bb .IsNullObject (_bdef ){if _geggef ,_gegd :=_cedfe (_bdef ,_bbcfe );_gegd ==nil {_dfga =*_geggef ;}else {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bdef ,_gegd );};};_bcagb =NewOutlineItem (_eceab .Title .Decoded (),_dfga );*_geccf =append (*_geccf ,_bcagb );if _eceab .Next !=nil {_efgf (_eceab .Next ,_geccf );};};if _ccfcg .First !=nil {if _bcagb !=nil {_geccf =&_bcagb .Entries ;};_efgf (_ccfcg .First ,_geccf );};};_efbbe :=NewOutline ();_efgf (_dfbc ,&_efbbe .Entries );return _efbbe ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_degeb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bb .GetNumberAsFloat (_degeb .Ascent );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_eegd _ec .ReadSeeker ;_acfe *_bb .PdfParser ;_cdfd *PdfReader ;Reader *PdfReader ;_fabc []*PdfPage ;_afcfa *PdfAcroForm ;_dgff _bb .XrefTable ;_egdf int64 ;_bgae int ;_bbeb []_bb .PdfObject ;_gcdg map[_bb .PdfObject ]struct{};_bbed map[_bb .PdfObject ]int64 ;_bccff map[_bb .PdfObject ]struct{};_ebcc map[_bb .PdfObject ]struct{};_aagc int64 ;_fbg bool ;};

// ToPdfObject implements interface PdfModel.
func (_fac *PdfActionGoTo3DView )ToPdfObject ()_bb .PdfObject {_fac .PdfAction .ToPdfObject ();_abd :=_fac ._bd ;_fgag :=_abd .PdfObject .(*_bb .PdfObjectDictionary );_fgag .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeGoTo3DView )));_fgag .SetIfNotNil ("\u0054\u0041",_fac .TA );_fgag .SetIfNotNil ("\u0056",_fac .V );return _abd ;};func (_dfc *PdfReader )newPdfActionResetFormFromDict (_ebcb *_bb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ebcb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ebcb .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_gdbdg DefaultImageHandler )NewImageFromGoImage (goimg _ce .Image )(*Image ,error ){_cbdb ,_bdec :=_fe .FromGoImage (goimg );if _bdec !=nil {return nil ,_bdec ;};_cebga :=_bagfd (_cbdb .Base ());return &_cebga ,nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bffa *PdfPageResources )GetXObjectByName (keyName _bb .PdfObjectName )(*_bb .PdfObjectStream ,XObjectType ){if _bffa .XObject ==nil {return nil ,XObjectTypeUndefined ;};_ccada ,_gbec :=_bb .TraceToDirectObject (_bffa .XObject ).(*_bb .PdfObjectDictionary );if !_gbec {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bb .TraceToDirectObject (_bffa .XObject ));return nil ,XObjectTypeUndefined ;};if _afddab :=_ccada .Get (keyName );_afddab !=nil {_adeec ,_cadfc :=_bb .GetStream (_afddab );if !_cadfc {_ggf .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_afddab );return nil ,XObjectTypeUndefined ;};_dcada :=_adeec .PdfObjectDictionary ;_deaae ,_cadfc :=_bb .TraceToDirectObject (_dcada .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bb .PdfObjectName );if !_cadfc {_ggf .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_dcada .String ());return nil ,XObjectTypeUndefined ;};if *_deaae =="\u0049\u006d\u0061g\u0065"{return _adeec ,XObjectTypeImage ;}else if *_deaae =="\u0046\u006f\u0072\u006d"{return _adeec ,XObjectTypeForm ;}else if *_deaae =="\u0050\u0053"{return _adeec ,XObjectTypePS ;}else {_ggf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_deaae );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gafc *_bb .PdfIndirectObject ;};func _dfdea ()string {return _bfcf };type pdfSignDictionary struct{*_bb .PdfObjectDictionary ;_daef *SignatureHandler ;_afdb *PdfSignature ;_cccge int64 ;_bbceb int ;_badda int ;_ebgab int ;_cggbb int ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_dedd *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_dedd .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_dedd ._afcfa =acroForm ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fbdd *PdfReader )Decrypt (password []byte )(bool ,error ){_dgga ,_efeeb :=_fbdd ._eagc .Decrypt (password );if _efeeb !=nil {return false ,_efeeb ;};if !_dgga {return false ,nil ;};_efeeb =_fbdd .loadStructure ();if _efeeb !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_efeeb );return false ,_efeeb ;};return true ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_afcg *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_afcg .HiVal )};};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_edgbc :=&XObjectImage {};_cceag :=&_bb .PdfObjectStream {};_cceag .PdfObjectDictionary =_bb .MakeDict ();_edgbc ._dddb =_cceag ;return _edgbc ;};

// ToPdfObject implements interface PdfModel.
func (_bcdba *PdfAnnotationSquiggly )ToPdfObject ()_bb .PdfObject {_bcdba .PdfAnnotation .ToPdfObject ();_fcd :=_bcdba ._afg ;_afbe :=_fcd .PdfObject .(*_bb .PdfObjectDictionary );_bcdba .PdfAnnotationMarkup .appendToPdfDictionary (_afbe );_afbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_afbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bcdba .QuadPoints );return _fcd ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_faea *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ggf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbede :=[]float64 {0.0};if _faea .C0 !=nil {_bbede =_faea .C0 ;};_febge :=[]float64 {1.0};if _faea .C1 !=nil {_febge =_faea .C1 ;};var _dbdg []float64 ;for _fcdb :=0;_fcdb < len (_bbede );_fcdb ++{_aagdf :=_bbede [_fcdb ]+_cc .Pow (x [0],_faea .N )*(_febge [_fcdb ]-_bbede [_fcdb ]);_dbdg =append (_dbdg ,_aagdf );};return _dbdg ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ecea *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bb .PdfObject ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bb .PdfObjectInteger ;BitsPerComponent *_bb .PdfObjectInteger ;BitsPerFlag *_bb .PdfObjectInteger ;Decode *_bb .PdfObjectArray ;Function []PdfFunction ;};func (_afd *PdfReader )newPdfActionNamedFromDict (_edb *_bb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_edb .Get ("\u004e")},nil ;};

// Val returns the color value.
func (_ggae *PdfColorDeviceGray )Val ()float64 {return float64 (*_ggae )};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bb .PdfObject ;FS _bb .PdfObject ;F _bb .PdfObject ;UF _bb .PdfObject ;DOS _bb .PdfObject ;Mac _bb .PdfObject ;Unix _bb .PdfObject ;ID _bb .PdfObject ;V _bb .PdfObject ;EF _bb .PdfObject ;RF _bb .PdfObject ;Desc _bb .PdfObject ;CI _bb .PdfObject ;_dgdeg _bb .PdfObject ;};func (_cfca *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// SetContext set the sub annotation (context).
func (_acffe *PdfShading )SetContext (ctx PdfModel ){_acffe ._egfdb =ctx };

// Encoder returns the font's text encoder.
func (_egfg pdfFontType0 )Encoder ()_cefb .TextEncoder {return _egfg ._gddcd };func _fgbd (_aagac _bb .PdfObject )(*PdfFontDescriptor ,error ){_cbbf :=&PdfFontDescriptor {};_aagac =_bb .ResolveReference (_aagac );if _fabgc ,_ceeed :=_aagac .(*_bb .PdfIndirectObject );_ceeed {_cbbf ._cace =_fabgc ;_aagac =_fabgc .PdfObject ;};_eegb ,_gabcf :=_bb .GetDict (_aagac );if !_gabcf {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_aagac );return nil ,_bb .ErrTypeError ;};if _bgec :=_eegb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_bgec !=nil {_cbbf .FontName =_bgec ;}else {_ggf .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_aagba ,_ :=_bb .GetName (_cbbf .FontName );if _ggcae :=_eegb .Get ("\u0054\u0079\u0070\u0065");_ggcae !=nil {_egbb ,_ffbba :=_ggcae .(*_bb .PdfObjectName );if !_ffbba ||string (*_egbb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ggf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ggcae ,_aagba ,_cbbf .FontName );};}else {_ggf .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_aagba ,_cbbf .FontName );};_cbbf .FontFamily =_eegb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cbbf .FontStretch =_eegb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cbbf .FontWeight =_eegb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_cbbf .Flags =_eegb .Get ("\u0046\u006c\u0061g\u0073");_cbbf .FontBBox =_eegb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cbbf .ItalicAngle =_eegb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cbbf .Ascent =_eegb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_cbbf .Descent =_eegb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cbbf .Leading =_eegb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cbbf .CapHeight =_eegb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cbbf .XHeight =_eegb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_cbbf .StemV =_eegb .Get ("\u0053\u0074\u0065m\u0056");_cbbf .StemH =_eegb .Get ("\u0053\u0074\u0065m\u0048");_cbbf .AvgWidth =_eegb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cbbf .MaxWidth =_eegb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_cbbf .MissingWidth =_eegb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cbbf .FontFile =_eegb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cbbf .FontFile2 =_eegb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_cbbf .FontFile3 =_eegb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cbbf .CharSet =_eegb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cbbf .Style =_eegb .Get ("\u0053\u0074\u0079l\u0065");_cbbf .Lang =_eegb .Get ("\u004c\u0061\u006e\u0067");_cbbf .FD =_eegb .Get ("\u0046\u0044");_cbbf .CIDSet =_eegb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cbbf .Flags !=nil {if _fbgdf ,_bfefb :=_bb .GetIntVal (_cbbf .Flags );_bfefb {_cbbf ._dafb =_fbgdf ;};};if _cbbf .MissingWidth !=nil {if _egad ,_bbdd :=_bb .GetNumberAsFloat (_cbbf .MissingWidth );_bbdd ==nil {_cbbf ._dgaa =_egad ;};};if _cbbf .FontFile !=nil {_fcbf ,_cgdee :=_ebee (_cbbf .FontFile );if _cgdee !=nil {return _cbbf ,_cgdee ;};_ggf .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_fcbf );_cbbf .fontFile =_fcbf ;};if _cbbf .FontFile2 !=nil {_afag ,_cbeg :=_ca .NewFontFile2FromPdfObject (_cbbf .FontFile2 );if _cbeg !=nil {return _cbbf ,_cbeg ;};_ggf .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_afag .String ());_cbbf ._efaga =&_afag ;};return _cbbf ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_deaeg *PdfOutlineItem )ToPdfObject ()_bb .PdfObject {_fdcgd :=_deaeg ._becb ;_edbdf :=_fdcgd .PdfObject .(*_bb .PdfObjectDictionary );_edbdf .Set ("\u0054\u0069\u0074l\u0065",_deaeg .Title );if _deaeg .A !=nil {_edbdf .Set ("\u0041",_deaeg .A );};if _ccgeg :=_edbdf .Get ("\u0053\u0045");_ccgeg !=nil {_edbdf .Remove ("\u0053\u0045");};if _deaeg .C !=nil {_edbdf .Set ("\u0043",_deaeg .C );};if _deaeg .Dest !=nil {_edbdf .Set ("\u0044\u0065\u0073\u0074",_deaeg .Dest );};if _deaeg .F !=nil {_edbdf .Set ("\u0046",_deaeg .F );};if _deaeg .Count !=nil {_edbdf .Set ("\u0043\u006f\u0075n\u0074",_bb .MakeInteger (*_deaeg .Count ));};if _deaeg .Next !=nil {_edbdf .Set ("\u004e\u0065\u0078\u0074",_deaeg .Next .ToPdfObject ());};if _deaeg .First !=nil {_edbdf .Set ("\u0046\u0069\u0072s\u0074",_deaeg .First .ToPdfObject ());};if _deaeg .Prev !=nil {_edbdf .Set ("\u0050\u0072\u0065\u0076",_deaeg .Prev .GetContext ().GetContainingPdfObject ());};if _deaeg .Last !=nil {_edbdf .Set ("\u004c\u0061\u0073\u0074",_deaeg .Last .GetContext ().GetContainingPdfObject ());};if _deaeg .Parent !=nil {_edbdf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_deaeg .Parent .GetContext ().GetContainingPdfObject ());};return _fdcgd ;};func (_aadcb *PdfReader )lookupPageByObject (_adbff _bb .PdfObject )(*PdfPage ,error ){return nil ,_cca .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// SetContext sets the sub annotation (context).
func (_acce *PdfAnnotation )SetContext (ctx PdfModel ){_acce ._bafb =ctx };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgffc *PdfShadingType4 )ToPdfObject ()_bb .PdfObject {_cgffc .PdfShading .ToPdfObject ();_eddfc ,_abafa :=_cgffc .getShadingDict ();if _abafa !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cgffc .BitsPerCoordinate !=nil {_eddfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cgffc .BitsPerCoordinate );};if _cgffc .BitsPerComponent !=nil {_eddfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgffc .BitsPerComponent );};if _cgffc .BitsPerFlag !=nil {_eddfc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cgffc .BitsPerFlag );};if _cgffc .Decode !=nil {_eddfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgffc .Decode );};if _cgffc .Function !=nil {if len (_cgffc .Function )==1{_eddfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgffc .Function [0].ToPdfObject ());}else {_ddefc :=_bb .MakeArray ();for _ ,_bdadd :=range _cgffc .Function {_ddefc .Append (_bdadd .ToPdfObject ());};_eddfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddefc );};};return _cgffc ._cggec ;};func (_bffff fontCommon )coreString ()string {_dcdb :="";if _bffff ._ceee !=nil {_dcdb =_bffff ._ceee .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bffff ._cddcc ,_bffff ._babf ,_bffff ._ebad ,_bffff ._aacf ,_bffff ._cgcae !=nil ,_bffff .fontFlags (),_dcdb );};func (_fbdg *PdfReader )newPdfActionJavaScriptFromDict (_cde *_bb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_cde .Get ("\u004a\u0053")},nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _ec .ReadSeeker )(*PdfReader ,error ){_bgbdd :=&PdfReader {_fgeaf :rs ,_ecba :map[_bb .PdfObject ]struct{}{},_aadc :_bgffe (),_fadcg :false };_agbdaf ,_afdda :=_bb .NewParser (rs );if _afdda !=nil {return nil ,_afdda ;};_bgbdd ._eagc =_agbdaf ;_fdde ,_afdda :=_bgbdd .IsEncrypted ();if _afdda !=nil {return nil ,_afdda ;};if !_fdde {_afdda =_bgbdd .loadStructure ();if _afdda !=nil {return nil ,_afdda ;};};return _bgbdd ,nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_gfgbd *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_eadab :=NewPdfOutlineItem ();_eadab .Title =_bb .MakeEncodedString (_gfgbd .Title ,true );_eadab .Dest =_gfgbd .Dest .ToPdfObject ();var _aced []*PdfOutlineItem ;var _badcf int64 ;var _bedd *PdfOutlineItem ;for _ ,_ceafg :=range _gfgbd .Entries {_aabaa ,_afceg :=_ceafg .ToPdfOutlineItem ();_aabaa .Parent =&_eadab .PdfOutlineTreeNode ;if _bedd !=nil {_bedd .Next =&_aabaa .PdfOutlineTreeNode ;_aabaa .Prev =&_bedd .PdfOutlineTreeNode ;};_aced =append (_aced ,_aabaa );_badcf +=_afceg ;_bedd =_aabaa ;};_accab :=len (_aced );_badcf +=int64 (_accab );if _accab > 0{_eadab .First =&_aced [0].PdfOutlineTreeNode ;_eadab .Last =&_aced [_accab -1].PdfOutlineTreeNode ;_eadab .Count =&_badcf ;};return _eadab ,_badcf ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// String returns a string representation of the field.
func (_cfcac *PdfField )String ()string {if _fgddf ,_faab :=_cfcac .ToPdfObject ().(*_bb .PdfIndirectObject );_faab {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cfcac ._bdce ,_fgddf .PdfObject .String ());};return "";};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fbba *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gbfg :=0.3*_fbba .R ()+0.59*_fbba .G ()+0.11*_fbba .B ();_gbfg =_cc .Min (_cc .Max (_gbfg ,0.0),1.0);return NewPdfColorDeviceGray (_gbfg );};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bfc :=NewPdfAnnotation ();_bga :=&PdfAnnotationSound {};_bga .PdfAnnotation =_bfc ;_bga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfc .SetContext (_bga );return _bga ;};type pdfFontType0 struct{fontCommon ;_dcgc *_bb .PdfIndirectObject ;_gddcd _cefb .TextEncoder ;Encoding _bb .PdfObject ;DescendantFont *PdfFont ;_eceae *_ac .CMap ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_afda _bb .PdfObject ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_ffccc ,_gdad :=_ffdea (basefont );if _gdad !=nil {return nil ,_gdad ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_ffccc ._ggff =_cefb .NewWinAnsiEncoder ();};return &PdfFont {_decag :&_ffccc },nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_fefb :=NewPdfAnnotation ();_ebaf :=&PdfAnnotationStrikeOut {};_ebaf .PdfAnnotation =_fefb ;_ebaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fefb .SetContext (_ebaf );return _ebaf ;};func _cdba (_abfab _bb .PdfObject )(*PdfColorspaceCalRGB ,error ){_gfb :=NewPdfColorspaceCalRGB ();if _ecgfe ,_dfgg :=_abfab .(*_bb .PdfIndirectObject );_dfgg {_gfb ._bgbd =_ecgfe ;};_abfab =_bb .TraceToDirectObject (_abfab );_fbfcd ,_dcaa :=_abfab .(*_bb .PdfObjectArray );if !_dcaa {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fbfcd .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_abfab =_bb .TraceToDirectObject (_fbfcd .Get (0));_faac ,_dcaa :=_abfab .(*_bb .PdfObjectName );if !_dcaa {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_faac !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_abfab =_bb .TraceToDirectObject (_fbfcd .Get (1));_cdbb ,_dcaa :=_abfab .(*_bb .PdfObjectDictionary );if !_dcaa {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_abfab =_cdbb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_abfab =_bb .TraceToDirectObject (_abfab );_edga ,_dcaa :=_abfab .(*_bb .PdfObjectArray );if !_dcaa {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _edga .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_gade ,_bdad :=_edga .GetAsFloat64Slice ();if _bdad !=nil {return nil ,_bdad ;};_gfb .WhitePoint =_gade ;_abfab =_cdbb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _abfab !=nil {_abfab =_bb .TraceToDirectObject (_abfab );_ged ,_bbaaa :=_abfab .(*_bb .PdfObjectArray );if !_bbaaa {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ged .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ccdb ,_gead :=_ged .GetAsFloat64Slice ();if _gead !=nil {return nil ,_gead ;};_gfb .BlackPoint =_ccdb ;};_abfab =_cdbb .Get ("\u0047\u0061\u006dm\u0061");if _abfab !=nil {_abfab =_bb .TraceToDirectObject (_abfab );_ccee ,_ccfaa :=_abfab .(*_bb .PdfObjectArray );if !_ccfaa {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _ccee .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_abfc ,_cggd :=_ccee .GetAsFloat64Slice ();if _cggd !=nil {return nil ,_cggd ;};_gfb .Gamma =_abfc ;};_abfab =_cdbb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _abfab !=nil {_abfab =_bb .TraceToDirectObject (_abfab );_cgad ,_efdb :=_abfab .(*_bb .PdfObjectArray );if !_efdb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cgad .Len ()!=9{_ggf .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cgad .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fdbg ,_ddaf :=_cgad .GetAsFloat64Slice ();if _ddaf !=nil {return nil ,_ddaf ;};_gfb .Matrix =_fdbg ;};return _gfb ,nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_gdcac *_bb .PdfIndirectObject ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bb .PdfObject ;Movie _bb .PdfObject ;A _bb .PdfObject ;};var _ffgggc _cd .Time ;

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_bafff *PdfFont )ToPdfObject ()_bb .PdfObject {if _bafff ._decag ==nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bb .MakeNull ();};return _bafff ._decag .ToPdfObject ();};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_agfbd *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};const (_dcdd =0x00001;_fbfe =0x00002;_gbcf =0x00004;_aabf =0x00008;_bdaca =0x00020;_cbed =0x00040;_bgefd =0x10000;_baaf =0x20000;_dgdbf =0x40000;);

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cbde *PdfFont )SubsetRegistered ()error {switch _efbc :=_cbde ._decag .(type ){case *pdfFontType0 :_afgd :=_efbc .subsetRegistered ();if _afgd !=nil {_ggf .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_afgd );return _afgd ;};if _efbc ._dcgc !=nil {if _efbc ._gddcd !=nil {_efbc ._gddcd .ToPdfObject ();};_efbc .ToPdfObject ();};default:_ggf .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_efbc );};return nil ;};func (_dafcc SignatureValidationResult )String ()string {var _fdegb _gfd .Buffer ;_fdegb .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_dafcc .Name ));if _dafcc .Date ._cfdag > 0{_fdegb .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_dafcc .Date .ToGoTime ().String ()));}else {_fdegb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_dafcc .Reason )> 0{_fdegb .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dafcc .Reason ));}else {_fdegb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_dafcc .Location )> 0{_fdegb .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_dafcc .Location ));}else {_fdegb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_dafcc .ContactInfo )> 0{_fdegb .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_dafcc .ContactInfo ));}else {_fdegb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_fdegb .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_dafcc .Fields )));if _dafcc .IsSigned {_fdegb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_fdegb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _dafcc .IsVerified {_fdegb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_fdegb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _dafcc .IsTrusted {_fdegb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_fdegb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_dafcc .GeneralizedTime .IsZero (){_fdegb .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_dafcc .GeneralizedTime .String ()));};return _fdegb .String ();};

// PdfVersion returns version of the PDF file.
func (_ddbab *PdfReader )PdfVersion ()_bb .Version {return _ddbab ._eagc .PdfVersion ()};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_fdca :=PdfColorDeviceRGB {r ,g ,b };return &_fdca ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_debcd *XObjectImage )ToImage ()(*Image ,error ){_ecdaf :=&Image {};if _debcd .Height ==nil {return nil ,_cca .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ecdaf .Height =*_debcd .Height ;if _debcd .Width ==nil {return nil ,_cca .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_ecdaf .Width =*_debcd .Width ;if _debcd .BitsPerComponent ==nil {return nil ,_cca .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_ecdaf .BitsPerComponent =*_debcd .BitsPerComponent ;_ecdaf .ColorComponents =_debcd .ColorSpace .GetNumComponents ();_debcd ._dddb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bb .MakeInteger (int64 (_ecdaf .ColorComponents )));_acgdf ,_cbcca :=_bb .DecodeStream (_debcd ._dddb );if _cbcca !=nil {return nil ,_cbcca ;};_ecdaf .Data =_acgdf ;if _debcd .Decode !=nil {_bccdcc ,_eafdc :=_debcd .Decode .(*_bb .PdfObjectArray );if !_eafdc {_ggf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_cca .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bfadb ,_cbbd :=_bccdcc .ToFloat64Array ();if _cbbd !=nil {return nil ,_cbbd ;};_ecdaf ._afae =_bfadb ;};return _ecdaf ,nil ;};func _acbg (_afcaa *_bb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_baaca :=PdfShadingType6 {};_fbbd :=_afcaa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fbbd ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_adbad ,_gfgdbb :=_fbbd .(*_bb .PdfObjectInteger );if !_gfgdbb {_ggf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbbd );return nil ,_bb .ErrTypeError ;};_baaca .BitsPerCoordinate =_adbad ;_fbbd =_afcaa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fbbd ==nil {_ggf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_adbad ,_gfgdbb =_fbbd .(*_bb .PdfObjectInteger );if !_gfgdbb {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fbbd );return nil ,_bb .ErrTypeError ;};_baaca .BitsPerComponent =_adbad ;_fbbd =_afcaa .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fbbd ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_adbad ,_gfgdbb =_fbbd .(*_bb .PdfObjectInteger );if !_gfgdbb {_ggf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fbbd );return nil ,_bb .ErrTypeError ;};_baaca .BitsPerComponent =_adbad ;_fbbd =_afcaa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fbbd ==nil {_ggf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_bbcda ,_gfgdbb :=_fbbd .(*_bb .PdfObjectArray );if !_gfgdbb {_ggf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbbd );return nil ,_bb .ErrTypeError ;};_baaca .Decode =_bbcda ;if _bggde :=_afcaa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bggde !=nil {_baaca .Function =[]PdfFunction {};if _egace ,_ffcfdf :=_bggde .(*_bb .PdfObjectArray );_ffcfdf {for _ ,_ceda :=range _egace .Elements (){_bccc ,_fgaac :=_cdgbg (_ceda );if _fgaac !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgaac );return nil ,_fgaac ;};_baaca .Function =append (_baaca .Function ,_bccc );};}else {_fbfbf ,_cadfg :=_cdgbg (_bggde );if _cadfg !=nil {_ggf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cadfg );return nil ,_cadfg ;};_baaca .Function =append (_baaca .Function ,_fbfbf );};};return &_baaca ,nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_beeg :=NewPdfAnnotation ();_eca :=&PdfAnnotationLink {};_eca .PdfAnnotation =_beeg ;_beeg .SetContext (_eca );return _eca ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fdag *PdfPattern )GetContainingPdfObject ()_bb .PdfObject {return _fdag ._egbda };

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_bdafe *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ffed ,_ ,_ceff :=_bdafe .CharcodesToUnicodeWithStats (_bdafe .BytesToCharcodes (data ));_eacdd :=_cefb .ExpandLigatures (_ffed );return _eacdd ,_gd .RuneCountInString (_eacdd ),_ceff ;};func _adcbg (_ffcdg _bb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_debc :=&PdfColorspaceDeviceNAttributes {};var _ggcfc *_bb .PdfObjectDictionary ;if _cbfa ,_bbgfd :=_ffcdg .(*_bb .PdfIndirectObject );_bbgfd {_debc ._ffbb =_cbfa ;var _gaag bool ;_ggcfc ,_gaag =_cbfa .PdfObject .(*_bb .PdfObjectDictionary );if !_gaag {_ggf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _fcecd ,_ffgf :=_ffcdg .(*_bb .PdfObjectDictionary );_ffgf {_ggcfc =_fcecd ;}else {_ggf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcaf :=_ggcfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dcaf !=nil {_dgbc ,_bdfe :=_bb .TraceToDirectObject (_dcaf ).(*_bb .PdfObjectName );if !_bdfe {_ggf .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_cca .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_debc .Subtype =_dgbc ;};if _gfeg :=_ggcfc .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gfeg !=nil {_debc .Colorants =_gfeg ;};if _daac :=_ggcfc .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_daac !=nil {_debc .Process =_daac ;};if _gfgb :=_ggcfc .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gfgb !=nil {_debc .MixingHints =_gfgb ;};return _debc ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_ddbg *PdfAppender )Write (w _ec .Writer )error {if _ddbg ._fbg {return _cca .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_aeb :=NewPdfWriter ();_ddef ,_ddbc :=_bb .GetDict (_aeb ._ggda );if !_ddbc {return _cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_fdcc ,_ddbc :=_ddef .Get ("\u004b\u0069\u0064\u0073").(*_bb .PdfObjectArray );if !_ddbc {return _cca .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_cgea ,_ddbc :=_ddef .Get ("\u0043\u006f\u0075n\u0074").(*_bb .PdfObjectInteger );if !_ddbc {return _cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_gaeg :=_ddbg ._cdfd ._eagc ;_bacg :=_gaeg .GetTrailer ();if _bacg ==nil {return _cca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_agdg ,_ddbc :=_bb .GetIndirect (_bacg .Get ("\u0052\u006f\u006f\u0074"));if !_ddbc {return _cca .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_fegde ,_ddbc :=_bb .GetDict (_agdg );if !_ddbc {_ggf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_agdg ,*_bacg );return _cca .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_geeb :=range _fegde .Keys (){if _aeb ._bdaad .Get (_geeb )==nil {_gaba :=_fegde .Get (_geeb );_aeb ._bdaad .Set (_geeb ,_gaba );};};if _ddbg ._afcfa !=nil {_aeb ._bdaad .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ddbg ._afcfa .ToPdfObject ());_ddbg .updateObjectsDeep (_ddbg ._afcfa .ToPdfObject (),nil );};_ddbg .addNewObject (_aeb ._bfefc );_ddbg .addNewObject (_aeb ._effe );_ccbb :=false ;if len (_ddbg ._cdfd .PageList )!=len (_ddbg ._fabc ){_ccbb =true ;}else {for _dgbb :=range _ddbg ._cdfd .PageList {switch {case _ddbg ._fabc [_dgbb ]==_ddbg ._cdfd .PageList [_dgbb ]:case _ddbg ._fabc [_dgbb ]==_ddbg .Reader .PageList [_dgbb ]:default:_ccbb =true ;};if _ccbb {break ;};};};if _ccbb {_ddbg .updateObjectsDeep (_aeb ._ggda ,nil );}else {_ddbg ._bccff [_aeb ._ggda ]=struct{}{};};_aeb ._ggda .ObjectNumber =_ddbg .Reader ._egdge .ObjectNumber ;_ddbg ._bbed [_aeb ._ggda ]=_ddbg .Reader ._egdge .ObjectNumber ;_fega :=[]_bb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_bdac :=range _ddbg ._fabc {_abccg :=_bdac .ToPdfObject ();*_cgea =*_cgea +1;if _eae ,_dfgb :=_abccg .(*_bb .PdfIndirectObject );_dfgb &&_eae .GetParser ()==_ddbg ._cdfd ._eagc {_fdcc .Append (&_eae .PdfObjectReference );continue ;};if _cecc ,_ffef :=_bb .GetDict (_abccg );_ffef {_cga ,_fbag :=_cecc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bb .PdfIndirectObject );for _fbag {_ggf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cga );_abec ,_fbdge :=_cga .PdfObject .(*_bb .PdfObjectDictionary );if !_fbdge {return _cca .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bdbc :=range _fega {_ggf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bdbc );if _cecc .Get (_bdbc )!=nil {_ggf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _ccaf :=_abec .Get (_bdbc );_ccaf !=nil {_ggf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bdbc );_cecc .Set (_bdbc ,_ccaf );};};_cga ,_fbag =_abec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bb .PdfIndirectObject );_ggf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_abec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_cecc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aeb ._ggda );};_ddbg .updateObjectsDeep (_abccg ,nil );_fdcc .Append (_abccg );};if _ ,_fdgdb :=_ddbg ._eegd .Seek (0,_ec .SeekStart );_fdgdb !=nil {return _fdgdb ;};_caed :=make (map[SignatureHandler ]_ec .Writer );_gcba :=_bb .MakeArray ();for _ ,_ffded :=range _ddbg ._bbeb {if _aeea ,_efaeb :=_bb .GetIndirect (_ffded );_efaeb {if _bacc ,_ebe :=_aeea .PdfObject .(*pdfSignDictionary );_ebe {_gega :=*_bacc ._daef ;var _egcf error ;_caed [_gega ],_egcf =_gega .NewDigest (_bacc ._afdb );if _egcf !=nil {return _egcf ;};_gcba .Append (_bb .MakeInteger (0xfffff),_bb .MakeInteger (0xfffff));};};};if _gcba .Len ()> 0{_gcba .Append (_bb .MakeInteger (0xfffff),_bb .MakeInteger (0xfffff));};for _ ,_gcfg :=range _ddbg ._bbeb {if _bdee ,_ecd :=_bb .GetIndirect (_gcfg );_ecd {if _fcfa ,_adfb :=_bdee .PdfObject .(*pdfSignDictionary );_adfb {_fcfa .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gcba );};};};_dcd :=len (_caed )> 0;var _edgg _ec .Reader =_ddbg ._eegd ;if _dcd {_beebf :=make ([]_ec .Writer ,0,len (_caed ));for _ ,_ccdd :=range _caed {_beebf =append (_beebf ,_ccdd );};_edgg =_ec .TeeReader (_ddbg ._eegd ,_ec .MultiWriter (_beebf ...));};_gdfa ,_fgcc :=_ec .Copy (w ,_edgg );if _fgcc !=nil {return _fgcc ;};if len (_ddbg ._bbeb )==0{return nil ;};_aeb ._bgdge =_gdfa ;_aeb .ObjNumOffset =_ddbg ._bgae ;_aeb ._baae =true ;_aeb ._bccfc =_ddbg ._dgff ;_aeb ._fbgag =_ddbg ._egdf ;_aeb ._cggg =_ddbg ._aagc ;_aeb ._faba =_ddbg ._cdfd .PdfVersion ().Minor ;_aeb ._bgacg =_ddbg ._bbed ;_cgaa :=_ddbg ._acfe .GetXrefType ();if _cgaa !=nil {_eabg :=*_cgaa ==_bb .XrefTypeObjectStream ;_aeb ._eecff =&_eabg ;};_aeb ._bfbgfd =map[_bb .PdfObject ]struct{}{};_aeb ._degca =[]_bb .PdfObject {};for _ ,_gcef :=range _ddbg ._bbeb {if _ ,_gfeab :=_ddbg ._bccff [_gcef ];_gfeab {continue ;};_aeb .addObject (_gcef );};_fcde :=w ;if _dcd {_fcde =_gfd .NewBuffer (nil );};if _bfaf :=_aeb .Write (_fcde );_bfaf !=nil {return _bfaf ;};if _dcd {_fdfc :=_fcde .(*_gfd .Buffer ).Bytes ();_adcb :=_bb .MakeArray ();var _ecge []*pdfSignDictionary ;var _fda int64 ;for _ ,_bdc :=range _aeb ._degca {if _baba ,_fdebg :=_bb .GetIndirect (_bdc );_fdebg {if _bbgg ,_egac :=_baba .PdfObject .(*pdfSignDictionary );_egac {_ecge =append (_ecge ,_bbgg );_bcgdd :=_bbgg ._cccge +int64 (_bbgg ._bbceb );_adcb .Append (_bb .MakeInteger (_fda ),_bb .MakeInteger (_bcgdd -_fda ));_fda =_bbgg ._cccge +int64 (_bbgg ._badda );};};};_adcb .Append (_bb .MakeInteger (_fda ),_bb .MakeInteger (_gdfa +int64 (len (_fdfc ))-_fda ));_dead :=[]byte (_adcb .WriteString ());for _ ,_febe :=range _ecge {_gbe :=int (_febe ._cccge -_gdfa );for _gaegf :=_febe ._ebgab ;_gaegf < _febe ._cggbb ;_gaegf ++{_fdfc [_gbe +_gaegf ]=' ';};_bbgd :=_fdfc [_gbe +_febe ._ebgab :_gbe +_febe ._cggbb ];copy (_bbgd ,_dead );};var _fded int ;for _ ,_ebbc :=range _ecge {_ffcd :=int (_ebbc ._cccge -_gdfa );_cagd :=_fdfc [_fded :_ffcd +_ebbc ._bbceb ];_feea :=*_ebbc ._daef ;_caed [_feea ].Write (_cagd );_fded =_ffcd +_ebbc ._badda ;};for _ ,_efb :=range _ecge {_eebd :=_fdfc [_fded :];_gdfb :=*_efb ._daef ;_caed [_gdfb ].Write (_eebd );};for _ ,_gdce :=range _ecge {_cegg :=int (_gdce ._cccge -_gdfa );_abfa :=*_gdce ._daef ;_gddc :=_caed [_abfa ];if _ddbd :=_abfa .Sign (_gdce ._afdb ,_gddc );_ddbd !=nil {return _ddbd ;};_gdce ._afdb .ByteRange =_adcb ;_ecee :=[]byte (_gdce ._afdb .Contents .WriteString ());for _baee :=_gdce ._ebgab ;_baee < _gdce ._cggbb ;_baee ++{_fdfc [_cegg +_baee ]=' ';};for _eef :=_gdce ._bbceb ;_eef < _gdce ._badda ;_eef ++{_fdfc [_cegg +_eef ]=' ';};_fbdc :=_fdfc [_cegg +_gdce ._ebgab :_cegg +_gdce ._cggbb ];copy (_fbdc ,_dead );_fbdc =_fdfc [_cegg +_gdce ._bbceb :_cegg +_gdce ._badda ];copy (_fbdc ,_ecee );};_ecbdf :=_gfd .NewBuffer (_fdfc );_ ,_fgcc =_ec .Copy (w ,_ecbdf );if _fgcc !=nil {return _fgcc ;};};_ddbg ._fbg =true ;return nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cgfbb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_dff :=_cg .NewReader (img .getBase ());_aacb :=_fe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ffcg :=_cg .NewWriter (_aacb );_ccegd :=_cc .Pow (2,float64 (img .BitsPerComponent ))-1;_edaa :=make ([]uint32 ,3);var (_feba uint32 ;ANorm ,X ,Y ,Z ,_afcad ,_bcebb ,_gccgef float64 ;_ggeg error ;);for {_feba ,_ggeg =_dff .ReadSample ();if _ggeg ==_ec .EOF {break ;}else if _ggeg !=nil {return img ,_ggeg ;};ANorm =float64 (_feba )/_ccegd ;X =_cgfbb .WhitePoint [0]*_cc .Pow (ANorm ,_cgfbb .Gamma );Y =_cgfbb .WhitePoint [1]*_cc .Pow (ANorm ,_cgfbb .Gamma );Z =_cgfbb .WhitePoint [2]*_cc .Pow (ANorm ,_cgfbb .Gamma );_afcad =3.240479*X +-1.537150*Y +-0.498535*Z ;_bcebb =-0.969256*X +1.875992*Y +0.041556*Z ;_gccgef =0.055648*X +-0.204043*Y +1.057311*Z ;_afcad =_cc .Min (_cc .Max (_afcad ,0),1.0);_bcebb =_cc .Min (_cc .Max (_bcebb ,0),1.0);_gccgef =_cc .Min (_cc .Max (_gccgef ,0),1.0);_edaa [0]=uint32 (_afcad *_ccegd );_edaa [1]=uint32 (_bcebb *_ccegd );_edaa [2]=uint32 (_gccgef *_ccegd );if _ggeg =_ffcg .WriteSamples (_edaa );_ggeg !=nil {return img ,_ggeg ;};};return _bagfd (&_aacb ),nil ;};

// HasFontByName checks if has font resource by name.
func (_fefdb *PdfPage )HasFontByName (name _bb .PdfObjectName )bool {_bdgbd ,_bfda :=_fefdb .Resources .Font .(*_bb .PdfObjectDictionary );if !_bfda {return false ;};if _bbbca :=_bdgbd .Get (name );_bbbca !=nil {return true ;};return false ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_gdgb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ca .CharMetrics ;

// String returns a human readable description of `fontfile`.
func (_bfgf *fontFile )String ()string {_bbfga :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bfgf ._afge !=nil {_bbfga =_bfgf ._afge .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bfgf ._ffdag ,_bbfga );};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_fbgfae *_bb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bb .PdfObjectName ;Filter *_bb .PdfObjectName ;SubFilter *_bb .PdfObjectName ;Contents *_bb .PdfObjectString ;Cert _bb .PdfObject ;ByteRange *_bb .PdfObjectArray ;Reference *_bb .PdfObjectArray ;Changes *_bb .PdfObjectArray ;Name *_bb .PdfObjectString ;M *_bb .PdfObjectString ;Location *_bb .PdfObjectString ;Reason *_bb .PdfObjectString ;ContactInfo *_bb .PdfObjectString ;R *_bb .PdfObjectInteger ;V *_bb .PdfObjectInteger ;PropBuild *_bb .PdfObjectDictionary ;PropAuthTime *_bb .PdfObjectInteger ;PropAuthType *_bb .PdfObjectName ;};

// ToPdfObject returns a stream object.
func (_cafed *XObjectForm )ToPdfObject ()_bb .PdfObject {_becce :=_cafed ._cfdbb ;_gefc :=_becce .PdfObjectDictionary ;if _cafed .Filter !=nil {_gefc =_cafed .Filter .MakeStreamDict ();_becce .PdfObjectDictionary =_gefc ;};_gefc .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gefc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName ("\u0046\u006f\u0072\u006d"));_gefc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_cafed .FormType );_gefc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_cafed .BBox );_gefc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_cafed .Matrix );if _cafed .Resources !=nil {_gefc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cafed .Resources .ToPdfObject ());};_gefc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cafed .Group );_gefc .SetIfNotNil ("\u0052\u0065\u0066",_cafed .Ref );_gefc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_cafed .MetaData );_gefc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cafed .PieceInfo );_gefc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cafed .LastModified );_gefc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cafed .StructParent );_gefc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cafed .StructParents );_gefc .SetIfNotNil ("\u004f\u0050\u0049",_cafed .OPI );_gefc .SetIfNotNil ("\u004f\u0043",_cafed .OC );_gefc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cafed .Name );_gefc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bb .MakeInteger (int64 (len (_cafed .Stream ))));_becce .Stream =_cafed .Stream ;return _becce ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cdefg pdfFontSimple )GetRuneMetrics (r rune )(_ca .CharMetrics ,bool ){if _cdefg ._dgaac !=nil {_daggg ,_aggg :=_cdefg ._dgaac [r ];if _aggg {return _daggg ,true ;};};_beebba :=_cdefg .Encoder ();if _beebba ==nil {_ggf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cdefg );return _ca .CharMetrics {},false ;};_dgccc ,_ddae :=_beebba .RuneToCharcode (r );if !_ddae {if r !=' '{_ggf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cdefg );};return _ca .CharMetrics {},false ;};_daged ,_dfab :=_cdefg .GetCharMetrics (_dgccc );return _daged ,_dfab ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcfeb *PdfShadingType7 )ToPdfObject ()_bb .PdfObject {_dcfeb .PdfShading .ToPdfObject ();_ecfg ,_dgcce :=_dcfeb .getShadingDict ();if _dgcce !=nil {_ggf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dcfeb .BitsPerCoordinate !=nil {_ecfg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dcfeb .BitsPerCoordinate );};if _dcfeb .BitsPerComponent !=nil {_ecfg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dcfeb .BitsPerComponent );};if _dcfeb .BitsPerFlag !=nil {_ecfg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dcfeb .BitsPerFlag );};if _dcfeb .Decode !=nil {_ecfg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dcfeb .Decode );};if _dcfeb .Function !=nil {if len (_dcfeb .Function )==1{_ecfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcfeb .Function [0].ToPdfObject ());}else {_bbfcb :=_bb .MakeArray ();for _ ,_bcceb :=range _dcfeb .Function {_bbfcb .Append (_bcceb .ToPdfObject ());};_ecfg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbfcb );};};return _dcfeb ._cggec ;};func _cgef (_afga _bb .PdfObject )(*PdfFunctionType3 ,error ){_fdaea :=&PdfFunctionType3 {};var _fdeg *_bb .PdfObjectDictionary ;if _eada ,_abdd :=_afga .(*_bb .PdfIndirectObject );_abdd {_abga ,_bgddf :=_eada .PdfObject .(*_bb .PdfObjectDictionary );if !_bgddf {return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdaea ._abgef =_eada ;_fdeg =_abga ;}else if _fbbfb ,_afee :=_afga .(*_bb .PdfObjectDictionary );_afee {_fdeg =_fbbfb ;}else {return nil ,_cca .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eeda ,_fdcd :=_bb .TraceToDirectObject (_fdeg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bb .PdfObjectArray );if !_fdcd {_ggf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eeda .Len ()!=2{_ggf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_cca .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bedcf ,_aeaf :=_eeda .ToFloat64Array ();if _aeaf !=nil {return nil ,_aeaf ;};_fdaea .Domain =_bedcf ;_eeda ,_fdcd =_bb .TraceToDirectObject (_fdeg .Get ("\u0052\u0061\u006eg\u0065")).(*_bb .PdfObjectArray );if _fdcd {if _eeda .Len ()< 0||_eeda .Len ()%2!=0{return nil ,_cca .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_acged ,_fedf :=_eeda .ToFloat64Array ();if _fedf !=nil {return nil ,_fedf ;};_fdaea .Range =_acged ;};_eeda ,_fdcd =_bb .TraceToDirectObject (_fdeg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bb .PdfObjectArray );if !_fdcd {_ggf .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fdaea .Functions =[]PdfFunction {};for _ ,_cfafb :=range _eeda .Elements (){_dgdff ,_baac :=_cdgbg (_cfafb );if _baac !=nil {return nil ,_baac ;};_fdaea .Functions =append (_fdaea .Functions ,_dgdff );};_eeda ,_fdcd =_bb .TraceToDirectObject (_fdeg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bb .PdfObjectArray );if !_fdcd {_ggf .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dfabf ,_aeaf :=_eeda .ToFloat64Array ();if _aeaf !=nil {return nil ,_aeaf ;};_fdaea .Bounds =_dfabf ;if len (_fdaea .Bounds )!=len (_fdaea .Functions )-1{_ggf .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_fdaea .Bounds ),len (_fdaea .Functions ));return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeda ,_fdcd =_bb .TraceToDirectObject (_fdeg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bb .PdfObjectArray );if !_fdcd {_ggf .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_cca .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eafbe ,_aeaf :=_eeda .ToFloat64Array ();if _aeaf !=nil {return nil ,_aeaf ;};_fdaea .Encode =_eafbe ;if len (_fdaea .Encode )!=2*len (_fdaea .Functions ){_ggf .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_fdaea .Encode ),len (_fdaea .Functions ));return nil ,_cca .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _fdaea ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _ec .ReadSeeker )(*PdfFont ,error ){const _abecf =_cefb .CharCode (32);const _abfe =_cefb .CharCode (255);_geecfb ,_ecae :=_ab .ReadAll (r );if _ecae !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ecae );return nil ,_ecae ;};_eacbb ,_ecae :=_ca .TtfParse (_gfd .NewReader (_geecfb ));if _ecae !=nil {_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ecae );return nil ,_ecae ;};_bffe :=&pdfFontSimple {_cbccg :make (map[_cefb .CharCode ]float64 ),fontCommon :fontCommon {_cddcc :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bffe ._ggff =_cefb .NewWinAnsiEncoder ();_bffe ._babf =_eacbb .PostScriptName ;_bffe .FirstChar =_bb .MakeInteger (int64 (_abecf ));_bffe .LastChar =_bb .MakeInteger (int64 (_abfe ));_adfe :=1000.0/float64 (_eacbb .UnitsPerEm );if len (_eacbb .Widths )<=0{return nil ,_cca .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_beedd :=_adfe *float64 (_eacbb .Widths [0]);_cdgd :=make ([]float64 ,0,_abfe -_abecf +1);for _eggd :=_abecf ;_eggd <=_abfe ;_eggd ++{_dgdee ,_cffd :=_bffe .Encoder ().CharcodeToRune (_eggd );if !_cffd {_ggf .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_eggd );_cdgd =append (_cdgd ,_beedd );continue ;};_beff ,_ebfbe :=_eacbb .Chars [_dgdee ];if !_ebfbe {_ggf .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cdgd =append (_cdgd ,_beedd );continue ;};_bfgab :=_adfe *float64 (_eacbb .Widths [_beff ]);_cdgd =append (_cdgd ,_bfgab );};_bffe .Widths =_bb .MakeIndirectObject (_bb .MakeArrayFromFloats (_cdgd ));if len (_cdgd )< int (_abfe -_abecf +1){_ggf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cdgd ),255-32+1);return nil ,_bb .ErrRangeError ;};for _cffcd :=_cefb .CharCode (_abecf );_cffcd <=_abfe ;_cffcd ++{_bffe ._cbccg [_cffcd ]=_cdgd [_cffcd -_abecf ];};_bffe .Encoding =_bb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fagb :=&PdfFontDescriptor {};_fagb .FontName =_bb .MakeName (_eacbb .PostScriptName );_fagb .Ascent =_bb .MakeFloat (_adfe *float64 (_eacbb .TypoAscender ));_fagb .Descent =_bb .MakeFloat (_adfe *float64 (_eacbb .TypoDescender ));_fagb .CapHeight =_bb .MakeFloat (_adfe *float64 (_eacbb .CapHeight ));_fagb .FontBBox =_bb .MakeArrayFromFloats ([]float64 {_adfe *float64 (_eacbb .Xmin ),_adfe *float64 (_eacbb .Ymin ),_adfe *float64 (_eacbb .Xmax ),_adfe *float64 (_eacbb .Ymax )});_fagb .ItalicAngle =_bb .MakeFloat (float64 (_eacbb .ItalicAngle ));_fagb .MissingWidth =_bb .MakeFloat (_adfe *float64 (_eacbb .Widths [0]));_fcggd ,_ecae :=_bb .MakeStream (_geecfb ,_bb .NewFlateEncoder ());if _ecae !=nil {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ecae );return nil ,_ecae ;};_fcggd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bb .MakeInteger (int64 (len (_geecfb ))));_fagb .FontFile2 =_fcggd ;if _eacbb .Bold {_fagb .StemV =_bb .MakeInteger (120);}else {_fagb .StemV =_bb .MakeInteger (70);};_dcege :=_bdaca ;if _eacbb .IsFixedPitch {_dcege |=_dcdd ;};if _eacbb .ItalicAngle !=0{_dcege |=_cbed ;};_fagb .Flags =_bb .MakeInteger (int64 (_dcege ));_bffe ._ceee =_fagb ;_dcedfa :=&PdfFont {_decag :_bffe };return _dcedfa ,nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bb .PdfObject ;MK _bb .PdfObject ;A _bb .PdfObject ;AA _bb .PdfObject ;BS _bb .PdfObject ;Parent _bb .PdfObject ;_eafa *PdfField ;_cgbaf bool ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cggb *PdfPage )Duplicate ()*PdfPage {var _beec PdfPage ;_beec =*_cggb ;_beec ._bfeaf =_bb .MakeDict ();_beec ._bbacd =_bb .MakeIndirectObject (_beec ._bfeaf );return &_beec ;};func _edfed (_gggd _bb .PdfObject )(*PdfFilespec ,error ){if _gggd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_gggd );};

// B returns the value of the B component of the color.
func (_bbaad *PdfColorLab )B ()float64 {return float64 (_bbaad [2])};func (_dadg *PdfReader )newPdfOutlineItemFromIndirectObject (_bdbga *_bb .PdfIndirectObject )(*PdfOutlineItem ,error ){_cbaeb ,_cfgdd :=_bdbga .PdfObject .(*_bb .PdfObjectDictionary );if !_cfgdd {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cdfaa :=NewPdfOutlineItem ();_agbgg :=_cbaeb .Get ("\u0054\u0069\u0074l\u0065");if _agbgg ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_bggg ,_gbca :=_bb .GetString (_agbgg );if !_gbca {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_agbgg );};_cdfaa .Title =_bggg ;if _cadgbf :=_cbaeb .Get ("\u0043\u006f\u0075n\u0074");_cadgbf !=nil {_caac ,_dddd :=_cadgbf .(*_bb .PdfObjectInteger );if !_dddd {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cadgbf );};_ebeag :=int64 (*_caac );_cdfaa .Count =&_ebeag ;};if _dcegeg :=_cbaeb .Get ("\u0044\u0065\u0073\u0074");_dcegeg !=nil {_cdfaa .Dest =_bb .ResolveReference (_dcegeg );if !_dadg ._fadcg {_faaa :=_dadg .traverseObjectData (_cdfaa .Dest );if _faaa !=nil {return nil ,_faaa ;};};};if _aefae :=_cbaeb .Get ("\u0041");_aefae !=nil {_cdfaa .A =_bb .ResolveReference (_aefae );if !_dadg ._fadcg {_afeb :=_dadg .traverseObjectData (_cdfaa .A );if _afeb !=nil {return nil ,_afeb ;};};};if _cacce :=_cbaeb .Get ("\u0053\u0045");_cacce !=nil {_cdfaa .SE =nil ;};if _fddcg :=_cbaeb .Get ("\u0043");_fddcg !=nil {_cdfaa .C =_bb .ResolveReference (_fddcg );};if _ggcd :=_cbaeb .Get ("\u0046");_ggcd !=nil {_cdfaa .F =_bb .ResolveReference (_ggcd );};return _cdfaa ,nil ;};

// ToInteger convert to an integer format.
func (_edbf *PdfColorCalGray )ToInteger (bits int )uint32 {_gafe :=_cc .Pow (2,float64 (bits ))-1;return uint32 (_gafe *_edbf .Val ());};func (_dadfd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dadfd ._ceee };

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fdcaf *PdfField )FullName ()(string ,error ){var _acgdc _gfd .Buffer ;_adee :=[]string {};if _fdcaf .T !=nil {_adee =append (_adee ,_fdcaf .T .Decoded ());};_deacb :=map[*PdfField ]bool {};_deacb [_fdcaf ]=true ;_bcac :=_fdcaf .Parent ;for _bcac !=nil {if _ ,_dafe :=_deacb [_bcac ];_dafe {return _acgdc .String (),_cca .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bcac .T ==nil {return _acgdc .String (),_cca .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_adee =append (_adee ,_bcac .T .Decoded ());_deacb [_bcac ]=true ;_bcac =_bcac .Parent ;};for _cbgg :=len (_adee )-1;_cbgg >=0;_cbgg --{_acgdc .WriteString (_adee [_cbgg ]);if _cbgg > 0{_acgdc .WriteString ("\u002e");};};return _acgdc .String (),nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bb .PdfObject )(_bb .PdfObjectName ,error ){var _bcag *_bb .PdfObjectName ;var _cafg *_bb .PdfObjectArray ;if _gef ,_edgbg :=obj .(*_bb .PdfIndirectObject );_edgbg {if _fcdef ,_ecgg :=_gef .PdfObject .(*_bb .PdfObjectArray );_ecgg {_cafg =_fcdef ;}else if _aagb ,_beg :=_gef .PdfObject .(*_bb .PdfObjectName );_beg {_bcag =_aagb ;};}else if _abdgb ,_dage :=obj .(*_bb .PdfObjectArray );_dage {_cafg =_abdgb ;}else if _aebg ,_eacf :=obj .(*_bb .PdfObjectName );_eacf {_bcag =_aebg ;};if _bcag !=nil {switch *_bcag {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bcag ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bcag ,nil ;};};if _cafg !=nil &&_cafg .Len ()> 0{if _gagce ,_afdd :=_cafg .Get (0).(*_bb .PdfObjectName );_afdd {switch *_gagce {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cafg .Len ()==1{return *_gagce ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gagce ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gagce ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gagce ,nil ;};};};return "",nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_acgdb interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// GetContentStream returns the XObject Form's content stream.
func (_eefea *XObjectForm )GetContentStream ()([]byte ,error ){_ffafd ,_ebagc :=_bb .DecodeStream (_eefea ._cfdbb );if _ebagc !=nil {return nil ,_ebagc ;};return _ffafd ,nil ;};func (_bdgc fontCommon )asPdfObjectDictionary (_bgdce string )*_bb .PdfObjectDictionary {if _bgdce !=""&&_bdgc ._cddcc !=""&&_bgdce !=_bdgc ._cddcc {_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_bgdce ,_bdgc );}else if _bgdce ==""&&_bdgc ._cddcc ==""{_ggf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bdgc );}else if _bdgc ._cddcc ==""{_bdgc ._cddcc =_bgdce ;};_cgcb :=_bb .MakeDict ();_cgcb .Set ("\u0054\u0079\u0070\u0065",_bb .MakeName ("\u0046\u006f\u006e\u0074"));_cgcb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bb .MakeName (_bdgc ._babf ));_cgcb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bb .MakeName (_bdgc ._cddcc ));if _bdgc ._ceee !=nil {_cgcb .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bdgc ._ceee .ToPdfObject ());};if _bdgc ._cgcae !=nil {_cgcb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bdgc ._cgcae );}else if _bdgc ._adcd !=nil {_fdba ,_aecbg :=_bdgc ._adcd .Stream ();if _aecbg !=nil {_ggf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_aecbg );}else {_cgcb .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fdba );};};return _cgcb ;};

// GetOutlineTree returns the outline tree.
func (_bbebe *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bbebe ._bgaeg };

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_dbeeg *PdfPageResources )SetXObjectFormByName (keyName _bb .PdfObjectName ,xform *XObjectForm )error {_cfedd :=xform .ToPdfObject ().(*_bb .PdfObjectStream );_beagb :=_dbeeg .SetXObjectByName (keyName ,_cfedd );return _beagb ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bb .PdfObject )(*PdfFont ,error ){return _fbdee (fontObj ,true )};

// ToPdfObject implements interface PdfModel.
func (_cdb *PdfActionSetOCGState )ToPdfObject ()_bb .PdfObject {_cdb .PdfAction .ToPdfObject ();_cdaa :=_cdb ._bd ;_ece :=_cdaa .PdfObject .(*_bb .PdfObjectDictionary );_ece .SetIfNotNil ("\u0053",_bb .MakeName (string (ActionTypeSetOCGState )));_ece .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cdb .State );_ece .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cdb .PreserveRB );return _cdaa ;};