//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_gg "bytes";_cf "encoding/binary";_a "errors";_c "fmt";_be "github.com/unidoc/unipdf/v3/common";_gb "github.com/unidoc/unipdf/v3/core";_b "github.com/unidoc/unipdf/v3/internal/cmap";_dc "github.com/unidoc/unipdf/v3/internal/textencoding";
_dcd "golang.org/x/xerrors";_g "io";_ed "os";_ec "regexp";_d "sort";_cc "strings";_ae "sync";);var _aaf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _bab _ae .Once ;func _cbae (_efa map[string ]uint32 )string {var _cgae []string ;for _ccd :=range _efa {_cgae =append (_cgae ,_ccd );};_d .Slice (_cgae ,func (_dcdbd ,_dbg int )bool {return _efa [_cgae [_dcdbd ]]< _efa [_cgae [_dbg ]]});_efe :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_efa ))};
for _ ,_cecf :=range _cgae {_efe =append (_efe ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cecf ,_efa [_cecf ]));};return _cc .Join (_efe ,"\u000a");};func _bag (){const _dbe =600;_ddd =MakeRuneCharSafeMap (len (_bd ));for _ ,_gda :=range _bd {_ddd .Write (_gda ,CharMetrics {Wx :_dbe });
};_cba =_ddd .Copy ();_dcda =_ddd .Copy ();_bf =_ddd .Copy ();};type Font interface{Encoder ()_dc .TextEncoder ;GetRuneMetrics (_ea rune )(CharMetrics ,bool );};func _edb ()StdFont {_bef .Do (_gac );_eg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eg ,_dda );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ab ,_ad :=_aae .read (name );if !_ad {return StdFont {},false ;};return _ab (),true ;};func (_cbd *ttfParser )Parse ()(TtfType ,error ){_acc ,_fgb :=_cbd .ReadStr (4);
if _fgb !=nil {return TtfType {},_fgb ;};if _acc =="\u004f\u0054\u0054\u004f"{return TtfType {},_dcd .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gb .ErrNotSupported );
};if _acc !="\u0000\u0001\u0000\u0000"&&_acc !="\u0074\u0072\u0075\u0065"{_be .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_acc );
};_bgc :=int (_cbd .ReadUShort ());_cbd .Skip (3*2);_cbd ._fdag =make (map[string ]uint32 );var _gfab string ;for _eaa :=0;_eaa < _bgc ;_eaa ++{_gfab ,_fgb =_cbd .ReadStr (4);if _fgb !=nil {return TtfType {},_fgb ;};_cbd .Skip (4);_beca :=_cbd .ReadULong ();
_cbd .Skip (4);_cbd ._fdag [_gfab ]=_beca ;};_be .Log .Trace (_cbae (_cbd ._fdag ));if _fgb =_cbd .ParseComponents ();_fgb !=nil {return TtfType {},_fgb ;};return _cbd ._da ,nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ff :=_aae .read (name );
_ff {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_aae .write (name ,fnc );for _ ,_cgb :=range aliases {RegisterStdFont (_cgb ,fnc );};};func (_cbc *ttfParser )ParseMaxp ()error {if _abda :=_cbc .Seek ("\u006d\u0061\u0078\u0070");
_abda !=nil {return _abda ;};_cbc .Skip (4);_cbc ._ggd =_cbc .ReadUShort ();return nil ;};type StdFont struct{_cgf Descriptor ;_cfb *RuneCharSafeMap ;_ga _dc .TextEncoder ;};func (_ffa *ttfParser )parseCmapFormat12 ()error {_bba :=_ffa .ReadULong ();_be .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ffa ._da .String (),_bba );
for _gcba :=uint32 (0);_gcba < _bba ;_gcba ++{_gcg :=_ffa .ReadULong ();_gfaa :=_ffa .ReadULong ();_ebeg :=_ffa .ReadULong ();if _gcg > 0x0010FFFF||(0xD800<=_gcg &&_gcg <=0xDFFF){return _a .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _gfaa < _gcg ||_gfaa > 0x0010FFFF||(0xD800<=_gfaa &&_gfaa <=0xDFFF){return _a .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _gaae :=_gcg ;_gaae <=_gfaa ;
_gaae ++{if _gaae > 0x10FFFF{_be .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ffa ._da .Chars [rune (_gaae )]=GID (_ebeg );_ebeg ++;};};return nil ;};func (_beaa *ttfParser )Read32Fixed ()float64 {_ege :=float64 (_beaa .ReadShort ());_dgg :=float64 (_beaa .ReadUShort ())/65536.0;return _ege +_dgg ;};func (_f *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ge :=MakeRuneCharSafeMap (_f .Length ());
_f .Range (func (_fb rune ,_eb CharMetrics )(_ebe bool ){_ge ._aa [_fb ]=_eb ;return false });return _ge ;};var _cgc *RuneCharSafeMap ;func (_dca *ttfParser )parseCmapFormat0 ()error {_ccdg ,_ggf :=_dca .ReadStr (256);if _ggf !=nil {return _ggf ;};_bee :=[]byte (_ccdg );
_be .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dca ._da .String (),_ccdg ,_bee );
for _afe ,_ggfd :=range _bee {_dca ._da .Chars [rune (_afe )]=GID (_ggfd );};return nil ;};func _aeb ()StdFont {_cea .Do (_fcc );_agf :=Descriptor {Name :TimesRomanName ,Family :_eab ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_agf ,_fcf );};func (_feff *ttfParser )parseCmapVersion (_cfda int64 )error {_be .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_cfda );
if _feff ._da .Chars ==nil {_feff ._da .Chars =make (map[rune ]GID );};_feff ._gbe .Seek (int64 (_feff ._fdag ["\u0063\u006d\u0061\u0070"])+_cfda ,_g .SeekStart );var _fgfa ,_dde uint32 ;_eaad :=_feff .ReadUShort ();if _eaad < 8{_fgfa =uint32 (_feff .ReadUShort ());
_dde =uint32 (_feff .ReadUShort ());}else {_feff .ReadUShort ();_fgfa =_feff .ReadULong ();_dde =_feff .ReadULong ();};_be .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_eaad ,_fgfa ,_dde );
switch _eaad {case 0:return _feff .parseCmapFormat0 ();case 6:return _feff .parseCmapFormat6 ();case 12:return _feff .parseCmapFormat12 ();default:_be .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_eaad );
return nil ;};};const (_eab ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););var _aade =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _ddd *RuneCharSafeMap ;func _fbd ()StdFont {_cea .Do (_fcc );_fa :=Descriptor {Name :TimesItalicName ,Family :_eab ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_fa ,_afa );};type fontMap struct{_ae .Mutex ;_ggg map[StdFontName ]func ()StdFont ;};var _cea _ae .Once ;func _dcdb ()StdFont {_bab .Do (_bag );_dbc :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dbc ,_cba );};var _aae =&fontMap {_ggg :make (map[StdFontName ]func ()StdFont )};func (_bed *fontMap )read (_ba StdFontName )(func ()StdFont ,bool ){_bed .Lock ();defer _bed .Unlock ();_gbb ,_bc :=_bed ._ggg [_ba ];return _gbb ,_bc ;
};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););type ttfParser struct{_da TtfType ;_gbe _g .ReadSeeker ;_fdag map[string ]uint32 ;_baa uint16 ;_ggd uint16 ;
};func (_gca *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_gca .PostScriptName ,_gca .UnitsPerEm ,_gca .Bold ,_gca .ItalicAngle ,_gca .CapHeight ,len (_gca .Chars ),len (_gca .GlyphNames ));
};var _dcda *RuneCharSafeMap ;func (_gagg StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fc ,_bg :=_gagg ._cfb .Read (r );return _fc ,_bg ;};func init (){RegisterStdFont (CourierName ,_fec ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_dcdb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_bad ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_fbe ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_adea *ttfParser )ReadULong ()(_gdg uint32 ){_cf .Read (_adea ._gbe ,_cf .BigEndian ,&_gdg );
return _gdg ;};func _fcc (){_fcf =MakeRuneCharSafeMap (len (_bd ));_cgc =MakeRuneCharSafeMap (len (_bd ));_ada =MakeRuneCharSafeMap (len (_bd ));_afa =MakeRuneCharSafeMap (len (_bd ));for _aeg ,_fdf :=range _bd {_fcf .Write (_fdf ,CharMetrics {Wx :float64 (_agc [_aeg ])});
_cgc .Write (_fdf ,CharMetrics {Wx :float64 (_aade [_aeg ])});_ada .Write (_fdf ,CharMetrics {Wx :float64 (_eac [_aeg ])});_afa .Write (_fdf ,CharMetrics {Wx :float64 (_gbba [_aeg ])});};};func _gad ()StdFont {_fef :=_dc .NewZapfDingbatsEncoder ();_ddb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_ddb ,_bfg ,_fef );};func _ca ()StdFont {_bef .Do (_gac );_fge :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fge ,_dec );};func (_fgf StdFont )Name ()string {return string (_fgf ._cgf .Name )};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_addgf *ttfParser )readByte ()(_gea uint8 ){_cf .Read (_addgf ._gbe ,_cf .BigEndian ,&_gea );
return _gea ;};var _gbba =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _bf *RuneCharSafeMap ;func (_dcc *ttfParser )Skip (n int ){_dcc ._gbe .Seek (int64 (n ),_g .SeekCurrent )};type CharMetrics struct{Wx float64 ;Wy float64 ;};func init (){RegisterStdFont (HelveticaName ,_acb ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ca ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_edb ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_gfa ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _bd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
type GID =_dc .GID ;func (_gfbb *ttfParser )ParsePost ()error {if _ceac :=_gfbb .Seek ("\u0070\u006f\u0073\u0074");_ceac !=nil {return _ceac ;};_fbbg :=_gfbb .Read32Fixed ();_gfbb ._da .ItalicAngle =_gfbb .Read32Fixed ();_gfbb ._da .UnderlinePosition =_gfbb .ReadShort ();
_gfbb ._da .UnderlineThickness =_gfbb .ReadShort ();_gfbb ._da .IsFixedPitch =_gfbb .ReadULong ()!=0;_gfbb .ReadULong ();_gfbb .ReadULong ();_gfbb .ReadULong ();_gfbb .ReadULong ();_be .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_fbbg );
switch _fbbg {case 1.0:_gfbb ._da .GlyphNames =_edd ;case 2.0:_eacb :=int (_gfbb .ReadUShort ());_bgg :=make ([]int ,_eacb );_gfbb ._da .GlyphNames =make ([]GlyphName ,_eacb );_afde :=-1;for _acag :=0;_acag < _eacb ;_acag ++{_addg :=int (_gfbb .ReadUShort ());
_bgg [_acag ]=_addg ;if _addg <=0x7fff&&_addg > _afde {_afde =_addg ;};};var _bfef []GlyphName ;if _afde >=len (_edd ){_bfef =make ([]GlyphName ,_afde -len (_edd )+1);for _ddba :=0;_ddba < _afde -len (_edd )+1;_ddba ++{_dbd :=int (_gfbb .readByte ());_bbe ,_bcde :=_gfbb .ReadStr (_dbd );
if _bcde !=nil {return _bcde ;};_bfef [_ddba ]=GlyphName (_bbe );};};for _bbge :=0;_bbge < _eacb ;_bbge ++{_eae :=_bgg [_bbge ];if _eae < len (_edd ){_gfbb ._da .GlyphNames [_bbge ]=_edd [_eae ];}else if _eae >=len (_edd )&&_eae <=32767{_gfbb ._da .GlyphNames [_bbge ]=_bfef [_eae -len (_edd )];
}else {_gfbb ._da .GlyphNames [_bbge ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_cfed :=make ([]int ,_gfbb ._ggd );for _dfg :=0;_dfg < len (_cfed );_dfg ++{_eedb :=int (_gfbb .ReadSByte ());_cfed [_dfg ]=_dfg +1+_eedb ;
};_gfbb ._da .GlyphNames =make ([]GlyphName ,len (_cfed ));for _adae :=0;_adae < len (_gfbb ._da .GlyphNames );_adae ++{_ffd :=_edd [_cfed [_adae ]];_gfbb ._da .GlyphNames [_adae ]=_ffd ;};case 3.0:_be .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_be .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_fbbg );};return nil ;};func (_bce *ttfParser )parseCmapFormat6 ()error {_baab :=int (_bce .ReadUShort ());
_bacg :=int (_bce .ReadUShort ());_be .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_bce ._da .String (),_baab ,_bacg );
for _baga :=0;_baga < _bacg ;_baga ++{_begf :=GID (_bce .ReadUShort ());_bce ._da .Chars [rune (_baga +_baab )]=_begf ;};return nil ;};func (_efb *ttfParser )parseCmapSubtable10 (_fea int64 )error {if _efb ._da .Chars ==nil {_efb ._da .Chars =make (map[rune ]GID );
};_efb ._gbe .Seek (int64 (_efb ._fdag ["\u0063\u006d\u0061\u0070"])+_fea ,_g .SeekStart );var _gafb ,_aea uint32 ;_fcab :=_efb .ReadUShort ();if _fcab < 8{_gafb =uint32 (_efb .ReadUShort ());_aea =uint32 (_efb .ReadUShort ());}else {_efb .ReadUShort ();
_gafb =_efb .ReadULong ();_aea =_efb .ReadULong ();};_be .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_fcab ,_gafb ,_aea );
if _fcab !=0{return _a .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecf ,_dbb :=_efb .ReadStr (256);if _dbb !=nil {return _dbb ;
};_agg :=[]byte (_ecf );for _fde ,_cbeg :=range _agg {_efb ._da .Chars [rune (_fde )]=GID (_cbeg );if _cbeg !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fde ,_cbeg ,rune (_cbeg ));
};};return nil ;};func TtfParse (r _g .ReadSeeker )(TtfType ,error ){_bfe :=&ttfParser {_gbe :r };return _bfe .Parse ()};var _fcf *RuneCharSafeMap ;func _afd ()StdFont {_beg :=_dc .NewSymbolEncoder ();_gaga :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_gaga ,_deb ,_beg );};var _ Font =StdFont {};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;
UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _edd =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ada *RuneCharSafeMap ;func _fec ()StdFont {_bab .Do (_bag );_gce :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gce ,_ddd );};func init (){RegisterStdFont (SymbolName ,_afd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_gad );};func (_bgb *ttfParser )ParseComponents ()error {if _fca :=_bgb .ParseHead ();_fca !=nil {return _fca ;};if _df :=_bgb .ParseHhea ();_df !=nil {return _df ;};if _caf :=_bgb .ParseMaxp ();_caf !=nil {return _caf ;
};if _dae :=_bgb .ParseHmtx ();_dae !=nil {return _dae ;};if _ ,_eda :=_bgb ._fdag ["\u006e\u0061\u006d\u0065"];_eda {if _cabb :=_bgb .ParseName ();_cabb !=nil {return _cabb ;};};if _ ,_cecb :=_bgb ._fdag ["\u004f\u0053\u002f\u0032"];_cecb {if _cfd :=_bgb .ParseOS2 ();
_cfd !=nil {return _cfd ;};};if _ ,_bbg :=_bgb ._fdag ["\u0070\u006f\u0073\u0074"];_bbg {if _fba :=_bgb .ParsePost ();_fba !=nil {return _fba ;};};if _ ,_efag :=_bgb ._fdag ["\u0063\u006d\u0061\u0070"];_efag {if _cgdb :=_bgb .ParseCmap ();_cgdb !=nil {return _cgdb ;
};};return nil ;};func (_gaa *ttfParser )ParseCmap ()error {var _dea int64 ;if _bfb :=_gaa .Seek ("\u0063\u006d\u0061\u0070");_bfb !=nil {return _bfb ;};_be .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_gaa .ReadUShort ();_feag :=int (_gaa .ReadUShort ());
_bcb :=int64 (0);_fdd :=int64 (0);_gfgce :=int64 (0);for _afff :=0;_afff < _feag ;_afff ++{_bcfb :=_gaa .ReadUShort ();_ccad :=_gaa .ReadUShort ();_dea =int64 (_gaa .ReadULong ());if _bcfb ==3&&_ccad ==1{_fdd =_dea ;}else if _bcfb ==3&&_ccad ==10{_gfgce =_dea ;
}else if _bcfb ==1&&_ccad ==0{_bcb =_dea ;};};if _bcb !=0{if _fabc :=_gaa .parseCmapVersion (_bcb );_fabc !=nil {return _fabc ;};};if _fdd !=0{if _aafbb :=_gaa .parseCmapSubtable31 (_fdd );_aafbb !=nil {return _aafbb ;};};if _gfgce !=0{if _ccf :=_gaa .parseCmapVersion (_gfgce );
_ccf !=nil {return _ccf ;};};if _fdd ==0&&_bcb ==0&&_gfgce ==0{_be .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _afa *RuneCharSafeMap ;type FontWeight int ;func IsStdFont (name StdFontName )bool {_ ,_bac :=_aae .read (name );return _bac };func init (){RegisterStdFont (TimesRomanName ,_aeb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_geg ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_fbd ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_gaf ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ded *ttfParser )ParseHmtx ()error {if _cbb :=_ded .Seek ("\u0068\u006d\u0074\u0078");_cbb !=nil {return _cbb ;};_ded ._da .Widths =make ([]uint16 ,0,8);for _bagc :=uint16 (0);_bagc < _ded ._baa ;_bagc ++{_ded ._da .Widths =append (_ded ._da .Widths ,_ded .ReadUShort ());
_ded .Skip (2);};if _ded ._baa < _ded ._ggd &&_ded ._baa > 0{_abg :=_ded ._da .Widths [_ded ._baa -1];for _ebg :=_ded ._baa ;_ebg < _ded ._ggd ;_ebg ++{_ded ._da .Widths =append (_ded ._da .Widths ,_abg );};};return nil ;};type GlyphName =_dc .GlyphName ;
var _bef _ae .Once ;func (_dd *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_dd ._gc .RLock ();defer _dd ._gc .RUnlock ();_ebf ,_aag :=_dd ._aa [b ];return _ebf ,_aag ;};func (_cee *RuneCharSafeMap )Length ()int {_cee ._gc .RLock ();defer _cee ._gc .RUnlock ();
return len (_cee ._aa );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func _gac (){_afc =MakeRuneCharSafeMap (len (_bd ));
_dec =MakeRuneCharSafeMap (len (_bd ));for _gfg ,_gfc :=range _bd {_afc .Write (_gfc ,CharMetrics {Wx :float64 (_aaf [_gfg ])});_dec .Write (_gfc ,CharMetrics {Wx :float64 (_cff [_gfg ])});};_dda =_afc .Copy ();_cgdd =_dec .Copy ();};func (_cga *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_cga ._gc .Lock ();
defer _cga ._gc .Unlock ();_cga ._aa [b ]=r ;};func (_ccbc *ttfParser )ReadUShort ()(_bdb uint16 ){_cf .Read (_ccbc ._gbe ,_cf .BigEndian ,&_bdb );return _bdb ;};func _acb ()StdFont {_bef .Do (_gac );_af :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_af ,_afc );};var _agc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _eac =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_cd *ttfParser )ReadStr (length int )(string ,error ){_eff :=make ([]byte ,length );_gafc ,_daf :=_cd ._gbe .Read (_eff );if _daf !=nil {return "",_daf ;}else if _gafc !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_eff ),nil ;};var _cba *RuneCharSafeMap ;var _cff =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_gd StdFont )GetMetricsTable ()*RuneCharSafeMap {return _gd ._cfb };func (_dg *RuneCharSafeMap )Range (f func (_fg rune ,_ce CharMetrics )(_cca bool )){_dg ._gc .RLock ();defer _dg ._gc .RUnlock ();for _fe ,_ee :=range _dg ._aa {if f (_fe ,_ee ){break ;
};};};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_dc .NewStandardEncoder ());};func _geg ()StdFont {_cea .Do (_fcc );_bae :=Descriptor {Name :TimesBoldName ,Family :_eab ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_bae ,_cgc );};func _gaf ()StdFont {_cea .Do (_fcc );_abe :=Descriptor {Name :TimesBoldItalicName ,Family :_eab ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_abe ,_ada );};func NewFontFile2FromPdfObject (obj _gb .PdfObject )(TtfType ,error ){obj =_gb .TraceToDirectObject (obj );_bb ,_egg :=obj .(*_gb .PdfObjectStream );if !_egg {_be .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_gb .ErrTypeError ;};_ccg ,_bcg :=_gb .DecodeStream (_bb );if _bcg !=nil {return TtfType {},_bcg ;};_cab :=ttfParser {_gbe :_gg .NewReader (_ccg )};return _cab .Parse ();};func (_bea *ttfParser )parseCmapSubtable31 (_gcb int64 )error {_bedf :=make ([]rune ,0,8);
_faf :=make ([]rune ,0,8);_aafb :=make ([]int16 ,0,8);_gbga :=make ([]uint16 ,0,8);_bea ._da .Chars =make (map[rune ]GID );_bea ._gbe .Seek (int64 (_bea ._fdag ["\u0063\u006d\u0061\u0070"])+_gcb ,_g .SeekStart );_bfgb :=_bea .ReadUShort ();if _bfgb !=4{return _dcd .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_bfgb ,_gb .ErrNotSupported );
};_bea .Skip (2*2);_adcb :=int (_bea .ReadUShort ()/2);_bea .Skip (3*2);for _bge :=0;_bge < _adcb ;_bge ++{_faf =append (_faf ,rune (_bea .ReadUShort ()));};_bea .Skip (2);for _bcda :=0;_bcda < _adcb ;_bcda ++{_bedf =append (_bedf ,rune (_bea .ReadUShort ()));
};for _bddd :=0;_bddd < _adcb ;_bddd ++{_aafb =append (_aafb ,_bea .ReadShort ());};_gfgc ,_ :=_bea ._gbe .Seek (int64 (0),_g .SeekCurrent );for _aeba :=0;_aeba < _adcb ;_aeba ++{_gbga =append (_gbga ,_bea .ReadUShort ());};for _gagf :=0;_gagf < _adcb ;
_gagf ++{_fcg :=_bedf [_gagf ];_decc :=_faf [_gagf ];_babd :=_aafb [_gagf ];_cgda :=_gbga [_gagf ];if _cgda > 0{_bea ._gbe .Seek (_gfgc +2*int64 (_gagf )+int64 (_cgda ),_g .SeekStart );};for _fbb :=_fcg ;_fbb <=_decc ;_fbb ++{if _fbb ==0xFFFF{break ;};
var _dab int32 ;if _cgda > 0{_dab =int32 (_bea .ReadUShort ());if _dab > 0{_dab +=int32 (_babd );};}else {_dab =_fbb +int32 (_babd );};if _dab >=65536{_dab -=65536;};if _dab > 0{_bea ._da .Chars [_fbb ]=GID (_dab );};};};return nil ;};func _bad ()StdFont {_bab .Do (_bag );
_gf :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_gf ,_bf );
};func (_bbf *ttfParser )ParseHhea ()error {if _bca :=_bbf .Seek ("\u0068\u0068\u0065\u0061");_bca !=nil {return _bca ;};_bbf .Skip (4+15*2);_bbf ._baa =_bbf .ReadUShort ();return nil ;};func (_aac StdFont )ToPdfObject ()_gb .PdfObject {_abd :=_gb .MakeDict ();
_abd .Set ("\u0054\u0079\u0070\u0065",_gb .MakeName ("\u0046\u006f\u006e\u0074"));_abd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gb .MakeName ("\u0054\u0079\u0070e\u0031"));_abd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gb .MakeName (_aac .Name ()));
_abd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aac ._ga .ToPdfObject ());return _gb .MakeIndirectObject (_abd );};var _cgdd *RuneCharSafeMap ;func (_cbg *TtfType )MakeToUnicode ()*_b .CMap {_cbf :=make (map[_b .CharCode ]rune );if len (_cbg .GlyphNames )==0{return _b .NewToUnicodeCMap (_cbf );
};for _fbeg ,_fab :=range _cbg .Chars {_bcd :=_b .CharCode (_fbeg );_cec :=_cbg .GlyphNames [_fab ];_beb ,_cgca :=_dc .GlyphToRune (_cec );if !_cgca {_be .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fbeg ,_cec );
_beb =_dc .MissingCodeRune ;};_cbf [_bcd ]=_beb ;};return _b .NewToUnicodeCMap (_cbf );};func (_bbfc *ttfParser )ParseOS2 ()error {if _egga :=_bbfc .Seek ("\u004f\u0053\u002f\u0032");_egga !=nil {return _egga ;};_acd :=_bbfc .ReadUShort ();_bbfc .Skip (4*2);
_bbfc .Skip (11*2+10+4*4+4);_egf :=_bbfc .ReadUShort ();_bbfc ._da .Bold =(_egf &32)!=0;_bbfc .Skip (2*2);_bbfc ._da .TypoAscender =_bbfc .ReadShort ();_bbfc ._da .TypoDescender =_bbfc .ReadShort ();if _acd >=2{_bbfc .Skip (3*2+2*4+2);_bbfc ._da .CapHeight =_bbfc .ReadShort ();
}else {_bbfc ._da .CapHeight =0;};return nil ;};type RuneCharSafeMap struct{_aa map[rune ]CharMetrics ;_gc _ae .RWMutex ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_aa :make (map[rune ]CharMetrics ,length )};};type StdFontName string ;
func (_ecb *ttfParser )ParseName ()error {if _ecg :=_ecb .Seek ("\u006e\u0061\u006d\u0065");_ecg !=nil {return _ecg ;};_ffe ,_ :=_ecb ._gbe .Seek (0,_g .SeekCurrent );_ecb ._da .PostScriptName ="";_ecb .Skip (2);_aaa :=_ecb .ReadUShort ();_ccb :=_ecb .ReadUShort ();
for _ade :=uint16 (0);_ade < _aaa &&_ecb ._da .PostScriptName =="";_ade ++{_ecb .Skip (3*2);_bgeb :=_ecb .ReadUShort ();_fafa :=_ecb .ReadUShort ();_ecdb :=_ecb .ReadUShort ();if _bgeb ==6{_ecb ._gbe .Seek (_ffe +int64 (_ccb )+int64 (_ecdb ),_g .SeekStart );
_fgc ,_fddd :=_ecb .ReadStr (int (_fafa ));if _fddd !=nil {return _fddd ;};_fgc =_cc .Replace (_fgc ,"\u0000","",-1);_aca ,_fddd :=_ec .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _fddd !=nil {return _fddd ;
};_ecb ._da .PostScriptName =_aca .ReplaceAllString (_fgc ,"");};};if _ecb ._da .PostScriptName ==""{_be .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func TtfParseFile (fileStr string )(TtfType ,error ){_cbe ,_bcgg :=_ed .Open (fileStr );if _bcgg !=nil {return TtfType {},_bcgg ;};defer _cbe .Close ();return TtfParse (_cbe );};var _bfg =&RuneCharSafeMap {_aa :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_aff *TtfType )NewEncoder ()_dc .TextEncoder {return _dc .NewTrueTypeFontEncoder (_aff .Chars )};var _dda *RuneCharSafeMap ;var _dec *RuneCharSafeMap ;func _fbe ()StdFont {_bab .Do (_bag );_aad :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_aad ,_dcda );};func _gfa ()StdFont {_bef .Do (_gac );_gfae :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gfae ,_cgdd );};func (_cg CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cg .Wx ,_cg .Wy );};var _afc *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");
CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_fgg *ttfParser )Seek (tag string )error {_dbce ,_gfe :=_fgg ._fdag [tag ];if !_gfe {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_fgg ._gbe .Seek (int64 (_dbce ),_g .SeekStart );
return nil ;};func (_ccga *ttfParser )ParseHead ()error {if _gdae :=_ccga .Seek ("\u0068\u0065\u0061\u0064");_gdae !=nil {return _gdae ;};_ccga .Skip (3*4);_gbg :=_ccga .ReadULong ();if _gbg !=0x5F0F3CF5{_be .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ccga );
};_ccga .Skip (2);_ccga ._da .UnitsPerEm =_ccga .ReadUShort ();_ccga .Skip (2*8);_ccga ._da .Xmin =_ccga .ReadShort ();_ccga ._da .Ymin =_ccga .ReadShort ();_ccga ._da .Xmax =_ccga .ReadShort ();_ccga ._da .Ymax =_ccga .ReadShort ();return nil ;};func (_aaga *TtfType )MakeEncoder ()(_dc .SimpleEncoder ,error ){_eef :=make (map[_dc .CharCode ]GlyphName );
for _bcf :=_dc .CharCode (0);_bcf <=256;_bcf ++{_afb :=rune (_bcf );_cfe ,_ced :=_aaga .Chars [_afb ];if !_ced {continue ;};var _eed GlyphName ;if int (_cfe )>=0&&int (_cfe )< len (_aaga .GlyphNames ){_eed =_aaga .GlyphNames [_cfe ];}else {_bacb :=rune (_cfe );
if _gab ,_gfd :=_dc .RuneToGlyph (_bacb );_gfd {_eed =_gab ;};};if _eed !=""{_eef [_bcf ]=_eed ;};};if len (_eef )==0{_be .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_aaga ,_aaga .Chars );
};return _dc .NewCustomSimpleTextEncoder (_eef ,nil );};func (_db *fontMap )write (_cb StdFontName ,_fd func ()StdFont ){_db .Lock ();defer _db .Unlock ();_db ._ggg [_cb ]=_fd ;};var _deb =&RuneCharSafeMap {_aa :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_efeg *ttfParser )ReadSByte ()(_fbgf int8 ){_cf .Read (_efeg ._gbe ,_cf .BigEndian ,&_fbgf );return _fbgf ;};func (_cgddb *ttfParser )ReadShort ()(_ace int16 ){_cf .Read (_cgddb ._gbe ,_cf .BigEndian ,&_ace );return _ace ;};type Descriptor struct{Name StdFontName ;
Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _dc .TextEncoder )StdFont {var _gag rune =0xA0;
if _ ,_agb :=metrics .Read (_gag );!_agb {_de ,_ :=metrics .Read (0x20);metrics .Write (_gag ,_de );};return StdFont {_cgf :desc ,_cfb :metrics ,_ga :encoder };};func (_dcf StdFont )Descriptor ()Descriptor {return _dcf ._cgf };func (_bec StdFont )Encoder ()_dc .TextEncoder {return _bec ._ga };
