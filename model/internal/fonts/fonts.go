//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_bf "bytes";_d "encoding/binary";_ga "errors";_g "fmt";_eg "github.com/unidoc/unipdf/v3/common";_gd "github.com/unidoc/unipdf/v3/core";_ad "github.com/unidoc/unipdf/v3/internal/cmap";_c "github.com/unidoc/unipdf/v3/internal/textencoding";
_cb "golang.org/x/xerrors";_e "io";_b "os";_f "regexp";_aa "sort";_gb "strings";_ac "sync";);func (_dgf *fontMap )write (_fdg StdFontName ,_df func ()StdFont ){_dgf .Lock ();defer _dgf .Unlock ();_dgf ._cdd [_fdg ]=_df ;};var _aeda =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
type RuneCharSafeMap struct{_dg map[rune ]CharMetrics ;_ea _ac .RWMutex ;};func _fca ()StdFont {_dcc .Do (_feg );_cde :=Descriptor {Name :TimesBoldName ,Family :_dcd ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_cde ,_ce );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func _fee ()StdFont {_cbf .Do (_aab );_ed :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ed ,_dcf );};var _dfa =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_dgb *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fb :=MakeRuneCharSafeMap (_dgb .Length ());_dgb .Range (func (_gf rune ,_aac CharMetrics )(_gg bool ){_fb ._dg [_gf ]=_aac ;return false });
return _fb ;};type Font interface{Encoder ()_c .TextEncoder ;GetRuneMetrics (_bd rune )(CharMetrics ,bool );};func (_gedc *ttfParser )parseCmapFormat12 ()error {_fgc :=_gedc .ReadULong ();_eg .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_gedc ._gea .String (),_fgc );
for _dfbb :=uint32 (0);_dfbb < _fgc ;_dfbb ++{_baf :=_gedc .ReadULong ();_agc :=_gedc .ReadULong ();_bea :=_gedc .ReadULong ();if _baf > 0x0010FFFF||(0xD800<=_baf &&_baf <=0xDFFF){return _ga .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _agc < _baf ||_agc > 0x0010FFFF||(0xD800<=_agc &&_agc <=0xDFFF){return _ga .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _dac :=_baf ;_dac <=_agc ;
_dac ++{if _dac > 0x10FFFF{_eg .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_gedc ._gea .Chars [rune (_dac )]=GID (_bea );_bea ++;};};return nil ;};func (_fd *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fd ._ea .RLock ();defer _fd ._ea .RUnlock ();_gab ,_ee :=_fd ._dg [b ];return _gab ,_ee ;};var _fda *RuneCharSafeMap ;
var _agad *RuneCharSafeMap ;func (_aedg *TtfType )MakeToUnicode ()*_ad .CMap {_dbf :=make (map[_ad .CharCode ]rune );if len (_aedg .GlyphNames )==0{return _ad .NewToUnicodeCMap (_dbf );};for _dcff ,_edbd :=range _aedg .Chars {_da :=_ad .CharCode (_dcff );
_cee :=_aedg .GlyphNames [_edbd ];_eea ,_fegd :=_c .GlyphToRune (_cee );if !_fegd {_eg .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_dcff ,_cee );
_eea =_c .MissingCodeRune ;};_dbf [_da ]=_eea ;};return _ad .NewToUnicodeCMap (_dbf );};func (_dfg *ttfParser )ParseCmap ()error {var _afge int64 ;if _cbbg :=_dfg .Seek ("\u0063\u006d\u0061\u0070");_cbbg !=nil {return _cbbg ;};_eg .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_dfg .ReadUShort ();_dcde :=int (_dfg .ReadUShort ());_efd :=int64 (0);_cgc :=int64 (0);_bge :=int64 (0);for _bdd :=0;_bdd < _dcde ;_bdd ++{_dea :=_dfg .ReadUShort ();_deg :=_dfg .ReadUShort ();_afge =int64 (_dfg .ReadULong ());if _dea ==3&&_deg ==1{_cgc =_afge ;
}else if _dea ==3&&_deg ==10{_bge =_afge ;}else if _dea ==1&&_deg ==0{_efd =_afge ;};};if _efd !=0{if _facff :=_dfg .parseCmapVersion (_efd );_facff !=nil {return _facff ;};};if _cgc !=0{if _dbff :=_dfg .parseCmapSubtable31 (_cgc );_dbff !=nil {return _dbff ;
};};if _bge !=0{if _aad :=_dfg .parseCmapVersion (_bge );_aad !=nil {return _aad ;};};if _cgc ==0&&_efd ==0&&_bge ==0{_eg .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_acc *ttfParser )Parse ()(TtfType ,error ){_cafe ,_aag :=_acc .ReadStr (4);if _aag !=nil {return TtfType {},_aag ;};if _cafe =="\u004f\u0054\u0054\u004f"{return TtfType {},_cb .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gd .ErrNotSupported );
};if _cafe !="\u0000\u0001\u0000\u0000"&&_cafe !="\u0074\u0072\u0075\u0065"{_eg .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cafe );
};_abfa :=int (_acc .ReadUShort ());_acc .Skip (3*2);_acc ._gcb =make (map[string ]uint32 );var _agaa string ;for _adae :=0;_adae < _abfa ;_adae ++{_agaa ,_aag =_acc .ReadStr (4);if _aag !=nil {return TtfType {},_aag ;};_acc .Skip (4);_efeg :=_acc .ReadULong ();
_acc .Skip (4);_acc ._gcb [_agaa ]=_efeg ;};_eg .Log .Trace (_fecf (_acc ._gcb ));if _aag =_acc .ParseComponents ();_aag !=nil {return TtfType {},_aag ;};return _acc ._gea ,nil ;};func (_egg StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_be ,_gbg :=_egg ._bfe .Read (r );
return _be ,_gbg ;};func (_ffgf StdFont )Name ()string {return string (_ffgf ._ffg .Name )};func (_ef *RuneCharSafeMap )Range (f func (_gdc rune ,_dc CharMetrics )(_ab bool )){_ef ._ea .RLock ();defer _ef ._ea .RUnlock ();for _ca ,_ae :=range _ef ._dg {if f (_ca ,_ae ){break ;
};};};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_dg :make (map[rune ]CharMetrics ,length )};};var _fea =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _cbf _ac .Once ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_aed :=_fef .read (name );_aed {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_fef .write (name ,fnc );for _ ,_gfa :=range aliases {RegisterStdFont (_gfa ,fnc );};};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _c .TextEncoder )StdFont {var _cdc rune =0xA0;if _ ,_dd :=metrics .Read (_cdc );!_dd {_cfc ,_ :=metrics .Read (0x20);
metrics .Write (_cdc ,_cfc );};return StdFont {_ffg :desc ,_bfe :metrics ,_fbd :encoder };};type FontWeight int ;func (_gaa StdFont )ToPdfObject ()_gd .PdfObject {_fa :=_gd .MakeDict ();_fa .Set ("\u0054\u0079\u0070\u0065",_gd .MakeName ("\u0046\u006f\u006e\u0074"));
_fa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gd .MakeName ("\u0054\u0079\u0070e\u0031"));_fa .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gd .MakeName (_gaa .Name ()));_fa .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gaa ._fbd .ToPdfObject ());
return _gd .MakeIndirectObject (_fa );};var _edg =&RuneCharSafeMap {_dg :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _aee ()StdFont {_gbb :=_c .NewZapfDingbatsEncoder ();_ggc :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_ggc ,_edg ,_gbb );};func (_dcfd *ttfParser )ReadULong ()(_bfbc uint32 ){_d .Read (_dcfd ._gde ,_d .BigEndian ,&_bfbc );return _bfbc ;};var _dcf *RuneCharSafeMap ;func (_caga *ttfParser )Read32Fixed ()float64 {_ffdc :=float64 (_caga .ReadShort ());
_dag :=float64 (_caga .ReadUShort ())/65536.0;return _ffdc +_dag ;};func init (){RegisterStdFont (CourierName ,_aae ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_fee ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_bg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_fg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_aea *ttfParser )parseCmapFormat0 ()error {_efc ,_cdae :=_aea .ReadStr (256);if _cdae !=nil {return _cdae ;
};_efg :=[]byte (_efc );_eg .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_aea ._gea .String (),_efc ,_efg );
for _cdfe ,_fbdd :=range _efg {_aea ._gea .Chars [rune (_cdfe )]=GID (_fbdd );};return nil ;};var _fag *RuneCharSafeMap ;const (_dcd ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func _gge ()StdFont {_afg .Do (_ebe );_ada :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ada ,_ccc );};func (_bbgd *ttfParser )ReadSByte ()(_cbce int8 ){_d .Read (_bbgd ._gde ,_d .BigEndian ,&_cbce );return _cbce ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_cdf StdFont )Descriptor ()Descriptor {return _cdf ._ffg };func (_gec StdFont )Encoder ()_c .TextEncoder {return _gec ._fbd };func _aaed ()StdFont {_dcc .Do (_feg );_eaf :=Descriptor {Name :TimesItalicName ,Family :_dcd ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_eaf ,_agad );};func _ade ()StdFont {_acd :=_c .NewSymbolEncoder ();_fec :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_fec ,_cdb ,_acd );};func (_baa *ttfParser )ParseHead ()error {if _bce :=_baa .Seek ("\u0068\u0065\u0061\u0064");_bce !=nil {return _bce ;};_baa .Skip (3*4);_gbfa :=_baa .ReadULong ();if _gbfa !=0x5F0F3CF5{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_baa );
};_baa .Skip (2);_baa ._gea .UnitsPerEm =_baa .ReadUShort ();_baa .Skip (2*8);_baa ._gea .Xmin =_baa .ReadShort ();_baa ._gea .Ymin =_baa .ReadShort ();_baa ._gea .Xmax =_baa .ReadShort ();_baa ._gea .Ymax =_baa .ReadShort ();return nil ;};func init (){RegisterStdFont (HelveticaName ,_gge ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_aga ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_edf ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_edd ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _cdb =&RuneCharSafeMap {_dg :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func TtfParse (r _e .ReadSeeker )(TtfType ,error ){_acb :=&ttfParser {_gde :r };return _acb .Parse ()};func IsStdFont (name StdFontName )bool {_ ,_gbc :=_fef .read (name );return _gbc };func _edf ()StdFont {_afg .Do (_ebe );_gff :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gff ,_bdgg );};func (_cd *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_cd ._ea .Lock ();defer _cd ._ea .Unlock ();_cd ._dg [b ]=r ;};var _fbg =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _bbb *RuneCharSafeMap ;type GID =_c .GID ;var _fc =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _afg _ac .Once ;func NewFontFile2FromPdfObject (obj _gd .PdfObject )(TtfType ,error ){obj =_gd .TraceToDirectObject (obj );_ddd ,_bga :=obj .(*_gd .PdfObjectStream );if !_bga {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_gd .ErrTypeError ;};_bab ,_edfd :=_gd .DecodeStream (_ddd );if _edfd !=nil {return TtfType {},_edfd ;};_ccca :=ttfParser {_gde :_bf .NewReader (_bab )};return _ccca .Parse ();};func (_aeg *ttfParser )readByte ()(_feee uint8 ){_d .Read (_aeg ._gde ,_d .BigEndian ,&_feee );
return _feee ;};func _ebe (){_ccc =MakeRuneCharSafeMap (len (_fc ));_bbb =MakeRuneCharSafeMap (len (_fc ));for _bbf ,_bde :=range _fc {_ccc .Write (_bde ,CharMetrics {Wx :float64 (_fbg [_bbf ])});_bbb .Write (_bde ,CharMetrics {Wx :float64 (_dfa [_bbf ])});
};_bdgg =_ccc .Copy ();_afa =_bbb .Copy ();};func init (){RegisterStdFont (SymbolName ,_ade ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_aee );};var _ba =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
type StdFontName string ;func (_cfa *ttfParser )ParseHhea ()error {if _cfe :=_cfa .Seek ("\u0068\u0068\u0065\u0061");_cfe !=nil {return _cfe ;};_cfa .Skip (4+15*2);_cfa ._bfb =_cfa .ReadUShort ();return nil ;};func (_gfd *TtfType )MakeEncoder ()(_c .SimpleEncoder ,error ){_efe :=make (map[_c .CharCode ]GlyphName );
for _eaa :=_c .CharCode (0);_eaa <=256;_eaa ++{_feb :=rune (_eaa );_bfg ,_db :=_gfd .Chars [_feb ];if !_db {continue ;};var _cbb GlyphName ;if int (_bfg )>=0&&int (_bfg )< len (_gfd .GlyphNames ){_cbb =_gfd .GlyphNames [_bfg ];}else {_abf :=rune (_bfg );
if _ffa ,_bcf :=_c .RuneToGlyph (_abf );_bcf {_cbb =_ffa ;};};if _cbb !=""{_efe [_eaa ]=_cbb ;};};if len (_efe )==0{_eg .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gfd ,_gfd .Chars );
};return _c .NewCustomSimpleTextEncoder (_efe ,nil );};func _dgcb ()StdFont {_dcc .Do (_feg );_ged :=Descriptor {Name :TimesRomanName ,Family :_dcd ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ged ,_fag );};func init (){RegisterStdFont (TimesRomanName ,_dgcb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_fca ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_aaed ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_bee ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _feg (){_fag =MakeRuneCharSafeMap (len (_fc ));_ce =MakeRuneCharSafeMap (len (_fc ));_bcb =MakeRuneCharSafeMap (len (_fc ));_agad =MakeRuneCharSafeMap (len (_fc ));for _fga ,_fgg :=range _fc {_fag .Write (_fgg ,CharMetrics {Wx :float64 (_ba [_fga ])});
_ce .Write (_fgg ,CharMetrics {Wx :float64 (_fdab [_fga ])});_bcb .Write (_fgg ,CharMetrics {Wx :float64 (_aeda [_fga ])});_agad .Write (_fgg ,CharMetrics {Wx :float64 (_dee [_fga ])});};};var _bdgg *RuneCharSafeMap ;func _aae ()StdFont {_cbf .Do (_aab );
_cc :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_cc ,_caf );
};type ttfParser struct{_gea TtfType ;_gde _e .ReadSeeker ;_gcb map[string ]uint32 ;_bfb uint16 ;_ege uint16 ;};var _dcc _ac .Once ;var _fdab =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););type GlyphName =_c .GlyphName ;func (_daa *ttfParser )parseCmapSubtable10 (_bfc int64 )error {if _daa ._gea .Chars ==nil {_daa ._gea .Chars =make (map[rune ]GID );
};_daa ._gde .Seek (int64 (_daa ._gcb ["\u0063\u006d\u0061\u0070"])+_bfc ,_e .SeekStart );var _ece ,_gbbc uint32 ;_agf :=_daa .ReadUShort ();if _agf < 8{_ece =uint32 (_daa .ReadUShort ());_gbbc =uint32 (_daa .ReadUShort ());}else {_daa .ReadUShort ();_ece =_daa .ReadULong ();
_gbbc =_daa .ReadULong ();};_eg .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_agf ,_ece ,_gbbc );
if _agf !=0{return _ga .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gbfe ,_fae :=_daa .ReadStr (256);if _fae !=nil {return _fae ;
};_bcff :=[]byte (_gbfe );for _fcf ,_bbc :=range _bcff {_daa ._gea .Chars [rune (_fcf )]=GID (_bbc );if _bbc !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fcf ,_bbc ,rune (_bbc ));
};};return nil ;};func _edd ()StdFont {_afg .Do (_ebe );_edb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_edb ,_afa );};func (_dgd *ttfParser )ReadStr (length int )(string ,error ){_dbe :=make ([]byte ,length );_ced ,_gfcg :=_dgd ._gde .Read (_dbe );if _gfcg !=nil {return "",_gfcg ;}else if _ced !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_dbe ),nil ;};var _dee =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_dgcg *ttfParser )ParseMaxp ()error {if _bgb :=_dgcg .Seek ("\u006d\u0061\u0078\u0070");_bgb !=nil {return _bgb ;};_dgcg .Skip (4);_dgcg ._ege =_dgcg .ReadUShort ();return nil ;};var _ Font =StdFont {};func _fg ()StdFont {_cbf .Do (_aab );_fac :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fac ,_fda );};func (_fe *fontMap )read (_dgc StdFontName )(func ()StdFont ,bool ){_fe .Lock ();defer _fe .Unlock ();_cda ,_bff :=_fe ._cdd [_dgc ];return _cda ,_bff ;};var _afa *RuneCharSafeMap ;func (_dfb *TtfType )NewEncoder ()_c .TextEncoder {return _c .NewTrueTypeFontEncoder (_dfb .Chars )};
var _caf *RuneCharSafeMap ;func TtfParseFile (fileStr string )(TtfType ,error ){_abe ,_gbf :=_b .Open (fileStr );if _gbf !=nil {return TtfType {},_gbf ;};defer _abe .Close ();return TtfParse (_abe );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ag ,_bdg :=_fef .read (name );
if !_bdg {return StdFont {},false ;};return _ag (),true ;};func (_gca *ttfParser )ParseComponents ()error {if _facf :=_gca .ParseHead ();_facf !=nil {return _facf ;};if _add :=_gca .ParseHhea ();_add !=nil {return _add ;};if _bdce :=_gca .ParseMaxp ();
_bdce !=nil {return _bdce ;};if _bgdf :=_gca .ParseHmtx ();_bgdf !=nil {return _bgdf ;};if _ ,_fgge :=_gca ._gcb ["\u006e\u0061\u006d\u0065"];_fgge {if _cag :=_gca .ParseName ();_cag !=nil {return _cag ;};};if _ ,_bca :=_gca ._gcb ["\u004f\u0053\u002f\u0032"];
_bca {if _acfe :=_gca .ParseOS2 ();_acfe !=nil {return _acfe ;};};if _ ,_ead :=_gca ._gcb ["\u0070\u006f\u0073\u0074"];_ead {if _agadd :=_gca .ParsePost ();_agadd !=nil {return _agadd ;};};if _ ,_bfbd :=_gca ._gcb ["\u0063\u006d\u0061\u0070"];_bfbd {if _gbbd :=_gca .ParseCmap ();
_gbbd !=nil {return _gbbd ;};};return nil ;};func (_ecb *ttfParser )ParsePost ()error {if _bdcg :=_ecb .Seek ("\u0070\u006f\u0073\u0074");_bdcg !=nil {return _bdcg ;};_abfag :=_ecb .Read32Fixed ();_ecb ._gea .ItalicAngle =_ecb .Read32Fixed ();_ecb ._gea .UnderlinePosition =_ecb .ReadShort ();
_ecb ._gea .UnderlineThickness =_ecb .ReadShort ();_ecb ._gea .IsFixedPitch =_ecb .ReadULong ()!=0;_ecb .ReadULong ();_ecb .ReadULong ();_ecb .ReadULong ();_ecb .ReadULong ();_eg .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_abfag );
switch _abfag {case 1.0:_ecb ._gea .GlyphNames =_fea ;case 2.0:_ffd :=int (_ecb .ReadUShort ());_ggce :=make ([]int ,_ffd );_ecb ._gea .GlyphNames =make ([]GlyphName ,_ffd );_bgdc :=-1;for _gfb :=0;_gfb < _ffd ;_gfb ++{_adde :=int (_ecb .ReadUShort ());
_ggce [_gfb ]=_adde ;if _adde <=0x7fff&&_adde > _bgdc {_bgdc =_adde ;};};var _addb []GlyphName ;if _bgdc >=len (_fea ){_addb =make ([]GlyphName ,_bgdc -len (_fea )+1);for _afb :=0;_afb < _bgdc -len (_fea )+1;_afb ++{_ddde :=int (_ecb .readByte ());_bdf ,_bef :=_ecb .ReadStr (_ddde );
if _bef !=nil {return _bef ;};_addb [_afb ]=GlyphName (_bdf );};};for _gfde :=0;_gfde < _ffd ;_gfde ++{_agaag :=_ggce [_gfde ];if _agaag < len (_fea ){_ecb ._gea .GlyphNames [_gfde ]=_fea [_agaag ];}else if _agaag >=len (_fea )&&_agaag <=32767{_ecb ._gea .GlyphNames [_gfde ]=_addb [_agaag -len (_fea )];
}else {_ecb ._gea .GlyphNames [_gfde ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_bec :=make ([]int ,_ecb ._ege );for _bag :=0;_bag < len (_bec );_bag ++{_eac :=int (_ecb .ReadSByte ());_bec [_bag ]=_bag +1+_eac ;};_ecb ._gea .GlyphNames =make ([]GlyphName ,len (_bec ));
for _bbda :=0;_bbda < len (_ecb ._gea .GlyphNames );_bbda ++{_gfgf :=_fea [_bec [_bbda ]];_ecb ._gea .GlyphNames [_bbda ]=_gfgf ;};case 3.0:_eg .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_eg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_abfag );};return nil ;};func _aab (){const _af =600;_caf =MakeRuneCharSafeMap (len (_fc ));
for _ ,_bc :=range _fc {_caf .Write (_bc ,CharMetrics {Wx :_af });};_dcf =_caf .Copy ();_fda =_caf .Copy ();_dde =_caf .Copy ();};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;
Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _bee ()StdFont {_dcc .Do (_feg );_fbb :=Descriptor {Name :TimesBoldItalicName ,Family :_dcd ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_fbb ,_bcb );};func _fecf (_dca map[string ]uint32 )string {var _agg []string ;for _ccg :=range _dca {_agg =append (_agg ,_ccg );};_aa .Slice (_agg ,func (_acg ,_bgd int )bool {return _dca [_agg [_acg ]]< _dca [_agg [_bgd ]]});_ffe :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_dca ))};
for _ ,_ebc :=range _agg {_ffe =append (_ffe ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ebc ,_dca [_ebc ]));};return _gb .Join (_ffe ,"\u000a");};type StdFont struct{_ffg Descriptor ;_bfe *RuneCharSafeMap ;_fbd _c .TextEncoder ;};func (_aedgf *ttfParser )ParseOS2 ()error {if _gbcc :=_aedgf .Seek ("\u004f\u0053\u002f\u0032");
_gbcc !=nil {return _gbcc ;};_eebe :=_aedgf .ReadUShort ();_aedgf .Skip (4*2);_aedgf .Skip (11*2+10+4*4+4);_caef :=_aedgf .ReadUShort ();_aedgf ._gea .Bold =(_caef &32)!=0;_aedgf .Skip (2*2);_aedgf ._gea .TypoAscender =_aedgf .ReadShort ();_aedgf ._gea .TypoDescender =_aedgf .ReadShort ();
if _eebe >=2{_aedgf .Skip (3*2+2*4+2);_aedgf ._gea .CapHeight =_aedgf .ReadShort ();}else {_aedgf ._gea .CapHeight =0;};return nil ;};var _ce *RuneCharSafeMap ;func (_cea *ttfParser )ParseHmtx ()error {if _eafe :=_cea .Seek ("\u0068\u006d\u0074\u0078");
_eafe !=nil {return _eafe ;};_cea ._gea .Widths =make ([]uint16 ,0,8);for _bed :=uint16 (0);_bed < _cea ._bfb ;_bed ++{_cea ._gea .Widths =append (_cea ._gea .Widths ,_cea .ReadUShort ());_cea .Skip (2);};if _cea ._bfb < _cea ._ege &&_cea ._bfb > 0{_cbaf :=_cea ._gea .Widths [_cea ._bfb -1];
for _dfe :=_cea ._bfb ;_dfe < _cea ._ege ;_dfe ++{_cea ._gea .Widths =append (_cea ._gea .Widths ,_cbaf );};};return nil ;};func (_aaef *ttfParser )Skip (n int ){_aaef ._gde .Seek (int64 (n ),_e .SeekCurrent )};var _bcb *RuneCharSafeMap ;func (_eb StdFont )GetMetricsTable ()*RuneCharSafeMap {return _eb ._bfe };
var _fef =&fontMap {_cdd :make (map[StdFontName ]func ()StdFont )};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_c .NewStandardEncoder ());
};func _aga ()StdFont {_afg .Do (_ebe );_acf :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_acf ,_bbb );};func (_abg *RuneCharSafeMap )Length ()int {_abg ._ea .RLock ();defer _abg ._ea .RUnlock ();return len (_abg ._dg );};var _ccc *RuneCharSafeMap ;func (_fab *ttfParser )ReadUShort ()(_adc uint16 ){_d .Read (_fab ._gde ,_d .BigEndian ,&_adc );
return _adc ;};func (_eadd *ttfParser )parseCmapVersion (_fge int64 )error {_eg .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_fge );if _eadd ._gea .Chars ==nil {_eadd ._gea .Chars =make (map[rune ]GID );
};_eadd ._gde .Seek (int64 (_eadd ._gcb ["\u0063\u006d\u0061\u0070"])+_fge ,_e .SeekStart );var _egf ,_fcd uint32 ;_cec :=_eadd .ReadUShort ();if _cec < 8{_egf =uint32 (_eadd .ReadUShort ());_fcd =uint32 (_eadd .ReadUShort ());}else {_eadd .ReadUShort ();
_egf =_eadd .ReadULong ();_fcd =_eadd .ReadULong ();};_eg .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cec ,_egf ,_fcd );
switch _cec {case 0:return _eadd .parseCmapFormat0 ();case 6:return _eadd .parseCmapFormat6 ();case 12:return _eadd .parseCmapFormat12 ();default:_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cec );
return nil ;};};func (_gc CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_gc .Wx ,_gc .Wy );};var _dde *RuneCharSafeMap ;func (_fce *ttfParser )parseCmapFormat6 ()error {_gffd :=int (_fce .ReadUShort ());
_eca :=int (_fce .ReadUShort ());_eg .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_fce ._gea .String (),_gffd ,_eca );
for _beg :=0;_beg < _eca ;_beg ++{_edgb :=GID (_fce .ReadUShort ());_fce ._gea .Chars [rune (_beg +_gffd )]=_edgb ;};return nil ;};func (_bae *ttfParser )parseCmapSubtable31 (_fgaa int64 )error {_cdbb :=make ([]rune ,0,8);_gbd :=make ([]rune ,0,8);_bfea :=make ([]int16 ,0,8);
_cfb :=make ([]uint16 ,0,8);_bae ._gea .Chars =make (map[rune ]GID );_bae ._gde .Seek (int64 (_bae ._gcb ["\u0063\u006d\u0061\u0070"])+_fgaa ,_e .SeekStart );_dfea :=_bae .ReadUShort ();if _dfea !=4{return _cb .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_dfea ,_gd .ErrNotSupported );
};_bae .Skip (2*2);_eeb :=int (_bae .ReadUShort ()/2);_bae .Skip (3*2);for _cae :=0;_cae < _eeb ;_cae ++{_gbd =append (_gbd ,rune (_bae .ReadUShort ()));};_bae .Skip (2);for _bbd :=0;_bbd < _eeb ;_bbd ++{_cdbb =append (_cdbb ,rune (_bae .ReadUShort ()));
};for _ccgd :=0;_ccgd < _eeb ;_ccgd ++{_bfea =append (_bfea ,_bae .ReadShort ());};_bbg ,_ :=_bae ._gde .Seek (int64 (0),_e .SeekCurrent );for _eag :=0;_eag < _eeb ;_eag ++{_cfb =append (_cfb ,_bae .ReadUShort ());};for _cbad :=0;_cbad < _eeb ;_cbad ++{_gfg :=_cdbb [_cbad ];
_gbba :=_gbd [_cbad ];_aef :=_bfea [_cbad ];_gfc :=_cfb [_cbad ];if _gfc > 0{_bae ._gde .Seek (_bbg +2*int64 (_cbad )+int64 (_gfc ),_e .SeekStart );};for _caa :=_gfg ;_caa <=_gbba ;_caa ++{if _caa ==0xFFFF{break ;};var _dgbb int32 ;if _gfc > 0{_dgbb =int32 (_bae .ReadUShort ());
if _dgbb > 0{_dgbb +=int32 (_aef );};}else {_dgbb =_caa +int32 (_aef );};if _dgbb >=65536{_dgbb -=65536;};if _dgbb > 0{_bae ._gea .Chars [_caa ]=GID (_dgbb );};};};return nil ;};func (_afc *ttfParser )ReadShort ()(_fdf int16 ){_d .Read (_afc ._gde ,_d .BigEndian ,&_fdf );
return _fdf };func (_cga *ttfParser )ParseName ()error {if _adaf :=_cga .Seek ("\u006e\u0061\u006d\u0065");_adaf !=nil {return _adaf ;};_gbbf ,_ :=_cga ._gde .Seek (0,_e .SeekCurrent );_cga ._gea .PostScriptName ="";_cga .Skip (2);_degb :=_cga .ReadUShort ();
_bgeg :=_cga .ReadUShort ();for _ebf :=uint16 (0);_ebf < _degb &&_cga ._gea .PostScriptName =="";_ebf ++{_cga .Skip (3*2);_cfee :=_cga .ReadUShort ();_cgb :=_cga .ReadUShort ();_fad :=_cga .ReadUShort ();if _cfee ==6{_cga ._gde .Seek (_gbbf +int64 (_bgeg )+int64 (_fad ),_e .SeekStart );
_eff ,_cbc :=_cga .ReadStr (int (_cgb ));if _cbc !=nil {return _cbc ;};_eff =_gb .Replace (_eff ,"\u0000","",-1);_bda ,_cbc :=_f .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _cbc !=nil {return _cbc ;};
_cga ._gea .PostScriptName =_bda .ReplaceAllString (_eff ,"");};};if _cga ._gea .PostScriptName ==""{_eg .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _bg ()StdFont {_cbf .Do (_aab );_eab :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_eab ,_dde );};func (_ec *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ec .PostScriptName ,_ec .UnitsPerEm ,_ec .Bold ,_ec .ItalicAngle ,_ec .CapHeight ,len (_ec .Chars ),len (_ec .GlyphNames ));
};type fontMap struct{_ac .Mutex ;_cdd map[StdFontName ]func ()StdFont ;};func (_gbga *ttfParser )Seek (tag string )error {_adea ,_edcf :=_gbga ._gcb [tag ];if !_edcf {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_gbga ._gde .Seek (int64 (_adea ),_e .SeekStart );return nil ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};