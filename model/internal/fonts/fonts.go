//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fgc "bytes";_fga "encoding/binary";_fg "errors";_cf "fmt";_gb "github.com/unidoc/unipdf/v3/common";_gf "github.com/unidoc/unipdf/v3/core";_ad "github.com/unidoc/unipdf/v3/internal/cmap";_b "github.com/unidoc/unipdf/v3/internal/textencoding";
_be "golang.org/x/xerrors";_f "io";_e "os";_d "regexp";_g "sort";_a "strings";_df "sync";);func (_gaf *TtfType )MakeEncoder ()(_b .SimpleEncoder ,error ){_dggf :=make (map[_b .CharCode ]GlyphName );for _dfd :=_b .CharCode (0);_dfd <=256;_dfd ++{_ea :=rune (_dfd );
_eed ,_gad :=_gaf .Chars [_ea ];if !_gad {continue ;};var _fdb GlyphName ;if int (_eed )>=0&&int (_eed )< len (_gaf .GlyphNames ){_fdb =_gaf .GlyphNames [_eed ];}else {_fcb :=rune (_eed );if _bee ,_bdcb :=_b .RuneToGlyph (_fcb );_bdcb {_fdb =_bee ;};};
if _fdb !=""{_dggf [_dfd ]=_fdb ;};};if len (_dggf )==0{_gb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gaf ,_gaf .Chars );
};return _b .NewCustomSimpleTextEncoder (_dggf ,nil );};var _fea *RuneCharSafeMap ;func (_bae StdFont )GetMetricsTable ()*RuneCharSafeMap {return _bae ._ee };type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;
IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};type fontMap struct{_df .Mutex ;
_dc map[StdFontName ]func ()StdFont ;};func TtfParse (r _f .ReadSeeker )(TtfType ,error ){_gcb :=&ttfParser {_ddd :r };return _gcb .Parse ()};func _gcd ()StdFont {_bdce .Do (_bbc );_gee :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gee ,_fea );};var _ Font =StdFont {};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_bd :make (map[rune ]CharMetrics ,length )};};func (_ebdg *ttfParser )ParseComponents ()error {if _aef :=_ebdg .ParseHead ();
_aef !=nil {return _aef ;};if _ede :=_ebdg .ParseHhea ();_ede !=nil {return _ede ;};if _cbef :=_ebdg .ParseMaxp ();_cbef !=nil {return _cbef ;};if _adgb :=_ebdg .ParseHmtx ();_adgb !=nil {return _adgb ;};if _ ,_fcd :=_ebdg ._geea ["\u006e\u0061\u006d\u0065"];
_fcd {if _bbced :=_ebdg .ParseName ();_bbced !=nil {return _bbced ;};};if _ ,_gfe :=_ebdg ._geea ["\u004f\u0053\u002f\u0032"];_gfe {if _ddb :=_ebdg .ParseOS2 ();_ddb !=nil {return _ddb ;};};if _ ,_ebdf :=_ebdg ._geea ["\u0070\u006f\u0073\u0074"];_ebdf {if _fdfg :=_ebdg .ParsePost ();
_fdfg !=nil {return _fdfg ;};};if _ ,_ccf :=_ebdg ._geea ["\u0063\u006d\u0061\u0070"];_ccf {if _gfeb :=_ebdg .ParseCmap ();_gfeb !=nil {return _gfeb ;};};return nil ;};type StdFont struct{_ecgb Descriptor ;_ee *RuneCharSafeMap ;_daa _b .TextEncoder ;};
func (_eea *ttfParser )ReadShort ()(_babg int16 ){_fga .Read (_eea ._ddd ,_fga .BigEndian ,&_babg );return _babg ;};type RuneCharSafeMap struct{_bd map[rune ]CharMetrics ;_ecg _df .RWMutex ;};func _bbc (){_fea =MakeRuneCharSafeMap (len (_dae ));_aae =MakeRuneCharSafeMap (len (_dae ));
for _gg ,_aff :=range _dae {_fea .Write (_aff ,CharMetrics {Wx :float64 (_abd [_gg ])});_aae .Write (_aff ,CharMetrics {Wx :float64 (_cfa [_gg ])});};_dgbb =_fea .Copy ();_bab =_aae .Copy ();};func (_ce *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ef :=MakeRuneCharSafeMap (_ce .Length ());
_ce .Range (func (_fe rune ,_ae CharMetrics )(_fd bool ){_ef ._bd [_fe ]=_ae ;return false });return _ef ;};func (_abe *ttfParser )ParseHhea ()error {if _dfa :=_abe .Seek ("\u0068\u0068\u0065\u0061");_dfa !=nil {return _dfa ;};_abe .Skip (4+15*2);_abe ._cdf =_abe .ReadUShort ();
return nil ;};var _fef =&RuneCharSafeMap {_bd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_fdff *TtfType )MakeToUnicode ()*_ad .CMap {_fba :=make (map[_ad .CharCode ]rune );if len (_fdff .GlyphNames )==0{return _ad .NewToUnicodeCMap (_fba );};for _ffe ,_gfce :=range _fdff .Chars {_gce :=_ad .CharCode (_ffe );_bdd :=_fdff .GlyphNames [_gfce ];
_eae ,_ffa :=_b .GlyphToRune (_bdd );if !_ffa {_gb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_ffe ,_bdd );_eae =_b .MissingCodeRune ;
};_fba [_gce ]=_eae ;};return _ad .NewToUnicodeCMap (_fba );};func (_ga StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fdf ,_efa :=_ga ._ee .Read (r );return _fdf ,_efa ;};func (_gac *ttfParser )Seek (tag string )error {_edbd ,_egbf :=_gac ._geea [tag ];
if !_egbf {return _cf .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_gac ._ddd .Seek (int64 (_edbd ),_f .SeekStart );return nil ;};func _daeb ()StdFont {_gae .Do (_bdf );_cbc :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cbc ,_ebdag );};func _ebda ()StdFont {_gae .Do (_bdf );_adg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_adg ,_bfc );};func _bdb ()StdFont {_adb .Do (_bba );_faf :=Descriptor {Name :TimesBoldName ,Family :_gbgd ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_faf ,_dbb );};func IsStdFont (name StdFontName )bool {_ ,_fda :=_ada .read (name );return _fda };func _bdf (){const _dgf =600;_gc =MakeRuneCharSafeMap (len (_dae ));for _ ,_cbe :=range _dae {_gc .Write (_cbe ,CharMetrics {Wx :_dgf });
};_ebdag =_gc .Copy ();_fcab =_gc .Copy ();_bfc =_gc .Copy ();};var _dgbb *RuneCharSafeMap ;func (_cae *ttfParser )parseCmapSubtable31 (_ecaa int64 )error {_gbcf :=make ([]rune ,0,8);_bdg :=make ([]rune ,0,8);_efe :=make ([]int16 ,0,8);_eba :=make ([]uint16 ,0,8);
_cae ._dga .Chars =make (map[rune ]GID );_cae ._ddd .Seek (int64 (_cae ._geea ["\u0063\u006d\u0061\u0070"])+_ecaa ,_f .SeekStart );_cbg :=_cae .ReadUShort ();if _cbg !=4{return _be .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_cbg ,_gf .ErrNotSupported );
};_cae .Skip (2*2);_bcc :=int (_cae .ReadUShort ()/2);_cae .Skip (3*2);for _ddg :=0;_ddg < _bcc ;_ddg ++{_bdg =append (_bdg ,rune (_cae .ReadUShort ()));};_cae .Skip (2);for _cgb :=0;_cgb < _bcc ;_cgb ++{_gbcf =append (_gbcf ,rune (_cae .ReadUShort ()));
};for _cca :=0;_cca < _bcc ;_cca ++{_efe =append (_efe ,_cae .ReadShort ());};_ddcc ,_ :=_cae ._ddd .Seek (int64 (0),_f .SeekCurrent );for _aeaf :=0;_aeaf < _bcc ;_aeaf ++{_eba =append (_eba ,_cae .ReadUShort ());};for _aca :=0;_aca < _bcc ;_aca ++{_eff :=_gbcf [_aca ];
_ebb :=_bdg [_aca ];_eaa :=_efe [_aca ];_bea :=_eba [_aca ];if _bea > 0{_cae ._ddd .Seek (_ddcc +2*int64 (_aca )+int64 (_bea ),_f .SeekStart );};for _aaa :=_eff ;_aaa <=_ebb ;_aaa ++{if _aaa ==0xFFFF{break ;};var _add int32 ;if _bea > 0{_add =int32 (_cae .ReadUShort ());
if _add > 0{_add +=int32 (_eaa );};}else {_add =_aaa +int32 (_eaa );};if _add >=65536{_add -=65536;};if _add > 0{_cae ._dga .Chars [_aaa ]=GID (_add );};};};return nil ;};func (_ega StdFont )ToPdfObject ()_gf .PdfObject {_ebd :=_gf .MakeDict ();_ebd .Set ("\u0054\u0079\u0070\u0065",_gf .MakeName ("\u0046\u006f\u006e\u0074"));
_ebd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gf .MakeName ("\u0054\u0079\u0070e\u0031"));_ebd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gf .MakeName (_ega .Name ()));_ebd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ega ._daa .ToPdfObject ());
return _gf .MakeIndirectObject (_ebd );};type GID =_b .GID ;var _gc *RuneCharSafeMap ;func (_ff StdFont )Descriptor ()Descriptor {return _ff ._ecgb };type CharMetrics struct{Wx float64 ;Wy float64 ;};func init (){RegisterStdFont (CourierName ,_bed ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_daeb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_ebda ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_fb ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};var _ffc =&RuneCharSafeMap {_bd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_fcbd *ttfParser )ReadULong ()(_ccac uint32 ){_fga .Read (_fcbd ._ddd ,_fga .BigEndian ,&_ccac );return _ccac ;};var _gae _df .Once ;var _cfa =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_dbf *ttfParser )ParseCmap ()error {var _beed int64 ;if _gaac :=_dbf .Seek ("\u0063\u006d\u0061\u0070");_gaac !=nil {return _gaac ;};_gb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_dbf .ReadUShort ();_gd :=int (_dbf .ReadUShort ());
_dgc :=int64 (0);_ecd :=int64 (0);_ced :=int64 (0);for _fae :=0;_fae < _gd ;_fae ++{_ebg :=_dbf .ReadUShort ();_fdbb :=_dbf .ReadUShort ();_beed =int64 (_dbf .ReadULong ());if _ebg ==3&&_fdbb ==1{_ecd =_beed ;}else if _ebg ==3&&_fdbb ==10{_ced =_beed ;
}else if _ebg ==1&&_fdbb ==0{_dgc =_beed ;};};if _dgc !=0{if _fedf :=_dbf .parseCmapVersion (_dgc );_fedf !=nil {return _fedf ;};};if _ecd !=0{if _gcc :=_dbf .parseCmapSubtable31 (_ecd );_gcc !=nil {return _gcc ;};};if _ced !=0{if _geb :=_dbf .parseCmapVersion (_ced );
_geb !=nil {return _geb ;};};if _ecd ==0&&_dgc ==0&&_ced ==0{_gb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _bed ()StdFont {_gae .Do (_bdf );_cb :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cb ,_gc );};var _abd =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _bfc *RuneCharSafeMap ;func (_dge *ttfParser )ParsePost ()error {if _cbb :=_dge .Seek ("\u0070\u006f\u0073\u0074");_cbb !=nil {return _cbb ;};_aed :=_dge .Read32Fixed ();_dge ._dga .ItalicAngle =_dge .Read32Fixed ();_dge ._dga .UnderlinePosition =_dge .ReadShort ();
_dge ._dga .UnderlineThickness =_dge .ReadShort ();_dge ._dga .IsFixedPitch =_dge .ReadULong ()!=0;_dge .ReadULong ();_dge .ReadULong ();_dge .ReadULong ();_dge .ReadULong ();_gb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_aed );
switch _aed {case 1.0:_dge ._dga .GlyphNames =_dgd ;case 2.0:_edbf :=int (_dge .ReadUShort ());_daec :=make ([]int ,_edbf );_dge ._dga .GlyphNames =make ([]GlyphName ,_edbf );_geae :=-1;for _ffad :=0;_ffad < _edbf ;_ffad ++{_cdb :=int (_dge .ReadUShort ());
_daec [_ffad ]=_cdb ;if _cdb <=0x7fff&&_cdb > _geae {_geae =_cdb ;};};var _ddcg []GlyphName ;if _geae >=len (_dgd ){_ddcg =make ([]GlyphName ,_geae -len (_dgd )+1);for _gbe :=0;_gbe < _geae -len (_dgd )+1;_gbe ++{_bdced :=int (_dge .readByte ());_daaa ,_dcg :=_dge .ReadStr (_bdced );
if _dcg !=nil {return _dcg ;};_ddcg [_gbe ]=GlyphName (_daaa );};};for _dde :=0;_dde < _edbf ;_dde ++{_cac :=_daec [_dde ];if _cac < len (_dgd ){_dge ._dga .GlyphNames [_dde ]=_dgd [_cac ];}else if _cac >=len (_dgd )&&_cac <=32767{_dge ._dga .GlyphNames [_dde ]=_ddcg [_cac -len (_dgd )];
}else {_dge ._dga .GlyphNames [_dde ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_bggb :=make ([]int ,_dge ._ebdb );for _gbaa :=0;_gbaa < len (_bggb );_gbaa ++{_ead :=int (_dge .ReadSByte ());_bggb [_gbaa ]=_gbaa +1+_ead ;
};_dge ._dga .GlyphNames =make ([]GlyphName ,len (_bggb ));for _bfff :=0;_bfff < len (_dge ._dga .GlyphNames );_bfff ++{_aedf :=_dgd [_bggb [_bfff ]];_dge ._dga .GlyphNames [_bfff ]=_aedf ;};case 3.0:_gb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_aed );};return nil ;};func (_dg *RuneCharSafeMap )Length ()int {_dg ._ecg .RLock ();
defer _dg ._ecg .RUnlock ();return len (_dg ._bd );};func (_cd *TtfType )NewEncoder ()_b .TextEncoder {return _b .NewTrueTypeFontEncoder (_cd .Chars )};func init (){RegisterStdFont (HelveticaName ,_gcd ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_fdae ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_dgb ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_bbe ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_fge *fontMap )write (_da StdFontName ,_fc func ()StdFont ){_fge .Lock ();defer _fge .Unlock ();_fge ._dc [_da ]=_fc ;};func (_ffff *ttfParser )ParseName ()error {if _bbgd :=_ffff .Seek ("\u006e\u0061\u006d\u0065");_bbgd !=nil {return _bbgd ;};
_ccfa ,_ :=_ffff ._ddd .Seek (0,_f .SeekCurrent );_ffff ._dga .PostScriptName ="";_ffff .Skip (2);_gfed :=_ffff .ReadUShort ();_eeb :=_ffff .ReadUShort ();for _dcfa :=uint16 (0);_dcfa < _gfed &&_ffff ._dga .PostScriptName =="";_dcfa ++{_ffff .Skip (3*2);
_gbb :=_ffff .ReadUShort ();_dbc :=_ffff .ReadUShort ();_bggg :=_ffff .ReadUShort ();if _gbb ==6{_ffff ._ddd .Seek (_ccfa +int64 (_eeb )+int64 (_bggg ),_f .SeekStart );_gfg ,_eab :=_ffff .ReadStr (int (_dbc ));if _eab !=nil {return _eab ;};_gfg =_a .Replace (_gfg ,"\u0000","",-1);
_dee ,_eab :=_d .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _eab !=nil {return _eab ;};_ffff ._dga .PostScriptName =_dee .ReplaceAllString (_gfg ,"");};};if _ffff ._dga .PostScriptName ==""{_gb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};const (_gbgd ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););var _dae =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _aae *RuneCharSafeMap ;func (_aea StdFont )Encoder ()_b .TextEncoder {return _aea ._daa };var _fecc =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_edeb *ttfParser )parseCmapFormat12 ()error {_edf :=_edeb .ReadULong ();_gb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_edeb ._dga .String (),_edf );
for _edc :=uint32 (0);_edc < _edf ;_edc ++{_bbfe :=_edeb .ReadULong ();_gga :=_edeb .ReadULong ();_dcda :=_edeb .ReadULong ();if _bbfe > 0x0010FFFF||(0xD800<=_bbfe &&_bbfe <=0xDFFF){return _fg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _gga < _bbfe ||_gga > 0x0010FFFF||(0xD800<=_gga &&_gga <=0xDFFF){return _fg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _egb :=_bbfe ;_egb <=_gga ;
_egb ++{if _egb > 0x10FFFF{_gb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_edeb ._dga .Chars [rune (_egb )]=GID (_dcda );_dcda ++;};};return nil ;};func _daf ()StdFont {_adb .Do (_bba );_bff :=Descriptor {Name :TimesRomanName ,Family :_gbgd ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_bff ,_baa );};var _baa *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_bedb *ttfParser )ReadUShort ()(_adbg uint16 ){_fga .Read (_bedb ._ddd ,_fga .BigEndian ,&_adbg );return _adbg ;
};func _gaa ()StdFont {_cc :=_b .NewSymbolEncoder ();_dce :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_dce ,_fef ,_cc );};func init (){RegisterStdFont (SymbolName ,_gaa ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_fdcd );};func (_eb *RuneCharSafeMap )Range (f func (_fgca rune ,_bfgd CharMetrics )(_eg bool )){_eb ._ecg .RLock ();defer _eb ._ecg .RUnlock ();for _fdc ,_ba :=range _eb ._bd {if f (_fdc ,_ba ){break ;};};};func (_fad *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fad ._ecg .Lock ();
defer _fad ._ecg .Unlock ();_fad ._bd [b ]=r ;};var _fcab *RuneCharSafeMap ;var _ada =&fontMap {_dc :make (map[StdFontName ]func ()StdFont )};func NewFontFile2FromPdfObject (obj _gf .PdfObject )(TtfType ,error ){obj =_gf .TraceToDirectObject (obj );_aad ,_eac :=obj .(*_gf .PdfObjectStream );
if !_eac {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_gf .ErrTypeError ;
};_bgc ,_bce :=_gf .DecodeStream (_aad );if _bce !=nil {return TtfType {},_bce ;};_deag :=ttfParser {_ddd :_fgc .NewReader (_bgc )};return _deag .Parse ();};func init (){RegisterStdFont (TimesRomanName ,_daf ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_bdb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_daad ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_gba ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_ggac *ttfParser )readByte ()(_bdff uint8 ){_fga .Read (_ggac ._ddd ,_fga .BigEndian ,&_bdff );
return _bdff ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _b .TextEncoder )StdFont {var _de rune =0xA0;if _ ,_dea :=metrics .Read (_de );!_dea {_ge ,_ :=metrics .Read (0x20);metrics .Write (_de ,_ge );};return StdFont {_ecgb :desc ,_ee :metrics ,_daa :encoder };
};func _fb ()StdFont {_gae .Do (_bdf );_bb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bb ,_fcab );};var _bbce *RuneCharSafeMap ;func (_ggg *ttfParser )Parse ()(TtfType ,error ){_ac ,_fgb :=_ggg .ReadStr (4);if _fgb !=nil {return TtfType {},_fgb ;};if _ac =="\u004f\u0054\u0054\u004f"{return TtfType {},_be .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gf .ErrNotSupported );
};if _ac !="\u0000\u0001\u0000\u0000"&&_ac !="\u0074\u0072\u0075\u0065"{_gb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_ac );
};_feda :=int (_ggg .ReadUShort ());_ggg .Skip (3*2);_ggg ._geea =make (map[string ]uint32 );var _edb string ;for _bded :=0;_bded < _feda ;_bded ++{_edb ,_fgb =_ggg .ReadStr (4);if _fgb !=nil {return TtfType {},_fgb ;};_ggg .Skip (4);_agg :=_ggg .ReadULong ();
_ggg .Skip (4);_ggg ._geea [_edb ]=_agg ;};_gb .Log .Trace (_fgae (_ggg ._geea ));if _fgb =_ggg .ParseComponents ();_fgb !=nil {return TtfType {},_fgb ;};return _ggg ._dga ,nil ;};func (_ddf *TtfType )String ()string {return _cf .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ddf .PostScriptName ,_ddf .UnitsPerEm ,_ddf .Bold ,_ddf .ItalicAngle ,_ddf .CapHeight ,len (_ddf .Chars ),len (_ddf .GlyphNames ));
};var _adb _df .Once ;func (_bc *fontMap )read (_ca StdFontName )(func ()StdFont ,bool ){_bc .Lock ();defer _bc .Unlock ();_gbg ,_ceb :=_bc ._dc [_ca ];return _gbg ,_ceb ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_bcb ,_fca :=_ada .read (name );
if !_fca {return StdFont {},false ;};return _bcb (),true ;};var _ebdag *RuneCharSafeMap ;func _fdcd ()StdFont {_bdfd :=_b .NewZapfDingbatsEncoder ();_fec :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fec ,_ffc ,_bdfd );};var _dbb *RuneCharSafeMap ;func (_ffab *ttfParser )parseCmapVersion (_gfef int64 )error {_gb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gfef );
if _ffab ._dga .Chars ==nil {_ffab ._dga .Chars =make (map[rune ]GID );};_ffab ._ddd .Seek (int64 (_ffab ._geea ["\u0063\u006d\u0061\u0070"])+_gfef ,_f .SeekStart );var _cga ,_bbf uint32 ;_agd :=_ffab .ReadUShort ();if _agd < 8{_cga =uint32 (_ffab .ReadUShort ());
_bbf =uint32 (_ffab .ReadUShort ());}else {_ffab .ReadUShort ();_cga =_ffab .ReadULong ();_bbf =_ffab .ReadULong ();};_gb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_agd ,_cga ,_bbf );
switch _agd {case 0:return _ffab .parseCmapFormat0 ();case 6:return _ffab .parseCmapFormat6 ();case 12:return _ffab .parseCmapFormat12 ();default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_agd );
return nil ;};};func (_gccd *ttfParser )parseCmapFormat6 ()error {_dcd :=int (_gccd .ReadUShort ());_dfc :=int (_gccd .ReadUShort ());_gb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gccd ._dga .String (),_dcd ,_dfc );
for _eefb :=0;_eefb < _dfc ;_eefb ++{_dba :=GID (_gccd .ReadUShort ());_gccd ._dga .Chars [rune (_eefb +_dcd )]=_dba ;};return nil ;};func (_acdg *ttfParser )ParseOS2 ()error {if _gafa :=_acdg .Seek ("\u004f\u0053\u002f\u0032");_gafa !=nil {return _gafa ;
};_dff :=_acdg .ReadUShort ();_acdg .Skip (4*2);_acdg .Skip (11*2+10+4*4+4);_effc :=_acdg .ReadUShort ();_acdg ._dga .Bold =(_effc &32)!=0;_acdg .Skip (2*2);_acdg ._dga .TypoAscender =_acdg .ReadShort ();_acdg ._dga .TypoDescender =_acdg .ReadShort ();
if _dff >=2{_acdg .Skip (3*2+2*4+2);_acdg ._dga .CapHeight =_acdg .ReadShort ();}else {_acdg ._dga .CapHeight =0;};return nil ;};func TtfParseFile (fileStr string )(TtfType ,error ){_agc ,_fff :=_e .Open (fileStr );if _fff !=nil {return TtfType {},_fff ;
};defer _agc .Close ();return TtfParse (_agc );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func (_bgcb *ttfParser )ReadStr (length int )(string ,error ){_fbac :=make ([]byte ,length );_dcef ,_ffd :=_bgcb ._ddd .Read (_fbac );
if _ffd !=nil {return "",_ffd ;}else if _dcef !=length {return "",_cf .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_fbac ),nil ;};func _bba (){_baa =MakeRuneCharSafeMap (len (_dae ));
_dbb =MakeRuneCharSafeMap (len (_dae ));_bde =MakeRuneCharSafeMap (len (_dae ));_bbce =MakeRuneCharSafeMap (len (_dae ));for _bbg ,_ed :=range _dae {_baa .Write (_ed ,CharMetrics {Wx :float64 (_dd [_bbg ])});_dbb .Write (_ed ,CharMetrics {Wx :float64 (_bgd [_bbg ])});
_bde .Write (_ed ,CharMetrics {Wx :float64 (_fecc [_bbg ])});_bbce .Write (_ed ,CharMetrics {Wx :float64 (_eca [_bbg ])});};};var _bde *RuneCharSafeMap ;var _bdce _df .Once ;var _bab *RuneCharSafeMap ;func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_b .NewStandardEncoder ());
};var _bgd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _dgd =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_dag *ttfParser )ParseHead ()error {if _adf :=_dag .Seek ("\u0068\u0065\u0061\u0064");_adf !=nil {return _adf ;};_dag .Skip (3*4);_dcfe :=_dag .ReadULong ();if _dcfe !=0x5F0F3CF5{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_dag );
};_dag .Skip (2);_dag ._dga .UnitsPerEm =_dag .ReadUShort ();_dag .Skip (2*8);_dag ._dga .Xmin =_dag .ReadShort ();_dag ._dga .Ymin =_dag .ReadShort ();_dag ._dga .Xmax =_dag .ReadShort ();_dag ._dga .Ymax =_dag .ReadShort ();return nil ;};type FontWeight int ;
func (_bfg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_bfg ._ecg .RLock ();defer _bfg ._ecg .RUnlock ();_ab ,_fa :=_bfg ._bd [b ];return _ab ,_fa ;};var _dd =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_fgg *ttfParser )Skip (n int ){_fgg ._ddd .Seek (int64 (n ),_f .SeekCurrent )};func _fdae ()StdFont {_bdce .Do (_bbc );_gag :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gag ,_aae );};func _gba ()StdFont {_adb .Do (_bba );_dgg :=Descriptor {Name :TimesBoldItalicName ,Family :_gbgd ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_dgg ,_bde );};func (_bgf *ttfParser )ParseHmtx ()error {if _ddc :=_bgf .Seek ("\u0068\u006d\u0074\u0078");_ddc !=nil {return _ddc ;};_bgf ._dga .Widths =make ([]uint16 ,0,8);for _eef :=uint16 (0);_eef < _bgf ._cdf ;_eef ++{_bgf ._dga .Widths =append (_bgf ._dga .Widths ,_bgf .ReadUShort ());
_bgf .Skip (2);};if _bgf ._cdf < _bgf ._ebdb &&_bgf ._cdf > 0{_gbc :=_bgf ._dga .Widths [_bgf ._cdf -1];for _bgg :=_bgf ._cdf ;_bgg < _bgf ._ebdb ;_bgg ++{_bgf ._dga .Widths =append (_bgf ._dga .Widths ,_gbc );};};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_af :=_ada .read (name );
_af {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_ada .write (name ,fnc );for _ ,_gfc :=range aliases {RegisterStdFont (_gfc ,fnc );};};func (_daed *ttfParser )ParseMaxp ()error {if _abf :=_daed .Seek ("\u006d\u0061\u0078\u0070");
_abf !=nil {return _abf ;};_daed .Skip (4);_daed ._ebdb =_daed .ReadUShort ();return nil ;};func (_geg *ttfParser )ReadSByte ()(_gbac int8 ){_fga .Read (_geg ._ddd ,_fga .BigEndian ,&_gbac );return _gbac ;};func (_efc *ttfParser )parseCmapSubtable10 (_eegg int64 )error {if _efc ._dga .Chars ==nil {_efc ._dga .Chars =make (map[rune ]GID );
};_efc ._ddd .Seek (int64 (_efc ._geea ["\u0063\u006d\u0061\u0070"])+_eegg ,_f .SeekStart );var _decg ,_abbb uint32 ;_geag :=_efc .ReadUShort ();if _geag < 8{_decg =uint32 (_efc .ReadUShort ());_abbb =uint32 (_efc .ReadUShort ());}else {_efc .ReadUShort ();
_decg =_efc .ReadULong ();_abbb =_efc .ReadULong ();};_gb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_geag ,_decg ,_abbb );
if _geag !=0{return _fg .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_adgg ,_fdce :=_efc .ReadStr (256);
if _fdce !=nil {return _fdce ;};_gggc :=[]byte (_adgg );for _aag ,_acd :=range _gggc {_efc ._dga .Chars [rune (_aag )]=GID (_acd );if _acd !=0{_cf .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_aag ,_acd ,rune (_acd ));
};};return nil ;};type GlyphName =_b .GlyphName ;type ttfParser struct{_dga TtfType ;_ddd _f .ReadSeeker ;_geea map[string ]uint32 ;_cdf uint16 ;_ebdb uint16 ;};func _bbe ()StdFont {_bdce .Do (_bbc );_afd :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_afd ,_bab );};func (_beb *ttfParser )Read32Fixed ()float64 {_gabb :=float64 (_beb .ReadShort ());_ege :=float64 (_beb .ReadUShort ())/65536.0;return _gabb +_ege ;};func _dgb ()StdFont {_bdce .Do (_bbc );_gea :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_gea ,_dgbb );};var _eca =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_ebe *ttfParser )parseCmapFormat0 ()error {_fgcg ,_cge :=_ebe .ReadStr (256);if _cge !=nil {return _cge ;};_abg :=[]byte (_fgcg );_gb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ebe ._dga .String (),_fgcg ,_abg );
for _gab ,_ecc :=range _abg {_ebe ._dga .Chars [rune (_gab )]=GID (_ecc );};return nil ;};type Font interface{Encoder ()_b .TextEncoder ;GetRuneMetrics (_bf rune )(CharMetrics ,bool );};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;
Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _fgae (_eede map[string ]uint32 )string {var _eeg []string ;for _bbb :=range _eede {_eeg =append (_eeg ,_bbb );
};_g .Slice (_eeg ,func (_fdg ,_fbe int )bool {return _eede [_eeg [_fdg ]]< _eede [_eeg [_fbe ]]});_ebdaf :=[]string {_cf .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_eede ))};
for _ ,_dad :=range _eeg {_ebdaf =append (_ebdaf ,_cf .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dad ,_eede [_dad ]));};return _a .Join (_ebdaf ,"\u000a");};func (_ec CharMetrics )String ()string {return _cf .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ec .Wx ,_ec .Wy );
};func (_bg StdFont )Name ()string {return string (_bg ._ecgb .Name )};func _daad ()StdFont {_adb .Do (_bba );_fadg :=Descriptor {Name :TimesItalicName ,Family :_gbgd ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_fadg ,_bbce );};type StdFontName string ;