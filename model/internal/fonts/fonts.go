//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_be "bytes";_f "encoding/binary";_gd "errors";_c "fmt";_eb "github.com/unidoc/unipdf/v3/common";_cg "github.com/unidoc/unipdf/v3/core";_ba "github.com/unidoc/unipdf/v3/internal/cmap";_ag "github.com/unidoc/unipdf/v3/internal/textencoding";
_bf "golang.org/x/xerrors";_e "io";_b "os";_ge "regexp";_g "sort";_a "strings";_ae "sync";);func (_fea StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bff ,_ggg :=_fea ._cabc .Read (r );return _bff ,_ggg ;};func (_ebd *ttfParser )ReadStr (length int )(string ,error ){_acd :=make ([]byte ,length );
_dca ,_cecf :=_ebd ._ecc .Read (_acd );if _cecf !=nil {return "",_cecf ;}else if _dca !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_acd ),nil ;};type FontWeight int ;func _bfga (){_gdf =MakeRuneCharSafeMap (len (_gcc ));_fcg =MakeRuneCharSafeMap (len (_gcc ));_adb =MakeRuneCharSafeMap (len (_gcc ));_dgd =MakeRuneCharSafeMap (len (_gcc ));for _dga ,_fbc :=range _gcc {_gdf .Write (_fbc ,CharMetrics {Wx :float64 (_fgg [_dga ])});
_fcg .Write (_fbc ,CharMetrics {Wx :float64 (_edac [_dga ])});_adb .Write (_fbc ,CharMetrics {Wx :float64 (_gdfa [_dga ])});_dgd .Write (_fbc ,CharMetrics {Wx :float64 (_dee [_dga ])});};};func (_gbba *ttfParser )Skip (n int ){_gbba ._ecc .Seek (int64 (n ),_e .SeekCurrent )};
var _feb *RuneCharSafeMap ;func _bg ()StdFont {_cc .Do (_dgb );_cgf :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cgf ,_ccc );};func (_bc *fontMap )read (_gbb StdFontName )(func ()StdFont ,bool ){_bc .Lock ();defer _bc .Unlock ();_fc ,_ga :=_bc ._bfa [_gbb ];return _fc ,_ga ;};var _ Font =StdFont {};func (_cge *ttfParser )ParseHmtx ()error {if _efe :=_cge .Seek ("\u0068\u006d\u0074\u0078");
_efe !=nil {return _efe ;};_cge ._dcd .Widths =make ([]uint16 ,0,8);for _ace :=uint16 (0);_ace < _cge ._aeec ;_ace ++{_cge ._dcd .Widths =append (_cge ._dcd .Widths ,_cge .ReadUShort ());_cge .Skip (2);};if _cge ._aeec < _cge ._bdb &&_cge ._aeec > 0{_adf :=_cge ._dcd .Widths [_cge ._aeec -1];
for _fffb :=_cge ._aeec ;_fffb < _cge ._bdb ;_fffb ++{_cge ._dcd .Widths =append (_cge ._dcd .Widths ,_adf );};};return nil ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);var _ad =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _bfb (){_ac =MakeRuneCharSafeMap (len (_gcc ));_cde =MakeRuneCharSafeMap (len (_gcc ));for _eaa ,_bfg :=range _gcc {_ac .Write (_bfg ,CharMetrics {Wx :float64 (_ad [_eaa ])});_cde .Write (_bfg ,CharMetrics {Wx :float64 (_bgc [_eaa ])});};_ebf =_ac .Copy ();
_ecg =_cde .Copy ();};func (_dgdb *TtfType )MakeEncoder ()(_ag .SimpleEncoder ,error ){_gcfb :=make (map[_ag .CharCode ]GlyphName );for _fbe :=_ag .CharCode (0);_fbe <=256;_fbe ++{_fff :=rune (_fbe );_deg ,_ebbb :=_dgdb .Chars [_fff ];if !_ebbb {continue ;
};var _db GlyphName ;if int (_deg )>=0&&int (_deg )< len (_dgdb .GlyphNames ){_db =_dgdb .GlyphNames [_deg ];}else {_fgf :=rune (_deg );if _aee ,_efd :=_ag .RuneToGlyph (_fgf );_efd {_db =_aee ;};};if _db !=""{_gcfb [_fbe ]=_db ;};};if len (_gcfb )==0{_eb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_dgdb ,_dgdb .Chars );
};return _ag .NewCustomSimpleTextEncoder (_gcfb ,nil );};var _fcg *RuneCharSafeMap ;type StdFontName string ;var _ecg *RuneCharSafeMap ;var _edac =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_ff *RuneCharSafeMap )Range (f func (_aeg rune ,_beg CharMetrics )(_eg bool )){_ff ._dc .RLock ();defer _ff ._dc .RUnlock ();for _ed ,_ebb :=range _ff ._ea {if f (_ed ,_ebb ){break ;};};};func TtfParseFile (fileStr string )(TtfType ,error ){_aagd ,_cda :=_b .Open (fileStr );
if _cda !=nil {return TtfType {},_cda ;};defer _aagd .Close ();return TtfParse (_aagd );};var _gdf *RuneCharSafeMap ;func (_fa StdFont )GetMetricsTable ()*RuneCharSafeMap {return _fa ._cabc };func (_abg *ttfParser )ParseComponents ()error {if _gcb :=_abg .ParseHead ();
_gcb !=nil {return _gcb ;};if _edc :=_abg .ParseHhea ();_edc !=nil {return _edc ;};if _dbf :=_abg .ParseMaxp ();_dbf !=nil {return _dbf ;};if _ebbe :=_abg .ParseHmtx ();_ebbe !=nil {return _ebbe ;};if _ ,_cgcd :=_abg ._cbg ["\u006e\u0061\u006d\u0065"];
_cgcd {if _gbe :=_abg .ParseName ();_gbe !=nil {return _gbe ;};};if _ ,_abff :=_abg ._cbg ["\u004f\u0053\u002f\u0032"];_abff {if _gcd :=_abg .ParseOS2 ();_gcd !=nil {return _gcd ;};};if _ ,_gbcc :=_abg ._cbg ["\u0070\u006f\u0073\u0074"];_gbcc {if _dgc :=_abg .ParsePost ();
_dgc !=nil {return _dgc ;};};if _ ,_fge :=_abg ._cbg ["\u0063\u006d\u0061\u0070"];_fge {if _cccc :=_abg .ParseCmap ();_cccc !=nil {return _cccc ;};};return nil ;};var _bca =&RuneCharSafeMap {_ea :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_gbdf *ttfParser )parseCmapFormat6 ()error {_feg :=int (_gbdf .ReadUShort ());_ffb :=int (_gbdf .ReadUShort ());_eb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gbdf ._dcd .String (),_feg ,_ffb );
for _daa :=0;_daa < _ffb ;_daa ++{_fdd :=GID (_gbdf .ReadUShort ());_gbdf ._dcd .Chars [rune (_daa +_feg )]=_fdd ;};return nil ;};var _bgc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_dda *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_dda .PostScriptName ,_dda .UnitsPerEm ,_dda .Bold ,_dda .ItalicAngle ,_dda .CapHeight ,len (_dda .Chars ),len (_dda .GlyphNames ));
};func _gga ()StdFont {_aga .Do (_bfga );_egf :=Descriptor {Name :TimesItalicName ,Family :_eed ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_egf ,_dgd );};func _fad ()StdFont {_ee .Do (_bfb );_bfcc :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_bfcc ,_ebf );};type fontMap struct{_ae .Mutex ;_bfa map[StdFontName ]func ()StdFont ;};var _ebf *RuneCharSafeMap ;var _ee _ae .Once ;func init (){RegisterStdFont (CourierName ,_aegb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_bg ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_gad ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dadb ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_edd *ttfParser )Parse ()(TtfType ,error ){_cgg ,_abf :=_edd .ReadStr (4);if _abf !=nil {return TtfType {},_abf ;
};if _cgg =="\u004f\u0054\u0054\u004f"{return TtfType {},_bf .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cg .ErrNotSupported );
};if _cgg !="\u0000\u0001\u0000\u0000"&&_cgg !="\u0074\u0072\u0075\u0065"{_eb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cgg );
};_ggb :=int (_edd .ReadUShort ());_edd .Skip (3*2);_edd ._cbg =make (map[string ]uint32 );var _ecgc string ;for _fce :=0;_fce < _ggb ;_fce ++{_ecgc ,_abf =_edd .ReadStr (4);if _abf !=nil {return TtfType {},_abf ;};_edd .Skip (4);_gbf :=_edd .ReadULong ();
_edd .Skip (4);_edd ._cbg [_ecgc ]=_gbf ;};_eb .Log .Trace (_ade (_edd ._cbg ));if _abf =_edd .ParseComponents ();_abf !=nil {return TtfType {},_abf ;};return _edd ._dcd ,nil ;};func (_eefg *ttfParser )parseCmapSubtable31 (_cfea int64 )error {_aec :=make ([]rune ,0,8);
_fada :=make ([]rune ,0,8);_acc :=make ([]int16 ,0,8);_bac :=make ([]uint16 ,0,8);_eefg ._dcd .Chars =make (map[rune ]GID );_eefg ._ecc .Seek (int64 (_eefg ._cbg ["\u0063\u006d\u0061\u0070"])+_cfea ,_e .SeekStart );_afec :=_eefg .ReadUShort ();if _afec !=4{return _bf .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_afec ,_cg .ErrNotSupported );
};_eefg .Skip (2*2);_bgg :=int (_eefg .ReadUShort ()/2);_eefg .Skip (3*2);for _gcba :=0;_gcba < _bgg ;_gcba ++{_fada =append (_fada ,rune (_eefg .ReadUShort ()));};_eefg .Skip (2);for _bacd :=0;_bacd < _bgg ;_bacd ++{_aec =append (_aec ,rune (_eefg .ReadUShort ()));
};for _cggd :=0;_cggd < _bgg ;_cggd ++{_acc =append (_acc ,_eefg .ReadShort ());};_aac ,_ :=_eefg ._ecc .Seek (int64 (0),_e .SeekCurrent );for _fae :=0;_fae < _bgg ;_fae ++{_bac =append (_bac ,_eefg .ReadUShort ());};for _bacg :=0;_bacg < _bgg ;_bacg ++{_dfa :=_aec [_bacg ];
_ege :=_fada [_bacg ];_eee :=_acc [_bacg ];_cdad :=_bac [_bacg ];if _cdad > 0{_eefg ._ecc .Seek (_aac +2*int64 (_bacg )+int64 (_cdad ),_e .SeekStart );};for _bbf :=_dfa ;_bbf <=_ege ;_bbf ++{if _bbf ==0xFFFF{break ;};var _dag int32 ;if _cdad > 0{_dag =int32 (_eefg .ReadUShort ());
if _dag > 0{_dag +=int32 (_eee );};}else {_dag =_bbf +int32 (_eee );};if _dag >=65536{_dag -=65536;};if _dag > 0{_eefg ._dcd .Chars [_bbf ]=GID (_dag );};};};return nil ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);func _ebe ()StdFont {_aga .Do (_bfga );_gca :=Descriptor {Name :TimesRomanName ,Family :_eed ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_gca ,_gdf );};func (_gb *RuneCharSafeMap )Length ()int {_gb ._dc .RLock ();defer _gb ._dc .RUnlock ();return len (_gb ._ea );};func (_egd *ttfParser )Read32Fixed ()float64 {_ddaf :=float64 (_egd .ReadShort ());_gfc :=float64 (_egd .ReadUShort ())/65536.0;
return _ddaf +_gfc ;};func _ade (_cfd map[string ]uint32 )string {var _ddd []string ;for _cbe :=range _cfd {_ddd =append (_ddd ,_cbe );};_g .Slice (_ddd ,func (_eea ,_cea int )bool {return _cfd [_ddd [_eea ]]< _cfd [_ddd [_cea ]]});_bda :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cfd ))};
for _ ,_dfff :=range _ddd {_bda =append (_bda ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dfff ,_cfd [_dfff ]));};return _a .Join (_bda ,"\u000a");};var _bb =&fontMap {_bfa :make (map[StdFontName ]func ()StdFont )};var _fgg =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_egg *ttfParser )ParsePost ()error {if _cgfg :=_egg .Seek ("\u0070\u006f\u0073\u0074");_cgfg !=nil {return _cgfg ;};_ebg :=_egg .Read32Fixed ();_egg ._dcd .ItalicAngle =_egg .Read32Fixed ();_egg ._dcd .UnderlinePosition =_egg .ReadShort ();_egg ._dcd .UnderlineThickness =_egg .ReadShort ();
_egg ._dcd .IsFixedPitch =_egg .ReadULong ()!=0;_egg .ReadULong ();_egg .ReadULong ();_egg .ReadULong ();_egg .ReadULong ();_eb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_ebg );
switch _ebg {case 1.0:_egg ._dcd .GlyphNames =_deb ;case 2.0:_fgfg :=int (_egg .ReadUShort ());_eaab :=make ([]int ,_fgfg );_egg ._dcd .GlyphNames =make ([]GlyphName ,_fgfg );_dadc :=-1;for _fdf :=0;_fdf < _fgfg ;_fdf ++{_agbe :=int (_egg .ReadUShort ());
_eaab [_fdf ]=_agbe ;if _agbe <=0x7fff&&_agbe > _dadc {_dadc =_agbe ;};};var _adc []GlyphName ;if _dadc >=len (_deb ){_adc =make ([]GlyphName ,_dadc -len (_deb )+1);for _daaf :=0;_daaf < _dadc -len (_deb )+1;_daaf ++{_adec :=int (_egg .readByte ());_gbca ,_gfee :=_egg .ReadStr (_adec );
if _gfee !=nil {return _gfee ;};_adc [_daaf ]=GlyphName (_gbca );};};for _dcg :=0;_dcg < _fgfg ;_dcg ++{_gbdb :=_eaab [_dcg ];if _gbdb < len (_deb ){_egg ._dcd .GlyphNames [_dcg ]=_deb [_gbdb ];}else if _gbdb >=len (_deb )&&_gbdb <=32767{_egg ._dcd .GlyphNames [_dcg ]=_adc [_gbdb -len (_deb )];
}else {_egg ._dcd .GlyphNames [_dcg ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_ggeb :=make ([]int ,_egg ._bdb );for _def :=0;_def < len (_ggeb );_def ++{_gaaf :=int (_egg .ReadSByte ());_ggeb [_def ]=_def +1+_gaaf ;};
_egg ._dcd .GlyphNames =make ([]GlyphName ,len (_ggeb ));for _afed :=0;_afed < len (_egg ._dcd .GlyphNames );_afed ++{_caf :=_deb [_ggeb [_afed ]];_egg ._dcd .GlyphNames [_afed ]=_caf ;};case 3.0:_eb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_eb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_ebg );};return nil ;};var _ccc *RuneCharSafeMap ;func init (){RegisterStdFont (HelveticaName ,_bfc ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_fee ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_fad ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_bd ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ag .TextEncoder )StdFont {var _fec rune =0xA0;if _ ,_af :=metrics .Read (_fec );!_af {_eag ,_ :=metrics .Read (0x20);metrics .Write (_fec ,_eag );};return StdFont {_ecfg :desc ,_cabc :metrics ,_geg :encoder };
};func (_dba *TtfType )NewEncoder ()_ag .TextEncoder {return _ag .NewTrueTypeFontEncoder (_dba .Chars )};func NewFontFile2FromPdfObject (obj _cg .PdfObject )(TtfType ,error ){obj =_cg .TraceToDirectObject (obj );_aaf ,_eab :=obj .(*_cg .PdfObjectStream );
if !_eab {_eb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_cg .ErrTypeError ;
};_dfe ,_gfg :=_cg .DecodeStream (_aaf );if _gfg !=nil {return TtfType {},_gfg ;};_aegd :=ttfParser {_ecc :_be .NewReader (_dfe )};return _aegd .Parse ();};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ea :make (map[rune ]CharMetrics ,length )};
};var _eeg =&RuneCharSafeMap {_ea :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_ab *TtfType )MakeToUnicode ()*_ba .CMap {_dce :=make (map[_ba .CharCode ]rune );if len (_ab .GlyphNames )==0{return _ba .NewToUnicodeCMap (_dce );};for _eega ,_eedd :=range _ab .Chars {_aag :=_ba .CharCode (_eega );_afe :=_ab .GlyphNames [_eedd ];
_aeeg ,_fd :=_ag .GlyphToRune (_afe );if !_fd {_eb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_eega ,_afe );_aeeg =_ag .MissingCodeRune ;
};_dce [_aag ]=_aeeg ;};return _ba .NewToUnicodeCMap (_dce );};func _gad ()StdFont {_cc .Do (_dgb );_ceec :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ceec ,_ggf );};func (_abd *ttfParser )ParseCmap ()error {var _adbfc int64 ;if _cefa :=_abd .Seek ("\u0063\u006d\u0061\u0070");_cefa !=nil {return _cefa ;};_eb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_abd .ReadUShort ();
_dfd :=int (_abd .ReadUShort ());_fdb :=int64 (0);_bdf :=int64 (0);_gee :=int64 (0);for _bdd :=0;_bdd < _dfd ;_bdd ++{_cba :=_abd .ReadUShort ();_cdf :=_abd .ReadUShort ();_adbfc =int64 (_abd .ReadULong ());if _cba ==3&&_cdf ==1{_bdf =_adbfc ;}else if _cba ==3&&_cdf ==10{_gee =_adbfc ;
}else if _cba ==1&&_cdf ==0{_fdb =_adbfc ;};};if _fdb !=0{if _fba :=_abd .parseCmapVersion (_fdb );_fba !=nil {return _fba ;};};if _bdf !=0{if _gbd :=_abd .parseCmapSubtable31 (_bdf );_gbd !=nil {return _gbd ;};};if _gee !=0{if _dac :=_abd .parseCmapVersion (_gee );
_dac !=nil {return _dac ;};};if _bdf ==0&&_fdb ==0&&_gee ==0{_eb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_aba *ttfParser )ParseHhea ()error {if _edg :=_aba .Seek ("\u0068\u0068\u0065\u0061");_edg !=nil {return _edg ;};_aba .Skip (4+15*2);_aba ._aeec =_aba .ReadUShort ();return nil ;};func (_cee StdFont )ToPdfObject ()_cg .PdfObject {_df :=_cg .MakeDict ();
_df .Set ("\u0054\u0079\u0070\u0065",_cg .MakeName ("\u0046\u006f\u006e\u0074"));_df .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cg .MakeName ("\u0054\u0079\u0070e\u0031"));_df .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cg .MakeName (_cee .Name ()));
_df .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cee ._geg .ToPdfObject ());return _cg .MakeIndirectObject (_df );};func (_ca *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ca ._dc .RLock ();defer _ca ._dc .RUnlock ();_dg ,_age :=_ca ._ea [b ];
return _dg ,_age ;};func _bfc ()StdFont {_ee .Do (_bfb );_bcg :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_bcg ,_ac );};var _cde *RuneCharSafeMap ;func init (){RegisterStdFont (SymbolName ,_gaa ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_eca );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ag .NewStandardEncoder ());};type StdFont struct{_ecfg Descriptor ;_cabc *RuneCharSafeMap ;_geg _ag .TextEncoder ;
};func _dgb (){const _gba =600;_cfa =MakeRuneCharSafeMap (len (_gcc ));for _ ,_gf :=range _gcc {_cfa .Write (_gf ,CharMetrics {Wx :_gba });};_ccc =_cfa .Copy ();_feb =_cfa .Copy ();_ggf =_cfa .Copy ();};func (_fb StdFont )Encoder ()_ag .TextEncoder {return _fb ._geg };
var _ggf *RuneCharSafeMap ;func init (){RegisterStdFont (TimesRomanName ,_ebe ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_dde ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_gga ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cgc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _dadb ()StdFont {_cc .Do (_dgb );_edf :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_edf ,_feb );};type ttfParser struct{_dcd TtfType ;_ecc _e .ReadSeeker ;_cbg map[string ]uint32 ;_aeec uint16 ;_bdb uint16 ;};func (_cgd *ttfParser )ParseHead ()error {if _cfe :=_cgd .Seek ("\u0068\u0065\u0061\u0064");_cfe !=nil {return _cfe ;
};_cgd .Skip (3*4);_dfc :=_cgd .ReadULong ();if _dfc !=0x5F0F3CF5{_eb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_cgd );
};_cgd .Skip (2);_cgd ._dcd .UnitsPerEm =_cgd .ReadUShort ();_cgd .Skip (2*8);_cgd ._dcd .Xmin =_cgd .ReadShort ();_cgd ._dcd .Ymin =_cgd .ReadShort ();_cgd ._dcd .Xmax =_cgd .ReadShort ();_cgd ._dcd .Ymax =_cgd .ReadShort ();return nil ;};func (_cf *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_cf ._dc .Lock ();
defer _cf ._dc .Unlock ();_cf ._ea [b ]=r ;};func (_gedb *ttfParser )ParseName ()error {if _gfe :=_gedb .Seek ("\u006e\u0061\u006d\u0065");_gfe !=nil {return _gfe ;};_eead ,_ :=_gedb ._ecc .Seek (0,_e .SeekCurrent );_gedb ._dcd .PostScriptName ="";_gedb .Skip (2);
_eegd :=_gedb .ReadUShort ();_cce :=_gedb .ReadUShort ();for _ede :=uint16 (0);_ede < _eegd &&_gedb ._dcd .PostScriptName =="";_ede ++{_gedb .Skip (3*2);_cccb :=_gedb .ReadUShort ();_fbf :=_gedb .ReadUShort ();_ffc :=_gedb .ReadUShort ();if _cccb ==6{_gedb ._ecc .Seek (_eead +int64 (_cce )+int64 (_ffc ),_e .SeekStart );
_decb ,_afc :=_gedb .ReadStr (int (_fbf ));if _afc !=nil {return _afc ;};_decb =_a .Replace (_decb ,"\u0000","",-1);_bab ,_afc :=_ge .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _afc !=nil {return _afc ;
};_gedb ._dcd .PostScriptName =_bab .ReplaceAllString (_decb ,"");};};if _gedb ._dcd .PostScriptName ==""{_eb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_bgag *ttfParser )parseCmapFormat12 ()error {_ccf :=_bgag .ReadULong ();_eb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_bgag ._dcd .String (),_ccf );
for _bgb :=uint32 (0);_bgb < _ccf ;_bgb ++{_bfd :=_bgag .ReadULong ();_fbcd :=_bgag .ReadULong ();_egc :=_bgag .ReadULong ();if _bfd > 0x0010FFFF||(0xD800<=_bfd &&_bfd <=0xDFFF){return _gd .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fbcd < _bfd ||_fbcd > 0x0010FFFF||(0xD800<=_fbcd &&_fbcd <=0xDFFF){return _gd .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _fbb :=_bfd ;_fbb <=_fbcd ;
_fbb ++{if _fbb > 0x10FFFF{_eb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_bgag ._dcd .Chars [rune (_fbb )]=GID (_egc );_egc ++;};};return nil ;};func (_cdb *ttfParser )ParseOS2 ()error {if _bdg :=_cdb .Seek ("\u004f\u0053\u002f\u0032");_bdg !=nil {return _bdg ;};_abe :=_cdb .ReadUShort ();_cdb .Skip (4*2);_cdb .Skip (11*2+10+4*4+4);
_gda :=_cdb .ReadUShort ();_cdb ._dcd .Bold =(_gda &32)!=0;_cdb .Skip (2*2);_cdb ._dcd .TypoAscender =_cdb .ReadShort ();_cdb ._dcd .TypoDescender =_cdb .ReadShort ();if _abe >=2{_cdb .Skip (3*2+2*4+2);_cdb ._dcd .CapHeight =_cdb .ReadShort ();}else {_cdb ._dcd .CapHeight =0;
};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_cd :=_bb .read (name );_cd {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_bb .write (name ,fnc );for _ ,_de :=range aliases {RegisterStdFont (_de ,fnc );};};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func _aegb ()StdFont {_cc .Do (_dgb );_ceg :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ceg ,_cfa );};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _dee =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _ac *RuneCharSafeMap ;var _aga _ae .Once ;func _dde ()StdFont {_aga .Do (_bfga );_bga :=Descriptor {Name :TimesBoldName ,Family :_eed ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_bga ,_fcg );};func _eca ()StdFont {_ef :=_ag .NewZapfDingbatsEncoder ();_dff :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_dff ,_eeg ,_ef );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);type GlyphName =_ag .GlyphName ;func (_beb *ttfParser )ReadShort ()(_aacd int16 ){_f .Read (_beb ._ecc ,_f .BigEndian ,&_aacd );
return _aacd ;};func (_fgff *ttfParser )ParseMaxp ()error {if _ecgb :=_fgff .Seek ("\u006d\u0061\u0078\u0070");_ecgb !=nil {return _ecgb ;};_fgff .Skip (4);_fgff ._bdb =_fgff .ReadUShort ();return nil ;};func _cgc ()StdFont {_aga .Do (_bfga );_ddc :=Descriptor {Name :TimesBoldItalicName ,Family :_eed ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_ddc ,_adb );};var _cfa *RuneCharSafeMap ;func (_gbdg *ttfParser )ReadSByte ()(_bafa int8 ){_f .Read (_gbdg ._ecc ,_f .BigEndian ,&_bafa );return _bafa ;};func (_bcc StdFont )Name ()string {return string (_bcc ._ecfg .Name )};func (_gg CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_gg .Wx ,_gg .Wy );
};func (_bfaf *ttfParser )parseCmapFormat0 ()error {_bfce ,_afg :=_bfaf .ReadStr (256);if _afg !=nil {return _afg ;};_gdb :=[]byte (_bfce );_eb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bfaf ._dcd .String (),_bfce ,_gdb );
for _bcb ,_gef :=range _gdb {_bfaf ._dcd .Chars [rune (_bcb )]=GID (_gef );};return nil ;};func _gaa ()StdFont {_ggff :=_ag .NewSymbolEncoder ();_dd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_dd ,_bca ,_ggff );};var _adb *RuneCharSafeMap ;func _bd ()StdFont {_ee .Do (_bfb );_dea :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dea ,_ecg );};var _cc _ae .Once ;func (_agc StdFont )Descriptor ()Descriptor {return _agc ._ecfg };func IsStdFont (name StdFontName )bool {_ ,_cb :=_bb .read (name );return _cb };func TtfParse (r _e .ReadSeeker )(TtfType ,error ){_fcf :=&ttfParser {_ecc :r };
return _fcf .Parse ()};func (_edfc *ttfParser )ReadULong ()(_agf uint32 ){_f .Read (_edfc ._ecc ,_f .BigEndian ,&_agf );return _agf ;};func (_deeg *ttfParser )Seek (tag string )error {_efdb ,_cdee :=_deeg ._cbg [tag ];if !_cdee {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_deeg ._ecc .Seek (int64 (_efdb ),_e .SeekStart );return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;
Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _gcc =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_gc *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_da :=MakeRuneCharSafeMap (_gc .Length ());_gc .Range (func (_fe rune ,_gcf CharMetrics )(_ec bool ){_da ._ea [_fe ]=_gcf ;return false });return _da ;};func (_dcdd *ttfParser )parseCmapSubtable10 (_fga int64 )error {if _dcdd ._dcd .Chars ==nil {_dcdd ._dcd .Chars =make (map[rune ]GID );
};_dcdd ._ecc .Seek (int64 (_dcdd ._cbg ["\u0063\u006d\u0061\u0070"])+_fga ,_e .SeekStart );var _dcdf ,_aef uint32 ;_ebc :=_dcdd .ReadUShort ();if _ebc < 8{_dcdf =uint32 (_dcdd .ReadUShort ());_aef =uint32 (_dcdd .ReadUShort ());}else {_dcdd .ReadUShort ();
_dcdf =_dcdd .ReadULong ();_aef =_dcdd .ReadULong ();};_eb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_ebc ,_dcdf ,_aef );
if _ebc !=0{return _gd .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cbf ,_cga :=_dcdd .ReadStr (256);if _cga !=nil {return _cga ;
};_ffg :=[]byte (_cbf );for _adbf ,_bdc :=range _ffg {_dcdd ._dcd .Chars [rune (_adbf )]=GID (_bdc );if _bdc !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_adbf ,_bdc ,rune (_bdc ));
};};return nil ;};type GID =_ag .GID ;type RuneCharSafeMap struct{_ea map[rune ]CharMetrics ;_dc _ae .RWMutex ;};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;
Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func (_bbd *ttfParser )ReadUShort ()(_gae uint16 ){_f .Read (_bbd ._ecc ,_f .BigEndian ,&_gae );return _gae ;};var _deb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
type Font interface{Encoder ()_ag .TextEncoder ;GetRuneMetrics (_fg rune )(CharMetrics ,bool );};func (_ega *fontMap )write (_aa StdFontName ,_baf func ()StdFont ){_ega .Lock ();defer _ega .Unlock ();_ega ._bfa [_aa ]=_baf ;};const (_eed ="\u0054\u0069\u006de\u0073";
TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_fgfc *ttfParser )parseCmapVersion (_fca int64 )error {_eb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_fca );
if _fgfc ._dcd .Chars ==nil {_fgfc ._dcd .Chars =make (map[rune ]GID );};_fgfc ._ecc .Seek (int64 (_fgfc ._cbg ["\u0063\u006d\u0061\u0070"])+_fca ,_e .SeekStart );var _bdbb ,_gde uint32 ;_cec :=_fgfc .ReadUShort ();if _cec < 8{_bdbb =uint32 (_fgfc .ReadUShort ());
_gde =uint32 (_fgfc .ReadUShort ());}else {_fgfc .ReadUShort ();_bdbb =_fgfc .ReadULong ();_gde =_fgfc .ReadULong ();};_eb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cec ,_bdbb ,_gde );
switch _cec {case 0:return _fgfc .parseCmapFormat0 ();case 6:return _fgfc .parseCmapFormat6 ();case 12:return _fgfc .parseCmapFormat12 ();default:_eb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cec );
return nil ;};};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_egb ,_ce :=_bb .read (name );if !_ce {return StdFont {},false ;};return _egb (),true ;};var _dgd *RuneCharSafeMap ;func (_babg *ttfParser )readByte ()(_eaf uint8 ){_f .Read (_babg ._ecc ,_f .BigEndian ,&_eaf );
return _eaf ;};var _gdfa =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func _fee ()StdFont {_ee .Do (_bfb );_bec :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bec ,_cde );};