//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_a "bytes";_c "encoding/binary";_ec "errors";_g "fmt";_cb "github.com/unidoc/unipdf/v3/common";_ga "github.com/unidoc/unipdf/v3/core";_cf "github.com/unidoc/unipdf/v3/internal/cmap";_d "github.com/unidoc/unipdf/v3/internal/textencoding";
_db "golang.org/x/xerrors";_fc "io";_f "os";_be "regexp";_eg "sort";_b "strings";_cd "sync";);func _bgf ()StdFont {_efe .Do (_fce );_dbf :=Descriptor {Name :TimesRomanName ,Family :_bgee ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_dbf ,_cgb );};func (_fcd *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fcd ._bg .RLock ();defer _fcd ._bg .RUnlock ();_gg ,_ca :=_fcd ._cbf [b ];return _gg ,_ca ;};func (_cfa *ttfParser )ParseCmap ()error {var _aea int64 ;if _egd :=_cfa .Seek ("\u0063\u006d\u0061\u0070");
_egd !=nil {return _egd ;};_cb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_cfa .ReadUShort ();_dfd :=int (_cfa .ReadUShort ());_gged :=int64 (0);_gggc :=int64 (0);_ecge :=int64 (0);for _gea :=0;_gea < _dfd ;_gea ++{_fde :=_cfa .ReadUShort ();
_ggd :=_cfa .ReadUShort ();_aea =int64 (_cfa .ReadULong ());if _fde ==3&&_ggd ==1{_gggc =_aea ;}else if _fde ==3&&_ggd ==10{_ecge =_aea ;}else if _fde ==1&&_ggd ==0{_gged =_aea ;};};if _gged !=0{if _fdcc :=_cfa .parseCmapVersion (_gged );_fdcc !=nil {return _fdcc ;
};};if _gggc !=0{if _egaf :=_cfa .parseCmapSubtable31 (_gggc );_egaf !=nil {return _egaf ;};};if _ecge !=0{if _bfb :=_cfa .parseCmapVersion (_ecge );_bfb !=nil {return _bfb ;};};if _gggc ==0&&_gged ==0&&_ecge ==0{_cb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _bgbf *RuneCharSafeMap ;var _bgd *RuneCharSafeMap ;var _ Font =StdFont {};var _afa =&RuneCharSafeMap {_cbf :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_fef *ttfParser )parseCmapSubtable31 (_ffcd int64 )error {_cda :=make ([]rune ,0,8);_dceb :=make ([]rune ,0,8);_cfd :=make ([]int16 ,0,8);_cfe :=make ([]uint16 ,0,8);_fef ._ddgc .Chars =make (map[rune ]GID );_fef ._ceb .Seek (int64 (_fef ._cgbb ["\u0063\u006d\u0061\u0070"])+_ffcd ,_fc .SeekStart );
_agca :=_fef .ReadUShort ();if _agca !=4{return _db .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_agca ,_ga .ErrNotSupported );
};_fef .Skip (2*2);_ddcf :=int (_fef .ReadUShort ()/2);_fef .Skip (3*2);for _gcba :=0;_gcba < _ddcf ;_gcba ++{_dceb =append (_dceb ,rune (_fef .ReadUShort ()));};_fef .Skip (2);for _cgbg :=0;_cgbg < _ddcf ;_cgbg ++{_cda =append (_cda ,rune (_fef .ReadUShort ()));
};for _aaf :=0;_aaf < _ddcf ;_aaf ++{_cfd =append (_cfd ,_fef .ReadShort ());};_baf ,_ :=_fef ._ceb .Seek (int64 (0),_fc .SeekCurrent );for _eagg :=0;_eagg < _ddcf ;_eagg ++{_cfe =append (_cfe ,_fef .ReadUShort ());};for _befb :=0;_befb < _ddcf ;_befb ++{_eecb :=_cda [_befb ];
_ac :=_dceb [_befb ];_eage :=_cfd [_befb ];_beef :=_cfe [_befb ];if _beef > 0{_fef ._ceb .Seek (_baf +2*int64 (_befb )+int64 (_beef ),_fc .SeekStart );};for _bbdc :=_eecb ;_bbdc <=_ac ;_bbdc ++{if _bbdc ==0xFFFF{break ;};var _ega int32 ;if _beef > 0{_ega =int32 (_fef .ReadUShort ());
if _ega > 0{_ega +=int32 (_eage );};}else {_ega =_bbdc +int32 (_eage );};if _ega >=65536{_ega -=65536;};if _ega > 0{_fef ._ddgc .Chars [_bbdc ]=GID (_ega );};};};return nil ;};type StdFont struct{_aa Descriptor ;_edc *RuneCharSafeMap ;_ggfc _d .TextEncoder ;
};type Font interface{Encoder ()_d .TextEncoder ;GetRuneMetrics (_fa rune )(CharMetrics ,bool );};func (_afb *ttfParser )ParsePost ()error {if _gfdb :=_afb .Seek ("\u0070\u006f\u0073\u0074");_gfdb !=nil {return _gfdb ;};_gfde :=_afb .Read32Fixed ();_afb ._ddgc .ItalicAngle =_afb .Read32Fixed ();
_afb ._ddgc .UnderlinePosition =_afb .ReadShort ();_afb ._ddgc .UnderlineThickness =_afb .ReadShort ();_afb ._ddgc .IsFixedPitch =_afb .ReadULong ()!=0;_afb .ReadULong ();_afb .ReadULong ();_afb .ReadULong ();_afb .ReadULong ();_cb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gfde );
switch _gfde {case 1.0:_afb ._ddgc .GlyphNames =_bfbb ;case 2.0:_eaa :=int (_afb .ReadUShort ());_bfa :=make ([]int ,_eaa );_afb ._ddgc .GlyphNames =make ([]GlyphName ,_eaa );_gbcb :=-1;for _fag :=0;_fag < _eaa ;_fag ++{_efdba :=int (_afb .ReadUShort ());
_bfa [_fag ]=_efdba ;if _efdba <=0x7fff&&_efdba > _gbcb {_gbcb =_efdba ;};};var _egc []GlyphName ;if _gbcb >=len (_bfbb ){_egc =make ([]GlyphName ,_gbcb -len (_bfbb )+1);for _ccge :=0;_ccge < _gbcb -len (_bfbb )+1;_ccge ++{_dbb :=int (_afb .readByte ());
_agag ,_gbcd :=_afb .ReadStr (_dbb );if _gbcd !=nil {return _gbcd ;};_egc [_ccge ]=GlyphName (_agag );};};for _fbe :=0;_fbe < _eaa ;_fbe ++{_dbd :=_bfa [_fbe ];if _dbd < len (_bfbb ){_afb ._ddgc .GlyphNames [_fbe ]=_bfbb [_dbd ];}else if _dbd >=len (_bfbb )&&_dbd <=32767{_afb ._ddgc .GlyphNames [_fbe ]=_egc [_dbd -len (_bfbb )];
}else {_afb ._ddgc .GlyphNames [_fbe ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_dae :=make ([]int ,_afb ._dgdb );for _aba :=0;_aba < len (_dae );_aba ++{_cac :=int (_afb .ReadSByte ());_dae [_aba ]=_aba +1+_cac ;};_afb ._ddgc .GlyphNames =make ([]GlyphName ,len (_dae ));
for _gbfb :=0;_gbfb < len (_afb ._ddgc .GlyphNames );_gbfb ++{_gfbg :=_bfbb [_dae [_gbfb ]];_afb ._ddgc .GlyphNames [_gbfb ]=_gfbg ;};case 3.0:_cb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_cb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gfde );};return nil ;};func _bbd ()StdFont {_ggc .Do (_faf );_gd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gd ,_gef );};func (_ece *RuneCharSafeMap )Range (f func (_gf rune ,_ae CharMetrics )(_gc bool )){_ece ._bg .RLock ();defer _ece ._bg .RUnlock ();for _eb ,_fd :=range _ece ._cbf {if f (_eb ,_fd ){break ;};};};var _gb =&fontMap {_ed :make (map[StdFontName ]func ()StdFont )};
func NewFontFile2FromPdfObject (obj _ga .PdfObject )(TtfType ,error ){obj =_ga .TraceToDirectObject (obj );_ecgg ,_fdc :=obj .(*_ga .PdfObjectStream );if !_fdc {_cb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_ga .ErrTypeError ;};_gga ,_ebba :=_ga .DecodeStream (_ecgg );if _ebba !=nil {return TtfType {},_ebba ;};_gbcc :=ttfParser {_ceb :_a .NewReader (_gga )};return _gbcc .Parse ();};func (_bee StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eag ,_dcg :=_bee ._edc .Read (r );
return _eag ,_dcg ;};func IsStdFont (name StdFontName )bool {_ ,_da :=_gb .read (name );return _da };func (_bgbff *ttfParser )ReadUShort ()(_gcf uint16 ){_c .Read (_bgbff ._ceb ,_c .BigEndian ,&_gcf );return _gcf ;};func (_ebf *ttfParser )ParseMaxp ()error {if _gbfg :=_ebf .Seek ("\u006d\u0061\u0078\u0070");
_gbfg !=nil {return _gbfg ;};_ebf .Skip (4);_ebf ._dgdb =_ebf .ReadUShort ();return nil ;};func (_cdg StdFont )Name ()string {return string (_cdg ._aa .Name )};var _ebb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _dcb =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
type StdFontName string ;func _fce (){_cgb =MakeRuneCharSafeMap (len (_dg ));_ddf =MakeRuneCharSafeMap (len (_dg ));_gfb =MakeRuneCharSafeMap (len (_dg ));_fdfc =MakeRuneCharSafeMap (len (_dg ));for _eagb ,_aga :=range _dg {_cgb .Write (_aga ,CharMetrics {Wx :float64 (_agc [_eagb ])});
_ddf .Write (_aga ,CharMetrics {Wx :float64 (_fbfc [_eagb ])});_gfb .Write (_aga ,CharMetrics {Wx :float64 (_bef [_eagb ])});_fdfc .Write (_aga ,CharMetrics {Wx :float64 (_dca [_eagb ])});};};func (_bage *TtfType )MakeEncoder ()(_d .SimpleEncoder ,error ){_eae :=make (map[_d .CharCode ]GlyphName );
for _efb :=_d .CharCode (0);_efb <=256;_efb ++{_aab :=rune (_efb );_ffb ,_cba :=_bage .Chars [_aab ];if !_cba {continue ;};var _agcc GlyphName ;if int (_ffb )>=0&&int (_ffb )< len (_bage .GlyphNames ){_agcc =_bage .GlyphNames [_ffb ];}else {_ddd :=rune (_ffb );
if _ee ,_gfe :=_d .RuneToGlyph (_ddd );_gfe {_agcc =_ee ;};};if _agcc !=""{_eae [_efb ]=_agcc ;};};if len (_eae )==0{_cb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_bage ,_bage .Chars );
};return _d .NewCustomSimpleTextEncoder (_eae ,nil );};func (_gegg *ttfParser )parseCmapFormat0 ()error {_abgg ,_efdb :=_gegg .ReadStr (256);if _efdb !=nil {return _efdb ;};_fbff :=[]byte (_abgg );_cb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_gegg ._ddgc .String (),_abgg ,_fbff );
for _eaf ,_eba :=range _fbff {_gegg ._ddgc .Chars [rune (_eaf )]=GID (_eba );};return nil ;};type fontMap struct{_cd .Mutex ;_ed map[StdFontName ]func ()StdFont ;};func (_gbee *ttfParser )parseCmapFormat12 ()error {_gac :=_gbee .ReadULong ();_cb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_gbee ._ddgc .String (),_gac );
for _fdca :=uint32 (0);_fdca < _gac ;_fdca ++{_fcfg :=_gbee .ReadULong ();_acb :=_gbee .ReadULong ();_eff :=_gbee .ReadULong ();if _fcfg > 0x0010FFFF||(0xD800<=_fcfg &&_fcfg <=0xDFFF){return _ec .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _acb < _fcfg ||_acb > 0x0010FFFF||(0xD800<=_acb &&_acb <=0xDFFF){return _ec .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _fcg :=_fcfg ;_fcg <=_acb ;
_fcg ++{if _fcg > 0x10FFFF{_cb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_gbee ._ddgc .Chars [rune (_fcg )]=GID (_eff );_eff ++;};};return nil ;};func _agcb (_dfg map[string ]uint32 )string {var _bfe []string ;for _ddda :=range _dfg {_bfe =append (_bfe ,_ddda );};_eg .Slice (_bfe ,func (_dddad ,_beee int )bool {return _dfg [_bfe [_dddad ]]< _dfg [_bfe [_beee ]]});
_fda :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_dfg ))};for _ ,_cdfe :=range _bfe {_fda =append (_fda ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cdfe ,_dfg [_cdfe ]));
};return _b .Join (_fda ,"\u000a");};func _febd ()StdFont {_ggc .Do (_faf );_bf :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bf ,_bgb );};var _agc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _cfga ()StdFont {_efe .Do (_fce );_fdg :=Descriptor {Name :TimesBoldName ,Family :_bgee ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_fdg ,_ddf );};func init (){RegisterStdFont (CourierName ,_bbd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_fdf ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_febd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_dgg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};type GlyphName =_d .GlyphName ;const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func _ddc ()StdFont {_fgf :=_d .NewSymbolEncoder ();
_gcb :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};return NewStdFontWithEncoding (_gcb ,_ddg ,_fgf );
};func _abg (){_bgd =MakeRuneCharSafeMap (len (_dg ));_cc =MakeRuneCharSafeMap (len (_dg ));for _fbde ,_cbb :=range _dg {_bgd .Write (_cbb ,CharMetrics {Wx :float64 (_dcb [_fbde ])});_cc .Write (_cbb ,CharMetrics {Wx :float64 (_ebb [_fbde ])});};_bgbf =_bgd .Copy ();
_fdff =_cc .Copy ();};func _afe ()StdFont {_efe .Do (_fce );_cdf :=Descriptor {Name :TimesItalicName ,Family :_bgee ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_cdf ,_fdfc );};func _dgd ()StdFont {_agbf .Do (_abg );_cec :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cec ,_cc );};func (_ecg CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ecg .Wx ,_ecg .Wy );};func TtfParse (r _fc .ReadSeeker )(TtfType ,error ){_gfee :=&ttfParser {_ceb :r };
return _gfee .Parse ()};func (_ggb StdFont )Descriptor ()Descriptor {return _ggb ._aa };func _gcc ()StdFont {_egb :=_d .NewZapfDingbatsEncoder ();_bedf :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bedf ,_afa ,_egb );};func (_cef *ttfParser )ParseHhea ()error {if _fgb :=_cef .Seek ("\u0068\u0068\u0065\u0061");_fgb !=nil {return _fgb ;};_cef .Skip (4+15*2);_cef ._bgfe =_cef .ReadUShort ();return nil ;};func init (){RegisterStdFont (HelveticaName ,_de ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_dgd ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_ffe ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_bc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _gfb *RuneCharSafeMap ;var _dg =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func _bc ()StdFont {_agbf .Do (_abg );_cfg :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cfg ,_fdff );};func (_ada *ttfParser )ParseHead ()error {if _befg :=_ada .Seek ("\u0068\u0065\u0061\u0064");_befg !=nil {return _befg ;};_ada .Skip (3*4);_dcgf :=_ada .ReadULong ();if _dcgf !=0x5F0F3CF5{_cb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ada );
};_ada .Skip (2);_ada ._ddgc .UnitsPerEm =_ada .ReadUShort ();_ada .Skip (2*8);_ada ._ddgc .Xmin =_ada .ReadShort ();_ada ._ddgc .Ymin =_ada .ReadShort ();_ada ._ddgc .Xmax =_ada .ReadShort ();_ada ._ddgc .Ymax =_ada .ReadShort ();return nil ;};func (_cbgb *ttfParser )Skip (n int ){_cbgb ._ceb .Seek (int64 (n ),_fc .SeekCurrent )};
func (_cebc *ttfParser )parseCmapVersion (_bgfb int64 )error {_cb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_bgfb );if _cebc ._ddgc .Chars ==nil {_cebc ._ddgc .Chars =make (map[rune ]GID );
};_cebc ._ceb .Seek (int64 (_cebc ._cgbb ["\u0063\u006d\u0061\u0070"])+_bgfb ,_fc .SeekStart );var _abd ,_ccdd uint32 ;_dee :=_cebc .ReadUShort ();if _dee < 8{_abd =uint32 (_cebc .ReadUShort ());_ccdd =uint32 (_cebc .ReadUShort ());}else {_cebc .ReadUShort ();
_abd =_cebc .ReadULong ();_ccdd =_cebc .ReadULong ();};_cb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_dee ,_abd ,_ccdd );
switch _dee {case 0:return _cebc .parseCmapFormat0 ();case 6:return _cebc .parseCmapFormat6 ();case 12:return _cebc .parseCmapFormat12 ();default:_cb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_dee );
return nil ;};};func _bbb ()StdFont {_efe .Do (_fce );_efa :=Descriptor {Name :TimesBoldItalicName ,Family :_bgee ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_efa ,_gfb );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ffd ,_agb :=_gb .read (name );if !_agb {return StdFont {},false ;};return _ffd (),true ;
};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ef :=_gb .read (name );_ef {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_gb .write (name ,fnc );for _ ,_bgc :=range aliases {RegisterStdFont (_bgc ,fnc );};};var _efe _cd .Once ;type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;
UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_dddb *ttfParser )readByte ()(_ggad uint8 ){_c .Read (_dddb ._ceb ,_c .BigEndian ,&_ggad );
return _ggad ;};func init (){RegisterStdFont (SymbolName ,_ddc ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_gcc );};var _fbfc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_fgd *TtfType )MakeToUnicode ()*_cf .CMap {_dddf :=make (map[_cf .CharCode ]rune );if len (_fgd .GlyphNames )==0{return _cf .NewToUnicodeCMap (_dddf );};for _fbb ,_cdfd :=range _fgd .Chars {_gfeg :=_cf .CharCode (_fbb );_cgc :=_fgd .GlyphNames [_cdfd ];
_gfbe ,_fgfa :=_d .GlyphToRune (_cgc );if !_fgfa {_cb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fbb ,_cgc );_gfbe =_d .MissingCodeRune ;
};_dddf [_gfeg ]=_gfbe ;};return _cf .NewToUnicodeCMap (_dddf );};var _bgb *RuneCharSafeMap ;func (_bgdf *TtfType )NewEncoder ()_d .TextEncoder {return _d .NewTrueTypeFontEncoder (_bgdf .Chars )};func (_cfb StdFont )Encoder ()_d .TextEncoder {return _cfb ._ggfc };
func init (){RegisterStdFont (TimesRomanName ,_bgf ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_cfga ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_afe ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_bbb ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _fdfc *RuneCharSafeMap ;func _ffe ()StdFont {_agbf .Do (_abg );_fge :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_fge ,_bgbf );};var _ggc _cd .Once ;var _gaa *RuneCharSafeMap ;var _cgb *RuneCharSafeMap ;func (_cab *ttfParser )ParseHmtx ()error {if _gbd :=_cab .Seek ("\u0068\u006d\u0074\u0078");_gbd !=nil {return _gbd ;};_cab ._ddgc .Widths =make ([]uint16 ,0,8);
for _dce :=uint16 (0);_dce < _cab ._bgfe ;_dce ++{_cab ._ddgc .Widths =append (_cab ._ddgc .Widths ,_cab .ReadUShort ());_cab .Skip (2);};if _cab ._bgfe < _cab ._dgdb &&_cab ._bgfe > 0{_aeg :=_cab ._ddgc .Widths [_cab ._bgfe -1];for _bbc :=_cab ._bgfe ;
_bbc < _cab ._dgdb ;_bbc ++{_cab ._ddgc .Widths =append (_cab ._ddgc .Widths ,_aeg );};};return nil ;};var _agbf _cd .Once ;type FontWeight int ;func (_ead *ttfParser )Parse ()(TtfType ,error ){_cgbe ,_bfg :=_ead .ReadStr (4);if _bfg !=nil {return TtfType {},_bfg ;
};if _cgbe =="\u004f\u0054\u0054\u004f"{return TtfType {},_db .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ga .ErrNotSupported );
};if _cgbe !="\u0000\u0001\u0000\u0000"&&_cgbe !="\u0074\u0072\u0075\u0065"{_cb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cgbe );
};_gccb :=int (_ead .ReadUShort ());_ead .Skip (3*2);_ead ._cgbb =make (map[string ]uint32 );var _bba string ;for _fcf :=0;_fcf < _gccb ;_fcf ++{_bba ,_bfg =_ead .ReadStr (4);if _bfg !=nil {return TtfType {},_bfg ;};_ead .Skip (4);_adg :=_ead .ReadULong ();
_ead .Skip (4);_ead ._cgbb [_bba ]=_adg ;};_cb .Log .Trace (_agcb (_ead ._cgbb ));if _bfg =_ead .ParseComponents ();_bfg !=nil {return TtfType {},_bfg ;};return _ead ._ddgc ,nil ;};type GID =_d .GID ;type Descriptor struct{Name StdFontName ;Family string ;
Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};var _cc *RuneCharSafeMap ;func TtfParseFile (fileStr string )(TtfType ,error ){_fbg ,_cebg :=_f .Open (fileStr );
if _cebg !=nil {return TtfType {},_cebg ;};defer _fbg .Close ();return TtfParse (_fbg );};func (_ggf *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ggf ._bg .Lock ();defer _ggf ._bg .Unlock ();_ggf ._cbf [b ]=r ;};var _bed *RuneCharSafeMap ;func (_cbg *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_cbg .PostScriptName ,_cbg .UnitsPerEm ,_cbg .Bold ,_cbg .ItalicAngle ,_cbg .CapHeight ,len (_cbg .Chars ),len (_cbg .GlyphNames ));
};type RuneCharSafeMap struct{_cbf map[rune ]CharMetrics ;_bg _cd .RWMutex ;};func _faf (){const _ab =600;_gef =MakeRuneCharSafeMap (len (_dg ));for _ ,_af :=range _dg {_gef .Write (_af ,CharMetrics {Wx :_ab });};_bed =_gef .Copy ();_gaa =_gef .Copy ();
_bgb =_gef .Copy ();};func (_edd *ttfParser )ReadULong ()(_fbec uint32 ){_c .Read (_edd ._ceb ,_c .BigEndian ,&_fbec );return _fbec ;};func _dgg ()StdFont {_ggc .Do (_faf );_dfe :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dfe ,_gaa );};func (_eda *ttfParser )Read32Fixed ()float64 {_cce :=float64 (_eda .ReadShort ());_efed :=float64 (_eda .ReadUShort ())/65536.0;return _cce +_efed ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_d .NewStandardEncoder ());
};func (_aec *fontMap )write (_gge StdFontName ,_ff func ()StdFont ){_aec .Lock ();defer _aec .Unlock ();_aec ._ed [_gge ]=_ff ;};type ttfParser struct{_ddgc TtfType ;_ceb _fc .ReadSeeker ;_cgbb map[string ]uint32 ;_bgfe uint16 ;_dgdb uint16 ;};const (_bgee ="\u0054\u0069\u006de\u0073";
TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););var _ddf *RuneCharSafeMap ;func (_bab *ttfParser )ReadShort ()(_dba int16 ){_c .Read (_bab ._ceb ,_c .BigEndian ,&_dba );return _dba };
var _bef =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_ag *RuneCharSafeMap )Length ()int {_ag ._bg .RLock ();defer _ag ._bg .RUnlock ();return len (_ag ._cbf );};func (_cdc *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_dc :=MakeRuneCharSafeMap (_cdc .Length ());_cdc .Range (func (_fe rune ,_ge CharMetrics )(_bge bool ){_dc ._cbf [_fe ]=_ge ;
return false });return _dc ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_dff *ttfParser )Seek (tag string )error {_gcg ,_cdb :=_dff ._cgbb [tag ];if !_cdb {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_dff ._ceb .Seek (int64 (_gcg ),_fc .SeekStart );return nil ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _gef *RuneCharSafeMap ;func (_gde *ttfParser )ReadSByte ()(_cge int8 ){_c .Read (_gde ._ceb ,_c .BigEndian ,&_cge );return _cge };func (_gbe *ttfParser )parseCmapFormat6 ()error {_beec :=int (_gbe .ReadUShort ());
_aegf :=int (_gbe .ReadUShort ());_cb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gbe ._ddgc .String (),_beec ,_aegf );
for _dgc :=0;_dgc < _aegf ;_dgc ++{_dge :=GID (_gbe .ReadUShort ());_gbe ._ddgc .Chars [rune (_dgc +_beec )]=_dge ;};return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _d .TextEncoder )StdFont {var _bbg rune =0xA0;
if _ ,_beg :=metrics .Read (_bbg );!_beg {_agf ,_ :=metrics .Read (0x20);metrics .Write (_bbg ,_agf );};return StdFont {_aa :desc ,_edc :metrics ,_ggfc :encoder };};func (_dbg *ttfParser )ReadStr (length int )(string ,error ){_acd :=make ([]byte ,length );
_geff ,_cea :=_dbg ._ceb .Read (_acd );if _cea !=nil {return "",_cea ;}else if _geff !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_acd ),nil ;};func (_gfd *ttfParser )parseCmapSubtable10 (_geg int64 )error {if _gfd ._ddgc .Chars ==nil {_gfd ._ddgc .Chars =make (map[rune ]GID );};_gfd ._ceb .Seek (int64 (_gfd ._cgbb ["\u0063\u006d\u0061\u0070"])+_geg ,_fc .SeekStart );
var _fcb ,_aca uint32 ;_aff :=_gfd .ReadUShort ();if _aff < 8{_fcb =uint32 (_gfd .ReadUShort ());_aca =uint32 (_gfd .ReadUShort ());}else {_gfd .ReadUShort ();_fcb =_gfd .ReadULong ();_aca =_gfd .ReadULong ();};_cb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_aff ,_fcb ,_aca );
if _aff !=0{return _ec .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gba ,_edb :=_gfd .ReadStr (256);if _edb !=nil {return _edb ;
};_ecb :=[]byte (_gba );for _cfdg ,_eagec :=range _ecb {_gfd ._ddgc .Chars [rune (_cfdg )]=GID (_eagec );if _eagec !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_cfdg ,_eagec ,rune (_eagec ));
};};return nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cbf :make (map[rune ]CharMetrics ,length )};};var _bfbb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _fdff *RuneCharSafeMap ;func (_fcef *ttfParser )ParseName ()error {if _bagg :=_fcef .Seek ("\u006e\u0061\u006d\u0065");_bagg !=nil {return _bagg ;};_ffbg ,_ :=_fcef ._ceb .Seek (0,_fc .SeekCurrent );_fcef ._ddgc .PostScriptName ="";_fcef .Skip (2);
_cdfec :=_fcef .ReadUShort ();_ccdc :=_fcef .ReadUShort ();for _fdae :=uint16 (0);_fdae < _cdfec &&_fcef ._ddgc .PostScriptName =="";_fdae ++{_fcef .Skip (3*2);_bff :=_fcef .ReadUShort ();_age :=_fcef .ReadUShort ();_ffbb :=_fcef .ReadUShort ();if _bff ==6{_fcef ._ceb .Seek (_ffbg +int64 (_ccdc )+int64 (_ffbb ),_fc .SeekStart );
_cde ,_bagef :=_fcef .ReadStr (int (_age ));if _bagef !=nil {return _bagef ;};_cde =_b .Replace (_cde ,"\u0000","",-1);_acbb ,_bagef :=_be .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _bagef !=nil {return _bagef ;
};_fcef ._ddgc .PostScriptName =_acbb .ReplaceAllString (_cde ,"");};};if _fcef ._ddgc .PostScriptName ==""{_cb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_cgd *ttfParser )ParseOS2 ()error {if _ege :=_cgd .Seek ("\u004f\u0053\u002f\u0032");_ege !=nil {return _ege ;};_cad :=_cgd .ReadUShort ();_cgd .Skip (4*2);_cgd .Skip (11*2+10+4*4+4);_fdfb :=_cgd .ReadUShort ();_cgd ._ddgc .Bold =(_fdfb &32)!=0;
_cgd .Skip (2*2);_cgd ._ddgc .TypoAscender =_cgd .ReadShort ();_cgd ._ddgc .TypoDescender =_cgd .ReadShort ();if _cad >=2{_cgd .Skip (3*2+2*4+2);_cgd ._ddgc .CapHeight =_cgd .ReadShort ();}else {_cgd ._ddgc .CapHeight =0;};return nil ;};func (_gbc StdFont )ToPdfObject ()_ga .PdfObject {_fg :=_ga .MakeDict ();
_fg .Set ("\u0054\u0079\u0070\u0065",_ga .MakeName ("\u0046\u006f\u006e\u0074"));_fg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ga .MakeName ("\u0054\u0079\u0070e\u0031"));_fg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ga .MakeName (_gbc .Name ()));
_fg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gbc ._ggfc .ToPdfObject ());return _ga .MakeIndirectObject (_fg );};func (_bb *fontMap )read (_feb StdFontName )(func ()StdFont ,bool ){_bb .Lock ();defer _bb .Unlock ();_df ,_fb :=_bb ._ed [_feb ];
return _df ,_fb ;};func (_eec *ttfParser )ParseComponents ()error {if _fbc :=_eec .ParseHead ();_fbc !=nil {return _fbc ;};if _cfgb :=_eec .ParseHhea ();_cfgb !=nil {return _cfgb ;};if _ggg :=_eec .ParseMaxp ();_ggg !=nil {return _ggg ;};if _ddca :=_eec .ParseHmtx ();
_ddca !=nil {return _ddca ;};if _ ,_ccb :=_eec ._cgbb ["\u006e\u0061\u006d\u0065"];_ccb {if _bgca :=_eec .ParseName ();_bgca !=nil {return _bgca ;};};if _ ,_ccg :=_eec ._cgbb ["\u004f\u0053\u002f\u0032"];_ccg {if _fff :=_eec .ParseOS2 ();_fff !=nil {return _fff ;
};};if _ ,_fcc :=_eec ._cgbb ["\u0070\u006f\u0073\u0074"];_fcc {if _efd :=_eec .ParsePost ();_efd !=nil {return _efd ;};};if _ ,_bce :=_eec ._cgbb ["\u0063\u006d\u0061\u0070"];_bce {if _ffc :=_eec .ParseCmap ();_ffc !=nil {return _ffc ;};};return nil ;
};func _fdf ()StdFont {_ggc .Do (_faf );_ba :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ba ,_bed );};func (_ce StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ce ._edc };const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);var _ddg =&RuneCharSafeMap {_cbf :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
var _dca =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func _de ()StdFont {_agbf .Do (_abg );_geb :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_geb ,_bgd );};