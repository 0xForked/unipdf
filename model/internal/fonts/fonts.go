//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_ga "bytes";_d "encoding/binary";_c "errors";_b "fmt";_ab "github.com/unidoc/unipdf/v3/common";_bf "github.com/unidoc/unipdf/v3/core";_ed "github.com/unidoc/unipdf/v3/internal/cmap";_cb "github.com/unidoc/unipdf/v3/internal/textencoding";
_ae "golang.org/x/xerrors";_aa "io";_a "os";_ea "regexp";_bc "sort";_e "strings";_ef "sync";);func (_gg *RuneCharSafeMap )Length ()int {_gg ._f .RLock ();defer _gg ._f .RUnlock ();return len (_gg ._edb );};func (_gc StdFont )Encoder ()_cb .TextEncoder {return _gc ._cde };
var _agd *RuneCharSafeMap ;func (_gcb *ttfParser )ParseComponents ()error {if _gfa :=_gcb .ParseHead ();_gfa !=nil {return _gfa ;};if _cef :=_gcb .ParseHhea ();_cef !=nil {return _cef ;};if _efcg :=_gcb .ParseMaxp ();_efcg !=nil {return _efcg ;};if _ccg :=_gcb .ParseHmtx ();
_ccg !=nil {return _ccg ;};if _ ,_bdad :=_gcb ._bbc ["\u006e\u0061\u006d\u0065"];_bdad {if _efce :=_gcb .ParseName ();_efce !=nil {return _efce ;};};if _ ,_bgee :=_gcb ._bbc ["\u004f\u0053\u002f\u0032"];_bgee {if _feb :=_gcb .ParseOS2 ();_feb !=nil {return _feb ;
};};if _ ,_bea :=_gcb ._bbc ["\u0070\u006f\u0073\u0074"];_bea {if _dccc :=_gcb .ParsePost ();_dccc !=nil {return _dccc ;};};if _ ,_ddd :=_gcb ._bbc ["\u0063\u006d\u0061\u0070"];_ddd {if _gabf :=_gcb .ParseCmap ();_gabf !=nil {return _gabf ;};};return nil ;
};var _ Font =StdFont {};func (_dga *ttfParser )ParsePost ()error {if _eecbf :=_dga .Seek ("\u0070\u006f\u0073\u0074");_eecbf !=nil {return _eecbf ;};_ded :=_dga .Read32Fixed ();_dga ._ccb .ItalicAngle =_dga .Read32Fixed ();_dga ._ccb .UnderlinePosition =_dga .ReadShort ();
_dga ._ccb .UnderlineThickness =_dga .ReadShort ();_dga ._ccb .IsFixedPitch =_dga .ReadULong ()!=0;_dga .ReadULong ();_dga .ReadULong ();_dga .ReadULong ();_dga .ReadULong ();_ab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_ded );
switch _ded {case 1.0:_dga ._ccb .GlyphNames =_ead ;case 2.0:_ccfd :=int (_dga .ReadUShort ());_bgff :=make ([]int ,_ccfd );_dga ._ccb .GlyphNames =make ([]GlyphName ,_ccfd );_geee :=-1;for _ebdg :=0;_ebdg < _ccfd ;_ebdg ++{_egcb :=int (_dga .ReadUShort ());
_bgff [_ebdg ]=_egcb ;if _egcb <=0x7fff&&_egcb > _geee {_geee =_egcb ;};};var _bfc []GlyphName ;if _geee >=len (_ead ){_bfc =make ([]GlyphName ,_geee -len (_ead )+1);for _aeg :=0;_aeg < _geee -len (_ead )+1;_aeg ++{_gabe :=int (_dga .readByte ());_bded ,_aff :=_dga .ReadStr (_gabe );
if _aff !=nil {return _aff ;};_bfc [_aeg ]=GlyphName (_bded );};};for _fgg :=0;_fgg < _ccfd ;_fgg ++{_ccgc :=_bgff [_fgg ];if _ccgc < len (_ead ){_dga ._ccb .GlyphNames [_fgg ]=_ead [_ccgc ];}else if _ccgc >=len (_ead )&&_ccgc <=32767{_dga ._ccb .GlyphNames [_fgg ]=_bfc [_ccgc -len (_ead )];
}else {_dga ._ccb .GlyphNames [_fgg ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_ddc :=make ([]int ,_dga ._bggf );for _ece :=0;_ece < len (_ddc );_ece ++{_baad :=int (_dga .ReadSByte ());_ddc [_ece ]=_ece +1+_baad ;};_dga ._ccb .GlyphNames =make ([]GlyphName ,len (_ddc ));
for _gded :=0;_gded < len (_dga ._ccb .GlyphNames );_gded ++{_fdbg :=_ead [_ddc [_gded ]];_dga ._ccb .GlyphNames [_gded ]=_fdbg ;};case 3.0:_ab .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ab .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_ded );};return nil ;};func (_gadc *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_gadc .PostScriptName ,_gadc .UnitsPerEm ,_gadc .Bold ,_gadc .ItalicAngle ,_gadc .CapHeight ,len (_gadc .Chars ),len (_gadc .GlyphNames ));
};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _dd *RuneCharSafeMap ;func _fga ()StdFont {_fdg .Do (_bge );_gga :=Descriptor {Name :TimesItalicName ,Family :_ced ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_gga ,_ffd );};func _ddf (){_begd =MakeRuneCharSafeMap (len (_dab ));_fdd =MakeRuneCharSafeMap (len (_dab ));for _gbdf ,_aeaf :=range _dab {_begd .Write (_aeaf ,CharMetrics {Wx :float64 (_cdf [_gbdf ])});_fdd .Write (_aeaf ,CharMetrics {Wx :float64 (_bee [_gbdf ])});
};_dfe =_begd .Copy ();_dfc =_fdd .Copy ();};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;
CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_faf *TtfType )MakeToUnicode ()*_ed .CMap {_afe :=make (map[_ed .CharCode ]rune );if len (_faf .GlyphNames )==0{return _ed .NewToUnicodeCMap (_afe );};for _fafc ,_eed :=range _faf .Chars {_gge :=_ed .CharCode (_fafc );
_bed :=_faf .GlyphNames [_eed ];_ebde ,_ege :=_cb .GlyphToRune (_bed );if !_ege {_ab .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fafc ,_bed );
_ebde =_cb .MissingCodeRune ;};_afe [_gge ]=_ebde ;};return _ed .NewToUnicodeCMap (_afe );};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_gac :=_dag .read (name );_gac {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_dag .write (name ,fnc );for _ ,_bb :=range aliases {RegisterStdFont (_bb ,fnc );};};type GlyphName =_cb .GlyphName ;func _eac ()StdFont {_gdg .Do (_bce );_ceb :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ceb ,_agd );};func (_da *RuneCharSafeMap )Range (f func (_db rune ,_cf CharMetrics )(_cd bool )){_da ._f .RLock ();defer _da ._f .RUnlock ();for _ac ,_beg :=range _da ._edb {if f (_ac ,_beg ){break ;};};};func _bde ()StdFont {_gae .Do (_ddf );
_ceab :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_ceab ,_dfe );
};func (_dgcg *ttfParser )Seek (tag string )error {_acd ,_gcea :=_dgcg ._bbc [tag ];if !_gcea {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_dgcg ._dce .Seek (int64 (_acd ),_aa .SeekStart );
return nil ;};var _gae _ef .Once ;func (_eaf StdFont )GetMetricsTable ()*RuneCharSafeMap {return _eaf ._eec };var _dab =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _ada *RuneCharSafeMap ;var _bcg *RuneCharSafeMap ;type Font interface{Encoder ()_cb .TextEncoder ;GetRuneMetrics (_ec rune )(CharMetrics ,bool );};var _gee *RuneCharSafeMap ;
var _dfc *RuneCharSafeMap ;var _bbd =&RuneCharSafeMap {_edb :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
type ttfParser struct{_ccb TtfType ;_dce _aa .ReadSeeker ;_bbc map[string ]uint32 ;_ccbc uint16 ;_bggf uint16 ;};func (_eacf *ttfParser )parseCmapVersion (_dfa int64 )error {_ab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_dfa );
if _eacf ._ccb .Chars ==nil {_eacf ._ccb .Chars =make (map[rune ]GID );};_eacf ._dce .Seek (int64 (_eacf ._bbc ["\u0063\u006d\u0061\u0070"])+_dfa ,_aa .SeekStart );var _edc ,_cdc uint32 ;_ccc :=_eacf .ReadUShort ();if _ccc < 8{_edc =uint32 (_eacf .ReadUShort ());
_cdc =uint32 (_eacf .ReadUShort ());}else {_eacf .ReadUShort ();_edc =_eacf .ReadULong ();_cdc =_eacf .ReadULong ();};_ab .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_ccc ,_edc ,_cdc );
switch _ccc {case 0:return _eacf .parseCmapFormat0 ();case 6:return _eacf .parseCmapFormat6 ();case 12:return _eacf .parseCmapFormat12 ();default:_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_ccc );
return nil ;};};func (_ccfe *ttfParser )ReadUShort ()(_egf uint16 ){_d .Read (_ccfe ._dce ,_d .BigEndian ,&_egf );return _egf ;};func init (){RegisterStdFont (CourierName ,_ba ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_ffa ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_eac ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dbe ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func _gdf ()StdFont {_gae .Do (_ddf );_eb :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eb ,_begd );};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _gdg _ef .Once ;func (_ecc *ttfParser )ParseHhea ()error {if _cbea :=_ecc .Seek ("\u0068\u0068\u0065\u0061");_cbea !=nil {return _cbea ;};_ecc .Skip (4+15*2);_ecc ._ccbc =_ecc .ReadUShort ();return nil ;
};func _bce (){const _eg =600;_ada =MakeRuneCharSafeMap (len (_dab ));for _ ,_gbe :=range _dab {_ada .Write (_gbe ,CharMetrics {Wx :_eg });};_dd =_ada .Copy ();_eae =_ada .Copy ();_agd =_ada .Copy ();};func _gcc ()StdFont {_fdg .Do (_bge );_add :=Descriptor {Name :TimesBoldItalicName ,Family :_ced ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_add ,_gee );};func _gf ()StdFont {_gbg :=_cb .NewZapfDingbatsEncoder ();_ebb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_ebb ,_bbd ,_gbg );};type fontMap struct{_ef .Mutex ;_aea map[StdFontName ]func ()StdFont ;};func TtfParseFile (fileStr string )(TtfType ,error ){_cbf ,_dgd :=_a .Open (fileStr );if _dgd !=nil {return TtfType {},_dgd ;};defer _cbf .Close ();
return TtfParse (_cbf );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_edb :make (map[rune ]CharMetrics ,length )};};func init (){RegisterStdFont (HelveticaName ,_gdf ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_fd ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_bde ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_bbg ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type GID =_cb .GID ;func (_ce *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ce ._f .RLock ();defer _ce ._f .RUnlock ();_dgf ,_ff :=_ce ._edb [b ];return _dgf ,_ff ;};var _ede =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _fdd *RuneCharSafeMap ;func (_gea *ttfParser )ParseMaxp ()error {if _aeb :=_gea .Seek ("\u006d\u0061\u0078\u0070");_aeb !=nil {return _aeb ;};_gea .Skip (4);_gea ._bggf =_gea .ReadUShort ();return nil ;};func (_gbd *fontMap )write (_dbc StdFontName ,_bd func ()StdFont ){_gbd .Lock ();
defer _gbd .Unlock ();_gbd ._aea [_dbc ]=_bd ;};func (_ad StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_dc ,_bda :=_ad ._eec .Read (r );return _dc ,_bda ;};var _bee =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_deb *ttfParser )Skip (n int ){_deb ._dce .Seek (int64 (n ),_aa .SeekCurrent )};var _ead =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ebe =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func _bbg ()StdFont {_gae .Do (_ddf );_cc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cc ,_dfc );};type RuneCharSafeMap struct{_edb map[rune ]CharMetrics ;_f _ef .RWMutex ;};func init (){RegisterStdFont (SymbolName ,_gbb ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_gf );};func _ffa ()StdFont {_gdg .Do (_bce );_aag :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_aag ,_dd );};func (_fce *ttfParser )ParseHmtx ()error {if _cbg :=_fce .Seek ("\u0068\u006d\u0074\u0078");_cbg !=nil {return _cbg ;};_fce ._ccb .Widths =make ([]uint16 ,0,8);for _aca :=uint16 (0);_aca < _fce ._ccbc ;_aca ++{_fce ._ccb .Widths =append (_fce ._ccb .Widths ,_fce .ReadUShort ());
_fce .Skip (2);};if _fce ._ccbc < _fce ._bggf &&_fce ._ccbc > 0{_eeb :=_fce ._ccb .Widths [_fce ._ccbc -1];for _aebc :=_fce ._ccbc ;_aebc < _fce ._bggf ;_aebc ++{_fce ._ccb .Widths =append (_fce ._ccb .Widths ,_eeb );};};return nil ;};func (_gb *fontMap )read (_dgfg StdFontName )(func ()StdFont ,bool ){_gb .Lock ();
defer _gb .Unlock ();_bef ,_bg :=_gb ._aea [_dgfg ];return _bef ,_bg ;};func (_cbd CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cbd .Wx ,_cbd .Wy );};var _gec =&RuneCharSafeMap {_edb :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func init (){RegisterStdFont (TimesRomanName ,_caf ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_dgfc ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_fga ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_gcc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ca ,_af :=_dag .read (name );if !_af {return StdFont {},false ;};return _ca (),true ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func _aeae (_eaca map[string ]uint32 )string {var _efd []string ;for _cbfd :=range _eaca {_efd =append (_efd ,_cbfd );};_bc .Slice (_efd ,func (_dff ,_bgb int )bool {return _eaca [_efd [_dff ]]< _eaca [_efd [_bgb ]]});_ecd :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_eaca ))};
for _ ,_cbe :=range _efd {_ecd =append (_ecd ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cbe ,_eaca [_cbe ]));};return _e .Join (_ecd ,"\u000a");};func _dbe ()StdFont {_gdg .Do (_bce );_fc :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fc ,_eae );};func _gbb ()StdFont {_ega :=_cb .NewSymbolEncoder ();_edba :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_edba ,_gec ,_ega );};func (_bgg StdFont )Descriptor ()Descriptor {return _bgg ._efc };type StdFont struct{_efc Descriptor ;_eec *RuneCharSafeMap ;_cde _cb .TextEncoder ;};func (_be *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_be ._f .Lock ();
defer _be ._f .Unlock ();_be ._edb [b ]=r ;};func IsStdFont (name StdFontName )bool {_ ,_cea :=_dag .read (name );return _cea };type FontWeight int ;var _dfe *RuneCharSafeMap ;func (_bgc *ttfParser )readByte ()(_eea uint8 ){_d .Read (_bgc ._dce ,_d .BigEndian ,&_eea );
return _eea };func NewFontFile2FromPdfObject (obj _bf .PdfObject )(TtfType ,error ){obj =_bf .TraceToDirectObject (obj );_efe ,_ecb :=obj .(*_bf .PdfObjectStream );if !_ecb {_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_bf .ErrTypeError ;};_fcf ,_gecf :=_bf .DecodeStream (_efe );if _gecf !=nil {return TtfType {},_gecf ;};_bgf :=ttfParser {_dce :_ga .NewReader (_fcf )};return _bgf .Parse ();};func (_cdeb *ttfParser )ParseName ()error {if _adab :=_cdeb .Seek ("\u006e\u0061\u006d\u0065");
_adab !=nil {return _adab ;};_efec ,_ :=_cdeb ._dce .Seek (0,_aa .SeekCurrent );_cdeb ._ccb .PostScriptName ="";_cdeb .Skip (2);_bcf :=_cdeb .ReadUShort ();_ecba :=_cdeb .ReadUShort ();for _cgf :=uint16 (0);_cgf < _bcf &&_cdeb ._ccb .PostScriptName =="";
_cgf ++{_cdeb .Skip (3*2);_aba :=_cdeb .ReadUShort ();_feda :=_cdeb .ReadUShort ();_dgc :=_cdeb .ReadUShort ();if _aba ==6{_cdeb ._dce .Seek (_efec +int64 (_ecba )+int64 (_dgc ),_aa .SeekStart );_cad ,_agc :=_cdeb .ReadStr (int (_feda ));if _agc !=nil {return _agc ;
};_cad =_e .Replace (_cad ,"\u0000","",-1);_abfg ,_agc :=_ea .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _agc !=nil {return _agc ;};_cdeb ._ccb .PostScriptName =_abfg .ReplaceAllString (_cad ,"");};};
if _cdeb ._ccb .PostScriptName ==""{_ab .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_deg *ttfParser )ParseHead ()error {if _aac :=_deg .Seek ("\u0068\u0065\u0061\u0064");_aac !=nil {return _aac ;};_deg .Skip (3*4);_fbc :=_deg .ReadULong ();if _fbc !=0x5F0F3CF5{_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_deg );
};_deg .Skip (2);_deg ._ccb .UnitsPerEm =_deg .ReadUShort ();_deg .Skip (2*8);_deg ._ccb .Xmin =_deg .ReadShort ();_deg ._ccb .Ymin =_deg .ReadShort ();_deg ._ccb .Xmax =_deg .ReadShort ();_deg ._ccb .Ymax =_deg .ReadShort ();return nil ;};func _ba ()StdFont {_gdg .Do (_bce );
_aab :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_aab ,_ada );
};func (_dg *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ag :=MakeRuneCharSafeMap (_dg .Length ());_dg .Range (func (_ge rune ,_ee CharMetrics )(_de bool ){_ag ._edb [_ge ]=_ee ;return false });return _ag ;};func (_fgda *ttfParser )ParseCmap ()error {var _cbc int64 ;
if _abfc :=_fgda .Seek ("\u0063\u006d\u0061\u0070");_abfc !=nil {return _abfc ;};_ab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_fgda .ReadUShort ();_gfgf :=int (_fgda .ReadUShort ());_gfea :=int64 (0);_cbde :=int64 (0);_daae :=int64 (0);
for _ffde :=0;_ffde < _gfgf ;_ffde ++{_cbb :=_fgda .ReadUShort ();_fcc :=_fgda .ReadUShort ();_cbc =int64 (_fgda .ReadULong ());if _cbb ==3&&_fcc ==1{_cbde =_cbc ;}else if _cbb ==3&&_fcc ==10{_daae =_cbc ;}else if _cbb ==1&&_fcc ==0{_gfea =_cbc ;};};if _gfea !=0{if _baa :=_fgda .parseCmapVersion (_gfea );
_baa !=nil {return _baa ;};};if _cbde !=0{if _bbe :=_fgda .parseCmapSubtable31 (_cbde );_bbe !=nil {return _bbe ;};};if _daae !=0{if _gecc :=_fgda .parseCmapVersion (_daae );_gecc !=nil {return _gecc ;};};if _cbde ==0&&_gfea ==0&&_daae ==0{_ab .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_dgde *ttfParser )ReadShort ()(_abe int16 ){_d .Read (_dgde ._dce ,_d .BigEndian ,&_abe );return _abe ;};func (_dgga *ttfParser )parseCmapFormat0 ()error {_dca ,_ggb :=_dgga .ReadStr (256);if _ggb !=nil {return _ggb ;};_eccg :=[]byte (_dca );
_ab .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dgga ._ccb .String (),_dca ,_eccg );
for _fef ,_fdb :=range _eccg {_dgga ._ccb .Chars [rune (_fef )]=GID (_fdb );};return nil ;};func (_eafe *ttfParser )ReadULong ()(_cee uint32 ){_d .Read (_eafe ._dce ,_d .BigEndian ,&_cee );return _cee ;};func (_agg *ttfParser )ReadSByte ()(_gdc int8 ){_d .Read (_agg ._dce ,_d .BigEndian ,&_gdc );
return _gdc };var _eaeb *RuneCharSafeMap ;func _caf ()StdFont {_fdg .Do (_bge );_daa :=Descriptor {Name :TimesRomanName ,Family :_ced ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_daa ,_eaeb );};func (_cded *ttfParser )ReadStr (length int )(string ,error ){_agf :=make ([]byte ,length );_fec ,_aebcd :=_cded ._dce .Read (_agf );if _aebcd !=nil {return "",_aebcd ;}else if _fec !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_agf ),nil ;};func (_dea StdFont )Name ()string {return string (_dea ._efc .Name )};var _ffd *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func _fd ()StdFont {_gae .Do (_ddf );_dcc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dcc ,_fdd );};func (_bae *ttfParser )parseCmapFormat6 ()error {_agdg :=int (_bae .ReadUShort ());_bbfg :=int (_bae .ReadUShort ());_ab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_bae ._ccb .String (),_agdg ,_bbfg );
for _gfd :=0;_gfd < _bbfg ;_gfd ++{_eca :=GID (_bae .ReadUShort ());_bae ._ccb .Chars [rune (_gfd +_agdg )]=_eca ;};return nil ;};func (_ggg *ttfParser )parseCmapSubtable10 (_fbd int64 )error {if _ggg ._ccb .Chars ==nil {_ggg ._ccb .Chars =make (map[rune ]GID );
};_ggg ._dce .Seek (int64 (_ggg ._bbc ["\u0063\u006d\u0061\u0070"])+_fbd ,_aa .SeekStart );var _aeed ,_ffdc uint32 ;_bege :=_ggg .ReadUShort ();if _bege < 8{_aeed =uint32 (_ggg .ReadUShort ());_ffdc =uint32 (_ggg .ReadUShort ());}else {_ggg .ReadUShort ();
_aeed =_ggg .ReadULong ();_ffdc =_ggg .ReadULong ();};_ab .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_bege ,_aeed ,_ffdc );
if _bege !=0{return _c .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eagd ,_cga :=_ggg .ReadStr (256);if _cga !=nil {return _cga ;
};_bfff :=[]byte (_eagd );for _fda ,_gfga :=range _bfff {_ggg ._ccb .Chars [rune (_fda )]=GID (_gfga );if _gfga !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fda ,_gfga ,rune (_gfga ));
};};return nil ;};func (_fbg *ttfParser )ParseOS2 ()error {if _gce :=_fbg .Seek ("\u004f\u0053\u002f\u0032");_gce !=nil {return _gce ;};_afg :=_fbg .ReadUShort ();_fbg .Skip (4*2);_fbg .Skip (11*2+10+4*4+4);_cfed :=_fbg .ReadUShort ();_fbg ._ccb .Bold =(_cfed &32)!=0;
_fbg .Skip (2*2);_fbg ._ccb .TypoAscender =_fbg .ReadShort ();_fbg ._ccb .TypoDescender =_fbg .ReadShort ();if _afg >=2{_fbg .Skip (3*2+2*4+2);_fbg ._ccb .CapHeight =_fbg .ReadShort ();}else {_fbg ._ccb .CapHeight =0;};return nil ;};type StdFontName string ;
var _adc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func TtfParse (r _aa .ReadSeeker )(TtfType ,error ){_ccf :=&ttfParser {_dce :r };return _ccf .Parse ()};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_cb .NewStandardEncoder ());};func (_feg *ttfParser )parseCmapSubtable31 (_acc int64 )error {_gcbc :=make ([]rune ,0,8);
_gfg :=make ([]rune ,0,8);_cgc :=make ([]int16 ,0,8);_fcb :=make ([]uint16 ,0,8);_feg ._ccb .Chars =make (map[rune ]GID );_feg ._dce .Seek (int64 (_feg ._bbc ["\u0063\u006d\u0061\u0070"])+_acc ,_aa .SeekStart );_bbb :=_feg .ReadUShort ();if _bbb !=4{return _ae .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_bbb ,_bf .ErrNotSupported );
};_feg .Skip (2*2);_dfg :=int (_feg .ReadUShort ()/2);_feg .Skip (3*2);for _acb :=0;_acb < _dfg ;_acb ++{_gfg =append (_gfg ,rune (_feg .ReadUShort ()));};_feg .Skip (2);for _cgd :=0;_cgd < _dfg ;_cgd ++{_gcbc =append (_gcbc ,rune (_feg .ReadUShort ()));
};for _fff :=0;_fff < _dfg ;_fff ++{_cgc =append (_cgc ,_feg .ReadShort ());};_ggee ,_ :=_feg ._dce .Seek (int64 (0),_aa .SeekCurrent );for _aaca :=0;_aaca < _dfg ;_aaca ++{_fcb =append (_fcb ,_feg .ReadUShort ());};for _edea :=0;_edea < _dfg ;_edea ++{_eee :=_gcbc [_edea ];
_eag :=_gfg [_edea ];_fgd :=_cgc [_edea ];_caa :=_fcb [_edea ];if _caa > 0{_feg ._dce .Seek (_ggee +2*int64 (_edea )+int64 (_caa ),_aa .SeekStart );};for _gbdb :=_eee ;_gbdb <=_eag ;_gbdb ++{if _gbdb ==0xFFFF{break ;};var _bbde int32 ;if _caa > 0{_bbde =int32 (_feg .ReadUShort ());
if _bbde > 0{_bbde +=int32 (_fgd );};}else {_bbde =_gbdb +int32 (_fgd );};if _bbde >=65536{_bbde -=65536;};if _bbde > 0{_feg ._ccb .Chars [_gbdb ]=GID (_bbde );};};};return nil ;};var _cdf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_ecf *ttfParser )parseCmapFormat12 ()error {_daaeg :=_ecf .ReadULong ();_ab .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ecf ._ccb .String (),_daaeg );
for _ggeea :=uint32 (0);_ggeea < _daaeg ;_ggeea ++{_gbc :=_ecf .ReadULong ();_dcb :=_ecf .ReadULong ();_dbf :=_ecf .ReadULong ();if _gbc > 0x0010FFFF||(0xD800<=_gbc &&_gbc <=0xDFFF){return _c .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _dcb < _gbc ||_dcb > 0x0010FFFF||(0xD800<=_dcb &&_dcb <=0xDFFF){return _c .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _fca :=_gbc ;_fca <=_dcb ;
_fca ++{if _fca > 0x10FFFF{_ab .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ecf ._ccb .Chars [rune (_fca )]=GID (_dbf );_dbf ++;};};return nil ;};func (_eda *TtfType )MakeEncoder ()(_cb .SimpleEncoder ,error ){_bdbd :=make (map[_cb .CharCode ]GlyphName );for _ebd :=_cb .CharCode (0);_ebd <=256;_ebd ++{_bca :=rune (_ebd );_bcgd ,_fa :=_eda .Chars [_bca ];
if !_fa {continue ;};var _cfd GlyphName ;if int (_bcgd )>=0&&int (_bcgd )< len (_eda .GlyphNames ){_cfd =_eda .GlyphNames [_bcgd ];}else {_cfe :=rune (_bcgd );if _cg ,_dad :=_cb .RuneToGlyph (_cfe );_dad {_cfd =_cg ;};};if _cfd !=""{_bdbd [_ebd ]=_cfd ;
};};if len (_bdbd )==0{_ab .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_eda ,_eda .Chars );
};return _cb .NewCustomSimpleTextEncoder (_bdbd ,nil );};var _dag =&fontMap {_aea :make (map[StdFontName ]func ()StdFont )};var _eae *RuneCharSafeMap ;func _bge (){_eaeb =MakeRuneCharSafeMap (len (_dab ));_bcg =MakeRuneCharSafeMap (len (_dab ));_gee =MakeRuneCharSafeMap (len (_dab ));
_ffd =MakeRuneCharSafeMap (len (_dab ));for _ccd ,_gccg :=range _dab {_eaeb .Write (_gccg ,CharMetrics {Wx :float64 (_adc [_ccd ])});_bcg .Write (_gccg ,CharMetrics {Wx :float64 (_ede [_ccd ])});_gee .Write (_gccg ,CharMetrics {Wx :float64 (_ebe [_ccd ])});
_ffd .Write (_gccg ,CharMetrics {Wx :float64 (_gde [_ccd ])});};};func (_deag *ttfParser )Parse ()(TtfType ,error ){_cdd ,_def :=_deag .ReadStr (4);if _def !=nil {return TtfType {},_def ;};if _cdd =="\u004f\u0054\u0054\u004f"{return TtfType {},_ae .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bf .ErrNotSupported );
};if _cdd !="\u0000\u0001\u0000\u0000"&&_cdd !="\u0074\u0072\u0075\u0065"{_ab .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_cdd );
};_bcb :=int (_deag .ReadUShort ());_deag .Skip (3*2);_deag ._bbc =make (map[string ]uint32 );var _edg string ;for _fed :=0;_fed < _bcb ;_fed ++{_edg ,_def =_deag .ReadStr (4);if _def !=nil {return TtfType {},_def ;};_deag .Skip (4);_eede :=_deag .ReadULong ();
_deag .Skip (4);_deag ._bbc [_edg ]=_eede ;};_ab .Log .Trace (_aeae (_deag ._bbc ));if _def =_deag .ParseComponents ();_def !=nil {return TtfType {},_def ;};return _deag ._ccb ,nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _cb .TextEncoder )StdFont {var _cbda rune =0xA0;
if _ ,_bcc :=metrics .Read (_cbda );!_bcc {_bdf ,_ :=metrics .Read (0x20);metrics .Write (_cbda ,_bdf );};return StdFont {_efc :desc ,_eec :metrics ,_cde :encoder };};var _fdg _ef .Once ;func (_aec StdFont )ToPdfObject ()_bf .PdfObject {_fe :=_bf .MakeDict ();
_fe .Set ("\u0054\u0079\u0070\u0065",_bf .MakeName ("\u0046\u006f\u006e\u0074"));_fe .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bf .MakeName ("\u0054\u0079\u0070e\u0031"));_fe .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bf .MakeName (_aec .Name ()));
_fe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_aec ._cde .ToPdfObject ());return _bf .MakeIndirectObject (_fe );};var _begd *RuneCharSafeMap ;var _gde =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_beec *ttfParser )Read32Fixed ()float64 {_efcc :=float64 (_beec .ReadShort ());_egee :=float64 (_beec .ReadUShort ())/65536.0;return _efcc +_egee ;};func (_bbf *TtfType )NewEncoder ()_cb .TextEncoder {return _cb .NewTrueTypeFontEncoder (_bbf .Chars )};
func _dgfc ()StdFont {_fdg .Do (_bge );_gad :=Descriptor {Name :TimesBoldName ,Family :_ced ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_gad ,_bcg );};const (_ced ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););