//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fc "bytes";_d "encoding/binary";_b "errors";_c "fmt";_cf "github.com/unidoc/unipdf/v3/common";_dce "github.com/unidoc/unipdf/v3/core";_ce "github.com/unidoc/unipdf/v3/internal/cmap";_fa "github.com/unidoc/unipdf/v3/internal/textencoding";
_dc "golang.org/x/xerrors";_g "io";_ae "os";_f "regexp";_a "sort";_cd "strings";_fd "sync";);type Font interface{Encoder ()_fa .TextEncoder ;GetRuneMetrics (_ca rune )(CharMetrics ,bool );};func _gdc ()StdFont {_ecd .Do (_cc );_fba :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fba ,_bcf );};func (_dag *ttfParser )ReadSByte ()(_acfe int8 ){_d .Read (_dag ._ggac ,_d .BigEndian ,&_acfe );return _acfe ;};func _gca ()StdFont {_cab .Do (_bac );_gded :=Descriptor {Name :TimesBoldItalicName ,Family :_fbab ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_gded ,_ed );};type FontWeight int ;var _agc =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func _cae (){_fgc =MakeRuneCharSafeMap (len (_eag ));_ad =MakeRuneCharSafeMap (len (_eag ));for _feg ,_gdf :=range _eag {_fgc .Write (_gdf ,CharMetrics {Wx :float64 (_ba [_feg ])});_ad .Write (_gdf ,CharMetrics {Wx :float64 (_bdd [_feg ])});};_fec =_fgc .Copy ();
_da =_ad .Copy ();};var _fgff =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_bf *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_bf ._ea .RLock ();defer _bf ._ea .RUnlock ();_eg ,_eaa :=_bf ._be [b ];return _eg ,_eaa ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _bdd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};type StdFontName string ;var _cab _fd .Once ;
var _bge =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_cdba *ttfParser )Skip (n int ){_cdba ._ggac .Seek (int64 (n ),_g .SeekCurrent )};var _ecd _fd .Once ;func (_geea *ttfParser )Parse ()(TtfType ,error ){_dcdf ,_adc :=_geea .ReadStr (4);if _adc !=nil {return TtfType {},_adc ;};if _dcdf =="\u004f\u0054\u0054\u004f"{return TtfType {},_dc .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_dce .ErrNotSupported );
};if _dcdf !="\u0000\u0001\u0000\u0000"&&_dcdf !="\u0074\u0072\u0075\u0065"{_cf .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_dcdf );
};_gce :=int (_geea .ReadUShort ());_geea .Skip (3*2);_geea ._ef =make (map[string ]uint32 );var _faeb string ;for _ggc :=0;_ggc < _gce ;_ggc ++{_faeb ,_adc =_geea .ReadStr (4);if _adc !=nil {return TtfType {},_adc ;};_geea .Skip (4);_fgcb :=_geea .ReadULong ();
_geea .Skip (4);_geea ._ef [_faeb ]=_fgcb ;};_cf .Log .Trace (_gcc (_geea ._ef ));if _adc =_geea .ParseComponents ();_adc !=nil {return TtfType {},_adc ;};return _geea ._afe ,nil ;};func (_ag *RuneCharSafeMap )Length ()int {_ag ._ea .RLock ();defer _ag ._ea .RUnlock ();
return len (_ag ._be );};func (_edg *TtfType )MakeToUnicode ()*_ce .CMap {_beg :=make (map[_ce .CharCode ]rune );if len (_edg .GlyphNames )==0{return _ce .NewToUnicodeCMap (_beg );};for _ecb ,_ffg :=range _edg .Chars {_cdd :=_ce .CharCode (_ecb );_aga :=_edg .GlyphNames [_ffg ];
_aebb ,_gcaa :=_fa .GlyphToRune (_aga );if !_gcaa {_cf .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_ecb ,_aga );_aebb =_fa .MissingCodeRune ;
};_beg [_cdd ]=_aebb ;};return _ce .NewToUnicodeCMap (_beg );};type StdFont struct{_cfc Descriptor ;_eeg *RuneCharSafeMap ;_acb _fa .TextEncoder ;};var _ad *RuneCharSafeMap ;func (_dac *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_dac .PostScriptName ,_dac .UnitsPerEm ,_dac .Bold ,_dac .ItalicAngle ,_dac .CapHeight ,len (_dac .Chars ),len (_dac .GlyphNames ));
};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_cfd *ttfParser )Seek (tag string )error {_egbd ,_eac :=_cfd ._ef [tag ];if !_eac {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_cfd ._ggac .Seek (int64 (_egbd ),_g .SeekStart );return nil ;};func (_bcg *TtfType )MakeEncoder ()(_fa .SimpleEncoder ,error ){_dgc :=make (map[_fa .CharCode ]GlyphName );for _bgdb :=_fa .CharCode (0);_bgdb <=256;_bgdb ++{_gdfc :=rune (_bgdb );_faa ,_eaag :=_bcg .Chars [_gdfc ];
if !_eaag {continue ;};var _fgf GlyphName ;if int (_faa )>=0&&int (_faa )< len (_bcg .GlyphNames ){_fgf =_bcg .GlyphNames [_faa ];}else {_dceg :=rune (_faa );if _gga ,_aee :=_fa .RuneToGlyph (_dceg );_aee {_fgf =_gga ;};};if _fgf !=""{_dgc [_bgdb ]=_fgf ;
};};if len (_dgc )==0{_cf .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_bcg ,_bcg .Chars );
};return _fa .NewCustomSimpleTextEncoder (_dgc ,nil );};func (_gf StdFont )ToPdfObject ()_dce .PdfObject {_fcf :=_dce .MakeDict ();_fcf .Set ("\u0054\u0079\u0070\u0065",_dce .MakeName ("\u0046\u006f\u006e\u0074"));_fcf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dce .MakeName ("\u0054\u0079\u0070e\u0031"));
_fcf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_dce .MakeName (_gf .Name ()));_fcf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gf ._acb .ToPdfObject ());return _dce .MakeIndirectObject (_fcf );};var _ed *RuneCharSafeMap ;var _bed *RuneCharSafeMap ;
func (_bfb StdFont )Descriptor ()Descriptor {return _bfb ._cfc };func (_df *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fg :=MakeRuneCharSafeMap (_df .Length ());_df .Range (func (_aa rune ,_dcg CharMetrics )(_ac bool ){_fg ._be [_aa ]=_dcg ;return false });
return _fg ;};var _ba =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func init (){RegisterStdFont (CourierName ,_gde ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_cb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_gcbc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_gdc ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func _ead ()StdFont {_fbd .Do (_cae );_gbf :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gbf ,_ad );};var _fed *RuneCharSafeMap ;func _gfe ()StdFont {_fbd .Do (_cae );_ddb :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ddb ,_fec );};func (_ga *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ga ._ea .Lock ();defer _ga ._ea .Unlock ();_ga ._be [b ]=r ;};func (_afg StdFont )GetMetricsTable ()*RuneCharSafeMap {return _afg ._eeg };var _fgc *RuneCharSafeMap ;
func _ddd ()StdFont {_fbd .Do (_cae );_ge :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_ge ,_da );};func (_aaafd *ttfParser )ParseOS2 ()error {if _ecg :=_aaafd .Seek ("\u004f\u0053\u002f\u0032");_ecg !=nil {return _ecg ;};_bbg :=_aaafd .ReadUShort ();_aaafd .Skip (4*2);_aaafd .Skip (11*2+10+4*4+4);_bgf :=_aaafd .ReadUShort ();
_aaafd ._afe .Bold =(_bgf &32)!=0;_aaafd .Skip (2*2);_aaafd ._afe .TypoAscender =_aaafd .ReadShort ();_aaafd ._afe .TypoDescender =_aaafd .ReadShort ();if _bbg >=2{_aaafd .Skip (3*2+2*4+2);_aaafd ._afe .CapHeight =_aaafd .ReadShort ();}else {_aaafd ._afe .CapHeight =0;
};return nil ;};var _ Font =StdFont {};func _cc (){const _cff =600;_bed =MakeRuneCharSafeMap (len (_eag ));for _ ,_fdgg :=range _eag {_bed .Write (_fdgg ,CharMetrics {Wx :_cff });};_bgd =_bed .Copy ();_bcf =_bed .Copy ();_cdg =_bed .Copy ();};var _fbd _fd .Once ;
func init (){RegisterStdFont (HelveticaName ,_bbb ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ead ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_gfe ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_ddd ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func _bac (){_fed =MakeRuneCharSafeMap (len (_eag ));_cag =MakeRuneCharSafeMap (len (_eag ));_ed =MakeRuneCharSafeMap (len (_eag ));
_gee =MakeRuneCharSafeMap (len (_eag ));for _fab ,_fffb :=range _eag {_fed .Write (_fffb ,CharMetrics {Wx :float64 (_bge [_fab ])});_cag .Write (_fffb ,CharMetrics {Wx :float64 (_fdd [_fab ])});_ed .Write (_fffb ,CharMetrics {Wx :float64 (_agc [_fab ])});
_gee .Write (_fffb ,CharMetrics {Wx :float64 (_def [_fab ])});};};var _bgd *RuneCharSafeMap ;var _ff =&RuneCharSafeMap {_be :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_gabd *ttfParser )parseCmapSubtable10 (_eaae int64 )error {if _gabd ._afe .Chars ==nil {_gabd ._afe .Chars =make (map[rune ]GID );};_gabd ._ggac .Seek (int64 (_gabd ._ef ["\u0063\u006d\u0061\u0070"])+_eaae ,_g .SeekStart );var _feeb ,_fcab uint32 ;
_agd :=_gabd .ReadUShort ();if _agd < 8{_feeb =uint32 (_gabd .ReadUShort ());_fcab =uint32 (_gabd .ReadUShort ());}else {_gabd .ReadUShort ();_feeb =_gabd .ReadULong ();_fcab =_gabd .ReadULong ();};_cf .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_agd ,_feeb ,_fcab );
if _agd !=0{return _b .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cfa ,_gcgc :=_gabd .ReadStr (256);if _gcgc !=nil {return _gcgc ;
};_cagc :=[]byte (_cfa );for _dgb ,_bdf :=range _cagc {_gabd ._afe .Chars [rune (_dgb )]=GID (_bdf );if _bdf !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_dgb ,_bdf ,rune (_bdf ));
};};return nil ;};var _gee *RuneCharSafeMap ;func TtfParseFile (fileStr string )(TtfType ,error ){_bag ,_gfc :=_ae .Open (fileStr );if _gfc !=nil {return TtfType {},_gfc ;};defer _bag .Close ();return TtfParse (_bag );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_dd ,_bc :=_ee .read (name );
if !_bc {return StdFont {},false ;};return _dd (),true ;};func (_fdc *fontMap )read (_ecf StdFontName )(func ()StdFont ,bool ){_fdc .Lock ();defer _fdc .Unlock ();_fdcd ,_gc :=_fdc ._ec [_ecf ];return _fdcd ,_gc ;};var _fec *RuneCharSafeMap ;func _fff ()StdFont {_cab .Do (_bac );
_adb :=Descriptor {Name :TimesBoldName ,Family :_fbab ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};return NewStdFont (_adb ,_cag );
};var _gag =&RuneCharSafeMap {_be :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_bd CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_bd .Wx ,_bd .Wy );};func (_gd *fontMap )write (_aaa StdFontName ,_gab func ()StdFont ){_gd .Lock ();defer _gd .Unlock ();_gd ._ec [_aaa ]=_gab ;
};func init (){RegisterStdFont (SymbolName ,_ggdd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_bfa );};func (_cad *ttfParser )readByte ()(_cbaf uint8 ){_d .Read (_cad ._ggac ,_d .BigEndian ,&_cbaf );return _cbaf ;};func NewFontFile2FromPdfObject (obj _dce .PdfObject )(TtfType ,error ){obj =_dce .TraceToDirectObject (obj );
_agf ,_ddc :=obj .(*_dce .PdfObjectStream );if !_ddc {_cf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_dce .ErrTypeError ;};_cge ,_ecfe :=_dce .DecodeStream (_agf );if _ecfe !=nil {return TtfType {},_ecfe ;};_abc :=ttfParser {_ggac :_fc .NewReader (_cge )};return _abc .Parse ();};func (_gfbc *ttfParser )ParsePost ()error {if _begd :=_gfbc .Seek ("\u0070\u006f\u0073\u0074");
_begd !=nil {return _begd ;};_cgc :=_gfbc .Read32Fixed ();_gfbc ._afe .ItalicAngle =_gfbc .Read32Fixed ();_gfbc ._afe .UnderlinePosition =_gfbc .ReadShort ();_gfbc ._afe .UnderlineThickness =_gfbc .ReadShort ();_gfbc ._afe .IsFixedPitch =_gfbc .ReadULong ()!=0;
_gfbc .ReadULong ();_gfbc .ReadULong ();_gfbc .ReadULong ();_gfbc .ReadULong ();_cf .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cgc );switch _cgc {case 1.0:_gfbc ._afe .GlyphNames =_fgff ;
case 2.0:_fffg :=int (_gfbc .ReadUShort ());_eedb :=make ([]int ,_fffg );_gfbc ._afe .GlyphNames =make ([]GlyphName ,_fffg );_dge :=-1;for _bbc :=0;_bbc < _fffg ;_bbc ++{_ced :=int (_gfbc .ReadUShort ());_eedb [_bbc ]=_ced ;if _ced <=0x7fff&&_ced > _dge {_dge =_ced ;
};};var _dafe []GlyphName ;if _dge >=len (_fgff ){_dafe =make ([]GlyphName ,_dge -len (_fgff )+1);for _defg :=0;_defg < _dge -len (_fgff )+1;_defg ++{_bbcg :=int (_gfbc .readByte ());_gba ,_gff :=_gfbc .ReadStr (_bbcg );if _gff !=nil {return _gff ;};_dafe [_defg ]=GlyphName (_gba );
};};for _edcb :=0;_edcb < _fffg ;_edcb ++{_ccdd :=_eedb [_edcb ];if _ccdd < len (_fgff ){_gfbc ._afe .GlyphNames [_edcb ]=_fgff [_ccdd ];}else if _ccdd >=len (_fgff )&&_ccdd <=32767{_gfbc ._afe .GlyphNames [_edcb ]=_dafe [_ccdd -len (_fgff )];}else {_gfbc ._afe .GlyphNames [_edcb ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_adg :=make ([]int ,_gfbc ._ace );for _bdfg :=0;_bdfg < len (_adg );_bdfg ++{_fbe :=int (_gfbc .ReadSByte ());_adg [_bdfg ]=_bdfg +1+_fbe ;};_gfbc ._afe .GlyphNames =make ([]GlyphName ,len (_adg ));for _dfe :=0;_dfe < len (_gfbc ._afe .GlyphNames );
_dfe ++{_abb :=_fgff [_adg [_dfe ]];_gfbc ._afe .GlyphNames [_dfe ]=_abb ;};case 3.0:_cf .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_cf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cgc );};return nil ;};type fontMap struct{_fd .Mutex ;_ec map[StdFontName ]func ()StdFont ;
};func (_bfbb *ttfParser )parseCmapVersion (_edc int64 )error {_cf .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_edc );if _bfbb ._afe .Chars ==nil {_bfbb ._afe .Chars =make (map[rune ]GID );
};_bfbb ._ggac .Seek (int64 (_bfbb ._ef ["\u0063\u006d\u0061\u0070"])+_edc ,_g .SeekStart );var _eeb ,_fefa uint32 ;_daf :=_bfbb .ReadUShort ();if _daf < 8{_eeb =uint32 (_bfbb .ReadUShort ());_fefa =uint32 (_bfbb .ReadUShort ());}else {_bfbb .ReadUShort ();
_eeb =_bfbb .ReadULong ();_fefa =_bfbb .ReadULong ();};_cf .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_daf ,_eeb ,_fefa );
switch _daf {case 0:return _bfbb .parseCmapFormat0 ();case 6:return _bfbb .parseCmapFormat6 ();case 12:return _bfbb .parseCmapFormat12 ();default:_cf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_daf );
return nil ;};};func init (){RegisterStdFont (TimesRomanName ,_aff ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_fff ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_gfa ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_gca ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _cag *RuneCharSafeMap ;func (_dee *ttfParser )ReadUShort ()(_ebe uint16 ){_d .Read (_dee ._ggac ,_d .BigEndian ,&_ebe );return _ebe ;};var _def =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_bbf *TtfType )NewEncoder ()_fa .TextEncoder {return _fa .NewTrueTypeFontEncoder (_bbf .Chars )};func (_fcg *RuneCharSafeMap )Range (f func (_gb rune ,_fag CharMetrics )(_af bool )){_fcg ._ea .RLock ();defer _fcg ._ea .RUnlock ();for _gaa ,_fb :=range _fcg ._be {if f (_gaa ,_fb ){break ;
};};};var _eag =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func _ggdd ()StdFont {_cg :=_fa .NewSymbolEncoder ();_eaf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_eaf ,_ff ,_cg );};var _bcf *RuneCharSafeMap ;func (_fcaa *ttfParser )ReadStr (length int )(string ,error ){_fdeg :=make ([]byte ,length );_bebb ,_dfea :=_fcaa ._ggac .Read (_fdeg );if _dfea !=nil {return "",_dfea ;}else if _bebb !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_fdeg ),nil ;};func (_ggg *ttfParser )parseCmapSubtable31 (_aeg int64 )error {_gagc :=make ([]rune ,0,8);_eddd :=make ([]rune ,0,8);_bacf :=make ([]int16 ,0,8);_cdff :=make ([]uint16 ,0,8);_ggg ._afe .Chars =make (map[rune ]GID );_ggg ._ggac .Seek (int64 (_ggg ._ef ["\u0063\u006d\u0061\u0070"])+_aeg ,_g .SeekStart );
_eagc :=_ggg .ReadUShort ();if _eagc !=4{return _dc .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_eagc ,_dce .ErrNotSupported );
};_ggg .Skip (2*2);_fcc :=int (_ggg .ReadUShort ()/2);_ggg .Skip (3*2);for _aac :=0;_aac < _fcc ;_aac ++{_eddd =append (_eddd ,rune (_ggg .ReadUShort ()));};_ggg .Skip (2);for _cecd :=0;_cecd < _fcc ;_cecd ++{_gagc =append (_gagc ,rune (_ggg .ReadUShort ()));
};for _bef :=0;_bef < _fcc ;_bef ++{_bacf =append (_bacf ,_ggg .ReadShort ());};_gcg ,_ :=_ggg ._ggac .Seek (int64 (0),_g .SeekCurrent );for _bfe :=0;_bfe < _fcc ;_bfe ++{_cdff =append (_cdff ,_ggg .ReadUShort ());};for _gdea :=0;_gdea < _fcc ;_gdea ++{_daed :=_gagc [_gdea ];
_gdfcb :=_eddd [_gdea ];_cffd :=_bacf [_gdea ];_fdge :=_cdff [_gdea ];if _fdge > 0{_ggg ._ggac .Seek (_gcg +2*int64 (_gdea )+int64 (_fdge ),_g .SeekStart );};for _acee :=_daed ;_acee <=_gdfcb ;_acee ++{if _acee ==0xFFFF{break ;};var _fca int32 ;if _fdge > 0{_fca =int32 (_ggg .ReadUShort ());
if _fca > 0{_fca +=int32 (_cffd );};}else {_fca =_acee +int32 (_cffd );};if _fca >=65536{_fca -=65536;};if _fca > 0{_ggg ._afe .Chars [_acee ]=GID (_fca );};};};return nil ;};func (_aaaf *ttfParser )ParseCmap ()error {var _faged int64 ;if _ceca :=_aaaf .Seek ("\u0063\u006d\u0061\u0070");
_ceca !=nil {return _ceca ;};_cf .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_aaaf .ReadUShort ();_aeeg :=int (_aaaf .ReadUShort ());_fcfg :=int64 (0);_bea :=int64 (0);_cca :=int64 (0);for _cfca :=0;_cfca < _aeeg ;_cfca ++{_adbf :=_aaaf .ReadUShort ();
_ffc :=_aaaf .ReadUShort ();_faged =int64 (_aaaf .ReadULong ());if _adbf ==3&&_ffc ==1{_bea =_faged ;}else if _adbf ==3&&_ffc ==10{_cca =_faged ;}else if _adbf ==1&&_ffc ==0{_fcfg =_faged ;};};if _fcfg !=0{if _egad :=_aaaf .parseCmapVersion (_fcfg );_egad !=nil {return _egad ;
};};if _bea !=0{if _egde :=_aaaf .parseCmapSubtable31 (_bea );_egde !=nil {return _egde ;};};if _cca !=0{if _fdgb :=_aaaf .parseCmapVersion (_cca );_fdgb !=nil {return _fdgb ;};};if _bea ==0&&_fcfg ==0&&_cca ==0{_cf .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _fdd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _gcbc ()StdFont {_ecd .Do (_cc );_gdee :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gdee ,_cdg );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_fa .NewStandardEncoder ());};func TtfParse (r _g .ReadSeeker )(TtfType ,error ){_db :=&ttfParser {_ggac :r };
return _db .Parse ()};func (_cdffb *ttfParser )parseCmapFormat12 ()error {_abf :=_cdffb .ReadULong ();_cf .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_cdffb ._afe .String (),_abf );
for _bcd :=uint32 (0);_bcd < _abf ;_bcd ++{_cfge :=_cdffb .ReadULong ();_daeg :=_cdffb .ReadULong ();_fecc :=_cdffb .ReadULong ();if _cfge > 0x0010FFFF||(0xD800<=_cfge &&_cfge <=0xDFFF){return _b .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _daeg < _cfge ||_daeg > 0x0010FFFF||(0xD800<=_daeg &&_daeg <=0xDFFF){return _b .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _bfd :=_cfge ;_bfd <=_daeg ;
_bfd ++{if _bfd > 0x10FFFF{_cf .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_cdffb ._afe .Chars [rune (_bfd )]=GID (_fecc );_fecc ++;};};return nil ;};func (_dcf StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eb ,_de :=_dcf ._eeg .Read (r );return _eb ,_de ;};func (_abac *ttfParser )parseCmapFormat0 ()error {_bfab ,_afc :=_abac .ReadStr (256);
if _afc !=nil {return _afc ;};_eegc :=[]byte (_bfab );_cf .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_abac ._afe .String (),_bfab ,_eegc );
for _dgf ,_cfg :=range _eegc {_abac ._afe .Chars [rune (_dgf )]=GID (_cfg );};return nil ;};func _bfa ()StdFont {_gec :=_fa .NewZapfDingbatsEncoder ();_beb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_beb ,_gag ,_gec );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_fbg *ttfParser )ParseName ()error {if _feee :=_fbg .Seek ("\u006e\u0061\u006d\u0065");_feee !=nil {return _feee ;
};_efb ,_ :=_fbg ._ggac .Seek (0,_g .SeekCurrent );_fbg ._afe .PostScriptName ="";_fbg .Skip (2);_aaag :=_fbg .ReadUShort ();_fde :=_fbg .ReadUShort ();for _cef :=uint16 (0);_cef < _aaag &&_fbg ._afe .PostScriptName =="";_cef ++{_fbg .Skip (3*2);_egb :=_fbg .ReadUShort ();
_cdc :=_fbg .ReadUShort ();_eed :=_fbg .ReadUShort ();if _egb ==6{_fbg ._ggac .Seek (_efb +int64 (_fde )+int64 (_eed ),_g .SeekStart );_efe ,_gdfcc :=_fbg .ReadStr (int (_cdc ));if _gdfcc !=nil {return _gdfcc ;};_efe =_cd .Replace (_efe ,"\u0000","",-1);
_bgda ,_gdfcc :=_f .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _gdfcc !=nil {return _gdfcc ;};_fbg ._afe .PostScriptName =_bgda .ReplaceAllString (_efe ,"");};};if _fbg ._afe .PostScriptName ==""{_cf .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _gcc (_egd map[string ]uint32 )string {var _ceb []string ;for _abg :=range _egd {_ceb =append (_ceb ,_abg );};_a .Slice (_ceb ,func (_gfb ,_gef int )bool {return _egd [_ceb [_gfb ]]< _egd [_ceb [_gef ]]});_aeeb :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_egd ))};
for _ ,_dae :=range _ceb {_aeeb =append (_aeeb ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dae ,_egd [_dae ]));};return _cd .Join (_aeeb ,"\u000a");};func (_aag *ttfParser )ParseMaxp ()error {if _faf :=_aag .Seek ("\u006d\u0061\u0078\u0070");
_faf !=nil {return _faf ;};_aag .Skip (4);_aag ._ace =_aag .ReadUShort ();return nil ;};func IsStdFont (name StdFontName )bool {_ ,_fe :=_ee .read (name );return _fe };func _cb ()StdFont {_ecd .Do (_cc );_bg :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bg ,_bgd );};var _ee =&fontMap {_ec :make (map[StdFontName ]func ()StdFont )};var _cdg *RuneCharSafeMap ;func (_ccd *ttfParser )ParseHead ()error {if _fee :=_ccd .Seek ("\u0068\u0065\u0061\u0064");_fee !=nil {return _fee ;};_ccd .Skip (3*4);
_ffb :=_ccd .ReadULong ();if _ffb !=0x5F0F3CF5{_cf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ccd );
};_ccd .Skip (2);_ccd ._afe .UnitsPerEm =_ccd .ReadUShort ();_ccd .Skip (2*8);_ccd ._afe .Xmin =_ccd .ReadShort ();_ccd ._afe .Ymin =_ccd .ReadShort ();_ccd ._afe .Xmax =_ccd .ReadShort ();_ccd ._afe .Ymax =_ccd .ReadShort ();return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_dfd :=_ee .read (name );
_dfd {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_ee .write (name ,fnc );for _ ,_bb :=range aliases {RegisterStdFont (_bb ,fnc );};};func (_gac *ttfParser )ParseComponents ()error {if _ega :=_gac .ParseHead ();
_ega !=nil {return _ega ;};if _cfb :=_gac .ParseHhea ();_cfb !=nil {return _cfb ;};if _bcfc :=_gac .ParseMaxp ();_bcfc !=nil {return _bcfc ;};if _aba :=_gac .ParseHmtx ();_aba !=nil {return _aba ;};if _ ,_egf :=_gac ._ef ["\u006e\u0061\u006d\u0065"];_egf {if _gad :=_gac .ParseName ();
_gad !=nil {return _gad ;};};if _ ,_geb :=_gac ._ef ["\u004f\u0053\u002f\u0032"];_geb {if _bce :=_gac .ParseOS2 ();_bce !=nil {return _bce ;};};if _ ,_bbe :=_gac ._ef ["\u0070\u006f\u0073\u0074"];_bbe {if _bbfc :=_gac .ParsePost ();_bbfc !=nil {return _bbfc ;
};};if _ ,_aaeb :=_gac ._ef ["\u0063\u006d\u0061\u0070"];_aaeb {if _dceb :=_gac .ParseCmap ();_dceb !=nil {return _dceb ;};};return nil ;};func _aff ()StdFont {_cab .Do (_bac );_fbfd :=Descriptor {Name :TimesRomanName ,Family :_fbab ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_fbfd ,_fed );};func _gde ()StdFont {_ecd .Do (_cc );_aeb :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_aeb ,_bed );};const (_fbab ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_defd *ttfParser )ParseHhea ()error {if _bee :=_defd .Seek ("\u0068\u0068\u0065\u0061");
_bee !=nil {return _bee ;};_defd .Skip (4+15*2);_defd ._fae =_defd .ReadUShort ();return nil ;};type ttfParser struct{_afe TtfType ;_ggac _g .ReadSeeker ;_ef map[string ]uint32 ;_fae uint16 ;_ace uint16 ;};func (_acbc *ttfParser )ReadShort ()(_abcg int16 ){_d .Read (_acbc ._ggac ,_d .BigEndian ,&_abcg );
return _abcg ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _fa .TextEncoder )StdFont {var _fcd rune =0xA0;if _ ,_gg :=metrics .Read (_fcd );!_gg {_gcb ,_ :=metrics .Read (0x20);metrics .Write (_fcd ,_gcb );};return StdFont {_cfc :desc ,_eeg :metrics ,_acb :encoder };
};func _gfa ()StdFont {_cab .Do (_bac );_ab :=Descriptor {Name :TimesItalicName ,Family :_fbab ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ab ,_gee );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _da *RuneCharSafeMap ;func (_gffc *ttfParser )ReadULong ()(_gdedc uint32 ){_d .Read (_gffc ._ggac ,_d .BigEndian ,&_gdedc );
return _gdedc ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func (_ebb *ttfParser )Read32Fixed ()float64 {_aad :=float64 (_ebb .ReadShort ());_afa :=float64 (_ebb .ReadUShort ())/65536.0;
return _aad +_afa ;};func (_ggd StdFont )Name ()string {return string (_ggd ._cfc .Name )};func _bbb ()StdFont {_fbd .Do (_cae );_cee :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cee ,_fgc );};func (_cba *ttfParser )parseCmapFormat6 ()error {_gcab :=int (_cba .ReadUShort ());_gecg :=int (_cba .ReadUShort ());_cf .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_cba ._afe .String (),_gcab ,_gecg );
for _bdaf :=0;_bdaf < _gecg ;_bdaf ++{_cgd :=GID (_cba .ReadUShort ());_cba ._afe .Chars [rune (_bdaf +_gcab )]=_cgd ;};return nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_be :make (map[rune ]CharMetrics ,length )};
};func (_cec StdFont )Encoder ()_fa .TextEncoder {return _cec ._acb };func (_ffa *ttfParser )ParseHmtx ()error {if _edd :=_ffa .Seek ("\u0068\u006d\u0074\u0078");_edd !=nil {return _edd ;};_ffa ._afe .Widths =make ([]uint16 ,0,8);for _fgfg :=uint16 (0);
_fgfg < _ffa ._fae ;_fgfg ++{_ffa ._afe .Widths =append (_ffa ._afe .Widths ,_ffa .ReadUShort ());_ffa .Skip (2);};if _ffa ._fae < _ffa ._ace &&_ffa ._fae > 0{_dcgc :=_ffa ._afe .Widths [_ffa ._fae -1];for _bgc :=_ffa ._fae ;_bgc < _ffa ._ace ;_bgc ++{_ffa ._afe .Widths =append (_ffa ._afe .Widths ,_dcgc );
};};return nil ;};type GlyphName =_fa .GlyphName ;type RuneCharSafeMap struct{_be map[rune ]CharMetrics ;_ea _fd .RWMutex ;};type GID =_fa .GID ;