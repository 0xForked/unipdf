//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_a "bytes";_ee "encoding/binary";_bc "errors";_f "fmt";_c "github.com/unidoc/unipdf/v3/common";_ffd "github.com/unidoc/unipdf/v3/core";_ge "github.com/unidoc/unipdf/v3/internal/cmap";_ff "github.com/unidoc/unipdf/v3/internal/textencoding";
_bd "golang.org/x/xerrors";_ddd "io";_e "os";_b "regexp";_dd "sort";_d "strings";_dc "sync";);func (_cdff *ttfParser )Skip (n int ){_cdff ._adb .Seek (int64 (n ),_ddd .SeekCurrent )};func _cb ()StdFont {_bce .Do (_ddc );_dca :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dca ,_ac );};type fontMap struct{_dc .Mutex ;_cc map[StdFontName ]func ()StdFont ;};func (_fdg *ttfParser )ReadStr (length int )(string ,error ){_fae :=make ([]byte ,length );_fcc ,_dgac :=_fdg ._adb .Read (_fae );if _dgac !=nil {return "",_dgac ;
}else if _fcc !=length {return "",_f .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_fae ),nil ;};func TtfParse (r _ddd .ReadSeeker )(TtfType ,error ){_dfg :=&ttfParser {_adb :r };
return _dfg .Parse ()};func (_bad *ttfParser )ParseOS2 ()error {if _ecg :=_bad .Seek ("\u004f\u0053\u002f\u0032");_ecg !=nil {return _ecg ;};_bfdc :=_bad .ReadUShort ();_bad .Skip (4*2);_bad .Skip (11*2+10+4*4+4);_agefe :=_bad .ReadUShort ();_bad ._egb .Bold =(_agefe &32)!=0;
_bad .Skip (2*2);_bad ._egb .TypoAscender =_bad .ReadShort ();_bad ._egb .TypoDescender =_bad .ReadShort ();if _bfdc >=2{_bad .Skip (3*2+2*4+2);_bad ._egb .CapHeight =_bad .ReadShort ();}else {_bad ._egb .CapHeight =0;};return nil ;};func _dgb (){_gcg =MakeRuneCharSafeMap (len (_gec ));
_fdb =MakeRuneCharSafeMap (len (_gec ));for _aaa ,_ccd :=range _gec {_gcg .Write (_ccd ,CharMetrics {Wx :float64 (_eff [_aaa ])});_fdb .Write (_ccd ,CharMetrics {Wx :float64 (_gdb [_aaa ])});};_fe =_gcg .Copy ();_gba =_fdb .Copy ();};func (_dfec *ttfParser )ParseComponents ()error {if _bgc :=_dfec .ParseHead ();
_bgc !=nil {return _bgc ;};if _bbbf :=_dfec .ParseHhea ();_bbbf !=nil {return _bbbf ;};if _fbcd :=_dfec .ParseMaxp ();_fbcd !=nil {return _fbcd ;};if _dad :=_dfec .ParseHmtx ();_dad !=nil {return _dad ;};if _ ,_dfa :=_dfec ._cce ["\u006e\u0061\u006d\u0065"];
_dfa {if _fcf :=_dfec .ParseName ();_fcf !=nil {return _fcf ;};};if _ ,_dfgd :=_dfec ._cce ["\u004f\u0053\u002f\u0032"];_dfgd {if _dfad :=_dfec .ParseOS2 ();_dfad !=nil {return _dfad ;};};if _ ,_gbe :=_dfec ._cce ["\u0070\u006f\u0073\u0074"];_gbe {if _gfa :=_dfec .ParsePost ();
_gfa !=nil {return _gfa ;};};if _ ,_afaa :=_dfec ._cce ["\u0063\u006d\u0061\u0070"];_afaa {if _edba :=_dfec .ParseCmap ();_edba !=nil {return _edba ;};};return nil ;};func (_cgc *RuneCharSafeMap )Length ()int {_cgc ._ce .RLock ();defer _cgc ._ce .RUnlock ();
return len (_cgc ._ga );};var _fcag *RuneCharSafeMap ;const (_gg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););var _bbd *RuneCharSafeMap ;
func (_ec StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_egc ,_aeb :=_ec ._cgcg .Read (r );return _egc ,_aeb ;};var _cbca *RuneCharSafeMap ;func IsStdFont (name StdFontName )bool {_ ,_gda :=_fc .read (name );return _gda };func (_cfe *ttfParser )ParseCmap ()error {var _bcc int64 ;
if _gdf :=_cfe .Seek ("\u0063\u006d\u0061\u0070");_gdf !=nil {return _gdf ;};_c .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_cfe .ReadUShort ();_gcgc :=int (_cfe .ReadUShort ());_gdag :=int64 (0);_ded :=int64 (0);_dga :=int64 (0);for _ecdg :=0;
_ecdg < _gcgc ;_ecdg ++{_cae :=_cfe .ReadUShort ();_bdb :=_cfe .ReadUShort ();_bcc =int64 (_cfe .ReadULong ());if _cae ==3&&_bdb ==1{_ded =_bcc ;}else if _cae ==3&&_bdb ==10{_dga =_bcc ;}else if _cae ==1&&_bdb ==0{_gdag =_bcc ;};};if _gdag !=0{if _defb :=_cfe .parseCmapVersion (_gdag );
_defb !=nil {return _defb ;};};if _ded !=0{if _fag :=_cfe .parseCmapSubtable31 (_ded );_fag !=nil {return _fag ;};};if _dga !=0{if _agef :=_cfe .parseCmapVersion (_dga );_agef !=nil {return _agef ;};};if _ded ==0&&_gdag ==0&&_dga ==0{_c .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _eff =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _fbg *RuneCharSafeMap ;var _gdb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_gfec *ttfParser )parseCmapFormat0 ()error {_faf ,_abg :=_gfec .ReadStr (256);if _abg !=nil {return _abg ;};_eafb :=[]byte (_faf );_c .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_gfec ._egb .String (),_faf ,_eafb );
for _gfae ,_gga :=range _eafb {_gfec ._egb .Chars [rune (_gfae )]=GID (_gga );};return nil ;};var _gbaf =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ff .TextEncoder )StdFont {var _da rune =0xA0;if _ ,_gad :=metrics .Read (_da );!_gad {_daa ,_ :=metrics .Read (0x20);metrics .Write (_da ,_daa );};return StdFont {_bcbb :desc ,_cgcg :metrics ,_fb :encoder };
};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _gec =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func _de ()StdFont {_bce .Do (_ddc );_dbdd :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dbdd ,_fac );};func _gca ()StdFont {_eaa :=_ff .NewZapfDingbatsEncoder ();_caf :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_caf ,_cbe ,_eaa );};func _cbc ()StdFont {_bfb :=_ff .NewSymbolEncoder ();_bfg :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_bfg ,_afd ,_bfb );};var _cbe =&RuneCharSafeMap {_ga :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_edc *ttfParser )parseCmapSubtable31 (_ebe int64 )error {_accc :=make ([]rune ,0,8);_gcb :=make ([]rune ,0,8);_fbf :=make ([]int16 ,0,8);_ege :=make ([]uint16 ,0,8);_edc ._egb .Chars =make (map[rune ]GID );_edc ._adb .Seek (int64 (_edc ._cce ["\u0063\u006d\u0061\u0070"])+_ebe ,_ddd .SeekStart );
_eee :=_edc .ReadUShort ();if _eee !=4{return _bd .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_eee ,_ffd .ErrNotSupported );
};_edc .Skip (2*2);_cdfg :=int (_edc .ReadUShort ()/2);_edc .Skip (3*2);for _gead :=0;_gead < _cdfg ;_gead ++{_gcb =append (_gcb ,rune (_edc .ReadUShort ()));};_edc .Skip (2);for _efg :=0;_efg < _cdfg ;_efg ++{_accc =append (_accc ,rune (_edc .ReadUShort ()));
};for _aga :=0;_aga < _cdfg ;_aga ++{_fbf =append (_fbf ,_edc .ReadShort ());};_gfg ,_ :=_edc ._adb .Seek (int64 (0),_ddd .SeekCurrent );for _acd :=0;_acd < _cdfg ;_acd ++{_ege =append (_ege ,_edc .ReadUShort ());};for _dcd :=0;_dcd < _cdfg ;_dcd ++{_dea :=_accc [_dcd ];
_def :=_gcb [_dcd ];_aba :=_fbf [_dcd ];_cebe :=_ege [_dcd ];if _cebe > 0{_edc ._adb .Seek (_gfg +2*int64 (_dcd )+int64 (_cebe ),_ddd .SeekStart );};for _age :=_dea ;_age <=_def ;_age ++{if _age ==0xFFFF{break ;};var _edbg int32 ;if _cebe > 0{_edbg =int32 (_edc .ReadUShort ());
if _edbg > 0{_edbg +=int32 (_aba );};}else {_edbg =_age +int32 (_aba );};if _edbg >=65536{_edbg -=65536;};if _edbg > 0{_edc ._egb .Chars [_age ]=GID (_edbg );};};};return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_bcb ,_ebg :=_fc .read (name );
if !_ebg {return StdFont {},false ;};return _bcb (),true ;};var _dac =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
type CharMetrics struct{Wx float64 ;Wy float64 ;};func init (){RegisterStdFont (CourierName ,_cb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_gb ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_cd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_de ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};var _dcg *RuneCharSafeMap ;type ttfParser struct{_egb TtfType ;_adb _ddd .ReadSeeker ;_cce map[string ]uint32 ;
_eec uint16 ;_eea uint16 ;};func _gb ()StdFont {_bce .Do (_ddc );_ba :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ba ,_bbd );};func (_fcbd *ttfParser )parseCmapFormat6 ()error {_bbcd :=int (_fcbd .ReadUShort ());_agb :=int (_fcbd .ReadUShort ());_c .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_fcbd ._egb .String (),_bbcd ,_agb );
for _dgfg :=0;_dgfg < _agb ;_dgfg ++{_aed :=GID (_fcbd .ReadUShort ());_fcbd ._egb .Chars [rune (_dgfg +_bbcd )]=_aed ;};return nil ;};func (_dg *RuneCharSafeMap )Range (f func (_cg rune ,_db CharMetrics )(_ae bool )){_dg ._ce .RLock ();defer _dg ._ce .RUnlock ();
for _fa ,_gac :=range _dg ._ga {if f (_fa ,_gac ){break ;};};};func (_cfg *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ed :=MakeRuneCharSafeMap (_cfg .Length ());_cfg .Range (func (_af rune ,_ea CharMetrics )(_gd bool ){_ed ._ga [_af ]=_ea ;return false });
return _ed ;};var _fe *RuneCharSafeMap ;func (_ecbd *ttfParser )ParseHmtx ()error {if _facd :=_ecbd .Seek ("\u0068\u006d\u0074\u0078");_facd !=nil {return _facd ;};_ecbd ._egb .Widths =make ([]uint16 ,0,8);for _dff :=uint16 (0);_dff < _ecbd ._eec ;_dff ++{_ecbd ._egb .Widths =append (_ecbd ._egb .Widths ,_ecbd .ReadUShort ());
_ecbd .Skip (2);};if _ecbd ._eec < _ecbd ._eea &&_ecbd ._eec > 0{_fec :=_ecbd ._egb .Widths [_ecbd ._eec -1];for _abf :=_ecbd ._eec ;_abf < _ecbd ._eea ;_abf ++{_ecbd ._egb .Widths =append (_ecbd ._egb .Widths ,_fec );};};return nil ;};var _eab =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_ab StdFont )Descriptor ()Descriptor {return _ab ._bcbb };const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func init (){RegisterStdFont (HelveticaName ,_facb ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_dcac ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_bae ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_gfc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _gcg *RuneCharSafeMap ;var _fdb *RuneCharSafeMap ;func _cd ()StdFont {_bce .Do (_ddc );_cbd :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cbd ,_dcg );};func (_cfd *ttfParser )ParseMaxp ()error {if _cbcad :=_cfd .Seek ("\u006d\u0061\u0078\u0070");_cbcad !=nil {return _cbcad ;};_cfd .Skip (4);_cfd ._eea =_cfd .ReadUShort ();return nil ;};func (_bbea *ttfParser )ReadUShort ()(_cgcgf uint16 ){_ee .Read (_bbea ._adb ,_ee .BigEndian ,&_cgcgf );
return _cgcgf ;};var _ Font =StdFont {};func (_efbb *ttfParser )ReadSByte ()(_dfeg int8 ){_ee .Read (_efbb ._adb ,_ee .BigEndian ,&_dfeg );return _dfeg ;};var _dbddg _dc .Once ;func _facb ()StdFont {_dbddg .Do (_dgb );_dae :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dae ,_gcg );};func (_ccb *ttfParser )Read32Fixed ()float64 {_ceba :=float64 (_ccb .ReadShort ());_dagg :=float64 (_ccb .ReadUShort ())/65536.0;return _ceba +_dagg ;};func (_ef *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ef ._ce .RLock ();
defer _ef ._ce .RUnlock ();_bb ,_bbc :=_ef ._ga [b ];return _bb ,_bbc ;};var _agc *RuneCharSafeMap ;const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);func init (){RegisterStdFont (SymbolName ,_cbc ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_gca );};func _bae ()StdFont {_dbddg .Do (_dgb );_efeg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_efeg ,_fe );};type GlyphName =_ff .GlyphName ;var _bce _dc .Once ;func (_eaac *ttfParser )parseCmapSubtable10 (_ffdb int64 )error {if _eaac ._egb .Chars ==nil {_eaac ._egb .Chars =make (map[rune ]GID );};_eaac ._adb .Seek (int64 (_eaac ._cce ["\u0063\u006d\u0061\u0070"])+_ffdb ,_ddd .SeekStart );
var _edbd ,_be uint32 ;_deb :=_eaac .ReadUShort ();if _deb < 8{_edbd =uint32 (_eaac .ReadUShort ());_be =uint32 (_eaac .ReadUShort ());}else {_eaac .ReadUShort ();_edbd =_eaac .ReadULong ();_be =_eaac .ReadULong ();};_c .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_deb ,_edbd ,_be );
if _deb !=0{return _bc .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dfgg ,_cdb :=_eaac .ReadStr (256);
if _cdb !=nil {return _cdb ;};_gbaa :=[]byte (_dfgg );for _fbe ,_gae :=range _gbaa {_eaac ._egb .Chars [rune (_fbe )]=GID (_gae );if _gae !=0{_f .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fbe ,_gae ,rune (_gae ));
};};return nil ;};func (_afg *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_afg ._ce .Lock ();defer _afg ._ce .Unlock ();_afg ._ga [b ]=r ;};func init (){RegisterStdFont (TimesRomanName ,_cda ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_cad ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_fca ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_ag ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _gbg _dc .Once ;func _cda ()StdFont {_gbg .Do (_afa );_gaca :=Descriptor {Name :TimesRomanName ,Family :_gg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_gaca ,_fcag );};func (_gdgb *ttfParser )parseCmapVersion (_fcae int64 )error {_c .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_fcae );
if _gdgb ._egb .Chars ==nil {_gdgb ._egb .Chars =make (map[rune ]GID );};_gdgb ._adb .Seek (int64 (_gdgb ._cce ["\u0063\u006d\u0061\u0070"])+_fcae ,_ddd .SeekStart );var _ebgf ,_gece uint32 ;_dbdg :=_gdgb .ReadUShort ();if _dbdg < 8{_ebgf =uint32 (_gdgb .ReadUShort ());
_gece =uint32 (_gdgb .ReadUShort ());}else {_gdgb .ReadUShort ();_ebgf =_gdgb .ReadULong ();_gece =_gdgb .ReadULong ();};_c .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_dbdg ,_ebgf ,_gece );
switch _dbdg {case 0:return _gdgb .parseCmapFormat0 ();case 6:return _gdgb .parseCmapFormat6 ();case 12:return _gdgb .parseCmapFormat12 ();default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_dbdg );
return nil ;};};func _dcac ()StdFont {_dbddg .Do (_dgb );_gdg :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gdg ,_fdb );};func _ag ()StdFont {_gbg .Do (_afa );_ecf :=Descriptor {Name :TimesBoldItalicName ,Family :_gg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_ecf ,_agc );};func (_fcd *ttfParser )ReadShort ()(_bed int16 ){_ee .Read (_fcd ._adb ,_ee .BigEndian ,&_bed );return _bed ;};func (_gfed *TtfType )String ()string {return _f .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_gfed .PostScriptName ,_gfed .UnitsPerEm ,_gfed .Bold ,_gfed .ItalicAngle ,_gfed .CapHeight ,len (_gfed .Chars ),len (_gfed .GlyphNames ));
};func (_ccde *ttfParser )Parse ()(TtfType ,error ){_edb ,_add :=_ccde .ReadStr (4);if _add !=nil {return TtfType {},_add ;};if _edb =="\u004f\u0054\u0054\u004f"{return TtfType {},_bd .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ffd .ErrNotSupported );
};if _edb !="\u0000\u0001\u0000\u0000"&&_edb !="\u0074\u0072\u0075\u0065"{_c .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_edb );
};_bff :=int (_ccde .ReadUShort ());_ccde .Skip (3*2);_ccde ._cce =make (map[string ]uint32 );var _adc string ;for _cac :=0;_cac < _bff ;_cac ++{_adc ,_add =_ccde .ReadStr (4);if _add !=nil {return TtfType {},_add ;};_ccde .Skip (4);_aaf :=_ccde .ReadULong ();
_ccde .Skip (4);_ccde ._cce [_adc ]=_aaf ;};_c .Log .Trace (_ecb (_ccde ._cce ));if _add =_ccde .ParseComponents ();_add !=nil {return TtfType {},_add ;};return _ccde ._egb ,nil ;};var _fc =&fontMap {_cc :make (map[StdFontName ]func ()StdFont )};func (_aa *fontMap )read (_eb StdFontName )(func ()StdFont ,bool ){_aa .Lock ();
defer _aa .Unlock ();_ceg ,_eg :=_aa ._cc [_eb ];return _ceg ,_eg ;};func (_cdba *ttfParser )parseCmapFormat12 ()error {_bfc :=_cdba .ReadULong ();_c .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_cdba ._egb .String (),_bfc );
for _cfee :=uint32 (0);_cfee < _bfc ;_cfee ++{_bbe :=_cdba .ReadULong ();_agefc :=_cdba .ReadULong ();_bca :=_cdba .ReadULong ();if _bbe > 0x0010FFFF||(0xD800<=_bbe &&_bbe <=0xDFFF){return _bc .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _agefc < _bbe ||_agefc > 0x0010FFFF||(0xD800<=_agefc &&_agefc <=0xDFFF){return _bc .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _gacg :=_bbe ;
_gacg <=_agefc ;_gacg ++{if _gacg > 0x10FFFF{_c .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_cdba ._egb .Chars [rune (_gacg )]=GID (_bca );_bca ++;};};return nil ;};func (_ggc *ttfParser )ParsePost ()error {if _ecgb :=_ggc .Seek ("\u0070\u006f\u0073\u0074");_ecgb !=nil {return _ecgb ;};_acda :=_ggc .Read32Fixed ();_ggc ._egb .ItalicAngle =_ggc .Read32Fixed ();
_ggc ._egb .UnderlinePosition =_ggc .ReadShort ();_ggc ._egb .UnderlineThickness =_ggc .ReadShort ();_ggc ._egb .IsFixedPitch =_ggc .ReadULong ()!=0;_ggc .ReadULong ();_ggc .ReadULong ();_ggc .ReadULong ();_ggc .ReadULong ();_c .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_acda );
switch _acda {case 1.0:_ggc ._egb .GlyphNames =_gadb ;case 2.0:_bea :=int (_ggc .ReadUShort ());_edec :=make ([]int ,_bea );_ggc ._egb .GlyphNames =make ([]GlyphName ,_bea );_gff :=-1;for _fed :=0;_fed < _bea ;_fed ++{_agefg :=int (_ggc .ReadUShort ());
_edec [_fed ]=_agefg ;if _agefg <=0x7fff&&_agefg > _gff {_gff =_agefg ;};};var _acb []GlyphName ;if _gff >=len (_gadb ){_acb =make ([]GlyphName ,_gff -len (_gadb )+1);for _gffa :=0;_gffa < _gff -len (_gadb )+1;_gffa ++{_dag :=int (_ggc .readByte ());_baeg ,_dgab :=_ggc .ReadStr (_dag );
if _dgab !=nil {return _dgab ;};_acb [_gffa ]=GlyphName (_baeg );};};for _cgb :=0;_cgb < _bea ;_cgb ++{_cfeb :=_edec [_cgb ];if _cfeb < len (_gadb ){_ggc ._egb .GlyphNames [_cgb ]=_gadb [_cfeb ];}else if _cfeb >=len (_gadb )&&_cfeb <=32767{_ggc ._egb .GlyphNames [_cgb ]=_acb [_cfeb -len (_gadb )];
}else {_ggc ._egb .GlyphNames [_cgb ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_aacaf :=make ([]int ,_ggc ._eea );for _afc :=0;_afc < len (_aacaf );_afc ++{_fbb :=int (_ggc .ReadSByte ());_aacaf [_afc ]=_afc +1+_fbb ;
};_ggc ._egb .GlyphNames =make ([]GlyphName ,len (_aacaf ));for _ffb :=0;_ffb < len (_ggc ._egb .GlyphNames );_ffb ++{_fbaf :=_gadb [_aacaf [_ffb ]];_ggc ._egb .GlyphNames [_ffb ]=_fbaf ;};case 3.0:_c .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_c .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_acda );};return nil ;};func (_bdg CharMetrics )String ()string {return _f .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_bdg .Wx ,_bdg .Wy );
};func NewFontFile2FromPdfObject (obj _ffd .PdfObject )(TtfType ,error ){obj =_ffd .TraceToDirectObject (obj );_bgf ,_ddg :=obj .(*_ffd .PdfObjectStream );if !_ddg {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_ffd .ErrTypeError ;};_bfgg ,_bgd :=_ffd .DecodeStream (_bgf );if _bgd !=nil {return TtfType {},_bgd ;};_efb :=ttfParser {_adb :_a .NewReader (_bfgg )};return _efb .Parse ();};func (_bbf *fontMap )write (_aef StdFontName ,_bg func ()StdFont ){_bbf .Lock ();
defer _bbf .Unlock ();_bbf ._cc [_aef ]=_bg ;};func TtfParseFile (fileStr string )(TtfType ,error ){_fba ,_fdf :=_e .Open (fileStr );if _fdf !=nil {return TtfType {},_fdf ;};defer _fba .Close ();return TtfParse (_fba );};type FontWeight int ;var _gadb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ac *RuneCharSafeMap ;func (_aca *ttfParser )ParseHhea ()error {if _edbe :=_aca .Seek ("\u0068\u0068\u0065\u0061");_edbe !=nil {return _edbe ;};_aca .Skip (4+15*2);_aca ._eec =_aca .ReadUShort ();return nil ;};func (_ede *TtfType )NewEncoder ()_ff .TextEncoder {return _ff .NewTrueTypeFontEncoder (_ede .Chars )};
func _ecb (_cdd map[string ]uint32 )string {var _aee []string ;for _fbc :=range _cdd {_aee =append (_aee ,_fbc );};_dd .Slice (_aee ,func (_cdag ,_cdf int )bool {return _cdd [_aee [_cdag ]]< _cdd [_aee [_cdf ]]});_gaf :=[]string {_f .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cdd ))};
for _ ,_dba :=range _aee {_gaf =append (_gaf ,_f .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dba ,_cdd [_dba ]));};return _d .Join (_gaf ,"\u000a");};func _gfc ()StdFont {_dbddg .Do (_dgb );_gcf :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_gcf ,_gba );};func (_bbb *TtfType )MakeEncoder ()(_ff .SimpleEncoder ,error ){_gaa :=make (map[_ff .CharCode ]GlyphName );for _ade :=_ff .CharCode (0);_ade <=256;_ade ++{_dfe :=rune (_ade );_fcg ,_cbg :=_bbb .Chars [_dfe ];if !_cbg {continue ;
};var _afgb GlyphName ;if int (_fcg )>=0&&int (_fcg )< len (_bbb .GlyphNames ){_afgb =_bbb .GlyphNames [_fcg ];}else {_bdga :=rune (_fcg );if _abe ,_fdd :=_ff .RuneToGlyph (_bdga );_fdd {_afgb =_abe ;};};if _afgb !=""{_gaa [_ade ]=_afgb ;};};if len (_gaa )==0{_c .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_bbb ,_bbb .Chars );
};return _ff .NewCustomSimpleTextEncoder (_gaa ,nil );};func (_cega StdFont )Name ()string {return string (_cega ._bcbb .Name )};type RuneCharSafeMap struct{_ga map[rune ]CharMetrics ;_ce _dc .RWMutex ;};func (_cea *ttfParser )ReadULong ()(_daf uint32 ){_ee .Read (_cea ._adb ,_ee .BigEndian ,&_daf );
return _daf ;};func _ddc (){const _aac =600;_ac =MakeRuneCharSafeMap (len (_gec ));for _ ,_gc :=range _gec {_ac .Write (_gc ,CharMetrics {Wx :_aac });};_bbd =_ac .Copy ();_fac =_ac .Copy ();_dcg =_ac .Copy ();};func (_fcb StdFont )ToPdfObject ()_ffd .PdfObject {_ecd :=_ffd .MakeDict ();
_ecd .Set ("\u0054\u0079\u0070\u0065",_ffd .MakeName ("\u0046\u006f\u006e\u0074"));_ecd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ffd .MakeName ("\u0054\u0079\u0070e\u0031"));_ecd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ffd .MakeName (_fcb .Name ()));
_ecd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcb ._fb .ToPdfObject ());return _ffd .MakeIndirectObject (_ecd );};var _gba *RuneCharSafeMap ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;
ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func _cad ()StdFont {_gbg .Do (_afa );_acc :=Descriptor {Name :TimesBoldName ,Family :_gg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_acc ,_fbg );};func _afa (){_fcag =MakeRuneCharSafeMap (len (_gec ));_fbg =MakeRuneCharSafeMap (len (_gec ));_agc =MakeRuneCharSafeMap (len (_gec ));_cbca =MakeRuneCharSafeMap (len (_gec ));for _dgf ,_cege :=range _gec {_fcag .Write (_cege ,CharMetrics {Wx :float64 (_dac [_dgf ])});
_fbg .Write (_cege ,CharMetrics {Wx :float64 (_eab [_dgf ])});_agc .Write (_cege ,CharMetrics {Wx :float64 (_gbaf [_dgf ])});_cbca .Write (_cege ,CharMetrics {Wx :float64 (_fbd [_dgf ])});};};func (_ca StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ca ._cgcg };
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_dcf :=_fc .read (name );
_dcf {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_fc .write (name ,fnc );for _ ,_ceb :=range aliases {RegisterStdFont (_ceb ,fnc );};};var _fac *RuneCharSafeMap ;
func (_cde *TtfType )MakeToUnicode ()*_ge .CMap {_aacg :=make (map[_ge .CharCode ]rune );if len (_cde .GlyphNames )==0{return _ge .NewToUnicodeCMap (_aacg );};for _gcc ,_fcac :=range _cde .Chars {_gea :=_ge .CharCode (_gcc );_ebc :=_cde .GlyphNames [_fcac ];
_eaf ,_ced :=_ff .GlyphToRune (_ebc );if !_ced {_c .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_gcc ,_ebc );_eaf =_ff .MissingCodeRune ;
};_aacg [_gea ]=_eaf ;};return _ge .NewToUnicodeCMap (_aacg );};func (_fbgb *ttfParser )ParseName ()error {if _afe :=_fbgb .Seek ("\u006e\u0061\u006d\u0065");_afe !=nil {return _afe ;};_ggb ,_ :=_fbgb ._adb .Seek (0,_ddd .SeekCurrent );_fbgb ._egb .PostScriptName ="";
_fbgb .Skip (2);_dgbc :=_fbgb .ReadUShort ();_cdc :=_fbgb .ReadUShort ();for _fg :=uint16 (0);_fg < _dgbc &&_fbgb ._egb .PostScriptName =="";_fg ++{_fbgb .Skip (3*2);_bge :=_fbgb .ReadUShort ();_bged :=_fbgb .ReadUShort ();_edg :=_fbgb .ReadUShort ();if _bge ==6{_fbgb ._adb .Seek (_ggb +int64 (_cdc )+int64 (_edg ),_ddd .SeekStart );
_ccg ,_ffg :=_fbgb .ReadStr (int (_bged ));if _ffg !=nil {return _ffg ;};_ccg =_d .Replace (_ccg ,"\u0000","",-1);_bbdb ,_ffg :=_b .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _ffg !=nil {return _ffg ;
};_fbgb ._egb .PostScriptName =_bbdb .ReplaceAllString (_ccg ,"");};};if _fbgb ._egb .PostScriptName ==""{_c .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _fbd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_dcda *ttfParser )Seek (tag string )error {_fcgd ,_bfe :=_dcda ._cce [tag ];if !_bfe {return _f .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_dcda ._adb .Seek (int64 (_fcgd ),_ddd .SeekStart );
return nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ga :make (map[rune ]CharMetrics ,length )};};func (_bgfa *ttfParser )ParseHead ()error {if _eeaf :=_bgfa .Seek ("\u0068\u0065\u0061\u0064");_eeaf !=nil {return _eeaf ;
};_bgfa .Skip (3*4);_gce :=_bgfa .ReadULong ();if _gce !=0x5F0F3CF5{_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_bgfa );
};_bgfa .Skip (2);_bgfa ._egb .UnitsPerEm =_bgfa .ReadUShort ();_bgfa .Skip (2*8);_bgfa ._egb .Xmin =_bgfa .ReadShort ();_bgfa ._egb .Ymin =_bgfa .ReadShort ();_bgfa ._egb .Xmax =_bgfa .ReadShort ();_bgfa ._egb .Ymax =_bgfa .ReadShort ();return nil ;};
type GID =_ff .GID ;type StdFont struct{_bcbb Descriptor ;_cgcg *RuneCharSafeMap ;_fb _ff .TextEncoder ;};type Font interface{Encoder ()_ff .TextEncoder ;GetRuneMetrics (_cf rune )(CharMetrics ,bool );};var _afd =&RuneCharSafeMap {_ga :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func _fca ()StdFont {_gbg .Do (_afa );_ad :=Descriptor {Name :TimesItalicName ,Family :_gg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ad ,_cbca );};func (_ebgc StdFont )Encoder ()_ff .TextEncoder {return _ebgc ._fb };func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ff .NewStandardEncoder ());};type TtfType struct{UnitsPerEm uint16 ;
PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;
};func (_fcbe *ttfParser )readByte ()(_dffa uint8 ){_ee .Read (_fcbe ._adb ,_ee .BigEndian ,&_dffa );return _dffa ;};type StdFontName string ;