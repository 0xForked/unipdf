//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_fd "bytes";_ff "encoding/binary";_eg "errors";_f "fmt";_fbe "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/core";_gg "github.com/unidoc/unipdf/v3/internal/cmap";_a "github.com/unidoc/unipdf/v3/internal/textencoding";
_g "golang.org/x/xerrors";_fb "io";_fa "os";_ce "regexp";_b "sort";_c "strings";_fc "sync";);func (_eeg *ttfParser )ReadShort ()(_fdb int16 ){_ff .Read (_eeg ._ddge ,_ff .BigEndian ,&_fdb );return _fdb ;};func (_gca *TtfType )MakeToUnicode ()*_gg .CMap {_ged :=make (map[_gg .CharCode ]rune );
if len (_gca .GlyphNames )==0{return _gg .NewToUnicodeCMap (_ged );};for _efc ,_dfe :=range _gca .Chars {_fea :=_gg .CharCode (_efc );_bfg :=_gca .GlyphNames [_dfe ];_bdc ,_dbc :=_a .GlyphToRune (_bfg );if !_dbc {_fbe .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_efc ,_bfg );
_bdc =_a .MissingCodeRune ;};_ged [_fea ]=_bdc ;};return _gg .NewToUnicodeCMap (_ged );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_dee ,_dgb :=_ddg .read (name );if !_dgb {return StdFont {},false ;};return _dee (),true ;};func _geb ()StdFont {_abac .Do (_age );
_cdf :=Descriptor {Name :TimesItalicName ,Family :_ceee ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};return NewStdFont (_cdf ,_ccd );
};func _cfe ()StdFont {_dff .Do (_dfd );_bag :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bag ,_gbf );};var _fbc *RuneCharSafeMap ;func (_cbg *ttfParser )ParseName ()error {if _ecg :=_cbg .Seek ("\u006e\u0061\u006d\u0065");_ecg !=nil {return _ecg ;};_gfc ,_ :=_cbg ._ddge .Seek (0,_fb .SeekCurrent );_cbg ._fae .PostScriptName ="";
_cbg .Skip (2);_abe :=_cbg .ReadUShort ();_eee :=_cbg .ReadUShort ();for _cgf :=uint16 (0);_cgf < _abe &&_cbg ._fae .PostScriptName =="";_cgf ++{_cbg .Skip (3*2);_adgdc :=_cbg .ReadUShort ();_gbcg :=_cbg .ReadUShort ();_eab :=_cbg .ReadUShort ();if _adgdc ==6{_cbg ._ddge .Seek (_gfc +int64 (_eee )+int64 (_eab ),_fb .SeekStart );
_bfcb ,_baa :=_cbg .ReadStr (int (_gbcg ));if _baa !=nil {return _baa ;};_bfcb =_c .Replace (_bfcb ,"\u0000","",-1);_eca ,_baa :=_ce .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _baa !=nil {return _baa ;
};_cbg ._fae .PostScriptName =_eca .ReplaceAllString (_bfcb ,"");};};if _cbg ._fae .PostScriptName ==""{_fbe .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _abac _fc .Once ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};func (_adc *ttfParser )parseCmapFormat0 ()error {_gdg ,_cbc :=_adc .ReadStr (256);if _cbc !=nil {return _cbc ;};_fdg :=[]byte (_gdg );_fbe .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_adc ._fae .String (),_gdg ,_fdg );
for _bce ,_cfd :=range _fdg {_adc ._fae .Chars [rune (_bce )]=GID (_cfd );};return nil ;};type GID =_a .GID ;func (_cb *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fg :=MakeRuneCharSafeMap (_cb .Length ());_cb .Range (func (_de rune ,_dg CharMetrics )(_be bool ){_fg ._ae [_de ]=_dg ;
return false });return _fg ;};func (_ddd StdFont )Encoder ()_a .TextEncoder {return _ddd ._cee };func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _a .TextEncoder )StdFont {var _dgc rune =0xA0;if _ ,_feg :=metrics .Read (_dgc );
!_feg {_cac ,_ :=metrics .Read (0x20);metrics .Write (_dgc ,_cac );};return StdFont {_cg :desc ,_gab :metrics ,_cee :encoder };};func _caf ()StdFont {_abac .Do (_age );_cceb :=Descriptor {Name :TimesBoldItalicName ,Family :_ceee ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_cceb ,_agg );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_a .NewStandardEncoder ());};func (_ba StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_da ,_aba :=_ba ._gab .Read (r );
return _da ,_aba ;};func (_ea StdFont )Name ()string {return string (_ea ._cg .Name )};var _ccf =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _dgcg =&RuneCharSafeMap {_ae :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func NewFontFile2FromPdfObject (obj _d .PdfObject )(TtfType ,error ){obj =_d .TraceToDirectObject (obj );_aca ,_cgb :=obj .(*_d .PdfObjectStream );if !_cgb {_fbe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_d .ErrTypeError ;};_bbe ,_ddf :=_d .DecodeStream (_aca );if _ddf !=nil {return TtfType {},_ddf ;};_ecf :=ttfParser {_ddge :_fd .NewReader (_bbe )};return _ecf .Parse ();};type StdFont struct{_cg Descriptor ;_gab *RuneCharSafeMap ;_cee _a .TextEncoder ;
};var _ddg =&fontMap {_cf :make (map[StdFontName ]func ()StdFont )};func (_fbcb *ttfParser )Parse ()(TtfType ,error ){_geg ,_adg :=_fbcb .ReadStr (4);if _adg !=nil {return TtfType {},_adg ;};if _geg =="\u004f\u0054\u0054\u004f"{return TtfType {},_g .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_d .ErrNotSupported );
};if _geg !="\u0000\u0001\u0000\u0000"&&_geg !="\u0074\u0072\u0075\u0065"{_fbe .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_geg );
};_bab :=int (_fbcb .ReadUShort ());_fbcb .Skip (3*2);_fbcb ._ced =make (map[string ]uint32 );var _fgbf string ;for _adga :=0;_adga < _bab ;_adga ++{_fgbf ,_adg =_fbcb .ReadStr (4);if _adg !=nil {return TtfType {},_adg ;};_fbcb .Skip (4);_dgbf :=_fbcb .ReadULong ();
_fbcb .Skip (4);_fbcb ._ced [_fgbf ]=_dgbf ;};_fbe .Log .Trace (_aec (_fbcb ._ced ));if _adg =_fbcb .ParseComponents ();_adg !=nil {return TtfType {},_adg ;};return _fbcb ._fae ,nil ;};func _age (){_dged =MakeRuneCharSafeMap (len (_cff ));_dbe =MakeRuneCharSafeMap (len (_cff ));
_agg =MakeRuneCharSafeMap (len (_cff ));_ccd =MakeRuneCharSafeMap (len (_cff ));for _fff ,_fgfa :=range _cff {_dged .Write (_fgfa ,CharMetrics {Wx :float64 (_aad [_fff ])});_dbe .Write (_fgfa ,CharMetrics {Wx :float64 (_afb [_fff ])});_agg .Write (_fgfa ,CharMetrics {Wx :float64 (_beed [_fff ])});
_ccd .Write (_fgfa ,CharMetrics {Wx :float64 (_fed [_fff ])});};};var _cga =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _gbf *RuneCharSafeMap ;var _bfd *RuneCharSafeMap ;func (_bagc *ttfParser )ReadSByte ()(_fbga int8 ){_ff .Read (_bagc ._ddge ,_ff .BigEndian ,&_fbga );return _fbga ;};func _ef ()StdFont {_gea .Do (_ded );_fbg :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_fbg ,_bfd );};func _dfd (){const _agcd =600;_fbc =MakeRuneCharSafeMap (len (_cff ));for _ ,_ed :=range _cff {_fbc .Write (_ed ,CharMetrics {Wx :_agcd });};_gb =_fbc .Copy ();_gbf =_fbc .Copy ();_cdg =_fbc .Copy ();};func init (){RegisterStdFont (CourierName ,_cc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_fef ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_dfb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_cfe ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_dd *RuneCharSafeMap )Length ()int {_dd ._eb .RLock ();defer _dd ._eb .RUnlock ();return len (_dd ._ae );
};func (_accf *ttfParser )Seek (tag string )error {_bgc ,_fda :=_accf ._ced [tag ];if !_fda {return _f .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_accf ._ddge .Seek (int64 (_bgc ),_fb .SeekStart );
return nil ;};func (_ccab *ttfParser )ParseHhea ()error {if _aef :=_ccab .Seek ("\u0068\u0068\u0065\u0061");_aef !=nil {return _aef ;};_ccab .Skip (4+15*2);_ccab ._cda =_ccab .ReadUShort ();return nil ;};func (_bdab *ttfParser )Read32Fixed ()float64 {_bbc :=float64 (_bdab .ReadShort ());
_deeg :=float64 (_bdab .ReadUShort ())/65536.0;return _bbc +_deeg ;};var _dedg *RuneCharSafeMap ;func _aec (_gcb map[string ]uint32 )string {var _aeg []string ;for _eeb :=range _gcb {_aeg =append (_aeg ,_eeb );};_b .Slice (_aeg ,func (_adf ,_bfe int )bool {return _gcb [_aeg [_adf ]]< _gcb [_aeg [_bfe ]]});
_affa :=[]string {_f .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_gcb ))};for _ ,_bad :=range _aeg {_affa =append (_affa ,_f .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_bad ,_gcb [_bad ]));
};return _c .Join (_affa ,"\u000a");};func (_bdb *ttfParser )ParseHead ()error {if _fad :=_bdb .Seek ("\u0068\u0065\u0061\u0064");_fad !=nil {return _fad ;};_bdb .Skip (3*4);_dfa :=_bdb .ReadULong ();if _dfa !=0x5F0F3CF5{_fbe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_bdb );
};_bdb .Skip (2);_bdb ._fae .UnitsPerEm =_bdb .ReadUShort ();_bdb .Skip (2*8);_bdb ._fae .Xmin =_bdb .ReadShort ();_bdb ._fae .Ymin =_bdb .ReadShort ();_bdb ._fae .Xmax =_bdb .ReadShort ();_bdb ._fae .Ymax =_bdb .ReadShort ();return nil ;};func (_gaf *ttfParser )ParseOS2 ()error {if _bcc :=_gaf .Seek ("\u004f\u0053\u002f\u0032");
_bcc !=nil {return _bcc ;};_bdba :=_gaf .ReadUShort ();_gaf .Skip (4*2);_gaf .Skip (11*2+10+4*4+4);_cgae :=_gaf .ReadUShort ();_gaf ._fae .Bold =(_cgae &32)!=0;_gaf .Skip (2*2);_gaf ._fae .TypoAscender =_gaf .ReadShort ();_gaf ._fae .TypoDescender =_gaf .ReadShort ();
if _bdba >=2{_gaf .Skip (3*2+2*4+2);_gaf ._fae .CapHeight =_gaf .ReadShort ();}else {_gaf ._fae .CapHeight =0;};return nil ;};func (_dc *ttfParser )ReadStr (length int )(string ,error ){_dab :=make ([]byte ,length );_bebb ,_fbd :=_dc ._ddge .Read (_dab );
if _fbd !=nil {return "",_fbd ;}else if _bebb !=length {return "",_f .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_dab ),nil ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ae :make (map[rune ]CharMetrics ,length )};
};var _agg *RuneCharSafeMap ;func init (){RegisterStdFont (HelveticaName ,_bc ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_aa ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_ef ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_ccg ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_ccag *ttfParser )parseCmapSubtable31 (_aaf int64 )error {_begb :=make ([]rune ,0,8);_faa :=make ([]rune ,0,8);
_cde :=make ([]int16 ,0,8);_agf :=make ([]uint16 ,0,8);_ccag ._fae .Chars =make (map[rune ]GID );_ccag ._ddge .Seek (int64 (_ccag ._ced ["\u0063\u006d\u0061\u0070"])+_aaf ,_fb .SeekStart );_gcad :=_ccag .ReadUShort ();if _gcad !=4{return _g .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_gcad ,_d .ErrNotSupported );
};_ccag .Skip (2*2);_fbf :=int (_ccag .ReadUShort ()/2);_ccag .Skip (3*2);for _fde :=0;_fde < _fbf ;_fde ++{_faa =append (_faa ,rune (_ccag .ReadUShort ()));};_ccag .Skip (2);for _fbgd :=0;_fbgd < _fbf ;_fbgd ++{_begb =append (_begb ,rune (_ccag .ReadUShort ()));
};for _cecc :=0;_cecc < _fbf ;_cecc ++{_cde =append (_cde ,_ccag .ReadShort ());};_bgd ,_ :=_ccag ._ddge .Seek (int64 (0),_fb .SeekCurrent );for _cecd :=0;_cecd < _fbf ;_cecd ++{_agf =append (_agf ,_ccag .ReadUShort ());};for _aege :=0;_aege < _fbf ;_aege ++{_bac :=_begb [_aege ];
_gdb :=_faa [_aege ];_ade :=_cde [_aege ];_fab :=_agf [_aege ];if _fab > 0{_ccag ._ddge .Seek (_bgd +2*int64 (_aege )+int64 (_fab ),_fb .SeekStart );};for _ede :=_bac ;_ede <=_gdb ;_ede ++{if _ede ==0xFFFF{break ;};var _bae int32 ;if _fab > 0{_bae =int32 (_ccag .ReadUShort ());
if _bae > 0{_bae +=int32 (_ade );};}else {_bae =_ede +int32 (_ade );};if _bae >=65536{_bae -=65536;};if _bae > 0{_ccag ._fae .Chars [_ede ]=GID (_bae );};};};return nil ;};func (_aece *ttfParser )Skip (n int ){_aece ._ddge .Seek (int64 (n ),_fb .SeekCurrent )};
type StdFontName string ;var _abc *RuneCharSafeMap ;func (_fcb *ttfParser )ParsePost ()error {if _cdgf :=_fcb .Seek ("\u0070\u006f\u0073\u0074");_cdgf !=nil {return _cdgf ;};_acc :=_fcb .Read32Fixed ();_fcb ._fae .ItalicAngle =_fcb .Read32Fixed ();_fcb ._fae .UnderlinePosition =_fcb .ReadShort ();
_fcb ._fae .UnderlineThickness =_fcb .ReadShort ();_fcb ._fae .IsFixedPitch =_fcb .ReadULong ()!=0;_fcb .ReadULong ();_fcb .ReadULong ();_fcb .ReadULong ();_fcb .ReadULong ();_fbe .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_acc );
switch _acc {case 1.0:_fcb ._fae .GlyphNames =_ccf ;case 2.0:_dfec :=int (_fcb .ReadUShort ());_ebf :=make ([]int ,_dfec );_fcb ._fae .GlyphNames =make ([]GlyphName ,_dfec );_eec :=-1;for _aea :=0;_aea < _dfec ;_aea ++{_dfad :=int (_fcb .ReadUShort ());
_ebf [_aea ]=_dfad ;if _dfad <=0x7fff&&_dfad > _eec {_eec =_dfad ;};};var _ggc []GlyphName ;if _eec >=len (_ccf ){_ggc =make ([]GlyphName ,_eec -len (_ccf )+1);for _fcce :=0;_fcce < _eec -len (_ccf )+1;_fcce ++{_bfdc :=int (_fcb .readByte ());_gec ,_gaff :=_fcb .ReadStr (_bfdc );
if _gaff !=nil {return _gaff ;};_ggc [_fcce ]=GlyphName (_gec );};};for _fbcd :=0;_fbcd < _dfec ;_fbcd ++{_agbd :=_ebf [_fbcd ];if _agbd < len (_ccf ){_fcb ._fae .GlyphNames [_fbcd ]=_ccf [_agbd ];}else if _agbd >=len (_ccf )&&_agbd <=32767{_fcb ._fae .GlyphNames [_fbcd ]=_ggc [_agbd -len (_ccf )];
}else {_fcb ._fae .GlyphNames [_fbcd ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_bbg :=make ([]int ,_fcb ._cccf );for _gbd :=0;_gbd < len (_bbg );_gbd ++{_gfed :=int (_fcb .ReadSByte ());_bbg [_gbd ]=_gbd +1+_gfed ;};
_fcb ._fae .GlyphNames =make ([]GlyphName ,len (_bbg ));for _gee :=0;_gee < len (_fcb ._fae .GlyphNames );_gee ++{_dfdd :=_ccf [_bbg [_gee ]];_fcb ._fae .GlyphNames [_gee ]=_dfdd ;};case 3.0:_fbe .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_fbe .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_acc );};return nil ;};var _afb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_fcc *ttfParser )parseCmapSubtable10 (_aede int64 )error {if _fcc ._fae .Chars ==nil {_fcc ._fae .Chars =make (map[rune ]GID );};_fcc ._ddge .Seek (int64 (_fcc ._ced ["\u0063\u006d\u0061\u0070"])+_aede ,_fb .SeekStart );var _ddfe ,_gbc uint32 ;_edea :=_fcc .ReadUShort ();
if _edea < 8{_ddfe =uint32 (_fcc .ReadUShort ());_gbc =uint32 (_fcc .ReadUShort ());}else {_fcc .ReadUShort ();_ddfe =_fcc .ReadULong ();_gbc =_fcc .ReadULong ();};_fbe .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_edea ,_ddfe ,_gbc );
if _edea !=0{return _eg .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ccgg ,_fca :=_fcc .ReadStr (256);
if _fca !=nil {return _fca ;};_dgbd :=[]byte (_ccgg );for _fcdg ,_cgeg :=range _dgbd {_fcc ._fae .Chars [rune (_fcdg )]=GID (_cgeg );if _cgeg !=0{_f .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fcdg ,_cgeg ,rune (_cgeg ));
};};return nil ;};var _bb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _gb *RuneCharSafeMap ;func (_ggd *RuneCharSafeMap )Range (f func (_fe rune ,_gdf CharMetrics )(_dge bool )){_ggd ._eb .RLock ();defer _ggd ._eb .RUnlock ();for _ebd ,_ffe :=range _ggd ._ae {if f (_ebd ,_ffe ){break ;};};};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _efa *RuneCharSafeMap ;var _gea _fc .Once ;func init (){RegisterStdFont (SymbolName ,_egd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_ebe );};func (_eba StdFont )ToPdfObject ()_d .PdfObject {_aff :=_d .MakeDict ();_aff .Set ("\u0054\u0079\u0070\u0065",_d .MakeName ("\u0046\u006f\u006e\u0074"));_aff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_d .MakeName ("\u0054\u0079\u0070e\u0031"));
_aff .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_d .MakeName (_eba .Name ()));_aff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eba ._cee .ToPdfObject ());return _d .MakeIndirectObject (_aff );};var _aad =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _beed =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func _ded (){_abc =MakeRuneCharSafeMap (len (_cff ));_efa =MakeRuneCharSafeMap (len (_cff ));for _fgf ,_gga :=range _cff {_abc .Write (_gga ,CharMetrics {Wx :float64 (_cga [_fgf ])});_efa .Write (_gga ,CharMetrics {Wx :float64 (_bb [_fgf ])});};_bfd =_abc .Copy ();
_dedg =_efa .Copy ();};func _bc ()StdFont {_gea .Do (_ded );_ccc :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ccc ,_abc );};func init (){RegisterStdFont (TimesRomanName ,_cge ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_ac ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_geb ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_caf ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _aa ()StdFont {_gea .Do (_ded );_fbee :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fbee ,_efa );};func _cge ()StdFont {_abac .Do (_age );_fgb :=Descriptor {Name :TimesRomanName ,Family :_ceee ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_fgb ,_dged );};func (_ggb *ttfParser )ReadUShort ()(_bage uint16 ){_ff .Read (_ggb ._ddge ,_ff .BigEndian ,&_bage );return _bage ;};func TtfParse (r _fb .ReadSeeker )(TtfType ,error ){_cacf :=&ttfParser {_ddge :r };return _cacf .Parse ()};
func _dfb ()StdFont {_dff .Do (_dfd );_bda :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bda ,_cdg );};func (_ddb *ttfParser )parseCmapFormat12 ()error {_cffe :=_ddb .ReadULong ();_fbe .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ddb ._fae .String (),_cffe );
for _dadf :=uint32 (0);_dadf < _cffe ;_dadf ++{_aecd :=_ddb .ReadULong ();_gda :=_ddb .ReadULong ();_gfb :=_ddb .ReadULong ();if _aecd > 0x0010FFFF||(0xD800<=_aecd &&_aecd <=0xDFFF){return _eg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _gda < _aecd ||_gda > 0x0010FFFF||(0xD800<=_gda &&_gda <=0xDFFF){return _eg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _adgd :=_aecd ;_adgd <=_gda ;
_adgd ++{if _adgd > 0x10FFFF{_fbe .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ddb ._fae .Chars [rune (_adgd )]=GID (_gfb );_gfb ++;};};return nil ;};func _fef ()StdFont {_dff .Do (_dfd );_ffd :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ffd ,_gb );};var _fed =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
type ttfParser struct{_fae TtfType ;_ddge _fb .ReadSeeker ;_ced map[string ]uint32 ;_cda uint16 ;_cccf uint16 ;};var _dbe *RuneCharSafeMap ;func (_gfd *TtfType )MakeEncoder ()(_a .SimpleEncoder ,error ){_cbba :=make (map[_a .CharCode ]GlyphName );for _fceb :=_a .CharCode (0);
_fceb <=256;_fceb ++{_aadd :=rune (_fceb );_gcf ,_bfa :=_gfd .Chars [_aadd ];if !_bfa {continue ;};var _afe GlyphName ;if int (_gcf )>=0&&int (_gcf )< len (_gfd .GlyphNames ){_afe =_gfd .GlyphNames [_gcf ];}else {_gbe :=rune (_gcf );if _gabe ,_gcc :=_a .RuneToGlyph (_gbe );
_gcc {_afe =_gabe ;};};if _afe !=""{_cbba [_fceb ]=_afe ;};};if len (_cbba )==0{_fbe .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gfd ,_gfd .Chars );
};return _a .NewCustomSimpleTextEncoder (_cbba ,nil );};func (_ca *fontMap )write (_ge StdFontName ,_fce func ()StdFont ){_ca .Lock ();defer _ca .Unlock ();_ca ._cf [_ge ]=_fce ;};func (_ad *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_ad ._eb .Lock ();
defer _ad ._eb .Unlock ();_ad ._ae [b ]=r ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ab :=_ddg .read (name );_ab {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ddg .write (name ,fnc );for _ ,_agc :=range aliases {RegisterStdFont (_agc ,fnc );};};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_deeff StdFont )Descriptor ()Descriptor {return _deeff ._cg };func (_gd CharMetrics )String ()string {return _f .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_gd .Wx ,_gd .Wy );
};func _egd ()StdFont {_dbb :=_a .NewSymbolEncoder ();_gf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_gf ,_cce ,_dbb );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_gae *ttfParser )ParseComponents ()error {if _bbb :=_gae .ParseHead ();_bbb !=nil {return _bbb ;};if _fdd :=_gae .ParseHhea ();
_fdd !=nil {return _fdd ;};if _beede :=_gae .ParseMaxp ();_beede !=nil {return _beede ;};if _aadb :=_gae .ParseHmtx ();_aadb !=nil {return _aadb ;};if _ ,_beg :=_gae ._ced ["\u006e\u0061\u006d\u0065"];_beg {if _bg :=_gae .ParseName ();_bg !=nil {return _bg ;
};};if _ ,_dea :=_gae ._ced ["\u004f\u0053\u002f\u0032"];_dea {if _adb :=_gae .ParseOS2 ();_adb !=nil {return _adb ;};};if _ ,_fcf :=_gae ._ced ["\u0070\u006f\u0073\u0074"];_fcf {if _gaa :=_gae .ParsePost ();_gaa !=nil {return _gaa ;};};if _ ,_ccce :=_gae ._ced ["\u0063\u006d\u0061\u0070"];
_ccce {if _ccgb :=_gae .ParseCmap ();_ccgb !=nil {return _ccgb ;};};return nil ;};func (_bcd *ttfParser )ParseCmap ()error {var _deag int64 ;if _bfgg :=_bcd .Seek ("\u0063\u006d\u0061\u0070");_bfgg !=nil {return _bfgg ;};_fbe .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_bcd .ReadUShort ();_ggac :=int (_bcd .ReadUShort ());_fgdc :=int64 (0);_ceaf :=int64 (0);_gfg :=int64 (0);for _ccga :=0;_ccga < _ggac ;_ccga ++{_feac :=_bcd .ReadUShort ();_egg :=_bcd .ReadUShort ();_deag =int64 (_bcd .ReadULong ());if _feac ==3&&_egg ==1{_ceaf =_deag ;
}else if _feac ==3&&_egg ==10{_gfg =_deag ;}else if _feac ==1&&_egg ==0{_fgdc =_deag ;};};if _fgdc !=0{if _ccb :=_bcd .parseCmapVersion (_fgdc );_ccb !=nil {return _ccb ;};};if _ceaf !=0{if _feae :=_bcd .parseCmapSubtable31 (_ceaf );_feae !=nil {return _feae ;
};};if _gfg !=0{if _gfe :=_bcd .parseCmapVersion (_gfg );_gfe !=nil {return _gfe ;};};if _ceaf ==0&&_fgdc ==0&&_gfg ==0{_fbe .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_ag *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ag ._eb .RLock ();defer _ag ._eb .RUnlock ();_bee ,_fga :=_ag ._ae [b ];return _bee ,_fga ;};var _ Font =StdFont {};type Font interface{Encoder ()_a .TextEncoder ;GetRuneMetrics (_gc rune )(CharMetrics ,bool );
};func (_ega *fontMap )read (_ga StdFontName )(func ()StdFont ,bool ){_ega .Lock ();defer _ega .Unlock ();_df ,_dgd :=_ega ._cf [_ga ];return _df ,_dgd ;};var _cff =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _cce =&RuneCharSafeMap {_ae :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
type CharMetrics struct{Wx float64 ;Wy float64 ;};type FontWeight int ;var _dff _fc .Once ;func TtfParseFile (fileStr string )(TtfType ,error ){_ccdg ,_ece :=_fa .Open (fileStr );if _ece !=nil {return TtfType {},_ece ;};defer _ccdg .Close ();return TtfParse (_ccdg );
};func IsStdFont (name StdFontName )bool {_ ,_ebdd :=_ddg .read (name );return _ebdd };func (_beb *ttfParser )ParseHmtx ()error {if _dad :=_beb .Seek ("\u0068\u006d\u0074\u0078");_dad !=nil {return _dad ;};_beb ._fae .Widths =make ([]uint16 ,0,8);for _cfb :=uint16 (0);
_cfb < _beb ._cda ;_cfb ++{_beb ._fae .Widths =append (_beb ._fae .Widths ,_beb .ReadUShort ());_beb .Skip (2);};if _beb ._cda < _beb ._cccf &&_beb ._cda > 0{_aeff :=_beb ._fae .Widths [_beb ._cda -1];for _fgd :=_beb ._cda ;_fgd < _beb ._cccf ;_fgd ++{_beb ._fae .Widths =append (_beb ._fae .Widths ,_aeff );
};};return nil ;};func (_gedf *ttfParser )parseCmapFormat6 ()error {_affae :=int (_gedf .ReadUShort ());_dec :=int (_gedf .ReadUShort ());_fbe .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gedf ._fae .String (),_affae ,_dec );
for _bea :=0;_bea < _dec ;_bea ++{_ccbc :=GID (_gedf .ReadUShort ());_gedf ._fae .Chars [rune (_bea +_affae )]=_ccbc ;};return nil ;};var _dged *RuneCharSafeMap ;func _cc ()StdFont {_dff .Do (_dfd );_ec :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ec ,_fbc );};type RuneCharSafeMap struct{_ae map[rune ]CharMetrics ;_eb _fc .RWMutex ;};func (_bdde *ttfParser )ParseMaxp ()error {if _adba :=_bdde .Seek ("\u006d\u0061\u0078\u0070");_adba !=nil {return _adba ;};_bdde .Skip (4);_bdde ._cccf =_bdde .ReadUShort ();
return nil ;};const (_ceee ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););type fontMap struct{_fc .Mutex ;_cf map[StdFontName ]func ()StdFont ;};func (_affd *TtfType )NewEncoder ()_a .TextEncoder {return _a .NewTrueTypeFontEncoder (_affd .Chars )};
func (_agce *TtfType )String ()string {return _f .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_agce .PostScriptName ,_agce .UnitsPerEm ,_agce .Bold ,_agce .ItalicAngle ,_agce .CapHeight ,len (_agce .Chars ),len (_agce .GlyphNames ));
};func _ebe ()StdFont {_cbb :=_a .NewZapfDingbatsEncoder ();_cdgd :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_cdgd ,_dgcg ,_cbb );};var _ccd *RuneCharSafeMap ;func (_egda *ttfParser )ReadULong ()(_abf uint32 ){_ff .Read (_egda ._ddge ,_ff .BigEndian ,&_abf );return _abf ;};func (_ebde *ttfParser )readByte ()(_dfeg uint8 ){_ff .Read (_ebde ._ddge ,_ff .BigEndian ,&_dfeg );
return _dfeg ;};var _cdg *RuneCharSafeMap ;type GlyphName =_a .GlyphName ;func (_db StdFont )GetMetricsTable ()*RuneCharSafeMap {return _db ._gab };func _ccg ()StdFont {_gea .Do (_ded );_aeb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_aeb ,_dedg );};func _ac ()StdFont {_abac .Do (_age );_cca :=Descriptor {Name :TimesBoldName ,Family :_ceee ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_cca ,_dbe );};func (_gac *ttfParser )parseCmapVersion (_dbdb int64 )error {_fbe .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_dbdb );
if _gac ._fae .Chars ==nil {_gac ._fae .Chars =make (map[rune ]GID );};_gac ._ddge .Seek (int64 (_gac ._ced ["\u0063\u006d\u0061\u0070"])+_dbdb ,_fb .SeekStart );var _bfc ,_ege uint32 ;_bgb :=_gac .ReadUShort ();if _bgb < 8{_bfc =uint32 (_gac .ReadUShort ());
_ege =uint32 (_gac .ReadUShort ());}else {_gac .ReadUShort ();_bfc =_gac .ReadULong ();_ege =_gac .ReadULong ();};_fbe .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_bgb ,_bfc ,_ege );
switch _bgb {case 0:return _gac .parseCmapFormat0 ();case 6:return _gac .parseCmapFormat6 ();case 12:return _gac .parseCmapFormat12 ();default:_fbe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_bgb );
return nil ;};};