//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_ec "bytes";_cg "encoding/binary";_e "errors";_g "fmt";_bb "github.com/unidoc/unipdf/v3/common";_be "github.com/unidoc/unipdf/v3/core";_ccb "github.com/unidoc/unipdf/v3/internal/cmap";_ac "github.com/unidoc/unipdf/v3/internal/textencoding";
_cc "golang.org/x/xerrors";_ca "io";_c "os";_d "regexp";_b "sort";_fe "strings";_a "sync";);var _ebe =&fontMap {_fgg :make (map[StdFontName ]func ()StdFont )};func _aag ()StdFont {_fgf .Do (_bbe );_caef :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_caef ,_gce );};func _dcf (){_dbc =MakeRuneCharSafeMap (len (_adc ));_ddg =MakeRuneCharSafeMap (len (_adc ));_gba =MakeRuneCharSafeMap (len (_adc ));_cff =MakeRuneCharSafeMap (len (_adc ));for _ccd ,_dgff :=range _adc {_dbc .Write (_dgff ,CharMetrics {Wx :float64 (_bddf [_ccd ])});
_ddg .Write (_dgff ,CharMetrics {Wx :float64 (_acgg [_ccd ])});_gba .Write (_dgff ,CharMetrics {Wx :float64 (_cdd [_ccd ])});_cff .Write (_dgff ,CharMetrics {Wx :float64 (_baf [_ccd ])});};};func (_gd *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_de :=MakeRuneCharSafeMap (_gd .Length ());
_gd .Range (func (_cd rune ,_ae CharMetrics )(_def bool ){_de ._bd [_cd ]=_ae ;return false });return _de ;};func (_aa StdFont )GetMetricsTable ()*RuneCharSafeMap {return _aa ._da };func _fbb (_deda map[string ]uint32 )string {var _gbg []string ;for _fab :=range _deda {_gbg =append (_gbg ,_fab );
};_b .Slice (_gbg ,func (_adad ,_feg int )bool {return _deda [_gbg [_adad ]]< _deda [_gbg [_feg ]]});_bca :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_deda ))};
for _ ,_gdef :=range _gbg {_bca =append (_bca ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gdef ,_deda [_gdef ]));};return _fe .Join (_bca ,"\u000a");};type Font interface{Encoder ()_ac .TextEncoder ;GetRuneMetrics (_ea rune )(CharMetrics ,bool );
};var _cdd =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_bge *ttfParser )parseCmapVersion (_cecf int64 )error {_bb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_cecf );if _bge ._egd .Chars ==nil {_bge ._egd .Chars =make (map[rune ]GID );
};_bge ._bbd .Seek (int64 (_bge ._fee ["\u0063\u006d\u0061\u0070"])+_cecf ,_ca .SeekStart );var _gbag ,_cdc uint32 ;_edee :=_bge .ReadUShort ();if _edee < 8{_gbag =uint32 (_bge .ReadUShort ());_cdc =uint32 (_bge .ReadUShort ());}else {_bge .ReadUShort ();
_gbag =_bge .ReadULong ();_cdc =_bge .ReadULong ();};_bb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_edee ,_gbag ,_cdc );
switch _edee {case 0:return _bge .parseCmapFormat0 ();case 6:return _bge .parseCmapFormat6 ();case 12:return _bge .parseCmapFormat12 ();default:_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_edee );
return nil ;};};func (_dda *ttfParser )ParseCmap ()error {var _dcec int64 ;if _bf :=_dda .Seek ("\u0063\u006d\u0061\u0070");_bf !=nil {return _bf ;};_bb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_dda .ReadUShort ();_gab :=int (_dda .ReadUShort ());
_edag :=int64 (0);_ead :=int64 (0);_dab :=int64 (0);for _ecde :=0;_ecde < _gab ;_ecde ++{_dceb :=_dda .ReadUShort ();_bee :=_dda .ReadUShort ();_dcec =int64 (_dda .ReadULong ());if _dceb ==3&&_bee ==1{_ead =_dcec ;}else if _dceb ==3&&_bee ==10{_dab =_dcec ;
}else if _dceb ==1&&_bee ==0{_edag =_dcec ;};};if _edag !=0{if _eaa :=_dda .parseCmapVersion (_edag );_eaa !=nil {return _eaa ;};};if _ead !=0{if _ddb :=_dda .parseCmapSubtable31 (_ead );_ddb !=nil {return _ddb ;};};if _dab !=0{if _ecdg :=_dda .parseCmapVersion (_dab );
_ecdg !=nil {return _ecdg ;};};if _ead ==0&&_edag ==0&&_dab ==0{_bb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_fed :=_ebe .read (name );_fed {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ebe .write (name ,fnc );for _ ,_dbb :=range aliases {RegisterStdFont (_dbb ,fnc );};};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ac .NewStandardEncoder ());};func (_ebeb *TtfType )MakeEncoder ()(_ac .SimpleEncoder ,error ){_bdde :=make (map[_ac .CharCode ]GlyphName );
for _faf :=_ac .CharCode (0);_faf <=256;_faf ++{_gac :=rune (_faf );_gec ,_dag :=_ebeb .Chars [_gac ];if !_dag {continue ;};var _ab GlyphName ;if int (_gec )>=0&&int (_gec )< len (_ebeb .GlyphNames ){_ab =_ebeb .GlyphNames [_gec ];}else {_baad :=rune (_gec );
if _df ,_ffe :=_ac .RuneToGlyph (_baad );_ffe {_ab =_df ;};};if _ab !=""{_bdde [_faf ]=_ab ;};};if len (_bdde )==0{_bb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_ebeb ,_ebeb .Chars );
};return _ac .NewCustomSimpleTextEncoder (_bdde ,nil );};func (_edf *ttfParser )ParseHmtx ()error {if _ced :=_edf .Seek ("\u0068\u006d\u0074\u0078");_ced !=nil {return _ced ;};_edf ._egd .Widths =make ([]uint16 ,0,8);for _dad :=uint16 (0);_dad < _edf ._edb ;
_dad ++{_edf ._egd .Widths =append (_edf ._egd .Widths ,_edf .ReadUShort ());_edf .Skip (2);};if _edf ._edb < _edf ._bdbc &&_edf ._edb > 0{_fgc :=_edf ._egd .Widths [_edf ._edb -1];for _adcdg :=_edf ._edb ;_adcdg < _edf ._bdbc ;_adcdg ++{_edf ._egd .Widths =append (_edf ._egd .Widths ,_fgc );
};};return nil ;};var _adcd *RuneCharSafeMap ;func (_daca *ttfParser )ReadULong ()(_dbae uint32 ){_cg .Read (_daca ._bbd ,_cg .BigEndian ,&_dbae );return _dbae ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_bd :make (map[rune ]CharMetrics ,length )};
};func (_dga *ttfParser )ParseMaxp ()error {if _eac :=_dga .Seek ("\u006d\u0061\u0078\u0070");_eac !=nil {return _eac ;};_dga .Skip (4);_dga ._bdbc =_dga .ReadUShort ();return nil ;};var _acgg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
var _aggd =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func TtfParseFile (fileStr string )(TtfType ,error ){_acb ,_adb :=_c .Open (fileStr );if _adb !=nil {return TtfType {},_adb ;};defer _acb .Close ();return TtfParse (_acb );};func (_ed *RuneCharSafeMap )Range (f func (_fg rune ,_ecd CharMetrics )(_gg bool )){_ed ._eg .RLock ();
defer _ed ._eg .RUnlock ();for _cda ,_cac :=range _ed ._bd {if f (_cda ,_cac ){break ;};};};var _agg *RuneCharSafeMap ;var _baf =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _adc =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func _egaf (){_agg =MakeRuneCharSafeMap (len (_adc ));_acg =MakeRuneCharSafeMap (len (_adc ));for _ged ,_afa :=range _adc {_agg .Write (_afa ,CharMetrics {Wx :float64 (_baa [_ged ])});_acg .Write (_afa ,CharMetrics {Wx :float64 (_bgg [_ged ])});};_gbb =_agg .Copy ();
_fa =_acg .Copy ();};func IsStdFont (name StdFontName )bool {_ ,_bdg :=_ebe .read (name );return _bdg };var _ddf _a .Once ;func _bae ()StdFont {_ddc .Do (_dcf );_aad :=Descriptor {Name :TimesBoldName ,Family :_ee ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_aad ,_ddg );};var _gcd *RuneCharSafeMap ;type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;
Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func init (){RegisterStdFont (CourierName ,_fc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_aag ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_acf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_agf ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};var _fgf _a .Once ;func _acf ()StdFont {_fgf .Do (_bbe );_ag :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_ag ,_afc );};var _gce *RuneCharSafeMap ;var _bddf =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
var _acg *RuneCharSafeMap ;func _egf ()StdFont {_ddf .Do (_egaf );_ggb :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_ggb ,_fa );};var _gdea =&RuneCharSafeMap {_bd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_gf *fontMap )read (_aec StdFontName )(func ()StdFont ,bool ){_gf .Lock ();defer _gf .Unlock ();_eb ,_cf :=_gf ._fgg [_aec ];return _eb ,_cf ;};func (_gc *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_gc ._eg .Lock ();defer _gc ._eg .Unlock ();
_gc ._bd [b ]=r ;};var _fa *RuneCharSafeMap ;func _gcg ()StdFont {_ddf .Do (_egaf );_cfe :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cfe ,_agg );};func init (){RegisterStdFont (HelveticaName ,_gcg ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_bdb ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_dc ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_egf ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};type fontMap struct{_a .Mutex ;_fgg map[StdFontName ]func ()StdFont ;};func _bbe (){const _ffb =600;_adcd =MakeRuneCharSafeMap (len (_adc ));
for _ ,_ecg :=range _adc {_adcd .Write (_ecg ,CharMetrics {Wx :_ffb });};_gce =_adcd .Copy ();_gcd =_adcd .Copy ();_afc =_adcd .Copy ();};func _bdb ()StdFont {_ddf .Do (_egaf );_bed :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bed ,_acg );};func (_bage *ttfParser )ReadStr (length int )(string ,error ){_dbbge :=make ([]byte ,length );_afafe ,_dea :=_bage ._bbd .Read (_dbbge );if _dea !=nil {return "",_dea ;}else if _afafe !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_dbbge ),nil ;};func (_dcef *ttfParser )readByte ()(_cdagf uint8 ){_cg .Read (_dcef ._bbd ,_cg .BigEndian ,&_cdagf );return _cdagf ;};func (_efga *ttfParser )parseCmapFormat12 ()error {_caa :=_efga .ReadULong ();_bb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_efga ._egd .String (),_caa );
for _ebc :=uint32 (0);_ebc < _caa ;_ebc ++{_afce :=_efga .ReadULong ();_cca :=_efga .ReadULong ();_dff :=_efga .ReadULong ();if _afce > 0x0010FFFF||(0xD800<=_afce &&_afce <=0xDFFF){return _e .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _cca < _afce ||_cca > 0x0010FFFF||(0xD800<=_cca &&_cca <=0xDFFF){return _e .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _egdd :=_afce ;_egdd <=_cca ;
_egdd ++{if _egdd > 0x10FFFF{_bb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_efga ._egd .Chars [rune (_egdd )]=GID (_dff );_dff ++;};};return nil ;};var _dbc *RuneCharSafeMap ;func (_baea *ttfParser )ParseName ()error {if _abf :=_baea .Seek ("\u006e\u0061\u006d\u0065");_abf !=nil {return _abf ;};_cde ,_ :=_baea ._bbd .Seek (0,_ca .SeekCurrent );
_baea ._egd .PostScriptName ="";_baea .Skip (2);_dgad :=_baea .ReadUShort ();_bdc :=_baea .ReadUShort ();for _fbbc :=uint16 (0);_fbbc < _dgad &&_baea ._egd .PostScriptName =="";_fbbc ++{_baea .Skip (3*2);_dcfg :=_baea .ReadUShort ();_cfc :=_baea .ReadUShort ();
_fbaf :=_baea .ReadUShort ();if _dcfg ==6{_baea ._bbd .Seek (_cde +int64 (_bdc )+int64 (_fbaf ),_ca .SeekStart );_fdf ,_dade :=_baea .ReadStr (int (_cfc ));if _dade !=nil {return _dade ;};_fdf =_fe .Replace (_fdf ,"\u0000","",-1);_faa ,_dade :=_d .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _dade !=nil {return _dade ;};_baea ._egd .PostScriptName =_faa .ReplaceAllString (_fdf ,"");};};if _baea ._egd .PostScriptName ==""{_bb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_acbg *ttfParser )parseCmapFormat6 ()error {_aeec :=int (_acbg .ReadUShort ());_dggg :=int (_acbg .ReadUShort ());_bb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_acbg ._egd .String (),_aeec ,_dggg );
for _bcde :=0;_bcde < _dggg ;_bcde ++{_ffcc :=GID (_acbg .ReadUShort ());_acbg ._egd .Chars [rune (_bcde +_aeec )]=_ffcc ;};return nil ;};type GID =_ac .GID ;func (_baag *ttfParser )ParsePost ()error {if _ecb :=_baag .Seek ("\u0070\u006f\u0073\u0074");
_ecb !=nil {return _ecb ;};_bfg :=_baag .Read32Fixed ();_baag ._egd .ItalicAngle =_baag .Read32Fixed ();_baag ._egd .UnderlinePosition =_baag .ReadShort ();_baag ._egd .UnderlineThickness =_baag .ReadShort ();_baag ._egd .IsFixedPitch =_baag .ReadULong ()!=0;
_baag .ReadULong ();_baag .ReadULong ();_baag .ReadULong ();_baag .ReadULong ();_bb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_bfg );switch _bfg {case 1.0:_baag ._egd .GlyphNames =_aggd ;
case 2.0:_dbd :=int (_baag .ReadUShort ());_gae :=make ([]int ,_dbd );_baag ._egd .GlyphNames =make ([]GlyphName ,_dbd );_edea :=-1;for _acae :=0;_acae < _dbd ;_acae ++{_adba :=int (_baag .ReadUShort ());_gae [_acae ]=_adba ;if _adba <=0x7fff&&_adba > _edea {_edea =_adba ;
};};var _geae []GlyphName ;if _edea >=len (_aggd ){_geae =make ([]GlyphName ,_edea -len (_aggd )+1);for _gge :=0;_gge < _edea -len (_aggd )+1;_gge ++{_adbab :=int (_baag .readByte ());_fdd ,_gcbe :=_baag .ReadStr (_adbab );if _gcbe !=nil {return _gcbe ;
};_geae [_gge ]=GlyphName (_fdd );};};for _cfd :=0;_cfd < _dbd ;_cfd ++{_cfdd :=_gae [_cfd ];if _cfdd < len (_aggd ){_baag ._egd .GlyphNames [_cfd ]=_aggd [_cfdd ];}else if _cfdd >=len (_aggd )&&_cfdd <=32767{_baag ._egd .GlyphNames [_cfd ]=_geae [_cfdd -len (_aggd )];
}else {_baag ._egd .GlyphNames [_cfd ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_cfgb :=make ([]int ,_baag ._bdbc );for _ebf :=0;_ebf < len (_cfgb );_ebf ++{_gcf :=int (_baag .ReadSByte ());_cfgb [_ebf ]=_ebf +1+_gcf ;
};_baag ._egd .GlyphNames =make ([]GlyphName ,len (_cfgb ));for _aefc :=0;_aefc < len (_baag ._egd .GlyphNames );_aefc ++{_fedb :=_aggd [_cfgb [_aefc ]];_baag ._egd .GlyphNames [_aefc ]=_fedb ;};case 3.0:_bb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_bb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_bfg );};return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ac .TextEncoder )StdFont {var _af rune =0xA0;
if _ ,_cb :=metrics .Read (_af );!_cb {_cee ,_ :=metrics .Read (0x20);metrics .Write (_af ,_cee );};return StdFont {_ggc :desc ,_da :metrics ,_ba :encoder };};var _cff *RuneCharSafeMap ;func init (){RegisterStdFont (SymbolName ,_fgd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_efc );};func (_eaf *TtfType )NewEncoder ()_ac .TextEncoder {return _ac .NewTrueTypeFontEncoder (_eaf .Chars )};func (_ga *RuneCharSafeMap )Length ()int {_ga ._eg .RLock ();defer _ga ._eg .RUnlock ();return len (_ga ._bd );
};const (_ee ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_dde *TtfType )MakeToUnicode ()*_ccb .CMap {_aeb :=make (map[_ccb .CharCode ]rune );if len (_dde .GlyphNames )==0{return _ccb .NewToUnicodeCMap (_aeb );
};for _gda ,_fcf :=range _dde .Chars {_dec :=_ccb .CharCode (_gda );_baeb :=_dde .GlyphNames [_fcf ];_cdda ,_bc :=_ac .GlyphToRune (_baeb );if !_bc {_bb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_gda ,_baeb );
_cdda =_ac .MissingCodeRune ;};_aeb [_dec ]=_cdda ;};return _ccb .NewToUnicodeCMap (_aeb );};func (_eda StdFont )Encoder ()_ac .TextEncoder {return _eda ._ba };func init (){RegisterStdFont (TimesRomanName ,_cec ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_bae ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_aef ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_gea ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ega StdFont )Name ()string {return string (_ega ._ggc .Name )};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;
StemV float64 ;StemH float64 ;};func (_baadd *ttfParser )ParseOS2 ()error {if _cfb :=_baadd .Seek ("\u004f\u0053\u002f\u0032");_cfb !=nil {return _cfb ;};_agfd :=_baadd .ReadUShort ();_baadd .Skip (4*2);_baadd .Skip (11*2+10+4*4+4);_dfe :=_baadd .ReadUShort ();
_baadd ._egd .Bold =(_dfe &32)!=0;_baadd .Skip (2*2);_baadd ._egd .TypoAscender =_baadd .ReadShort ();_baadd ._egd .TypoDescender =_baadd .ReadShort ();if _agfd >=2{_baadd .Skip (3*2+2*4+2);_baadd ._egd .CapHeight =_baadd .ReadShort ();}else {_baadd ._egd .CapHeight =0;
};return nil ;};var _bgg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);func NewStdFontByName (name StdFontName )(StdFont ,bool ){_bg ,_dg :=_ebe .read (name );if !_dg {return StdFont {},false ;};return _bg (),true ;};type GlyphName =_ac .GlyphName ;type StdFontName string ;func _dc ()StdFont {_ddf .Do (_egaf );_fgb :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_fgb ,_gbb );};func NewFontFile2FromPdfObject (obj _be .PdfObject )(TtfType ,error ){obj =_be .TraceToDirectObject (obj );_dce ,_egae :=obj .(*_be .PdfObjectStream );if !_egae {_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_be .ErrTypeError ;};_aada ,_dcff :=_be .DecodeStream (_dce );if _dcff !=nil {return TtfType {},_dcff ;};_aac :=ttfParser {_bbd :_ec .NewReader (_aada )};return _aac .Parse ();};func _fgd ()StdFont {_ffc :=_ac .NewSymbolEncoder ();_ccg :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_ccg ,_gee ,_ffc );};func _efc ()StdFont {_egab :=_ac .NewZapfDingbatsEncoder ();_bedc :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bedc ,_gdea ,_egab );};var _gbb *RuneCharSafeMap ;func (_cfg *ttfParser )parseCmapSubtable10 (_cgg int64 )error {if _cfg ._egd .Chars ==nil {_cfg ._egd .Chars =make (map[rune ]GID );};_cfg ._bbd .Seek (int64 (_cfg ._fee ["\u0063\u006d\u0061\u0070"])+_cgg ,_ca .SeekStart );
var _fad ,_efg uint32 ;_gga :=_cfg .ReadUShort ();if _gga < 8{_fad =uint32 (_cfg .ReadUShort ());_efg =uint32 (_cfg .ReadUShort ());}else {_cfg .ReadUShort ();_fad =_cfg .ReadULong ();_efg =_cfg .ReadULong ();};_bb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_gga ,_fad ,_efg );
if _gga !=0{return _e .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_edfgb ,_dba :=_cfg .ReadStr (256);if _dba !=nil {return _dba ;
};_eacg :=[]byte (_edfgb );for _fde ,_cbe :=range _eacg {_cfg ._egd .Chars [rune (_fde )]=GID (_cbe );if _cbe !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fde ,_cbe ,rune (_cbe ));
};};return nil ;};func (_fd *ttfParser )parseCmapSubtable31 (_gbc int64 )error {_geac :=make ([]rune ,0,8);_bag :=make ([]rune ,0,8);_edfg :=make ([]int16 ,0,8);_gccf :=make ([]uint16 ,0,8);_fd ._egd .Chars =make (map[rune ]GID );_fd ._bbd .Seek (int64 (_fd ._fee ["\u0063\u006d\u0061\u0070"])+_gbc ,_ca .SeekStart );
_adaf :=_fd .ReadUShort ();if _adaf !=4{return _cc .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_adaf ,_be .ErrNotSupported );
};_fd .Skip (2*2);_fgga :=int (_fd .ReadUShort ()/2);_fd .Skip (3*2);for _ddgf :=0;_ddgf < _fgga ;_ddgf ++{_bag =append (_bag ,rune (_fd .ReadUShort ()));};_fd .Skip (2);for _debc :=0;_debc < _fgga ;_debc ++{_geac =append (_geac ,rune (_fd .ReadUShort ()));
};for _gbbd :=0;_gbbd < _fgga ;_gbbd ++{_edfg =append (_edfg ,_fd .ReadShort ());};_eed ,_ :=_fd ._bbd .Seek (int64 (0),_ca .SeekCurrent );for _cbc :=0;_cbc < _fgga ;_cbc ++{_gccf =append (_gccf ,_fd .ReadUShort ());};for _acbd :=0;_acbd < _fgga ;_acbd ++{_dced :=_geac [_acbd ];
_bbf :=_bag [_acbd ];_dbcb :=_edfg [_acbd ];_fda :=_gccf [_acbd ];if _fda > 0{_fd ._bbd .Seek (_eed +2*int64 (_acbd )+int64 (_fda ),_ca .SeekStart );};for _cdf :=_dced ;_cdf <=_bbf ;_cdf ++{if _cdf ==0xFFFF{break ;};var _bbc int32 ;if _fda > 0{_bbc =int32 (_fd .ReadUShort ());
if _bbc > 0{_bbc +=int32 (_dbcb );};}else {_bbc =_cdf +int32 (_dbcb );};if _bbc >=65536{_bbc -=65536;};if _bbc > 0{_fd ._egd .Chars [_cdf ]=GID (_bbc );};};};return nil ;};var _ Font =StdFont {};var _gba *RuneCharSafeMap ;func (_cefe *ttfParser )Seek (tag string )error {_gbgg ,_aaf :=_cefe ._fee [tag ];
if !_aaf {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_cefe ._bbd .Seek (int64 (_gbgg ),_ca .SeekStart );return nil ;};func (_ddgc *ttfParser )ReadShort ()(_fade int16 ){_cg .Read (_ddgc ._bbd ,_cg .BigEndian ,&_fade );
return _fade ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_caf StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ff ,_gde :=_caf ._da .Read (r );return _ff ,_gde ;};var _baa =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _gea ()StdFont {_ddc .Do (_dcf );_afaf :=Descriptor {Name :TimesBoldItalicName ,Family :_ee ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_afaf ,_gba );};var _gee =&RuneCharSafeMap {_bd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_fff *ttfParser )ReadUShort ()(_bga uint16 ){_cg .Read (_fff ._bbd ,_cg .BigEndian ,&_bga );return _bga ;};func (_dca *ttfParser )Read32Fixed ()float64 {_gdag :=float64 (_dca .ReadShort ());_aecb :=float64 (_dca .ReadUShort ())/65536.0;return _gdag +_aecb ;
};func (_dbbg *ttfParser )ParseComponents ()error {if _dfc :=_dbbg .ParseHead ();_dfc !=nil {return _dfc ;};if _ccf :=_dbbg .ParseHhea ();_ccf !=nil {return _ccf ;};if _ccc :=_dbbg .ParseMaxp ();_ccc !=nil {return _ccc ;};if _gcc :=_dbbg .ParseHmtx ();
_gcc !=nil {return _gcc ;};if _ ,_bcd :=_dbbg ._fee ["\u006e\u0061\u006d\u0065"];_bcd {if _eag :=_dbbg .ParseName ();_eag !=nil {return _eag ;};};if _ ,_ebec :=_dbbg ._fee ["\u004f\u0053\u002f\u0032"];_ebec {if _ddeb :=_dbbg .ParseOS2 ();_ddeb !=nil {return _ddeb ;
};};if _ ,_faff :=_dbbg ._fee ["\u0070\u006f\u0073\u0074"];_faff {if _cdag :=_dbbg .ParsePost ();_cdag !=nil {return _cdag ;};};if _ ,_dgg :=_dbbg ._fee ["\u0063\u006d\u0061\u0070"];_dgg {if _gcca :=_dbbg .ParseCmap ();_gcca !=nil {return _gcca ;};};return nil ;
};func (_bgea *ttfParser )parseCmapFormat0 ()error {_fgda ,_dabe :=_bgea .ReadStr (256);if _dabe !=nil {return _dabe ;};_bcc :=[]byte (_fgda );_bb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_bgea ._egd .String (),_fgda ,_bcc );
for _bccg ,_gbf :=range _bcc {_bgea ._egd .Chars [rune (_bccg )]=GID (_gbf );};return nil ;};type StdFont struct{_ggc Descriptor ;_da *RuneCharSafeMap ;_ba _ac .TextEncoder ;};func (_aee *ttfParser )Parse ()(TtfType ,error ){_dgd ,_gef :=_aee .ReadStr (4);
if _gef !=nil {return TtfType {},_gef ;};if _dgd =="\u004f\u0054\u0054\u004f"{return TtfType {},_cc .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_be .ErrNotSupported );
};if _dgd !="\u0000\u0001\u0000\u0000"&&_dgd !="\u0074\u0072\u0075\u0065"{_bb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_dgd );
};_beag :=int (_aee .ReadUShort ());_aee .Skip (3*2);_aee ._fee =make (map[string ]uint32 );var _ecf string ;for _ddd :=0;_ddd < _beag ;_ddd ++{_ecf ,_gef =_aee .ReadStr (4);if _gef !=nil {return TtfType {},_gef ;};_aee .Skip (4);_eeg :=_aee .ReadULong ();
_aee .Skip (4);_aee ._fee [_ecf ]=_eeg ;};_bb .Log .Trace (_fbb (_aee ._fee ));if _gef =_aee .ParseComponents ();_gef !=nil {return TtfType {},_gef ;};return _aee ._egd ,nil ;};func _cec ()StdFont {_ddc .Do (_dcf );_gfd :=Descriptor {Name :TimesRomanName ,Family :_ee ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_gfd ,_dbc );};type ttfParser struct{_egd TtfType ;_bbd _ca .ReadSeeker ;_fee map[string ]uint32 ;_edb uint16 ;_bdbc uint16 ;};func (_ce *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ce ._eg .RLock ();defer _ce ._eg .RUnlock ();
_ge ,_db :=_ce ._bd [b ];return _ge ,_db ;};func (_gcb *ttfParser )ParseHhea ()error {if _eab :=_gcb .Seek ("\u0068\u0068\u0065\u0061");_eab !=nil {return _eab ;};_gcb .Skip (4+15*2);_gcb ._edb =_gcb .ReadUShort ();return nil ;};func (_ad *fontMap )write (_cab StdFontName ,_gdb func ()StdFont ){_ad .Lock ();
defer _ad .Unlock ();_ad ._fgg [_cab ]=_gdb ;};var _afc *RuneCharSafeMap ;func TtfParse (r _ca .ReadSeeker )(TtfType ,error ){_egg :=&ttfParser {_bbd :r };return _egg .Parse ()};func (_cfdb *ttfParser )Skip (n int ){_cfdb ._bbd .Seek (int64 (n ),_ca .SeekCurrent )};
type RuneCharSafeMap struct{_bd map[rune ]CharMetrics ;_eg _a .RWMutex ;};func _aef ()StdFont {_ddc .Do (_dcf );_ded :=Descriptor {Name :TimesItalicName ,Family :_ee ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ded ,_cff );};type FontWeight int ;var _ddc _a .Once ;func (_adf *ttfParser )ReadSByte ()(_feda int8 ){_cg .Read (_adf ._bbd ,_cg .BigEndian ,&_feda );return _feda ;};var _ddg *RuneCharSafeMap ;const (FontWeightMedium FontWeight =iota ;
FontWeightBold ;FontWeightRoman ;);func (_bafc *ttfParser )ParseHead ()error {if _gbgf :=_bafc .Seek ("\u0068\u0065\u0061\u0064");_gbgf !=nil {return _gbgf ;};_bafc .Skip (3*4);_deb :=_bafc .ReadULong ();if _deb !=0x5F0F3CF5{_bb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_bafc );
};_bafc .Skip (2);_bafc ._egd .UnitsPerEm =_bafc .ReadUShort ();_bafc .Skip (2*8);_bafc ._egd .Xmin =_bafc .ReadShort ();_bafc ._egd .Ymin =_bafc .ReadShort ();_bafc ._egd .Xmax =_bafc .ReadShort ();_bafc ._egd .Ymax =_bafc .ReadShort ();return nil ;};
func (_ef CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ef .Wx ,_ef .Wy );};func (_dgf StdFont )ToPdfObject ()_be .PdfObject {_bgc :=_be .MakeDict ();_bgc .Set ("\u0054\u0079\u0070\u0065",_be .MakeName ("\u0046\u006f\u006e\u0074"));
_bgc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_be .MakeName ("\u0054\u0079\u0070e\u0031"));_bgc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_be .MakeName (_dgf .Name ()));_bgc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dgf ._ba .ToPdfObject ());
return _be .MakeIndirectObject (_bgc );};func (_ffg StdFont )Descriptor ()Descriptor {return _ffg ._ggc };func _agf ()StdFont {_fgf .Do (_bbe );_ede :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ede ,_gcd );};func _fc ()StdFont {_fgf .Do (_bbe );_gb :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gb ,_adcd );};func (_bedcb *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_bedcb .PostScriptName ,_bedcb .UnitsPerEm ,_bedcb .Bold ,_bedcb .ItalicAngle ,_bedcb .CapHeight ,len (_bedcb .Chars ),len (_bedcb .GlyphNames ));
};