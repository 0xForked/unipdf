//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_gd "bytes";_fe "encoding/binary";_e "errors";_b "fmt";_gga "github.com/unidoc/unipdf/v3/common";_fg "github.com/unidoc/unipdf/v3/core";_c "github.com/unidoc/unipdf/v3/internal/cmap";_da "github.com/unidoc/unipdf/v3/internal/textencoding";
_ed "golang.org/x/xerrors";_dc "io";_f "os";_g "regexp";_d "sort";_bg "strings";_gg "sync";);func _gda ()StdFont {_accb .Do (_egd );_dad :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dad ,_df );};func (_gffb *ttfParser )ParseCmap ()error {var _dfa int64 ;if _agfd :=_gffb .Seek ("\u0063\u006d\u0061\u0070");_agfd !=nil {return _agfd ;};_gga .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_gffb .ReadUShort ();
_dcd :=int (_gffb .ReadUShort ());_dfg :=int64 (0);_ebg :=int64 (0);_bdfg :=int64 (0);for _dfcg :=0;_dfcg < _dcd ;_dfcg ++{_ged :=_gffb .ReadUShort ();_ddf :=_gffb .ReadUShort ();_dfa =int64 (_gffb .ReadULong ());if _ged ==3&&_ddf ==1{_ebg =_dfa ;}else if _ged ==3&&_ddf ==10{_bdfg =_dfa ;
}else if _ged ==1&&_ddf ==0{_dfg =_dfa ;};};if _dfg !=0{if _eeg :=_gffb .parseCmapVersion (_dfg );_eeg !=nil {return _eeg ;};};if _ebg !=0{if _gef :=_gffb .parseCmapSubtable31 (_ebg );_gef !=nil {return _gef ;};};if _bdfg !=0{if _ffdg :=_gffb .parseCmapVersion (_bdfg );
_ffdg !=nil {return _ffdg ;};};if _ebg ==0&&_dfg ==0&&_bdfg ==0{_gga .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _egd (){const _af =600;_fb =MakeRuneCharSafeMap (len (_cg ));for _ ,_bbb :=range _cg {_fb .Write (_bbb ,CharMetrics {Wx :_af });};_fge =_fb .Copy ();_cfg =_fb .Copy ();_df =_fb .Copy ();};type StdFontName string ;func (_baf *ttfParser )Seek (tag string )error {_dceg ,_bdbb :=_baf ._aae [tag ];
if !_bdbb {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_baf ._ebaf .Seek (int64 (_dceg ),_dc .SeekStart );return nil ;};func (_eg *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ege :=MakeRuneCharSafeMap (_eg .Length ());
_eg .Range (func (_cf rune ,_ad CharMetrics )(_cb bool ){_ege ._ab [_cf ]=_ad ;return false });return _ege ;};func (_bgcd *ttfParser )Parse ()(TtfType ,error ){_bfd ,_ceb :=_bgcd .ReadStr (4);if _ceb !=nil {return TtfType {},_ceb ;};if _bfd =="\u004f\u0054\u0054\u004f"{return TtfType {},_ed .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fg .ErrNotSupported );
};if _bfd !="\u0000\u0001\u0000\u0000"&&_bfd !="\u0074\u0072\u0075\u0065"{_gga .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bfd );
};_cce :=int (_bgcd .ReadUShort ());_bgcd .Skip (3*2);_bgcd ._aae =make (map[string ]uint32 );var _bfa string ;for _aagb :=0;_aagb < _cce ;_aagb ++{_bfa ,_ceb =_bgcd .ReadStr (4);if _ceb !=nil {return TtfType {},_ceb ;};_bgcd .Skip (4);_dgc :=_bgcd .ReadULong ();
_bgcd .Skip (4);_bgcd ._aae [_bfa ]=_dgc ;};_gga .Log .Trace (_dfb (_bgcd ._aae ));if _ceb =_bgcd .ParseComponents ();_ceb !=nil {return TtfType {},_ceb ;};return _bgcd ._bbbe ,nil ;};func _edaa ()StdFont {_bdb .Do (_aegf );_fbd :=Descriptor {Name :TimesItalicName ,Family :_aeg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_fbd ,_fef );};func (_cec *ttfParser )ParseHhea ()error {if _ebaa :=_cec .Seek ("\u0068\u0068\u0065\u0061");_ebaa !=nil {return _ebaa ;};_cec .Skip (4+15*2);_cec ._bbgc =_cec .ReadUShort ();return nil ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _fga *RuneCharSafeMap ;func _edf ()StdFont {_dcc :=_da .NewSymbolEncoder ();
_bgd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};return NewStdFontWithEncoding (_bgd ,_ffb ,_dcc );
};func (_cfe *fontMap )read (_gb StdFontName )(func ()StdFont ,bool ){_cfe .Lock ();defer _cfe .Unlock ();_cbd ,_abf :=_cfe ._egg [_gb ];return _cbd ,_abf ;};func (_dd *ttfParser )parseCmapSubtable31 (_fba int64 )error {_acd :=make ([]rune ,0,8);_ebdd :=make ([]rune ,0,8);
_gec :=make ([]int16 ,0,8);_cgg :=make ([]uint16 ,0,8);_dd ._bbbe .Chars =make (map[rune ]GID );_dd ._ebaf .Seek (int64 (_dd ._aae ["\u0063\u006d\u0061\u0070"])+_fba ,_dc .SeekStart );_bfga :=_dd .ReadUShort ();if _bfga !=4{return _ed .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_bfga ,_fg .ErrNotSupported );
};_dd .Skip (2*2);_bee :=int (_dd .ReadUShort ()/2);_dd .Skip (3*2);for _deg :=0;_deg < _bee ;_deg ++{_ebdd =append (_ebdd ,rune (_dd .ReadUShort ()));};_dd .Skip (2);for _gc :=0;_gc < _bee ;_gc ++{_acd =append (_acd ,rune (_dd .ReadUShort ()));};for _bba :=0;
_bba < _bee ;_bba ++{_gec =append (_gec ,_dd .ReadShort ());};_gfgf ,_ :=_dd ._ebaf .Seek (int64 (0),_dc .SeekCurrent );for _face :=0;_face < _bee ;_face ++{_cgg =append (_cgg ,_dd .ReadUShort ());};for _dccc :=0;_dccc < _bee ;_dccc ++{_aagd :=_acd [_dccc ];
_fddc :=_ebdd [_dccc ];_gad :=_gec [_dccc ];_fgc :=_cgg [_dccc ];if _fgc > 0{_dd ._ebaf .Seek (_gfgf +2*int64 (_dccc )+int64 (_fgc ),_dc .SeekStart );};for _bgg :=_aagd ;_bgg <=_fddc ;_bgg ++{if _bgg ==0xFFFF{break ;};var _gbf int32 ;if _fgc > 0{_gbf =int32 (_dd .ReadUShort ());
if _gbf > 0{_gbf +=int32 (_gad );};}else {_gbf =_bgg +int32 (_gad );};if _gbf >=65536{_gbf -=65536;};if _gbf > 0{_dd ._bbbe .Chars [_bgg ]=GID (_gbf );};};};return nil ;};type FontWeight int ;func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ab :make (map[rune ]CharMetrics ,length )};
};func (_dab *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_dab ._bf .RLock ();defer _dab ._bf .RUnlock ();_dag ,_be :=_dab ._ab [b ];return _dag ,_be ;};var _eec *RuneCharSafeMap ;var _df *RuneCharSafeMap ;func (_fae *TtfType )MakeEncoder ()(_da .SimpleEncoder ,error ){_bac :=make (map[_da .CharCode ]GlyphName );
for _bgf :=_da .CharCode (0);_bgf <=256;_bgf ++{_cbb :=rune (_bgf );_ec ,_ffbg :=_fae .Chars [_cbb ];if !_ffbg {continue ;};var _afe GlyphName ;if int (_ec )>=0&&int (_ec )< len (_fae .GlyphNames ){_afe =_fae .GlyphNames [_ec ];}else {_dccb :=rune (_ec );
if _dbe ,_cbcc :=_da .RuneToGlyph (_dccb );_cbcc {_afe =_dbe ;};};if _afe !=""{_bac [_bgf ]=_afe ;};};if len (_bac )==0{_gga .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fae ,_fae .Chars );
};return _da .NewCustomSimpleTextEncoder (_bac ,nil );};func (_gbb *ttfParser )Read32Fixed ()float64 {_aabd :=float64 (_gbb .ReadShort ());_geff :=float64 (_gbb .ReadUShort ())/65536.0;return _aabd +_geff ;};func _dcf ()StdFont {_bfg .Do (_eda );_dfc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_dfc ,_ebe );};func (_dda *ttfParser )readByte ()(_bgdb uint8 ){_fe .Read (_dda ._ebaf ,_fe .BigEndian ,&_bgdb );return _bgdb ;};var _cae =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_dbb *ttfParser )parseCmapFormat6 ()error {_dagbg :=int (_dbb .ReadUShort ());_efe :=int (_dbb .ReadUShort ());_gga .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_dbb ._bbbe .String (),_dagbg ,_efe );
for _aab :=0;_aab < _efe ;_aab ++{_bdba :=GID (_dbb .ReadUShort ());_dbb ._bbbe .Chars [rune (_aab +_dagbg )]=_bdba ;};return nil ;};var _ba =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
type GlyphName =_da .GlyphName ;var _geg =&RuneCharSafeMap {_ab :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
type RuneCharSafeMap struct{_ab map[rune ]CharMetrics ;_bf _gg .RWMutex ;};func NewFontFile2FromPdfObject (obj _fg .PdfObject )(TtfType ,error ){obj =_fg .TraceToDirectObject (obj );_fc ,_eab :=obj .(*_fg .PdfObjectStream );if !_eab {_gga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_fg .ErrTypeError ;};_daa ,_ce :=_fg .DecodeStream (_fc );if _ce !=nil {return TtfType {},_ce ;};_dgb :=ttfParser {_ebaf :_gd .NewReader (_daa )};return _dgb .Parse ();};func TtfParseFile (fileStr string )(TtfType ,error ){_gf ,_gfg :=_f .Open (fileStr );
if _gfg !=nil {return TtfType {},_gfg ;};defer _gf .Close ();return TtfParse (_gf );};func init (){RegisterStdFont (CourierName ,_ebd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_aca ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_gda ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_bff ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func _acaf ()StdFont {_bfg .Do (_eda );_cfc :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cfc ,_bc );};func (_eb *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_eb ._bf .Lock ();defer _eb ._bf .Unlock ();_eb ._ab [b ]=r ;};var _fge *RuneCharSafeMap ;type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;
ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_ffa *fontMap )write (_fd StdFontName ,_ef func ()StdFont ){_ffa .Lock ();
defer _ffa .Unlock ();_ffa ._egg [_fd ]=_ef ;};var _caf =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func _eedf ()StdFont {_bfg .Do (_eda );_edd :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_edd ,_fga );};func _gdd ()StdFont {_bdb .Do (_aegf );_deff :=Descriptor {Name :TimesRomanName ,Family :_aeg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_deff ,_bbg );};func (_cbf *ttfParser )parseCmapSubtable10 (_baaf int64 )error {if _cbf ._bbbe .Chars ==nil {_cbf ._bbbe .Chars =make (map[rune ]GID );};_cbf ._ebaf .Seek (int64 (_cbf ._aae ["\u0063\u006d\u0061\u0070"])+_baaf ,_dc .SeekStart );
var _gbd ,_ebee uint32 ;_ada :=_cbf .ReadUShort ();if _ada < 8{_gbd =uint32 (_cbf .ReadUShort ());_ebee =uint32 (_cbf .ReadUShort ());}else {_cbf .ReadUShort ();_gbd =_cbf .ReadULong ();_ebee =_cbf .ReadULong ();};_gga .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_ada ,_gbd ,_ebee );
if _ada !=0{return _e .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fede ,_ggd :=_cbf .ReadStr (256);if _ggd !=nil {return _ggd ;
};_dea :=[]byte (_fede );for _ebdc ,_gfa :=range _dea {_cbf ._bbbe .Chars [rune (_ebdc )]=GID (_gfa );if _gfa !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_ebdc ,_gfa ,rune (_gfa ));
};};return nil ;};func IsStdFont (name StdFontName )bool {_ ,_bb :=_dabd .read (name );return _bb };const (_aeg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func init (){RegisterStdFont (HelveticaName ,_eedf ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_dcf ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_acaf ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_egb ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _accb _gg .Once ;func (_fa *RuneCharSafeMap )Range (f func (_aef rune ,_dae CharMetrics )(_bgb bool )){_fa ._bf .RLock ();defer _fa ._bf .RUnlock ();for _ac ,_ea :=range _fa ._ab {if f (_ac ,_ea ){break ;
};};};var _ffb =&RuneCharSafeMap {_ab :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_def StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_aeae ,_cbc :=_def ._fee .Read (r );return _aeae ,_cbc ;};func _bff ()StdFont {_accb .Do (_egd );_adb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_adb ,_cfg );};func (_eecf *ttfParser )ReadULong ()(_cdd uint32 ){_fe .Read (_eecf ._ebaf ,_fe .BigEndian ,&_cdd );return _cdd ;};func (_bdf *TtfType )MakeToUnicode ()*_c .CMap {_cac :=make (map[_c .CharCode ]rune );if len (_bdf .GlyphNames )==0{return _c .NewToUnicodeCMap (_cac );
};for _aee ,_gae :=range _bdf .Chars {_edc :=_c .CharCode (_aee );_fdd :=_bdf .GlyphNames [_gae ];_gba ,_baa :=_da .GlyphToRune (_fdd );if !_baa {_gga .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_aee ,_fdd );
_gba =_da .MissingCodeRune ;};_cac [_edc ]=_gba ;};return _c .NewToUnicodeCMap (_cac );};type ttfParser struct{_bbbe TtfType ;_ebaf _dc .ReadSeeker ;_aae map[string ]uint32 ;_bbgc uint16 ;_bgc uint16 ;};func _eba ()StdFont {_bdb .Do (_aegf );_cfcf :=Descriptor {Name :TimesBoldName ,Family :_aeg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_cfcf ,_aag );};func (_bae *ttfParser )ReadShort ()(_aagg int16 ){_fe .Read (_bae ._ebaf ,_fe .BigEndian ,&_aagg );return _aagg ;};func (_dce *ttfParser )ParseComponents ()error {if _gdb :=_dce .ParseHead ();_gdb !=nil {return _gdb ;
};if _gff :=_dce .ParseHhea ();_gff !=nil {return _gff ;};if _gddc :=_dce .ParseMaxp ();_gddc !=nil {return _gddc ;};if _ebc :=_dce .ParseHmtx ();_ebc !=nil {return _ebc ;};if _ ,_fag :=_dce ._aae ["\u006e\u0061\u006d\u0065"];_fag {if _cgb :=_dce .ParseName ();
_cgb !=nil {return _cgb ;};};if _ ,_ecf :=_dce ._aae ["\u004f\u0053\u002f\u0032"];_ecf {if _ead :=_dce .ParseOS2 ();_ead !=nil {return _ead ;};};if _ ,_age :=_dce ._aae ["\u0070\u006f\u0073\u0074"];_age {if _ffdd :=_dce .ParsePost ();_ffdd !=nil {return _ffdd ;
};};if _ ,_bffe :=_dce ._aae ["\u0063\u006d\u0061\u0070"];_bffe {if _fda :=_dce .ParseCmap ();_fda !=nil {return _fda ;};};return nil ;};var _bc *RuneCharSafeMap ;func init (){RegisterStdFont (SymbolName ,_edf ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_daded );};var _bdb _gg .Once ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;
StemV float64 ;StemH float64 ;};func _eda (){_fga =MakeRuneCharSafeMap (len (_cg ));_ebe =MakeRuneCharSafeMap (len (_cg ));for _cfeg ,_caa :=range _cg {_fga .Write (_caa ,CharMetrics {Wx :float64 (_cae [_cfeg ])});_ebe .Write (_caa ,CharMetrics {Wx :float64 (_caf [_cfeg ])});
};_bc =_fga .Copy ();_eec =_ebe .Copy ();};func (_dcg *ttfParser )parseCmapVersion (_edba int64 )error {_gga .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_edba );
if _dcg ._bbbe .Chars ==nil {_dcg ._bbbe .Chars =make (map[rune ]GID );};_dcg ._ebaf .Seek (int64 (_dcg ._aae ["\u0063\u006d\u0061\u0070"])+_edba ,_dc .SeekStart );var _ccf ,_fdb uint32 ;_dec :=_dcg .ReadUShort ();if _dec < 8{_ccf =uint32 (_dcg .ReadUShort ());
_fdb =uint32 (_dcg .ReadUShort ());}else {_dcg .ReadUShort ();_ccf =_dcg .ReadULong ();_fdb =_dcg .ReadULong ();};_gga .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_dec ,_ccf ,_fdb );
switch _dec {case 0:return _dcg .parseCmapFormat0 ();case 6:return _dcg .parseCmapFormat6 ();case 12:return _dcg .parseCmapFormat12 ();default:_gga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_dec );
return nil ;};};type Font interface{Encoder ()_da .TextEncoder ;GetRuneMetrics (_ae rune )(CharMetrics ,bool );};func init (){RegisterStdFont (TimesRomanName ,_gdd ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_eba ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_edaa ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_fbc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _dg =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_fccc *ttfParser )ReadUShort ()(_bab uint16 ){_fe .Read (_fccc ._ebaf ,_fe .BigEndian ,&_bab );return _bab ;};var _cfg *RuneCharSafeMap ;type StdFont struct{_ee Descriptor ;_fee *RuneCharSafeMap ;_ag _da .TextEncoder ;};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_da .NewStandardEncoder ());};func (_fgff StdFont )ToPdfObject ()_fg .PdfObject {_daf :=_fg .MakeDict ();_daf .Set ("\u0054\u0079\u0070\u0065",_fg .MakeName ("\u0046\u006f\u006e\u0074"));
_daf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fg .MakeName ("\u0054\u0079\u0070e\u0031"));_daf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fg .MakeName (_fgff .Name ()));_daf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fgff ._ag .ToPdfObject ());
return _fg .MakeIndirectObject (_daf );};func (_ge StdFont )Name ()string {return string (_ge ._ee .Name )};func _fbc ()StdFont {_bdb .Do (_aegf );_bga :=Descriptor {Name :TimesBoldItalicName ,Family :_aeg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_bga ,_db );};func (_cc *RuneCharSafeMap )Length ()int {_cc ._bf .RLock ();defer _cc ._bf .RUnlock ();return len (_cc ._ab );};var _aag *RuneCharSafeMap ;type GID =_da .GID ;var _dgg =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_ebac *ttfParser )ParseMaxp ()error {if _fed :=_ebac .Seek ("\u006d\u0061\u0078\u0070");_fed !=nil {return _fed ;};_ebac .Skip (4);_ebac ._bgc =_ebac .ReadUShort ();return nil ;};func (_edb StdFont )GetMetricsTable ()*RuneCharSafeMap {return _edb ._fee };
var _fef *RuneCharSafeMap ;func _ebd ()StdFont {_accb .Do (_egd );_acc :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_acc ,_fb );};func (_aeaeg *ttfParser )parseCmapFormat0 ()error {_fcc ,_ebddf :=_aeaeg .ReadStr (256);if _ebddf !=nil {return _ebddf ;};_ecfa :=[]byte (_fcc );_gga .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_aeaeg ._bbbe .String (),_fcc ,_ecfa );
for _dga ,_ffbd :=range _ecfa {_aeaeg ._bbbe .Chars [rune (_dga )]=GID (_ffbd );};return nil ;};func (_bgfe *ttfParser )ParseName ()error {if _ddc :=_bgfe .Seek ("\u006e\u0061\u006d\u0065");_ddc !=nil {return _ddc ;};_cba ,_ :=_bgfe ._ebaf .Seek (0,_dc .SeekCurrent );
_bgfe ._bbbe .PostScriptName ="";_bgfe .Skip (2);_cdf :=_bgfe .ReadUShort ();_fgffa :=_bgfe .ReadUShort ();for _cccg :=uint16 (0);_cccg < _cdf &&_bgfe ._bbbe .PostScriptName =="";_cccg ++{_bgfe .Skip (3*2);_bgcde :=_bgfe .ReadUShort ();_bgdc :=_bgfe .ReadUShort ();
_fbda :=_bgfe .ReadUShort ();if _bgcde ==6{_bgfe ._ebaf .Seek (_cba +int64 (_fgffa )+int64 (_fbda ),_dc .SeekStart );_beef ,_afd :=_bgfe .ReadStr (int (_bgdc ));if _afd !=nil {return _afd ;};_beef =_bg .Replace (_beef ,"\u0000","",-1);_gegc ,_afd :=_g .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _afd !=nil {return _afd ;};_bgfe ._bbbe .PostScriptName =_gegc .ReplaceAllString (_beef ,"");};};if _bgfe ._bbbe .PostScriptName ==""{_gga .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _dabd =&fontMap {_egg :make (map[StdFontName ]func ()StdFont )};func _egb ()StdFont {_bfg .Do (_eda );_abc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_abc ,_eec );};func _daded ()StdFont {_fbb :=_da .NewZapfDingbatsEncoder ();_bcf :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bcf ,_geg ,_fbb );};type fontMap struct{_gg .Mutex ;_egg map[StdFontName ]func ()StdFont ;};func (_cggg *ttfParser )ReadSByte ()(_eef int8 ){_fe .Read (_cggg ._ebaf ,_fe .BigEndian ,&_eef );return _eef ;};func (_bd StdFont )Encoder ()_da .TextEncoder {return _bd ._ag };
var _ Font =StdFont {};func TtfParse (r _dc .ReadSeeker )(TtfType ,error ){_gdf :=&ttfParser {_ebaf :r };return _gdf .Parse ()};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _da .TextEncoder )StdFont {var _fac rune =0xA0;
if _ ,_ca :=metrics .Read (_fac );!_ca {_dagb ,_ :=metrics .Read (0x20);metrics .Write (_fac ,_dagb );};return StdFont {_ee :desc ,_fee :metrics ,_ag :encoder };};func (_aaa *ttfParser )ReadStr (length int )(string ,error ){_abg :=make ([]byte ,length );
_ccfa ,_bfdd :=_aaa ._ebaf .Read (_abg );if _bfdd !=nil {return "",_bfdd ;}else if _ccfa !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_abg ),nil ;};var _bfg _gg .Once ;var _gegb =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_ccg *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_ccg .PostScriptName ,_ccg .UnitsPerEm ,_ccg .Bold ,_ccg .ItalicAngle ,_ccg .CapHeight ,len (_ccg .Chars ),len (_ccg .GlyphNames ));
};func (_agc *ttfParser )parseCmapFormat12 ()error {_acg :=_agc .ReadULong ();_gga .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_agc ._bbbe .String (),_acg );
for _ecc :=uint32 (0);_ecc < _acg ;_ecc ++{_fedc :=_agc .ReadULong ();_faa :=_agc .ReadULong ();_aeag :=_agc .ReadULong ();if _fedc > 0x0010FFFF||(0xD800<=_fedc &&_fedc <=0xDFFF){return _e .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _faa < _fedc ||_faa > 0x0010FFFF||(0xD800<=_faa &&_faa <=0xDFFF){return _e .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _efa :=_fedc ;_efa <=_faa ;
_efa ++{if _efa > 0x10FFFF{_gga .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_agc ._bbbe .Chars [rune (_efa )]=GID (_aeag );_aeag ++;};};return nil ;};func _dfb (_afa map[string ]uint32 )string {var _aaea []string ;for _edg :=range _afa {_aaea =append (_aaea ,_edg );};_d .Slice (_aaea ,func (_aaf ,_edcd int )bool {return _afa [_aaea [_aaf ]]< _afa [_aaea [_edcd ]]});
_fdge :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_afa ))};for _ ,_aed :=range _aaea {_fdge =append (_fdge ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_aed ,_afa [_aed ]));
};return _bg .Join (_fdge ,"\u000a");};func (_fgd *ttfParser )ParsePost ()error {if _cfca :=_fgd .Seek ("\u0070\u006f\u0073\u0074");_cfca !=nil {return _cfca ;};_fff :=_fgd .Read32Fixed ();_fgd ._bbbe .ItalicAngle =_fgd .Read32Fixed ();_fgd ._bbbe .UnderlinePosition =_fgd .ReadShort ();
_fgd ._bbbe .UnderlineThickness =_fgd .ReadShort ();_fgd ._bbbe .IsFixedPitch =_fgd .ReadULong ()!=0;_fgd .ReadULong ();_fgd .ReadULong ();_fgd .ReadULong ();_fgd .ReadULong ();_gga .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_fff );
switch _fff {case 1.0:_fgd ._bbbe .GlyphNames =_gdae ;case 2.0:_gfc :=int (_fgd .ReadUShort ());_fec :=make ([]int ,_gfc );_fgd ._bbbe .GlyphNames =make ([]GlyphName ,_gfc );_gecb :=-1;for _dbf :=0;_dbf < _gfc ;_dbf ++{_fbbf :=int (_fgd .ReadUShort ());
_fec [_dbf ]=_fbbf ;if _fbbf <=0x7fff&&_fbbf > _gecb {_gecb =_fbbf ;};};var _efd []GlyphName ;if _gecb >=len (_gdae ){_efd =make ([]GlyphName ,_gecb -len (_gdae )+1);for _cee :=0;_cee < _gecb -len (_gdae )+1;_cee ++{_fgdd :=int (_fgd .readByte ());_aff ,_cde :=_fgd .ReadStr (_fgdd );
if _cde !=nil {return _cde ;};_efd [_cee ]=GlyphName (_aff );};};for _aabc :=0;_aabc < _gfc ;_aabc ++{_adf :=_fec [_aabc ];if _adf < len (_gdae ){_fgd ._bbbe .GlyphNames [_aabc ]=_gdae [_adf ];}else if _adf >=len (_gdae )&&_adf <=32767{_fgd ._bbbe .GlyphNames [_aabc ]=_efd [_adf -len (_gdae )];
}else {_fgd ._bbbe .GlyphNames [_aabc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_cad :=make ([]int ,_fgd ._bgc );for _cbe :=0;_cbe < len (_cad );_cbe ++{_fgfe :=int (_fgd .ReadSByte ());_cad [_cbe ]=_cbe +1+_fgfe ;};
_fgd ._bbbe .GlyphNames =make ([]GlyphName ,len (_cad ));for _adac :=0;_adac < len (_fgd ._bbbe .GlyphNames );_adac ++{_bbbc :=_gdae [_cad [_adac ]];_fgd ._bbbe .GlyphNames [_adac ]=_bbbc ;};case 3.0:_gga .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gga .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_fff );};return nil ;};var _gdae =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func (_cgf *ttfParser )ParseHmtx ()error {if _aegd :=_cgf .Seek ("\u0068\u006d\u0074\u0078");_aegd !=nil {return _aegd ;};_cgf ._bbbe .Widths =make ([]uint16 ,0,8);for _bgaa :=uint16 (0);_bgaa < _cgf ._bbgc ;_bgaa ++{_cgf ._bbbe .Widths =append (_cgf ._bbbe .Widths ,_cgf .ReadUShort ());
_cgf .Skip (2);};if _cgf ._bbgc < _cgf ._bgc &&_cgf ._bbgc > 0{_cbbf :=_cgf ._bbbe .Widths [_cgf ._bbgc -1];for _fbg :=_cgf ._bbgc ;_fbg < _cgf ._bgc ;_fbg ++{_cgf ._bbbe .Widths =append (_cgf ._bbbe .Widths ,_cbbf );};};return nil ;};func (_cdb *ttfParser )ParseOS2 ()error {if _gdfg :=_cdb .Seek ("\u004f\u0053\u002f\u0032");
_gdfg !=nil {return _gdfg ;};_dde :=_cdb .ReadUShort ();_cdb .Skip (4*2);_cdb .Skip (11*2+10+4*4+4);_eabd :=_cdb .ReadUShort ();_cdb ._bbbe .Bold =(_eabd &32)!=0;_cdb .Skip (2*2);_cdb ._bbbe .TypoAscender =_cdb .ReadShort ();_cdb ._bbbe .TypoDescender =_cdb .ReadShort ();
if _dde >=2{_cdb .Skip (3*2+2*4+2);_cdb ._bbbe .CapHeight =_cdb .ReadShort ();}else {_cdb ._bbbe .CapHeight =0;};return nil ;};func _aegf (){_bbg =MakeRuneCharSafeMap (len (_cg ));_aag =MakeRuneCharSafeMap (len (_cg ));_db =MakeRuneCharSafeMap (len (_cg ));
_fef =MakeRuneCharSafeMap (len (_cg ));for _feb ,_dca :=range _cg {_bbg .Write (_dca ,CharMetrics {Wx :float64 (_gegb [_feb ])});_aag .Write (_dca ,CharMetrics {Wx :float64 (_dg [_feb ])});_db .Write (_dca ,CharMetrics {Wx :float64 (_ba [_feb ])});_fef .Write (_dca ,CharMetrics {Wx :float64 (_dgg [_feb ])});
};};var _ebe *RuneCharSafeMap ;func _aca ()StdFont {_accb .Do (_egd );_agf :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_agf ,_fge );};var _bbg *RuneCharSafeMap ;var _cg =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_abb *ttfParser )Skip (n int ){_abb ._ebaf .Seek (int64 (n ),_dc .SeekCurrent )};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_abe ,_cd :=_dabd .read (name );if !_cd {return StdFont {},false ;};return _abe (),true ;};func (_ff CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ff .Wx ,_ff .Wy );
};func (_eed StdFont )Descriptor ()Descriptor {return _eed ._ee };var _db *RuneCharSafeMap ;func (_bdfc *ttfParser )ParseHead ()error {if _gfd :=_bdfc .Seek ("\u0068\u0065\u0061\u0064");_gfd !=nil {return _gfd ;};_bdfc .Skip (3*4);_edfg :=_bdfc .ReadULong ();
if _edfg !=0x5F0F3CF5{_gga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_bdfc );
};_bdfc .Skip (2);_bdfc ._bbbe .UnitsPerEm =_bdfc .ReadUShort ();_bdfc .Skip (2*8);_bdfc ._bbbe .Xmin =_bdfc .ReadShort ();_bdfc ._bbbe .Ymin =_bdfc .ReadShort ();_bdfc ._bbbe .Xmax =_bdfc .ReadShort ();_bdfc ._bbbe .Ymax =_bdfc .ReadShort ();return nil ;
};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_aa :=_dabd .read (name );_aa {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_dabd .write (name ,fnc );for _ ,_fdg :=range aliases {RegisterStdFont (_fdg ,fnc );};};func (_ffd *TtfType )NewEncoder ()_da .TextEncoder {return _da .NewTrueTypeFontEncoder (_ffd .Chars )};var _fb *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");
CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);