//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_b "bytes";_f "encoding/binary";_ge "errors";_a "fmt";_ebc "github.com/unidoc/unipdf/v3/common";_cc "github.com/unidoc/unipdf/v3/core";_gf "github.com/unidoc/unipdf/v3/internal/cmap";_gc "github.com/unidoc/unipdf/v3/internal/textencoding";
_fb "golang.org/x/xerrors";_ae "io";_e "os";_d "regexp";_g "sort";_cg "strings";_eb "sync";);func (_bbe *ttfParser )ParseName ()error {if _fcb :=_bbe .Seek ("\u006e\u0061\u006d\u0065");_fcb !=nil {return _fcb ;};_caf ,_ :=_bbe ._ggca .Seek (0,_ae .SeekCurrent );
_bbe ._cfe .PostScriptName ="";_bbe .Skip (2);_eed :=_bbe .ReadUShort ();_baca :=_bbe .ReadUShort ();for _aef :=uint16 (0);_aef < _eed &&_bbe ._cfe .PostScriptName =="";_aef ++{_bbe .Skip (3*2);_ddab :=_bbe .ReadUShort ();_ecd :=_bbe .ReadUShort ();_ggdd :=_bbe .ReadUShort ();
if _ddab ==6{_bbe ._ggca .Seek (_caf +int64 (_baca )+int64 (_ggdd ),_ae .SeekStart );_dgdb ,_bbd :=_bbe .ReadStr (int (_ecd ));if _bbd !=nil {return _bbd ;};_dgdb =_cg .Replace (_dgdb ,"\u0000","",-1);_aeeb ,_bbd :=_d .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");
if _bbd !=nil {return _bbd ;};_bbe ._cfe .PostScriptName =_aeeb .ReplaceAllString (_dgdb ,"");};};if _bbe ._cfe .PostScriptName ==""{_ebc .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _bec _eb .Once ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_gfg *ttfParser )ParseCmap ()error {var _age int64 ;if _efa :=_gfg .Seek ("\u0063\u006d\u0061\u0070");
_efa !=nil {return _efa ;};_ebc .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_gfg .ReadUShort ();_bagf :=int (_gfg .ReadUShort ());_dcda :=int64 (0);_cbf :=int64 (0);_faef :=int64 (0);for _cadf :=0;_cadf < _bagf ;_cadf ++{_faae :=_gfg .ReadUShort ();
_gfag :=_gfg .ReadUShort ();_age =int64 (_gfg .ReadULong ());if _faae ==3&&_gfag ==1{_cbf =_age ;}else if _faae ==3&&_gfag ==10{_faef =_age ;}else if _faae ==1&&_gfag ==0{_dcda =_age ;};};if _dcda !=0{if _fga :=_gfg .parseCmapVersion (_dcda );_fga !=nil {return _fga ;
};};if _cbf !=0{if _cccb :=_gfg .parseCmapSubtable31 (_cbf );_cccb !=nil {return _cccb ;};};if _faef !=0{if _eagd :=_gfg .parseCmapVersion (_faef );_eagd !=nil {return _eagd ;};};if _cbf ==0&&_dcda ==0&&_faef ==0{_ebc .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};type Font interface{Encoder ()_gc .TextEncoder ;GetRuneMetrics (_eg rune )(CharMetrics ,bool );};func (_gb *fontMap )write (_ffb StdFontName ,_egd func ()StdFont ){_gb .Lock ();defer _gb .Unlock ();_gb ._bf [_ffb ]=_egd ;};var _fad *RuneCharSafeMap ;
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););type FontWeight int ;const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_ged *ttfParser )ReadUShort ()(_ddc uint16 ){_f .Read (_ged ._ggca ,_f .BigEndian ,&_ddc );
return _ddc ;};type GID =_gc .GID ;func (_efab *ttfParser )parseCmapVersion (_bebd int64 )error {_ebc .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_bebd );
if _efab ._cfe .Chars ==nil {_efab ._cfe .Chars =make (map[rune ]GID );};_efab ._ggca .Seek (int64 (_efab ._ecfcf ["\u0063\u006d\u0061\u0070"])+_bebd ,_ae .SeekStart );var _ede ,_cef uint32 ;_beab :=_efab .ReadUShort ();if _beab < 8{_ede =uint32 (_efab .ReadUShort ());
_cef =uint32 (_efab .ReadUShort ());}else {_efab .ReadUShort ();_ede =_efab .ReadULong ();_cef =_efab .ReadULong ();};_ebc .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_beab ,_ede ,_cef );
switch _beab {case 0:return _efab .parseCmapFormat0 ();case 6:return _efab .parseCmapFormat6 ();case 12:return _efab .parseCmapFormat12 ();default:_ebc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_beab );
return nil ;};};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_gc .NewStandardEncoder ());
};type RuneCharSafeMap struct{_gd map[rune ]CharMetrics ;_fd _eb .RWMutex ;};var _ Font =StdFont {};func (_gedg *ttfParser )ReadShort ()(_ddg int16 ){_f .Read (_gedg ._ggca ,_f .BigEndian ,&_ddg );return _ddg ;};func _ffd ()StdFont {_faa :=_gc .NewZapfDingbatsEncoder ();
_dgfg :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_dgfg ,_dd ,_faa );
};var _bbg *RuneCharSafeMap ;var _fec _eb .Once ;func (_feg *TtfType )MakeToUnicode ()*_gf .CMap {_dcg :=make (map[_gf .CharCode ]rune );if len (_feg .GlyphNames )==0{return _gf .NewToUnicodeCMap (_dcg );};for _ffe ,_ecag :=range _feg .Chars {_cec :=_gf .CharCode (_ffe );
_fcg :=_feg .GlyphNames [_ecag ];_ggef ,_ggd :=_gc .GlyphToRune (_fcg );if !_ggd {_ebc .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_ffe ,_fcg );
_ggef =_gc .MissingCodeRune ;};_dcg [_cec ]=_ggef ;};return _gf .NewToUnicodeCMap (_dcg );};type StdFont struct{_ffff Descriptor ;_ca *RuneCharSafeMap ;_fcf _gc .TextEncoder ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_gd :make (map[rune ]CharMetrics ,length )};
};var _bb =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_ggee *ttfParser )ParseHhea ()error {if _edc :=_ggee .Seek ("\u0068\u0068\u0065\u0061");_edc !=nil {return _edc ;};_ggee .Skip (4+15*2);_ggee ._aba =_ggee .ReadUShort ();return nil ;};func (_bed StdFont )ToPdfObject ()_cc .PdfObject {_dg :=_cc .MakeDict ();
_dg .Set ("\u0054\u0079\u0070\u0065",_cc .MakeName ("\u0046\u006f\u006e\u0074"));_dg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cc .MakeName ("\u0054\u0079\u0070e\u0031"));_dg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cc .MakeName (_bed .Name ()));
_dg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bed ._fcf .ToPdfObject ());return _cc .MakeIndirectObject (_dg );};func (_be *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_aee :=MakeRuneCharSafeMap (_be .Length ());_be .Range (func (_gfd rune ,_gfda CharMetrics )(_fc bool ){_aee ._gd [_gfd ]=_gfda ;
return false });return _aee ;};func (_aacf *ttfParser )ParseOS2 ()error {if _acba :=_aacf .Seek ("\u004f\u0053\u002f\u0032");_acba !=nil {return _acba ;};_bcg :=_aacf .ReadUShort ();_aacf .Skip (4*2);_aacf .Skip (11*2+10+4*4+4);_gfb :=_aacf .ReadUShort ();
_aacf ._cfe .Bold =(_gfb &32)!=0;_aacf .Skip (2*2);_aacf ._cfe .TypoAscender =_aacf .ReadShort ();_aacf ._cfe .TypoDescender =_aacf .ReadShort ();if _bcg >=2{_aacf .Skip (3*2+2*4+2);_aacf ._cfe .CapHeight =_aacf .ReadShort ();}else {_aacf ._cfe .CapHeight =0;
};return nil ;};func (_egf *ttfParser )ParseHmtx ()error {if _cgaa :=_egf .Seek ("\u0068\u006d\u0074\u0078");_cgaa !=nil {return _cgaa ;};_egf ._cfe .Widths =make ([]uint16 ,0,8);for _aca :=uint16 (0);_aca < _egf ._aba ;_aca ++{_egf ._cfe .Widths =append (_egf ._cfe .Widths ,_egf .ReadUShort ());
_egf .Skip (2);};if _egf ._aba < _egf ._bfg &&_egf ._aba > 0{_eaga :=_egf ._cfe .Widths [_egf ._aba -1];for _gfae :=_egf ._aba ;_gfae < _egf ._bfg ;_gfae ++{_egf ._cfe .Widths =append (_egf ._cfe .Widths ,_eaga );};};return nil ;};type fontMap struct{_eb .Mutex ;
_bf map[StdFontName ]func ()StdFont ;};func _ddb (_adg map[string ]uint32 )string {var _gbad []string ;for _fda :=range _adg {_gbad =append (_gbad ,_fda );};_g .Slice (_gbad ,func (_beb ,_fgd int )bool {return _adg [_gbad [_beb ]]< _adg [_gbad [_fgd ]]});
_bac :=[]string {_a .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_adg ))};for _ ,_gbg :=range _gbad {_bac =append (_bac ,_a .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gbg ,_adg [_gbg ]));
};return _cg .Join (_bac ,"\u000a");};func init (){RegisterStdFont (CourierName ,_afgc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_gff ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_cad ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_ea ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_beded *ttfParser )Skip (n int ){_beded ._ggca .Seek (int64 (n ),_ae .SeekCurrent )};var _abg =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_ac StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ac ._ca };type ttfParser struct{_cfe TtfType ;_ggca _ae .ReadSeeker ;_ecfcf map[string ]uint32 ;_aba uint16 ;_bfg uint16 ;};func (_fff *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fff ._fd .Lock ();
defer _fff ._fd .Unlock ();_fff ._gd [b ]=r ;};func _cad ()StdFont {_bec .Do (_ggc );_fcc :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_fcc ,_dfb );};func (_fcfg StdFont )Encoder ()_gc .TextEncoder {return _fcfg ._fcf };func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _gc .TextEncoder )StdFont {var _ad rune =0xA0;if _ ,_ab :=metrics .Read (_ad );
!_ab {_fa ,_ :=metrics .Read (0x20);metrics .Write (_ad ,_fa );};return StdFont {_ffff :desc ,_ca :metrics ,_fcf :encoder };};var _dcb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func _dca ()StdFont {_fec .Do (_aag );_cccg :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cccg ,_da );};func _acd ()StdFont {_ecfc .Do (_cgf );_baf :=Descriptor {Name :TimesBoldName ,Family :_gdf ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_baf ,_gcba );};func init (){RegisterStdFont (HelveticaName ,_bdc ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_cce ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_bdf ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_dca ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_bca *ttfParser )ParsePost ()error {if _ecc :=_bca .Seek ("\u0070\u006f\u0073\u0074");_ecc !=nil {return _ecc ;
};_gda :=_bca .Read32Fixed ();_bca ._cfe .ItalicAngle =_bca .Read32Fixed ();_bca ._cfe .UnderlinePosition =_bca .ReadShort ();_bca ._cfe .UnderlineThickness =_bca .ReadShort ();_bca ._cfe .IsFixedPitch =_bca .ReadULong ()!=0;_bca .ReadULong ();_bca .ReadULong ();
_bca .ReadULong ();_bca .ReadULong ();_ebc .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gda );switch _gda {case 1.0:_bca ._cfe .GlyphNames =_ccb ;
case 2.0:_beabe :=int (_bca .ReadUShort ());_eee :=make ([]int ,_beabe );_bca ._cfe .GlyphNames =make ([]GlyphName ,_beabe );_gdd :=-1;for _dea :=0;_dea < _beabe ;_dea ++{_dbd :=int (_bca .ReadUShort ());_eee [_dea ]=_dbd ;if _dbd <=0x7fff&&_dbd > _gdd {_gdd =_dbd ;
};};var _efc []GlyphName ;if _gdd >=len (_ccb ){_efc =make ([]GlyphName ,_gdd -len (_ccb )+1);for _bab :=0;_bab < _gdd -len (_ccb )+1;_bab ++{_aagb :=int (_bca .readByte ());_dceg ,_ggcc :=_bca .ReadStr (_aagb );if _ggcc !=nil {return _ggcc ;};_efc [_bab ]=GlyphName (_dceg );
};};for _gaf :=0;_gaf < _beabe ;_gaf ++{_gbb :=_eee [_gaf ];if _gbb < len (_ccb ){_bca ._cfe .GlyphNames [_gaf ]=_ccb [_gbb ];}else if _gbb >=len (_ccb )&&_gbb <=32767{_bca ._cfe .GlyphNames [_gaf ]=_efc [_gbb -len (_ccb )];}else {_bca ._cfe .GlyphNames [_gaf ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_bad :=make ([]int ,_bca ._bfg );for _bcd :=0;_bcd < len (_bad );_bcd ++{_ebeb :=int (_bca .ReadSByte ());_bad [_bcd ]=_bcd +1+_ebeb ;};_bca ._cfe .GlyphNames =make ([]GlyphName ,len (_bad ));for _ebfg :=0;_ebfg < len (_bca ._cfe .GlyphNames );
_ebfg ++{_bafg :=_ccb [_bad [_ebfg ]];_bca ._cfe .GlyphNames [_ebfg ]=_bafg ;};case 3.0:_ebc .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ebc .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gda );};return nil ;};func (_fadf *ttfParser )ParseMaxp ()error {if _gec :=_fadf .Seek ("\u006d\u0061\u0078\u0070");
_gec !=nil {return _gec ;};_fadf .Skip (4);_fadf ._bfg =_fadf .ReadUShort ();return nil ;};var _dd =&RuneCharSafeMap {_gd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
var _fcfb =&RuneCharSafeMap {_gd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_ef *RuneCharSafeMap )Length ()int {_ef ._fd .RLock ();defer _ef ._fd .RUnlock ();return len (_ef ._gd );};func _ecad ()StdFont {_ecfc .Do (_cgf );_cdd :=Descriptor {Name :TimesItalicName ,Family :_gdf ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_cdd ,_bbg );};var _cge *RuneCharSafeMap ;func (_adc *ttfParser )parseCmapFormat0 ()error {_ggff ,_abge :=_adc .ReadStr (256);if _abge !=nil {return _abge ;};_acae :=[]byte (_ggff );_ebc .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_adc ._cfe .String (),_ggff ,_acae );
for _efg ,_dcdc :=range _acae {_adc ._cfe .Chars [rune (_efg )]=GID (_dcdc );};return nil ;};func _faf ()StdFont {_aec :=_gc .NewSymbolEncoder ();_beg :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_beg ,_fcfb ,_aec );};func (_fce *fontMap )read (_bd StdFontName )(func ()StdFont ,bool ){_fce .Lock ();defer _fce .Unlock ();_fbe ,_ebe :=_fce ._bf [_bd ];return _fbe ,_ebe ;};func _aag (){_ceb =MakeRuneCharSafeMap (len (_bb ));
_adf =MakeRuneCharSafeMap (len (_bb ));for _gdg ,_ed :=range _bb {_ceb .Write (_ed ,CharMetrics {Wx :float64 (_aeea [_gdg ])});_adf .Write (_ed ,CharMetrics {Wx :float64 (_dcb [_gdg ])});};_dgf =_ceb .Copy ();_da =_adf .Copy ();};func (_cga *TtfType )NewEncoder ()_gc .TextEncoder {return _gc .NewTrueTypeFontEncoder (_cga .Chars )};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func init (){RegisterStdFont (SymbolName ,_faf ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_ffd );};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ecf :=_fcd .read (name );_ecf {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_fcd .write (name ,fnc );for _ ,_gba :=range aliases {RegisterStdFont (_gba ,fnc );};};var _gag =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func IsStdFont (name StdFontName )bool {_ ,_ga :=_fcd .read (name );return _ga };func _cgf (){_db =MakeRuneCharSafeMap (len (_bb ));_gcba =MakeRuneCharSafeMap (len (_bb ));_gcf =MakeRuneCharSafeMap (len (_bb ));_bbg =MakeRuneCharSafeMap (len (_bb ));for _ecadc ,_aaf :=range _bb {_db .Write (_aaf ,CharMetrics {Wx :float64 (_bcc [_ecadc ])});
_gcba .Write (_aaf ,CharMetrics {Wx :float64 (_gfa [_ecadc ])});_gcf .Write (_aaf ,CharMetrics {Wx :float64 (_abg [_ecadc ])});_bbg .Write (_aaf ,CharMetrics {Wx :float64 (_gag [_ecadc ])});};};var _da *RuneCharSafeMap ;func init (){RegisterStdFont (TimesRomanName ,_gfc ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_acd ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_ecad ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_caga ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _bcc =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _caga ()StdFont {_ecfc .Do (_cgf );_fadd :=Descriptor {Name :TimesBoldItalicName ,Family :_gdf ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_fadd ,_gcf );};var _gbe *RuneCharSafeMap ;func (_fgc *ttfParser )parseCmapFormat6 ()error {_ccd :=int (_fgc .ReadUShort ());_eage :=int (_fgc .ReadUShort ());_ebc .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_fgc ._cfe .String (),_ccd ,_eage );
for _cgb :=0;_cgb < _eage ;_cgb ++{_ega :=GID (_fgc .ReadUShort ());_fgc ._cfe .Chars [rune (_cgb +_ccd )]=_ega ;};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;
TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func (_cbb StdFont )Descriptor ()Descriptor {return _cbb ._ffff };func (_ff *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_ff ._fd .RLock ();
defer _ff ._fd .RUnlock ();_df ,_ccc :=_ff ._gd [b ];return _df ,_ccc ;};func (_cf CharMetrics )String ()string {return _a .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cf .Wx ,_cf .Wy );};func _ggc (){const _aga =600;_gbe =MakeRuneCharSafeMap (len (_bb ));
for _ ,_ee :=range _bb {_gbe .Write (_ee ,CharMetrics {Wx :_aga });};_fad =_gbe .Copy ();_cge =_gbe .Copy ();_dfb =_gbe .Copy ();};var _ecfc _eb .Once ;func _afgc ()StdFont {_bec .Do (_ggc );_bag :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bag ,_gbe );};var _aeea =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _gcf *RuneCharSafeMap ;var _gcba *RuneCharSafeMap ;type CharMetrics struct{Wx float64 ;Wy float64 ;};func _bdf ()StdFont {_fec .Do (_aag );_ce :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ce ,_dgf );};func (_gef StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_afg ,_fdb :=_gef ._ca .Read (r );return _afg ,_fdb ;};var _dfb *RuneCharSafeMap ;func (_gbc *TtfType )MakeEncoder ()(_gc .SimpleEncoder ,error ){_cgfa :=make (map[_gc .CharCode ]GlyphName );
for _fac :=_gc .CharCode (0);_fac <=256;_fac ++{_bcca :=rune (_fac );_ffdb ,_ffc :=_gbc .Chars [_bcca ];if !_ffc {continue ;};var _edb GlyphName ;if int (_ffdb )>=0&&int (_ffdb )< len (_gbc .GlyphNames ){_edb =_gbc .GlyphNames [_ffdb ];}else {_gge :=rune (_ffdb );
if _dcd ,_dfe :=_gc .RuneToGlyph (_gge );_dfe {_edb =_dcd ;};};if _edb !=""{_cgfa [_fac ]=_edb ;};};if len (_cgfa )==0{_ebc .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gbc ,_gbc .Chars );
};return _gc .NewCustomSimpleTextEncoder (_cgfa ,nil );};func (_cd StdFont )Name ()string {return string (_cd ._ffff .Name )};func TtfParseFile (fileStr string )(TtfType ,error ){_ece ,_aac :=_e .Open (fileStr );if _aac !=nil {return TtfType {},_aac ;};
defer _ece .Close ();return TtfParse (_ece );};var _ceb *RuneCharSafeMap ;func (_cgg *ttfParser )Parse ()(TtfType ,error ){_afd ,_bff :=_cgg .ReadStr (4);if _bff !=nil {return TtfType {},_bff ;};if _afd =="\u004f\u0054\u0054\u004f"{return TtfType {},_fb .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cc .ErrNotSupported );
};if _afd !="\u0000\u0001\u0000\u0000"&&_afd !="\u0074\u0072\u0075\u0065"{_ebc .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_afd );
};_gcd :=int (_cgg .ReadUShort ());_cgg .Skip (3*2);_cgg ._ecfcf =make (map[string ]uint32 );var _fge string ;for _fegg :=0;_fegg < _gcd ;_fegg ++{_fge ,_bff =_cgg .ReadStr (4);if _bff !=nil {return TtfType {},_bff ;};_cgg .Skip (4);_aacc :=_cgg .ReadULong ();
_cgg .Skip (4);_cgg ._ecfcf [_fge ]=_aacc ;};_ebc .Log .Trace (_ddb (_cgg ._ecfcf ));if _bff =_cgg .ParseComponents ();_bff !=nil {return TtfType {},_bff ;};return _cgg ._cfe ,nil ;};func (_adb *ttfParser )Seek (tag string )error {_abged ,_bede :=_adb ._ecfcf [tag ];
if !_bede {return _a .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_adb ._ggca .Seek (int64 (_abged ),_ae .SeekStart );return nil ;};func (_fag *ttfParser )parseCmapSubtable31 (_gefb int64 )error {_bfbc :=make ([]rune ,0,8);
_ead :=make ([]rune ,0,8);_abgf :=make ([]int16 ,0,8);_acbc :=make ([]uint16 ,0,8);_fag ._cfe .Chars =make (map[rune ]GID );_fag ._ggca .Seek (int64 (_fag ._ecfcf ["\u0063\u006d\u0061\u0070"])+_gefb ,_ae .SeekStart );_dde :=_fag .ReadUShort ();if _dde !=4{return _fb .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_dde ,_cc .ErrNotSupported );
};_fag .Skip (2*2);_cfc :=int (_fag .ReadUShort ()/2);_fag .Skip (3*2);for _cbc :=0;_cbc < _cfc ;_cbc ++{_ead =append (_ead ,rune (_fag .ReadUShort ()));};_fag .Skip (2);for _febd :=0;_febd < _cfc ;_febd ++{_bfbc =append (_bfbc ,rune (_fag .ReadUShort ()));
};for _gfca :=0;_gfca < _cfc ;_gfca ++{_abgf =append (_abgf ,_fag .ReadShort ());};_bega ,_ :=_fag ._ggca .Seek (int64 (0),_ae .SeekCurrent );for _gbac :=0;_gbac < _cfc ;_gbac ++{_acbc =append (_acbc ,_fag .ReadUShort ());};for _gcbb :=0;_gcbb < _cfc ;
_gcbb ++{_egb :=_bfbc [_gcbb ];_bedd :=_ead [_gcbb ];_bgf :=_abgf [_gcbb ];_gfce :=_acbc [_gcbb ];if _gfce > 0{_fag ._ggca .Seek (_bega +2*int64 (_gcbb )+int64 (_gfce ),_ae .SeekStart );};for _ggf :=_egb ;_ggf <=_bedd ;_ggf ++{if _ggf ==0xFFFF{break ;};
var _gbab int32 ;if _gfce > 0{_gbab =int32 (_fag .ReadUShort ());if _gbab > 0{_gbab +=int32 (_bgf );};}else {_gbab =_ggf +int32 (_bgf );};if _gbab >=65536{_gbab -=65536;};if _gbab > 0{_fag ._cfe .Chars [_ggf ]=GID (_gbab );};};};return nil ;};type GlyphName =_gc .GlyphName ;
func (_dda *ttfParser )parseCmapSubtable10 (_agb int64 )error {if _dda ._cfe .Chars ==nil {_dda ._cfe .Chars =make (map[rune ]GID );};_dda ._ggca .Seek (int64 (_dda ._ecfcf ["\u0063\u006d\u0061\u0070"])+_agb ,_ae .SeekStart );var _cac ,_ecfd uint32 ;_cdc :=_dda .ReadUShort ();
if _cdc < 8{_cac =uint32 (_dda .ReadUShort ());_ecfd =uint32 (_dda .ReadUShort ());}else {_dda .ReadUShort ();_cac =_dda .ReadULong ();_ecfd =_dda .ReadULong ();};_ebc .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cdc ,_cac ,_ecfd );
if _cdc !=0{return _ge .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fdg ,_eff :=_dda .ReadStr (256);if _eff !=nil {return _eff ;
};_ffeg :=[]byte (_fdg );for _cagb ,_gagg :=range _ffeg {_dda ._cfe .Chars [rune (_cagb )]=GID (_gagg );if _gagg !=0{_a .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_cagb ,_gagg ,rune (_gagg ));
};};return nil ;};func (_bbec *ttfParser )readByte ()(_dcee uint8 ){_f .Read (_bbec ._ggca ,_f .BigEndian ,&_dcee );return _dcee ;};func _bdc ()StdFont {_fec .Do (_aag );_cag :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cag ,_ceb );};func (_gdb *ttfParser )Read32Fixed ()float64 {_bfd :=float64 (_gdb .ReadShort ());_gffe :=float64 (_gdb .ReadUShort ())/65536.0;return _bfd +_gffe ;};func _cce ()StdFont {_fec .Do (_aag );_ggb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_ggb ,_adf );};func (_bdg *ttfParser )ReadSByte ()(_bdcf int8 ){_f .Read (_bdg ._ggca ,_f .BigEndian ,&_bdcf );return _bdcf ;};func _gfc ()StdFont {_ecfc .Do (_cgf );_eca :=Descriptor {Name :TimesRomanName ,Family :_gdf ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_eca ,_db );};func (_acde *ttfParser )ReadULong ()(_fbc uint32 ){_f .Read (_acde ._ggca ,_f .BigEndian ,&_fbc );return _fbc ;};func (_dceb *ttfParser )ParseComponents ()error {if _gfdd :=_dceb .ParseHead ();_gfdd !=nil {return _gfdd ;
};if _ffed :=_dceb .ParseHhea ();_ffed !=nil {return _ffed ;};if _fea :=_dceb .ParseMaxp ();_fea !=nil {return _fea ;};if _aacce :=_dceb .ParseHmtx ();_aacce !=nil {return _aacce ;};if _ ,_ceg :=_dceb ._ecfcf ["\u006e\u0061\u006d\u0065"];_ceg {if _bbc :=_dceb .ParseName ();
_bbc !=nil {return _bbc ;};};if _ ,_eaa :=_dceb ._ecfcf ["\u004f\u0053\u002f\u0032"];_eaa {if _eag :=_dceb .ParseOS2 ();_eag !=nil {return _eag ;};};if _ ,_becg :=_dceb ._ecfcf ["\u0070\u006f\u0073\u0074"];_becg {if _fcgc :=_dceb .ParsePost ();_fcgc !=nil {return _fcgc ;
};};if _ ,_adfb :=_dceb ._ecfcf ["\u0063\u006d\u0061\u0070"];_adfb {if _bbb :=_dceb .ParseCmap ();_bbb !=nil {return _bbb ;};};return nil ;};type StdFontName string ;var _adf *RuneCharSafeMap ;func (_fccd *TtfType )String ()string {return _a .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_fccd .PostScriptName ,_fccd .UnitsPerEm ,_fccd .Bold ,_fccd .ItalicAngle ,_fccd .CapHeight ,len (_fccd .Chars ),len (_fccd .GlyphNames ));
};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_dc ,_af :=_fcd .read (name );if !_af {return StdFont {},false ;};return _dc (),true ;};const (_gdf ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);var _fcd =&fontMap {_bf :make (map[StdFontName ]func ()StdFont )};var _dgf *RuneCharSafeMap ;var _db *RuneCharSafeMap ;func _gff ()StdFont {_bec .Do (_ggc );_ggg :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ggg ,_fad );};func (_gg *RuneCharSafeMap )Range (f func (_ec rune ,_de CharMetrics )(_aa bool )){_gg ._fd .RLock ();defer _gg ._fd .RUnlock ();for _ba ,_dee :=range _gg ._gd {if f (_ba ,_dee ){break ;};};};func _ea ()StdFont {_bec .Do (_ggc );
_gee :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_gee ,_cge );
};var _ccb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func TtfParse (r _ae .ReadSeeker )(TtfType ,error ){_feb :=&ttfParser {_ggca :r };return _feb .Parse ()};func (_bgc *ttfParser )parseCmapFormat12 ()error {_ecadf :=_bgc .ReadULong ();_ebc .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_bgc ._cfe .String (),_ecadf );
for _cege :=uint32 (0);_cege < _ecadf ;_cege ++{_eeg :=_bgc .ReadULong ();_fdf :=_bgc .ReadULong ();_bdcc :=_bgc .ReadULong ();if _eeg > 0x0010FFFF||(0xD800<=_eeg &&_eeg <=0xDFFF){return _ge .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fdf < _eeg ||_fdf > 0x0010FFFF||(0xD800<=_fdf &&_fdf <=0xDFFF){return _ge .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _cceb :=_eeg ;_cceb <=_fdf ;
_cceb ++{if _cceb > 0x10FFFF{_ebc .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_bgc ._cfe .Chars [rune (_cceb )]=GID (_bdcc );_bdcc ++;};};return nil ;};func NewFontFile2FromPdfObject (obj _cc .PdfObject )(TtfType ,error ){obj =_cc .TraceToDirectObject (obj );_gbd ,_cgfb :=obj .(*_cc .PdfObjectStream );if !_cgfb {_ebc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_cc .ErrTypeError ;};_fg ,_bg :=_cc .DecodeStream (_gbd );if _bg !=nil {return TtfType {},_bg ;};_daf :=ttfParser {_ggca :_b .NewReader (_fg )};return _daf .Parse ();};func (_bdb *ttfParser )ReadStr (length int )(string ,error ){_aae :=make ([]byte ,length );
_badb ,_bdca :=_bdb ._ggca .Read (_aae );if _bdca !=nil {return "",_bdca ;}else if _badb !=length {return "",_a .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_aae ),nil ;};var _gfa =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_acb *ttfParser )ParseHead ()error {if _fdd :=_acb .Seek ("\u0068\u0065\u0061\u0064");_fdd !=nil {return _fdd ;};_acb .Skip (3*4);_geg :=_acb .ReadULong ();if _geg !=0x5F0F3CF5{_ebc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_acb );
};_acb .Skip (2);_acb ._cfe .UnitsPerEm =_acb .ReadUShort ();_acb .Skip (2*8);_acb ._cfe .Xmin =_acb .ReadShort ();_acb ._cfe .Ymin =_acb .ReadShort ();_acb ._cfe .Xmax =_acb .ReadShort ();_acb ._cfe .Ymax =_acb .ReadShort ();return nil ;};