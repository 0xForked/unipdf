//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_d "bytes";_e "encoding/binary";_a "errors";_c "fmt";_fb "github.com/unidoc/unipdf/v3/common";_eg "github.com/unidoc/unipdf/v3/core";_fc "github.com/unidoc/unipdf/v3/internal/cmap";_cf "github.com/unidoc/unipdf/v3/internal/textencoding";
_fe "golang.org/x/xerrors";_cb "io";_cd "os";_gg "regexp";_f "sort";_ce "strings";_gb "sync";);func (_adg *ttfParser )ParseCmap ()error {var _ede int64 ;if _bcg :=_adg .Seek ("\u0063\u006d\u0061\u0070");_bcg !=nil {return _bcg ;};_fb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");
_adg .ReadUShort ();_gcf :=int (_adg .ReadUShort ());_gag :=int64 (0);_bdf :=int64 (0);_badd :=int64 (0);for _bbd :=0;_bbd < _gcf ;_bbd ++{_cdf :=_adg .ReadUShort ();_dca :=_adg .ReadUShort ();_ede =int64 (_adg .ReadULong ());if _cdf ==3&&_dca ==1{_bdf =_ede ;
}else if _cdf ==3&&_dca ==10{_badd =_ede ;}else if _cdf ==1&&_dca ==0{_gag =_ede ;};};if _gag !=0{if _agc :=_adg .parseCmapVersion (_gag );_agc !=nil {return _agc ;};};if _bdf !=0{if _gagd :=_adg .parseCmapSubtable31 (_bdf );_gagd !=nil {return _gagd ;
};};if _badd !=0{if _bfa :=_adg .parseCmapVersion (_badd );_bfa !=nil {return _bfa ;};};if _bdf ==0&&_gag ==0&&_badd ==0{_fb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_ebd *ttfParser )ReadStr (length int )(string ,error ){_adgb :=make ([]byte ,length );_dggb ,_eggc :=_ebd ._ffcdc .Read (_adgb );if _eggc !=nil {return "",_eggc ;}else if _dggb !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_adgb ),nil ;};func _ef ()StdFont {_ade .Do (_fca );_faa :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_faa ,_deeg );};type StdFont struct{_gge Descriptor ;_ad *RuneCharSafeMap ;_gfd _cf .TextEncoder ;};func (_fba StdFont )ToPdfObject ()_eg .PdfObject {_geea :=_eg .MakeDict ();_geea .Set ("\u0054\u0079\u0070\u0065",_eg .MakeName ("\u0046\u006f\u006e\u0074"));
_geea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eg .MakeName ("\u0054\u0079\u0070e\u0031"));_geea .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_eg .MakeName (_fba .Name ()));_geea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fba ._gfd .ToPdfObject ());
return _eg .MakeIndirectObject (_geea );};type FontWeight int ;func (_ae *RuneCharSafeMap )Range (f func (_bf rune ,_ed CharMetrics )(_aed bool )){_ae ._af .RLock ();defer _ae ._af .RUnlock ();for _egg ,_aa :=range _ae ._cfe {if f (_egg ,_aa ){break ;};
};};func _ee ()StdFont {_eef .Do (_gd );_fgf :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fgf ,_bbg );};func (_fbd *RuneCharSafeMap )Length ()int {_fbd ._af .RLock ();defer _fbd ._af .RUnlock ();return len (_fbd ._cfe );};func _dga ()StdFont {_ceg .Do (_gffc );_ca :=Descriptor {Name :TimesRomanName ,Family :_aae ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ca ,_bgf );};var _bbg *RuneCharSafeMap ;func _eda ()StdFont {_ade .Do (_fca );_bb :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bb ,_gacf );};var _adf =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _ggad =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_adb *ttfParser )parseCmapFormat6 ()error {_abef :=int (_adb .ReadUShort ());_cee :=int (_adb .ReadUShort ());_fb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_adb ._fefe .String (),_abef ,_cee );
for _ddfg :=0;_ddfg < _cee ;_ddfg ++{_fga :=GID (_adb .ReadUShort ());_adb ._fefe .Chars [rune (_ddfg +_abef )]=_fga ;};return nil ;};type ttfParser struct{_fefe TtfType ;_ffcdc _cb .ReadSeeker ;_ggb map[string ]uint32 ;_ebb uint16 ;_ffcb uint16 ;};func (_aaa *ttfParser )parseCmapFormat12 ()error {_fffe :=_aaa .ReadULong ();
_fb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_aaa ._fefe .String (),_fffe );for _gbcf :=uint32 (0);_gbcf < _fffe ;
_gbcf ++{_fag :=_aaa .ReadULong ();_ebbd :=_aaa .ReadULong ();_ffcdg :=_aaa .ReadULong ();if _fag > 0x0010FFFF||(0xD800<=_fag &&_fag <=0xDFFF){return _a .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _ebbd < _fag ||_ebbd > 0x0010FFFF||(0xD800<=_ebbd &&_ebbd <=0xDFFF){return _a .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _cdg :=_fag ;_cdg <=_ebbd ;
_cdg ++{if _cdg > 0x10FFFF{_fb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_aaa ._fefe .Chars [rune (_cdg )]=GID (_ffcdg );_ffcdg ++;};};return nil ;};func _fg ()StdFont {_ade .Do (_fca );_bg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bg ,_bad );};var _aff =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func (_gfb *ttfParser )ParseHead ()error {if _cbc :=_gfb .Seek ("\u0068\u0065\u0061\u0064");_cbc !=nil {return _cbc ;
};_gfb .Skip (3*4);_ggaa :=_gfb .ReadULong ();if _ggaa !=0x5F0F3CF5{_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_gfb );
};_gfb .Skip (2);_gfb ._fefe .UnitsPerEm =_gfb .ReadUShort ();_gfb .Skip (2*8);_gfb ._fefe .Xmin =_gfb .ReadShort ();_gfb ._fefe .Ymin =_gfb .ReadShort ();_gfb ._fefe .Xmax =_gfb .ReadShort ();_gfb ._fefe .Ymax =_gfb .ReadShort ();return nil ;};func (_b *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_be :=MakeRuneCharSafeMap (_b .Length ());
_b .Range (func (_db rune ,_gf CharMetrics )(_gff bool ){_be ._cfe [_db ]=_gf ;return false });return _be ;};func _cca ()StdFont {_eef .Do (_gd );_cfd :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cfd ,_fgb );};func (_cc *fontMap )write (_dg StdFontName ,_de func ()StdFont ){_cc .Lock ();defer _cc .Unlock ();_cc ._ddf [_dg ]=_de ;};func IsStdFont (name StdFontName )bool {_ ,_ba :=_ddc .read (name );return _ba };var _cgb *RuneCharSafeMap ;
func (_ada *ttfParser )ParseMaxp ()error {if _aca :=_ada .Seek ("\u006d\u0061\u0078\u0070");_aca !=nil {return _aca ;};_ada .Skip (4);_ada ._ffcb =_ada .ReadUShort ();return nil ;};func (_ffg *ttfParser )parseCmapSubtable10 (_fdd int64 )error {if _ffg ._fefe .Chars ==nil {_ffg ._fefe .Chars =make (map[rune ]GID );
};_ffg ._ffcdc .Seek (int64 (_ffg ._ggb ["\u0063\u006d\u0061\u0070"])+_fdd ,_cb .SeekStart );var _gfgb ,_agd uint32 ;_dcd :=_ffg .ReadUShort ();if _dcd < 8{_gfgb =uint32 (_ffg .ReadUShort ());_agd =uint32 (_ffg .ReadUShort ());}else {_ffg .ReadUShort ();
_gfgb =_ffg .ReadULong ();_agd =_ffg .ReadULong ();};_fb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_dcd ,_gfgb ,_agd );
if _dcd !=0{return _a .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ccb ,_ged :=_ffg .ReadStr (256);if _ged !=nil {return _ged ;
};_deed :=[]byte (_ccb );for _aef ,_cba :=range _deed {_ffg ._fefe .Chars [rune (_aef )]=GID (_cba );if _cba !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_aef ,_cba ,rune (_cba ));
};};return nil ;};func (_aedg *ttfParser )ReadSByte ()(_aaaa int8 ){_e .Read (_aedg ._ffcdc ,_e .BigEndian ,&_aaaa );return _aaaa ;};func (_eeb *TtfType )MakeEncoder ()(_cf .SimpleEncoder ,error ){_bdg :=make (map[_cf .CharCode ]GlyphName );for _fad :=_cf .CharCode (0);
_fad <=256;_fad ++{_fade :=rune (_fad );_fef ,_bbge :=_eeb .Chars [_fade ];if !_bbge {continue ;};var _dfe GlyphName ;if int (_fef )>=0&&int (_fef )< len (_eeb .GlyphNames ){_dfe =_eeb .GlyphNames [_fef ];}else {_ac :=rune (_fef );if _cdd ,_fda :=_cf .RuneToGlyph (_ac );
_fda {_dfe =_cdd ;};};if _dfe !=""{_bdg [_fad ]=_dfe ;};};if len (_bdg )==0{_fb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_eeb ,_eeb .Chars );
};return _cf .NewCustomSimpleTextEncoder (_bdg ,nil );};type StdFontName string ;var _bad *RuneCharSafeMap ;func init (){RegisterStdFont (CourierName ,_eda ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_ef ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_fg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_feg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_fbg *ttfParser )ReadShort ()(_dfga int16 ){_e .Read (_fbg ._ffcdc ,_e .BigEndian ,&_dfga );
return _dfga ;};var _fcb =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _gffc (){_bgf =MakeRuneCharSafeMap (len (_bfg ));_cfda =MakeRuneCharSafeMap (len (_bfg ));_cgb =MakeRuneCharSafeMap (len (_bfg ));_ccg =MakeRuneCharSafeMap (len (_bfg ));for _afff ,_dfd :=range _bfg {_bgf .Write (_dfd ,CharMetrics {Wx :float64 (_bed [_afff ])});
_cfda .Write (_dfd ,CharMetrics {Wx :float64 (_fcb [_afff ])});_cgb .Write (_dfd ,CharMetrics {Wx :float64 (_ggad [_afff ])});_ccg .Write (_dfd ,CharMetrics {Wx :float64 (_adf [_afff ])});};};func (_ec StdFont )Name ()string {return string (_ec ._gge .Name )};
var _ccg *RuneCharSafeMap ;func _ecc ()StdFont {_ceg .Do (_gffc );_edc :=Descriptor {Name :TimesBoldItalicName ,Family :_aae ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_edc ,_cgb );};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _cf .TextEncoder )StdFont {var _dcg rune =0xA0;if _ ,_afc :=metrics .Read (_dcg );!_afc {_fa ,_ :=metrics .Read (0x20);metrics .Write (_dcg ,_fa );
};return StdFont {_gge :desc ,_ad :metrics ,_gfd :encoder };};func (_ggca *ttfParser )parseCmapVersion (_ffgf int64 )error {_fb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_ffgf );
if _ggca ._fefe .Chars ==nil {_ggca ._fefe .Chars =make (map[rune ]GID );};_ggca ._ffcdc .Seek (int64 (_ggca ._ggb ["\u0063\u006d\u0061\u0070"])+_ffgf ,_cb .SeekStart );var _cgef ,_aab uint32 ;_gcb :=_ggca .ReadUShort ();if _gcb < 8{_cgef =uint32 (_ggca .ReadUShort ());
_aab =uint32 (_ggca .ReadUShort ());}else {_ggca .ReadUShort ();_cgef =_ggca .ReadULong ();_aab =_ggca .ReadULong ();};_fb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_gcb ,_cgef ,_aab );
switch _gcb {case 0:return _ggca .parseCmapFormat0 ();case 6:return _ggca .parseCmapFormat6 ();case 12:return _ggca .parseCmapFormat12 ();default:_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_gcb );
return nil ;};};func _fca (){const _gfda =600;_gacf =MakeRuneCharSafeMap (len (_bfg ));for _ ,_cda :=range _bfg {_gacf .Write (_cda ,CharMetrics {Wx :_gfda });};_deeg =_gacf .Copy ();_fbe =_gacf .Copy ();_bad =_gacf .Copy ();};func _ea ()StdFont {_dbc :=_cf .NewZapfDingbatsEncoder ();
_aec :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_aec ,_dbcb ,_dbc );
};func (_gbc *ttfParser )parseCmapSubtable31 (_bfc int64 )error {_ceb :=make ([]rune ,0,8);_bae :=make ([]rune ,0,8);_cge :=make ([]int16 ,0,8);_ag :=make ([]uint16 ,0,8);_gbc ._fefe .Chars =make (map[rune ]GID );_gbc ._ffcdc .Seek (int64 (_gbc ._ggb ["\u0063\u006d\u0061\u0070"])+_bfc ,_cb .SeekStart );
_adc :=_gbc .ReadUShort ();if _adc !=4{return _fe .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_adc ,_eg .ErrNotSupported );
};_gbc .Skip (2*2);_ecf :=int (_gbc .ReadUShort ()/2);_gbc .Skip (3*2);for _eea :=0;_eea < _ecf ;_eea ++{_bae =append (_bae ,rune (_gbc .ReadUShort ()));};_gbc .Skip (2);for _fdad :=0;_fdad < _ecf ;_fdad ++{_ceb =append (_ceb ,rune (_gbc .ReadUShort ()));
};for _abe :=0;_abe < _ecf ;_abe ++{_cge =append (_cge ,_gbc .ReadShort ());};_gdba ,_ :=_gbc ._ffcdc .Seek (int64 (0),_cb .SeekCurrent );for _fcg :=0;_fcg < _ecf ;_fcg ++{_ag =append (_ag ,_gbc .ReadUShort ());};for _egd :=0;_egd < _ecf ;_egd ++{_caag :=_ceb [_egd ];
_affd :=_bae [_egd ];_eaa :=_cge [_egd ];_ebc :=_ag [_egd ];if _ebc > 0{_gbc ._ffcdc .Seek (_gdba +2*int64 (_egd )+int64 (_ebc ),_cb .SeekStart );};for _da :=_caag ;_da <=_affd ;_da ++{if _da ==0xFFFF{break ;};var _efab int32 ;if _ebc > 0{_efab =int32 (_gbc .ReadUShort ());
if _efab > 0{_efab +=int32 (_eaa );};}else {_efab =_da +int32 (_eaa );};if _efab >=65536{_efab -=65536;};if _efab > 0{_gbc ._fefe .Chars [_da ]=GID (_efab );};};};return nil ;};func init (){RegisterStdFont (HelveticaName ,_cca ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_beb ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_gc ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_ee ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};var _fbe *RuneCharSafeMap ;func (_dd CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_dd .Wx ,_dd .Wy );};func (_gee StdFont )GetMetricsTable ()*RuneCharSafeMap {return _gee ._ad };type GlyphName =_cf .GlyphName ;
func (_eb StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gfg ,_ge :=_eb ._ad .Read (r );return _gfg ,_ge ;};func (_cdc *ttfParser )readByte ()(_gadb uint8 ){_e .Read (_cdc ._ffcdc ,_e .BigEndian ,&_gadb );return _gadb ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _bgf *RuneCharSafeMap ;func _beb ()StdFont {_eef .Do (_gd );_bgb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_bgb ,_gbg );};type GID =_cf .GID ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;
StemH float64 ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func init (){RegisterStdFont (SymbolName ,_cg ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_ea );};func _abf ()StdFont {_ceg .Do (_gffc );_fcab :=Descriptor {Name :TimesBoldName ,Family :_aae ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_fcab ,_cfda );};var _fcf *RuneCharSafeMap ;func (_fgbg *ttfParser )ParseComponents ()error {if _bac :=_fgbg .ParseHead ();_bac !=nil {return _bac ;};if _dec :=_fgbg .ParseHhea ();_dec !=nil {return _dec ;};if _gcg :=_fgbg .ParseMaxp ();
_gcg !=nil {return _gcg ;};if _dfg :=_fgbg .ParseHmtx ();_dfg !=nil {return _dfg ;};if _ ,_eabe :=_fgbg ._ggb ["\u006e\u0061\u006d\u0065"];_eabe {if _eff :=_fgbg .ParseName ();_eff !=nil {return _eff ;};};if _ ,_acg :=_fgbg ._ggb ["\u004f\u0053\u002f\u0032"];
_acg {if _abfc :=_fgbg .ParseOS2 ();_abfc !=nil {return _abfc ;};};if _ ,_gab :=_fgbg ._ggb ["\u0070\u006f\u0073\u0074"];_gab {if _cgbc :=_fgbg .ParsePost ();_cgbc !=nil {return _cgbc ;};};if _ ,_ccga :=_fgbg ._ggb ["\u0063\u006d\u0061\u0070"];_ccga {if _gffb :=_fgbg .ParseCmap ();
_gffb !=nil {return _gffb ;};};return nil ;};func _feg ()StdFont {_ade .Do (_fca );_efa :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_efa ,_fbe );};func _baa ()StdFont {_ceg .Do (_gffc );_gga :=Descriptor {Name :TimesItalicName ,Family :_aae ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_gga ,_ccg );};func init (){RegisterStdFont (TimesRomanName ,_dga ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_abf ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_baa ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_ecc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func NewFontFile2FromPdfObject (obj _eg .PdfObject )(TtfType ,error ){obj =_eg .TraceToDirectObject (obj );_eab ,_ega :=obj .(*_eg .PdfObjectStream );if !_ega {_fb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_eg .ErrTypeError ;};_ggbc ,_add :=_eg .DecodeStream (_eab );if _add !=nil {return TtfType {},_add ;};_geae :=ttfParser {_ffcdc :_d .NewReader (_ggbc )};return _geae .Parse ();};var _fgb *RuneCharSafeMap ;func (_ab *fontMap )read (_fd StdFontName )(func ()StdFont ,bool ){_ab .Lock ();
defer _ab .Unlock ();_ga ,_gba :=_ab ._ddf [_fd ];return _ga ,_gba ;};var _bfg =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _baf =&RuneCharSafeMap {_cfe :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_ddd *TtfType )NewEncoder ()_cf .TextEncoder {return _cf .NewTrueTypeFontEncoder (_ddd .Chars )};type Font interface{Encoder ()_cf .TextEncoder ;GetRuneMetrics (_ff rune )(CharMetrics ,bool );};func (_bge *ttfParser )ReadULong ()(_fcd uint32 ){_e .Read (_bge ._ffcdc ,_e .BigEndian ,&_fcd );
return _fcd ;};func (_cdaf *ttfParser )parseCmapFormat0 ()error {_gbf ,_egab :=_cdaf .ReadStr (256);if _egab !=nil {return _egab ;};_bdd :=[]byte (_gbf );_fb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_cdaf ._fefe .String (),_gbf ,_bdd );
for _gabf ,_cfa :=range _bdd {_cdaf ._fefe .Chars [rune (_gabf )]=GID (_cfa );};return nil ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_cf .NewStandardEncoder ());};func (_afg *ttfParser )Parse ()(TtfType ,error ){_beg ,_cdac :=_afg .ReadStr (4);
if _cdac !=nil {return TtfType {},_cdac ;};if _beg =="\u004f\u0054\u0054\u004f"{return TtfType {},_fe .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_eg .ErrNotSupported );
};if _beg !="\u0000\u0001\u0000\u0000"&&_beg !="\u0074\u0072\u0075\u0065"{_fb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_beg );
};_caa :=int (_afg .ReadUShort ());_afg .Skip (3*2);_afg ._ggb =make (map[string ]uint32 );var _dddc string ;for _gdf :=0;_gdf < _caa ;_gdf ++{_dddc ,_cdac =_afg .ReadStr (4);if _cdac !=nil {return TtfType {},_cdac ;};_afg .Skip (4);_edde :=_afg .ReadULong ();
_afg .Skip (4);_afg ._ggb [_dddc ]=_edde ;};_fb .Log .Trace (_eeg (_afg ._ggb ));if _cdac =_afg .ParseComponents ();_cdac !=nil {return TtfType {},_cdac ;};return _afg ._fefe ,nil ;};func (_dba StdFont )Descriptor ()Descriptor {return _dba ._gge };var _eef _gb .Once ;
var _ade _gb .Once ;type RuneCharSafeMap struct{_cfe map[rune ]CharMetrics ;_af _gb .RWMutex ;};const (_aae ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_fbeb *ttfParser )ParseName ()error {if _age :=_fbeb .Seek ("\u006e\u0061\u006d\u0065");
_age !=nil {return _age ;};_afe ,_ :=_fbeb ._ffcdc .Seek (0,_cb .SeekCurrent );_fbeb ._fefe .PostScriptName ="";_fbeb .Skip (2);_gef :=_fbeb .ReadUShort ();_dggg :=_fbeb .ReadUShort ();for _ccag :=uint16 (0);_ccag < _gef &&_fbeb ._fefe .PostScriptName =="";
_ccag ++{_fbeb .Skip (3*2);_ebe :=_fbeb .ReadUShort ();_dge :=_fbeb .ReadUShort ();_aeff :=_fbeb .ReadUShort ();if _ebe ==6{_fbeb ._ffcdc .Seek (_afe +int64 (_dggg )+int64 (_aeff ),_cb .SeekStart );_ded ,_ecbb :=_fbeb .ReadStr (int (_dge ));if _ecbb !=nil {return _ecbb ;
};_ded =_ce .Replace (_ded ,"\u0000","",-1);_cbb ,_ecbb :=_gg .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _ecbb !=nil {return _ecbb ;};_fbeb ._fefe .PostScriptName =_cbb .ReplaceAllString (_ded ,"");};
};if _fbeb ._fefe .PostScriptName ==""{_fb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_ecb *ttfParser )ParseHhea ()error {if _ggc :=_ecb .Seek ("\u0068\u0068\u0065\u0061");_ggc !=nil {return _ggc ;};_ecb .Skip (4+15*2);_ecb ._ebb =_ecb .ReadUShort ();return nil ;};func (_fgg *TtfType )MakeToUnicode ()*_fc .CMap {_gdc :=make (map[_fc .CharCode ]rune );
if len (_fgg .GlyphNames )==0{return _fc .NewToUnicodeCMap (_gdc );};for _fgcd ,_ffc :=range _fgg .Chars {_gdb :=_fc .CharCode (_fgcd );_cgc :=_fgg .GlyphNames [_ffc ];_ccd ,_ffcd :=_cf .GlyphToRune (_cgc );if !_ffcd {_fb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fgcd ,_cgc );
_ccd =_cf .MissingCodeRune ;};_gdc [_gdb ]=_ccd ;};return _fc .NewToUnicodeCMap (_gdc );};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;
UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func TtfParse (r _cb .ReadSeeker )(TtfType ,error ){_cgcd :=&ttfParser {_ffcdc :r };return _cgcd .Parse ();};var _deeg *RuneCharSafeMap ;
func _eeg (_cce map[string ]uint32 )string {var _edfg []string ;for _bcd :=range _cce {_edfg =append (_edfg ,_bcd );};_f .Slice (_edfg ,func (_ebbf ,_cff int )bool {return _cce [_edfg [_ebbf ]]< _cce [_edfg [_cff ]]});_fff :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cce ))};
for _ ,_eag :=range _edfg {_fff =append (_fff ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_eag ,_cce [_eag ]));};return _ce .Join (_fff ,"\u000a");};var _gacf *RuneCharSafeMap ;func (_adee *ttfParser )ParseHmtx ()error {if _gbd :=_adee .Seek ("\u0068\u006d\u0074\u0078");
_gbd !=nil {return _gbd ;};_adee ._fefe .Widths =make ([]uint16 ,0,8);for _dgg :=uint16 (0);_dgg < _adee ._ebb ;_dgg ++{_adee ._fefe .Widths =append (_adee ._fefe .Widths ,_adee .ReadUShort ());_adee .Skip (2);};if _adee ._ebb < _adee ._ffcb &&_adee ._ebb > 0{_fec :=_adee ._fefe .Widths [_adee ._ebb -1];
for _dfeb :=_adee ._ebb ;_dfeb < _adee ._ffcb ;_dfeb ++{_adee ._fefe .Widths =append (_adee ._fefe .Widths ,_fec );};};return nil ;};var _bed =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func TtfParseFile (fileStr string )(TtfType ,error ){_gad ,_dbae :=_cd .Open (fileStr );if _dbae !=nil {return TtfType {},_dbae ;};defer _gad .Close ();return TtfParse (_gad );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cfe :make (map[rune ]CharMetrics ,length )};
};var _fbc =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _cfda *RuneCharSafeMap ;func (_fgfg *ttfParser )Read32Fixed ()float64 {_cfaa :=float64 (_fgfg .ReadShort ());_dfgg :=float64 (_fgfg .ReadUShort ())/65536.0;return _cfaa +_dfgg ;};func (_bcdc *ttfParser )ReadUShort ()(_cab uint16 ){_e .Read (_bcdc ._ffcdc ,_e .BigEndian ,&_cab );
return _cab ;};func (_ddca StdFont )Encoder ()_cf .TextEncoder {return _ddca ._gfd };func (_bc *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_bc ._af .Lock ();defer _bc ._af .Unlock ();_bc ._cfe [b ]=r ;};func (_edgc *ttfParser )Seek (tag string )error {_efd ,_eaca :=_edgc ._ggb [tag ];
if !_eaca {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_edgc ._ffcdc .Seek (int64 (_efd ),_cb .SeekStart );return nil ;};func (_ccab *ttfParser )ParsePost ()error {if _fggd :=_ccab .Seek ("\u0070\u006f\u0073\u0074");
_fggd !=nil {return _fggd ;};_aedb :=_ccab .Read32Fixed ();_ccab ._fefe .ItalicAngle =_ccab .Read32Fixed ();_ccab ._fefe .UnderlinePosition =_ccab .ReadShort ();_ccab ._fefe .UnderlineThickness =_ccab .ReadShort ();_ccab ._fefe .IsFixedPitch =_ccab .ReadULong ()!=0;
_ccab .ReadULong ();_ccab .ReadULong ();_ccab .ReadULong ();_ccab .ReadULong ();_fb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_aedb );switch _aedb {case 1.0:_ccab ._fefe .GlyphNames =_fbc ;
case 2.0:_gcc :=int (_ccab .ReadUShort ());_fecc :=make ([]int ,_gcc );_ccab ._fefe .GlyphNames =make ([]GlyphName ,_gcc );_edgb :=-1;for _bega :=0;_bega < _gcc ;_bega ++{_ece :=int (_ccab .ReadUShort ());_fecc [_bega ]=_ece ;if _ece <=0x7fff&&_ece > _edgb {_edgb =_ece ;
};};var _fefea []GlyphName ;if _edgb >=len (_fbc ){_fefea =make ([]GlyphName ,_edgb -len (_fbc )+1);for _cgg :=0;_cgg < _edgb -len (_fbc )+1;_cgg ++{_afd :=int (_ccab .readByte ());_aeg ,_dggc :=_ccab .ReadStr (_afd );if _dggc !=nil {return _dggc ;};_fefea [_cgg ]=GlyphName (_aeg );
};};for _eebc :=0;_eebc < _gcc ;_eebc ++{_cgec :=_fecc [_eebc ];if _cgec < len (_fbc ){_ccab ._fefe .GlyphNames [_eebc ]=_fbc [_cgec ];}else if _cgec >=len (_fbc )&&_cgec <=32767{_ccab ._fefe .GlyphNames [_eebc ]=_fefea [_cgec -len (_fbc )];}else {_ccab ._fefe .GlyphNames [_eebc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_bdfg :=make ([]int ,_ccab ._ffcb );for _bce :=0;_bce < len (_bdfg );_bce ++{_cde :=int (_ccab .ReadSByte ());_bdfg [_bce ]=_bce +1+_cde ;};_ccab ._fefe .GlyphNames =make ([]GlyphName ,len (_bdfg ));for _abb :=0;_abb < len (_ccab ._fefe .GlyphNames );
_abb ++{_dcdf :=_fbc [_bdfg [_abb ]];_ccab ._fefe .GlyphNames [_abb ]=_dcdf ;};case 3.0:_fb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_fb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_aedb );};return nil ;};func _gc ()StdFont {_eef .Do (_gd );_dgc :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_dgc ,_fcf );};func _cg ()StdFont {_fgc :=_cf .NewSymbolEncoder ();_bga :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_bga ,_baf ,_fgc );};func (_bab *ttfParser )Skip (n int ){_bab ._ffcdc .Seek (int64 (n ),_cb .SeekCurrent )};var _gbg *RuneCharSafeMap ;func (_deef *ttfParser )ParseOS2 ()error {if _eac :=_deef .Seek ("\u004f\u0053\u002f\u0032");
_eac !=nil {return _eac ;};_cdafe :=_deef .ReadUShort ();_deef .Skip (4*2);_deef .Skip (11*2+10+4*4+4);_bccf :=_deef .ReadUShort ();_deef ._fefe .Bold =(_bccf &32)!=0;_deef .Skip (2*2);_deef ._fefe .TypoAscender =_deef .ReadShort ();_deef ._fefe .TypoDescender =_deef .ReadShort ();
if _cdafe >=2{_deef .Skip (3*2+2*4+2);_deef ._fefe .CapHeight =_deef .ReadShort ();}else {_deef ._fefe .CapHeight =0;};return nil ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _ Font =StdFont {};var _bee =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _dbcb =&RuneCharSafeMap {_cfe :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _gd (){_fgb =MakeRuneCharSafeMap (len (_bfg ));_gbg =MakeRuneCharSafeMap (len (_bfg ));for _fgfa ,_fac :=range _bfg {_fgb .Write (_fac ,CharMetrics {Wx :float64 (_aff [_fgfa ])});_gbg .Write (_fac ,CharMetrics {Wx :float64 (_bee [_fgfa ])});};_fcf =_fgb .Copy ();
_bbg =_gbg .Copy ();};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_dc :=_ddc .read (name );_dc {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ddc .write (name ,fnc );for _ ,_afb :=range aliases {RegisterStdFont (_afb ,fnc );};};func (_df *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_df ._af .RLock ();defer _df ._af .RUnlock ();_ced ,_dbf :=_df ._cfe [b ];return _ced ,_dbf ;};type fontMap struct{_gb .Mutex ;
_ddf map[StdFontName ]func ()StdFont ;};var _ceg _gb .Once ;func (_edg *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_edg .PostScriptName ,_edg .UnitsPerEm ,_edg .Bold ,_edg .ItalicAngle ,_edg .CapHeight ,len (_edg .Chars ),len (_edg .GlyphNames ));
};var _ddc =&fontMap {_ddf :make (map[StdFontName ]func ()StdFont )};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_bd ,_bcc :=_ddc .read (name );if !_bcc {return StdFont {},false ;};return _bd (),true ;};